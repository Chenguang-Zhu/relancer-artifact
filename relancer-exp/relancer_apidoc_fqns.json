{
  "sklearn.preprocessing.Imputer": {
    "sklearn.preprocessing.RobustScaler": "doc",
    "sklearn.preprocessing.Normalizer": "doc",
    "sklearn.preprocessing.OneHotEncoder": "doc",
    "sklearn.preprocessing.Binarizer": "doc",
    "sklearn.preprocessing.KernelCenterer": "doc",
    "sklearn.preprocessing.KBinsDiscretizer": "doc",
    "sklearn.preprocessing.add_dummy_feature": "doc",
    "sklearn.preprocessing.LabelEncoder": "doc",
    "sklearn.preprocessing.MaxAbsScaler": "doc",
    "sklearn.preprocessing.MinMaxScaler": "doc",
    "sklearn.preprocessing.robust_scale": "doc",
    "sklearn.preprocessing.PolynomialFeatures": "doc",
    "sklearn.preprocessing.quantile_transform": "doc",
    "sklearn.preprocessing.FunctionTransformer": "doc",
    "sklearn.preprocessing.QuantileTransformer": "doc",
    "sklearn.preprocessing": "doc",
    "sklearn.preprocessing.scale": "doc",
    "sklearn.preprocessing.binarize": "doc",
    "sklearn.preprocessing.normalize": "doc",
    "sklearn.preprocessing.maxabs_scale": "doc",
    "sklearn.preprocessing.minmax_scale": "doc",
    "sklearn.preprocessing.LabelBinarizer": "doc",
    "sklearn.preprocessing.OrdinalEncoder": "doc",
    "sklearn.preprocessing.StandardScaler": "doc",
    "sklearn.preprocessing.label_binarize": "doc",
    "sklearn.preprocessing.power_transform": "doc",
    "sklearn.preprocessing.PowerTransformer": "doc",
    "sklearn.preprocessing.MultiLabelBinarizer": "doc",
    "sklearn.impute": "doc",
    "sklearn.impute.KNNImputer": "doc",
    "sklearn.impute.SimpleImputer": "doc",
    "sklearn.impute.IterativeImputer": "doc",
    "sklearn.impute.MissingIndicator": "doc",
    "sklearn.cluster.SpectralCoclustering": "doc",
    "sklearn.cluster.spectral_clustering": "doc",
    "sklearn.cluster.SpectralBiclustering": "doc",
    "sklearn.cluster.SpectralClustering": "doc",
    "sklearn.metrics.cluster.contingency_matrix": "doc",
    "sklearn.cluster.AgglomerativeClustering": "doc",
    "sklearn.cluster.FeatureAgglomeration": "doc",
    "sklearn.gaussian_process.kernels.CompoundKernel": "doc",
    "sklearn.cluster.mean_shift": "doc",
    "sklearn.cluster.affinity_propagation": "doc",
    "sklearn.cluster.compute_optics_graph": "doc",
    "sklearn.semi_supervised.LabelSpreading": "doc",
    "sklearn.cluster.cluster_optics_dbscan": "doc",
    "sklearn.utils.deprecated": "doc",
    "sklearn.cluster.cluster_optics_xi": "doc",
    "sklearn.kernel_approximation.RBFSampler": "doc",
    "sklearn.gaussian_process.kernels.Matern": "doc",
    "sklearn.gaussian_process.kernels.Hyperparameter": "doc",
    "sklearn.cluster.AffinityPropagation": "doc",
    "sklearn.metrics.completeness_score": "doc",
    "sklearn.cluster": "doc",
    "sklearn.cluster.Birch": "doc",
    "sklearn.cluster.DBSCAN": "doc",
    "sklearn.cluster.KMeans": "doc",
    "sklearn.cluster.OPTICS": "doc",
    "sklearn.cluster.dbscan": "doc",
    "sklearn.cluster.k_means": "doc",
    "sklearn.cluster.MeanShift": "doc",
    "sklearn.cluster.ward_tree": "doc",
    "sklearn.cluster.MiniBatchKMeans": "doc",
    "sklearn.cluster.estimate_bandwidth": "doc",
    "sklearn.feature_selection.f_regression": "doc",
    "sklearn.metrics.v_measure_score": "doc",
    "sklearn.metrics.silhouette_score": "doc",
    "sklearn.pipeline.FeatureUnion": "doc",
    "sklearn.multiclass.OutputCodeClassifier": "doc",
    "sklearn.pipeline.make_pipeline": "doc",
    "sklearn.datasets.make_regression": "doc",
    "sklearn.metrics.max_error": "doc",
    "sklearn.exceptions.NotFittedError": "doc",
    "sklearn.metrics.pairwise.sigmoid_kernel": "doc",
    "sklearn.gaussian_process.kernels.ConstantKernel": "doc",
    "sklearn.gaussian_process.kernels.ExpSineSquared": "doc",
    "sklearn.metrics.mean_absolute_error": "doc",
    "sklearn.metrics.adjusted_rand_score": "doc",
    "sklearn.semi_supervised.LabelPropagation": "doc",
    "sklearn.compose": "doc",
    "sklearn.compose.ColumnTransformer": "doc",
    "sklearn.compose.make_column_selector": "doc",
    "sklearn.compose.make_column_transformer": "doc",
    "sklearn.compose.TransformedTargetRegressor": "doc",
    "sklearn.pipeline": "doc",
    "sklearn.pipeline.Pipeline": "doc",
    "sklearn.pipeline.make_union": "doc",
    "sklearn.decomposition.DictionaryLearning": "doc",
    "sklearn.feature_extraction.image.extract_patches_2d": "doc",
    "sklearn.metrics.get_scorer": "doc",
    "sklearn.linear_model.Perceptron": "doc",
    "sklearn.metrics.pairwise.rbf_kernel": "doc",
    "sklearn.tree.export_text": "doc",
    "sklearn.mixture.BayesianGaussianMixture": "doc",
    "sklearn.isotonic.check_increasing": "doc",
    "sklearn.linear_model.LinearRegression": "doc",
    "sklearn.linear_model.ridge_regression": "doc",
    "sklearn.utils.class_weight.compute_class_weight": "doc",
    "sklearn.metrics.median_absolute_error": "doc",
    "sklearn.metrics.pairwise.laplacian_kernel": "doc",
    "sklearn.random_projection.SparseRandomProjection": "doc",
    "sklearn.metrics.make_scorer": "doc",
    "sklearn.metrics.pairwise.chi2_kernel": "doc",
    "sklearn.gaussian_process.kernels.WhiteKernel": "doc",
    "sklearn.metrics.matthews_corrcoef": "doc",
    "sklearn.metrics.homogeneity_score": "doc",
    "sklearn.metrics.pairwise.polynomial_kernel": "doc",
    "sklearn.experimental.enable_iterative_imputer": "doc",
    "sklearn.kernel_approximation.SkewedChi2Sampler": "doc",
    "sklearn.base.is_regressor": "doc",
    "sklearn.metrics.mean_squared_error": "doc",
    "sklearn.metrics.silhouette_samples": "doc",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d": "doc",
    "sklearn.random_projection": "doc",
    "sklearn.manifold.SpectralEmbedding": "doc",
    "sklearn.utils.sparsefuncs.inplace_row_scale": "doc",
    "sklearn.random_projection.GaussianRandomProjection": "doc",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim": "doc",
    "sklearn.multioutput.RegressorChain": "doc",
    "sklearn.datasets.make_biclusters": "doc",
    "sklearn.cross_decomposition.PLSRegression": "doc",
    "sklearn.metrics.roc_auc_score": "doc",
    "sklearn.metrics.pairwise.linear_kernel": "doc",
    "sklearn.metrics.adjusted_mutual_info_score": "doc",
    "sklearn.decomposition.KernelPCA": "doc",
    "sklearn.decomposition.dict_learning": "doc",
    "sklearn.datasets.make_sparse_coded_signal": "doc",
    "sklearn.kernel_approximation.AdditiveChi2Sampler": "doc",
    "sklearn.metrics.pairwise.additive_chi2_kernel": "doc",
    "sklearn.feature_selection.SelectFpr": "doc",
    "sklearn.feature_selection.SelectFdr": "doc",
    "sklearn.metrics.homogeneity_completeness_v_measure": "doc",
    "sklearn.model_selection.permutation_test_score": "doc",
    "sklearn.tree.plot_tree": "doc",
    "sklearn.feature_extraction.image.img_to_graph": "doc",
    "sklearn.feature_extraction.image.grid_to_graph": "doc",
    "sklearn.feature_extraction.image.PatchExtractor": "doc",
    "sklearn.metrics.auc": "doc",
    "sklearn.metrics.accuracy_score": "doc",
    "sklearn.metrics.coverage_error": "doc",
    "sklearn.metrics.plot_roc_curve": "doc",
    "sklearn.gaussian_process.kernels.Sum": "doc",
    "sklearn.metrics.classification_report": "doc",
    "sklearn.gaussian_process.kernels.Kernel": "doc",
    "sklearn.metrics.pairwise.kernel_metrics": "doc",
    "sklearn.metrics.normalized_mutual_info_score": "doc",
    "sklearn.gaussian_process.kernels.Exponentiation": "doc",
    "sklearn.gaussian_process.kernels.PairwiseKernel": "doc",
    "sklearn.linear_model.LogisticRegressionCV": "doc",
    "sklearn.inspection.PartialDependenceDisplay": "doc",
    "sklearn.isotonic.IsotonicRegression": "doc",
    "sklearn.manifold.spectral_embedding": "doc",
    "sklearn.exceptions.ConvergenceWarning": "doc",
    "sklearn.linear_model.LogisticRegression": "doc",
    "sklearn.metrics.mean_squared_log_error": "doc",
    "sklearn.metrics.consensus_score": "doc",
    "sklearn.metrics.RocCurveDisplay": "doc",
    "sklearn.mixture": "doc",
    "sklearn.base.BiclusterMixin": "doc",
    "sklearn.mixture.GaussianMixture": "doc",
    "sklearn.metrics.pairwise.nan_euclidean_distances": "doc",
    "sklearn.feature_selection.SelectPercentile": "doc",
    "sklearn.metrics.f1_score": "doc",
    "sklearn.metrics.r2_score": "doc",
    "sklearn.metrics.confusion_matrix": "doc",
    "sklearn.exceptions.FitFailedWarning": "doc",
    "sklearn.gaussian_process.kernels.RBF": "doc",
    "sklearn.gaussian_process.kernels.Product": "doc",
    "sklearn.metrics.explained_variance_score": "doc",
    "sklearn.metrics.pairwise.cosine_distances": "doc",
    "sklearn.metrics.pairwise.distance_metrics": "doc",
    "sklearn.metrics.pairwise.pairwise_kernels": "doc",
    "sklearn.metrics.pairwise.paired_distances": "doc",
    "sklearn.gaussian_process.kernels.DotProduct": "doc",
    "sklearn.gaussian_process.kernels.RationalQuadratic": "doc",
    "sklearn.inspection": "doc",
    "sklearn.tree.export_graphviz": "doc",
    "sklearn.inspection.partial_dependence": "doc",
    "sklearn.model_selection.RepeatedKFold": "doc",
    "sklearn.model_selection.ParameterGrid": "doc",
    "sklearn.inspection.permutation_importance": "doc",
    "sklearn.decomposition.dict_learning_online": "doc",
    "sklearn.inspection.plot_partial_dependence": "doc",
    "sklearn.decomposition.LatentDirichletAllocation": "doc",
    "sklearn.base.RegressorMixin": "doc",
    "sklearn.utils._safe_indexing": "doc",
    "sklearn.multioutput.MultiOutputClassifier": "doc",
    "sklearn.utils.class_weight.compute_sample_weight": "doc",
    "sklearn.metrics.pairwise_distances_argmin": "doc",
    "sklearn.exceptions.DataDimensionalityWarning": "doc",
    "sklearn.metrics.cohen_kappa_score": "doc",
    "sklearn.metrics.mutual_info_score": "doc",
    "sklearn.exceptions.EfficiencyWarning": "doc",
    "sklearn.exceptions.NonBLASDotWarning": "doc",
    "sklearn.metrics.pairwise.cosine_similarity": "doc",
    "sklearn.kernel_approximation.Nystroem": "doc",
    "sklearn.utils.random.sample_without_replacement": "doc",
    "sklearn.metrics.pairwise.paired_euclidean_distances": "doc",
    "sklearn.metrics.pairwise.paired_manhattan_distances": "doc",
    "sklearn.utils.graph_shortest_path.graph_shortest_path": "doc",
    "sklearn.semi_supervised": "doc",
    "sklearn.metrics.dcg_score": "doc",
    "sklearn.metrics.roc_curve": "doc",
    "sklearn.neighbors.KernelDensity": "doc",
    "sklearn.metrics.pairwise_distances": "doc",
    "sklearn.metrics.multilabel_confusion_matrix": "doc",
    "sklearn.metrics.plot_precision_recall_curve": "doc",
    "sklearn.feature_selection.SelectKBest": "doc",
    "sklearn.gaussian_process.GaussianProcessRegressor": "doc",
    "sklearn.decomposition.MiniBatchDictionaryLearning": "doc",
    "sklearn.metrics.mean_gamma_deviance": "doc",
    "sklearn.metrics.pairwise.euclidean_distances": "doc",
    "sklearn.metrics.pairwise.haversine_distances": "doc",
    "sklearn.metrics.pairwise.manhattan_distances": "doc",
    "sklearn.metrics.pairwise_distances_argmin_min": "doc",
    "sklearn.ensemble.RandomForestClassifier": "doc",
    "sklearn.experimental.enable_hist_gradient_boosting": "doc",
    "sklearn.exceptions": "doc",
    "sklearn.metrics.ndcg_score": "doc",
    "sklearn.metrics.davies_bouldin_score": "doc",
    "sklearn.exceptions.DataConversionWarning": "doc",
    "sklearn.exceptions.ChangedBehaviorWarning": "doc",
    "sklearn.exceptions.UndefinedMetricWarning": "doc",
    "sklearn.tree.ExtraTreeClassifier": "doc",
    "sklearn.gaussian_process.GaussianProcessClassifier": "doc",
    "sklearn.base.ClusterMixin": "doc",
    "sklearn.naive_bayes.ComplementNB": "doc",
    "sklearn.multioutput.MultiOutputRegressor": "doc",
    "sklearn.utils.check_consistent_length": "doc",
    "sklearn.utils.estimator_checks.parametrize_with_checks": "doc",
    "sklearn.metrics.mean_poisson_deviance": "doc",
    "sklearn.metrics.mean_tweedie_deviance": "doc",
    "sklearn.metrics.fowlkes_mallows_score": "doc",
    "sklearn.metrics.plot_confusion_matrix": "doc",
    "sklearn.kernel_approximation": "doc",
    "sklearn.dummy.DummyClassifier": "doc",
    "sklearn.metrics.precision_score": "doc",
    "sklearn.ensemble.RandomTreesEmbedding": "doc",
    "sklearn.covariance.empirical_covariance": "doc",
    "sklearn.metrics.fbeta_score": "doc",
    "sklearn.metrics.precision_recall_curve": "doc",
    "sklearn.metrics.ConfusionMatrixDisplay": "doc",
    "sklearn.experimental": "doc",
    "sklearn.linear_model.SGDRegressor": "doc",
    "sklearn.neural_network.MLPRegressor": "doc",
    "sklearn.feature_extraction.FeatureHasher": "doc",
    "sklearn.metrics.average_precision_score": "doc",
    "sklearn.metrics.balanced_accuracy_score": "doc",
    "sklearn.metrics.pairwise.paired_cosine_distances": "doc",
    "sklearn.base.TransformerMixin": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2": "doc",
    "sklearn.metrics.hamming_loss": "doc",
    "sklearn.metrics.recall_score": "doc",
    "sklearn.kernel_ridge.KernelRidge": "doc",
    "sklearn.linear_model.ARDRegression": "doc",
    "sklearn.feature_selection.SelectorMixin": "doc",
    "sklearn.utils.validation.has_fit_parameter": "doc",
    "sklearn.multiclass.OneVsOneClassifier": "doc",
    "sklearn.ensemble.AdaBoostClassifier": "doc",
    "sklearn.model_selection.ParameterSampler": "doc",
    "sklearn.decomposition": "doc",
    "sklearn.decomposition.NMF": "doc",
    "sklearn.decomposition.PCA": "doc",
    "sklearn.decomposition.FastICA": "doc",
    "sklearn.decomposition.fastica": "doc",
    "sklearn.metrics.check_scoring": "doc",
    "sklearn.metrics.jaccard_score": "doc",
    "sklearn.metrics.zero_one_loss": "doc",
    "sklearn.decomposition.SparsePCA": "doc",
    "sklearn.decomposition.SparseCoder": "doc",
    "sklearn.decomposition.TruncatedSVD": "doc",
    "sklearn.decomposition.sparse_encode": "doc",
    "sklearn.decomposition.FactorAnalysis": "doc",
    "sklearn.decomposition.IncrementalPCA": "doc",
    "sklearn.utils.multiclass.is_multilabel": "doc",
    "sklearn.decomposition.MiniBatchSparsePCA": "doc",
    "sklearn.metrics.pairwise_distances_chunked": "doc",
    "sklearn.decomposition.non_negative_factorization": "doc",
    "sklearn.ensemble.RandomForestRegressor": "doc",
    "sklearn.feature_extraction.DictVectorizer": "doc",
    "sklearn.utils.graph.single_source_shortest_path_length": "doc",
    "sklearn.model_selection.GroupShuffleSplit": "doc",
    "sklearn.neighbors.LocalOutlierFactor": "doc",
    "sklearn.gaussian_process": "doc",
    "sklearn.covariance.GraphicalLassoCV": "doc",
    "sklearn.model_selection.train_test_split": "doc",
    "sklearn.datasets.make_sparse_uncorrelated": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_row": "doc",
    "sklearn.model_selection.RepeatedStratifiedKFold": "doc",
    "sklearn.tree": "doc",
    "sklearn.utils.extmath.density": "doc",
    "sklearn.tree.ExtraTreeRegressor": "doc",
    "sklearn.tree.DecisionTreeRegressor": "doc",
    "sklearn.tree.DecisionTreeClassifier": "doc",
    "sklearn.metrics.precision_recall_fscore_support": "doc",
    "sklearn.feature_selection.mutual_info_regression": "doc",
    "sklearn.metrics.brier_score_loss": "doc",
    "sklearn.feature_selection.SelectFromModel": "doc",
    "sklearn.cross_decomposition": "doc",
    "sklearn.cross_decomposition.CCA": "doc",
    "sklearn.cross_decomposition.PLSSVD": "doc",
    "sklearn.isotonic.isotonic_regression": "doc",
    "sklearn.covariance.EmpiricalCovariance": "doc",
    "sklearn.multiclass.OneVsRestClassifier": "doc",
    "sklearn.cross_decomposition.PLSCanonical": "doc",
    "sklearn.dummy.DummyRegressor": "doc",
    "sklearn.linear_model.GammaRegressor": "doc",
    "sklearn.linear_model.lars_path_gram": "doc",
    "sklearn.utils.multiclass.type_of_target": "doc",
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.model_selection.RandomizedSearchCV": "doc",
    "sklearn.feature_extraction.text.CountVectorizer": "doc",
    "sklearn.feature_extraction.text.TfidfVectorizer": "doc",
    "sklearn.utils.check_random_state": "doc",
    "sklearn.utils.estimator_html_repr": "doc",
    "sklearn.manifold.LocallyLinearEmbedding": "doc",
    "sklearn.calibration.CalibratedClassifierCV": "doc",
    "sklearn.metrics.label_ranking_loss": "doc",
    "sklearn.metrics.label_ranking_average_precision_score": "doc",
    "sklearn.neighbors.KNeighborsClassifier": "doc",
    "sklearn.utils.extmath.randomized_range_finder": "doc",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis": "doc",
    "sklearn.ensemble.GradientBoostingRegressor": "doc",
    "sklearn.linear_model.HuberRegressor": "doc",
    "sklearn.datasets.load_wine": "doc",
    "sklearn.linear_model.ElasticNet": "doc",
    "sklearn.ensemble.IsolationForest": "doc",
    "sklearn.neighbors.NearestCentroid": "doc",
    "sklearn.metrics.PrecisionRecallDisplay": "doc",
    "sklearn.feature_selection": "doc",
    "sklearn.feature_selection.RFE": "doc",
    "sklearn.feature_selection.chi2": "doc",
    "sklearn.feature_selection.RFECV": "doc",
    "sklearn.ensemble.AdaBoostRegressor": "doc",
    "sklearn.feature_selection.SelectFwe": "doc",
    "sklearn.feature_selection.f_classif": "doc",
    "sklearn.covariance.shrunk_covariance": "doc",
    "sklearn.feature_selection.VarianceThreshold": "doc",
    "sklearn.feature_selection.mutual_info_classif": "doc",
    "sklearn.feature_selection.GenericUnivariateSelect": "doc",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale": "doc",
    "sklearn.metrics.calinski_harabasz_score": "doc",
    "sklearn.ensemble.ExtraTreesClassifier": "doc",
    "sklearn.datasets.fetch_species_distributions": "doc",
    "sklearn.ensemble.GradientBoostingClassifier": "doc",
    "sklearn.feature_extraction.text.HashingVectorizer": "doc",
    "sklearn.utils.gen_even_slices": "doc",
    "sklearn.utils.register_parallel_backend": "doc",
    "sklearn.utils.estimator_checks.check_estimator": "doc",
    "sklearn.utils.sparsefuncs.inplace_column_scale": "doc",
    "sklearn.neighbors.NearestNeighbors": "doc",
    "sklearn.datasets.make_friedman1": "doc",
    "sklearn.datasets.make_friedman2": "doc",
    "sklearn.datasets.make_friedman3": "doc",
    "sklearn.multioutput": "doc",
    "sklearn.multioutput.ClassifierChain": "doc",
    "sklearn.feature_extraction": "doc",
    "sklearn.manifold.trustworthiness": "doc",
    "sklearn.datasets.load_breast_cancer": "doc",
    "sklearn.linear_model.RidgeClassifier": "doc",
    "sklearn.model_selection.StratifiedKFold": "doc",
    "sklearn.model_selection.TimeSeriesSplit": "doc",
    "sklearn.datasets.fetch_california_housing": "doc",
    "sklearn.manifold.locally_linear_embedding": "doc",
    "sklearn.feature_extraction.text.TfidfTransformer": "doc",
    "sklearn.utils.parallel_backend": "doc",
    "sklearn.model_selection.LeaveOneGroupOut": "doc",
    "sklearn.model_selection.validation_curve": "doc",
    "sklearn.naive_bayes.BernoulliNB": "doc",
    "sklearn.neighbors.KNeighborsRegressor": "doc",
    "sklearn.linear_model.ElasticNetCV": "doc",
    "sklearn.datasets.dump_svmlight_file": "doc",
    "sklearn.datasets.load_sample_images": "doc",
    "sklearn.utils.validation.check_memory": "doc",
    "sklearn.utils.validation.column_or_1d": "doc",
    "sklearn.neighbors.RadiusNeighborsClassifier": "doc",
    "sklearn.utils.assert_all_finite": "doc",
    "sklearn.datasets.make_sparse_spd_matrix": "doc",
    "sklearn.ensemble.ExtraTreesRegressor": "doc",
    "sklearn.kernel_ridge": "doc",
    "sklearn.linear_model.PassiveAggressiveRegressor": "doc",
    "sklearn.ensemble.VotingClassifier": "doc",
    "sklearn.covariance.ShrunkCovariance": "doc",
    "sklearn.linear_model.PoissonRegressor": "doc",
    "sklearn.linear_model.TweedieRegressor": "doc",
    "sklearn.datasets.load_svmlight_files": "doc",
    "sklearn.ensemble.HistGradientBoostingRegressor": "doc",
    "sklearn.utils.sparsefuncs.mean_variance_axis": "doc",
    "sklearn.metrics": "doc",
    "sklearn.metrics.log_loss": "doc",
    "sklearn.base.BaseEstimator": "doc",
    "sklearn.base.is_classifier": "doc",
    "sklearn.metrics.hinge_loss": "doc",
    "sklearn.datasets.load_diabetes": "doc",
    "sklearn.datasets.load_linnerud": "doc",
    "sklearn.linear_model.SGDClassifier": "doc",
    "sklearn.utils.extmath.weighted_mode": "doc",
    "sklearn.neural_network.MLPClassifier": "doc",
    "sklearn.utils.multiclass.unique_labels": "doc",
    "sklearn.linear_model.PassiveAggressiveClassifier": "doc",
    "sklearn.datasets.make_gaussian_quantiles": "doc",
    "sklearn.datasets.make_checkerboard": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_column": "doc",
    "sklearn.model_selection.GroupKFold": "doc",
    "sklearn.ensemble.HistGradientBoostingClassifier": "doc",
    "sklearn.datasets.fetch_20newsgroups_vectorized": "doc",
    "sklearn.base": "doc",
    "sklearn.dummy": "doc",
    "sklearn.utils": "doc",
    "sklearn.svm.NuSVC": "doc",
    "sklearn.svm.NuSVR": "doc",
    "sklearn.base.clone": "doc",
    "sklearn.utils.Bunch": "doc",
    "sklearn.utils.extmath": "doc",
    "sklearn.utils.shuffle": "doc",
    "sklearn.neural_network": "doc",
    "sklearn.utils.resample": "doc",
    "sklearn.utils.safe_sqr": "doc",
    "sklearn.manifold.Isomap": "doc",
    "sklearn.manifold.smacof": "doc",
    "sklearn.utils.check_X_y": "doc",
    "sklearn.utils.indexable": "doc",
    "sklearn.utils.safe_mask": "doc",
    "sklearn.neighbors.KDTree": "doc",
    "sklearn.utils.multiclass": "doc",
    "sklearn.utils.validation": "doc",
    "sklearn.base.DensityMixin": "doc",
    "sklearn.utils.check_array": "doc",
    "sklearn.utils.sparsefuncs": "doc",
    "sklearn.linear_model.Ridge": "doc",
    "sklearn.utils.check_scalar": "doc",
    "sklearn.base.ClassifierMixin": "doc",
    "sklearn.utils.as_float_array": "doc",
    "sklearn.utils.murmurhash3_32": "doc",
    "sklearn.utils.all_estimators": "doc",
    "sklearn.utils.estimator_checks": "doc",
    "sklearn.neighbors.DistanceMetric": "doc",
    "sklearn.utils.arrayfuncs.min_pos": "doc",
    "sklearn.utils.extmath.fast_logdet": "doc",
    "sklearn.neural_network.BernoulliRBM": "doc",
    "sklearn.utils.extmath.randomized_svd": "doc",
    "sklearn.utils.extmath.safe_sparse_dot": "doc",
    "sklearn.utils.validation.check_is_fitted": "doc",
    "sklearn.utils.validation.check_symmetric": "doc",
    "sklearn.utils.metaestimators.if_delegate_has_method": "doc",
    "sklearn.ensemble.BaggingClassifier": "doc",
    "sklearn.linear_model.RidgeClassifierCV": "doc",
    "sklearn.linear_model.TheilSenRegressor": "doc",
    "sklearn.neighbors.RadiusNeighborsRegressor": "doc",
    "sklearn.datasets.make_multilabel_classification": "doc",
    "sklearn.model_selection.LeaveOneOut": "doc",
    "sklearn.model_selection.StratifiedShuffleSplit": "doc",
    "sklearn.neighbors.radius_neighbors_graph": "doc",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": "doc",
    "sklearn.datasets.make_spd_matrix": "doc",
    "sklearn.ensemble.VotingRegressor": "doc",
    "sklearn.linear_model.RANSACRegressor": "doc",
    "sklearn.covariance.GraphicalLasso": "doc",
    "sklearn.model_selection.ShuffleSplit": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuit": "doc",
    "sklearn.datasets.make_classification": "doc",
    "sklearn.datasets": "doc",
    "sklearn.datasets.load_iris": "doc",
    "sklearn.neighbors.BallTree": "doc",
    "sklearn.datasets.fetch_rcv1": "doc",
    "sklearn.datasets.load_files": "doc",
    "sklearn.datasets.make_blobs": "doc",
    "sklearn.datasets.make_moons": "doc",
    "sklearn.datasets.load_boston": "doc",
    "sklearn.datasets.load_digits": "doc",
    "sklearn.datasets.fetch_openml": "doc",
    "sklearn.datasets.make_circles": "doc",
    "sklearn.datasets.make_s_curve": "doc",
    "sklearn.datasets.fetch_covtype": "doc",
    "sklearn.datasets.get_data_home": "doc",
    "sklearn.datasets.fetch_kddcup99": "doc",
    "sklearn.datasets.clear_data_home": "doc",
    "sklearn.datasets.fetch_lfw_pairs": "doc",
    "sklearn.datasets.make_swiss_roll": "doc",
    "sklearn.datasets.fetch_lfw_people": "doc",
    "sklearn.datasets.make_hastie_10_2": "doc",
    "sklearn.ensemble.BaggingRegressor": "doc",
    "sklearn.datasets.load_sample_image": "doc",
    "sklearn.covariance.EllipticEnvelope": "doc",
    "sklearn.datasets.fetch_20newsgroups": "doc",
    "sklearn.datasets.load_svmlight_file": "doc",
    "sklearn.datasets.fetch_olivetti_faces": "doc",
    "sklearn.datasets.make_low_rank_matrix": "doc",
    "sklearn.ensemble.StackingClassifier": "doc",
    "sklearn.linear_model.orthogonal_mp_gram": "doc",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis": "doc",
    "sklearn.ensemble.StackingRegressor": "doc",
    "sklearn.calibration.calibration_curve": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.learning_curve": "doc",
    "sklearn.neighbors.RadiusNeighborsTransformer": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuitCV": "doc",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": "doc",
    "sklearn.model_selection": "doc",
    "sklearn.model_selection.KFold": "doc",
    "sklearn.model_selection.check_cv": "doc",
    "sklearn.model_selection.LeavePOut": "doc",
    "sklearn.covariance.graphical_lasso": "doc",
    "sklearn.model_selection.LeavePGroupsOut": "doc",
    "sklearn.model_selection.PredefinedSplit": "doc",
    "sklearn.model_selection.cross_val_score": "doc",
    "sklearn.model_selection.cross_val_predict": "doc",
    "sklearn.neighbors": "doc",
    "sklearn.covariance.MinCovDet": "doc",
    "sklearn.linear_model.LassoLars": "doc",
    "sklearn.linear_model.enet_path": "doc",
    "sklearn.linear_model.lars_path": "doc",
    "sklearn.neighbors.kneighbors_graph": "doc",
    "sklearn.neighbors.KNeighborsTransformer": "doc",
    "sklearn.linear_model.MultiTaskElasticNet": "doc",
    "sklearn.multiclass": "doc",
    "sklearn.covariance.LedoitWolf": "doc",
    "sklearn.linear_model.lasso_path": "doc",
    "sklearn.discriminant_analysis": "doc",
    "sklearn.linear_model.MultiTaskElasticNetCV": "doc",
    "sklearn.calibration": "doc",
    "sklearn.naive_bayes": "doc",
    "sklearn.covariance.ledoit_wolf": "doc",
    "sklearn.naive_bayes.GaussianNB": "doc",
    "sklearn.linear_model.LassoLarsCV": "doc",
    "sklearn.linear_model.LassoLarsIC": "doc",
    "sklearn.naive_bayes.CategoricalNB": "doc",
    "sklearn.naive_bayes.MultinomialNB": "doc",
    "sklearn.linear_model": "doc",
    "sklearn.linear_model.Lars": "doc",
    "sklearn.linear_model.Lasso": "doc",
    "sklearn.linear_model.LarsCV": "doc",
    "sklearn.linear_model.RidgeCV": "doc",
    "sklearn.linear_model.LassoCV": "doc",
    "sklearn.linear_model.BayesianRidge": "doc",
    "sklearn.linear_model.orthogonal_mp": "doc",
    "sklearn.linear_model.MultiTaskLasso": "doc",
    "sklearn.linear_model.MultiTaskLassoCV": "doc",
    "sklearn.svm.OneClassSVM": "doc",
    "sklearn.svm": "doc",
    "sklearn.svm.SVC": "doc",
    "sklearn.svm.SVR": "doc",
    "sklearn.ensemble": "doc",
    "sklearn.isotonic": "doc",
    "sklearn.manifold": "doc",
    "sklearn.covariance": "doc",
    "sklearn.manifold.MDS": "doc",
    "sklearn.svm.l1_min_c": "doc",
    "sklearn.manifold.TSNE": "doc",
    "sklearn.svm.LinearSVC": "doc",
    "sklearn.svm.LinearSVR": "doc",
    "sklearn.covariance.OAS": "doc",
    "sklearn.covariance.oas": "doc"
  },
  "sklearn.cross_validation": {
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.utils.validation.check_is_fitted": "doc",
    "sklearn.utils.validation.check_memory": "doc",
    "sklearn.utils.validation.check_symmetric": "doc",
    "sklearn.utils.validation.column_or_1d": "doc",
    "sklearn.utils.validation": "doc",
    "sklearn.utils.validation.has_fit_parameter": "doc",
    "sklearn.model_selection.cross_val_predict": "doc",
    "sklearn.model_selection.cross_val_score": "doc",
    "sklearn.cross_decomposition": "doc",
    "sklearn.cross_decomposition.CCA": "doc",
    "sklearn.cross_decomposition.PLSSVD": "doc",
    "sklearn.cross_decomposition.PLSCanonical": "doc",
    "sklearn.cross_decomposition.PLSRegression": "doc",
    "sklearn.calibration": "doc",
    "sklearn.calibration.calibration_curve": "doc",
    "sklearn.calibration.CalibratedClassifierCV": "doc",
    "sklearn.kernel_approximation": "doc",
    "sklearn.kernel_approximation.Nystroem": "doc",
    "sklearn.kernel_approximation.RBFSampler": "doc",
    "sklearn.kernel_approximation.SkewedChi2Sampler": "doc",
    "sklearn.kernel_approximation.AdditiveChi2Sampler": "doc",
    "sklearn.covariance": "doc",
    "sklearn.covariance.OAS": "doc",
    "sklearn.covariance.oas": "doc",
    "sklearn.model_selection": "doc",
    "sklearn.covariance.MinCovDet": "doc",
    "sklearn.covariance.LedoitWolf": "doc",
    "sklearn.model_selection.KFold": "doc",
    "sklearn.covariance.ledoit_wolf": "doc",
    "sklearn.model_selection.check_cv": "doc",
    "sklearn.covariance.GraphicalLasso": "doc",
    "sklearn.model_selection.LeavePOut": "doc",
    "sklearn.covariance.graphical_lasso": "doc",
    "sklearn.model_selection.GroupKFold": "doc",
    "sklearn.covariance.EllipticEnvelope": "doc",
    "sklearn.covariance.GraphicalLassoCV": "doc",
    "sklearn.covariance.ShrunkCovariance": "doc",
    "sklearn.model_selection.LeaveOneOut": "doc",
    "sklearn.covariance.shrunk_covariance": "doc",
    "sklearn.model_selection.ShuffleSplit": "doc",
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.model_selection.RepeatedKFold": "doc",
    "sklearn.model_selection.ParameterGrid": "doc",
    "sklearn.covariance.EmpiricalCovariance": "doc",
    "sklearn.model_selection.learning_curve": "doc",
    "sklearn.covariance.empirical_covariance": "doc",
    "sklearn.model_selection.LeavePGroupsOut": "doc",
    "sklearn.model_selection.PredefinedSplit": "doc",
    "sklearn.model_selection.StratifiedKFold": "doc",
    "sklearn.model_selection.TimeSeriesSplit": "doc",
    "sklearn.model_selection.LeaveOneGroupOut": "doc",
    "sklearn.model_selection.train_test_split": "doc",
    "sklearn.model_selection.ParameterSampler": "doc",
    "sklearn.model_selection.validation_curve": "doc",
    "sklearn.model_selection.GroupShuffleSplit": "doc",
    "sklearn.model_selection.RandomizedSearchCV": "doc",
    "sklearn.model_selection.StratifiedShuffleSplit": "doc",
    "sklearn.model_selection.permutation_test_score": "doc",
    "sklearn.utils.estimator_checks.check_estimator": "doc",
    "sklearn.gaussian_process.kernels.Exponentiation": "doc",
    "sklearn.model_selection.RepeatedStratifiedKFold": "doc",
    "sklearn.utils.class_weight.compute_class_weight": "doc",
    "sklearn.utils.class_weight.compute_sample_weight": "doc",
    "sklearn.datasets.make_classification": "doc",
    "sklearn.metrics.pairwise.cosine_similarity": "doc",
    "sklearn.datasets.dump_svmlight_file": "doc",
    "sklearn.datasets.load_svmlight_file": "doc",
    "sklearn.metrics.classification_report": "doc",
    "sklearn.datasets.fetch_species_distributions": "doc",
    "sklearn.datasets.load_svmlight_files": "doc",
    "sklearn.inspection": "doc",
    "sklearn.decomposition": "doc",
    "sklearn.decomposition.NMF": "doc",
    "sklearn.decomposition.PCA": "doc",
    "sklearn.base.BaseEstimator": "doc",
    "sklearn.datasets.load_boston": "doc",
    "sklearn.decomposition.FastICA": "doc",
    "sklearn.decomposition.fastica": "doc",
    "sklearn.decomposition.KernelPCA": "doc",
    "sklearn.decomposition.SparsePCA": "doc",
    "sklearn.decomposition.SparseCoder": "doc",
    "sklearn.decomposition.TruncatedSVD": "doc",
    "sklearn.decomposition.dict_learning": "doc",
    "sklearn.decomposition.sparse_encode": "doc",
    "sklearn.decomposition.FactorAnalysis": "doc",
    "sklearn.decomposition.IncrementalPCA": "doc",
    "sklearn.inspection.partial_dependence": "doc",
    "sklearn.decomposition.DictionaryLearning": "doc",
    "sklearn.decomposition.MiniBatchSparsePCA": "doc",
    "sklearn.semi_supervised.LabelPropagation": "doc",
    "sklearn.inspection.permutation_importance": "doc",
    "sklearn.decomposition.dict_learning_online": "doc",
    "sklearn.inspection.plot_partial_dependence": "doc",
    "sklearn.inspection.PartialDependenceDisplay": "doc",
    "sklearn.decomposition.LatentDirichletAllocation": "doc",
    "sklearn.decomposition.non_negative_factorization": "doc",
    "sklearn.decomposition.MiniBatchDictionaryLearning": "doc",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis": "doc",
    "sklearn.cluster.FeatureAgglomeration": "doc",
    "sklearn.cluster.affinity_propagation": "doc",
    "sklearn.feature_selection": "doc",
    "sklearn.random_projection": "doc",
    "sklearn.feature_selection.RFE": "doc",
    "sklearn.feature_selection.chi2": "doc",
    "sklearn.feature_selection.RFECV": "doc",
    "sklearn.feature_selection.SelectFpr": "doc",
    "sklearn.feature_selection.SelectFdr": "doc",
    "sklearn.feature_selection.SelectFwe": "doc",
    "sklearn.feature_selection.f_classif": "doc",
    "sklearn.feature_selection.SelectKBest": "doc",
    "sklearn.feature_selection.f_regression": "doc",
    "sklearn.feature_selection.SelectorMixin": "doc",
    "sklearn.feature_selection.SelectFromModel": "doc",
    "sklearn.feature_selection.SelectPercentile": "doc",
    "sklearn.feature_selection.VarianceThreshold": "doc",
    "sklearn.feature_selection.mutual_info_classif": "doc",
    "sklearn.feature_selection.mutual_info_regression": "doc",
    "sklearn.random_projection.SparseRandomProjection": "doc",
    "sklearn.feature_selection.GenericUnivariateSelect": "doc",
    "sklearn.random_projection.GaussianRandomProjection": "doc",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim": "doc",
    "sklearn.datasets.fetch_california_housing": "doc",
    "sklearn.cluster.cluster_optics_dbscan": "doc",
    "sklearn.feature_extraction": "doc",
    "sklearn.feature_extraction.FeatureHasher": "doc",
    "sklearn.feature_extraction.DictVectorizer": "doc",
    "sklearn.feature_extraction.image.img_to_graph": "doc",
    "sklearn.feature_extraction.image.grid_to_graph": "doc",
    "sklearn.feature_extraction.image.PatchExtractor": "doc",
    "sklearn.feature_extraction.text.CountVectorizer": "doc",
    "sklearn.feature_extraction.text.TfidfVectorizer": "doc",
    "sklearn.feature_extraction.text.TfidfTransformer": "doc",
    "sklearn.feature_extraction.text.HashingVectorizer": "doc",
    "sklearn.feature_extraction.image.extract_patches_2d": "doc",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d": "doc",
    "sklearn.metrics.pairwise.paired_euclidean_distances": "doc",
    "sklearn.datasets.make_multilabel_classification": "doc",
    "sklearn.cluster.AffinityPropagation": "doc",
    "sklearn.isotonic.isotonic_regression": "doc",
    "sklearn.metrics.calinski_harabasz_score": "doc",
    "sklearn.svm": "doc",
    "sklearn.base": "doc",
    "sklearn.tree": "doc",
    "sklearn.dummy": "doc",
    "sklearn.utils": "doc",
    "sklearn.impute": "doc",
    "sklearn.cluster": "doc",
    "sklearn.compose": "doc",
    "sklearn.metrics": "doc",
    "sklearn.mixture": "doc",
    "sklearn.svm.SVC": "doc",
    "sklearn.svm.SVR": "doc",
    "sklearn.datasets": "doc",
    "sklearn.ensemble": "doc",
    "sklearn.isotonic": "doc",
    "sklearn.manifold": "doc",
    "sklearn.pipeline": "doc",
    "sklearn.neighbors": "doc",
    "sklearn.svm.NuSVC": "doc",
    "sklearn.svm.NuSVR": "doc",
    "sklearn.base.clone": "doc",
    "sklearn.exceptions": "doc",
    "sklearn.multiclass": "doc",
    "sklearn.metrics.auc": "doc",
    "sklearn.multioutput": "doc",
    "sklearn.naive_bayes": "doc",
    "sklearn.utils.Bunch": "doc",
    "sklearn.experimental": "doc",
    "sklearn.kernel_ridge": "doc",
    "sklearn.linear_model": "doc",
    "sklearn.manifold.MDS": "doc",
    "sklearn.svm.l1_min_c": "doc",
    "sklearn.cluster.Birch": "doc",
    "sklearn.manifold.TSNE": "doc",
    "sklearn.preprocessing": "doc",
    "sklearn.svm.LinearSVC": "doc",
    "sklearn.svm.LinearSVR": "doc",
    "sklearn.utils.extmath": "doc",
    "sklearn.utils.shuffle": "doc",
    "sklearn.cluster.DBSCAN": "doc",
    "sklearn.cluster.KMeans": "doc",
    "sklearn.cluster.OPTICS": "doc",
    "sklearn.cluster.dbscan": "doc",
    "sklearn.neural_network": "doc",
    "sklearn.tree.plot_tree": "doc",
    "sklearn.utils.resample": "doc",
    "sklearn.utils.safe_sqr": "doc",
    "sklearn.cluster.k_means": "doc",
    "sklearn.manifold.Isomap": "doc",
    "sklearn.manifold.smacof": "doc",
    "sklearn.semi_supervised": "doc",
    "sklearn.svm.OneClassSVM": "doc",
    "sklearn.utils.check_X_y": "doc",
    "sklearn.utils.indexable": "doc",
    "sklearn.utils.safe_mask": "doc",
    "sklearn.gaussian_process": "doc",
    "sklearn.metrics.f1_score": "doc",
    "sklearn.metrics.log_loss": "doc",
    "sklearn.metrics.r2_score": "doc",
    "sklearn.neighbors.KDTree": "doc",
    "sklearn.tree.export_text": "doc",
    "sklearn.utils.deprecated": "doc",
    "sklearn.utils.multiclass": "doc",
    "sklearn.base.ClusterMixin": "doc",
    "sklearn.base.DensityMixin": "doc",
    "sklearn.base.is_regressor": "doc",
    "sklearn.cluster.MeanShift": "doc",
    "sklearn.cluster.ward_tree": "doc",
    "sklearn.impute.KNNImputer": "doc",
    "sklearn.linear_model.Lars": "doc",
    "sklearn.metrics.dcg_score": "doc",
    "sklearn.metrics.roc_curve": "doc",
    "sklearn.metrics.max_error": "doc",
    "sklearn.pipeline.Pipeline": "doc",
    "sklearn.utils.check_array": "doc",
    "sklearn.utils.sparsefuncs": "doc",
    "sklearn.base.is_classifier": "doc",
    "sklearn.cluster.mean_shift": "doc",
    "sklearn.datasets.load_iris": "doc",
    "sklearn.datasets.load_wine": "doc",
    "sklearn.linear_model.Ridge": "doc",
    "sklearn.linear_model.Lasso": "doc",
    "sklearn.metrics.get_scorer": "doc",
    "sklearn.metrics.hinge_loss": "doc",
    "sklearn.metrics.ndcg_score": "doc",
    "sklearn.neighbors.BallTree": "doc",
    "sklearn.utils.check_scalar": "doc",
    "sklearn.base.BiclusterMixin": "doc",
    "sklearn.base.RegressorMixin": "doc",
    "sklearn.datasets.fetch_rcv1": "doc",
    "sklearn.datasets.load_files": "doc",
    "sklearn.datasets.make_blobs": "doc",
    "sklearn.datasets.make_moons": "doc",
    "sklearn.linear_model.LarsCV": "doc",
    "sklearn.metrics.make_scorer": "doc",
    "sklearn.metrics.fbeta_score": "doc",
    "sklearn.pipeline.make_union": "doc",
    "sklearn.preprocessing.scale": "doc",
    "sklearn.base.ClassifierMixin": "doc",
    "sklearn.datasets.load_digits": "doc",
    "sklearn.dummy.DummyRegressor": "doc",
    "sklearn.impute.SimpleImputer": "doc",
    "sklearn.linear_model.RidgeCV": "doc",
    "sklearn.linear_model.LassoCV": "doc",
    "sklearn.metrics.hamming_loss": "doc",
    "sklearn.metrics.recall_score": "doc",
    "sklearn.tree.export_graphviz": "doc",
    "sklearn.utils.as_float_array": "doc",
    "sklearn.utils.murmurhash3_32": "doc",
    "sklearn.utils._safe_indexing": "doc",
    "sklearn.utils.all_estimators": "doc",
    "sklearn.base.TransformerMixin": "doc",
    "sklearn.datasets.fetch_openml": "doc",
    "sklearn.datasets.make_circles": "doc",
    "sklearn.datasets.make_s_curve": "doc",
    "sklearn.discriminant_analysis": "doc",
    "sklearn.dummy.DummyClassifier": "doc",
    "sklearn.metrics.check_scoring": "doc",
    "sklearn.metrics.jaccard_score": "doc",
    "sklearn.metrics.roc_auc_score": "doc",
    "sklearn.metrics.zero_one_loss": "doc",
    "sklearn.pipeline.FeatureUnion": "doc",
    "sklearn.utils.extmath.density": "doc",
    "sklearn.utils.gen_even_slices": "doc",
    "sklearn.datasets.fetch_covtype": "doc",
    "sklearn.datasets.get_data_home": "doc",
    "sklearn.datasets.load_diabetes": "doc",
    "sklearn.datasets.load_linnerud": "doc",
    "sklearn.linear_model.LassoLars": "doc",
    "sklearn.linear_model.enet_path": "doc",
    "sklearn.linear_model.lars_path": "doc",
    "sklearn.metrics.accuracy_score": "doc",
    "sklearn.metrics.coverage_error": "doc",
    "sklearn.metrics.plot_roc_curve": "doc",
    "sklearn.naive_bayes.GaussianNB": "doc",
    "sklearn.pipeline.make_pipeline": "doc",
    "sklearn.preprocessing.binarize": "doc",
    "sklearn.utils.estimator_checks": "doc",
    "sklearn.utils.parallel_backend": "doc",
    "sklearn.cluster.MiniBatchKMeans": "doc",
    "sklearn.datasets.fetch_kddcup99": "doc",
    "sklearn.datasets.make_friedman1": "doc",
    "sklearn.datasets.make_friedman2": "doc",
    "sklearn.datasets.make_friedman3": "doc",
    "sklearn.impute.IterativeImputer": "doc",
    "sklearn.impute.MissingIndicator": "doc",
    "sklearn.linear_model.Perceptron": "doc",
    "sklearn.linear_model.ElasticNet": "doc",
    "sklearn.linear_model.lasso_path": "doc",
    "sklearn.metrics.precision_score": "doc",
    "sklearn.metrics.v_measure_score": "doc",
    "sklearn.metrics.consensus_score": "doc",
    "sklearn.metrics.RocCurveDisplay": "doc",
    "sklearn.mixture.GaussianMixture": "doc",
    "sklearn.naive_bayes.BernoulliNB": "doc",
    "sklearn.neighbors.KernelDensity": "doc",
    "sklearn.preprocessing.Binarizer": "doc",
    "sklearn.preprocessing.normalize": "doc",
    "sklearn.tree.ExtraTreeRegressor": "doc",
    "sklearn.utils.assert_all_finite": "doc",
    "sklearn.datasets.clear_data_home": "doc",
    "sklearn.datasets.fetch_lfw_pairs": "doc",
    "sklearn.datasets.make_biclusters": "doc",
    "sklearn.datasets.make_regression": "doc",
    "sklearn.datasets.make_spd_matrix": "doc",
    "sklearn.datasets.make_swiss_roll": "doc",
    "sklearn.ensemble.IsolationForest": "doc",
    "sklearn.ensemble.VotingRegressor": "doc",
    "sklearn.kernel_ridge.KernelRidge": "doc",
    "sklearn.linear_model.LassoLarsCV": "doc",
    "sklearn.linear_model.LassoLarsIC": "doc",
    "sklearn.manifold.trustworthiness": "doc",
    "sklearn.metrics.brier_score_loss": "doc",
    "sklearn.metrics.confusion_matrix": "doc",
    "sklearn.metrics.silhouette_score": "doc",
    "sklearn.naive_bayes.ComplementNB": "doc",
    "sklearn.neighbors.DistanceMetric": "doc",
    "sklearn.preprocessing.Normalizer": "doc",
    "sklearn.tree.ExtraTreeClassifier": "doc",
    "sklearn.utils.arrayfuncs.min_pos": "doc",
    "sklearn.utils.check_random_state": "doc",
    "sklearn.cluster.cluster_optics_xi": "doc",
    "sklearn.compose.ColumnTransformer": "doc",
    "sklearn.datasets.fetch_lfw_people": "doc",
    "sklearn.datasets.make_hastie_10_2": "doc",
    "sklearn.ensemble.BaggingRegressor": "doc",
    "sklearn.ensemble.VotingClassifier": "doc",
    "sklearn.exceptions.NotFittedError": "doc",
    "sklearn.isotonic.check_increasing": "doc",
    "sklearn.linear_model.SGDRegressor": "doc",
    "sklearn.linear_model.ElasticNetCV": "doc",
    "sklearn.metrics.cohen_kappa_score": "doc",
    "sklearn.metrics.matthews_corrcoef": "doc",
    "sklearn.metrics.homogeneity_score": "doc",
    "sklearn.metrics.mutual_info_score": "doc",
    "sklearn.naive_bayes.CategoricalNB": "doc",
    "sklearn.naive_bayes.MultinomialNB": "doc",
    "sklearn.neighbors.NearestCentroid": "doc",
    "sklearn.utils.estimator_html_repr": "doc",
    "sklearn.utils.extmath.fast_logdet": "doc",
    "sklearn.cluster.SpectralClustering": "doc",
    "sklearn.cluster.estimate_bandwidth": "doc",
    "sklearn.datasets.load_sample_image": "doc",
    "sklearn.datasets.make_checkerboard": "doc",
    "sklearn.ensemble.AdaBoostRegressor": "doc",
    "sklearn.ensemble.BaggingClassifier": "doc",
    "sklearn.ensemble.StackingRegressor": "doc",
    "sklearn.linear_model.SGDClassifier": "doc",
    "sklearn.linear_model.ARDRegression": "doc",
    "sklearn.linear_model.BayesianRidge": "doc",
    "sklearn.linear_model.orthogonal_mp": "doc",
    "sklearn.manifold.SpectralEmbedding": "doc",
    "sklearn.metrics.mean_squared_error": "doc",
    "sklearn.metrics.label_ranking_loss": "doc",
    "sklearn.metrics.completeness_score": "doc",
    "sklearn.metrics.silhouette_samples": "doc",
    "sklearn.metrics.pairwise_distances": "doc",
    "sklearn.multioutput.RegressorChain": "doc",
    "sklearn.neighbors.NearestNeighbors": "doc",
    "sklearn.neighbors.kneighbors_graph": "doc",
    "sklearn.preprocessing.LabelEncoder": "doc",
    "sklearn.preprocessing.MaxAbsScaler": "doc",
    "sklearn.preprocessing.MinMaxScaler": "doc",
    "sklearn.preprocessing.RobustScaler": "doc",
    "sklearn.preprocessing.maxabs_scale": "doc",
    "sklearn.preprocessing.minmax_scale": "doc",
    "sklearn.preprocessing.robust_scale": "doc",
    "sklearn.tree.DecisionTreeRegressor": "doc",
    "sklearn.cluster.spectral_clustering": "doc",
    "sklearn.datasets.fetch_20newsgroups": "doc",
    "sklearn.datasets.load_breast_cancer": "doc",
    "sklearn.datasets.load_sample_images": "doc",
    "sklearn.ensemble.AdaBoostClassifier": "doc",
    "sklearn.ensemble.StackingClassifier": "doc",
    "sklearn.exceptions.FitFailedWarning": "doc",
    "sklearn.isotonic.IsotonicRegression": "doc",
    "sklearn.linear_model.MultiTaskLasso": "doc",
    "sklearn.linear_model.HuberRegressor": "doc",
    "sklearn.linear_model.GammaRegressor": "doc",
    "sklearn.linear_model.lars_path_gram": "doc",
    "sklearn.manifold.spectral_embedding": "doc",
    "sklearn.metrics.mean_absolute_error": "doc",
    "sklearn.metrics.mean_gamma_deviance": "doc",
    "sklearn.metrics.adjusted_rand_score": "doc",
    "sklearn.metrics.pairwise.rbf_kernel": "doc",
    "sklearn.multioutput.ClassifierChain": "doc",
    "sklearn.neural_network.BernoulliRBM": "doc",
    "sklearn.neural_network.MLPRegressor": "doc",
    "sklearn.preprocessing.OneHotEncoder": "doc",
    "sklearn.tree.DecisionTreeClassifier": "doc",
    "sklearn.utils.extmath.weighted_mode": "doc",
    "sklearn.cluster.SpectralBiclustering": "doc",
    "sklearn.cluster.SpectralCoclustering": "doc",
    "sklearn.cluster.compute_optics_graph": "doc",
    "sklearn.compose.make_column_selector": "doc",
    "sklearn.ensemble.ExtraTreesRegressor": "doc",
    "sklearn.exceptions.EfficiencyWarning": "doc",
    "sklearn.exceptions.NonBLASDotWarning": "doc",
    "sklearn.gaussian_process.kernels.RBF": "doc",
    "sklearn.gaussian_process.kernels.Sum": "doc",
    "sklearn.linear_model.RidgeClassifier": "doc",
    "sklearn.linear_model.RANSACRegressor": "doc",
    "sklearn.metrics.davies_bouldin_score": "doc",
    "sklearn.metrics.pairwise.chi2_kernel": "doc",
    "sklearn.neighbors.LocalOutlierFactor": "doc",
    "sklearn.neural_network.MLPClassifier": "doc",
    "sklearn.preprocessing.KernelCenterer": "doc",
    "sklearn.preprocessing.LabelBinarizer": "doc",
    "sklearn.preprocessing.OrdinalEncoder": "doc",
    "sklearn.preprocessing.StandardScaler": "doc",
    "sklearn.preprocessing.label_binarize": "doc",
    "sklearn.utils.extmath.randomized_svd": "doc",
    "sklearn.datasets.fetch_olivetti_faces": "doc",
    "sklearn.datasets.make_low_rank_matrix": "doc",
    "sklearn.ensemble.ExtraTreesClassifier": "doc",
    "sklearn.ensemble.RandomTreesEmbedding": "doc",
    "sklearn.exceptions.ConvergenceWarning": "doc",
    "sklearn.linear_model.LinearRegression": "doc",
    "sklearn.linear_model.MultiTaskLassoCV": "doc",
    "sklearn.linear_model.PoissonRegressor": "doc",
    "sklearn.linear_model.TweedieRegressor": "doc",
    "sklearn.linear_model.ridge_regression": "doc",
    "sklearn.metrics.median_absolute_error": "doc",
    "sklearn.metrics.mean_poisson_deviance": "doc",
    "sklearn.metrics.mean_tweedie_deviance": "doc",
    "sklearn.metrics.fowlkes_mallows_score": "doc",
    "sklearn.metrics.plot_confusion_matrix": "doc",
    "sklearn.multiclass.OneVsOneClassifier": "doc",
    "sklearn.neighbors.KNeighborsRegressor": "doc",
    "sklearn.preprocessing.power_transform": "doc",
    "sklearn.utils.check_consistent_length": "doc",
    "sklearn.utils.extmath.safe_sparse_dot": "doc",
    "sklearn.ensemble.RandomForestRegressor": "doc",
    "sklearn.linear_model.RidgeClassifierCV": "doc",
    "sklearn.linear_model.TheilSenRegressor": "doc",
    "sklearn.metrics.precision_recall_curve": "doc",
    "sklearn.metrics.mean_squared_log_error": "doc",
    "sklearn.metrics.pairwise.linear_kernel": "doc",
    "sklearn.metrics.ConfusionMatrixDisplay": "doc",
    "sklearn.metrics.PrecisionRecallDisplay": "doc",
    "sklearn.multiclass.OneVsRestClassifier": "doc",
    "sklearn.neighbors.KNeighborsClassifier": "doc",
    "sklearn.preprocessing.KBinsDiscretizer": "doc",
    "sklearn.preprocessing.PowerTransformer": "doc",
    "sklearn.semi_supervised.LabelSpreading": "doc",
    "sklearn.utils.multiclass.is_multilabel": "doc",
    "sklearn.utils.multiclass.unique_labels": "doc",
    "sklearn.cluster.AgglomerativeClustering": "doc",
    "sklearn.compose.make_column_transformer": "doc",
    "sklearn.datasets.make_sparse_spd_matrix": "doc",
    "sklearn.ensemble.RandomForestClassifier": "doc",
    "sklearn.gaussian_process.kernels.Kernel": "doc",
    "sklearn.gaussian_process.kernels.Matern": "doc",
    "sklearn.linear_model.LogisticRegression": "doc",
    "sklearn.linear_model.orthogonal_mp_gram": "doc",
    "sklearn.manifold.LocallyLinearEmbedding": "doc",
    "sklearn.metrics.average_precision_score": "doc",
    "sklearn.metrics.balanced_accuracy_score": "doc",
    "sklearn.metrics.pairwise.kernel_metrics": "doc",
    "sklearn.metrics.pairwise.sigmoid_kernel": "doc",
    "sklearn.mixture.BayesianGaussianMixture": "doc",
    "sklearn.multiclass.OutputCodeClassifier": "doc",
    "sklearn.neighbors.KNeighborsTransformer": "doc",
    "sklearn.preprocessing.add_dummy_feature": "doc",
    "sklearn.utils.multiclass.type_of_target": "doc",
    "sklearn.utils.register_parallel_backend": "doc",
    "sklearn.datasets.make_gaussian_quantiles": "doc",
    "sklearn.exceptions.DataConversionWarning": "doc",
    "sklearn.gaussian_process.kernels.Product": "doc",
    "sklearn.linear_model.MultiTaskElasticNet": "doc",
    "sklearn.metrics.explained_variance_score": "doc",
    "sklearn.multioutput.MultiOutputRegressor": "doc",
    "sklearn.neighbors.radius_neighbors_graph": "doc",
    "sklearn.preprocessing.PolynomialFeatures": "doc",
    "sklearn.preprocessing.quantile_transform": "doc",
    "sklearn.datasets.make_sparse_coded_signal": "doc",
    "sklearn.datasets.make_sparse_uncorrelated": "doc",
    "sklearn.exceptions.ChangedBehaviorWarning": "doc",
    "sklearn.exceptions.UndefinedMetricWarning": "doc",
    "sklearn.linear_model.LogisticRegressionCV": "doc",
    "sklearn.manifold.locally_linear_embedding": "doc",
    "sklearn.metrics.pairwise.cosine_distances": "doc",
    "sklearn.metrics.pairwise.distance_metrics": "doc",
    "sklearn.metrics.pairwise.laplacian_kernel": "doc",
    "sklearn.metrics.pairwise.pairwise_kernels": "doc",
    "sklearn.metrics.pairwise.paired_distances": "doc",
    "sklearn.metrics.pairwise_distances_argmin": "doc",
    "sklearn.multioutput.MultiOutputClassifier": "doc",
    "sklearn.preprocessing.FunctionTransformer": "doc",
    "sklearn.preprocessing.MultiLabelBinarizer": "doc",
    "sklearn.preprocessing.QuantileTransformer": "doc",
    "sklearn.compose.TransformedTargetRegressor": "doc",
    "sklearn.ensemble.GradientBoostingRegressor": "doc",
    "sklearn.linear_model.MultiTaskElasticNetCV": "doc",
    "sklearn.metrics.adjusted_mutual_info_score": "doc",
    "sklearn.metrics.cluster.contingency_matrix": "doc",
    "sklearn.metrics.pairwise.polynomial_kernel": "doc",
    "sklearn.metrics.pairwise_distances_chunked": "doc",
    "sklearn.neighbors.RadiusNeighborsRegressor": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_row": "doc",
    "sklearn.ensemble.GradientBoostingClassifier": "doc",
    "sklearn.gaussian_process.kernels.DotProduct": "doc",
    "sklearn.metrics.multilabel_confusion_matrix": "doc",
    "sklearn.metrics.plot_precision_recall_curve": "doc",
    "sklearn.neighbors.RadiusNeighborsClassifier": "doc",
    "sklearn.utils.sparsefuncs.inplace_row_scale": "doc",
    "sklearn.exceptions.DataDimensionalityWarning": "doc",
    "sklearn.gaussian_process.kernels.WhiteKernel": "doc",
    "sklearn.metrics.normalized_mutual_info_score": "doc",
    "sklearn.metrics.pairwise.euclidean_distances": "doc",
    "sklearn.metrics.pairwise.haversine_distances": "doc",
    "sklearn.metrics.pairwise.manhattan_distances": "doc",
    "sklearn.neighbors.RadiusNeighborsTransformer": "doc",
    "sklearn.utils.sparsefuncs.mean_variance_axis": "doc",
    "sklearn.experimental.enable_iterative_imputer": "doc",
    "sklearn.metrics.pairwise.additive_chi2_kernel": "doc",
    "sklearn.metrics.pairwise_distances_argmin_min": "doc",
    "sklearn.utils.extmath.randomized_range_finder": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_column": "doc",
    "sklearn.datasets.fetch_20newsgroups_vectorized": "doc",
    "sklearn.ensemble.HistGradientBoostingRegressor": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuit": "doc",
    "sklearn.utils.sparsefuncs.inplace_column_scale": "doc",
    "sklearn.ensemble.HistGradientBoostingClassifier": "doc",
    "sklearn.gaussian_process.kernels.CompoundKernel": "doc",
    "sklearn.gaussian_process.kernels.ConstantKernel": "doc",
    "sklearn.gaussian_process.kernels.ExpSineSquared": "doc",
    "sklearn.gaussian_process.kernels.Hyperparameter": "doc",
    "sklearn.gaussian_process.kernels.PairwiseKernel": "doc",
    "sklearn.linear_model.PassiveAggressiveRegressor": "doc",
    "sklearn.metrics.precision_recall_fscore_support": "doc",
    "sklearn.utils.random.sample_without_replacement": "doc",
    "sklearn.linear_model.PassiveAggressiveClassifier": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuitCV": "doc",
    "sklearn.metrics.pairwise.nan_euclidean_distances": "doc",
    "sklearn.metrics.pairwise.paired_cosine_distances": "doc",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis": "doc",
    "sklearn.gaussian_process.GaussianProcessRegressor": "doc",
    "sklearn.experimental.enable_hist_gradient_boosting": "doc",
    "sklearn.gaussian_process.GaussianProcessClassifier": "doc",
    "sklearn.gaussian_process.kernels.RationalQuadratic": "doc",
    "sklearn.metrics.homogeneity_completeness_v_measure": "doc",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale": "doc",
    "sklearn.metrics.pairwise.paired_manhattan_distances": "doc",
    "sklearn.utils.metaestimators.if_delegate_has_method": "doc",
    "sklearn.metrics.label_ranking_average_precision_score": "doc",
    "sklearn.utils.graph_shortest_path.graph_shortest_path": "doc",
    "sklearn.utils.estimator_checks.parametrize_with_checks": "doc",
    "sklearn.utils.graph.single_source_shortest_path_length": "doc",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": "doc",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2": "doc"
  },
  "sklearn.grid_search": {
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.feature_extraction.image.grid_to_graph": "doc",
    "sklearn.metrics.pairwise.paired_distances": "doc",
    "sklearn.cluster.Birch": "doc",
    "sklearn.metrics.get_scorer": "doc",
    "sklearn.metrics.r2_score": "doc",
    "sklearn.utils.graph.single_source_shortest_path_length": "doc",
    "sklearn.metrics.pairwise.kernel_metrics": "doc",
    "sklearn.metrics.pairwise.sigmoid_kernel": "doc",
    "sklearn.metrics.pairwise_distances": "doc",
    "sklearn.model_selection.RandomizedSearchCV": "doc",
    "sklearn.metrics.pairwise.euclidean_distances": "doc",
    "sklearn.metrics.pairwise.haversine_distances": "doc",
    "sklearn.utils.graph_shortest_path.graph_shortest_path": "doc",
    "sklearn.metrics.brier_score_loss": "doc",
    "sklearn.linear_model.ridge_regression": "doc",
    "sklearn.metrics.pairwise.cosine_distances": "doc",
    "sklearn.decomposition.dict_learning": "doc",
    "sklearn.metrics.pairwise.paired_cosine_distances": "doc",
    "sklearn.covariance.empirical_covariance": "doc",
    "sklearn.covariance.shrunk_covariance": "doc",
    "sklearn.model_selection.cross_val_predict": "doc",
    "sklearn.metrics.pairwise.cosine_similarity": "doc",
    "sklearn.feature_selection.VarianceThreshold": "doc",
    "sklearn.gaussian_process.kernels.PairwiseKernel": "doc",
    "sklearn.metrics.pairwise_distances_argmin": "doc",
    "sklearn.datasets.load_breast_cancer": "doc",
    "sklearn.datasets.load_sample_images": "doc",
    "sklearn.inspection.partial_dependence": "doc",
    "sklearn.svm": "doc",
    "sklearn.base": "doc",
    "sklearn.tree": "doc",
    "sklearn.dummy": "doc",
    "sklearn.utils": "doc",
    "sklearn.impute": "doc",
    "sklearn.cluster": "doc",
    "sklearn.compose": "doc",
    "sklearn.metrics": "doc",
    "sklearn.mixture": "doc",
    "sklearn.svm.SVC": "doc",
    "sklearn.svm.SVR": "doc",
    "sklearn.datasets": "doc",
    "sklearn.ensemble": "doc",
    "sklearn.isotonic": "doc",
    "sklearn.manifold": "doc",
    "sklearn.pipeline": "doc",
    "sklearn.neighbors": "doc",
    "sklearn.svm.NuSVC": "doc",
    "sklearn.svm.NuSVR": "doc",
    "sklearn.base.clone": "doc",
    "sklearn.covariance": "doc",
    "sklearn.exceptions": "doc",
    "sklearn.inspection": "doc",
    "sklearn.multiclass": "doc",
    "sklearn.calibration": "doc",
    "sklearn.metrics.auc": "doc",
    "sklearn.multioutput": "doc",
    "sklearn.naive_bayes": "doc",
    "sklearn.utils.Bunch": "doc",
    "sklearn.experimental": "doc",
    "sklearn.kernel_ridge": "doc",
    "sklearn.linear_model": "doc",
    "sklearn.manifold.MDS": "doc",
    "sklearn.svm.l1_min_c": "doc",
    "sklearn.decomposition": "doc",
    "sklearn.manifold.TSNE": "doc",
    "sklearn.preprocessing": "doc",
    "sklearn.svm.LinearSVC": "doc",
    "sklearn.svm.LinearSVR": "doc",
    "sklearn.utils.extmath": "doc",
    "sklearn.utils.shuffle": "doc",
    "sklearn.cluster.DBSCAN": "doc",
    "sklearn.cluster.KMeans": "doc",
    "sklearn.cluster.OPTICS": "doc",
    "sklearn.cluster.dbscan": "doc",
    "sklearn.covariance.OAS": "doc",
    "sklearn.covariance.oas": "doc",
    "sklearn.neural_network": "doc",
    "sklearn.tree.plot_tree": "doc",
    "sklearn.utils.resample": "doc",
    "sklearn.utils.safe_sqr": "doc",
    "sklearn.cluster.k_means": "doc",
    "sklearn.manifold.Isomap": "doc",
    "sklearn.manifold.smacof": "doc",
    "sklearn.model_selection": "doc",
    "sklearn.semi_supervised": "doc",
    "sklearn.svm.OneClassSVM": "doc",
    "sklearn.utils.check_X_y": "doc",
    "sklearn.utils.indexable": "doc",
    "sklearn.utils.safe_mask": "doc",
    "sklearn.gaussian_process": "doc",
    "sklearn.metrics.f1_score": "doc",
    "sklearn.metrics.log_loss": "doc",
    "sklearn.neighbors.KDTree": "doc",
    "sklearn.tree.export_text": "doc",
    "sklearn.utils.deprecated": "doc",
    "sklearn.utils.multiclass": "doc",
    "sklearn.utils.validation": "doc",
    "sklearn.base.ClusterMixin": "doc",
    "sklearn.base.DensityMixin": "doc",
    "sklearn.feature_selection": "doc",
    "sklearn.base.is_regressor": "doc",
    "sklearn.cluster.MeanShift": "doc",
    "sklearn.cluster.ward_tree": "doc",
    "sklearn.decomposition.NMF": "doc",
    "sklearn.decomposition.PCA": "doc",
    "sklearn.impute.KNNImputer": "doc",
    "sklearn.linear_model.Lars": "doc",
    "sklearn.metrics.dcg_score": "doc",
    "sklearn.metrics.roc_curve": "doc",
    "sklearn.metrics.max_error": "doc",
    "sklearn.pipeline.Pipeline": "doc",
    "sklearn.random_projection": "doc",
    "sklearn.utils.check_array": "doc",
    "sklearn.utils.sparsefuncs": "doc",
    "sklearn.base.BaseEstimator": "doc",
    "sklearn.base.is_classifier": "doc",
    "sklearn.cluster.mean_shift": "doc",
    "sklearn.datasets.load_iris": "doc",
    "sklearn.datasets.load_wine": "doc",
    "sklearn.feature_extraction": "doc",
    "sklearn.linear_model.Ridge": "doc",
    "sklearn.linear_model.Lasso": "doc",
    "sklearn.metrics.hinge_loss": "doc",
    "sklearn.metrics.ndcg_score": "doc",
    "sklearn.neighbors.BallTree": "doc",
    "sklearn.utils.check_scalar": "doc",
    "sklearn.base.BiclusterMixin": "doc",
    "sklearn.base.RegressorMixin": "doc",
    "sklearn.cross_decomposition": "doc",
    "sklearn.datasets.fetch_rcv1": "doc",
    "sklearn.datasets.load_files": "doc",
    "sklearn.datasets.make_blobs": "doc",
    "sklearn.datasets.make_moons": "doc",
    "sklearn.linear_model.LarsCV": "doc",
    "sklearn.metrics.make_scorer": "doc",
    "sklearn.metrics.fbeta_score": "doc",
    "sklearn.pipeline.make_union": "doc",
    "sklearn.preprocessing.scale": "doc",
    "sklearn.base.ClassifierMixin": "doc",
    "sklearn.covariance.MinCovDet": "doc",
    "sklearn.datasets.load_boston": "doc",
    "sklearn.datasets.load_digits": "doc",
    "sklearn.dummy.DummyRegressor": "doc",
    "sklearn.impute.SimpleImputer": "doc",
    "sklearn.kernel_approximation": "doc",
    "sklearn.linear_model.RidgeCV": "doc",
    "sklearn.linear_model.LassoCV": "doc",
    "sklearn.metrics.hamming_loss": "doc",
    "sklearn.metrics.recall_score": "doc",
    "sklearn.tree.export_graphviz": "doc",
    "sklearn.utils.as_float_array": "doc",
    "sklearn.utils.murmurhash3_32": "doc",
    "sklearn.utils._safe_indexing": "doc",
    "sklearn.utils.all_estimators": "doc",
    "sklearn.base.TransformerMixin": "doc",
    "sklearn.covariance.LedoitWolf": "doc",
    "sklearn.datasets.fetch_openml": "doc",
    "sklearn.datasets.make_circles": "doc",
    "sklearn.datasets.make_s_curve": "doc",
    "sklearn.decomposition.FastICA": "doc",
    "sklearn.decomposition.fastica": "doc",
    "sklearn.discriminant_analysis": "doc",
    "sklearn.dummy.DummyClassifier": "doc",
    "sklearn.feature_selection.RFE": "doc",
    "sklearn.metrics.check_scoring": "doc",
    "sklearn.metrics.jaccard_score": "doc",
    "sklearn.metrics.roc_auc_score": "doc",
    "sklearn.metrics.zero_one_loss": "doc",
    "sklearn.model_selection.KFold": "doc",
    "sklearn.pipeline.FeatureUnion": "doc",
    "sklearn.utils.extmath.density": "doc",
    "sklearn.utils.gen_even_slices": "doc",
    "sklearn.covariance.ledoit_wolf": "doc",
    "sklearn.datasets.fetch_covtype": "doc",
    "sklearn.datasets.get_data_home": "doc",
    "sklearn.datasets.load_diabetes": "doc",
    "sklearn.datasets.load_linnerud": "doc",
    "sklearn.feature_selection.chi2": "doc",
    "sklearn.linear_model.LassoLars": "doc",
    "sklearn.linear_model.enet_path": "doc",
    "sklearn.linear_model.lars_path": "doc",
    "sklearn.metrics.accuracy_score": "doc",
    "sklearn.metrics.coverage_error": "doc",
    "sklearn.metrics.plot_roc_curve": "doc",
    "sklearn.naive_bayes.GaussianNB": "doc",
    "sklearn.pipeline.make_pipeline": "doc",
    "sklearn.preprocessing.binarize": "doc",
    "sklearn.utils.estimator_checks": "doc",
    "sklearn.utils.parallel_backend": "doc",
    "sklearn.cluster.MiniBatchKMeans": "doc",
    "sklearn.cross_decomposition.CCA": "doc",
    "sklearn.datasets.fetch_kddcup99": "doc",
    "sklearn.datasets.make_friedman1": "doc",
    "sklearn.datasets.make_friedman2": "doc",
    "sklearn.datasets.make_friedman3": "doc",
    "sklearn.decomposition.KernelPCA": "doc",
    "sklearn.decomposition.SparsePCA": "doc",
    "sklearn.feature_selection.RFECV": "doc",
    "sklearn.impute.IterativeImputer": "doc",
    "sklearn.impute.MissingIndicator": "doc",
    "sklearn.linear_model.Perceptron": "doc",
    "sklearn.linear_model.ElasticNet": "doc",
    "sklearn.linear_model.lasso_path": "doc",
    "sklearn.metrics.precision_score": "doc",
    "sklearn.metrics.v_measure_score": "doc",
    "sklearn.metrics.consensus_score": "doc",
    "sklearn.metrics.RocCurveDisplay": "doc",
    "sklearn.mixture.GaussianMixture": "doc",
    "sklearn.naive_bayes.BernoulliNB": "doc",
    "sklearn.neighbors.KernelDensity": "doc",
    "sklearn.preprocessing.Binarizer": "doc",
    "sklearn.preprocessing.normalize": "doc",
    "sklearn.tree.ExtraTreeRegressor": "doc",
    "sklearn.utils.assert_all_finite": "doc",
    "sklearn.datasets.clear_data_home": "doc",
    "sklearn.datasets.fetch_lfw_pairs": "doc",
    "sklearn.datasets.make_biclusters": "doc",
    "sklearn.datasets.make_regression": "doc",
    "sklearn.datasets.make_spd_matrix": "doc",
    "sklearn.datasets.make_swiss_roll": "doc",
    "sklearn.ensemble.IsolationForest": "doc",
    "sklearn.ensemble.VotingRegressor": "doc",
    "sklearn.kernel_ridge.KernelRidge": "doc",
    "sklearn.linear_model.LassoLarsCV": "doc",
    "sklearn.linear_model.LassoLarsIC": "doc",
    "sklearn.manifold.trustworthiness": "doc",
    "sklearn.metrics.confusion_matrix": "doc",
    "sklearn.metrics.silhouette_score": "doc",
    "sklearn.model_selection.check_cv": "doc",
    "sklearn.naive_bayes.ComplementNB": "doc",
    "sklearn.neighbors.DistanceMetric": "doc",
    "sklearn.preprocessing.Normalizer": "doc",
    "sklearn.tree.ExtraTreeClassifier": "doc",
    "sklearn.utils.arrayfuncs.min_pos": "doc",
    "sklearn.utils.check_random_state": "doc",
    "sklearn.cluster.cluster_optics_xi": "doc",
    "sklearn.compose.ColumnTransformer": "doc",
    "sklearn.covariance.GraphicalLasso": "doc",
    "sklearn.datasets.fetch_lfw_people": "doc",
    "sklearn.datasets.make_hastie_10_2": "doc",
    "sklearn.decomposition.SparseCoder": "doc",
    "sklearn.ensemble.BaggingRegressor": "doc",
    "sklearn.ensemble.VotingClassifier": "doc",
    "sklearn.exceptions.NotFittedError": "doc",
    "sklearn.isotonic.check_increasing": "doc",
    "sklearn.linear_model.SGDRegressor": "doc",
    "sklearn.linear_model.ElasticNetCV": "doc",
    "sklearn.metrics.cohen_kappa_score": "doc",
    "sklearn.metrics.matthews_corrcoef": "doc",
    "sklearn.metrics.homogeneity_score": "doc",
    "sklearn.metrics.mutual_info_score": "doc",
    "sklearn.model_selection.LeavePOut": "doc",
    "sklearn.naive_bayes.CategoricalNB": "doc",
    "sklearn.naive_bayes.MultinomialNB": "doc",
    "sklearn.neighbors.NearestCentroid": "doc",
    "sklearn.utils.estimator_html_repr": "doc",
    "sklearn.utils.extmath.fast_logdet": "doc",
    "sklearn.cluster.SpectralClustering": "doc",
    "sklearn.cluster.estimate_bandwidth": "doc",
    "sklearn.covariance.graphical_lasso": "doc",
    "sklearn.cross_decomposition.PLSSVD": "doc",
    "sklearn.datasets.load_sample_image": "doc",
    "sklearn.datasets.make_checkerboard": "doc",
    "sklearn.decomposition.TruncatedSVD": "doc",
    "sklearn.ensemble.AdaBoostRegressor": "doc",
    "sklearn.ensemble.BaggingClassifier": "doc",
    "sklearn.ensemble.StackingRegressor": "doc",
    "sklearn.linear_model.SGDClassifier": "doc",
    "sklearn.linear_model.ARDRegression": "doc",
    "sklearn.linear_model.BayesianRidge": "doc",
    "sklearn.linear_model.orthogonal_mp": "doc",
    "sklearn.manifold.SpectralEmbedding": "doc",
    "sklearn.metrics.mean_squared_error": "doc",
    "sklearn.metrics.label_ranking_loss": "doc",
    "sklearn.metrics.completeness_score": "doc",
    "sklearn.metrics.silhouette_samples": "doc",
    "sklearn.model_selection.GroupKFold": "doc",
    "sklearn.multioutput.RegressorChain": "doc",
    "sklearn.neighbors.NearestNeighbors": "doc",
    "sklearn.neighbors.kneighbors_graph": "doc",
    "sklearn.preprocessing.LabelEncoder": "doc",
    "sklearn.preprocessing.MaxAbsScaler": "doc",
    "sklearn.preprocessing.MinMaxScaler": "doc",
    "sklearn.preprocessing.RobustScaler": "doc",
    "sklearn.preprocessing.maxabs_scale": "doc",
    "sklearn.preprocessing.minmax_scale": "doc",
    "sklearn.preprocessing.robust_scale": "doc",
    "sklearn.tree.DecisionTreeRegressor": "doc",
    "sklearn.cluster.AffinityPropagation": "doc",
    "sklearn.cluster.spectral_clustering": "doc",
    "sklearn.covariance.EllipticEnvelope": "doc",
    "sklearn.covariance.GraphicalLassoCV": "doc",
    "sklearn.covariance.ShrunkCovariance": "doc",
    "sklearn.datasets.dump_svmlight_file": "doc",
    "sklearn.datasets.fetch_20newsgroups": "doc",
    "sklearn.datasets.load_svmlight_file": "doc",
    "sklearn.decomposition.sparse_encode": "doc",
    "sklearn.ensemble.AdaBoostClassifier": "doc",
    "sklearn.ensemble.StackingClassifier": "doc",
    "sklearn.exceptions.FitFailedWarning": "doc",
    "sklearn.feature_selection.SelectFpr": "doc",
    "sklearn.feature_selection.SelectFdr": "doc",
    "sklearn.feature_selection.SelectFwe": "doc",
    "sklearn.feature_selection.f_classif": "doc",
    "sklearn.isotonic.IsotonicRegression": "doc",
    "sklearn.linear_model.MultiTaskLasso": "doc",
    "sklearn.linear_model.HuberRegressor": "doc",
    "sklearn.linear_model.GammaRegressor": "doc",
    "sklearn.linear_model.lars_path_gram": "doc",
    "sklearn.manifold.spectral_embedding": "doc",
    "sklearn.metrics.mean_absolute_error": "doc",
    "sklearn.metrics.mean_gamma_deviance": "doc",
    "sklearn.metrics.adjusted_rand_score": "doc",
    "sklearn.metrics.pairwise.rbf_kernel": "doc",
    "sklearn.model_selection.LeaveOneOut": "doc",
    "sklearn.multioutput.ClassifierChain": "doc",
    "sklearn.neural_network.BernoulliRBM": "doc",
    "sklearn.neural_network.MLPRegressor": "doc",
    "sklearn.preprocessing.OneHotEncoder": "doc",
    "sklearn.tree.DecisionTreeClassifier": "doc",
    "sklearn.utils.extmath.weighted_mode": "doc",
    "sklearn.cluster.FeatureAgglomeration": "doc",
    "sklearn.cluster.SpectralBiclustering": "doc",
    "sklearn.cluster.SpectralCoclustering": "doc",
    "sklearn.cluster.affinity_propagation": "doc",
    "sklearn.cluster.compute_optics_graph": "doc",
    "sklearn.compose.make_column_selector": "doc",
    "sklearn.datasets.load_svmlight_files": "doc",
    "sklearn.datasets.make_classification": "doc",
    "sklearn.decomposition.FactorAnalysis": "doc",
    "sklearn.decomposition.IncrementalPCA": "doc",
    "sklearn.ensemble.ExtraTreesRegressor": "doc",
    "sklearn.exceptions.EfficiencyWarning": "doc",
    "sklearn.exceptions.NonBLASDotWarning": "doc",
    "sklearn.gaussian_process.kernels.RBF": "doc",
    "sklearn.gaussian_process.kernels.Sum": "doc",
    "sklearn.isotonic.isotonic_regression": "doc",
    "sklearn.linear_model.RidgeClassifier": "doc",
    "sklearn.linear_model.RANSACRegressor": "doc",
    "sklearn.metrics.davies_bouldin_score": "doc",
    "sklearn.metrics.pairwise.chi2_kernel": "doc",
    "sklearn.model_selection.ShuffleSplit": "doc",
    "sklearn.neighbors.LocalOutlierFactor": "doc",
    "sklearn.neural_network.MLPClassifier": "doc",
    "sklearn.preprocessing.KernelCenterer": "doc",
    "sklearn.preprocessing.LabelBinarizer": "doc",
    "sklearn.preprocessing.OrdinalEncoder": "doc",
    "sklearn.preprocessing.StandardScaler": "doc",
    "sklearn.preprocessing.label_binarize": "doc",
    "sklearn.utils.extmath.randomized_svd": "doc",
    "sklearn.calibration.calibration_curve": "doc",
    "sklearn.cluster.cluster_optics_dbscan": "doc",
    "sklearn.datasets.fetch_olivetti_faces": "doc",
    "sklearn.datasets.make_low_rank_matrix": "doc",
    "sklearn.ensemble.ExtraTreesClassifier": "doc",
    "sklearn.ensemble.RandomTreesEmbedding": "doc",
    "sklearn.exceptions.ConvergenceWarning": "doc",
    "sklearn.feature_selection.SelectKBest": "doc",
    "sklearn.kernel_approximation.Nystroem": "doc",
    "sklearn.linear_model.LinearRegression": "doc",
    "sklearn.linear_model.MultiTaskLassoCV": "doc",
    "sklearn.linear_model.PoissonRegressor": "doc",
    "sklearn.linear_model.TweedieRegressor": "doc",
    "sklearn.metrics.classification_report": "doc",
    "sklearn.metrics.median_absolute_error": "doc",
    "sklearn.metrics.mean_poisson_deviance": "doc",
    "sklearn.metrics.mean_tweedie_deviance": "doc",
    "sklearn.metrics.fowlkes_mallows_score": "doc",
    "sklearn.metrics.plot_confusion_matrix": "doc",
    "sklearn.model_selection.RepeatedKFold": "doc",
    "sklearn.model_selection.ParameterGrid": "doc",
    "sklearn.multiclass.OneVsOneClassifier": "doc",
    "sklearn.neighbors.KNeighborsRegressor": "doc",
    "sklearn.preprocessing.power_transform": "doc",
    "sklearn.utils.check_consistent_length": "doc",
    "sklearn.utils.extmath.safe_sparse_dot": "doc",
    "sklearn.utils.validation.check_memory": "doc",
    "sklearn.utils.validation.column_or_1d": "doc",
    "sklearn.covariance.EmpiricalCovariance": "doc",
    "sklearn.ensemble.RandomForestRegressor": "doc",
    "sklearn.feature_selection.f_regression": "doc",
    "sklearn.linear_model.RidgeClassifierCV": "doc",
    "sklearn.linear_model.TheilSenRegressor": "doc",
    "sklearn.metrics.precision_recall_curve": "doc",
    "sklearn.metrics.mean_squared_log_error": "doc",
    "sklearn.metrics.pairwise.linear_kernel": "doc",
    "sklearn.metrics.ConfusionMatrixDisplay": "doc",
    "sklearn.metrics.PrecisionRecallDisplay": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.learning_curve": "doc",
    "sklearn.multiclass.OneVsRestClassifier": "doc",
    "sklearn.neighbors.KNeighborsClassifier": "doc",
    "sklearn.preprocessing.KBinsDiscretizer": "doc",
    "sklearn.preprocessing.PowerTransformer": "doc",
    "sklearn.semi_supervised.LabelSpreading": "doc",
    "sklearn.utils.multiclass.is_multilabel": "doc",
    "sklearn.utils.multiclass.unique_labels": "doc",
    "sklearn.feature_selection.SelectorMixin": "doc",
    "sklearn.cluster.AgglomerativeClustering": "doc",
    "sklearn.compose.make_column_transformer": "doc",
    "sklearn.datasets.make_sparse_spd_matrix": "doc",
    "sklearn.ensemble.RandomForestClassifier": "doc",
    "sklearn.gaussian_process.kernels.Kernel": "doc",
    "sklearn.gaussian_process.kernels.Matern": "doc",
    "sklearn.kernel_approximation.RBFSampler": "doc",
    "sklearn.linear_model.LogisticRegression": "doc",
    "sklearn.linear_model.orthogonal_mp_gram": "doc",
    "sklearn.manifold.LocallyLinearEmbedding": "doc",
    "sklearn.metrics.average_precision_score": "doc",
    "sklearn.metrics.balanced_accuracy_score": "doc",
    "sklearn.metrics.calinski_harabasz_score": "doc",
    "sklearn.mixture.BayesianGaussianMixture": "doc",
    "sklearn.model_selection.LeavePGroupsOut": "doc",
    "sklearn.model_selection.PredefinedSplit": "doc",
    "sklearn.model_selection.StratifiedKFold": "doc",
    "sklearn.model_selection.TimeSeriesSplit": "doc",
    "sklearn.model_selection.cross_val_score": "doc",
    "sklearn.multiclass.OutputCodeClassifier": "doc",
    "sklearn.neighbors.KNeighborsTransformer": "doc",
    "sklearn.preprocessing.add_dummy_feature": "doc",
    "sklearn.utils.multiclass.type_of_target": "doc",
    "sklearn.utils.register_parallel_backend": "doc",
    "sklearn.cross_decomposition.PLSCanonical": "doc",
    "sklearn.datasets.make_gaussian_quantiles": "doc",
    "sklearn.decomposition.DictionaryLearning": "doc",
    "sklearn.decomposition.MiniBatchSparsePCA": "doc",
    "sklearn.exceptions.DataConversionWarning": "doc",
    "sklearn.feature_extraction.FeatureHasher": "doc",
    "sklearn.gaussian_process.kernels.Product": "doc",
    "sklearn.linear_model.MultiTaskElasticNet": "doc",
    "sklearn.metrics.explained_variance_score": "doc",
    "sklearn.model_selection.LeaveOneGroupOut": "doc",
    "sklearn.model_selection.train_test_split": "doc",
    "sklearn.model_selection.ParameterSampler": "doc",
    "sklearn.model_selection.validation_curve": "doc",
    "sklearn.multioutput.MultiOutputRegressor": "doc",
    "sklearn.neighbors.radius_neighbors_graph": "doc",
    "sklearn.preprocessing.PolynomialFeatures": "doc",
    "sklearn.preprocessing.quantile_transform": "doc",
    "sklearn.semi_supervised.LabelPropagation": "doc",
    "sklearn.utils.validation.check_is_fitted": "doc",
    "sklearn.utils.validation.check_symmetric": "doc",
    "sklearn.cross_decomposition.PLSRegression": "doc",
    "sklearn.datasets.fetch_california_housing": "doc",
    "sklearn.datasets.make_sparse_coded_signal": "doc",
    "sklearn.datasets.make_sparse_uncorrelated": "doc",
    "sklearn.exceptions.ChangedBehaviorWarning": "doc",
    "sklearn.exceptions.UndefinedMetricWarning": "doc",
    "sklearn.feature_extraction.DictVectorizer": "doc",
    "sklearn.feature_selection.SelectFromModel": "doc",
    "sklearn.inspection.permutation_importance": "doc",
    "sklearn.linear_model.LogisticRegressionCV": "doc",
    "sklearn.manifold.locally_linear_embedding": "doc",
    "sklearn.metrics.pairwise.distance_metrics": "doc",
    "sklearn.metrics.pairwise.laplacian_kernel": "doc",
    "sklearn.metrics.pairwise.pairwise_kernels": "doc",
    "sklearn.model_selection.GroupShuffleSplit": "doc",
    "sklearn.multioutput.MultiOutputClassifier": "doc",
    "sklearn.preprocessing.FunctionTransformer": "doc",
    "sklearn.preprocessing.MultiLabelBinarizer": "doc",
    "sklearn.preprocessing.QuantileTransformer": "doc",
    "sklearn.calibration.CalibratedClassifierCV": "doc",
    "sklearn.compose.TransformedTargetRegressor": "doc",
    "sklearn.decomposition.dict_learning_online": "doc",
    "sklearn.ensemble.GradientBoostingRegressor": "doc",
    "sklearn.feature_selection.SelectPercentile": "doc",
    "sklearn.inspection.plot_partial_dependence": "doc",
    "sklearn.linear_model.MultiTaskElasticNetCV": "doc",
    "sklearn.metrics.adjusted_mutual_info_score": "doc",
    "sklearn.metrics.cluster.contingency_matrix": "doc",
    "sklearn.metrics.pairwise.polynomial_kernel": "doc",
    "sklearn.metrics.pairwise_distances_chunked": "doc",
    "sklearn.neighbors.RadiusNeighborsRegressor": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_row": "doc",
    "sklearn.utils.validation.has_fit_parameter": "doc",
    "sklearn.ensemble.GradientBoostingClassifier": "doc",
    "sklearn.gaussian_process.kernels.DotProduct": "doc",
    "sklearn.inspection.PartialDependenceDisplay": "doc",
    "sklearn.metrics.multilabel_confusion_matrix": "doc",
    "sklearn.metrics.plot_precision_recall_curve": "doc",
    "sklearn.neighbors.RadiusNeighborsClassifier": "doc",
    "sklearn.utils.sparsefuncs.inplace_row_scale": "doc",
    "sklearn.datasets.fetch_species_distributions": "doc",
    "sklearn.exceptions.DataDimensionalityWarning": "doc",
    "sklearn.gaussian_process.kernels.WhiteKernel": "doc",
    "sklearn.metrics.normalized_mutual_info_score": "doc",
    "sklearn.metrics.pairwise.manhattan_distances": "doc",
    "sklearn.neighbors.RadiusNeighborsTransformer": "doc",
    "sklearn.utils.sparsefuncs.mean_variance_axis": "doc",
    "sklearn.experimental.enable_iterative_imputer": "doc",
    "sklearn.feature_extraction.image.img_to_graph": "doc",
    "sklearn.feature_selection.mutual_info_classif": "doc",
    "sklearn.metrics.pairwise.additive_chi2_kernel": "doc",
    "sklearn.metrics.pairwise_distances_argmin_min": "doc",
    "sklearn.utils.extmath.randomized_range_finder": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_column": "doc",
    "sklearn.datasets.fetch_20newsgroups_vectorized": "doc",
    "sklearn.ensemble.HistGradientBoostingRegressor": "doc",
    "sklearn.kernel_approximation.SkewedChi2Sampler": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuit": "doc",
    "sklearn.model_selection.StratifiedShuffleSplit": "doc",
    "sklearn.model_selection.permutation_test_score": "doc",
    "sklearn.utils.estimator_checks.check_estimator": "doc",
    "sklearn.utils.sparsefuncs.inplace_column_scale": "doc",
    "sklearn.datasets.make_multilabel_classification": "doc",
    "sklearn.decomposition.LatentDirichletAllocation": "doc",
    "sklearn.ensemble.HistGradientBoostingClassifier": "doc",
    "sklearn.feature_extraction.image.PatchExtractor": "doc",
    "sklearn.feature_extraction.text.CountVectorizer": "doc",
    "sklearn.feature_extraction.text.TfidfVectorizer": "doc",
    "sklearn.gaussian_process.kernels.CompoundKernel": "doc",
    "sklearn.gaussian_process.kernels.ConstantKernel": "doc",
    "sklearn.gaussian_process.kernels.ExpSineSquared": "doc",
    "sklearn.gaussian_process.kernels.Exponentiation": "doc",
    "sklearn.gaussian_process.kernels.Hyperparameter": "doc",
    "sklearn.linear_model.PassiveAggressiveRegressor": "doc",
    "sklearn.metrics.precision_recall_fscore_support": "doc",
    "sklearn.model_selection.RepeatedStratifiedKFold": "doc",
    "sklearn.utils.class_weight.compute_class_weight": "doc",
    "sklearn.utils.random.sample_without_replacement": "doc",
    "sklearn.decomposition.non_negative_factorization": "doc",
    "sklearn.feature_extraction.text.TfidfTransformer": "doc",
    "sklearn.feature_selection.mutual_info_regression": "doc",
    "sklearn.kernel_approximation.AdditiveChi2Sampler": "doc",
    "sklearn.linear_model.PassiveAggressiveClassifier": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuitCV": "doc",
    "sklearn.metrics.pairwise.nan_euclidean_distances": "doc",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis": "doc",
    "sklearn.random_projection.SparseRandomProjection": "doc",
    "sklearn.utils.class_weight.compute_sample_weight": "doc",
    "sklearn.decomposition.MiniBatchDictionaryLearning": "doc",
    "sklearn.feature_extraction.text.HashingVectorizer": "doc",
    "sklearn.feature_selection.GenericUnivariateSelect": "doc",
    "sklearn.gaussian_process.GaussianProcessRegressor": "doc",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis": "doc",
    "sklearn.experimental.enable_hist_gradient_boosting": "doc",
    "sklearn.gaussian_process.GaussianProcessClassifier": "doc",
    "sklearn.gaussian_process.kernels.RationalQuadratic": "doc",
    "sklearn.metrics.homogeneity_completeness_v_measure": "doc",
    "sklearn.random_projection.GaussianRandomProjection": "doc",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale": "doc",
    "sklearn.feature_extraction.image.extract_patches_2d": "doc",
    "sklearn.metrics.pairwise.paired_euclidean_distances": "doc",
    "sklearn.metrics.pairwise.paired_manhattan_distances": "doc",
    "sklearn.utils.metaestimators.if_delegate_has_method": "doc",
    "sklearn.metrics.label_ranking_average_precision_score": "doc",
    "sklearn.utils.estimator_checks.parametrize_with_checks": "doc",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim": "doc",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": "doc",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2": "doc",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d": "doc"
  },
  "sklearn.externals.joblib": {
    "sklearn.gaussian_process.kernels.RationalQuadratic": "doc",
    "sklearn.gaussian_process.kernels.Exponentiation": "doc",
    "sklearn.gaussian_process.kernels.Product": "doc",
    "sklearn.gaussian_process.kernels.DotProduct": "doc",
    "sklearn.decomposition.FactorAnalysis": "doc",
    "sklearn.experimental.enable_hist_gradient_boosting": "doc",
    "sklearn.gaussian_process.kernels.CompoundKernel": "doc",
    "sklearn.gaussian_process.kernels.ConstantKernel": "doc",
    "sklearn.gaussian_process.kernels.ExpSineSquared": "doc",
    "sklearn.gaussian_process.kernels.PairwiseKernel": "doc",
    "sklearn.experimental.enable_iterative_imputer": "doc",
    "sklearn.gaussian_process.kernels.RBF": "doc",
    "sklearn.gaussian_process.kernels.Sum": "doc",
    "sklearn.gaussian_process.kernels.Kernel": "doc",
    "sklearn.gaussian_process.kernels.Matern": "doc",
    "sklearn.gaussian_process.kernels.WhiteKernel": "doc",
    "sklearn.gaussian_process.kernels.Hyperparameter": "doc",
    "sklearn.utils.extmath": "doc",
    "sklearn.utils.extmath.density": "doc",
    "sklearn.utils.extmath.fast_logdet": "doc",
    "sklearn.utils.extmath.weighted_mode": "doc",
    "sklearn.utils.extmath.randomized_svd": "doc",
    "sklearn.utils.extmath.safe_sparse_dot": "doc",
    "sklearn.utils.extmath.randomized_range_finder": "doc",
    "sklearn.experimental": "doc",
    "sklearn.metrics.log_loss": "doc",
    "sklearn.pipeline.FeatureUnion": "doc",
    "sklearn.utils.multiclass.is_multilabel": "doc",
    "sklearn.preprocessing.normalize": "doc",
    "sklearn.naive_bayes.BernoulliNB": "doc",
    "sklearn.exceptions.NotFittedError": "doc",
    "sklearn.naive_bayes.CategoricalNB": "doc",
    "sklearn.exceptions.FitFailedWarning": "doc",
    "sklearn.datasets.make_blobs": "doc",
    "sklearn.preprocessing.Normalizer": "doc",
    "sklearn.ensemble.VotingClassifier": "doc",
    "sklearn.exceptions.DataDimensionalityWarning": "doc",
    "sklearn.metrics.pairwise.pairwise_kernels": "doc",
    "sklearn.exceptions.NonBLASDotWarning": "doc",
    "sklearn.model_selection.ParameterSampler": "doc",
    "sklearn.exceptions.ConvergenceWarning": "doc",
    "sklearn.metrics.pairwise.cosine_similarity": "doc",
    "sklearn.model_selection.RepeatedKFold": "doc",
    "sklearn.utils": "doc",
    "sklearn.exceptions": "doc",
    "sklearn.utils.Bunch": "doc",
    "sklearn.utils.shuffle": "doc",
    "sklearn.utils.resample": "doc",
    "sklearn.utils.safe_sqr": "doc",
    "sklearn.utils.check_X_y": "doc",
    "sklearn.utils.indexable": "doc",
    "sklearn.utils.safe_mask": "doc",
    "sklearn.utils.deprecated": "doc",
    "sklearn.utils.multiclass": "doc",
    "sklearn.utils.validation": "doc",
    "sklearn.utils.check_array": "doc",
    "sklearn.utils.sparsefuncs": "doc",
    "sklearn.utils.check_scalar": "doc",
    "sklearn.utils.as_float_array": "doc",
    "sklearn.utils.murmurhash3_32": "doc",
    "sklearn.utils._safe_indexing": "doc",
    "sklearn.utils.all_estimators": "doc",
    "sklearn.utils.gen_even_slices": "doc",
    "sklearn.utils.estimator_checks": "doc",
    "sklearn.utils.parallel_backend": "doc",
    "sklearn.utils.assert_all_finite": "doc",
    "sklearn.utils.arrayfuncs.min_pos": "doc",
    "sklearn.utils.check_random_state": "doc",
    "sklearn.utils.estimator_html_repr": "doc",
    "sklearn.metrics.label_ranking_loss": "doc",
    "sklearn.ensemble.AdaBoostClassifier": "doc",
    "sklearn.exceptions.EfficiencyWarning": "doc",
    "sklearn.utils.check_consistent_length": "doc",
    "sklearn.utils.validation.check_memory": "doc",
    "sklearn.utils.validation.column_or_1d": "doc",
    "sklearn.utils.multiclass.unique_labels": "doc",
    "sklearn.utils.multiclass.type_of_target": "doc",
    "sklearn.utils.register_parallel_backend": "doc",
    "sklearn.exceptions.DataConversionWarning": "doc",
    "sklearn.utils.validation.check_is_fitted": "doc",
    "sklearn.utils.validation.check_symmetric": "doc",
    "sklearn.exceptions.ChangedBehaviorWarning": "doc",
    "sklearn.exceptions.UndefinedMetricWarning": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_row": "doc",
    "sklearn.utils.validation.has_fit_parameter": "doc",
    "sklearn.utils.sparsefuncs.inplace_row_scale": "doc",
    "sklearn.utils.sparsefuncs.mean_variance_axis": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_column": "doc",
    "sklearn.utils.estimator_checks.check_estimator": "doc",
    "sklearn.utils.sparsefuncs.inplace_column_scale": "doc",
    "sklearn.utils.class_weight.compute_class_weight": "doc",
    "sklearn.utils.random.sample_without_replacement": "doc",
    "sklearn.utils.class_weight.compute_sample_weight": "doc",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis": "doc",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale": "doc",
    "sklearn.utils.metaestimators.if_delegate_has_method": "doc",
    "sklearn.utils.graph_shortest_path.graph_shortest_path": "doc",
    "sklearn.utils.estimator_checks.parametrize_with_checks": "doc",
    "sklearn.utils.graph.single_source_shortest_path_length": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2": "doc",
    "sklearn.feature_selection.SelectPercentile": "doc",
    "sklearn.metrics.zero_one_loss": "doc",
    "sklearn.metrics.davies_bouldin_score": "doc",
    "sklearn.ensemble.RandomTreesEmbedding": "doc",
    "sklearn.metrics": "doc",
    "sklearn.metrics.auc": "doc",
    "sklearn.metrics.f1_score": "doc",
    "sklearn.metrics.r2_score": "doc",
    "sklearn.metrics.dcg_score": "doc",
    "sklearn.metrics.roc_curve": "doc",
    "sklearn.metrics.max_error": "doc",
    "sklearn.metrics.get_scorer": "doc",
    "sklearn.metrics.hinge_loss": "doc",
    "sklearn.metrics.ndcg_score": "doc",
    "sklearn.metrics.make_scorer": "doc",
    "sklearn.metrics.fbeta_score": "doc",
    "sklearn.metrics.hamming_loss": "doc",
    "sklearn.metrics.recall_score": "doc",
    "sklearn.metrics.check_scoring": "doc",
    "sklearn.metrics.jaccard_score": "doc",
    "sklearn.metrics.roc_auc_score": "doc",
    "sklearn.metrics.accuracy_score": "doc",
    "sklearn.metrics.coverage_error": "doc",
    "sklearn.metrics.plot_roc_curve": "doc",
    "sklearn.metrics.precision_score": "doc",
    "sklearn.metrics.v_measure_score": "doc",
    "sklearn.metrics.consensus_score": "doc",
    "sklearn.metrics.RocCurveDisplay": "doc",
    "sklearn.metrics.brier_score_loss": "doc",
    "sklearn.metrics.confusion_matrix": "doc",
    "sklearn.metrics.silhouette_score": "doc",
    "sklearn.metrics.cohen_kappa_score": "doc",
    "sklearn.metrics.matthews_corrcoef": "doc",
    "sklearn.metrics.homogeneity_score": "doc",
    "sklearn.metrics.mutual_info_score": "doc",
    "sklearn.metrics.mean_squared_error": "doc",
    "sklearn.metrics.completeness_score": "doc",
    "sklearn.metrics.silhouette_samples": "doc",
    "sklearn.metrics.pairwise_distances": "doc",
    "sklearn.metrics.mean_absolute_error": "doc",
    "sklearn.metrics.mean_gamma_deviance": "doc",
    "sklearn.metrics.adjusted_rand_score": "doc",
    "sklearn.metrics.pairwise.rbf_kernel": "doc",
    "sklearn.metrics.pairwise.chi2_kernel": "doc",
    "sklearn.metrics.classification_report": "doc",
    "sklearn.metrics.median_absolute_error": "doc",
    "sklearn.metrics.mean_poisson_deviance": "doc",
    "sklearn.metrics.mean_tweedie_deviance": "doc",
    "sklearn.metrics.fowlkes_mallows_score": "doc",
    "sklearn.metrics.plot_confusion_matrix": "doc",
    "sklearn.metrics.precision_recall_curve": "doc",
    "sklearn.metrics.mean_squared_log_error": "doc",
    "sklearn.metrics.pairwise.linear_kernel": "doc",
    "sklearn.metrics.ConfusionMatrixDisplay": "doc",
    "sklearn.metrics.PrecisionRecallDisplay": "doc",
    "sklearn.metrics.average_precision_score": "doc",
    "sklearn.metrics.balanced_accuracy_score": "doc",
    "sklearn.metrics.calinski_harabasz_score": "doc",
    "sklearn.metrics.pairwise.kernel_metrics": "doc",
    "sklearn.metrics.pairwise.sigmoid_kernel": "doc",
    "sklearn.metrics.explained_variance_score": "doc",
    "sklearn.metrics.pairwise.cosine_distances": "doc",
    "sklearn.metrics.pairwise.distance_metrics": "doc",
    "sklearn.metrics.pairwise.laplacian_kernel": "doc",
    "sklearn.metrics.pairwise.paired_distances": "doc",
    "sklearn.metrics.pairwise_distances_argmin": "doc",
    "sklearn.metrics.adjusted_mutual_info_score": "doc",
    "sklearn.metrics.cluster.contingency_matrix": "doc",
    "sklearn.metrics.pairwise.polynomial_kernel": "doc",
    "sklearn.metrics.pairwise_distances_chunked": "doc",
    "sklearn.metrics.multilabel_confusion_matrix": "doc",
    "sklearn.metrics.plot_precision_recall_curve": "doc",
    "sklearn.metrics.normalized_mutual_info_score": "doc",
    "sklearn.metrics.pairwise.euclidean_distances": "doc",
    "sklearn.metrics.pairwise.haversine_distances": "doc",
    "sklearn.metrics.pairwise.manhattan_distances": "doc",
    "sklearn.metrics.pairwise.additive_chi2_kernel": "doc",
    "sklearn.metrics.pairwise_distances_argmin_min": "doc",
    "sklearn.metrics.precision_recall_fscore_support": "doc",
    "sklearn.metrics.pairwise.nan_euclidean_distances": "doc",
    "sklearn.metrics.pairwise.paired_cosine_distances": "doc",
    "sklearn.metrics.homogeneity_completeness_v_measure": "doc",
    "sklearn.metrics.pairwise.paired_euclidean_distances": "doc",
    "sklearn.metrics.pairwise.paired_manhattan_distances": "doc",
    "sklearn.metrics.label_ranking_average_precision_score": "doc",
    "sklearn.model_selection.LeaveOneOut": "doc",
    "sklearn.isotonic": "doc",
    "sklearn.pipeline": "doc",
    "sklearn.pipeline.Pipeline": "doc",
    "sklearn.pipeline.make_union": "doc",
    "sklearn.pipeline.make_pipeline": "doc",
    "sklearn.isotonic.check_increasing": "doc",
    "sklearn.preprocessing.RobustScaler": "doc",
    "sklearn.isotonic.IsotonicRegression": "doc",
    "sklearn.neural_network.BernoulliRBM": "doc",
    "sklearn.isotonic.isotonic_regression": "doc",
    "sklearn.ensemble.RandomForestClassifier": "doc",
    "sklearn.ensemble.IsolationForest": "doc",
    "sklearn.model_selection.LeavePGroupsOut": "doc",
    "sklearn.linear_model.orthogonal_mp": "doc",
    "sklearn.decomposition.dict_learning": "doc",
    "sklearn.ensemble": "doc",
    "sklearn.ensemble.VotingRegressor": "doc",
    "sklearn.ensemble.BaggingRegressor": "doc",
    "sklearn.ensemble.AdaBoostRegressor": "doc",
    "sklearn.ensemble.BaggingClassifier": "doc",
    "sklearn.ensemble.StackingRegressor": "doc",
    "sklearn.ensemble.StackingClassifier": "doc",
    "sklearn.ensemble.ExtraTreesRegressor": "doc",
    "sklearn.ensemble.ExtraTreesClassifier": "doc",
    "sklearn.ensemble.RandomForestRegressor": "doc",
    "sklearn.ensemble.GradientBoostingRegressor": "doc",
    "sklearn.ensemble.GradientBoostingClassifier": "doc",
    "sklearn.ensemble.HistGradientBoostingRegressor": "doc",
    "sklearn.ensemble.HistGradientBoostingClassifier": "doc",
    "sklearn.feature_selection.f_classif": "doc",
    "sklearn.datasets.load_diabetes": "doc",
    "sklearn.datasets.load_linnerud": "doc",
    "sklearn.multiclass.OutputCodeClassifier": "doc",
    "sklearn.datasets.load_iris": "doc",
    "sklearn.datasets.load_wine": "doc",
    "sklearn.decomposition.IncrementalPCA": "doc",
    "sklearn.naive_bayes.ComplementNB": "doc",
    "sklearn.preprocessing.LabelBinarizer": "doc",
    "sklearn.preprocessing.label_binarize": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.semi_supervised.LabelSpreading": "doc",
    "sklearn.kernel_ridge.KernelRidge": "doc",
    "sklearn.model_selection.ParameterGrid": "doc",
    "sklearn.multioutput.RegressorChain": "doc",
    "sklearn.naive_bayes.MultinomialNB": "doc",
    "sklearn.covariance": "doc",
    "sklearn.covariance.OAS": "doc",
    "sklearn.covariance.oas": "doc",
    "sklearn.model_selection": "doc",
    "sklearn.datasets.load_files": "doc",
    "sklearn.covariance.MinCovDet": "doc",
    "sklearn.covariance.LedoitWolf": "doc",
    "sklearn.model_selection.KFold": "doc",
    "sklearn.covariance.ledoit_wolf": "doc",
    "sklearn.model_selection.check_cv": "doc",
    "sklearn.covariance.GraphicalLasso": "doc",
    "sklearn.model_selection.LeavePOut": "doc",
    "sklearn.covariance.graphical_lasso": "doc",
    "sklearn.model_selection.GroupKFold": "doc",
    "sklearn.covariance.EllipticEnvelope": "doc",
    "sklearn.covariance.GraphicalLassoCV": "doc",
    "sklearn.covariance.ShrunkCovariance": "doc",
    "sklearn.covariance.shrunk_covariance": "doc",
    "sklearn.model_selection.ShuffleSplit": "doc",
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.covariance.EmpiricalCovariance": "doc",
    "sklearn.model_selection.learning_curve": "doc",
    "sklearn.covariance.empirical_covariance": "doc",
    "sklearn.model_selection.PredefinedSplit": "doc",
    "sklearn.model_selection.StratifiedKFold": "doc",
    "sklearn.model_selection.TimeSeriesSplit": "doc",
    "sklearn.model_selection.cross_val_score": "doc",
    "sklearn.model_selection.LeaveOneGroupOut": "doc",
    "sklearn.model_selection.train_test_split": "doc",
    "sklearn.model_selection.validation_curve": "doc",
    "sklearn.model_selection.GroupShuffleSplit": "doc",
    "sklearn.model_selection.cross_val_predict": "doc",
    "sklearn.model_selection.RandomizedSearchCV": "doc",
    "sklearn.model_selection.StratifiedShuffleSplit": "doc",
    "sklearn.model_selection.permutation_test_score": "doc",
    "sklearn.model_selection.RepeatedStratifiedKFold": "doc",
    "sklearn.preprocessing.power_transform": "doc",
    "sklearn.kernel_ridge": "doc",
    "sklearn.base.ClusterMixin": "doc",
    "sklearn.preprocessing.MaxAbsScaler": "doc",
    "sklearn.preprocessing.robust_scale": "doc",
    "sklearn.multiclass.OneVsOneClassifier": "doc",
    "sklearn.semi_supervised.LabelPropagation": "doc",
    "sklearn.multiclass.OneVsRestClassifier": "doc",
    "sklearn.calibration": "doc",
    "sklearn.datasets.load_boston": "doc",
    "sklearn.datasets.load_digits": "doc",
    "sklearn.calibration.calibration_curve": "doc",
    "sklearn.manifold.LocallyLinearEmbedding": "doc",
    "sklearn.calibration.CalibratedClassifierCV": "doc",
    "sklearn.preprocessing.maxabs_scale": "doc",
    "sklearn.preprocessing.PowerTransformer": "doc",
    "sklearn.decomposition.dict_learning_online": "doc",
    "sklearn.feature_selection.chi2": "doc",
    "sklearn.multiclass": "doc",
    "sklearn.tree.export_graphviz": "doc",
    "sklearn.manifold.trustworthiness": "doc",
    "sklearn.datasets.load_sample_image": "doc",
    "sklearn.feature_selection.mutual_info_classif": "doc",
    "sklearn.feature_selection.SelectorMixin": "doc",
    "sklearn.base": "doc",
    "sklearn.base.clone": "doc",
    "sklearn.base.DensityMixin": "doc",
    "sklearn.base.is_regressor": "doc",
    "sklearn.base.BaseEstimator": "doc",
    "sklearn.base.is_classifier": "doc",
    "sklearn.base.BiclusterMixin": "doc",
    "sklearn.base.RegressorMixin": "doc",
    "sklearn.preprocessing.scale": "doc",
    "sklearn.base.ClassifierMixin": "doc",
    "sklearn.base.TransformerMixin": "doc",
    "sklearn.preprocessing.LabelEncoder": "doc",
    "sklearn.datasets.load_sample_images": "doc",
    "sklearn.datasets.load_svmlight_file": "doc",
    "sklearn.neighbors.LocalOutlierFactor": "doc",
    "sklearn.manifold.locally_linear_embedding": "doc",
    "sklearn.neighbors.KernelDensity": "doc",
    "sklearn.datasets.load_svmlight_files": "doc",
    "sklearn.preprocessing.MultiLabelBinarizer": "doc",
    "sklearn.neighbors.NearestCentroid": "doc",
    "sklearn.decomposition": "doc",
    "sklearn.preprocessing": "doc",
    "sklearn.decomposition.NMF": "doc",
    "sklearn.decomposition.PCA": "doc",
    "sklearn.decomposition.FastICA": "doc",
    "sklearn.decomposition.fastica": "doc",
    "sklearn.preprocessing.binarize": "doc",
    "sklearn.decomposition.KernelPCA": "doc",
    "sklearn.decomposition.SparsePCA": "doc",
    "sklearn.preprocessing.Binarizer": "doc",
    "sklearn.decomposition.SparseCoder": "doc",
    "sklearn.decomposition.TruncatedSVD": "doc",
    "sklearn.linear_model.SGDClassifier": "doc",
    "sklearn.preprocessing.MinMaxScaler": "doc",
    "sklearn.preprocessing.minmax_scale": "doc",
    "sklearn.decomposition.sparse_encode": "doc",
    "sklearn.preprocessing.OneHotEncoder": "doc",
    "sklearn.neural_network.MLPClassifier": "doc",
    "sklearn.preprocessing.KernelCenterer": "doc",
    "sklearn.preprocessing.OrdinalEncoder": "doc",
    "sklearn.preprocessing.StandardScaler": "doc",
    "sklearn.preprocessing.KBinsDiscretizer": "doc",
    "sklearn.preprocessing.add_dummy_feature": "doc",
    "sklearn.decomposition.DictionaryLearning": "doc",
    "sklearn.decomposition.MiniBatchSparsePCA": "doc",
    "sklearn.preprocessing.PolynomialFeatures": "doc",
    "sklearn.preprocessing.quantile_transform": "doc",
    "sklearn.preprocessing.FunctionTransformer": "doc",
    "sklearn.preprocessing.QuantileTransformer": "doc",
    "sklearn.decomposition.LatentDirichletAllocation": "doc",
    "sklearn.decomposition.non_negative_factorization": "doc",
    "sklearn.decomposition.MiniBatchDictionaryLearning": "doc",
    "sklearn.neighbors.NearestNeighbors": "doc",
    "sklearn.naive_bayes.GaussianNB": "doc",
    "sklearn.cluster.SpectralCoclustering": "doc",
    "sklearn.neighbors.KNeighborsClassifier": "doc",
    "sklearn.tree.ExtraTreeClassifier": "doc",
    "sklearn.compose": "doc",
    "sklearn.compose.ColumnTransformer": "doc",
    "sklearn.compose.make_column_selector": "doc",
    "sklearn.cluster.cluster_optics_dbscan": "doc",
    "sklearn.compose.make_column_transformer": "doc",
    "sklearn.compose.TransformedTargetRegressor": "doc",
    "sklearn.naive_bayes": "doc",
    "sklearn.tree.export_text": "doc",
    "sklearn.feature_extraction.FeatureHasher": "doc",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim": "doc",
    "sklearn.tree.DecisionTreeClassifier": "doc",
    "sklearn.dummy.DummyClassifier": "doc",
    "sklearn.datasets.fetch_lfw_pairs": "doc",
    "sklearn.datasets.make_biclusters": "doc",
    "sklearn.linear_model.RidgeClassifier": "doc",
    "sklearn.feature_extraction.text.CountVectorizer": "doc",
    "sklearn.feature_selection": "doc",
    "sklearn.feature_selection.RFE": "doc",
    "sklearn.feature_selection.RFECV": "doc",
    "sklearn.cluster.cluster_optics_xi": "doc",
    "sklearn.feature_selection.SelectFpr": "doc",
    "sklearn.feature_selection.SelectFdr": "doc",
    "sklearn.feature_selection.SelectFwe": "doc",
    "sklearn.feature_selection.SelectKBest": "doc",
    "sklearn.feature_selection.f_regression": "doc",
    "sklearn.feature_selection.SelectFromModel": "doc",
    "sklearn.feature_selection.VarianceThreshold": "doc",
    "sklearn.feature_selection.mutual_info_regression": "doc",
    "sklearn.feature_selection.GenericUnivariateSelect": "doc",
    "sklearn.cluster.AgglomerativeClustering": "doc",
    "sklearn.manifold": "doc",
    "sklearn.manifold.MDS": "doc",
    "sklearn.svm.l1_min_c": "doc",
    "sklearn.manifold.TSNE": "doc",
    "sklearn.manifold.Isomap": "doc",
    "sklearn.manifold.smacof": "doc",
    "sklearn.neighbors.BallTree": "doc",
    "sklearn.manifold.SpectralEmbedding": "doc",
    "sklearn.manifold.spectral_embedding": "doc",
    "sklearn.neighbors.RadiusNeighborsClassifier": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuit": "doc",
    "sklearn.gaussian_process.GaussianProcessClassifier": "doc",
    "sklearn.random_projection": "doc",
    "sklearn.linear_model.RidgeClassifierCV": "doc",
    "sklearn.random_projection.SparseRandomProjection": "doc",
    "sklearn.random_projection.GaussianRandomProjection": "doc",
    "sklearn.neighbors": "doc",
    "sklearn.cluster.KMeans": "doc",
    "sklearn.tree.plot_tree": "doc",
    "sklearn.cluster.k_means": "doc",
    "sklearn.neighbors.KDTree": "doc",
    "sklearn.cluster.MeanShift": "doc",
    "sklearn.datasets.make_circles": "doc",
    "sklearn.discriminant_analysis": "doc",
    "sklearn.linear_model.LassoLars": "doc",
    "sklearn.linear_model.enet_path": "doc",
    "sklearn.neighbors.DistanceMetric": "doc",
    "sklearn.cluster.SpectralClustering": "doc",
    "sklearn.cluster.estimate_bandwidth": "doc",
    "sklearn.neighbors.kneighbors_graph": "doc",
    "sklearn.datasets.dump_svmlight_file": "doc",
    "sklearn.datasets.load_breast_cancer": "doc",
    "sklearn.neighbors.KNeighborsRegressor": "doc",
    "sklearn.linear_model.LogisticRegression": "doc",
    "sklearn.linear_model.orthogonal_mp_gram": "doc",
    "sklearn.neighbors.KNeighborsTransformer": "doc",
    "sklearn.neighbors.radius_neighbors_graph": "doc",
    "sklearn.neighbors.RadiusNeighborsRegressor": "doc",
    "sklearn.neighbors.RadiusNeighborsTransformer": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuitCV": "doc",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis": "doc",
    "sklearn.feature_extraction.image.extract_patches_2d": "doc",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": "doc",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": "doc",
    "sklearn.cross_decomposition": "doc",
    "sklearn.cross_decomposition.CCA": "doc",
    "sklearn.cross_decomposition.PLSSVD": "doc",
    "sklearn.cluster.AffinityPropagation": "doc",
    "sklearn.cluster.spectral_clustering": "doc",
    "sklearn.datasets.make_classification": "doc",
    "sklearn.cross_decomposition.PLSCanonical": "doc",
    "sklearn.linear_model.MultiTaskElasticNet": "doc",
    "sklearn.cross_decomposition.PLSRegression": "doc",
    "sklearn.inspection": "doc",
    "sklearn.cluster.mean_shift": "doc",
    "sklearn.kernel_approximation": "doc",
    "sklearn.linear_model.ElasticNet": "doc",
    "sklearn.linear_model.lasso_path": "doc",
    "sklearn.cluster.FeatureAgglomeration": "doc",
    "sklearn.cluster.SpectralBiclustering": "doc",
    "sklearn.cluster.affinity_propagation": "doc",
    "sklearn.cluster.compute_optics_graph": "doc",
    "sklearn.datasets.fetch_olivetti_faces": "doc",
    "sklearn.datasets.make_low_rank_matrix": "doc",
    "sklearn.inspection.partial_dependence": "doc",
    "sklearn.kernel_approximation.Nystroem": "doc",
    "sklearn.kernel_approximation.RBFSampler": "doc",
    "sklearn.inspection.permutation_importance": "doc",
    "sklearn.linear_model.LogisticRegressionCV": "doc",
    "sklearn.inspection.plot_partial_dependence": "doc",
    "sklearn.inspection.PartialDependenceDisplay": "doc",
    "sklearn.kernel_approximation.SkewedChi2Sampler": "doc",
    "sklearn.datasets.make_multilabel_classification": "doc",
    "sklearn.kernel_approximation.AdditiveChi2Sampler": "doc",
    "sklearn.multioutput.MultiOutputClassifier": "doc",
    "sklearn.linear_model.MultiTaskElasticNetCV": "doc",
    "sklearn.multioutput": "doc",
    "sklearn.svm.OneClassSVM": "doc",
    "sklearn.linear_model.LassoLarsCV": "doc",
    "sklearn.linear_model.LassoLarsIC": "doc",
    "sklearn.multioutput.ClassifierChain": "doc",
    "sklearn.multioutput.MultiOutputRegressor": "doc",
    "sklearn.datasets.fetch_openml": "doc",
    "sklearn.linear_model.ElasticNetCV": "doc",
    "sklearn.datasets.fetch_california_housing": "doc",
    "sklearn.datasets.make_sparse_coded_signal": "doc",
    "sklearn.datasets.make_sparse_uncorrelated": "doc",
    "sklearn.feature_extraction.image.img_to_graph": "doc",
    "sklearn.impute.SimpleImputer": "doc",
    "sklearn.datasets.fetch_covtype": "doc",
    "sklearn.linear_model.ARDRegression": "doc",
    "sklearn.linear_model.BayesianRidge": "doc",
    "sklearn.feature_extraction.image.grid_to_graph": "doc",
    "sklearn.datasets.fetch_species_distributions": "doc",
    "sklearn.linear_model.PassiveAggressiveClassifier": "doc",
    "sklearn.datasets.make_checkerboard": "doc",
    "sklearn.linear_model.TheilSenRegressor": "doc",
    "sklearn.neural_network": "doc",
    "sklearn.datasets.make_friedman1": "doc",
    "sklearn.datasets.make_friedman2": "doc",
    "sklearn.datasets.make_friedman3": "doc",
    "sklearn.linear_model.MultiTaskLasso": "doc",
    "sklearn.linear_model.HuberRegressor": "doc",
    "sklearn.neural_network.MLPRegressor": "doc",
    "sklearn.feature_extraction.DictVectorizer": "doc",
    "sklearn.datasets.fetch_20newsgroups_vectorized": "doc",
    "sklearn.semi_supervised": "doc",
    "sklearn.mixture.GaussianMixture": "doc",
    "sklearn.datasets.make_regression": "doc",
    "sklearn.datasets.make_spd_matrix": "doc",
    "sklearn.datasets.make_swiss_roll": "doc",
    "sklearn.feature_extraction.text.TfidfVectorizer": "doc",
    "sklearn.gaussian_process": "doc",
    "sklearn.impute.IterativeImputer": "doc",
    "sklearn.impute.MissingIndicator": "doc",
    "sklearn.datasets.fetch_lfw_people": "doc",
    "sklearn.datasets.make_hastie_10_2": "doc",
    "sklearn.linear_model.LinearRegression": "doc",
    "sklearn.linear_model.MultiTaskLassoCV": "doc",
    "sklearn.linear_model.PoissonRegressor": "doc",
    "sklearn.linear_model.TweedieRegressor": "doc",
    "sklearn.linear_model.ridge_regression": "doc",
    "sklearn.feature_extraction.text.TfidfTransformer": "doc",
    "sklearn.gaussian_process.GaussianProcessRegressor": "doc",
    "sklearn.feature_extraction.text.HashingVectorizer": "doc",
    "sklearn.feature_extraction": "doc",
    "sklearn.feature_extraction.image.PatchExtractor": "doc",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d": "doc",
    "sklearn.tree.DecisionTreeRegressor": "doc",
    "sklearn.datasets.make_sparse_spd_matrix": "doc",
    "sklearn.mixture.BayesianGaussianMixture": "doc",
    "sklearn.datasets.make_gaussian_quantiles": "doc",
    "sklearn.linear_model.PassiveAggressiveRegressor": "doc",
    "sklearn.svm": "doc",
    "sklearn.tree": "doc",
    "sklearn.dummy": "doc",
    "sklearn.impute": "doc",
    "sklearn.cluster": "doc",
    "sklearn.mixture": "doc",
    "sklearn.svm.SVC": "doc",
    "sklearn.svm.SVR": "doc",
    "sklearn.datasets": "doc",
    "sklearn.svm.NuSVC": "doc",
    "sklearn.svm.NuSVR": "doc",
    "sklearn.linear_model": "doc",
    "sklearn.cluster.Birch": "doc",
    "sklearn.svm.LinearSVC": "doc",
    "sklearn.svm.LinearSVR": "doc",
    "sklearn.cluster.DBSCAN": "doc",
    "sklearn.cluster.OPTICS": "doc",
    "sklearn.cluster.dbscan": "doc",
    "sklearn.cluster.ward_tree": "doc",
    "sklearn.impute.KNNImputer": "doc",
    "sklearn.linear_model.Lars": "doc",
    "sklearn.linear_model.Ridge": "doc",
    "sklearn.linear_model.Lasso": "doc",
    "sklearn.datasets.fetch_rcv1": "doc",
    "sklearn.datasets.make_moons": "doc",
    "sklearn.linear_model.LarsCV": "doc",
    "sklearn.dummy.DummyRegressor": "doc",
    "sklearn.linear_model.RidgeCV": "doc",
    "sklearn.linear_model.LassoCV": "doc",
    "sklearn.datasets.make_s_curve": "doc",
    "sklearn.datasets.get_data_home": "doc",
    "sklearn.linear_model.lars_path": "doc",
    "sklearn.cluster.MiniBatchKMeans": "doc",
    "sklearn.datasets.fetch_kddcup99": "doc",
    "sklearn.linear_model.Perceptron": "doc",
    "sklearn.tree.ExtraTreeRegressor": "doc",
    "sklearn.datasets.clear_data_home": "doc",
    "sklearn.linear_model.SGDRegressor": "doc",
    "sklearn.datasets.fetch_20newsgroups": "doc",
    "sklearn.linear_model.GammaRegressor": "doc",
    "sklearn.linear_model.lars_path_gram": "doc",
    "sklearn.linear_model.RANSACRegressor": "doc"
  },
  "sklearn.externals.six": {
    "sklearn.utils.extmath.density": "doc",
    "sklearn.gaussian_process.kernels.CompoundKernel": "doc",
    "sklearn.gaussian_process.kernels.ConstantKernel": "doc",
    "sklearn.gaussian_process.kernels.DotProduct": "doc",
    "sklearn.gaussian_process.kernels.ExpSineSquared": "doc",
    "sklearn.gaussian_process.kernels.RBF": "doc",
    "sklearn.gaussian_process.kernels.Sum": "doc",
    "sklearn.gaussian_process.kernels.Kernel": "doc",
    "sklearn.gaussian_process.kernels.Matern": "doc",
    "sklearn.gaussian_process.kernels.Product": "doc",
    "sklearn.gaussian_process.kernels.WhiteKernel": "doc",
    "sklearn.gaussian_process.kernels.Exponentiation": "doc",
    "sklearn.gaussian_process.kernels.Hyperparameter": "doc",
    "sklearn.gaussian_process.kernels.PairwiseKernel": "doc",
    "sklearn.gaussian_process.kernels.RationalQuadratic": "doc",
    "sklearn.utils.extmath": "doc",
    "sklearn.utils.extmath.fast_logdet": "doc",
    "sklearn.utils.extmath.weighted_mode": "doc",
    "sklearn.utils.extmath.randomized_svd": "doc",
    "sklearn.utils.extmath.safe_sparse_dot": "doc",
    "sklearn.utils.extmath.randomized_range_finder": "doc",
    "sklearn.experimental": "doc",
    "sklearn.experimental.enable_iterative_imputer": "doc",
    "sklearn.experimental.enable_hist_gradient_boosting": "doc",
    "sklearn.decomposition.FactorAnalysis": "doc",
    "sklearn.svm": "doc",
    "sklearn.svm.SVC": "doc",
    "sklearn.svm.SVR": "doc",
    "sklearn.svm.NuSVC": "doc",
    "sklearn.svm.NuSVR": "doc",
    "sklearn.svm.l1_min_c": "doc",
    "sklearn.svm.LinearSVC": "doc",
    "sklearn.svm.LinearSVR": "doc",
    "sklearn.svm.OneClassSVM": "doc",
    "sklearn.utils._safe_indexing": "doc",
    "sklearn.exceptions": "doc",
    "sklearn.exceptions.NotFittedError": "doc",
    "sklearn.exceptions.FitFailedWarning": "doc",
    "sklearn.exceptions.EfficiencyWarning": "doc",
    "sklearn.exceptions.NonBLASDotWarning": "doc",
    "sklearn.exceptions.ConvergenceWarning": "doc",
    "sklearn.exceptions.DataConversionWarning": "doc",
    "sklearn.exceptions.ChangedBehaviorWarning": "doc",
    "sklearn.exceptions.UndefinedMetricWarning": "doc",
    "sklearn.exceptions.DataDimensionalityWarning": "doc",
    "sklearn.utils": "doc",
    "sklearn.utils.Bunch": "doc",
    "sklearn.utils.shuffle": "doc",
    "sklearn.utils.resample": "doc",
    "sklearn.utils.safe_sqr": "doc",
    "sklearn.utils.check_X_y": "doc",
    "sklearn.utils.indexable": "doc",
    "sklearn.utils.safe_mask": "doc",
    "sklearn.utils.deprecated": "doc",
    "sklearn.utils.multiclass": "doc",
    "sklearn.utils.validation": "doc",
    "sklearn.utils.check_array": "doc",
    "sklearn.utils.sparsefuncs": "doc",
    "sklearn.utils.check_scalar": "doc",
    "sklearn.utils.as_float_array": "doc",
    "sklearn.utils.murmurhash3_32": "doc",
    "sklearn.utils.all_estimators": "doc",
    "sklearn.utils.gen_even_slices": "doc",
    "sklearn.utils.estimator_checks": "doc",
    "sklearn.utils.parallel_backend": "doc",
    "sklearn.utils.assert_all_finite": "doc",
    "sklearn.utils.arrayfuncs.min_pos": "doc",
    "sklearn.utils.check_random_state": "doc",
    "sklearn.utils.estimator_html_repr": "doc",
    "sklearn.utils.check_consistent_length": "doc",
    "sklearn.utils.validation.check_memory": "doc",
    "sklearn.utils.validation.column_or_1d": "doc",
    "sklearn.utils.multiclass.is_multilabel": "doc",
    "sklearn.utils.multiclass.unique_labels": "doc",
    "sklearn.utils.multiclass.type_of_target": "doc",
    "sklearn.utils.register_parallel_backend": "doc",
    "sklearn.utils.validation.check_is_fitted": "doc",
    "sklearn.utils.validation.check_symmetric": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_row": "doc",
    "sklearn.utils.validation.has_fit_parameter": "doc",
    "sklearn.utils.sparsefuncs.inplace_row_scale": "doc",
    "sklearn.utils.sparsefuncs.mean_variance_axis": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_column": "doc",
    "sklearn.utils.estimator_checks.check_estimator": "doc",
    "sklearn.utils.sparsefuncs.inplace_column_scale": "doc",
    "sklearn.utils.class_weight.compute_class_weight": "doc",
    "sklearn.utils.random.sample_without_replacement": "doc",
    "sklearn.utils.class_weight.compute_sample_weight": "doc",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis": "doc",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale": "doc",
    "sklearn.utils.metaestimators.if_delegate_has_method": "doc",
    "sklearn.utils.graph_shortest_path.graph_shortest_path": "doc",
    "sklearn.utils.estimator_checks.parametrize_with_checks": "doc",
    "sklearn.utils.graph.single_source_shortest_path_length": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2": "doc",
    "sklearn.naive_bayes.CategoricalNB": "doc",
    "sklearn.metrics.confusion_matrix": "doc",
    "sklearn.metrics.pairwise.pairwise_kernels": "doc",
    "sklearn.feature_selection.SelectPercentile": "doc",
    "sklearn.mixture": "doc",
    "sklearn.decomposition.fastica": "doc",
    "sklearn.mixture.GaussianMixture": "doc",
    "sklearn.mixture.BayesianGaussianMixture": "doc",
    "sklearn.base.ClusterMixin": "doc",
    "sklearn.metrics.check_scoring": "doc",
    "sklearn.feature_selection.chi2": "doc",
    "sklearn.metrics": "doc",
    "sklearn.ensemble": "doc",
    "sklearn.metrics.auc": "doc",
    "sklearn.cluster.KMeans": "doc",
    "sklearn.cluster.k_means": "doc",
    "sklearn.metrics.f1_score": "doc",
    "sklearn.metrics.log_loss": "doc",
    "sklearn.metrics.r2_score": "doc",
    "sklearn.metrics.dcg_score": "doc",
    "sklearn.metrics.roc_curve": "doc",
    "sklearn.metrics.max_error": "doc",
    "sklearn.metrics.get_scorer": "doc",
    "sklearn.metrics.hinge_loss": "doc",
    "sklearn.metrics.ndcg_score": "doc",
    "sklearn.metrics.make_scorer": "doc",
    "sklearn.metrics.fbeta_score": "doc",
    "sklearn.metrics.hamming_loss": "doc",
    "sklearn.metrics.recall_score": "doc",
    "sklearn.metrics.jaccard_score": "doc",
    "sklearn.metrics.roc_auc_score": "doc",
    "sklearn.metrics.zero_one_loss": "doc",
    "sklearn.pipeline.FeatureUnion": "doc",
    "sklearn.linear_model.enet_path": "doc",
    "sklearn.metrics.accuracy_score": "doc",
    "sklearn.metrics.coverage_error": "doc",
    "sklearn.metrics.plot_roc_curve": "doc",
    "sklearn.metrics.precision_score": "doc",
    "sklearn.metrics.v_measure_score": "doc",
    "sklearn.metrics.consensus_score": "doc",
    "sklearn.metrics.RocCurveDisplay": "doc",
    "sklearn.ensemble.IsolationForest": "doc",
    "sklearn.ensemble.VotingRegressor": "doc",
    "sklearn.metrics.brier_score_loss": "doc",
    "sklearn.metrics.silhouette_score": "doc",
    "sklearn.ensemble.BaggingRegressor": "doc",
    "sklearn.ensemble.VotingClassifier": "doc",
    "sklearn.metrics.cohen_kappa_score": "doc",
    "sklearn.metrics.matthews_corrcoef": "doc",
    "sklearn.metrics.homogeneity_score": "doc",
    "sklearn.metrics.mutual_info_score": "doc",
    "sklearn.ensemble.AdaBoostRegressor": "doc",
    "sklearn.ensemble.BaggingClassifier": "doc",
    "sklearn.ensemble.StackingRegressor": "doc",
    "sklearn.metrics.mean_squared_error": "doc",
    "sklearn.metrics.label_ranking_loss": "doc",
    "sklearn.metrics.completeness_score": "doc",
    "sklearn.metrics.silhouette_samples": "doc",
    "sklearn.metrics.pairwise_distances": "doc",
    "sklearn.ensemble.AdaBoostClassifier": "doc",
    "sklearn.ensemble.StackingClassifier": "doc",
    "sklearn.metrics.mean_absolute_error": "doc",
    "sklearn.metrics.mean_gamma_deviance": "doc",
    "sklearn.metrics.adjusted_rand_score": "doc",
    "sklearn.metrics.pairwise.rbf_kernel": "doc",
    "sklearn.ensemble.ExtraTreesRegressor": "doc",
    "sklearn.metrics.davies_bouldin_score": "doc",
    "sklearn.metrics.pairwise.chi2_kernel": "doc",
    "sklearn.ensemble.ExtraTreesClassifier": "doc",
    "sklearn.ensemble.RandomTreesEmbedding": "doc",
    "sklearn.metrics.classification_report": "doc",
    "sklearn.metrics.median_absolute_error": "doc",
    "sklearn.metrics.mean_poisson_deviance": "doc",
    "sklearn.metrics.mean_tweedie_deviance": "doc",
    "sklearn.metrics.fowlkes_mallows_score": "doc",
    "sklearn.metrics.plot_confusion_matrix": "doc",
    "sklearn.ensemble.RandomForestRegressor": "doc",
    "sklearn.metrics.precision_recall_curve": "doc",
    "sklearn.metrics.mean_squared_log_error": "doc",
    "sklearn.metrics.pairwise.linear_kernel": "doc",
    "sklearn.metrics.ConfusionMatrixDisplay": "doc",
    "sklearn.metrics.PrecisionRecallDisplay": "doc",
    "sklearn.ensemble.RandomForestClassifier": "doc",
    "sklearn.metrics.average_precision_score": "doc",
    "sklearn.metrics.balanced_accuracy_score": "doc",
    "sklearn.metrics.calinski_harabasz_score": "doc",
    "sklearn.metrics.pairwise.kernel_metrics": "doc",
    "sklearn.metrics.pairwise.sigmoid_kernel": "doc",
    "sklearn.metrics.explained_variance_score": "doc",
    "sklearn.metrics.pairwise.cosine_distances": "doc",
    "sklearn.metrics.pairwise.distance_metrics": "doc",
    "sklearn.metrics.pairwise.laplacian_kernel": "doc",
    "sklearn.metrics.pairwise.paired_distances": "doc",
    "sklearn.metrics.pairwise_distances_argmin": "doc",
    "sklearn.ensemble.GradientBoostingRegressor": "doc",
    "sklearn.metrics.adjusted_mutual_info_score": "doc",
    "sklearn.metrics.cluster.contingency_matrix": "doc",
    "sklearn.metrics.pairwise.cosine_similarity": "doc",
    "sklearn.metrics.pairwise.polynomial_kernel": "doc",
    "sklearn.metrics.pairwise_distances_chunked": "doc",
    "sklearn.ensemble.GradientBoostingClassifier": "doc",
    "sklearn.metrics.multilabel_confusion_matrix": "doc",
    "sklearn.metrics.plot_precision_recall_curve": "doc",
    "sklearn.metrics.normalized_mutual_info_score": "doc",
    "sklearn.metrics.pairwise.euclidean_distances": "doc",
    "sklearn.metrics.pairwise.haversine_distances": "doc",
    "sklearn.metrics.pairwise.manhattan_distances": "doc",
    "sklearn.metrics.pairwise.additive_chi2_kernel": "doc",
    "sklearn.metrics.pairwise_distances_argmin_min": "doc",
    "sklearn.ensemble.HistGradientBoostingRegressor": "doc",
    "sklearn.ensemble.HistGradientBoostingClassifier": "doc",
    "sklearn.metrics.precision_recall_fscore_support": "doc",
    "sklearn.metrics.pairwise.nan_euclidean_distances": "doc",
    "sklearn.metrics.pairwise.paired_cosine_distances": "doc",
    "sklearn.metrics.homogeneity_completeness_v_measure": "doc",
    "sklearn.metrics.pairwise.paired_euclidean_distances": "doc",
    "sklearn.metrics.pairwise.paired_manhattan_distances": "doc",
    "sklearn.metrics.label_ranking_average_precision_score": "doc",
    "sklearn.naive_bayes.GaussianNB": "doc",
    "sklearn.isotonic": "doc",
    "sklearn.base.DensityMixin": "doc",
    "sklearn.isotonic.check_increasing": "doc",
    "sklearn.isotonic.IsotonicRegression": "doc",
    "sklearn.isotonic.isotonic_regression": "doc",
    "sklearn.feature_extraction.text.CountVectorizer": "doc",
    "sklearn.feature_extraction.text.TfidfVectorizer": "doc",
    "sklearn.feature_extraction.text.TfidfTransformer": "doc",
    "sklearn.feature_extraction.text.HashingVectorizer": "doc",
    "sklearn.decomposition.dict_learning": "doc",
    "sklearn.feature_selection.f_classif": "doc",
    "sklearn.model_selection.ParameterSampler": "doc",
    "sklearn.linear_model.orthogonal_mp": "doc",
    "sklearn.model_selection.RepeatedKFold": "doc",
    "sklearn.feature_extraction.FeatureHasher": "doc",
    "sklearn.multiclass": "doc",
    "sklearn.multiclass.OneVsOneClassifier": "doc",
    "sklearn.multiclass.OneVsRestClassifier": "doc",
    "sklearn.multiclass.OutputCodeClassifier": "doc",
    "sklearn.decomposition.IncrementalPCA": "doc",
    "sklearn.base.BiclusterMixin": "doc",
    "sklearn.base.RegressorMixin": "doc",
    "sklearn.multioutput.RegressorChain": "doc",
    "sklearn.inspection": "doc",
    "sklearn.cluster.Birch": "doc",
    "sklearn.cluster.mean_shift": "doc",
    "sklearn.linear_model.Ridge": "doc",
    "sklearn.linear_model.Lasso": "doc",
    "sklearn.preprocessing.scale": "doc",
    "sklearn.base.ClassifierMixin": "doc",
    "sklearn.linear_model.ElasticNet": "doc",
    "sklearn.datasets.make_spd_matrix": "doc",
    "sklearn.inspection.partial_dependence": "doc",
    "sklearn.inspection.permutation_importance": "doc",
    "sklearn.inspection.plot_partial_dependence": "doc",
    "sklearn.inspection.PartialDependenceDisplay": "doc",
    "sklearn.feature_extraction.image.extract_patches_2d": "doc",
    "sklearn.preprocessing.power_transform": "doc",
    "sklearn.naive_bayes": "doc",
    "sklearn.tree.export_text": "doc",
    "sklearn.naive_bayes.BernoulliNB": "doc",
    "sklearn.naive_bayes.ComplementNB": "doc",
    "sklearn.naive_bayes.MultinomialNB": "doc",
    "sklearn.model_selection.LeaveOneOut": "doc",
    "sklearn.cluster.cluster_optics_xi": "doc",
    "sklearn.base.TransformerMixin": "doc",
    "sklearn.tree.export_graphviz": "doc",
    "sklearn.manifold.trustworthiness": "doc",
    "sklearn.neighbors.NearestCentroid": "doc",
    "sklearn.model_selection.LeavePGroupsOut": "doc",
    "sklearn.tree.ExtraTreeClassifier": "doc",
    "sklearn.preprocessing.MaxAbsScaler": "doc",
    "sklearn.preprocessing.maxabs_scale": "doc",
    "sklearn.preprocessing.robust_scale": "doc",
    "sklearn.preprocessing.PowerTransformer": "doc",
    "sklearn.decomposition.dict_learning_online": "doc",
    "sklearn.feature_selection.f_regression": "doc",
    "sklearn.kernel_ridge": "doc",
    "sklearn.datasets.make_circles": "doc",
    "sklearn.kernel_ridge.KernelRidge": "doc",
    "sklearn.neighbors.NearestNeighbors": "doc",
    "sklearn.feature_selection.SelectorMixin": "doc",
    "sklearn.cluster.dbscan": "doc",
    "sklearn.manifold.Isomap": "doc",
    "sklearn.manifold.smacof": "doc",
    "sklearn.linear_model.LarsCV": "doc",
    "sklearn.linear_model.ElasticNetCV": "doc",
    "sklearn.preprocessing.MinMaxScaler": "doc",
    "sklearn.preprocessing.minmax_scale": "doc",
    "sklearn.neighbors.KernelDensity": "doc",
    "sklearn.discriminant_analysis": "doc",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": "doc",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": "doc",
    "sklearn.feature_selection": "doc",
    "sklearn.feature_selection.RFE": "doc",
    "sklearn.feature_selection.RFECV": "doc",
    "sklearn.datasets.make_checkerboard": "doc",
    "sklearn.feature_selection.SelectFpr": "doc",
    "sklearn.feature_selection.SelectFdr": "doc",
    "sklearn.feature_selection.SelectFwe": "doc",
    "sklearn.feature_selection.SelectKBest": "doc",
    "sklearn.linear_model.TheilSenRegressor": "doc",
    "sklearn.feature_selection.SelectFromModel": "doc",
    "sklearn.feature_selection.VarianceThreshold": "doc",
    "sklearn.feature_selection.mutual_info_classif": "doc",
    "sklearn.feature_selection.mutual_info_regression": "doc",
    "sklearn.feature_selection.GenericUnivariateSelect": "doc",
    "sklearn.decomposition": "doc",
    "sklearn.preprocessing": "doc",
    "sklearn.decomposition.NMF": "doc",
    "sklearn.decomposition.PCA": "doc",
    "sklearn.base.BaseEstimator": "doc",
    "sklearn.base.is_classifier": "doc",
    "sklearn.decomposition.FastICA": "doc",
    "sklearn.preprocessing.binarize": "doc",
    "sklearn.decomposition.KernelPCA": "doc",
    "sklearn.decomposition.SparsePCA": "doc",
    "sklearn.preprocessing.Binarizer": "doc",
    "sklearn.preprocessing.normalize": "doc",
    "sklearn.preprocessing.Normalizer": "doc",
    "sklearn.decomposition.SparseCoder": "doc",
    "sklearn.decomposition.TruncatedSVD": "doc",
    "sklearn.linear_model.SGDClassifier": "doc",
    "sklearn.linear_model.ARDRegression": "doc",
    "sklearn.linear_model.BayesianRidge": "doc",
    "sklearn.preprocessing.LabelEncoder": "doc",
    "sklearn.preprocessing.RobustScaler": "doc",
    "sklearn.decomposition.sparse_encode": "doc",
    "sklearn.preprocessing.OneHotEncoder": "doc",
    "sklearn.neural_network.MLPClassifier": "doc",
    "sklearn.preprocessing.KernelCenterer": "doc",
    "sklearn.preprocessing.LabelBinarizer": "doc",
    "sklearn.preprocessing.OrdinalEncoder": "doc",
    "sklearn.preprocessing.StandardScaler": "doc",
    "sklearn.preprocessing.label_binarize": "doc",
    "sklearn.preprocessing.KBinsDiscretizer": "doc",
    "sklearn.preprocessing.add_dummy_feature": "doc",
    "sklearn.decomposition.DictionaryLearning": "doc",
    "sklearn.decomposition.MiniBatchSparsePCA": "doc",
    "sklearn.preprocessing.PolynomialFeatures": "doc",
    "sklearn.preprocessing.quantile_transform": "doc",
    "sklearn.cross_decomposition.PLSRegression": "doc",
    "sklearn.preprocessing.FunctionTransformer": "doc",
    "sklearn.preprocessing.MultiLabelBinarizer": "doc",
    "sklearn.preprocessing.QuantileTransformer": "doc",
    "sklearn.decomposition.LatentDirichletAllocation": "doc",
    "sklearn.decomposition.non_negative_factorization": "doc",
    "sklearn.decomposition.MiniBatchDictionaryLearning": "doc",
    "sklearn.model_selection.ParameterGrid": "doc",
    "sklearn.base": "doc",
    "sklearn.tree": "doc",
    "sklearn.dummy": "doc",
    "sklearn.impute": "doc",
    "sklearn.cluster": "doc",
    "sklearn.compose": "doc",
    "sklearn.datasets": "doc",
    "sklearn.manifold": "doc",
    "sklearn.pipeline": "doc",
    "sklearn.neighbors": "doc",
    "sklearn.base.clone": "doc",
    "sklearn.covariance": "doc",
    "sklearn.calibration": "doc",
    "sklearn.multioutput": "doc",
    "sklearn.linear_model": "doc",
    "sklearn.manifold.MDS": "doc",
    "sklearn.manifold.TSNE": "doc",
    "sklearn.cluster.DBSCAN": "doc",
    "sklearn.cluster.OPTICS": "doc",
    "sklearn.covariance.OAS": "doc",
    "sklearn.covariance.oas": "doc",
    "sklearn.neural_network": "doc",
    "sklearn.tree.plot_tree": "doc",
    "sklearn.model_selection": "doc",
    "sklearn.semi_supervised": "doc",
    "sklearn.gaussian_process": "doc",
    "sklearn.neighbors.KDTree": "doc",
    "sklearn.base.is_regressor": "doc",
    "sklearn.cluster.MeanShift": "doc",
    "sklearn.cluster.ward_tree": "doc",
    "sklearn.impute.KNNImputer": "doc",
    "sklearn.linear_model.Lars": "doc",
    "sklearn.pipeline.Pipeline": "doc",
    "sklearn.random_projection": "doc",
    "sklearn.datasets.load_iris": "doc",
    "sklearn.datasets.load_wine": "doc",
    "sklearn.feature_extraction": "doc",
    "sklearn.neighbors.BallTree": "doc",
    "sklearn.cross_decomposition": "doc",
    "sklearn.datasets.fetch_rcv1": "doc",
    "sklearn.datasets.load_files": "doc",
    "sklearn.datasets.make_blobs": "doc",
    "sklearn.datasets.make_moons": "doc",
    "sklearn.pipeline.make_union": "doc",
    "sklearn.covariance.MinCovDet": "doc",
    "sklearn.datasets.load_boston": "doc",
    "sklearn.datasets.load_digits": "doc",
    "sklearn.dummy.DummyRegressor": "doc",
    "sklearn.impute.SimpleImputer": "doc",
    "sklearn.kernel_approximation": "doc",
    "sklearn.linear_model.RidgeCV": "doc",
    "sklearn.linear_model.LassoCV": "doc",
    "sklearn.covariance.LedoitWolf": "doc",
    "sklearn.datasets.fetch_openml": "doc",
    "sklearn.datasets.make_s_curve": "doc",
    "sklearn.dummy.DummyClassifier": "doc",
    "sklearn.model_selection.KFold": "doc",
    "sklearn.covariance.ledoit_wolf": "doc",
    "sklearn.datasets.fetch_covtype": "doc",
    "sklearn.datasets.get_data_home": "doc",
    "sklearn.datasets.load_diabetes": "doc",
    "sklearn.datasets.load_linnerud": "doc",
    "sklearn.linear_model.LassoLars": "doc",
    "sklearn.linear_model.lars_path": "doc",
    "sklearn.pipeline.make_pipeline": "doc",
    "sklearn.cluster.MiniBatchKMeans": "doc",
    "sklearn.cross_decomposition.CCA": "doc",
    "sklearn.datasets.fetch_kddcup99": "doc",
    "sklearn.datasets.make_friedman1": "doc",
    "sklearn.datasets.make_friedman2": "doc",
    "sklearn.datasets.make_friedman3": "doc",
    "sklearn.impute.IterativeImputer": "doc",
    "sklearn.impute.MissingIndicator": "doc",
    "sklearn.linear_model.Perceptron": "doc",
    "sklearn.linear_model.lasso_path": "doc",
    "sklearn.tree.ExtraTreeRegressor": "doc",
    "sklearn.datasets.clear_data_home": "doc",
    "sklearn.datasets.fetch_lfw_pairs": "doc",
    "sklearn.datasets.make_biclusters": "doc",
    "sklearn.datasets.make_regression": "doc",
    "sklearn.datasets.make_swiss_roll": "doc",
    "sklearn.linear_model.LassoLarsCV": "doc",
    "sklearn.linear_model.LassoLarsIC": "doc",
    "sklearn.model_selection.check_cv": "doc",
    "sklearn.neighbors.DistanceMetric": "doc",
    "sklearn.compose.ColumnTransformer": "doc",
    "sklearn.covariance.GraphicalLasso": "doc",
    "sklearn.datasets.fetch_lfw_people": "doc",
    "sklearn.datasets.make_hastie_10_2": "doc",
    "sklearn.linear_model.SGDRegressor": "doc",
    "sklearn.model_selection.LeavePOut": "doc",
    "sklearn.cluster.SpectralClustering": "doc",
    "sklearn.cluster.estimate_bandwidth": "doc",
    "sklearn.covariance.graphical_lasso": "doc",
    "sklearn.cross_decomposition.PLSSVD": "doc",
    "sklearn.datasets.load_sample_image": "doc",
    "sklearn.manifold.SpectralEmbedding": "doc",
    "sklearn.model_selection.GroupKFold": "doc",
    "sklearn.neighbors.kneighbors_graph": "doc",
    "sklearn.tree.DecisionTreeRegressor": "doc",
    "sklearn.cluster.AffinityPropagation": "doc",
    "sklearn.cluster.spectral_clustering": "doc",
    "sklearn.covariance.EllipticEnvelope": "doc",
    "sklearn.covariance.GraphicalLassoCV": "doc",
    "sklearn.covariance.ShrunkCovariance": "doc",
    "sklearn.datasets.dump_svmlight_file": "doc",
    "sklearn.datasets.fetch_20newsgroups": "doc",
    "sklearn.datasets.load_breast_cancer": "doc",
    "sklearn.datasets.load_sample_images": "doc",
    "sklearn.datasets.load_svmlight_file": "doc",
    "sklearn.linear_model.MultiTaskLasso": "doc",
    "sklearn.linear_model.HuberRegressor": "doc",
    "sklearn.linear_model.GammaRegressor": "doc",
    "sklearn.linear_model.lars_path_gram": "doc",
    "sklearn.manifold.spectral_embedding": "doc",
    "sklearn.multioutput.ClassifierChain": "doc",
    "sklearn.neural_network.BernoulliRBM": "doc",
    "sklearn.neural_network.MLPRegressor": "doc",
    "sklearn.tree.DecisionTreeClassifier": "doc",
    "sklearn.cluster.FeatureAgglomeration": "doc",
    "sklearn.cluster.SpectralBiclustering": "doc",
    "sklearn.cluster.SpectralCoclustering": "doc",
    "sklearn.cluster.affinity_propagation": "doc",
    "sklearn.cluster.compute_optics_graph": "doc",
    "sklearn.compose.make_column_selector": "doc",
    "sklearn.covariance.shrunk_covariance": "doc",
    "sklearn.datasets.load_svmlight_files": "doc",
    "sklearn.datasets.make_classification": "doc",
    "sklearn.linear_model.RidgeClassifier": "doc",
    "sklearn.linear_model.RANSACRegressor": "doc",
    "sklearn.model_selection.ShuffleSplit": "doc",
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.neighbors.LocalOutlierFactor": "doc",
    "sklearn.calibration.calibration_curve": "doc",
    "sklearn.cluster.cluster_optics_dbscan": "doc",
    "sklearn.datasets.fetch_olivetti_faces": "doc",
    "sklearn.datasets.make_low_rank_matrix": "doc",
    "sklearn.kernel_approximation.Nystroem": "doc",
    "sklearn.linear_model.LinearRegression": "doc",
    "sklearn.linear_model.MultiTaskLassoCV": "doc",
    "sklearn.linear_model.PoissonRegressor": "doc",
    "sklearn.linear_model.TweedieRegressor": "doc",
    "sklearn.linear_model.ridge_regression": "doc",
    "sklearn.neighbors.KNeighborsRegressor": "doc",
    "sklearn.covariance.EmpiricalCovariance": "doc",
    "sklearn.linear_model.RidgeClassifierCV": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.learning_curve": "doc",
    "sklearn.neighbors.KNeighborsClassifier": "doc",
    "sklearn.semi_supervised.LabelSpreading": "doc",
    "sklearn.cluster.AgglomerativeClustering": "doc",
    "sklearn.compose.make_column_transformer": "doc",
    "sklearn.covariance.empirical_covariance": "doc",
    "sklearn.datasets.make_sparse_spd_matrix": "doc",
    "sklearn.kernel_approximation.RBFSampler": "doc",
    "sklearn.linear_model.LogisticRegression": "doc",
    "sklearn.linear_model.orthogonal_mp_gram": "doc",
    "sklearn.manifold.LocallyLinearEmbedding": "doc",
    "sklearn.model_selection.PredefinedSplit": "doc",
    "sklearn.model_selection.StratifiedKFold": "doc",
    "sklearn.model_selection.TimeSeriesSplit": "doc",
    "sklearn.model_selection.cross_val_score": "doc",
    "sklearn.neighbors.KNeighborsTransformer": "doc",
    "sklearn.cross_decomposition.PLSCanonical": "doc",
    "sklearn.datasets.make_gaussian_quantiles": "doc",
    "sklearn.linear_model.MultiTaskElasticNet": "doc",
    "sklearn.model_selection.LeaveOneGroupOut": "doc",
    "sklearn.model_selection.train_test_split": "doc",
    "sklearn.model_selection.validation_curve": "doc",
    "sklearn.multioutput.MultiOutputRegressor": "doc",
    "sklearn.neighbors.radius_neighbors_graph": "doc",
    "sklearn.semi_supervised.LabelPropagation": "doc",
    "sklearn.datasets.fetch_california_housing": "doc",
    "sklearn.datasets.make_sparse_coded_signal": "doc",
    "sklearn.datasets.make_sparse_uncorrelated": "doc",
    "sklearn.feature_extraction.DictVectorizer": "doc",
    "sklearn.linear_model.LogisticRegressionCV": "doc",
    "sklearn.manifold.locally_linear_embedding": "doc",
    "sklearn.model_selection.GroupShuffleSplit": "doc",
    "sklearn.model_selection.cross_val_predict": "doc",
    "sklearn.multioutput.MultiOutputClassifier": "doc",
    "sklearn.calibration.CalibratedClassifierCV": "doc",
    "sklearn.compose.TransformedTargetRegressor": "doc",
    "sklearn.linear_model.MultiTaskElasticNetCV": "doc",
    "sklearn.model_selection.RandomizedSearchCV": "doc",
    "sklearn.neighbors.RadiusNeighborsRegressor": "doc",
    "sklearn.neighbors.RadiusNeighborsClassifier": "doc",
    "sklearn.datasets.fetch_species_distributions": "doc",
    "sklearn.neighbors.RadiusNeighborsTransformer": "doc",
    "sklearn.feature_extraction.image.img_to_graph": "doc",
    "sklearn.datasets.fetch_20newsgroups_vectorized": "doc",
    "sklearn.feature_extraction.image.grid_to_graph": "doc",
    "sklearn.kernel_approximation.SkewedChi2Sampler": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuit": "doc",
    "sklearn.model_selection.StratifiedShuffleSplit": "doc",
    "sklearn.model_selection.permutation_test_score": "doc",
    "sklearn.datasets.make_multilabel_classification": "doc",
    "sklearn.feature_extraction.image.PatchExtractor": "doc",
    "sklearn.linear_model.PassiveAggressiveRegressor": "doc",
    "sklearn.model_selection.RepeatedStratifiedKFold": "doc",
    "sklearn.kernel_approximation.AdditiveChi2Sampler": "doc",
    "sklearn.linear_model.PassiveAggressiveClassifier": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuitCV": "doc",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis": "doc",
    "sklearn.random_projection.SparseRandomProjection": "doc",
    "sklearn.gaussian_process.GaussianProcessRegressor": "doc",
    "sklearn.gaussian_process.GaussianProcessClassifier": "doc",
    "sklearn.random_projection.GaussianRandomProjection": "doc",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim": "doc",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d": "doc"
  },
  "sklearn.metrics.jaccard_similarity_score": {
    "sklearn.metrics.jaccard_score": "doc",
    "sklearn.metrics.accuracy_score": "doc",
    "sklearn.metrics.balanced_accuracy_score": "doc",
    "sklearn.metrics.pairwise.cosine_similarity": "doc",
    "sklearn.metrics.adjusted_mutual_info_score": "doc",
    "sklearn.metrics.davies_bouldin_score": "doc",
    "sklearn.metrics.normalized_mutual_info_score": "doc",
    "sklearn.metrics.recall_score": "doc",
    "sklearn.metrics.roc_auc_score": "doc",
    "sklearn.metrics.precision_score": "doc",
    "sklearn.metrics.v_measure_score": "doc",
    "sklearn.metrics.silhouette_score": "doc",
    "sklearn.metrics.cohen_kappa_score": "doc",
    "sklearn.metrics.homogeneity_score": "doc",
    "sklearn.metrics.mutual_info_score": "doc",
    "sklearn.metrics.adjusted_rand_score": "doc",
    "sklearn.metrics.classification_report": "doc",
    "sklearn.metrics.fowlkes_mallows_score": "doc",
    "sklearn.metrics.average_precision_score": "doc",
    "sklearn.metrics.calinski_harabasz_score": "doc",
    "sklearn.metrics.explained_variance_score": "doc",
    "sklearn.metrics.consensus_score": "doc",
    "sklearn.metrics.label_ranking_average_precision_score": "doc",
    "sklearn.metrics.r2_score": "doc",
    "sklearn.metrics.dcg_score": "doc",
    "sklearn.metrics.ndcg_score": "doc",
    "sklearn.metrics.make_scorer": "doc",
    "sklearn.metrics.fbeta_score": "doc",
    "sklearn.metrics.mean_squared_error": "doc",
    "sklearn.metrics.completeness_score": "doc",
    "sklearn.metrics.f1_score": "doc",
    "sklearn.metrics.get_scorer": "doc",
    "sklearn.metrics.RocCurveDisplay": "doc",
    "sklearn.metrics.brier_score_loss": "doc",
    "sklearn.metrics.mean_absolute_error": "doc",
    "sklearn.metrics.median_absolute_error": "doc",
    "sklearn.metrics.pairwise.paired_distances": "doc",
    "sklearn.metrics.pairwise.haversine_distances": "doc",
    "sklearn.metrics.precision_recall_fscore_support": "doc",
    "sklearn.metrics.plot_precision_recall_curve": "doc",
    "sklearn.metrics.max_error": "doc",
    "sklearn.metrics.hamming_loss": "doc",
    "sklearn.metrics.check_scoring": "doc",
    "sklearn.metrics.plot_roc_curve": "doc",
    "sklearn.metrics.matthews_corrcoef": "doc",
    "sklearn.metrics.label_ranking_loss": "doc",
    "sklearn.metrics.pairwise_distances": "doc",
    "sklearn.metrics.mean_gamma_deviance": "doc",
    "sklearn.metrics.pairwise.rbf_kernel": "doc",
    "sklearn.metrics.pairwise.chi2_kernel": "doc",
    "sklearn.metrics.precision_recall_curve": "doc",
    "sklearn.metrics.pairwise.linear_kernel": "doc",
    "sklearn.metrics.ConfusionMatrixDisplay": "doc",
    "sklearn.metrics.pairwise.kernel_metrics": "doc",
    "sklearn.metrics.pairwise.sigmoid_kernel": "doc",
    "sklearn.metrics.pairwise.cosine_distances": "doc",
    "sklearn.metrics.pairwise.distance_metrics": "doc",
    "sklearn.metrics.pairwise.laplacian_kernel": "doc",
    "sklearn.metrics.pairwise.pairwise_kernels": "doc",
    "sklearn.metrics.pairwise.polynomial_kernel": "doc",
    "sklearn.metrics.pairwise.euclidean_distances": "doc",
    "sklearn.metrics.pairwise.manhattan_distances": "doc",
    "sklearn.metrics.pairwise.additive_chi2_kernel": "doc",
    "sklearn.metrics.pairwise.nan_euclidean_distances": "doc",
    "sklearn.metrics.pairwise.paired_cosine_distances": "doc",
    "sklearn.metrics.pairwise.paired_euclidean_distances": "doc",
    "sklearn.metrics.pairwise.paired_manhattan_distances": "doc",
    "sklearn.metrics.pairwise_distances_chunked": "doc",
    "sklearn.metrics.homogeneity_completeness_v_measure": "doc",
    "sklearn.metrics": "doc",
    "sklearn.metrics.auc": "doc",
    "sklearn.metrics.log_loss": "doc",
    "sklearn.metrics.roc_curve": "doc",
    "sklearn.metrics.hinge_loss": "doc",
    "sklearn.metrics.zero_one_loss": "doc",
    "sklearn.metrics.coverage_error": "doc",
    "sklearn.metrics.confusion_matrix": "doc",
    "sklearn.metrics.silhouette_samples": "doc",
    "sklearn.metrics.mean_poisson_deviance": "doc",
    "sklearn.metrics.mean_tweedie_deviance": "doc",
    "sklearn.metrics.plot_confusion_matrix": "doc",
    "sklearn.metrics.mean_squared_log_error": "doc",
    "sklearn.metrics.PrecisionRecallDisplay": "doc",
    "sklearn.metrics.pairwise_distances_argmin": "doc",
    "sklearn.metrics.cluster.contingency_matrix": "doc",
    "sklearn.metrics.multilabel_confusion_matrix": "doc",
    "sklearn.metrics.pairwise_distances_argmin_min": "doc",
    "sklearn.utils.all_estimators": "doc",
    "sklearn.utils.extmath.safe_sparse_dot": "doc",
    "sklearn.utils.validation.check_symmetric": "doc",
    "sklearn.utils.sparsefuncs.inplace_row_scale": "doc",
    "sklearn.utils.estimator_checks.check_estimator": "doc",
    "sklearn.utils.sparsefuncs.inplace_column_scale": "doc",
    "sklearn.utils.metaestimators.if_delegate_has_method": "doc",
    "sklearn.utils.check_scalar": "doc",
    "sklearn.utils.assert_all_finite": "doc",
    "sklearn.utils.check_random_state": "doc",
    "sklearn.utils.extmath.randomized_svd": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_row": "doc",
    "sklearn.utils.validation.has_fit_parameter": "doc",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale": "doc",
    "sklearn.utils.resample": "doc",
    "sklearn.utils.safe_sqr": "doc",
    "sklearn.utils.safe_mask": "doc",
    "sklearn.utils.validation": "doc",
    "sklearn.utils.check_array": "doc",
    "sklearn.utils.as_float_array": "doc",
    "sklearn.utils.validation.check_memory": "doc",
    "sklearn.utils.validation.column_or_1d": "doc",
    "sklearn.utils.validation.check_is_fitted": "doc",
    "sklearn.utils.sparsefuncs.mean_variance_axis": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_column": "doc",
    "sklearn.utils.class_weight.compute_class_weight": "doc",
    "sklearn.utils.class_weight.compute_sample_weight": "doc",
    "sklearn.utils.graph_shortest_path.graph_shortest_path": "doc",
    "sklearn.utils.estimator_checks.parametrize_with_checks": "doc",
    "sklearn.datasets.make_circles": "doc",
    "sklearn.datasets.load_svmlight_file": "doc",
    "sklearn.model_selection.cross_val_score": "doc",
    "sklearn.multiclass.OneVsRestClassifier": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2": "doc",
    "sklearn.preprocessing.maxabs_scale": "doc",
    "sklearn.preprocessing.label_binarize": "doc",
    "sklearn.utils.multiclass": "doc",
    "sklearn.utils.sparsefuncs": "doc",
    "sklearn.utils._safe_indexing": "doc",
    "sklearn.utils.extmath.density": "doc",
    "sklearn.utils.gen_even_slices": "doc",
    "sklearn.utils.estimator_checks": "doc",
    "sklearn.utils.arrayfuncs.min_pos": "doc",
    "sklearn.utils.estimator_html_repr": "doc",
    "sklearn.utils.extmath.fast_logdet": "doc",
    "sklearn.utils.extmath.weighted_mode": "doc",
    "sklearn.utils.multiclass.is_multilabel": "doc",
    "sklearn.utils.multiclass.unique_labels": "doc",
    "sklearn.utils.multiclass.type_of_target": "doc",
    "sklearn.utils.extmath.randomized_range_finder": "doc",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis": "doc",
    "sklearn.datasets.clear_data_home": "doc",
    "sklearn.datasets.make_biclusters": "doc",
    "sklearn.datasets.load_sample_image": "doc",
    "sklearn.datasets.load_sample_images": "doc",
    "sklearn.datasets.load_svmlight_files": "doc",
    "sklearn.utils.random.sample_without_replacement": "doc",
    "sklearn.utils.graph.single_source_shortest_path_length": "doc",
    "sklearn.multiclass": "doc",
    "sklearn.multiclass.OneVsOneClassifier": "doc",
    "sklearn.multiclass.OutputCodeClassifier": "doc",
    "sklearn.preprocessing.minmax_scale": "doc",
    "sklearn.preprocessing.robust_scale": "doc",
    "sklearn.preprocessing.LabelBinarizer": "doc",
    "sklearn.preprocessing.OrdinalEncoder": "doc",
    "sklearn.preprocessing.power_transform": "doc",
    "sklearn.feature_selection.SelectorMixin": "doc",
    "sklearn.preprocessing.add_dummy_feature": "doc",
    "sklearn.preprocessing.quantile_transform": "doc",
    "sklearn.utils": "doc",
    "sklearn.utils.Bunch": "doc",
    "sklearn.utils.extmath": "doc",
    "sklearn.utils.shuffle": "doc",
    "sklearn.utils.check_X_y": "doc",
    "sklearn.utils.indexable": "doc",
    "sklearn.utils.deprecated": "doc",
    "sklearn.utils.murmurhash3_32": "doc",
    "sklearn.utils.parallel_backend": "doc",
    "sklearn.utils.check_consistent_length": "doc",
    "sklearn.utils.register_parallel_backend": "doc",
    "sklearn.covariance": "doc",
    "sklearn.covariance.OAS": "doc",
    "sklearn.covariance.oas": "doc",
    "sklearn.covariance.MinCovDet": "doc",
    "sklearn.covariance.LedoitWolf": "doc",
    "sklearn.covariance.ledoit_wolf": "doc",
    "sklearn.covariance.GraphicalLasso": "doc",
    "sklearn.covariance.graphical_lasso": "doc",
    "sklearn.covariance.EllipticEnvelope": "doc",
    "sklearn.covariance.GraphicalLassoCV": "doc",
    "sklearn.covariance.ShrunkCovariance": "doc",
    "sklearn.covariance.shrunk_covariance": "doc",
    "sklearn.covariance.EmpiricalCovariance": "doc",
    "sklearn.covariance.empirical_covariance": "doc",
    "sklearn.datasets.load_iris": "doc",
    "sklearn.datasets.load_digits": "doc",
    "sklearn.datasets.load_diabetes": "doc",
    "sklearn.datasets.dump_svmlight_file": "doc",
    "sklearn.model_selection.TimeSeriesSplit": "doc",
    "sklearn.exceptions.DataDimensionalityWarning": "doc",
    "sklearn.linear_model.GammaRegressor": "doc",
    "sklearn.model_selection.learning_curve": "doc",
    "sklearn.model_selection.permutation_test_score": "doc",
    "sklearn.feature_selection.SelectKBest": "doc",
    "sklearn.datasets.make_swiss_roll": "doc",
    "sklearn.preprocessing.binarize": "doc",
    "sklearn.preprocessing.Binarizer": "doc",
    "sklearn.preprocessing.normalize": "doc",
    "sklearn.preprocessing.Normalizer": "doc",
    "sklearn.naive_bayes.CategoricalNB": "doc",
    "sklearn.preprocessing.StandardScaler": "doc",
    "sklearn.model_selection.ParameterGrid": "doc",
    "sklearn.preprocessing.KBinsDiscretizer": "doc",
    "sklearn.feature_extraction.FeatureHasher": "doc",
    "sklearn.preprocessing.FunctionTransformer": "doc",
    "sklearn.preprocessing.MultiLabelBinarizer": "doc",
    "sklearn.preprocessing.QuantileTransformer": "doc",
    "sklearn.calibration.calibration_curve": "doc",
    "sklearn.feature_selection.mutual_info_classif": "doc",
    "sklearn.cluster.mean_shift": "doc",
    "sklearn.datasets.fetch_rcv1": "doc",
    "sklearn.datasets.make_blobs": "doc",
    "sklearn.datasets.make_moons": "doc",
    "sklearn.cluster.SpectralBiclustering": "doc",
    "sklearn.gaussian_process.kernels.DotProduct": "doc",
    "sklearn.datasets.load_files": "doc",
    "sklearn.datasets.make_s_curve": "doc",
    "sklearn.pipeline.FeatureUnion": "doc",
    "sklearn.datasets.get_data_home": "doc",
    "sklearn.neighbors.NearestNeighbors": "doc",
    "sklearn.datasets.load_breast_cancer": "doc",
    "sklearn.datasets.make_classification": "doc",
    "sklearn.feature_selection.f_regression": "doc",
    "sklearn.feature_selection.SelectPercentile": "doc",
    "sklearn.linear_model.Lars": "doc",
    "sklearn.decomposition.fastica": "doc",
    "sklearn.datasets.make_friedman1": "doc",
    "sklearn.datasets.make_friedman2": "doc",
    "sklearn.datasets.make_friedman3": "doc",
    "sklearn.tree.ExtraTreeRegressor": "doc",
    "sklearn.tree.ExtraTreeClassifier": "doc",
    "sklearn.gaussian_process.kernels.RBF": "doc",
    "sklearn.gaussian_process.kernels.Sum": "doc",
    "sklearn.gaussian_process.kernels.Kernel": "doc",
    "sklearn.gaussian_process.kernels.Matern": "doc",
    "sklearn.gaussian_process.kernels.Product": "doc",
    "sklearn.feature_extraction.DictVectorizer": "doc",
    "sklearn.gaussian_process.kernels.WhiteKernel": "doc",
    "sklearn.gaussian_process.kernels.CompoundKernel": "doc",
    "sklearn.gaussian_process.kernels.ConstantKernel": "doc",
    "sklearn.gaussian_process.kernels.ExpSineSquared": "doc",
    "sklearn.gaussian_process.kernels.Exponentiation": "doc",
    "sklearn.gaussian_process.kernels.Hyperparameter": "doc",
    "sklearn.gaussian_process.kernels.PairwiseKernel": "doc",
    "sklearn.gaussian_process.kernels.RationalQuadratic": "doc",
    "sklearn.model_selection.validation_curve": "doc",
    "sklearn.feature_selection": "doc",
    "sklearn.feature_selection.RFE": "doc",
    "sklearn.feature_selection.chi2": "doc",
    "sklearn.feature_selection.RFECV": "doc",
    "sklearn.feature_selection.SelectFpr": "doc",
    "sklearn.feature_selection.SelectFdr": "doc",
    "sklearn.feature_selection.SelectFwe": "doc",
    "sklearn.feature_selection.f_classif": "doc",
    "sklearn.feature_selection.SelectFromModel": "doc",
    "sklearn.feature_selection.VarianceThreshold": "doc",
    "sklearn.feature_selection.mutual_info_regression": "doc",
    "sklearn.feature_selection.GenericUnivariateSelect": "doc",
    "sklearn.pipeline.make_pipeline": "doc",
    "sklearn.datasets.fetch_lfw_pairs": "doc",
    "sklearn.datasets.make_regression": "doc",
    "sklearn.datasets.make_spd_matrix": "doc",
    "sklearn.feature_extraction.text.CountVectorizer": "doc",
    "sklearn.feature_extraction.text.TfidfVectorizer": "doc",
    "sklearn.preprocessing.scale": "doc",
    "sklearn.preprocessing.LabelEncoder": "doc",
    "sklearn.preprocessing.MaxAbsScaler": "doc",
    "sklearn.preprocessing.KernelCenterer": "doc",
    "sklearn.preprocessing.PowerTransformer": "doc",
    "sklearn.preprocessing.PolynomialFeatures": "doc",
    "sklearn.neighbors.LocalOutlierFactor": "doc",
    "sklearn.feature_extraction.image.PatchExtractor": "doc",
    "sklearn.pipeline.make_union": "doc",
    "sklearn.decomposition.FactorAnalysis": "doc",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": "doc",
    "sklearn.cluster.cluster_optics_xi": "doc",
    "sklearn.datasets": "doc",
    "sklearn.kernel_ridge": "doc",
    "sklearn.base.is_regressor": "doc",
    "sklearn.datasets.load_wine": "doc",
    "sklearn.datasets.load_boston": "doc",
    "sklearn.datasets.fetch_openml": "doc",
    "sklearn.datasets.fetch_covtype": "doc",
    "sklearn.datasets.load_linnerud": "doc",
    "sklearn.datasets.fetch_kddcup99": "doc",
    "sklearn.kernel_ridge.KernelRidge": "doc",
    "sklearn.model_selection.check_cv": "doc",
    "sklearn.datasets.fetch_lfw_people": "doc",
    "sklearn.datasets.make_hastie_10_2": "doc",
    "sklearn.isotonic.check_increasing": "doc",
    "sklearn.linear_model.SGDRegressor": "doc",
    "sklearn.datasets.make_checkerboard": "doc",
    "sklearn.datasets.fetch_20newsgroups": "doc",
    "sklearn.neural_network.MLPRegressor": "doc",
    "sklearn.datasets.fetch_olivetti_faces": "doc",
    "sklearn.datasets.make_low_rank_matrix": "doc",
    "sklearn.datasets.make_sparse_spd_matrix": "doc",
    "sklearn.datasets.make_gaussian_quantiles": "doc",
    "sklearn.model_selection.ParameterSampler": "doc",
    "sklearn.datasets.fetch_california_housing": "doc",
    "sklearn.datasets.make_sparse_coded_signal": "doc",
    "sklearn.datasets.make_sparse_uncorrelated": "doc",
    "sklearn.datasets.fetch_species_distributions": "doc",
    "sklearn.feature_extraction.image.img_to_graph": "doc",
    "sklearn.datasets.fetch_20newsgroups_vectorized": "doc",
    "sklearn.datasets.make_multilabel_classification": "doc",
    "sklearn.neighbors.RadiusNeighborsTransformer": "doc",
    "sklearn.cluster.Birch": "doc",
    "sklearn.tree.plot_tree": "doc",
    "sklearn.dummy.DummyRegressor": "doc",
    "sklearn.neighbors.DistanceMetric": "doc",
    "sklearn.tree.DecisionTreeRegressor": "doc",
    "sklearn.tree.DecisionTreeClassifier": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.base.BaseEstimator": "doc",
    "sklearn.feature_extraction.text.HashingVectorizer": "doc",
    "sklearn.linear_model.ARDRegression": "doc",
    "sklearn.decomposition.dict_learning": "doc",
    "sklearn.cross_decomposition.PLSRegression": "doc",
    "sklearn.linear_model.TweedieRegressor": "doc",
    "sklearn.manifold.trustworthiness": "doc",
    "sklearn.preprocessing": "doc",
    "sklearn.preprocessing.MinMaxScaler": "doc",
    "sklearn.preprocessing.RobustScaler": "doc",
    "sklearn.preprocessing.OneHotEncoder": "doc",
    "sklearn.calibration": "doc",
    "sklearn.calibration.CalibratedClassifierCV": "doc",
    "sklearn.feature_extraction": "doc",
    "sklearn.linear_model.enet_path": "doc",
    "sklearn.neighbors.NearestCentroid": "doc",
    "sklearn.feature_extraction.image.grid_to_graph": "doc",
    "sklearn.feature_extraction.text.TfidfTransformer": "doc",
    "sklearn.feature_extraction.image.extract_patches_2d": "doc",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d": "doc",
    "sklearn.cluster.spectral_clustering": "doc",
    "sklearn.ensemble.AdaBoostRegressor": "doc",
    "sklearn.compose.make_column_transformer": "doc",
    "sklearn.exceptions": "doc",
    "sklearn.exceptions.NotFittedError": "doc",
    "sklearn.exceptions.FitFailedWarning": "doc",
    "sklearn.exceptions.EfficiencyWarning": "doc",
    "sklearn.exceptions.NonBLASDotWarning": "doc",
    "sklearn.exceptions.ConvergenceWarning": "doc",
    "sklearn.exceptions.DataConversionWarning": "doc",
    "sklearn.exceptions.ChangedBehaviorWarning": "doc",
    "sklearn.exceptions.UndefinedMetricWarning": "doc",
    "sklearn.linear_model.HuberRegressor": "doc",
    "sklearn.decomposition.IncrementalPCA": "doc",
    "sklearn.base.DensityMixin": "doc",
    "sklearn.isotonic.IsotonicRegression": "doc",
    "sklearn.linear_model.lars_path_gram": "doc",
    "sklearn.cluster.SpectralCoclustering": "doc",
    "sklearn.cluster.compute_optics_graph": "doc",
    "sklearn.tree": "doc",
    "sklearn.tree.export_text": "doc",
    "sklearn.tree.export_graphviz": "doc",
    "sklearn.model_selection": "doc",
    "sklearn.model_selection.KFold": "doc",
    "sklearn.linear_model.Perceptron": "doc",
    "sklearn.linear_model.ElasticNet": "doc",
    "sklearn.ensemble.IsolationForest": "doc",
    "sklearn.model_selection.LeavePOut": "doc",
    "sklearn.model_selection.GroupKFold": "doc",
    "sklearn.model_selection.LeaveOneOut": "doc",
    "sklearn.linear_model.RANSACRegressor": "doc",
    "sklearn.model_selection.ShuffleSplit": "doc",
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.inspection.partial_dependence": "doc",
    "sklearn.model_selection.RepeatedKFold": "doc",
    "sklearn.model_selection.LeavePGroupsOut": "doc",
    "sklearn.model_selection.PredefinedSplit": "doc",
    "sklearn.model_selection.StratifiedKFold": "doc",
    "sklearn.model_selection.LeaveOneGroupOut": "doc",
    "sklearn.model_selection.train_test_split": "doc",
    "sklearn.model_selection.GroupShuffleSplit": "doc",
    "sklearn.model_selection.cross_val_predict": "doc",
    "sklearn.model_selection.RandomizedSearchCV": "doc",
    "sklearn.model_selection.StratifiedShuffleSplit": "doc",
    "sklearn.decomposition.LatentDirichletAllocation": "doc",
    "sklearn.model_selection.RepeatedStratifiedKFold": "doc",
    "sklearn.ensemble.ExtraTreesRegressor": "doc",
    "sklearn.cluster.cluster_optics_dbscan": "doc",
    "sklearn.ensemble.RandomForestRegressor": "doc",
    "sklearn.decomposition.sparse_encode": "doc",
    "sklearn.manifold.SpectralEmbedding": "doc",
    "sklearn.ensemble.ExtraTreesClassifier": "doc",
    "sklearn.gaussian_process": "doc",
    "sklearn.ensemble.BaggingRegressor": "doc",
    "sklearn.linear_model.LinearRegression": "doc",
    "sklearn.linear_model.PoissonRegressor": "doc",
    "sklearn.linear_model.ridge_regression": "doc",
    "sklearn.gaussian_process.GaussianProcessRegressor": "doc",
    "sklearn.gaussian_process.GaussianProcessClassifier": "doc",
    "sklearn.mixture.GaussianMixture": "doc",
    "sklearn.naive_bayes": "doc",
    "sklearn.naive_bayes.GaussianNB": "doc",
    "sklearn.naive_bayes.BernoulliNB": "doc",
    "sklearn.naive_bayes.ComplementNB": "doc",
    "sklearn.naive_bayes.MultinomialNB": "doc",
    "sklearn.multioutput.ClassifierChain": "doc",
    "sklearn.cluster.MeanShift": "doc",
    "sklearn.neighbors.BallTree": "doc",
    "sklearn.neighbors.KernelDensity": "doc",
    "sklearn.cluster.SpectralClustering": "doc",
    "sklearn.manifold.spectral_embedding": "doc",
    "sklearn.neighbors.KNeighborsRegressor": "doc",
    "sklearn.neighbors.KNeighborsClassifier": "doc",
    "sklearn.neighbors.radius_neighbors_graph": "doc",
    "sklearn.neighbors.RadiusNeighborsRegressor": "doc",
    "sklearn.random_projection": "doc",
    "sklearn.ensemble.StackingRegressor": "doc",
    "sklearn.linear_model.TheilSenRegressor": "doc",
    "sklearn.random_projection.SparseRandomProjection": "doc",
    "sklearn.random_projection.GaussianRandomProjection": "doc",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim": "doc",
    "sklearn.compose.TransformedTargetRegressor": "doc",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": "doc",
    "sklearn.cluster.AgglomerativeClustering": "doc",
    "sklearn.neighbors.RadiusNeighborsClassifier": "doc",
    "sklearn.multioutput.RegressorChain": "doc",
    "sklearn.semi_supervised.LabelSpreading": "doc",
    "sklearn.experimental.enable_hist_gradient_boosting": "doc",
    "sklearn.isotonic": "doc",
    "sklearn.linear_model": "doc",
    "sklearn.base.ClusterMixin": "doc",
    "sklearn.linear_model.Ridge": "doc",
    "sklearn.linear_model.Lasso": "doc",
    "sklearn.linear_model.LarsCV": "doc",
    "sklearn.linear_model.RidgeCV": "doc",
    "sklearn.linear_model.LassoCV": "doc",
    "sklearn.linear_model.LassoLars": "doc",
    "sklearn.linear_model.lars_path": "doc",
    "sklearn.linear_model.lasso_path": "doc",
    "sklearn.linear_model.LassoLarsCV": "doc",
    "sklearn.linear_model.LassoLarsIC": "doc",
    "sklearn.linear_model.ElasticNetCV": "doc",
    "sklearn.linear_model.SGDClassifier": "doc",
    "sklearn.linear_model.BayesianRidge": "doc",
    "sklearn.linear_model.orthogonal_mp": "doc",
    "sklearn.linear_model.MultiTaskLasso": "doc",
    "sklearn.neural_network.BernoulliRBM": "doc",
    "sklearn.isotonic.isotonic_regression": "doc",
    "sklearn.linear_model.RidgeClassifier": "doc",
    "sklearn.kernel_approximation.Nystroem": "doc",
    "sklearn.linear_model.MultiTaskLassoCV": "doc",
    "sklearn.linear_model.RidgeClassifierCV": "doc",
    "sklearn.linear_model.LogisticRegression": "doc",
    "sklearn.linear_model.orthogonal_mp_gram": "doc",
    "sklearn.cross_decomposition.PLSCanonical": "doc",
    "sklearn.decomposition.DictionaryLearning": "doc",
    "sklearn.linear_model.MultiTaskElasticNet": "doc",
    "sklearn.linear_model.LogisticRegressionCV": "doc",
    "sklearn.linear_model.MultiTaskElasticNetCV": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuit": "doc",
    "sklearn.linear_model.PassiveAggressiveRegressor": "doc",
    "sklearn.linear_model.PassiveAggressiveClassifier": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuitCV": "doc",
    "sklearn.semi_supervised": "doc",
    "sklearn.ensemble.VotingRegressor": "doc",
    "sklearn.cluster.FeatureAgglomeration": "doc",
    "sklearn.semi_supervised.LabelPropagation": "doc",
    "sklearn.inspection.permutation_importance": "doc",
    "sklearn.decomposition": "doc",
    "sklearn.decomposition.NMF": "doc",
    "sklearn.decomposition.PCA": "doc",
    "sklearn.decomposition.FastICA": "doc",
    "sklearn.decomposition.KernelPCA": "doc",
    "sklearn.decomposition.SparsePCA": "doc",
    "sklearn.decomposition.SparseCoder": "doc",
    "sklearn.decomposition.TruncatedSVD": "doc",
    "sklearn.decomposition.MiniBatchSparsePCA": "doc",
    "sklearn.decomposition.dict_learning_online": "doc",
    "sklearn.decomposition.non_negative_factorization": "doc",
    "sklearn.decomposition.MiniBatchDictionaryLearning": "doc",
    "sklearn.cluster.ward_tree": "doc",
    "sklearn.ensemble.AdaBoostClassifier": "doc",
    "sklearn.impute.IterativeImputer": "doc",
    "sklearn.mixture": "doc",
    "sklearn.neural_network": "doc",
    "sklearn.discriminant_analysis": "doc",
    "sklearn.neural_network.MLPClassifier": "doc",
    "sklearn.mixture.BayesianGaussianMixture": "doc",
    "sklearn.ensemble.RandomForestClassifier": "doc",
    "sklearn.multioutput.MultiOutputRegressor": "doc",
    "sklearn.multioutput.MultiOutputClassifier": "doc",
    "sklearn.neighbors": "doc",
    "sklearn.svm.LinearSVC": "doc",
    "sklearn.svm.LinearSVR": "doc",
    "sklearn.neighbors.KDTree": "doc",
    "sklearn.neighbors.kneighbors_graph": "doc",
    "sklearn.neighbors.KNeighborsTransformer": "doc",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis": "doc",
    "sklearn.manifold.LocallyLinearEmbedding": "doc",
    "sklearn.compose.ColumnTransformer": "doc",
    "sklearn.base.ClassifierMixin": "doc",
    "sklearn.base.BiclusterMixin": "doc",
    "sklearn.base.RegressorMixin": "doc",
    "sklearn.experimental": "doc",
    "sklearn.svm.l1_min_c": "doc",
    "sklearn.manifold.smacof": "doc",
    "sklearn.impute.MissingIndicator": "doc",
    "sklearn.cluster.estimate_bandwidth": "doc",
    "sklearn.experimental.enable_iterative_imputer": "doc",
    "sklearn.ensemble.GradientBoostingRegressor": "doc",
    "sklearn.ensemble.BaggingClassifier": "doc",
    "sklearn.inspection": "doc",
    "sklearn.inspection.plot_partial_dependence": "doc",
    "sklearn.inspection.PartialDependenceDisplay": "doc",
    "sklearn.cluster.AffinityPropagation": "doc",
    "sklearn.impute.SimpleImputer": "doc",
    "sklearn.ensemble.GradientBoostingClassifier": "doc",
    "sklearn.ensemble.StackingClassifier": "doc",
    "sklearn.cluster.affinity_propagation": "doc",
    "sklearn.compose.make_column_selector": "doc",
    "sklearn.ensemble.RandomTreesEmbedding": "doc",
    "sklearn.kernel_approximation.RBFSampler": "doc",
    "sklearn.kernel_approximation.SkewedChi2Sampler": "doc",
    "sklearn.kernel_approximation.AdditiveChi2Sampler": "doc",
    "sklearn.cross_decomposition": "doc",
    "sklearn.cross_decomposition.CCA": "doc",
    "sklearn.cross_decomposition.PLSSVD": "doc",
    "sklearn.base.TransformerMixin": "doc",
    "sklearn.ensemble.HistGradientBoostingRegressor": "doc",
    "sklearn.cluster.KMeans": "doc",
    "sklearn.cluster.k_means": "doc",
    "sklearn.multioutput": "doc",
    "sklearn.svm.OneClassSVM": "doc",
    "sklearn.dummy.DummyClassifier": "doc",
    "sklearn.cluster.MiniBatchKMeans": "doc",
    "sklearn.ensemble.HistGradientBoostingClassifier": "doc",
    "sklearn.manifold": "doc",
    "sklearn.pipeline": "doc",
    "sklearn.manifold.MDS": "doc",
    "sklearn.manifold.TSNE": "doc",
    "sklearn.manifold.Isomap": "doc",
    "sklearn.pipeline.Pipeline": "doc",
    "sklearn.ensemble.VotingClassifier": "doc",
    "sklearn.manifold.locally_linear_embedding": "doc",
    "sklearn.base.is_classifier": "doc",
    "sklearn.kernel_approximation": "doc",
    "sklearn.impute": "doc",
    "sklearn.cluster": "doc",
    "sklearn.compose": "doc",
    "sklearn.ensemble": "doc",
    "sklearn.base.clone": "doc",
    "sklearn.cluster.DBSCAN": "doc",
    "sklearn.cluster.OPTICS": "doc",
    "sklearn.cluster.dbscan": "doc",
    "sklearn.impute.KNNImputer": "doc",
    "sklearn.svm": "doc",
    "sklearn.base": "doc",
    "sklearn.dummy": "doc",
    "sklearn.svm.SVC": "doc",
    "sklearn.svm.SVR": "doc",
    "sklearn.svm.NuSVC": "doc",
    "sklearn.svm.NuSVR": "doc"
  },
  "scipy.misc.toimage": {
    "scipy.misc.derivative": "doc",
    "scipy.misc.face": "doc",
    "scipy.misc.electrocardiogram": "doc",
    "scipy.misc.central_diff_weights": "doc",
    "scipy.misc.ascent": "doc",
    "scipy.ndimage.median": "doc",
    "scipy.ndimage.maximum": "doc",
    "scipy.ndimage.minimum": "doc",
    "scipy.optimize.bisect": "doc",
    "scipy.ndimage.mean": "doc",
    "scipy.ndimage.variance": "doc",
    "scipy.ndimage.histogram": "doc",
    "scipy.ndimage.zoom": "doc",
    "scipy.ndimage.sobel": "doc",
    "scipy.ndimage.shift": "doc",
    "scipy.ndimage.label": "doc",
    "scipy.ndimage.rotate": "doc",
    "scipy.ndimage.laplace": "doc",
    "scipy.ndimage.prewitt": "doc",
    "scipy.ndimage.extrema": "doc",
    "scipy.ndimage.convolve": "doc",
    "scipy.ndimage.correlate": "doc",
    "scipy.ndimage.convolve1d": "doc",
    "scipy.ndimage.sum_labels": "doc",
    "scipy.ndimage.Morphology": "doc",
    "scipy.ndimage.correlate1d": "doc",
    "scipy.ndimage.rank_filter": "doc",
    "scipy.ndimage.Measurements": "doc",
    "scipy.ndimage.find_objects": "doc",
    "scipy.ndimage.black_tophat": "doc",
    "scipy.ndimage.grey_closing": "doc",
    "scipy.ndimage.grey_erosion": "doc",
    "scipy.ndimage.grey_opening": "doc",
    "scipy.ndimage.white_tophat": "doc",
    "scipy.ndimage.median_filter": "doc",
    "scipy.ndimage.fourier_shift": "doc",
    "scipy.ndimage.Interpolation": "doc",
    "scipy.ndimage.spline_filter": "doc",
    "scipy.ndimage.watershed_ift": "doc",
    "scipy.ndimage.grey_dilation": "doc",
    "scipy.ndimage.generic_filter": "doc",
    "scipy.ndimage.maximum_filter": "doc",
    "scipy.ndimage.minimum_filter": "doc",
    "scipy.ndimage.uniform_filter": "doc",
    "scipy.ndimage.center_of_mass": "doc",
    "scipy.ndimage.binary_closing": "doc",
    "scipy.ndimage.binary_erosion": "doc",
    "scipy.ndimage.binary_opening": "doc",
    "scipy.ndimage.gaussian_filter": "doc",
    "scipy.ndimage.generic_laplace": "doc",
    "scipy.ndimage.fourier_uniform": "doc",
    "scipy.ndimage.map_coordinates": "doc",
    "scipy.ndimage.spline_filter1d": "doc",
    "scipy.ndimage.binary_dilation": "doc",
    "scipy.ndimage.gaussian_laplace": "doc",
    "scipy.ndimage.generic_filter1d": "doc",
    "scipy.ndimage.maximum_filter1d": "doc",
    "scipy.ndimage.minimum_filter1d": "doc",
    "scipy.ndimage.uniform_filter1d": "doc",
    "scipy.ndimage.fourier_gaussian": "doc",
    "scipy.ndimage.affine_transform": "doc",
    "scipy.ndimage.maximum_position": "doc",
    "scipy.ndimage.minimum_position": "doc",
    "scipy.ndimage.gaussian_filter1d": "doc",
    "scipy.ndimage.percentile_filter": "doc",
    "scipy.ndimage.fourier_ellipsoid": "doc",
    "scipy.ndimage.binary_fill_holes": "doc",
    "scipy.ndimage.iterate_structure": "doc",
    "scipy.ndimage.standard_deviation": "doc",
    "scipy.ndimage.binary_hit_or_miss": "doc",
    "scipy.ndimage.binary_propagation": "doc",
    "scipy.ndimage.geometric_transform": "doc",
    "scipy.ndimage.labeled_comprehension": "doc",
    "scipy.ndimage.distance_transform_bf": "doc",
    "scipy.ndimage.morphological_laplace": "doc",
    "scipy.ndimage.distance_transform_cdt": "doc",
    "scipy.ndimage.distance_transform_edt": "doc",
    "scipy.ndimage.morphological_gradient": "doc",
    "scipy.ndimage.generate_binary_structure": "doc",
    "scipy.ndimage.generic_gradient_magnitude": "doc",
    "scipy.ndimage.gaussian_gradient_magnitude": "doc",
    "scipy.interpolate.scipy.ndimage.map_coordinates": "doc",
    "scipy.optimize.line_search": "doc",
    "scipy.stats.mstats.trima": "doc",
    "scipy.optimize.minimize_scalar": "doc",
    "scipy.optimize.SR1": "doc",
    "scipy.optimize.BFGS": "doc",
    "scipy.optimize.shgo": "doc",
    "scipy.optimize.nnls": "doc",
    "scipy.optimize.root": "doc",
    "scipy.optimize.brute": "doc",
    "scipy.optimize.rosen": "doc",
    "scipy.stats.vonmises": "doc",
    "scipy.optimize.Bounds": "doc",
    "scipy.optimize.brentq": "doc",
    "scipy.optimize.brenth": "doc",
    "scipy.optimize.ridder": "doc",
    "scipy.optimize.newton": "doc",
    "scipy.optimize.toms748": "doc",
    "scipy.optimize.linprog": "doc",
    "scipy.optimize.bracket": "doc",
    "scipy.optimize.minimize": "doc",
    "scipy.optimize.curve_fit": "doc",
    "scipy.optimize.Utilities": "doc",
    "scipy.optimize.rosen_der": "doc",
    "scipy.optimize.lsq_linear": "doc",
    "scipy.optimize.check_grad": "doc",
    "scipy.optimize.rosen_hess": "doc",
    "scipy.optimize.root_scalar": "doc",
    "scipy.optimize.RootResults": "doc",
    "scipy.optimize.fixed_point": "doc",
    "scipy.optimize.show_options": "doc",
    "scipy.optimize.Optimization": "doc",
    "scipy.optimize.basinhopping": "doc",
    "scipy.optimize.least_squares": "doc",
    "scipy.optimize.approx_fprime": "doc",
    "scipy.optimize.OptimizeResult": "doc",
    "scipy.optimize.dual_annealing": "doc",
    "scipy.optimize.OptimizeWarning": "doc",
    "scipy.optimize.rosen_hess_prod": "doc",
    "scipy.optimize.LinearConstraint": "doc",
    "scipy.optimize.Multidimensional": "doc",
    "scipy.optimize.NonlinearConstraint": "doc",
    "scipy.optimize.LbfgsInvHessProduct": "doc",
    "scipy.optimize.quadratic_assignment": "doc",
    "scipy.optimize.linear_sum_assignment": "doc",
    "scipy.optimize.HessianUpdateStrategy": "doc",
    "scipy.optimize.differential_evolution": "doc",
    "scipy.optimize.linprog_verbose_callback": "doc",
    "scipy.signal.decimate": "doc",
    "scipy.stats.mstats.trimtail": "doc",
    "scipy.stats.mstats.msign": "doc",
    "scipy.sparse.linalg.eigsh": "doc",
    "scipy.signal.normalize": "doc",
    "scipy.stats.trim_mean": "doc",
    "scipy.stats.fisk": "doc",
    "scipy.special.sinc": "doc",
    "scipy.signal.lombscargle": "doc",
    "scipy.stats.tmax": "doc",
    "scipy.stats.lomax": "doc",
    "scipy.stats.trim1": "doc",
    "scipy.sparse.diags": "doc",
    "scipy.stats.triang": "doc",
    "scipy.special.kolmogi": "doc",
    "scipy.stats.mstats.tmax": "doc",
    "scipy.stats.mstats.trim": "doc",
    "scipy.stats.mstats.trimr": "doc",
    "scipy.stats.logistic": "doc",
    "scipy.special.gammasgn": "doc",
    "scipy.special.gammainc": "doc",
    "scipy.stats.mielke": "doc",
    "scipy.linalg.pascal": "doc",
    "scipy.integrate.simpson": "doc",
    "scipy.sparse.linalg.minres": "doc",
    "scipy.stats.normaltest": "doc",
    "scipy.stats.mstats.normaltest": "doc",
    "scipy.stats.trimboth": "doc",
    "scipy.interpolate.lagrange": "doc",
    "scipy.stats.mstats.trimboth": "doc",
    "scipy.stats.mvsdist": "doc",
    "scipy.stats.poisson": "doc",
    "scipy.linalg.diagsvd": "doc",
    "scipy.signal.cascade": "doc",
    "scipy.special.hermite": "doc",
    "scipy.interpolate.bisplev": "doc",
    "scipy.stats.contingency.margins": "doc",
    "scipy.stats.chisquare": "doc",
    "scipy.special.gammaincc": "doc",
    "scipy.stats.mstats.chisquare": "doc",
    "scipy.special.mathieu_cem": "doc",
    "scipy.special.mathieu_sem": "doc",
    "scipy.stats.rdist": "doc",
    "scipy.special.diric": "doc",
    "scipy.signal.minimum_phase": "doc",
    "scipy.io.write": "doc",
    "scipy.io.loadmat": "doc",
    "scipy.io.whosmat": "doc",
    "scipy.linalg.inv": "doc",
    "scipy.linalg.eig": "doc",
    "scipy.stats.rice": "doc",
    "scipy.stats.mode": "doc",
    "scipy.stats.tmin": "doc",
    "scipy.linalg.pinv": "doc",
    "scipy.linalg.eigh": "doc",
    "scipy.linalg.cosm": "doc",
    "scipy.linalg.sinm": "doc",
    "scipy.signal.lsim": "doc",
    "scipy.special.ive": "doc",
    "scipy.special.i0e": "doc",
    "scipy.special.i1e": "doc",
    "scipy.linalg.eigvalsh": "doc",
    "scipy.sparse.linalg.inv": "doc",
    "scipy.sparse.linalg.cgs": "doc",
    "scipy.stats.mstats.mode": "doc",
    "scipy.stats.mstats.tmin": "doc",
    "scipy.sparse.linalg.bicg": "doc",
    "scipy.sparse.linalg.eigs": "doc",
    "scipy.sparse.linalg.bicgstab": "doc",
    "scipy.integrate.BDF": "doc",
    "scipy.integrate.ode": "doc",
    "scipy.integrate.quad": "doc",
    "scipy.integrate.romb": "doc",
    "scipy.integrate.RK23": "doc",
    "scipy.integrate.RK45": "doc",
    "scipy.integrate.nquad": "doc",
    "scipy.integrate.Radau": "doc",
    "scipy.integrate.LSODA": "doc",
    "scipy.stats.boltzmann": "doc",
    "scipy.integrate.DOP853": "doc",
    "scipy.integrate.odeint": "doc",
    "scipy.signal.correlate": "doc",
    "scipy.signal.gammatone": "doc",
    "scipy.integrate.dblquad": "doc",
    "scipy.integrate.tplquad": "doc",
    "scipy.integrate.romberg": "doc",
    "scipy.spatial.Rectangle": "doc",
    "scipy.integrate.quad_vec": "doc",
    "scipy.integrate.trapezoid": "doc",
    "scipy.integrate.solve_ivp": "doc",
    "scipy.integrate.OdeSolver": "doc",
    "scipy.integrate.solve_bvp": "doc",
    "scipy.signal.unit_impulse": "doc",
    "scipy.integrate.fixed_quad": "doc",
    "scipy.integrate.quadrature": "doc",
    "scipy.integrate.DenseOutput": "doc",
    "scipy.integrate.OdeSolution": "doc",
    "scipy.integrate.complex_ode": "doc",
    "scipy.integrate.quad_explain": "doc",
    "scipy.integrate.newton_cotes": "doc",
    "scipy.integrate.AccuracyWarning": "doc",
    "scipy.stats.mstats.trimmed_mean": "doc",
    "scipy.stats.mstats.trimmed_stde": "doc",
    "scipy.integrate.IntegrationWarning": "doc",
    "scipy.integrate.cumulative_trapezoid": "doc",
    "scipy.io.FortranFile": "doc",
    "scipy.interpolate.bisplrep": "doc",
    "scipy.linalg.qr_insert": "doc",
    "scipy.linalg.circulant": "doc",
    "scipy.linalg.companion": "doc",
    "scipy.linalg.invpascal": "doc",
    "scipy.io.loadarff": "doc",
    "scipy.signal.dimpulse": "doc",
    "scipy.stats.loglaplace": "doc",
    "scipy.stats.binom_test": "doc",
    "scipy.signal.StateSpace": "doc",
    "scipy.sparse.coo_matrix": "doc",
    "scipy.sparse.dok_matrix": "doc",
    "scipy.special.kolmogorov": "doc",
    "scipy.special.factorial2": "doc",
    "scipy.special.factorialk": "doc",
    "scipy.stats.norminvgauss": "doc",
    "scipy.linalg.matrix_balance": "doc",
    "scipy.sparse.csgraph.csgraph_to_masked": "doc",
    "scipy.linalg.lu": "doc",
    "scipy.linalg.qr": "doc",
    "scipy.linalg.rq": "doc",
    "scipy.linalg.qz": "doc",
    "scipy.linalg.det": "doc",
    "scipy.linalg.svd": "doc",
    "scipy.linalg.ldl": "doc",
    "scipy.linalg.dft": "doc",
    "scipy.linalg.tri": "doc",
    "scipy.stats.norm": "doc",
    "scipy.stats.tvar": "doc",
    "scipy.stats.tsem": "doc",
    "scipy.stats.zmap": "doc",
    "scipy.linalg.norm": "doc",
    "scipy.linalg.kron": "doc",
    "scipy.linalg.tril": "doc",
    "scipy.linalg.triu": "doc",
    "scipy.linalg.orth": "doc",
    "scipy.linalg.expm": "doc",
    "scipy.linalg.logm": "doc",
    "scipy.linalg.tanm": "doc",
    "scipy.linalg.funm": "doc",
    "scipy.signal.bode": "doc",
    "scipy.sparse.tril": "doc",
    "scipy.sparse.triu": "doc",
    "scipy.sparse.bmat": "doc",
    "scipy.special.agm": "doc",
    "scipy.stats.gamma": "doc",
    "scipy.stats.moyal": "doc",
    "scipy.stats.tmean": "doc",
    "scipy.linalg.solve": "doc",
    "scipy.linalg.lstsq": "doc",
    "scipy.linalg.pinv2": "doc",
    "scipy.linalg.pinvh": "doc",
    "scipy.linalg.polar": "doc",
    "scipy.linalg.ordqz": "doc",
    "scipy.linalg.schur": "doc",
    "scipy.linalg.coshm": "doc",
    "scipy.linalg.sinhm": "doc",
    "scipy.linalg.tanhm": "doc",
    "scipy.linalg.signm": "doc",
    "scipy.linalg.sqrtm": "doc",
    "scipy.signal.lsim2": "doc",
    "scipy.special.comb": "doc",
    "scipy.stats.cosine": "doc",
    "scipy.stats.moment": "doc",
    "scipy.linalg.cossin": "doc",
    "scipy.linalg.hankel": "doc",
    "scipy.linalg.leslie": "doc",
    "scipy.signal.square": "doc",
    "scipy.sparse.linalg": "doc",
    "scipy.special.airye": "doc",
    "scipy.special.logit": "doc",
    "scipy.special.gamma": "doc",
    "scipy.special.cosdg": "doc",
    "scipy.special.sindg": "doc",
    "scipy.special.tandg": "doc",
    "scipy.special.cotdg": "doc",
    "scipy.special.cosm1": "doc",
    "scipy.stats.laplace": "doc",
    "scipy.linalg.eigvals": "doc",
    "scipy.linalg.svdvals": "doc",
    "scipy.linalg.rsf2csf": "doc",
    "scipy.linalg.cdf2rdf": "doc",
    "scipy.linalg.fiedler": "doc",
    "scipy.linalg.helmert": "doc",
    "scipy.linalg.hilbert": "doc",
    "scipy.sparse.spdiags": "doc",
    "scipy.linalg.lu_solve": "doc",
    "scipy.linalg.cholesky": "doc",
    "scipy.linalg.hadamard": "doc",
    "scipy.linalg.toeplitz": "doc",
    "scipy.special.tklmbda": "doc",
    "scipy.special.gammaln": "doc",
    "scipy.special.softmax": "doc",
    "scipy.interpolate.pade": "doc",
    "scipy.linalg.lu_factor": "doc",
    "scipy.linalg.cho_solve": "doc",
    "scipy.linalg.qr_update": "doc",
    "scipy.linalg.qr_delete": "doc",
    "scipy.linalg.expm_cond": "doc",
    "scipy.sparse.linalg.cg": "doc",
    "scipy.linalg.khatri_rao": "doc",
    "scipy.linalg.eig_banded": "doc",
    "scipy.linalg.null_space": "doc",
    "scipy.linalg.cho_factor": "doc",
    "scipy.linalg.hessenberg": "doc",
    "scipy.linalg.block_diag": "doc",
    "scipy.linalg.invhilbert": "doc",
    "scipy.sparse.linalg.qmr": "doc",
    "scipy.stats.mstats.tvar": "doc",
    "scipy.stats.mstats.tsem": "doc",
    "scipy.stats.mstats.zmap": "doc",
    "scipy.linalg.LinAlgError": "doc",
    "scipy.linalg.qr_multiply": "doc",
    "scipy.sparse.linalg.expm": "doc",
    "scipy.sparse.linalg.norm": "doc",
    "scipy.sparse.linalg.lsqr": "doc",
    "scipy.sparse.linalg.lsmr": "doc",
    "scipy.sparse.linalg.svds": "doc",
    "scipy.sparse.linalg.splu": "doc",
    "scipy.stats.mstats.tmean": "doc",
    "scipy.linalg.solve_banded": "doc",
    "scipy.linalg.expm_frechet": "doc",
    "scipy.sparse.linalg.gmres": "doc",
    "scipy.sparse.linalg.spilu": "doc",
    "scipy.stats.mstats.moment": "doc",
    "scipy.linalg.solveh_banded": "doc",
    "scipy.linalg.LinAlgWarning": "doc",
    "scipy.sparse.linalg.lgmres": "doc",
    "scipy.sparse.linalg.lobpcg": "doc",
    "scipy.linalg.solve_toeplitz": "doc",
    "scipy.linalg.eigvals_banded": "doc",
    "scipy.linalg.Decompositions": "doc",
    "scipy.linalg.get_blas_funcs": "doc",
    "scipy.signal.abcd_normalize": "doc",
    "scipy.sparse.linalg.spsolve": "doc",
    "scipy.sparse.linalg.gcrotmk": "doc",
    "scipy.sparse.linalg.SuperLU": "doc",
    "scipy.linalg.solve_circulant": "doc",
    "scipy.linalg.matmul_toeplitz": "doc",
    "scipy.linalg.subspace_angles": "doc",
    "scipy.linalg.cholesky_banded": "doc",
    "scipy.linalg.solve_sylvester": "doc",
    "scipy.special.assoc_laguerre": "doc",
    "scipy.special.roots_laguerre": "doc",
    "scipy.linalg.solve_triangular": "doc",
    "scipy.linalg.eigh_tridiagonal": "doc",
    "scipy.linalg.cho_solve_banded": "doc",
    "scipy.linalg.get_lapack_funcs": "doc",
    "scipy.linalg.fiedler_companion": "doc",
    "scipy.sparse.linalg.onenormest": "doc",
    "scipy.sparse.linalg.factorized": "doc",
    "scipy.sparse.linalg.use_solver": "doc",
    "scipy.sparse.linalg.Exceptions": "doc",
    "scipy.linalg.solve_discrete_are": "doc",
    "scipy.linalg.convolution_matrix": "doc",
    "scipy.sparse.linalg.ArpackError": "doc",
    "scipy.linalg.find_best_blas_type": "doc",
    "scipy.linalg.eigvalsh_tridiagonal": "doc",
    "scipy.linalg.solve_continuous_are": "doc",
    "scipy.sparse.linalg.expm_multiply": "doc",
    "scipy.linalg.orthogonal_procrustes": "doc",
    "scipy.sparse.linalg.LinearOperator": "doc",
    "scipy.linalg.fractional_matrix_power": "doc",
    "scipy.linalg.solve_discrete_lyapunov": "doc",
    "scipy.sparse.linalg.aslinearoperator": "doc",
    "scipy.sparse.linalg.MatrixRankWarning": "doc",
    "scipy.linalg.solve_continuous_lyapunov": "doc",
    "scipy.sparse.linalg.spsolve_triangular": "doc",
    "scipy.sparse.linalg.ArpackNoConvergence": "doc",
    "scipy.linalg.clarkson_woodruff_transform": "doc",
    "scipy.io.FortranFormattingError": "doc",
    "scipy.io.mminfo": "doc",
    "scipy.interpolate.Rbf": "doc",
    "scipy.interpolate.PPoly": "doc",
    "scipy.interpolate.BPoly": "doc",
    "scipy.interpolate.splev": "doc",
    "scipy.stats.multinomial": "doc",
    "scipy.stats.theilslopes": "doc",
    "scipy.interpolate.splrep": "doc",
    "scipy.interpolate.splint": "doc",
    "scipy.interpolate.sproot": "doc",
    "scipy.interpolate.spalde": "doc",
    "scipy.interpolate.splder": "doc",
    "scipy.interpolate.insert": "doc",
    "scipy.signal.fftconvolve": "doc",
    "scipy.signal.correlate2d": "doc",
    "scipy.interpolate.interpn": "doc",
    "scipy.interpolate.NdPPoly": "doc",
    "scipy.interpolate.BSpline": "doc",
    "scipy.interpolate.splprep": "doc",
    "scipy.special.genlaguerre": "doc",
    "scipy.special.wrightomega": "doc",
    "scipy.interpolate.interp1d": "doc",
    "scipy.interpolate.griddata": "doc",
    "scipy.interpolate.interp2d": "doc",
    "scipy.interpolate.splantider": "doc",
    "scipy.interpolate.CubicSpline": "doc",
    "scipy.stats.mstats.trimmed_std": "doc",
    "scipy.stats.mstats.trimmed_var": "doc",
    "scipy.stats.mstats.theilslopes": "doc",
    "scipy.interpolate.make_lsq_spline": "doc",
    "scipy.interpolate.BivariateSpline": "doc",
    "scipy.interpolate.UnivariateSpline": "doc",
    "scipy.interpolate.KroghInterpolator": "doc",
    "scipy.interpolate.krogh_interpolate": "doc",
    "scipy.interpolate.pchip_interpolate": "doc",
    "scipy.interpolate.PchipInterpolator": "doc",
    "scipy.interpolate.CubicHermiteSpline": "doc",
    "scipy.interpolate.make_interp_spline": "doc",
    "scipy.interpolate.LSQBivariateSpline": "doc",
    "scipy.interpolate.Akima1DInterpolator": "doc",
    "scipy.interpolate.RectBivariateSpline": "doc",
    "scipy.interpolate.LSQUnivariateSpline": "doc",
    "scipy.stats.contingency.expected_freq": "doc",
    "scipy.interpolate.LinearNDInterpolator": "doc",
    "scipy.interpolate.NearestNDInterpolator": "doc",
    "scipy.interpolate.SmoothBivariateSpline": "doc",
    "scipy.interpolate.BarycentricInterpolator": "doc",
    "scipy.interpolate.barycentric_interpolate": "doc",
    "scipy.interpolate.RegularGridInterpolator": "doc",
    "scipy.interpolate.LSQSphereBivariateSpline": "doc",
    "scipy.interpolate.RectSphereBivariateSpline": "doc",
    "scipy.interpolate.CloughTocher2DInterpolator": "doc",
    "scipy.interpolate.SmoothSphereBivariateSpline": "doc",
    "scipy.interpolate.InterpolatedUnivariateSpline": "doc",
    "scipy.interpolate.approximate_taylor_polynomial": "doc",
    "scipy.stats.combine_pvalues": "doc",
    "scipy.special.mathieu_modcem1": "doc",
    "scipy.special.mathieu_modcem2": "doc",
    "scipy.special.mathieu_modsem1": "doc",
    "scipy.special.mathieu_modsem2": "doc",
    "scipy.stats.mstats.trimmed_mean_ci": "doc",
    "scipy.stats.vonmises_line": "doc",
    "scipy.signal.cont2discrete": "doc",
    "scipy.special.Combinatorics": "doc",
    "scipy.stats.rv_discrete": "doc",
    "scipy.stats.genlogistic": "doc",
    "scipy.stats.median_test": "doc",
    "scipy.special.gammaincinv": "doc",
    "scipy.stats.loggamma": "doc",
    "scipy.stats.dlaplace": "doc",
    "scipy.stats.itemfreq": "doc",
    "scipy.signal.convolve": "doc",
    "scipy.signal.resample": "doc",
    "scipy.sparse.issparse": "doc",
    "scipy.fft.skip_backend": "doc",
    "scipy.special.errstate": "doc",
    "scipy.special.loggamma": "doc",
    "scipy.special.pro_ang1": "doc",
    "scipy.special.pro_rad1": "doc",
    "scipy.special.pro_rad2": "doc",
    "scipy.special.obl_ang1": "doc",
    "scipy.io.netcdf_variable": "doc",
    "scipy.stats.kurtosistest": "doc",
    "scipy.signal.kaiser_atten": "doc",
    "scipy.special.itmodstruve0": "doc",
    "scipy.special.multigammaln": "doc",
    "scipy.stats.power_divergence": "doc",
    "scipy.signal.correlation_lags": "doc",
    "scipy.stats.mstats.kurtosistest": "doc",
    "scipy.stats.dirichlet": "doc",
    "scipy.stats.sigmaclip": "doc",
    "scipy.special.modstruve": "doc",
    "scipy.special.mathieu_a": "doc",
    "scipy.special.mathieu_b": "doc",
    "scipy.stats.mstats.winsorize": "doc",
    "scipy.spatial.minkowski_distance": "doc",
    "scipy.sparse.csgraph.minimum_spanning_tree": "doc",
    "scipy.stats.friedmanchisquare": "doc",
    "scipy.special.roots_genlaguerre": "doc",
    "scipy.stats.mstats.friedmanchisquare": "doc",
    "scipy.io.netcdf_file": "doc",
    "scipy.stats.matrix_normal": "doc",
    "scipy.stats.unitary_group": "doc",
    "scipy.special.voigt_profile": "doc",
    "scipy.special.eval_laguerre": "doc",
    "scipy.special.roots_hermite": "doc",
    "scipy.stats.mstats.ttest_onesamp": "doc",
    "scipy.io.mmwrite": "doc",
    "scipy.stats.wishart": "doc",
    "scipy.stats.circvar": "doc",
    "scipy.stats.circstd": "doc",
    "scipy.signal.medfilt": "doc",
    "scipy.signal.lfiltic": "doc",
    "scipy.signal.iircomb": "doc",
    "scipy.signal.impulse": "doc",
    "scipy.special.smirnov": "doc",
    "scipy.special.betainc": "doc",
    "scipy.stats.cramervonmises": "doc",
    "scipy.sparse.isspmatrix_csc": "doc",
    "scipy.constants": "doc",
    "scipy.odr.unilinear": "doc",
    "scipy.stats.betaprime": "doc",
    "scipy.stats.genpareto": "doc",
    "scipy.stats.kstwobign": "doc",
    "scipy.stats.hypergeom": "doc",
    "scipy.stats.spearmanr": "doc",
    "scipy.stats.ttest_rel": "doc",
    "scipy.signal.coherence": "doc",
    "scipy.special.itstruve0": "doc",
    "scipy.special.polygamma": "doc",
    "scipy.special.factorial": "doc",
    "scipy.special.logsumexp": "doc",
    "scipy.fft.set_global_backend": "doc",
    "scipy.stats.mstats.spearmanr": "doc",
    "scipy.stats.mstats.ttest_rel": "doc",
    "scipy.stats.halflogistic": "doc",
    "scipy.special.gammainccinv": "doc",
    "scipy.stats.mstats.median_cihs": "doc",
    "scipy.stats.multivariate_t": "doc",
    "scipy.stats.pointbiserialr": "doc",
    "scipy.signal.vectorstrength": "doc",
    "scipy.special.roots_legendre": "doc",
    "scipy.stats.mstats.pointbiserialr": "doc",
    "scipy.sparse.csgraph.csgraph_from_masked": "doc",
    "scipy.stats.mstats.mquantiles_cimj": "doc",
    "scipy.odr.polynomial": "doc",
    "scipy.stats.foldcauchy": "doc",
    "scipy.stats.loguniform": "doc",
    "scipy.stats.invwishart": "doc",
    "scipy.stats.nhypergeom": "doc",
    "scipy.stats.linregress": "doc",
    "scipy.stats.tiecorrect": "doc",
    "scipy.signal.oaconvolve": "doc",
    "scipy.signal.convolve2d": "doc",
    "scipy.signal.deconvolve": "doc",
    "scipy.signal.sosfilt_zi": "doc",
    "scipy.signal.get_window": "doc",
    "scipy.sparse.bsr_matrix": "doc",
    "scipy.sparse.csc_matrix": "doc",
    "scipy.sparse.csr_matrix": "doc",
    "scipy.sparse.dia_matrix": "doc",
    "scipy.sparse.lil_matrix": "doc",
    "scipy.sparse.block_diag": "doc",
    "scipy.sparse.isspmatrix": "doc",
    "scipy.sparse.Submodules": "doc",
    "scipy.spatial.procrustes": "doc",
    "scipy.special.it2struve0": "doc",
    "scipy.special.betaincinv": "doc",
    "scipy.special.ellip_harm": "doc",
    "scipy.special.gegenbauer": "doc",
    "scipy.special.pro_cv_seq": "doc",
    "scipy.special.beip_zeros": "doc",
    "scipy.special.keip_zeros": "doc",
    "scipy.stats.Transformations": "doc",
    "scipy.stats.energy_distance": "doc",
    "scipy.io.Harwell-Boeing files": "doc",
    "scipy.spatial.distance_matrix": "doc",
    "scipy.spatial.geometric_slerp": "doc",
    "scipy.stats.mstats.linregress": "doc",
    "scipy.stats.mstats.Parameters": "doc",
    "scipy.stats.mstats.ks_twosamp": "doc",
    "scipy.stats.ttest_ind_from_stats": "doc",
    "scipy.stats.wasserstein_distance": "doc",
    "scipy.spatial.minkowski_distance_p": "doc",
    "scipy.stats.mstats.Transformations": "doc",
    "scipy.fft.dst": "doc",
    "scipy.io.read": "doc",
    "scipy.fft.idct": "doc",
    "scipy.fft.idst": "doc",
    "scipy.io.mmread": "doc",
    "scipy.io.Netcdf": "doc",
    "scipy.stats.iqr": "doc",
    "scipy.io.savemat": "doc",
    "scipy.io.readsav": "doc",
    "scipy.io.hb_read": "doc",
    "scipy.signal.csd": "doc",
    "scipy.special.iv": "doc",
    "scipy.special.i0": "doc",
    "scipy.special.i1": "doc",
    "scipy.stats.zipf": "doc",
    "scipy.stats.mood": "doc",
    "scipy.io.hb_write": "doc",
    "scipy.io.MetaData": "doc",
    "scipy.sparse.find": "doc",
    "scipy.special.ivp": "doc",
    "scipy.special.psi": "doc",
    "scipy.io.ArffError": "doc",
    "scipy.special.airy": "doc",
    "scipy.special.erfc": "doc",
    "scipy.special.sici": "doc",
    "scipy.stats.describe": "doc",
    "scipy.stats.wilcoxon": "doc",
    "scipy.stats.circmean": "doc",
    "scipy.signal.iirnotch": "doc",
    "scipy.signal.impulse2": "doc",
    "scipy.special.nrdtrisd": "doc",
    "scipy.special.smirnovi": "doc",
    "scipy.stats.mstats.rsh": "doc",
    "scipy.io.WavFileWarning": "doc",
    "scipy.io.ParseArffError": "doc",
    "scipy.stats.mstats.mjci": "doc",
    "scipy.io.FortranEOFError": "doc",
    "scipy.stats.semicircular": "doc",
    "scipy.stats.fisher_exact": "doc",
    "scipy.stats.mstats.describe": "doc",
    "scipy.stats.mstats.hdmedian": "doc",
    "scipy.sparse.csgraph.dijkstra": "doc",
    "scipy.sparse.csgraph.reverse_cuthill_mckee": "doc",
    "scipy.sparse.csgraph.construct_dist_matrix": "doc",
    "scipy.fft.register_backend": "doc",
    "scipy.stats.chi2_contingency": "doc",
    "scipy.signal.peak_prominences": "doc",
    "scipy.special.eval_genlaguerre": "doc",
    "scipy.special.roots_gegenbauer": "doc",
    "scipy.special.mathieu_odd_coef": "doc",
    "scipy.sparse.csgraph.depth_first_tree": "doc",
    "scipy.sparse.csgraph.csgraph_to_dense": "doc",
    "scipy.fft.set_workers": "doc",
    "scipy.fft.get_workers": "doc",
    "scipy.fft.set_backend": "doc",
    "scipy.odr.multilinear": "doc",
    "scipy.stats.crystalball": "doc",
    "scipy.stats.fatiguelife": "doc",
    "scipy.stats.geninvgauss": "doc",
    "scipy.stats.levy_stable": "doc",
    "scipy.stats.tukeylambda": "doc",
    "scipy.stats.weibull_max": "doc",
    "scipy.stats.ortho_group": "doc",
    "scipy.stats.weightedtau": "doc",
    "scipy.stats.ttest_1samp": "doc",
    "scipy.signal.sosfiltfilt": "doc",
    "scipy.signal.group_delay": "doc",
    "scipy.signal.kaiser_beta": "doc",
    "scipy.signal.periodogram": "doc",
    "scipy.signal.spectrogram": "doc",
    "scipy.special.modfresnelp": "doc",
    "scipy.special.modfresnelm": "doc",
    "scipy.special.hermitenorm": "doc",
    "scipy.special.sh_legendre": "doc",
    "scipy.special.pro_ang1_cv": "doc",
    "scipy.special.pro_rad1_cv": "doc",
    "scipy.special.pro_rad2_cv": "doc",
    "scipy.special.obl_ang1_cv": "doc",
    "scipy.special.log_softmax": "doc",
    "scipy.stats.mstats.hdquantiles": "doc",
    "scipy.stats.mstats.ttest_1samp": "doc",
    "scipy.stats.mstats.argstoarray": "doc",
    "scipy.stats.multivariate_hypergeom": "doc",
    "scipy.stats.percentileofscore": "doc",
    "scipy.stats.scoreatpercentile": "doc",
    "scipy.special.roots_hermitenorm": "doc",
    "scipy.special.roots_sh_legendre": "doc",
    "scipy.special.mathieu_even_coef": "doc",
    "scipy.stats.mstats.scoreatpercentile": "doc",
    "scipy.stats.mstats.count_tied_groups": "doc",
    "scipy.sparse.csgraph.depth_first_order": "doc",
    "scipy.stats.rv_histogram": "doc",
    "scipy.stats.powerlognorm": "doc",
    "scipy.signal.symiirorder1": "doc",
    "scipy.signal.symiirorder2": "doc",
    "scipy.signal.bilinear_zpk": "doc",
    "scipy.special.spherical_jn": "doc",
    "scipy.special.spherical_yn": "doc",
    "scipy.special.spherical_in": "doc",
    "scipy.special.spherical_kn": "doc",
    "scipy.special.pseudo_huber": "doc",
    "scipy.special.ellip_harm_2": "doc",
    "scipy.special.ellip_normal": "doc",
    "scipy.special.eval_hermite": "doc",
    "scipy.special.roots_chebyt": "doc",
    "scipy.special.roots_chebyu": "doc",
    "scipy.special.roots_chebyc": "doc",
    "scipy.special.roots_chebys": "doc",
    "scipy.special.roots_jacobi": "doc",
    "scipy.special.kelvin_zeros": "doc",
    "scipy.stats.rvs_ratio_uniforms": "doc",
    "scipy.sparse.csgraph.bellman_ford": "doc",
    "scipy.sparse.csgraph.maximum_flow": "doc",
    "scipy.stats.mstats.plotting_positions": "doc",
    "scipy.stats.mstats.compare_medians_ms": "doc",
    "scipy.sparse.csgraph.breadth_first_tree": "doc",
    "scipy.stats.hypsecant": "doc",
    "scipy.signal.medfilt2d": "doc",
    "scipy.signal.iirdesign": "doc",
    "scipy.signal.kaiserord": "doc",
    "scipy.cluster.hierarchy": "doc",
    "scipy.special.ellipkinc": "doc",
    "scipy.special.ellipeinc": "doc",
    "scipy.special.ncfdtrinc": "doc",
    "scipy.special.nctdtrinc": "doc",
    "scipy.special.chndtrinc": "doc",
    "scipy.stats.multivariate_normal": "doc",
    "scipy.sparse.csgraph.breadth_first_order": "doc",
    "scipy.signal.find_peaks_cwt": "doc",
    "scipy.sparse.isspmatrix_csr": "doc",
    "scipy.sparse.isspmatrix_bsr": "doc",
    "scipy.sparse.isspmatrix_coo": "doc",
    "scipy.fft.next_fast_len": "doc",
    "scipy.stats.rv_continuous": "doc",
    "scipy.stats.recipinvgauss": "doc",
    "scipy.stats.brunnermunzel": "doc",
    "scipy.signal.spline_filter": "doc",
    "scipy.signal.savgol_filter": "doc",
    "scipy.signal.resample_poly": "doc",
    "scipy.signal.savgol_coeffs": "doc",
    "scipy.signal.band_stop_obj": "doc",
    "scipy.special.eval_legendre": "doc",
    "scipy.stats.mstats.brunnermunzel": "doc",
    "scipy.sparse.csgraph.shortest_path": "doc",
    "scipy.sparse.csgraph.maximum_bipartite_matching": "doc",
    "scipy.stats.median_abs_deviation": "doc",
    "scipy.stats.multiscale_graphcorr": "doc",
    "scipy.stats.epps_singleton_2samp": "doc",
    "scipy.sparse.csgraph.connected_components": "doc",
    "scipy.cluster": "doc",
    "scipy.fft.fft": "doc",
    "scipy.fft.dct": "doc",
    "scipy.odr.ODR": "doc",
    "scipy.odr.odr": "doc",
    "scipy.stats.f": "doc",
    "scipy.stats.t": "doc",
    "scipy.fft.ifft": "doc",
    "scipy.fft.fft2": "doc",
    "scipy.fft.fftn": "doc",
    "scipy.fft.rfft": "doc",
    "scipy.fft.hfft": "doc",
    "scipy.fft.dctn": "doc",
    "scipy.fft.dstn": "doc",
    "scipy.odr.Data": "doc",
    "scipy.fft.ifft2": "doc",
    "scipy.fft.ifftn": "doc",
    "scipy.fft.irfft": "doc",
    "scipy.fft.rfft2": "doc",
    "scipy.fft.rfftn": "doc",
    "scipy.fft.ihfft": "doc",
    "scipy.fft.hfft2": "doc",
    "scipy.fft.hfftn": "doc",
    "scipy.fft.idctn": "doc",
    "scipy.fft.idstn": "doc",
    "scipy.odr.Model": "doc",
    "scipy.stats.chi": "doc",
    "scipy.stats.ncf": "doc",
    "scipy.stats.nct": "doc",
    "scipy.stats.sem": "doc",
    "scipy.cluster.vq": "doc",
    "scipy.fft.irfft2": "doc",
    "scipy.fft.irfftn": "doc",
    "scipy.fft.ihfft2": "doc",
    "scipy.fft.ihfftn": "doc",
    "scipy.odr.Output": "doc",
    "scipy.signal.lti": "doc",
    "scipy.signal.qmf": "doc",
    "scipy.signal.cwt": "doc",
    "scipy.sparse.eye": "doc",
    "scipy.special.jv": "doc",
    "scipy.special.yn": "doc",
    "scipy.special.yv": "doc",
    "scipy.special.kn": "doc",
    "scipy.special.kv": "doc",
    "scipy.special.j0": "doc",
    "scipy.special.j1": "doc",
    "scipy.special.y0": "doc",
    "scipy.special.y1": "doc",
    "scipy.special.k0": "doc",
    "scipy.special.k1": "doc",
    "scipy.stats.beta": "doc",
    "scipy.stats.burr": "doc",
    "scipy.stats.chi2": "doc",
    "scipy.stats.levy": "doc",
    "scipy.stats.ncx2": "doc",
    "scipy.stats.wald": "doc",
    "scipy.stats.geom": "doc",
    "scipy.stats.skew": "doc",
    "scipy.stats.tstd": "doc",
    "scipy.stats.gstd": "doc",
    "scipy.fft.fftfreq": "doc",
    "scipy.odr.OdrStop": "doc",
    "scipy.signal.step": "doc",
    "scipy.signal.dlti": "doc",
    "scipy.signal.daub": "doc",
    "scipy.signal.stft": "doc",
    "scipy.sparse.kron": "doc",
    "scipy.sparse.rand": "doc",
    "scipy.special.jve": "doc",
    "scipy.special.yve": "doc",
    "scipy.special.kve": "doc",
    "scipy.special.k0e": "doc",
    "scipy.special.k1e": "doc",
    "scipy.special.jvp": "doc",
    "scipy.special.yvp": "doc",
    "scipy.special.kvp": "doc",
    "scipy.special.erf": "doc",
    "scipy.special.lpn": "doc",
    "scipy.special.lqn": "doc",
    "scipy.special.ber": "doc",
    "scipy.special.bei": "doc",
    "scipy.special.ker": "doc",
    "scipy.special.kei": "doc",
    "scipy.stats.alpha": "doc",
    "scipy.stats.argus": "doc",
    "scipy.stats.expon": "doc",
    "scipy.stats.ksone": "doc",
    "scipy.stats.kstwo": "doc",
    "scipy.stats.binom": "doc",
    "scipy.stats.gmean": "doc",
    "scipy.stats.hmean": "doc",
    "scipy.stats.kstat": "doc",
    "scipy.fft.fftshift": "doc",
    "scipy.fft.rfftfreq": "doc",
    "scipy.odr.RealData": "doc",
    "scipy.odr.OdrError": "doc",
    "scipy.signal.cubic": "doc",
    "scipy.signal.firls": "doc",
    "scipy.signal.freqs": "doc",
    "scipy.signal.freqz": "doc",
    "scipy.signal.remez": "doc",
    "scipy.signal.lp2bp": "doc",
    "scipy.signal.lp2bs": "doc",
    "scipy.signal.lp2hp": "doc",
    "scipy.signal.lp2lp": "doc",
    "scipy.signal.ellip": "doc",
    "scipy.signal.step2": "doc",
    "scipy.signal.dlsim": "doc",
    "scipy.signal.dstep": "doc",
    "scipy.signal.dbode": "doc",
    "scipy.signal.tf2ss": "doc",
    "scipy.signal.ss2tf": "doc",
    "scipy.signal.chirp": "doc",
    "scipy.signal.welch": "doc",
    "scipy.signal.istft": "doc",
    "scipy.special.h1vp": "doc",
    "scipy.special.h2vp": "doc",
    "scipy.special.bdtr": "doc",
    "scipy.special.fdtr": "doc",
    "scipy.special.gdtr": "doc",
    "scipy.special.pdtr": "doc",
    "scipy.special.ndtr": "doc",
    "scipy.special.entr": "doc",
    "scipy.special.beta": "doc",
    "scipy.special.poch": "doc",
    "scipy.special.erfi": "doc",
    "scipy.special.wofz": "doc",
    "scipy.special.lpmv": "doc",
    "scipy.special.lpmn": "doc",
    "scipy.special.lqmn": "doc",
    "scipy.special.pbdv": "doc",
    "scipy.special.pbvv": "doc",
    "scipy.special.pbwa": "doc",
    "scipy.special.berp": "doc",
    "scipy.special.beip": "doc",
    "scipy.special.kerp": "doc",
    "scipy.special.keip": "doc",
    "scipy.special.perm": "doc",
    "scipy.special.expn": "doc",
    "scipy.special.exp1": "doc",
    "scipy.special.expi": "doc",
    "scipy.special.zeta": "doc",
    "scipy.special.cbrt": "doc",
    "scipy.special.exp2": "doc",
    "scipy.stats.anglit": "doc",
    "scipy.stats.burr12": "doc",
    "scipy.stats.cauchy": "doc",
    "scipy.stats.dgamma": "doc",
    "scipy.stats.erlang": "doc",
    "scipy.stats.kappa4": "doc",
    "scipy.stats.kappa3": "doc",
    "scipy.stats.levy_l": "doc",
    "scipy.stats.pareto": "doc",
    "scipy.stats.logser": "doc",
    "scipy.stats.nbinom": "doc",
    "scipy.stats.planck": "doc",
    "scipy.stats.kstest": "doc",
    "scipy.stats.ansari": "doc",
    "scipy.stats.levene": "doc",
    "scipy.stats.boxcox": "doc",
    "scipy.stats.zscore": "doc",
    "scipy.fft.ifftshift": "doc",
    "scipy.odr.quadratic": "doc",
    "scipy.signal.wiener": "doc",
    "scipy.signal.firwin": "doc",
    "scipy.signal.invres": "doc",
    "scipy.signal.buttap": "doc",
    "scipy.signal.butter": "doc",
    "scipy.signal.cheby1": "doc",
    "scipy.signal.cheby2": "doc",
    "scipy.signal.bessel": "doc",
    "scipy.signal.tf2zpk": "doc",
    "scipy.signal.tf2sos": "doc",
    "scipy.signal.zpk2tf": "doc",
    "scipy.signal.zpk2ss": "doc",
    "scipy.signal.ss2zpk": "doc",
    "scipy.signal.sos2tf": "doc",
    "scipy.signal.morlet": "doc",
    "scipy.signal.ricker": "doc",
    "scipy.sparse.hstack": "doc",
    "scipy.sparse.vstack": "doc",
    "scipy.sparse.random": "doc",
    "scipy.special.lmbda": "doc",
    "scipy.special.bdtrc": "doc",
    "scipy.special.bdtri": "doc",
    "scipy.special.btdtr": "doc",
    "scipy.special.fdtrc": "doc",
    "scipy.special.fdtri": "doc",
    "scipy.special.gdtrc": "doc",
    "scipy.special.nbdtr": "doc",
    "scipy.special.pdtrc": "doc",
    "scipy.special.pdtri": "doc",
    "scipy.special.stdtr": "doc",
    "scipy.special.chdtr": "doc",
    "scipy.special.ndtri": "doc",
    "scipy.special.expit": "doc",
    "scipy.special.huber": "doc",
    "scipy.special.erfcx": "doc",
    "scipy.special.dawsn": "doc",
    "scipy.special.clpmn": "doc",
    "scipy.special.binom": "doc",
    "scipy.special.euler": "doc",
    "scipy.special.zetac": "doc",
    "scipy.special.exp10": "doc",
    "scipy.special.log1p": "doc",
    "scipy.special.expm1": "doc",
    "scipy.special.round": "doc",
    "scipy.special.xlogy": "doc",
    "scipy.stats.arcsine": "doc",
    "scipy.stats.gennorm": "doc",
    "scipy.stats.gilbrat": "doc",
    "scipy.stats.lognorm": "doc",
    "scipy.stats.maxwell": "doc",
    "scipy.stats.uniform": "doc",
    "scipy.stats.randint": "doc",
    "scipy.stats.skellam": "doc",
    "scipy.stats.entropy": "doc",
    "scipy.stats.cumfreq": "doc",
    "scipy.stats.relfreq": "doc",
    "scipy.stats.kruskal": "doc",
    "scipy.stats.shapiro": "doc",
    "scipy.stats.fligner": "doc",
    "scipy.odr.OdrWarning": "doc",
    "scipy.signal.bspline": "doc",
    "scipy.signal.lfilter": "doc",
    "scipy.signal.sosfilt": "doc",
    "scipy.signal.hilbert": "doc",
    "scipy.signal.detrend": "doc",
    "scipy.signal.upfirdn": "doc",
    "scipy.signal.firwin2": "doc",
    "scipy.signal.residue": "doc",
    "scipy.signal.invresz": "doc",
    "scipy.signal.cheb1ap": "doc",
    "scipy.signal.cheb2ap": "doc",
    "scipy.signal.ellipap": "doc",
    "scipy.signal.buttord": "doc",
    "scipy.signal.iirpeak": "doc",
    "scipy.signal.zpk2sos": "doc",
    "scipy.signal.sos2zpk": "doc",
    "scipy.signal.morlet2": "doc",
    "scipy.sparse.kronsum": "doc",
    "scipy.sparse.csgraph": "doc",
    "scipy.spatial.KDTree": "doc",
    "scipy.special.geterr": "doc",
    "scipy.special.seterr": "doc",
    "scipy.special.itairy": "doc",
    "scipy.special.ellipj": "doc",
    "scipy.special.ellipk": "doc",
    "scipy.special.ellipe": "doc",
    "scipy.special.itj0y0": "doc",
    "scipy.special.iti0k0": "doc",
    "scipy.special.struve": "doc",
    "scipy.special.bdtrik": "doc",
    "scipy.special.bdtrin": "doc",
    "scipy.special.btdtri": "doc",
    "scipy.special.gdtria": "doc",
    "scipy.special.gdtrib": "doc",
    "scipy.special.gdtrix": "doc",
    "scipy.special.nbdtrc": "doc",
    "scipy.special.nbdtri": "doc",
    "scipy.special.ncfdtr": "doc",
    "scipy.special.nctdtr": "doc",
    "scipy.special.pdtrik": "doc",
    "scipy.special.chdtrc": "doc",
    "scipy.special.chdtri": "doc",
    "scipy.special.chndtr": "doc",
    "scipy.special.boxcox": "doc",
    "scipy.special.kl_div": "doc",
    "scipy.special.betaln": "doc",
    "scipy.special.rgamma": "doc",
    "scipy.special.erfinv": "doc",
    "scipy.special.chebyt": "doc",
    "scipy.special.chebyu": "doc",
    "scipy.special.chebyc": "doc",
    "scipy.special.chebys": "doc",
    "scipy.special.jacobi": "doc",
    "scipy.special.hyp2f1": "doc",
    "scipy.special.hyp1f1": "doc",
    "scipy.special.hyperu": "doc",
    "scipy.special.hyp0f1": "doc",
    "scipy.special.pro_cv": "doc",
    "scipy.special.obl_cv": "doc",
    "scipy.special.kelvin": "doc",
    "scipy.special.shichi": "doc",
    "scipy.special.spence": "doc",
    "scipy.special.radian": "doc",
    "scipy.special.exprel": "doc",
    "scipy.stats.bradford": "doc",
    "scipy.stats.dweibull": "doc",
    "scipy.stats.exponpow": "doc",
    "scipy.stats.foldnorm": "doc",
    "scipy.stats.genexpon": "doc",
    "scipy.stats.gengamma": "doc",
    "scipy.stats.gompertz": "doc",
    "scipy.stats.gumbel_r": "doc",
    "scipy.stats.gumbel_l": "doc",
    "scipy.stats.halfnorm": "doc",
    "scipy.stats.invgamma": "doc",
    "scipy.stats.invgauss": "doc",
    "scipy.stats.nakagami": "doc",
    "scipy.stats.pearson3": "doc",
    "scipy.stats.powerlaw": "doc",
    "scipy.stats.rayleigh": "doc",
    "scipy.stats.skewnorm": "doc",
    "scipy.stats.kurtosis": "doc",
    "scipy.stats.kstatvar": "doc",
    "scipy.stats.f_oneway": "doc",
    "scipy.stats.pearsonr": "doc",
    "scipy.stats.ks_1samp": "doc",
    "scipy.stats.ks_2samp": "doc",
    "scipy.stats.rankdata": "doc",
    "scipy.stats.ranksums": "doc",
    "scipy.stats.bartlett": "doc",
    "scipy.stats.anderson": "doc",
    "scipy.stats.skewtest": "doc",
    "scipy.stats.ppcc_max": "doc",
    "scipy.stats.probplot": "doc",
    "scipy.odr.exponential": "doc",
    "scipy.signal.sepfir2d": "doc",
    "scipy.signal.filtfilt": "doc",
    "scipy.signal.hilbert2": "doc",
    "scipy.signal.bilinear": "doc",
    "scipy.signal.sosfreqz": "doc",
    "scipy.signal.residuez": "doc",
    "scipy.signal.besselap": "doc",
    "scipy.signal.cheb1ord": "doc",
    "scipy.signal.cheb2ord": "doc",
    "scipy.signal.ellipord": "doc",
    "scipy.signal.freqresp": "doc",
    "scipy.signal.sawtooth": "doc",
    "scipy.signal.Wavelets": "doc",
    "scipy.sparse.spmatrix": "doc",
    "scipy.sparse.identity": "doc",
    "scipy.sparse.save_npz": "doc",
    "scipy.sparse.load_npz": "doc",
    "scipy.spatial.cKDTree": "doc",
    "scipy.spatial.Voronoi": "doc",
    "scipy.spatial.tsearch": "doc",
    "scipy.special.hankel1": "doc",
    "scipy.special.hankel2": "doc",
    "scipy.special.it2j0y0": "doc",
    "scipy.special.it2i0k0": "doc",
    "scipy.special.btdtria": "doc",
    "scipy.special.btdtrib": "doc",
    "scipy.special.nbdtrik": "doc",
    "scipy.special.nbdtrin": "doc",
    "scipy.special.ncfdtri": "doc",
    "scipy.special.stdtrit": "doc",
    "scipy.special.chdtriv": "doc",
    "scipy.special.owens_t": "doc",
    "scipy.special.digamma": "doc",
    "scipy.special.erfcinv": "doc",
    "scipy.special.fresnel": "doc",
    "scipy.special.Warning": "doc",
    "scipy.special.xlog1py": "doc",
    "scipy.stats.exponnorm": "doc",
    "scipy.stats.exponweib": "doc",
    "scipy.stats.johnsonsb": "doc",
    "scipy.stats.johnsonsu": "doc",
    "scipy.stats.powernorm": "doc",
    "scipy.stats.trapezoid": "doc",
    "scipy.stats.truncnorm": "doc",
    "scipy.stats.bernoulli": "doc",
    "scipy.stats.betabinom": "doc",
    "scipy.stats.yulesimon": "doc",
    "scipy.stats.variation": "doc",
    "scipy.stats.bayes_mvs": "doc",
    "scipy.stats.ttest_ind": "doc",
    "scipy.stats.ppcc_plot": "doc",
    "scipy.signal.quadratic": "doc",
    "scipy.signal.cspline1d": "doc",
    "scipy.signal.qspline1d": "doc",
    "scipy.signal.cspline2d": "doc",
    "scipy.signal.qspline2d": "doc",
    "scipy.signal.Filtering": "doc",
    "scipy.signal.findfreqs": "doc",
    "scipy.signal.freqs_zpk": "doc",
    "scipy.signal.freqz_zpk": "doc",
    "scipy.signal.iirfilter": "doc",
    "scipy.signal.lp2bp_zpk": "doc",
    "scipy.signal.lp2bs_zpk": "doc",
    "scipy.signal.lp2hp_zpk": "doc",
    "scipy.signal.lp2lp_zpk": "doc",
    "scipy.signal.dfreqresp": "doc",
    "scipy.signal.Waveforms": "doc",
    "scipy.signal.argrelmin": "doc",
    "scipy.signal.argrelmax": "doc",
    "scipy.sparse.Functions": "doc",
    "scipy.spatial.Delaunay": "doc",
    "scipy.special.ai_zeros": "doc",
    "scipy.special.bi_zeros": "doc",
    "scipy.special.ellipkm1": "doc",
    "scipy.special.hankel1e": "doc",
    "scipy.special.hankel2e": "doc",
    "scipy.special.jn_zeros": "doc",
    "scipy.special.yn_zeros": "doc",
    "scipy.special.y0_zeros": "doc",
    "scipy.special.y1_zeros": "doc",
    "scipy.special.fdtridfd": "doc",
    "scipy.special.nctdtrit": "doc",
    "scipy.special.nrdtrimn": "doc",
    "scipy.special.stdtridf": "doc",
    "scipy.special.log_ndtr": "doc",
    "scipy.special.chndtrix": "doc",
    "scipy.special.boxcox1p": "doc",
    "scipy.special.rel_entr": "doc",
    "scipy.special.sph_harm": "doc",
    "scipy.special.legendre": "doc",
    "scipy.special.laguerre": "doc",
    "scipy.special.pbdv_seq": "doc",
    "scipy.special.pbvv_seq": "doc",
    "scipy.special.pbdn_seq": "doc",
    "scipy.special.obl_rad1": "doc",
    "scipy.special.obl_rad2": "doc",
    "scipy.special.lambertw": "doc",
    "scipy.stats.genextreme": "doc",
    "scipy.stats.gausshyper": "doc",
    "scipy.stats.halfcauchy": "doc",
    "scipy.stats.invweibull": "doc",
    "scipy.stats.truncexpon": "doc",
    "scipy.stats.wrapcauchy": "doc",
    "scipy.stats.kendalltau": "doc",
    "scipy.stats.boxcox_llf": "doc",
    "scipy.stats.yeojohnson": "doc",
    "scipy.stats.Plot-tests": "doc",
    "scipy.stats.mstats.sem": "doc",
    "scipy.signal.lfilter_zi": "doc",
    "scipy.signal.cmplx_sort": "doc",
    "scipy.signal.gausspulse": "doc",
    "scipy.signal.sweep_poly": "doc",
    "scipy.signal.find_peaks": "doc",
    "scipy.signal.check_COLA": "doc",
    "scipy.signal.check_NOLA": "doc",
    "scipy.sparse.Exceptions": "doc",
    "scipy.special.jnp_zeros": "doc",
    "scipy.special.ynp_zeros": "doc",
    "scipy.special.y1p_zeros": "doc",
    "scipy.special.nctdtridf": "doc",
    "scipy.special.chndtridf": "doc",
    "scipy.special.erf_zeros": "doc",
    "scipy.special.sh_chebyt": "doc",
    "scipy.special.sh_chebyu": "doc",
    "scipy.special.sh_jacobi": "doc",
    "scipy.special.ber_zeros": "doc",
    "scipy.special.bei_zeros": "doc",
    "scipy.special.ker_zeros": "doc",
    "scipy.special.kei_zeros": "doc",
    "scipy.special.bernoulli": "doc",
    "scipy.stats.halfgennorm": "doc",
    "scipy.stats.weibull_min": "doc",
    "scipy.stats.jarque_bera": "doc",
    "scipy.stats.mstats.skew": "doc",
    "scipy.signal.place_poles": "doc",
    "scipy.signal.max_len_seq": "doc",
    "scipy.signal.peak_widths": "doc",
    "scipy.spatial.ConvexHull": "doc",
    "scipy.special.jnyn_zeros": "doc",
    "scipy.special.besselpoly": "doc",
    "scipy.special.riccati_jn": "doc",
    "scipy.special.riccati_yn": "doc",
    "scipy.special.ncfdtridfd": "doc",
    "scipy.special.ncfdtridfn": "doc",
    "scipy.special.inv_boxcox": "doc",
    "scipy.special.obl_cv_seq": "doc",
    "scipy.special.berp_zeros": "doc",
    "scipy.special.kerp_zeros": "doc",
    "scipy.stats.find_repeats": "doc",
    "scipy.stats.siegelslopes": "doc",
    "scipy.stats.mannwhitneyu": "doc",
    "scipy.stats.mstats.gmean": "doc",
    "scipy.stats.mstats.hmean": "doc",
    "scipy.stats.mstats.meppf": "doc",
    "scipy.stats.mstats.Other": "doc",
    "scipy.signal.gauss_spline": "doc",
    "scipy.signal.order_filter": "doc",
    "scipy.signal.unique_roots": "doc",
    "scipy.special.jnjnp_zeros": "doc",
    "scipy.special.eval_chebyt": "doc",
    "scipy.special.eval_chebyu": "doc",
    "scipy.special.eval_chebyc": "doc",
    "scipy.special.eval_chebys": "doc",
    "scipy.special.eval_jacobi": "doc",
    "scipy.special.obl_rad1_cv": "doc",
    "scipy.special.obl_rad2_cv": "doc",
    "scipy.stats.mstats.kstest": "doc",
    "scipy.stats.mstats.zscore": "doc",
    "scipy.signal.argrelextrema": "doc",
    "scipy.sparse.SparseWarning": "doc",
    "scipy.special.inv_boxcox1p": "doc",
    "scipy.stats.anderson_ksamp": "doc",
    "scipy.stats.boxcox_normmax": "doc",
    "scipy.stats.yeojohnson_llf": "doc",
    "scipy.stats.mstats.kruskal": "doc",
    "scipy.signal.cspline1d_eval": "doc",
    "scipy.signal.qspline1d_eval": "doc",
    "scipy.signal.ZerosPolesGain": "doc",
    "scipy.sparse.isspmatrix_lil": "doc",
    "scipy.sparse.isspmatrix_dok": "doc",
    "scipy.sparse.isspmatrix_dia": "doc",
    "scipy.special.fresnel_zeros": "doc",
    "scipy.stats.genhalflogistic": "doc",
    "scipy.stats.obrientransform": "doc",
    "scipy.stats.boxcox_normplot": "doc",
    "scipy.stats.mstats.kurtosis": "doc",
    "scipy.stats.mstats.f_oneway": "doc",
    "scipy.stats.mstats.pearsonr": "doc",
    "scipy.stats.mstats.ks_2samp": "doc",
    "scipy.stats.mstats.ks_1samp": "doc",
    "scipy.stats.mstats.rankdata": "doc",
    "scipy.stats.mstats.skewtest": "doc",
    "scipy.signal.BadCoefficients": "doc",
    "scipy.sparse.csgraph.johnson": "doc",
    "scipy.special.fresnelc_zeros": "doc",
    "scipy.special.fresnels_zeros": "doc",
    "scipy.special.eval_sh_chebyt": "doc",
    "scipy.special.eval_sh_chebyu": "doc",
    "scipy.special.eval_sh_jacobi": "doc",
    "scipy.stats.binned_statistic": "doc",
    "scipy.stats.mstats.variation": "doc",
    "scipy.stats.mstats.ttest_ind": "doc",
    "scipy.signal.TransferFunction": "doc",
    "scipy.spatial.voronoi_plot_2d": "doc",
    "scipy.special.eval_gegenbauer": "doc",
    "scipy.special.roots_sh_chebyt": "doc",
    "scipy.special.roots_sh_chebyu": "doc",
    "scipy.special.roots_sh_jacobi": "doc",
    "scipy.stats.mstats.mquantiles": "doc",
    "scipy.stats.mstats.kendalltau": "doc",
    "scipy.spatial.SphericalVoronoi": "doc",
    "scipy.spatial.delaunay_plot_2d": "doc",
    "scipy.sparse.csgraph.laplacian": "doc",
    "scipy.special.eval_hermitenorm": "doc",
    "scipy.special.eval_sh_legendre": "doc",
    "scipy.stats.laplace_asymmetric": "doc",
    "scipy.stats.random_correlation": "doc",
    "scipy.stats.yeojohnson_normmax": "doc",
    "scipy.signal.choose_conv_method": "doc",
    "scipy.stats.special_ortho_group": "doc",
    "scipy.stats.binned_statistic_2d": "doc",
    "scipy.stats.binned_statistic_dd": "doc",
    "scipy.stats.yeojohnson_normplot": "doc",
    "scipy.stats.mstats.idealfourths": "doc",
    "scipy.stats.mstats.find_repeats": "doc",
    "scipy.stats.mstats.siegelslopes": "doc",
    "scipy.stats.mstats.mannwhitneyu": "doc",
    "scipy.stats.mstats.kruskalwallis": "doc",
    "scipy.spatial.convex_hull_plot_2d": "doc",
    "scipy.stats.mstats.hdquantiles_sd": "doc",
    "scipy.special.SpecialFunctionError": "doc",
    "scipy.stats.mstats.obrientransform": "doc",
    "scipy.spatial.HalfspaceIntersection": "doc",
    "scipy.sparse.csgraph.floyd_warshall": "doc",
    "scipy.sparse.SparseEfficiencyWarning": "doc",
    "scipy.sparse.csgraph.structural_rank": "doc",
    "scipy.special.SpecialFunctionWarning": "doc",
    "scipy.sparse.csgraph.reconstruct_path": "doc",
    "scipy.stats.median_absolute_deviation": "doc",
    "scipy.stats.mstats.kendalltau_seasonal": "doc",
    "scipy.stats.mstats.sen_seasonal_slopes": "doc",
    "scipy.sparse.csgraph.NegativeCycleError": "doc",
    "scipy.sparse.csgraph.csgraph_from_dense": "doc",
    "scipy.sparse.csgraph.csgraph_masked_from_dense": "doc",
    "scipy.sparse.csgraph.min_weight_full_bipartite_matching": "doc"
  },
  "tensorflow.logging": {
    "tensorflow.compat.v1.logging": "doc",
    "tensorflow.compat.v1.logging.TaskLevelStatusMessage": "doc",
    "tensorflow.compat.v1.logging.debug": "doc",
    "tensorflow.compat.v1.logging.error": "doc",
    "tensorflow.compat.v1.logging.fatal": "doc",
    "tensorflow.compat.v1.logging.log": "doc",
    "tensorflow.compat.v1.logging.info": "doc",
    "tensorflow.compat.v1.logging.vlog": "doc",
    "tensorflow.compat.v1.logging.warn": "doc",
    "tensorflow.compat.v1.logging.flush": "doc",
    "tensorflow.compat.v1.logging.log_if": "doc",
    "tensorflow.compat.v1.logging.warning": "doc",
    "tensorflow.compat.v1.logging.log_every_n": "doc",
    "tensorflow.compat.v1.logging.log_first_n": "doc",
    "tensorflow.compat.v1.logging.get_verbosity": "doc",
    "tensorflow.compat.v1.logging.set_verbosity": "doc",
    "tensorflow.debugging": "doc",
    "tensorflow.debugging.Assert": "doc",
    "tensorflow.compat.v1.debugging": "doc",
    "tensorflow.debugging.assert_less": "doc",
    "tensorflow.debugging.assert_near": "doc",
    "tensorflow.debugging.assert_rank": "doc",
    "tensorflow.debugging.assert_type": "doc",
    "tensorflow.debugging.assert_equal": "doc",
    "tensorflow.debugging.experimental": "doc",
    "tensorflow.debugging.assert_scalar": "doc",
    "tensorflow.debugging.assert_shapes": "doc",
    "tensorflow.debugging.assert_greater": "doc",
    "tensorflow.debugging.assert_integer": "doc",
    "tensorflow.debugging.assert_rank_in": "doc",
    "tensorflow.debugging.check_numerics": "doc",
    "tensorflow.debugging.assert_negative": "doc",
    "tensorflow.debugging.assert_positive": "doc",
    "tensorflow.compat.v1.debugging.Assert": "doc",
    "tensorflow.compat.v1.debugging.is_inf": "doc",
    "tensorflow.compat.v1.debugging.is_nan": "doc",
    "tensorflow.debugging.assert_all_finite": "doc",
    "tensorflow.debugging.assert_less_equal": "doc",
    "tensorflow.debugging.assert_none_equal": "doc",
    "tensorflow.debugging.is_numeric_tensor": "doc",
    "tensorflow.debugging.assert_non_negative": "doc",
    "tensorflow.debugging.assert_non_positive": "doc",
    "tensorflow.compat.v1.debugging.is_finite": "doc",
    "tensorflow.debugging.assert_greater_equal": "doc",
    "tensorflow.debugging.assert_rank_at_least": "doc",
    "tensorflow.debugging.enable_check_numerics": "doc",
    "tensorflow.compat.v1.debugging.assert_less": "doc",
    "tensorflow.compat.v1.debugging.assert_near": "doc",
    "tensorflow.compat.v1.debugging.assert_rank": "doc",
    "tensorflow.compat.v1.debugging.assert_type": "doc",
    "tensorflow.debugging.assert_proper_iterable": "doc",
    "tensorflow.debugging.disable_check_numerics": "doc",
    "tensorflow.compat.v1.debugging.assert_equal": "doc",
    "tensorflow.compat.v1.debugging.experimental": "doc",
    "tensorflow.debugging.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.debugging.assert_scalar": "doc",
    "tensorflow.compat.v1.debugging.assert_shapes": "doc",
    "tensorflow.debugging.get_log_device_placement": "doc",
    "tensorflow.debugging.set_log_device_placement": "doc",
    "tensorflow.compat.v1.debugging.assert_greater": "doc",
    "tensorflow.compat.v1.debugging.assert_integer": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_in": "doc",
    "tensorflow.compat.v1.debugging.check_numerics": "doc",
    "tensorflow.compat.v1.debugging.assert_negative": "doc",
    "tensorflow.compat.v1.debugging.assert_positive": "doc",
    "tensorflow.compat.v1.debugging.assert_all_finite": "doc",
    "tensorflow.compat.v1.debugging.assert_less_equal": "doc",
    "tensorflow.compat.v1.debugging.assert_none_equal": "doc",
    "tensorflow.compat.v1.debugging.is_non_decreasing": "doc",
    "tensorflow.compat.v1.debugging.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.debugging.assert_non_negative": "doc",
    "tensorflow.compat.v1.debugging.assert_non_positive": "doc",
    "tensorflow.compat.v1.debugging.assert_greater_equal": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.debugging.enable_check_numerics": "doc",
    "tensorflow.compat.v1.debugging.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.debugging.disable_check_numerics": "doc",
    "tensorflow.compat.v1.debugging.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.debugging.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.debugging.get_log_device_placement": "doc",
    "tensorflow.compat.v1.debugging.set_log_device_placement": "doc",
    "tensorflow.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.compat.v1.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.compat.v1.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.keras.preprocessing.image.load_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.load_img": "doc",
    "tensorflow.argmin": "doc",
    "tensorflow.config": "doc",
    "tensorflow.math.log": "doc",
    "tensorflow.math.log1p": "doc",
    "tensorflow.linalg.logm": "doc",
    "tensorflow.math.argmin": "doc",
    "tensorflow.strings.join": "doc",
    "tensorflow.linalg.logdet": "doc",
    "tensorflow.compat.v1.log": "doc",
    "tensorflow.losses.logcosh": "doc",
    "tensorflow.raw_ops.ArgMin": "doc",
    "tensorflow.metrics.logcosh": "doc",
    "tensorflow.compat.v1.log1p": "doc",
    "tensorflow.config.optimizer": "doc",
    "tensorflow.config.threading": "doc",
    "tensorflow.compat.v1.argmin": "doc",
    "tensorflow.compat.v1.config": "doc",
    "tensorflow.compat.v1.math.log": "doc",
    "tensorflow.config.experimental": "doc",
    "tensorflow.config.LogicalDevice": "doc",
    "tensorflow.keras.layers.Masking": "doc",
    "tensorflow.keras.losses.logcosh": "doc",
    "tensorflow.compat.v1.math.log1p": "doc",
    "tensorflow.config.PhysicalDevice": "doc",
    "tensorflow.keras.metrics.logcosh": "doc",
    "tensorflow.compat.v1.linalg.logm": "doc",
    "tensorflow.compat.v1.math.argmin": "doc",
    "tensorflow.experimental.numpy.log": "doc",
    "tensorflow.compat.v1.strings.join": "doc",
    "tensorflow.experimental.numpy.log2": "doc",
    "tensorflow.compat.v1.linalg.logdet": "doc",
    "tensorflow.config.optimizer.get_jit": "doc",
    "tensorflow.config.optimizer.set_jit": "doc",
    "tensorflow.experimental.numpy.log10": "doc",
    "tensorflow.experimental.numpy.log1p": "doc",
    "tensorflow.experimental.numpy.argmin": "doc",
    "tensorflow.config.get_visible_devices": "doc",
    "tensorflow.config.set_visible_devices": "doc",
    "tensorflow.compat.v1.config.optimizer": "doc",
    "tensorflow.compat.v1.config.threading": "doc",
    "tensorflow.config.list_logical_devices": "doc",
    "tensorflow.config.functions_run_eagerly": "doc",
    "tensorflow.config.list_physical_devices": "doc",
    "tensorflow.config.run_functions_eagerly": "doc",
    "tensorflow.compat.v1.config.experimental": "doc",
    "tensorflow.compat.v1.keras.losses.cosine": "doc",
    "tensorflow.compat.v1.config.LogicalDevice": "doc",
    "tensorflow.compat.v1.keras.layers.Masking": "doc",
    "tensorflow.compat.v1.keras.losses.logcosh": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine": "doc",
    "tensorflow.compat.v1.config.PhysicalDevice": "doc",
    "tensorflow.compat.v1.keras.metrics.logcosh": "doc",
    "tensorflow.config.get_soft_device_placement": "doc",
    "tensorflow.config.set_soft_device_placement": "doc",
    "tensorflow.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.compat.v1.config.optimizer.get_jit": "doc",
    "tensorflow.compat.v1.config.optimizer.set_jit": "doc",
    "tensorflow.config.experimental_connect_to_host": "doc",
    "tensorflow.config.experimental.get_memory_usage": "doc",
    "tensorflow.compat.v1.config.get_visible_devices": "doc",
    "tensorflow.compat.v1.config.set_visible_devices": "doc",
    "tensorflow.config.experimental.get_device_policy": "doc",
    "tensorflow.config.experimental.get_memory_growth": "doc",
    "tensorflow.config.experimental.set_device_policy": "doc",
    "tensorflow.config.experimental.set_memory_growth": "doc",
    "tensorflow.compat.v1.config.list_logical_devices": "doc",
    "tensorflow.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.config.experimental.get_device_details": "doc",
    "tensorflow.config.experimental_connect_to_cluster": "doc",
    "tensorflow.compat.v1.config.functions_run_eagerly": "doc",
    "tensorflow.compat.v1.config.list_physical_devices": "doc",
    "tensorflow.compat.v1.config.run_functions_eagerly": "doc",
    "tensorflow.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.config.experimental.get_visible_devices": "doc",
    "tensorflow.config.experimental.set_visible_devices": "doc",
    "tensorflow.config.get_logical_device_configuration": "doc",
    "tensorflow.config.set_logical_device_configuration": "doc",
    "tensorflow.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.config.experimental.list_logical_devices": "doc",
    "tensorflow.config.experimental.list_physical_devices": "doc",
    "tensorflow.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.config.optimizer.get_experimental_options": "doc",
    "tensorflow.config.optimizer.set_experimental_options": "doc",
    "tensorflow.compat.v1.config.get_soft_device_placement": "doc",
    "tensorflow.compat.v1.config.set_soft_device_placement": "doc",
    "tensorflow.compat.v1.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_host": "doc",
    "tensorflow.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_usage": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_growth": "doc",
    "tensorflow.compat.v1.config.experimental.set_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.set_memory_growth": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_details": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_cluster": "doc",
    "tensorflow.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.compat.v1.config.experimental.get_visible_devices": "doc",
    "tensorflow.compat.v1.config.experimental.set_visible_devices": "doc",
    "tensorflow.compat.v1.config.get_logical_device_configuration": "doc",
    "tensorflow.compat.v1.config.set_logical_device_configuration": "doc",
    "tensorflow.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.compat.v1.config.experimental.list_logical_devices": "doc",
    "tensorflow.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.list_physical_devices": "doc",
    "tensorflow.compat.v1.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.compat.v1.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.compat.v1.config.optimizer.get_experimental_options": "doc",
    "tensorflow.compat.v1.config.optimizer.set_experimental_options": "doc",
    "tensorflow.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.compat.v1.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.compat.v1.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.compat.v1.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.compat.v1.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.compat.v1.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.keras.layers.Cropping1D": "doc",
    "tensorflow.keras.layers.Cropping2D": "doc",
    "tensorflow.keras.layers.Cropping3D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping1D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping2D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping3D": "doc",
    "tensorflow.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.compat.v1.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.nn.softsign": "doc",
    "tensorflow.math.softsign": "doc",
    "tensorflow.losses.log_cosh": "doc",
    "tensorflow.metrics.log_cosh": "doc",
    "tensorflow.raw_ops.AsString": "doc",
    "tensorflow.raw_ops.Softsign": "doc",
    "tensorflow.keras.losses.log_cosh": "doc",
    "tensorflow.compat.v1.nn.softsign": "doc",
    "tensorflow.keras.metrics.log_cosh": "doc",
    "tensorflow.compat.v1.math.softsign": "doc",
    "tensorflow.compat.v1.losses.log_loss": "doc",
    "tensorflow.keras.activations.softsign": "doc",
    "tensorflow.experimental.numpy.isneginf": "doc",
    "tensorflow.experimental.numpy.logspace": "doc",
    "tensorflow.compat.v1.keras.losses.log_cosh": "doc",
    "tensorflow.compat.v1.keras.metrics.log_cosh": "doc",
    "tensorflow.compat.v1.keras.activations.softsign": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.logical_and": "doc",
    "tensorflow.logical_not": "doc",
    "tensorflow.no_gradient": "doc",
    "tensorflow.math.log_sigmoid": "doc",
    "tensorflow.math.logical_and": "doc",
    "tensorflow.math.logical_not": "doc",
    "tensorflow.raw_ops.RaggedRange": "doc",
    "tensorflow.compat.v1.log_sigmoid": "doc",
    "tensorflow.compat.v1.logical_and": "doc",
    "tensorflow.compat.v1.logical_not": "doc",
    "tensorflow.compat.v1.no_gradient": "doc",
    "tensorflow.compat.v1.math.log_sigmoid": "doc",
    "tensorflow.compat.v1.math.logical_and": "doc",
    "tensorflow.compat.v1.math.logical_not": "doc",
    "tensorflow.experimental.numpy.logical_and": "doc",
    "tensorflow.experimental.numpy.logical_not": "doc",
    "tensorflow.estimator.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.train.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.estimator.LoggingTensorHook": "doc",
    "tensorflow.as_string": "doc",
    "tensorflow.train.FloatList": "doc",
    "tensorflow.random.Algorithm": "doc",
    "tensorflow.raw_ops.DecodePng": "doc",
    "tensorflow.raw_ops.EncodePng": "doc",
    "tensorflow.strings.as_string": "doc",
    "tensorflow.compat.v1.as_string": "doc",
    "tensorflow.compat.v1.container": "doc",
    "tensorflow.keras.layers.Embedding": "doc",
    "tensorflow.keras.layers.MaxPooling1D": "doc",
    "tensorflow.keras.layers.MaxPooling2D": "doc",
    "tensorflow.keras.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.train.FloatList": "doc",
    "tensorflow.tpu.experimental.embedding": "doc",
    "tensorflow.compat.v1.dtypes.as_string": "doc",
    "tensorflow.compat.v1.random.Algorithm": "doc",
    "tensorflow.compat.v1.strings.as_string": "doc",
    "tensorflow.experimental.numpy.logaddexp": "doc",
    "tensorflow.random.experimental.Algorithm": "doc",
    "tensorflow.compat.v1.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling3D": "doc",
    "tensorflow.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.compat.v1.keras.layers.Embedding": "doc",
    "tensorflow.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding": "doc",
    "tensorflow.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.compat.v1.random.experimental.Algorithm": "doc",
    "tensorflow.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.nn.log_poisson_loss": "doc",
    "tensorflow.compat.v1.nn.log_poisson_loss": "doc",
    "tensorflow.stop_gradient": "doc",
    "tensorflow.keras.preprocessing": "doc",
    "tensorflow.compat.v1.stop_gradient": "doc",
    "tensorflow.keras.preprocessing.text": "doc",
    "tensorflow.keras.preprocessing.image": "doc",
    "tensorflow.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.keras.preprocessing.sequence": "doc",
    "tensorflow.compat.v1.keras.preprocessing": "doc",
    "tensorflow.compat.v1.layers.max_pooling1d": "doc",
    "tensorflow.compat.v1.layers.max_pooling2d": "doc",
    "tensorflow.compat.v1.layers.max_pooling3d": "doc",
    "tensorflow.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.keras.preprocessing.image.save_img": "doc",
    "tensorflow.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.keras.preprocessing.image.smart_resize": "doc",
    "tensorflow.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence": "doc",
    "tensorflow.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.save_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.keras.preprocessing.text_dataset_from_directory": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.keras.preprocessing.image_dataset_from_directory": "doc",
    "tensorflow.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.keras.preprocessing.timeseries_dataset_from_array": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.get_logger": "doc",
    "tensorflow.logical_or": "doc",
    "tensorflow.io.decode_png": "doc",
    "tensorflow.io.encode_png": "doc",
    "tensorflow.math.logical_or": "doc",
    "tensorflow.image.decode_png": "doc",
    "tensorflow.image.encode_png": "doc",
    "tensorflow.raw_ops.LogicalAnd": "doc",
    "tensorflow.compat.v1.LogMessage": "doc",
    "tensorflow.compat.v1.NoGradient": "doc",
    "tensorflow.compat.v1.SessionLog": "doc",
    "tensorflow.compat.v1.get_logger": "doc",
    "tensorflow.compat.v1.logical_or": "doc",
    "tensorflow.compat.v1.io.decode_png": "doc",
    "tensorflow.compat.v1.io.encode_png": "doc",
    "tensorflow.compat.v1.math.logical_or": "doc",
    "tensorflow.compat.v1.image.decode_png": "doc",
    "tensorflow.compat.v1.image.encode_png": "doc",
    "tensorflow.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.data.experimental.to_variant": "doc",
    "tensorflow.keras.constraints.Constraint": "doc",
    "tensorflow.compat.v1.summary.SessionLog": "doc",
    "tensorflow.experimental.numpy.logaddexp2": "doc",
    "tensorflow.experimental.numpy.logical_or": "doc",
    "tensorflow.compat.v1.SummaryMetadata.PluginData": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.compat.v1.data.experimental.to_variant": "doc",
    "tensorflow.compat.v1.keras.constraints.Constraint": "doc",
    "tensorflow.eig": "doc",
    "tensorflow.sin": "doc",
    "tensorflow.asin": "doc",
    "tensorflow.cond": "doc",
    "tensorflow.lite": "doc",
    "tensorflow.sign": "doc",
    "tensorflow.sinh": "doc",
    "tensorflow.asinh": "doc",
    "tensorflow.print": "doc",
    "tensorflow.round": "doc",
    "tensorflow.train": "doc",
    "tensorflow.linalg": "doc",
    "tensorflow.lookup": "doc",
    "tensorflow.losses": "doc",
    "tensorflow.nn.lrn": "doc",
    "tensorflow.ragged": "doc",
    "tensorflow.strings": "doc",
    "tensorflow.io.gfile": "doc",
    "tensorflow.math.sin": "doc",
    "tensorflow.linalg.lu": "doc",
    "tensorflow.linalg.qr": "doc",
    "tensorflow.math.asin": "doc",
    "tensorflow.math.conj": "doc",
    "tensorflow.math.rint": "doc",
    "tensorflow.math.sign": "doc",
    "tensorflow.math.sinh": "doc",
    "tensorflow.test.main": "doc",
    "tensorflow.linalg.det": "doc",
    "tensorflow.linalg.eig": "doc",
    "tensorflow.linalg.eye": "doc",
    "tensorflow.linalg.inv": "doc",
    "tensorflow.linalg.svd": "doc",
    "tensorflow.losses.KLD": "doc",
    "tensorflow.losses.MAE": "doc",
    "tensorflow.losses.MSE": "doc",
    "tensorflow.losses.get": "doc",
    "tensorflow.losses.kld": "doc",
    "tensorflow.losses.mae": "doc",
    "tensorflow.losses.mse": "doc",
    "tensorflow.math.asinh": "doc",
    "tensorflow.math.round": "doc",
    "tensorflow.math.xlogy": "doc",
    "tensorflow.linalg.diag": "doc",
    "tensorflow.linalg.eigh": "doc",
    "tensorflow.linalg.expm": "doc",
    "tensorflow.linalg.norm": "doc",
    "tensorflow.linalg.pinv": "doc",
    "tensorflow.lite.OpsSet": "doc",
    "tensorflow.losses.Loss": "doc",
    "tensorflow.losses.MAPE": "doc",
    "tensorflow.losses.MSLE": "doc",
    "tensorflow.losses.mape": "doc",
    "tensorflow.losses.msle": "doc",
    "tensorflow.math.erfinv": "doc",
    "tensorflow.math.is_inf": "doc",
    "tensorflow.math.lgamma": "doc",
    "tensorflow.raw_ops.Eig": "doc",
    "tensorflow.raw_ops.Log": "doc",
    "tensorflow.raw_ops.Min": "doc",
    "tensorflow.raw_ops.Sin": "doc",
    "tensorflow.keras.losses": "doc",
    "tensorflow.linalg.cross": "doc",
    "tensorflow.linalg.lstsq": "doc",
    "tensorflow.linalg.solve": "doc",
    "tensorflow.linalg.sqrtm": "doc",
    "tensorflow.linalg.trace": "doc",
    "tensorflow.losses.Hinge": "doc",
    "tensorflow.losses.Huber": "doc",
    "tensorflow.losses.hinge": "doc",
    "tensorflow.losses.huber": "doc",
    "tensorflow.math.betainc": "doc",
    "tensorflow.math.erfcinv": "doc",
    "tensorflow.math.xlog1py": "doc",
    "tensorflow.ragged.cross": "doc",
    "tensorflow.ragged.range": "doc",
    "tensorflow.ragged.stack": "doc",
    "tensorflow.raw_ops.Asin": "doc",
    "tensorflow.raw_ops.Conj": "doc",
    "tensorflow.raw_ops.Diag": "doc",
    "tensorflow.raw_ops.Rint": "doc",
    "tensorflow.raw_ops.Sign": "doc",
    "tensorflow.raw_ops.Sinh": "doc",
    "tensorflow.train.JobDef": "doc",
    "tensorflow.io.gfile.copy": "doc",
    "tensorflow.io.gfile.glob": "doc",
    "tensorflow.io.gfile.stat": "doc",
    "tensorflow.io.gfile.walk": "doc",
    "tensorflow.linalg.einsum": "doc",
    "tensorflow.linalg.matmul": "doc",
    "tensorflow.linalg.matvec": "doc",
    "tensorflow.lite.Optimize": "doc",
    "tensorflow.metrics.Hinge": "doc",
    "tensorflow.metrics.hinge": "doc",
    "tensorflow.raw_ops.Asinh": "doc",
    "tensorflow.raw_ops.Log1p": "doc",
    "tensorflow.raw_ops.Print": "doc",
    "tensorflow.raw_ops.Round": "doc",
    "tensorflow.raw_ops.Xlogy": "doc",
    "tensorflow.sparse.retain": "doc",
    "tensorflow.strings.lower": "doc",
    "tensorflow.strings.split": "doc",
    "tensorflow.strings.strip": "doc",
    "tensorflow.strings.upper": "doc",
    "tensorflow.train.Example": "doc",
    "tensorflow.train.Feature": "doc",
    "tensorflow.compat.v1.sin": "doc",
    "tensorflow.io.gfile.GFile": "doc",
    "tensorflow.io.gfile.isdir": "doc",
    "tensorflow.io.gfile.mkdir": "doc",
    "tensorflow.linalg.adjoint": "doc",
    "tensorflow.linalg.eigvals": "doc",
    "tensorflow.linalg.slogdet": "doc",
    "tensorflow.losses.LogCosh": "doc",
    "tensorflow.losses.Poisson": "doc",
    "tensorflow.losses.poisson": "doc",
    "tensorflow.raw_ops.Assign": "doc",
    "tensorflow.raw_ops.Erfinv": "doc",
    "tensorflow.raw_ops.Expint": "doc",
    "tensorflow.strings.format": "doc",
    "tensorflow.strings.length": "doc",
    "tensorflow.strings.ngrams": "doc",
    "tensorflow.strings.substr": "doc",
    "tensorflow.train.Features": "doc",
    "tensorflow.compat.v1.asin": "doc",
    "tensorflow.compat.v1.cond": "doc",
    "tensorflow.compat.v1.conj": "doc",
    "tensorflow.compat.v1.diag": "doc",
    "tensorflow.compat.v1.lite": "doc",
    "tensorflow.compat.v1.rint": "doc",
    "tensorflow.compat.v1.sign": "doc",
    "tensorflow.compat.v1.sinh": "doc",
    "tensorflow.io.gfile.exists": "doc",
    "tensorflow.io.gfile.remove": "doc",
    "tensorflow.io.gfile.rename": "doc",
    "tensorflow.io.gfile.rmtree": "doc",
    "tensorflow.linalg.cholesky": "doc",
    "tensorflow.linalg.eigvalsh": "doc",
    "tensorflow.linalg.lu_solve": "doc",
    "tensorflow.linalg.set_diag": "doc",
    "tensorflow.lite.TargetSpec": "doc",
    "tensorflow.ragged.constant": "doc",
    "tensorflow.raw_ops.Betainc": "doc",
    "tensorflow.raw_ops.Xlog1py": "doc",
    "tensorflow.train.BytesList": "doc",
    "tensorflow.train.Int64List": "doc",
    "tensorflow.train.ServerDef": "doc",
    "tensorflow.compat.v1.Print": "doc",
    "tensorflow.compat.v1.asinh": "doc",
    "tensorflow.compat.v1.gfile": "doc",
    "tensorflow.compat.v1.print": "doc",
    "tensorflow.compat.v1.round": "doc",
    "tensorflow.compat.v1.train": "doc",
    "tensorflow.io.gfile.listdir": "doc",
    "tensorflow.keras.losses.KLD": "doc",
    "tensorflow.keras.losses.MAE": "doc",
    "tensorflow.keras.losses.MSE": "doc",
    "tensorflow.keras.losses.get": "doc",
    "tensorflow.keras.losses.kld": "doc",
    "tensorflow.keras.losses.mae": "doc",
    "tensorflow.keras.losses.mse": "doc",
    "tensorflow.linalg.band_part": "doc",
    "tensorflow.linalg.diag_part": "doc",
    "tensorflow.linalg.normalize": "doc",
    "tensorflow.linalg.tensordot": "doc",
    "tensorflow.lite.Interpreter": "doc",
    "tensorflow.losses.Reduction": "doc",
    "tensorflow.losses.serialize": "doc",
    "tensorflow.saved_model.load": "doc",
    "tensorflow.train.Checkpoint": "doc",
    "tensorflow.train.ClusterDef": "doc",
    "tensorflow.compat.v1.assign": "doc",
    "tensorflow.compat.v1.is_inf": "doc",
    "tensorflow.compat.v1.lgamma": "doc",
    "tensorflow.compat.v1.linalg": "doc",
    "tensorflow.compat.v1.lookup": "doc",
    "tensorflow.compat.v1.losses": "doc",
    "tensorflow.compat.v1.nn.lrn": "doc",
    "tensorflow.compat.v1.ragged": "doc",
    "tensorflow.io.gfile.makedirs": "doc",
    "tensorflow.keras.losses.Loss": "doc",
    "tensorflow.keras.losses.MAPE": "doc",
    "tensorflow.keras.losses.MSLE": "doc",
    "tensorflow.keras.losses.mape": "doc",
    "tensorflow.keras.losses.msle": "doc",
    "tensorflow.lite.experimental": "doc",
    "tensorflow.strings.to_number": "doc",
    "tensorflow.train.ClusterSpec": "doc",
    "tensorflow.train.Coordinator": "doc",
    "tensorflow.train.FeatureList": "doc",
    "tensorflow.compat.v1.arg_min": "doc",
    "tensorflow.compat.v1.betainc": "doc",
    "tensorflow.compat.v1.strings": "doc",
    "tensorflow.keras.losses.Hinge": "doc",
    "tensorflow.keras.losses.Huber": "doc",
    "tensorflow.keras.losses.hinge": "doc",
    "tensorflow.keras.losses.huber": "doc",
    "tensorflow.linalg.global_norm": "doc",
    "tensorflow.linalg.matrix_rank": "doc",
    "tensorflow.linalg.tensor_diag": "doc",
    "tensorflow.losses.deserialize": "doc",
    "tensorflow.train.FeatureLists": "doc",
    "tensorflow.train.experimental": "doc",
    "tensorflow.compat.v1.io.gfile": "doc",
    "tensorflow.compat.v1.math.sin": "doc",
    "tensorflow.keras.metrics.Hinge": "doc",
    "tensorflow.keras.metrics.hinge": "doc",
    "tensorflow.linalg.experimental": "doc",
    "tensorflow.linalg.l2_normalize": "doc",
    "tensorflow.lookup.experimental": "doc",
    "tensorflow.losses.KLDivergence": "doc",
    "tensorflow.losses.SquaredHinge": "doc",
    "tensorflow.math.special.expint": "doc",
    "tensorflow.ragged.boolean_mask": "doc",
    "tensorflow.ragged.cross_hashed": "doc",
    "tensorflow.strings.bytes_split": "doc",
    "tensorflow.strings.reduce_join": "doc",
    "tensorflow.train.load_variable": "doc",
    "tensorflow.compat.v1.linalg.lu": "doc",
    "tensorflow.compat.v1.linalg.qr": "doc",
    "tensorflow.compat.v1.math.asin": "doc",
    "tensorflow.compat.v1.math.conj": "doc",
    "tensorflow.compat.v1.math.rint": "doc",
    "tensorflow.compat.v1.math.sign": "doc",
    "tensorflow.compat.v1.math.sinh": "doc",
    "tensorflow.compat.v1.test.main": "doc",
    "tensorflow.keras.losses.LogCosh": "doc",
    "tensorflow.keras.losses.Poisson": "doc",
    "tensorflow.keras.losses.poisson": "doc",
    "tensorflow.lite.TFLiteConverter": "doc",
    "tensorflow.lookup.TextFileIndex": "doc",
    "tensorflow.losses.kl_divergence": "doc",
    "tensorflow.losses.squared_hinge": "doc",
    "tensorflow.train.list_variables": "doc",
    "tensorflow.compat.v1.gfile.Copy": "doc",
    "tensorflow.compat.v1.gfile.Glob": "doc",
    "tensorflow.compat.v1.gfile.Open": "doc",
    "tensorflow.compat.v1.gfile.Stat": "doc",
    "tensorflow.compat.v1.gfile.Walk": "doc",
    "tensorflow.compat.v1.linalg.det": "doc",
    "tensorflow.compat.v1.linalg.eye": "doc",
    "tensorflow.compat.v1.linalg.inv": "doc",
    "tensorflow.compat.v1.linalg.svd": "doc",
    "tensorflow.compat.v1.math.asinh": "doc",
    "tensorflow.compat.v1.math.round": "doc",
    "tensorflow.compat.v1.math.xlogy": "doc",
    "tensorflow.linalg.LinearOperator": "doc",
    "tensorflow.linalg.cholesky_solve": "doc",
    "tensorflow.linalg.lu_reconstruct": "doc",
    "tensorflow.strings.regex_replace": "doc",
    "tensorflow.strings.unicode_split": "doc",
    "tensorflow.train.SequenceExample": "doc",
    "tensorflow.train.load_checkpoint": "doc",
    "tensorflow.compat.v1.gfile.GFile": "doc",
    "tensorflow.compat.v1.gfile.MkDir": "doc",
    "tensorflow.compat.v1.linalg.diag": "doc",
    "tensorflow.compat.v1.linalg.eigh": "doc",
    "tensorflow.compat.v1.linalg.expm": "doc",
    "tensorflow.compat.v1.linalg.norm": "doc",
    "tensorflow.compat.v1.linalg.pinv": "doc",
    "tensorflow.compat.v1.lite.OpHint": "doc",
    "tensorflow.compat.v1.lite.OpsSet": "doc",
    "tensorflow.compat.v1.math.erfinv": "doc",
    "tensorflow.compat.v1.math.is_inf": "doc",
    "tensorflow.compat.v1.math.lgamma": "doc",
    "tensorflow.compat.v1.train.Saver": "doc",
    "tensorflow.compat.v1.train.batch": "doc",
    "tensorflow.data.experimental.load": "doc",
    "tensorflow.experimental.numpy.min": "doc",
    "tensorflow.experimental.numpy.sin": "doc",
    "tensorflow.keras.losses.Reduction": "doc",
    "tensorflow.keras.losses.serialize": "doc",
    "tensorflow.lookup.StaticHashTable": "doc",
    "tensorflow.ragged.map_flat_values": "doc",
    "tensorflow.raw_ops.ApplyPowerSign": "doc",
    "tensorflow.raw_ops.RaggedBincount": "doc",
    "tensorflow.raw_ops.SelfAdjointEig": "doc",
    "tensorflow.strings.to_hash_bucket": "doc",
    "tensorflow.strings.unicode_decode": "doc",
    "tensorflow.strings.unicode_encode": "doc",
    "tensorflow.strings.unicode_script": "doc",
    "tensorflow.compat.v1.gfile.Exists": "doc",
    "tensorflow.compat.v1.gfile.Remove": "doc",
    "tensorflow.compat.v1.gfile.Rename": "doc",
    "tensorflow.compat.v1.keras.losses": "doc",
    "tensorflow.compat.v1.linalg.cross": "doc",
    "tensorflow.compat.v1.linalg.lstsq": "doc",
    "tensorflow.compat.v1.linalg.solve": "doc",
    "tensorflow.compat.v1.linalg.sqrtm": "doc",
    "tensorflow.compat.v1.linalg.trace": "doc",
    "tensorflow.compat.v1.math.betainc": "doc",
    "tensorflow.compat.v1.math.erfcinv": "doc",
    "tensorflow.compat.v1.math.xlog1py": "doc",
    "tensorflow.compat.v1.ragged.cross": "doc",
    "tensorflow.compat.v1.ragged.range": "doc",
    "tensorflow.compat.v1.ragged.stack": "doc",
    "tensorflow.compat.v1.train.JobDef": "doc",
    "tensorflow.compat.v1.train.Server": "doc",
    "tensorflow.experimental.numpy.amin": "doc",
    "tensorflow.experimental.numpy.conj": "doc",
    "tensorflow.experimental.numpy.diag": "doc",
    "tensorflow.experimental.numpy.sign": "doc",
    "tensorflow.experimental.numpy.sinc": "doc",
    "tensorflow.experimental.numpy.sinh": "doc",
    "tensorflow.linalg.matrix_transpose": "doc",
    "tensorflow.linalg.tensor_diag_part": "doc",
    "tensorflow.linalg.triangular_solve": "doc",
    "tensorflow.losses.CategoricalHinge": "doc",
    "tensorflow.losses.CosineSimilarity": "doc",
    "tensorflow.losses.MeanSquaredError": "doc",
    "tensorflow.train.CheckpointManager": "doc",
    "tensorflow.train.CheckpointOptions": "doc",
    "tensorflow.train.JobDef.TasksEntry": "doc",
    "tensorflow.train.latest_checkpoint": "doc",
    "tensorflow.compat.v1.io.gfile.copy": "doc",
    "tensorflow.compat.v1.io.gfile.glob": "doc",
    "tensorflow.compat.v1.io.gfile.stat": "doc",
    "tensorflow.compat.v1.io.gfile.walk": "doc",
    "tensorflow.compat.v1.linalg.einsum": "doc",
    "tensorflow.compat.v1.linalg.matmul": "doc",
    "tensorflow.compat.v1.linalg.matvec": "doc",
    "tensorflow.compat.v1.lite.Optimize": "doc",
    "tensorflow.compat.v1.sparse.retain": "doc",
    "tensorflow.compat.v1.strings.lower": "doc",
    "tensorflow.compat.v1.strings.split": "doc",
    "tensorflow.compat.v1.strings.strip": "doc",
    "tensorflow.compat.v1.strings.upper": "doc",
    "tensorflow.compat.v1.train.Example": "doc",
    "tensorflow.compat.v1.train.Feature": "doc",
    "tensorflow.experimental.numpy.isinf": "doc",
    "tensorflow.experimental.numpy.round": "doc",
    "tensorflow.keras.applications.vgg16": "doc",
    "tensorflow.keras.applications.vgg19": "doc",
    "tensorflow.keras.constraints.NonNeg": "doc",
    "tensorflow.keras.losses.deserialize": "doc",
    "tensorflow.linalg.lu_matrix_inverse": "doc",
    "tensorflow.linalg.tridiagonal_solve": "doc",
    "tensorflow.losses.MeanAbsoluteError": "doc",
    "tensorflow.losses.categorical_hinge": "doc",
    "tensorflow.losses.cosine_similarity": "doc",
    "tensorflow.strings.regex_full_match": "doc",
    "tensorflow.xla.experimental.compile": "doc",
    "tensorflow.compat.v1.gfile.MakeDirs": "doc",
    "tensorflow.compat.v1.io.gfile.GFile": "doc",
    "tensorflow.compat.v1.io.gfile.isdir": "doc",
    "tensorflow.compat.v1.io.gfile.mkdir": "doc",
    "tensorflow.compat.v1.linalg.adjoint": "doc",
    "tensorflow.compat.v1.linalg.slogdet": "doc",
    "tensorflow.compat.v1.lite.constants": "doc",
    "tensorflow.compat.v1.strings.format": "doc",
    "tensorflow.compat.v1.strings.length": "doc",
    "tensorflow.compat.v1.strings.ngrams": "doc",
    "tensorflow.compat.v1.strings.substr": "doc",
    "tensorflow.compat.v1.train.Features": "doc",
    "tensorflow.compat.v1.train.SaverDef": "doc",
    "tensorflow.compat.v1.train.Scaffold": "doc",
    "tensorflow.experimental.numpy.arcsin": "doc",
    "tensorflow.keras.constraints.non_neg": "doc",
    "tensorflow.keras.losses.KLDivergence": "doc",
    "tensorflow.keras.losses.SquaredHinge": "doc",
    "tensorflow.linalg.LinearOperatorDiag": "doc",
    "tensorflow.linalg.tridiagonal_matmul": "doc",
    "tensorflow.losses.BinaryCrossentropy": "doc",
    "tensorflow.losses.mean_squared_error": "doc",
    "tensorflow.strings.unicode_transcode": "doc",
    "tensorflow.compat.v1.gfile.FastGFile": "doc",
    "tensorflow.compat.v1.io.gfile.exists": "doc",
    "tensorflow.compat.v1.io.gfile.remove": "doc",
    "tensorflow.compat.v1.io.gfile.rename": "doc",
    "tensorflow.compat.v1.io.gfile.rmtree": "doc",
    "tensorflow.compat.v1.linalg.cholesky": "doc",
    "tensorflow.compat.v1.linalg.eigvalsh": "doc",
    "tensorflow.compat.v1.linalg.lu_solve": "doc",
    "tensorflow.compat.v1.linalg.set_diag": "doc",
    "tensorflow.compat.v1.lite.TargetSpec": "doc",
    "tensorflow.compat.v1.losses.add_loss": "doc",
    "tensorflow.compat.v1.ragged.constant": "doc",
    "tensorflow.compat.v1.train.BytesList": "doc",
    "tensorflow.compat.v1.train.Int64List": "doc",
    "tensorflow.compat.v1.train.Optimizer": "doc",
    "tensorflow.compat.v1.train.ServerDef": "doc",
    "tensorflow.compat.v1.train.VocabInfo": "doc",
    "tensorflow.experimental.numpy.arcsinh": "doc",
    "tensorflow.experimental.numpy.string_": "doc",
    "tensorflow.keras.losses.kl_divergence": "doc",
    "tensorflow.keras.losses.squared_hinge": "doc",
    "tensorflow.linalg.LinearOperatorZeros": "doc",
    "tensorflow.lite.RepresentativeDataset": "doc",
    "tensorflow.lookup.TextFileInitializer": "doc",
    "tensorflow.losses.binary_crossentropy": "doc",
    "tensorflow.losses.mean_absolute_error": "doc",
    "tensorflow.train.checkpoints_iterator": "doc",
    "tensorflow.train.get_checkpoint_state": "doc",
    "tensorflow.compat.v1.io.gfile.listdir": "doc",
    "tensorflow.compat.v1.keras.losses.KLD": "doc",
    "tensorflow.compat.v1.keras.losses.MAE": "doc",
    "tensorflow.compat.v1.keras.losses.MSE": "doc",
    "tensorflow.compat.v1.keras.losses.get": "doc",
    "tensorflow.compat.v1.keras.losses.kld": "doc",
    "tensorflow.compat.v1.keras.losses.mae": "doc",
    "tensorflow.compat.v1.keras.losses.mse": "doc",
    "tensorflow.compat.v1.linalg.band_part": "doc",
    "tensorflow.compat.v1.linalg.diag_part": "doc",
    "tensorflow.compat.v1.linalg.normalize": "doc",
    "tensorflow.compat.v1.linalg.tensordot": "doc",
    "tensorflow.compat.v1.linalg.transpose": "doc",
    "tensorflow.compat.v1.lite.Interpreter": "doc",
    "tensorflow.compat.v1.losses.Reduction": "doc",
    "tensorflow.compat.v1.saved_model.load": "doc",
    "tensorflow.compat.v1.train.Checkpoint": "doc",
    "tensorflow.compat.v1.train.ClusterDef": "doc",
    "tensorflow.compat.v1.train.FeedFnHook": "doc",
    "tensorflow.compat.v1.train.Supervisor": "doc",
    "tensorflow.compat.v1.train.batch_join": "doc",
    "tensorflow.compat.v1.train.warm_start": "doc",
    "tensorflow.strings.to_hash_bucket_fast": "doc",
    "tensorflow.train.Features.FeatureEntry": "doc",
    "tensorflow.compat.v1.gfile.IsDirectory": "doc",
    "tensorflow.compat.v1.io.gfile.makedirs": "doc",
    "tensorflow.compat.v1.keras.losses.Loss": "doc",
    "tensorflow.compat.v1.keras.losses.MAPE": "doc",
    "tensorflow.compat.v1.keras.losses.MSLE": "doc",
    "tensorflow.compat.v1.keras.losses.mape": "doc",
    "tensorflow.compat.v1.keras.losses.msle": "doc",
    "tensorflow.compat.v1.lite.experimental": "doc",
    "tensorflow.compat.v1.lite.toco_convert": "doc",
    "tensorflow.compat.v1.losses.get_losses": "doc",
    "tensorflow.compat.v1.losses.hinge_loss": "doc",
    "tensorflow.compat.v1.losses.huber_loss": "doc",
    "tensorflow.compat.v1.strings.to_number": "doc",
    "tensorflow.compat.v1.train.ClusterSpec": "doc",
    "tensorflow.compat.v1.train.Coordinator": "doc",
    "tensorflow.compat.v1.train.FeatureList": "doc",
    "tensorflow.compat.v1.train.QueueRunner": "doc",
    "tensorflow.compat.v1.train.global_step": "doc",
    "tensorflow.compat.v1.train.maybe_batch": "doc",
    "tensorflow.compat.v1.train.sdca_fprint": "doc",
    "tensorflow.compat.v1.train.write_graph": "doc",
    "tensorflow.keras.mixed_precision.Policy": "doc",
    "tensorflow.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.lookup.StaticVocabularyTable": "doc",
    "tensorflow.train.experimental.LossScale": "doc",
    "tensorflow.compat.v1.keras.losses.Hinge": "doc",
    "tensorflow.compat.v1.keras.losses.Huber": "doc",
    "tensorflow.compat.v1.keras.losses.hinge": "doc",
    "tensorflow.compat.v1.linalg.global_norm": "doc",
    "tensorflow.compat.v1.linalg.matrix_rank": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag": "doc",
    "tensorflow.compat.v1.lite.TocoConverter": "doc",
    "tensorflow.compat.v1.ragged.placeholder": "doc",
    "tensorflow.compat.v1.saved_model.loader": "doc",
    "tensorflow.compat.v1.train.FeatureLists": "doc",
    "tensorflow.compat.v1.train.FinalOpsHook": "doc",
    "tensorflow.compat.v1.train.LooperThread": "doc",
    "tensorflow.compat.v1.train.ProfilerHook": "doc",
    "tensorflow.compat.v1.train.cosine_decay": "doc",
    "tensorflow.compat.v1.train.experimental": "doc",
    "tensorflow.compat.v1.train.limit_epochs": "doc",
    "tensorflow.compat.v1.train.queue_runner": "doc",
    "tensorflow.keras.datasets.boston_housing": "doc",
    "tensorflow.keras.losses.CategoricalHinge": "doc",
    "tensorflow.keras.losses.CosineSimilarity": "doc",
    "tensorflow.keras.losses.MeanSquaredError": "doc",
    "tensorflow.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.strings.to_hash_bucket_strong": "doc",
    "tensorflow.strings.unsorted_segment_join": "doc",
    "tensorflow.compat.v1.gfile.ListDirectory": "doc",
    "tensorflow.compat.v1.keras.metrics.Hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.hinge": "doc",
    "tensorflow.compat.v1.linalg.experimental": "doc",
    "tensorflow.compat.v1.linalg.l2_normalize": "doc",
    "tensorflow.compat.v1.lookup.experimental": "doc",
    "tensorflow.compat.v1.math.special.expint": "doc",
    "tensorflow.compat.v1.ragged.boolean_mask": "doc",
    "tensorflow.compat.v1.ragged.cross_hashed": "doc",
    "tensorflow.compat.v1.saved_model.load_v2": "doc",
    "tensorflow.compat.v1.strings.bytes_split": "doc",
    "tensorflow.compat.v1.strings.reduce_join": "doc",
    "tensorflow.compat.v1.train.AdamOptimizer": "doc",
    "tensorflow.compat.v1.train.FtrlOptimizer": "doc",
    "tensorflow.compat.v1.train.NanTensorHook": "doc",
    "tensorflow.compat.v1.train.load_variable": "doc",
    "tensorflow.compat.v1.train.shuffle_batch": "doc",
    "tensorflow.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.keras.losses.categorical_hinge": "doc",
    "tensorflow.keras.losses.cosine_similarity": "doc",
    "tensorflow.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.linalg.LinearOperatorInversion": "doc",
    "tensorflow.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.linalg.banded_triangular_solve": "doc",
    "tensorflow.losses.CategoricalCrossentropy": "doc",
    "tensorflow.train.ExponentialMovingAverage": "doc",
    "tensorflow.train.experimental.PythonState": "doc",
    "tensorflow.compat.v1.keras.losses.LogCosh": "doc",
    "tensorflow.compat.v1.keras.losses.Poisson": "doc",
    "tensorflow.compat.v1.keras.losses.poisson": "doc",
    "tensorflow.compat.v1.lite.TFLiteConverter": "doc",
    "tensorflow.compat.v1.lite.experimental.nn": "doc",
    "tensorflow.compat.v1.lookup.TextFileIndex": "doc",
    "tensorflow.compat.v1.train.SessionCreator": "doc",
    "tensorflow.compat.v1.train.SessionManager": "doc",
    "tensorflow.compat.v1.train.SessionRunArgs": "doc",
    "tensorflow.compat.v1.train.SessionRunHook": "doc",
    "tensorflow.compat.v1.train.StopAtStepHook": "doc",
    "tensorflow.compat.v1.train.input_producer": "doc",
    "tensorflow.compat.v1.train.list_variables": "doc",
    "tensorflow.compat.v1.train.sdca_optimizer": "doc",
    "tensorflow.compat.v1.train.sdca_shrink_l1": "doc",
    "tensorflow.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.keras.losses.mean_squared_error": "doc",
    "tensorflow.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.lite.experimental.load_delegate": "doc",
    "tensorflow.losses.categorical_crossentropy": "doc",
    "tensorflow.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.compat.v1.linalg.LinearOperator": "doc",
    "tensorflow.compat.v1.linalg.cholesky_solve": "doc",
    "tensorflow.compat.v1.linalg.lu_reconstruct": "doc",
    "tensorflow.compat.v1.losses.get_total_loss": "doc",
    "tensorflow.compat.v1.ragged.constant_value": "doc",
    "tensorflow.compat.v1.strings.regex_replace": "doc",
    "tensorflow.compat.v1.strings.unicode_split": "doc",
    "tensorflow.compat.v1.train.SequenceExample": "doc",
    "tensorflow.compat.v1.train.StepCounterHook": "doc",
    "tensorflow.compat.v1.train.get_global_step": "doc",
    "tensorflow.compat.v1.train.load_checkpoint": "doc",
    "tensorflow.keras.losses.binary_crossentropy": "doc",
    "tensorflow.keras.losses.mean_absolute_error": "doc",
    "tensorflow.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.linalg.LinearOperatorComposition": "doc",
    "tensorflow.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.compat.v1.keras.losses.serialize": "doc",
    "tensorflow.compat.v1.lookup.StaticHashTable": "doc",
    "tensorflow.compat.v1.losses.cosine_distance": "doc",
    "tensorflow.compat.v1.ragged.map_flat_values": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket": "doc",
    "tensorflow.compat.v1.strings.unicode_decode": "doc",
    "tensorflow.compat.v1.strings.unicode_encode": "doc",
    "tensorflow.compat.v1.strings.unicode_script": "doc",
    "tensorflow.compat.v1.train.AdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.MonitoredSession": "doc",
    "tensorflow.compat.v1.train.RMSPropOptimizer": "doc",
    "tensorflow.compat.v1.train.SessionRunValues": "doc",
    "tensorflow.compat.v1.train.SummarySaverHook": "doc",
    "tensorflow.compat.v1.train.add_queue_runner": "doc",
    "tensorflow.compat.v1.train.basic_train_loop": "doc",
    "tensorflow.compat.v1.train.maybe_batch_join": "doc",
    "tensorflow.compat.v1.train.polynomial_decay": "doc",
    "tensorflow.compat.v1.train.summary_iterator": "doc",
    "tensorflow.experimental.numpy.random.randint": "doc",
    "tensorflow.train.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.gfile.DeleteRecursively": "doc",
    "tensorflow.compat.v1.linalg.matrix_transpose": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag_part": "doc",
    "tensorflow.compat.v1.linalg.triangular_solve": "doc",
    "tensorflow.compat.v1.saved_model.loader.load": "doc",
    "tensorflow.compat.v1.train.AdadeltaOptimizer": "doc",
    "tensorflow.compat.v1.train.CheckpointManager": "doc",
    "tensorflow.compat.v1.train.CheckpointOptions": "doc",
    "tensorflow.compat.v1.train.JobDef.TasksEntry": "doc",
    "tensorflow.compat.v1.train.MomentumOptimizer": "doc",
    "tensorflow.compat.v1.train.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.train.SessionRunContext": "doc",
    "tensorflow.compat.v1.train.checkpoint_exists": "doc",
    "tensorflow.compat.v1.train.exponential_decay": "doc",
    "tensorflow.compat.v1.train.export_meta_graph": "doc",
    "tensorflow.compat.v1.train.import_meta_graph": "doc",
    "tensorflow.compat.v1.train.latest_checkpoint": "doc",
    "tensorflow.compat.v1.train.natural_exp_decay": "doc",
    "tensorflow.compat.v1.train.remove_checkpoint": "doc",
    "tensorflow.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.losses.kullback_leibler_divergence": "doc",
    "tensorflow.strings.unicode_split_with_offsets": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19": "doc",
    "tensorflow.compat.v1.keras.constraints.NonNeg": "doc",
    "tensorflow.compat.v1.keras.losses.deserialize": "doc",
    "tensorflow.compat.v1.linalg.lu_matrix_inverse": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_solve": "doc",
    "tensorflow.compat.v1.ragged.RaggedTensorValue": "doc",
    "tensorflow.compat.v1.strings.regex_full_match": "doc",
    "tensorflow.compat.v1.train.AdagradDAOptimizer": "doc",
    "tensorflow.compat.v1.train.assert_global_step": "doc",
    "tensorflow.compat.v1.train.create_global_step": "doc",
    "tensorflow.compat.v1.train.inverse_time_decay": "doc",
    "tensorflow.compat.v1.train.piecewise_constant": "doc",
    "tensorflow.compat.v1.train.shuffle_batch_join": "doc",
    "tensorflow.compat.v1.xla.experimental.compile": "doc",
    "tensorflow.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.train.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.keras.constraints.non_neg": "doc",
    "tensorflow.compat.v1.keras.losses.KLDivergence": "doc",
    "tensorflow.compat.v1.keras.losses.SquaredHinge": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorDiag": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_matmul": "doc",
    "tensorflow.compat.v1.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.strings.unicode_transcode": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.train.ChiefSessionCreator": "doc",
    "tensorflow.compat.v1.train.NewCheckpointReader": "doc",
    "tensorflow.compat.v1.train.linear_cosine_decay": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch": "doc",
    "tensorflow.compat.v1.train.start_queue_runners": "doc",
    "tensorflow.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.kl_divergence": "doc",
    "tensorflow.compat.v1.keras.losses.squared_hinge": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorZeros": "doc",
    "tensorflow.compat.v1.lite.RepresentativeDataset": "doc",
    "tensorflow.compat.v1.lookup.TextFileInitializer": "doc",
    "tensorflow.compat.v1.losses.absolute_difference": "doc",
    "tensorflow.compat.v1.train.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.train.WorkerSessionCreator": "doc",
    "tensorflow.compat.v1.train.checkpoints_iterator": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_state": "doc",
    "tensorflow.compat.v1.train.init_from_checkpoint": "doc",
    "tensorflow.compat.v1.train.match_filenames_once": "doc",
    "tensorflow.compat.v1.train.range_input_producer": "doc",
    "tensorflow.compat.v1.train.slice_input_producer": "doc",
    "tensorflow.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.train.Features.FeatureEntry": "doc",
    "tensorflow.compat.v1.train.SyncReplicasOptimizer": "doc",
    "tensorflow.compat.v1.train.cosine_decay_restarts": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_mtimes": "doc",
    "tensorflow.compat.v1.train.replica_device_setter": "doc",
    "tensorflow.compat.v1.train.string_input_producer": "doc",
    "tensorflow.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.compat.v1.lookup.StaticVocabularyTable": "doc",
    "tensorflow.compat.v1.losses.compute_weighted_loss": "doc",
    "tensorflow.compat.v1.losses.sigmoid_cross_entropy": "doc",
    "tensorflow.compat.v1.losses.softmax_cross_entropy": "doc",
    "tensorflow.compat.v1.train.experimental.LossScale": "doc",
    "tensorflow.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalHinge": "doc",
    "tensorflow.compat.v1.keras.losses.CosineSimilarity": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_proximity": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_strong": "doc",
    "tensorflow.compat.v1.strings.unsorted_segment_join": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.train.update_checkpoint_state": "doc",
    "tensorflow.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_hinge": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_similarity": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorInversion": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.compat.v1.losses.get_regularization_loss": "doc",
    "tensorflow.compat.v1.train.ExponentialMovingAverage": "doc",
    "tensorflow.compat.v1.train.GradientDescentOptimizer": "doc",
    "tensorflow.compat.v1.train.MonitoredTrainingSession": "doc",
    "tensorflow.compat.v1.train.ProximalAdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession": "doc",
    "tensorflow.compat.v1.train.experimental.PythonState": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch_join": "doc",
    "tensorflow.compat.v1.train.piecewise_constant_decay": "doc",
    "tensorflow.compat.v1.train.queue_runner.QueueRunner": "doc",
    "tensorflow.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.keras.mixed_precision.experimental.Policy": "doc",
    "tensorflow.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.compat.v1.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.compat.v1.lite.experimental.load_delegate": "doc",
    "tensorflow.compat.v1.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.compat.v1.train.get_or_create_global_step": "doc",
    "tensorflow.compat.v1.train.noisy_linear_cosine_decay": "doc",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_error": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorComposition": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.dynamic_rnn": "doc",
    "tensorflow.compat.v1.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.compat.v1.losses.get_regularization_losses": "doc",
    "tensorflow.compat.v1.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.compat.v1.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.compat.v1.train.NanLossDuringTrainingError": "doc",
    "tensorflow.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.lite.OpHint.OpHintArgumentTracker": "doc",
    "tensorflow.compat.v1.train.experimental.FixedLossScale": "doc",
    "tensorflow.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TfLiteRNNCell": "doc",
    "tensorflow.compat.v1.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.compat.v1.losses.mean_pairwise_squared_error": "doc",
    "tensorflow.compat.v1.strings.unicode_split_with_offsets": "doc",
    "tensorflow.compat.v1.train.MonitoredSession.StepContext": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TFLiteLSTMCell": "doc",
    "tensorflow.compat.v1.losses.sparse_softmax_cross_entropy": "doc",
    "tensorflow.compat.v1.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.compat.v1.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.compat.v1.train.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.train.queue_runner.add_queue_runner": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.train.generate_checkpoint_state_proto": "doc",
    "tensorflow.compat.v1.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.compat.v1.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.compat.v1.train.ProximalGradientDescentOptimizer": "doc",
    "tensorflow.compat.v1.train.do_quantize_training_on_graphdef": "doc",
    "tensorflow.compat.v1.train.queue_runner.start_queue_runners": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.compat.v1.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession.StepContext": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.lite.experimental.convert_op_hints_to_stubs": "doc",
    "tensorflow.compat.v1.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.saved_model.loader.maybe_saved_model_directory": "doc",
    "tensorflow.compat.v1.lite.experimental.get_potentially_supported_ops": "doc",
    "tensorflow.compat.v1.train.experimental.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.compat.v1.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.fingerprint": "doc",
    "tensorflow.nn.log_softmax": "doc",
    "tensorflow.math.log_softmax": "doc",
    "tensorflow.math.logical_xor": "doc",
    "tensorflow.keras.constraints": "doc",
    "tensorflow.raw_ops.Fingerprint": "doc",
    "tensorflow.keras.constraints.get": "doc",
    "tensorflow.compat.v1.fingerprint": "doc",
    "tensorflow.compat.v1.global_norm": "doc",
    "tensorflow.compat.v1.logical_xor": "doc",
    "tensorflow.saved_model.LoadOptions": "doc",
    "tensorflow.compat.v1.nn.log_softmax": "doc",
    "tensorflow.keras.constraints.MaxNorm": "doc",
    "tensorflow.compat.v1.tpu.PaddingSpec": "doc",
    "tensorflow.keras.constraints.UnitNorm": "doc",
    "tensorflow.keras.constraints.max_norm": "doc",
    "tensorflow.compat.v1.math.log_softmax": "doc",
    "tensorflow.compat.v1.math.logical_xor": "doc",
    "tensorflow.keras.constraints.serialize": "doc",
    "tensorflow.keras.constraints.unit_norm": "doc",
    "tensorflow.compat.v1.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.keras.constraints": "doc",
    "tensorflow.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.keras.constraints.deserialize": "doc",
    "tensorflow.experimental.numpy.logical_xor": "doc",
    "tensorflow.keras.constraints.min_max_norm": "doc",
    "tensorflow.compat.v1.app.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.keras.constraints.get": "doc",
    "tensorflow.keras.constraints.RadialConstraint": "doc",
    "tensorflow.distribute.experimental.coordinator": "doc",
    "tensorflow.keras.constraints.radial_constraint": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.compat.v1.keras.constraints.MaxNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.UnitNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.max_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.serialize": "doc",
    "tensorflow.compat.v1.keras.constraints.unit_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.deserialize": "doc",
    "tensorflow.compat.v1.keras.constraints.min_max_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.RadialConstraint": "doc",
    "tensorflow.compat.v1.keras.constraints.radial_constraint": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.distribute.experimental.coordinator.RemoteValue": "doc",
    "tensorflow.distribute.experimental.coordinator.PerWorkerValues": "doc",
    "tensorflow.distribute.experimental.coordinator.ClusterCoordinator": "doc",
    "tensorflow.custom_gradient": "doc",
    "tensorflow.image.image_gradients": "doc",
    "tensorflow.compat.v1.custom_gradient": "doc",
    "tensorflow.compat.v1.image.image_gradients": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto.IdToStringEntry": "doc",
    "tensorflow.constant": "doc",
    "tensorflow.hessians": "doc",
    "tensorflow.negative": "doc",
    "tensorflow.RaggedTensor": "doc",
    "tensorflow.load_library": "doc",
    "tensorflow.math.floordiv": "doc",
    "tensorflow.math.floormod": "doc",
    "tensorflow.math.negative": "doc",
    "tensorflow.io.decode_image": "doc",
    "tensorflow.nn.l2_normalize": "doc",
    "tensorflow.sparse.to_dense": "doc",
    "tensorflow.raw_ops.FloorDiv": "doc",
    "tensorflow.raw_ops.FloorMod": "doc",
    "tensorflow.raw_ops.LoopCond": "doc",
    "tensorflow.math.l2_normalize": "doc",
    "tensorflow.autograph.to_graph": "doc",
    "tensorflow.image.decode_image": "doc",
    "tensorflow.keras.applications": "doc",
    "tensorflow.compat.v1.constant": "doc",
    "tensorflow.compat.v1.floordiv": "doc",
    "tensorflow.compat.v1.floormod": "doc",
    "tensorflow.compat.v1.hessians": "doc",
    "tensorflow.compat.v1.negative": "doc",
    "tensorflow.compat.v1.to_int32": "doc",
    "tensorflow.compat.v1.to_int64": "doc",
    "tensorflow.metrics.SquaredHinge": "doc",
    "tensorflow.raw_ops.ApplyAddSign": "doc",
    "tensorflow.raw_ops.SoftsignGrad": "doc",
    "tensorflow.raw_ops.StopGradient": "doc",
    "tensorflow.raw_ops.StringLength": "doc",
    "tensorflow.initializers.Constant": "doc",
    "tensorflow.initializers.constant": "doc",
    "tensorflow.test.compute_gradient": "doc",
    "tensorflow.compat.v1.RaggedTensor": "doc",
    "tensorflow.compat.v1.load_library": "doc",
    "tensorflow.compat.v1.math.floordiv": "doc",
    "tensorflow.compat.v1.math.floormod": "doc",
    "tensorflow.compat.v1.math.negative": "doc",
    "tensorflow.keras.applications.VGG16": "doc",
    "tensorflow.keras.applications.VGG19": "doc",
    "tensorflow.metrics.CategoricalHinge": "doc",
    "tensorflow.raw_ops.SelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.TensorListLength": "doc",
    "tensorflow.keras.applications.nasnet": "doc",
    "tensorflow.keras.applications.resnet": "doc",
    "tensorflow.keras.layers.UpSampling1D": "doc",
    "tensorflow.keras.layers.UpSampling2D": "doc",
    "tensorflow.keras.layers.UpSampling3D": "doc",
    "tensorflow.tpu.experimental.Topology": "doc",
    "tensorflow.compat.v1.io.decode_image": "doc",
    "tensorflow.compat.v1.nn.l2_normalize": "doc",
    "tensorflow.compat.v1.sparse.to_dense": "doc",
    "tensorflow.keras.metrics.SquaredHinge": "doc",
    "tensorflow.compat.v1.self_adjoint_eig": "doc",
    "tensorflow.experimental.numpy.diagonal": "doc",
    "tensorflow.experimental.numpy.isposinf": "doc",
    "tensorflow.experimental.numpy.negative": "doc",
    "tensorflow.experimental.numpy.positive": "doc",
    "tensorflow.keras.applications.ResNet50": "doc",
    "tensorflow.keras.applications.Xception": "doc",
    "tensorflow.keras.applications.densenet": "doc",
    "tensorflow.keras.applications.resnet50": "doc",
    "tensorflow.keras.applications.xception": "doc",
    "tensorflow.keras.initializers.Constant": "doc",
    "tensorflow.keras.initializers.constant": "doc",
    "tensorflow.compat.v1.math.l2_normalize": "doc",
    "tensorflow.keras.applications.MobileNet": "doc",
    "tensorflow.keras.applications.ResNet101": "doc",
    "tensorflow.keras.applications.ResNet152": "doc",
    "tensorflow.keras.applications.mobilenet": "doc",
    "tensorflow.keras.applications.resnet_v2": "doc",
    "tensorflow.compat.v1.autograph.to_graph": "doc",
    "tensorflow.compat.v1.image.decode_image": "doc",
    "tensorflow.compat.v1.keras.applications": "doc",
    "tensorflow.keras.applications.ResNet50V2": "doc",
    "tensorflow.keras.layers.AveragePooling1D": "doc",
    "tensorflow.keras.layers.AveragePooling2D": "doc",
    "tensorflow.keras.layers.AveragePooling3D": "doc",
    "tensorflow.data.experimental.from_variant": "doc",
    "tensorflow.keras.applications.DenseNet121": "doc",
    "tensorflow.keras.applications.DenseNet169": "doc",
    "tensorflow.keras.applications.DenseNet201": "doc",
    "tensorflow.keras.applications.InceptionV3": "doc",
    "tensorflow.keras.applications.MobileNetV2": "doc",
    "tensorflow.keras.applications.NASNetLarge": "doc",
    "tensorflow.keras.applications.ResNet101V2": "doc",
    "tensorflow.keras.applications.ResNet152V2": "doc",
    "tensorflow.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.experimental.numpy.diag_indices": "doc",
    "tensorflow.experimental.numpy.floor_divide": "doc",
    "tensorflow.keras.applications.NASNetMobile": "doc",
    "tensorflow.keras.applications.efficientnet": "doc",
    "tensorflow.keras.applications.inception_v3": "doc",
    "tensorflow.keras.applications.mobilenet_v2": "doc",
    "tensorflow.keras.applications.mobilenet_v3": "doc",
    "tensorflow.compat.v1.initializers.constant": "doc",
    "tensorflow.compat.v1.test.compute_gradient": "doc",
    "tensorflow.keras.applications.EfficientNetB0": "doc",
    "tensorflow.keras.applications.EfficientNetB1": "doc",
    "tensorflow.keras.applications.EfficientNetB2": "doc",
    "tensorflow.keras.applications.EfficientNetB3": "doc",
    "tensorflow.keras.applications.EfficientNetB4": "doc",
    "tensorflow.keras.applications.EfficientNetB5": "doc",
    "tensorflow.keras.applications.EfficientNetB6": "doc",
    "tensorflow.keras.applications.EfficientNetB7": "doc",
    "tensorflow.keras.applications.imagenet_utils": "doc",
    "tensorflow.compat.v1.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling3D": "doc",
    "tensorflow.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.VGG19": "doc",
    "tensorflow.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling1D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling2D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling3D": "doc",
    "tensorflow.compat.v1.tpu.experimental.Topology": "doc",
    "tensorflow.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.keras.applications.xception.Xception": "doc",
    "tensorflow.compat.v1.keras.metrics.SquaredHinge": "doc",
    "tensorflow.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.Xception": "doc",
    "tensorflow.compat.v1.keras.applications.densenet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50": "doc",
    "tensorflow.compat.v1.keras.applications.xception": "doc",
    "tensorflow.compat.v1.keras.initializers.Constant": "doc",
    "tensorflow.compat.v1.keras.initializers.constant": "doc",
    "tensorflow.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNet": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2": "doc",
    "tensorflow.autograph.experimental.set_loop_options": "doc",
    "tensorflow.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50V2": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling3D": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.compat.v1.data.experimental.from_variant": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetLarge": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152V2": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3": "doc",
    "tensorflow.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils": "doc",
    "tensorflow.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.xception.Xception": "doc",
    "tensorflow.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.compat.v1.autograph.experimental.set_loop_options": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.raw_ops.ConfigureTPUEmbedding": "doc",
    "tensorflow.AggregationMethod": "doc",
    "tensorflow.math.is_non_decreasing": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxes": "doc",
    "tensorflow.compat.v1.AggregationMethod": "doc",
    "tensorflow.compat.v1.is_non_decreasing": "doc",
    "tensorflow.keras.models.model_from_config": "doc",
    "tensorflow.compat.v1.math.is_non_decreasing": "doc",
    "tensorflow.compat.v1.test.StubOutForTesting": "doc",
    "tensorflow.compat.v1.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.layers.average_pooling1d": "doc",
    "tensorflow.compat.v1.layers.average_pooling2d": "doc",
    "tensorflow.compat.v1.layers.average_pooling3d": "doc",
    "tensorflow.compat.v1.app.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.saved_model.build_tensor_info": "doc",
    "tensorflow.compat.v1.keras.models.model_from_config": "doc",
    "tensorflow.compat.v1.saved_model.utils.build_tensor_info": "doc",
    "tensorflow.signal.vorbis_window": "doc",
    "tensorflow.metrics.kl_divergence": "doc",
    "tensorflow.metrics.squared_hinge": "doc",
    "tensorflow.raw_ops.MatchingFiles": "doc",
    "tensorflow.compat.v1.colocate_with": "doc",
    "tensorflow.initializers.GlorotUniform": "doc",
    "tensorflow.initializers.glorot_normal": "doc",
    "tensorflow.keras.layers.Convolution1D": "doc",
    "tensorflow.keras.layers.Convolution2D": "doc",
    "tensorflow.keras.layers.Convolution3D": "doc",
    "tensorflow.keras.metrics.kl_divergence": "doc",
    "tensorflow.keras.metrics.squared_hinge": "doc",
    "tensorflow.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.compat.v1.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.signal.vorbis_window": "doc",
    "tensorflow.keras.initializers.GlorotUniform": "doc",
    "tensorflow.keras.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_string": "doc",
    "tensorflow.keras.mixed_precision.global_policy": "doc",
    "tensorflow.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.compat.v1.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3D": "doc",
    "tensorflow.compat.v1.distributions.kl_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.kl_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.squared_hinge": "doc",
    "tensorflow.compat.v1.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.keras.mixed_precision.experimental.global_policy": "doc",
    "tensorflow.estimator.LogisticRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.LogisticRegressionHead": "doc",
    "tensorflow.autograph": "doc",
    "tensorflow.gradients": "doc",
    "tensorflow.sysconfig": "doc",
    "tensorflow.nn.erosion2d": "doc",
    "tensorflow.math.is_finite": "doc",
    "tensorflow.math.polygamma": "doc",
    "tensorflow.autograph.trace": "doc",
    "tensorflow.autograph.to_code": "doc",
    "tensorflow.raw_ops.AssignAdd": "doc",
    "tensorflow.raw_ops.AssignSub": "doc",
    "tensorflow.raw_ops.BlockLSTM": "doc",
    "tensorflow.raw_ops.LogicalOr": "doc",
    "tensorflow.raw_ops.Polygamma": "doc",
    "tensorflow.raw_ops.StageSize": "doc",
    "tensorflow.raw_ops.ZerosLike": "doc",
    "tensorflow.sysconfig.get_lib": "doc",
    "tensorflow.estimator.RunConfig": "doc",
    "tensorflow.estimator.VocabInfo": "doc",
    "tensorflow.compat.v1.autograph": "doc",
    "tensorflow.compat.v1.floor_div": "doc",
    "tensorflow.compat.v1.gradients": "doc",
    "tensorflow.compat.v1.is_finite": "doc",
    "tensorflow.compat.v1.polygamma": "doc",
    "tensorflow.compat.v1.sysconfig": "doc",
    "tensorflow.keras.utils.normalize": "doc",
    "tensorflow.sysconfig.get_include": "doc",
    "tensorflow.autograph.experimental": "doc",
    "tensorflow.compat.v1.nn.erosion2d": "doc",
    "tensorflow.autograph.set_verbosity": "doc",
    "tensorflow.sysconfig.get_build_info": "doc",
    "tensorflow.sysconfig.get_link_flags": "doc",
    "tensorflow.compat.v1.math.is_finite": "doc",
    "tensorflow.compat.v1.math.polygamma": "doc",
    "tensorflow.keras.callbacks.CSVLogger": "doc",
    "tensorflow.compat.v1.autograph.trace": "doc",
    "tensorflow.compat.v1.flags.MultiFlag": "doc",
    "tensorflow.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.sysconfig.get_compile_flags": "doc",
    "tensorflow.compat.v1.autograph.to_code": "doc",
    "tensorflow.compat.v1.sysconfig.get_lib": "doc",
    "tensorflow.experimental.numpy.conjugate": "doc",
    "tensorflow.experimental.numpy.full_like": "doc",
    "tensorflow.experimental.numpy.remainder": "doc",
    "tensorflow.keras.datasets.imdb.load_data": "doc",
    "tensorflow.compat.v1.app.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.estimator.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.VocabInfo": "doc",
    "tensorflow.autograph.experimental.Feature": "doc",
    "tensorflow.keras.datasets.mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.utils.normalize": "doc",
    "tensorflow.compat.v1.saved_model.constants": "doc",
    "tensorflow.compat.v1.sysconfig.get_include": "doc",
    "tensorflow.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.keras.datasets.reuters.load_data": "doc",
    "tensorflow.compat.v1.autograph.experimental": "doc",
    "tensorflow.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.compat.v1.autograph.set_verbosity": "doc",
    "tensorflow.compat.v1.estimator.tpu.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUConfig": "doc",
    "tensorflow.compat.v1.sysconfig.get_build_info": "doc",
    "tensorflow.compat.v1.sysconfig.get_link_flags": "doc",
    "tensorflow.compat.v1.keras.callbacks.CSVLogger": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.autograph.experimental.do_not_convert": "doc",
    "tensorflow.compat.v1.sysconfig.get_compile_flags": "doc",
    "tensorflow.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.load_data": "doc",
    "tensorflow.compat.v1.autograph.experimental.Feature": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.compat.v1.autograph.experimental.do_not_convert": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.io.matching_files": "doc",
    "tensorflow.signal.hamming_window": "doc",
    "tensorflow.metrics.FalseNegatives": "doc",
    "tensorflow.metrics.FalsePositives": "doc",
    "tensorflow.raw_ops.ControlTrigger": "doc",
    "tensorflow.estimator.RegressionHead": "doc",
    "tensorflow.estimator.SessionRunArgs": "doc",
    "tensorflow.compat.v1.assert_integer": "doc",
    "tensorflow.compat.v1.matching_files": "doc",
    "tensorflow.compat.v1.no_regularizer": "doc",
    "tensorflow.keras.utils.to_categorical": "doc",
    "tensorflow.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.io.matching_files": "doc",
    "tensorflow.keras.metrics.FalseNegatives": "doc",
    "tensorflow.keras.metrics.FalsePositives": "doc",
    "tensorflow.compat.v1.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.signal.hamming_window": "doc",
    "tensorflow.keras.initializers.glorot_uniform": "doc",
    "tensorflow.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.estimator.RegressionHead": "doc",
    "tensorflow.compat.v1.estimator.SessionRunArgs": "doc",
    "tensorflow.compat.v1.keras.utils.to_categorical": "doc",
    "tensorflow.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.compat.v1.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.keras.metrics.FalseNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.FalsePositives": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.VariableAggregation": "doc",
    "tensorflow.image.draw_bounding_boxes": "doc",
    "tensorflow.image.pad_to_bounding_box": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEig": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxesV2": "doc",
    "tensorflow.compat.v1.VariableAggregation": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_string": "doc",
    "tensorflow.compat.v1.image.draw_bounding_boxes": "doc",
    "tensorflow.compat.v1.image.pad_to_bounding_box": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_string": "doc",
    "tensorflow.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.zeros_like": "doc",
    "tensorflow.io.decode_gif": "doc",
    "tensorflow.nn.dilation2d": "doc",
    "tensorflow.load_op_library": "doc",
    "tensorflow.image.decode_gif": "doc",
    "tensorflow.sparse.from_dense": "doc",
    "tensorflow.bitwise.left_shift": "doc",
    "tensorflow.io.TFRecordOptions": "doc",
    "tensorflow.raw_ops.BitwiseAnd": "doc",
    "tensorflow.raw_ops.DecodeJpeg": "doc",
    "tensorflow.raw_ops.Dilation2D": "doc",
    "tensorflow.raw_ops.EncodeJpeg": "doc",
    "tensorflow.raw_ops.LogSoftmax": "doc",
    "tensorflow.raw_ops.LogicalNot": "doc",
    "tensorflow.raw_ops.LowerBound": "doc",
    "tensorflow.raw_ops.MatrixDiag": "doc",
    "tensorflow.raw_ops.RightShift": "doc",
    "tensorflow.raw_ops.SdcaFprint": "doc",
    "tensorflow.raw_ops.SegmentMax": "doc",
    "tensorflow.raw_ops.SegmentMin": "doc",
    "tensorflow.raw_ops.SegmentSum": "doc",
    "tensorflow.raw_ops.StringJoin": "doc",
    "tensorflow.compat.v1.GPUOptions": "doc",
    "tensorflow.compat.v1.RunOptions": "doc",
    "tensorflow.compat.v1.assign_add": "doc",
    "tensorflow.compat.v1.assign_sub": "doc",
    "tensorflow.compat.v1.zeros_like": "doc",
    "tensorflow.distribute.RunOptions": "doc",
    "tensorflow.keras.utils.plot_model": "doc",
    "tensorflow.initializers.Orthogonal": "doc",
    "tensorflow.initializers.orthogonal": "doc",
    "tensorflow.keras.models.load_model": "doc",
    "tensorflow.raw_ops.LookupTableFind": "doc",
    "tensorflow.raw_ops.MatrixLogarithm": "doc",
    "tensorflow.raw_ops.PopulationCount": "doc",
    "tensorflow.raw_ops.RandomPoissonV2": "doc",
    "tensorflow.raw_ops.SamplingDataset": "doc",
    "tensorflow.compat.v1.io.decode_gif": "doc",
    "tensorflow.compat.v1.nn.dilation2d": "doc",
    "tensorflow.compat.v1.nn.static_rnn": "doc",
    "tensorflow.compat.v1.tpu.XLAOptions": "doc",
    "tensorflow.compat.v1.load_op_library": "doc",
    "tensorflow.compat.v1.local_variables": "doc",
    "tensorflow.image.crop_to_bounding_box": "doc",
    "tensorflow.keras.callbacks.BaseLogger": "doc",
    "tensorflow.compat.v1.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.flags.FlagValues": "doc",
    "tensorflow.compat.v1.image.decode_gif": "doc",
    "tensorflow.random.get_global_generator": "doc",
    "tensorflow.random.set_global_generator": "doc",
    "tensorflow.compat.v1.sparse.from_dense": "doc",
    "tensorflow.initializers.VarianceScaling": "doc",
    "tensorflow.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.raw_ops.LogMatrixDeterminant": "doc",
    "tensorflow.raw_ops.SlidingWindowDataset": "doc",
    "tensorflow.compat.v1.bitwise.left_shift": "doc",
    "tensorflow.compat.v1.io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.summary.FileWriter": "doc",
    "tensorflow.experimental.numpy.zeros_like": "doc",
    "tensorflow.keras.initializers.Orthogonal": "doc",
    "tensorflow.keras.initializers.orthogonal": "doc",
    "tensorflow.types.experimental.TensorLike": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto": "doc",
    "tensorflow.compat.v1.app.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.app.flags.FlagValues": "doc",
    "tensorflow.compat.v1.self_adjoint_eigvals": "doc",
    "tensorflow.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.compat.v1.distribute.RunOptions": "doc",
    "tensorflow.compat.v1.flags.ValidationError": "doc",
    "tensorflow.compat.v1.image.transpose_image": "doc",
    "tensorflow.compat.v1.keras.utils.plot_model": "doc",
    "tensorflow.data.experimental.StatsAggregator": "doc",
    "tensorflow.data.experimental.group_by_window": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental": "doc",
    "tensorflow.compat.v1.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.keras.models.load_model": "doc",
    "tensorflow.compat.v1.metrics.false_negatives": "doc",
    "tensorflow.compat.v1.metrics.false_positives": "doc",
    "tensorflow.experimental.numpy.take_along_axis": "doc",
    "tensorflow.keras.initializers.VarianceScaling": "doc",
    "tensorflow.compat.v1.app.flags.ValidationError": "doc",
    "tensorflow.compat.v1.python_io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.TensorInfo.CompositeTensor": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.image.crop_to_bounding_box": "doc",
    "tensorflow.compat.v1.keras.callbacks.BaseLogger": "doc",
    "tensorflow.profiler.experimental.ProfilerOptions": "doc",
    "tensorflow.compat.v1.random.get_global_generator": "doc",
    "tensorflow.compat.v1.random.set_global_generator": "doc",
    "tensorflow.compat.v1.initializers.local_variables": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.compat.v1.keras.initializers.Orthogonal": "doc",
    "tensorflow.compat.v1.keras.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.types.experimental.TensorLike": "doc",
    "tensorflow.random.experimental.get_global_generator": "doc",
    "tensorflow.random.experimental.set_global_generator": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.compat.v1.data.experimental.StatsAggregator": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_window": "doc",
    "tensorflow.compat.v1.initializers.uniform_unit_scaling": "doc",
    "tensorflow.compat.v1.keras.initializers.VarianceScaling": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental.VirtualDevices": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.compat.v1.random.experimental.get_global_generator": "doc",
    "tensorflow.compat.v1.random.experimental.set_global_generator": "doc",
    "tensorflow.compat.v1.estimator.experimental.dnn_logit_fn_builder": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental.RunHandlerPoolOptions": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBox": "doc",
    "tensorflow.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.BroadcastGradientArgs": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariant": "doc",
    "tensorflow.estimator.PoissonRegressionHead": "doc",
    "tensorflow.compat.v1.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.app.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.estimator.PoissonRegressionHead": "doc",
    "tensorflow.compat.v1.graph_util.remove_training_nodes": "doc",
    "tensorflow.RaggedTensorSpec": "doc",
    "tensorflow.RegisterGradient": "doc",
    "tensorflow.reduce_logsumexp": "doc",
    "tensorflow.nn.embedding_lookup": "doc",
    "tensorflow.math.confusion_matrix": "doc",
    "tensorflow.math.reduce_logsumexp": "doc",
    "tensorflow.queue.PaddingFIFOQueue": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueue": "doc",
    "tensorflow.raw_ops.RandomUniformInt": "doc",
    "tensorflow.raw_ops.SymbolicGradient": "doc",
    "tensorflow.raw_ops.TensorListConcat": "doc",
    "tensorflow.compat.v1.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.RaggedTensorSpec": "doc",
    "tensorflow.compat.v1.RegisterGradient": "doc",
    "tensorflow.compat.v1.confusion_matrix": "doc",
    "tensorflow.compat.v1.global_variables": "doc",
    "tensorflow.compat.v1.reduce_logsumexp": "doc",
    "tensorflow.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.io.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup": "doc",
    "tensorflow.feature_column.embedding_column": "doc",
    "tensorflow.compat.v1.math.confusion_matrix": "doc",
    "tensorflow.compat.v1.math.reduce_logsumexp": "doc",
    "tensorflow.compat.v1.queue.PaddingFIFOQueue": "doc",
    "tensorflow.estimator.export.RegressionOutput": "doc",
    "tensorflow.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.data.experimental.ThreadingOptions": "doc",
    "tensorflow.keras.initializers.variance_scaling": "doc",
    "tensorflow.experimental.tensorrt.ConversionParams": "doc",
    "tensorflow.compat.v1.initializers.global_variables": "doc",
    "tensorflow.compat.v1.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.feature_column.embedding_column": "doc",
    "tensorflow.compat.v1.estimator.export.RegressionOutput": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding_column": "doc",
    "tensorflow.compat.v1.data.experimental.ThreadingOptions": "doc",
    "tensorflow.io.decode_jpeg": "doc",
    "tensorflow.io.encode_jpeg": "doc",
    "tensorflow.nn.convolution": "doc",
    "tensorflow.math.segment_max": "doc",
    "tensorflow.math.segment_min": "doc",
    "tensorflow.math.segment_sum": "doc",
    "tensorflow.image.decode_jpeg": "doc",
    "tensorflow.image.encode_jpeg": "doc",
    "tensorflow.image.sobel_edges": "doc",
    "tensorflow.keras.activations": "doc",
    "tensorflow.random.categorical": "doc",
    "tensorflow.signal.hann_window": "doc",
    "tensorflow.sparse.segment_sum": "doc",
    "tensorflow.bitwise.bitwise_and": "doc",
    "tensorflow.bitwise.right_shift": "doc",
    "tensorflow.raw_ops.BlockLSTMV2": "doc",
    "tensorflow.raw_ops.DecodeImage": "doc",
    "tensorflow.raw_ops.EagerPyFunc": "doc",
    "tensorflow.raw_ops.ImportEvent": "doc",
    "tensorflow.raw_ops.Multinomial": "doc",
    "tensorflow.raw_ops.RaggedCross": "doc",
    "tensorflow.raw_ops.RecordInput": "doc",
    "tensorflow.raw_ops.SegmentMean": "doc",
    "tensorflow.raw_ops.SegmentProd": "doc",
    "tensorflow.raw_ops.SigmoidGrad": "doc",
    "tensorflow.raw_ops.StringLower": "doc",
    "tensorflow.raw_ops.StringSplit": "doc",
    "tensorflow.raw_ops.StringStrip": "doc",
    "tensorflow.raw_ops.StringUpper": "doc",
    "tensorflow.keras.activations.elu": "doc",
    "tensorflow.keras.activations.get": "doc",
    "tensorflow.compat.v1.ConfigProto": "doc",
    "tensorflow.compat.v1.matrix_diag": "doc",
    "tensorflow.compat.v1.multinomial": "doc",
    "tensorflow.compat.v1.segment_max": "doc",
    "tensorflow.compat.v1.segment_min": "doc",
    "tensorflow.compat.v1.segment_sum": "doc",
    "tensorflow.compat.v1.string_join": "doc",
    "tensorflow.keras.activations.gelu": "doc",
    "tensorflow.keras.activations.relu": "doc",
    "tensorflow.keras.activations.selu": "doc",
    "tensorflow.keras.activations.tanh": "doc",
    "tensorflow.keras.activations.swish": "doc",
    "tensorflow.saved_model.SaveOptions": "doc",
    "tensorflow.keras.activations.linear": "doc",
    "tensorflow.keras.layers.Concatenate": "doc",
    "tensorflow.keras.layers.concatenate": "doc",
    "tensorflow.keras.models.clone_model": "doc",
    "tensorflow.compat.v1.io.decode_jpeg": "doc",
    "tensorflow.compat.v1.io.encode_jpeg": "doc",
    "tensorflow.compat.v1.nn.convolution": "doc",
    "tensorflow.compat.v1.nn.ctc_loss_v2": "doc",
    "tensorflow.compat.v1.nn.dynamic_rnn": "doc",
    "tensorflow.keras.activations.sigmoid": "doc",
    "tensorflow.keras.activations.softmax": "doc",
    "tensorflow.keras.activations.softplus": "doc",
    "tensorflow.compat.v1.math.segment_max": "doc",
    "tensorflow.compat.v1.math.segment_min": "doc",
    "tensorflow.compat.v1.math.segment_sum": "doc",
    "tensorflow.keras.activations.serialize": "doc",
    "tensorflow.math.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.flags.FloatParser": "doc",
    "tensorflow.compat.v1.image.decode_jpeg": "doc",
    "tensorflow.compat.v1.image.encode_jpeg": "doc",
    "tensorflow.compat.v1.image.sobel_edges": "doc",
    "tensorflow.compat.v1.keras.activations": "doc",
    "tensorflow.compat.v1.random.categorical": "doc",
    "tensorflow.compat.v1.random.multinomial": "doc",
    "tensorflow.compat.v1.signal.hann_window": "doc",
    "tensorflow.compat.v1.sparse.segment_sum": "doc",
    "tensorflow.data.experimental.cardinality": "doc",
    "tensorflow.keras.activations.deserialize": "doc",
    "tensorflow.keras.activations.exponential": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_and": "doc",
    "tensorflow.compat.v1.bitwise.right_shift": "doc",
    "tensorflow.experimental.numpy.bitwise_and": "doc",
    "tensorflow.experimental.numpy.bitwise_not": "doc",
    "tensorflow.experimental.numpy.concatenate": "doc",
    "tensorflow.experimental.numpy.float_power": "doc",
    "tensorflow.keras.activations.hard_sigmoid": "doc",
    "tensorflow.keras.experimental.CosineDecay": "doc",
    "tensorflow.keras.regularizers.Regularizer": "doc",
    "tensorflow.raw_ops.GenerateVocabRemapping": "doc",
    "tensorflow.raw_ops.IteratorToStringHandle": "doc",
    "tensorflow.raw_ops.ResourceApplyPowerSign": "doc",
    "tensorflow.raw_ops.StatefulRandomBinomial": "doc",
    "tensorflow.compat.v1.app.flags.FloatParser": "doc",
    "tensorflow.compat.v1.keras.activations.elu": "doc",
    "tensorflow.compat.v1.keras.activations.get": "doc",
    "tensorflow.compat.v1.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.keras.activations.relu": "doc",
    "tensorflow.compat.v1.keras.activations.selu": "doc",
    "tensorflow.compat.v1.keras.activations.tanh": "doc",
    "tensorflow.compat.v1.orthogonal_initializer": "doc",
    "tensorflow.compat.v1.keras.activations.swish": "doc",
    "tensorflow.compat.v1.saved_model.SaveOptions": "doc",
    "tensorflow.compat.v1.ConfigProto.Experimental": "doc",
    "tensorflow.compat.v1.keras.activations.linear": "doc",
    "tensorflow.compat.v1.keras.layers.Concatenate": "doc",
    "tensorflow.compat.v1.keras.layers.concatenate": "doc",
    "tensorflow.compat.v1.keras.models.clone_model": "doc",
    "tensorflow.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.compat.v1.distributions.Categorical": "doc",
    "tensorflow.compat.v1.distributions.Exponential": "doc",
    "tensorflow.compat.v1.distributions.Multinomial": "doc",
    "tensorflow.compat.v1.keras.activations.sigmoid": "doc",
    "tensorflow.compat.v1.keras.activations.softmax": "doc",
    "tensorflow.compat.v1.keras.activations.softplus": "doc",
    "tensorflow.compat.v1.keras.activations.serialize": "doc",
    "tensorflow.compat.v1.math.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.test.compute_gradient_error": "doc",
    "tensorflow.compat.v1.ConfigProto.DeviceCountEntry": "doc",
    "tensorflow.compat.v1.data.experimental.cardinality": "doc",
    "tensorflow.compat.v1.keras.activations.deserialize": "doc",
    "tensorflow.compat.v1.keras.activations.exponential": "doc",
    "tensorflow.compat.v1.keras.activations.hard_sigmoid": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecay": "doc",
    "tensorflow.compat.v1.keras.regularizers.Regularizer": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.distribute.experimental.partitioners.Partitioner": "doc",
    "tensorflow.compat.v1.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBoxV2": "doc",
    "tensorflow.executing_eagerly": "doc",
    "tensorflow.zeros_initializer": "doc",
    "tensorflow.nn.normalize_moments": "doc",
    "tensorflow.image.random_brightness": "doc",
    "tensorflow.raw_ops.DecodeAndCropJpeg": "doc",
    "tensorflow.raw_ops.FractionalAvgPool": "doc",
    "tensorflow.raw_ops.LookupTableFindV2": "doc",
    "tensorflow.raw_ops.MaxPoolWithArgmax": "doc",
    "tensorflow.estimator.BaselineRegressor": "doc",
    "tensorflow.estimator.WarmStartSettings": "doc",
    "tensorflow.compat.v1.NotDifferentiable": "doc",
    "tensorflow.compat.v1.executing_eagerly": "doc",
    "tensorflow.compat.v1.zeros_initializer": "doc",
    "tensorflow.keras.utils.get_source_inputs": "doc",
    "tensorflow.compat.v1.nn.normalize_moments": "doc",
    "tensorflow.feature_column.shared_embeddings": "doc",
    "tensorflow.compat.v1.image.random_brightness": "doc",
    "tensorflow.compat.v1.summary.TaggedRunMetadata": "doc",
    "tensorflow.random.experimental.stateless_fold_in": "doc",
    "tensorflow.compat.v1.estimator.BaselineRegressor": "doc",
    "tensorflow.compat.v1.estimator.WarmStartSettings": "doc",
    "tensorflow.keras.mixed_precision.set_global_policy": "doc",
    "tensorflow.compat.v1.keras.utils.get_source_inputs": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_fold_in": "doc",
    "tensorflow.errors.FailedPreconditionError": "doc",
    "tensorflow.raw_ops.AccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.RaggedTensorFromVariant": "doc",
    "tensorflow.raw_ops.ScatterNdNonAliasingAdd": "doc",
    "tensorflow.raw_ops.StatelessRandomBinomial": "doc",
    "tensorflow.compat.v1.errors.FailedPreconditionError": "doc",
    "tensorflow.compat.v1.estimator.experimental.linear_logit_fn_builder": "doc",
    "tensorflow.image.sample_distorted_bounding_box": "doc",
    "tensorflow.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.nn.log_uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.image.sample_distorted_bounding_box": "doc",
    "tensorflow.compat.v1.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.GradientTape": "doc",
    "tensorflow.boolean_mask": "doc",
    "tensorflow.clip_by_norm": "doc",
    "tensorflow.experimental": "doc",
    "tensorflow.tpu.experimental": "doc",
    "tensorflow.xla.experimental": "doc",
    "tensorflow.data.experimental": "doc",
    "tensorflow.math.segment_mean": "doc",
    "tensorflow.math.segment_prod": "doc",
    "tensorflow.mlir.experimental": "doc",
    "tensorflow.experimental.numpy": "doc",
    "tensorflow.keras.experimental": "doc",
    "tensorflow.keras.regularizers": "doc",
    "tensorflow.types.experimental": "doc",
    "tensorflow.experimental.dlpack": "doc",
    "tensorflow.random.experimental": "doc",
    "tensorflow.sparse.segment_mean": "doc",
    "tensorflow.sparse.to_indicator": "doc",
    "tensorflow.metrics.KLDivergence": "doc",
    "tensorflow.metrics.LogCoshError": "doc",
    "tensorflow.raw_ops.ApplyAdagrad": "doc",
    "tensorflow.raw_ops.EditDistance": "doc",
    "tensorflow.raw_ops.GRUBlockCell": "doc",
    "tensorflow.raw_ops.MatrixDiagV2": "doc",
    "tensorflow.raw_ops.MatrixDiagV3": "doc",
    "tensorflow.raw_ops.OptionalNone": "doc",
    "tensorflow.raw_ops.Prelinearize": "doc",
    "tensorflow.raw_ops.RaggedGather": "doc",
    "tensorflow.raw_ops.RestoreSlice": "doc",
    "tensorflow.raw_ops.SdcaShrinkL1": "doc",
    "tensorflow.raw_ops.StringFormat": "doc",
    "tensorflow.raw_ops.StringNGrams": "doc",
    "tensorflow.summary.experimental": "doc",
    "tensorflow.autodiff.GradientTape": "doc",
    "tensorflow.experimental.Optional": "doc",
    "tensorflow.experimental.tensorrt": "doc",
    "tensorflow.keras.regularizers.L1": "doc",
    "tensorflow.keras.regularizers.L2": "doc",
    "tensorflow.keras.regularizers.l1": "doc",
    "tensorflow.keras.regularizers.l2": "doc",
    "tensorflow.profiler.experimental": "doc",
    "tensorflow.data.experimental.save": "doc",
    "tensorflow.data.experimental.scan": "doc",
    "tensorflow.estimator.experimental": "doc",
    "tensorflow.experimental.numpy.abs": "doc",
    "tensorflow.experimental.numpy.add": "doc",
    "tensorflow.experimental.numpy.all": "doc",
    "tensorflow.experimental.numpy.any": "doc",
    "tensorflow.experimental.numpy.cos": "doc",
    "tensorflow.experimental.numpy.dot": "doc",
    "tensorflow.experimental.numpy.exp": "doc",
    "tensorflow.experimental.numpy.eye": "doc",
    "tensorflow.experimental.numpy.fix": "doc",
    "tensorflow.experimental.numpy.gcd": "doc",
    "tensorflow.experimental.numpy.ix_": "doc",
    "tensorflow.experimental.numpy.lcm": "doc",
    "tensorflow.experimental.numpy.max": "doc",
    "tensorflow.experimental.numpy.mod": "doc",
    "tensorflow.experimental.numpy.pad": "doc",
    "tensorflow.experimental.numpy.ptp": "doc",
    "tensorflow.experimental.numpy.std": "doc",
    "tensorflow.experimental.numpy.sum": "doc",
    "tensorflow.experimental.numpy.tan": "doc",
    "tensorflow.experimental.numpy.tri": "doc",
    "tensorflow.experimental.numpy.var": "doc",
    "tensorflow.keras.regularizers.get": "doc",
    "tensorflow.compat.v1.GradientTape": "doc",
    "tensorflow.compat.v1.GraphOptions": "doc",
    "tensorflow.compat.v1.boolean_mask": "doc",
    "tensorflow.compat.v1.clip_by_norm": "doc",
    "tensorflow.compat.v1.experimental": "doc",
    "tensorflow.compat.v1.random_gamma": "doc",
    "tensorflow.compat.v1.segment_mean": "doc",
    "tensorflow.compat.v1.segment_prod": "doc",
    "tensorflow.compat.v1.string_split": "doc",
    "tensorflow.compat.v1.string_strip": "doc",
    "tensorflow.distribute.InputOptions": "doc",
    "tensorflow.distribute.experimental": "doc",
    "tensorflow.experimental.numpy.amax": "doc",
    "tensorflow.experimental.numpy.cbrt": "doc",
    "tensorflow.experimental.numpy.ceil": "doc",
    "tensorflow.experimental.numpy.clip": "doc",
    "tensorflow.experimental.numpy.copy": "doc",
    "tensorflow.experimental.numpy.cosh": "doc",
    "tensorflow.experimental.numpy.diff": "doc",
    "tensorflow.experimental.numpy.exp2": "doc",
    "tensorflow.experimental.numpy.fabs": "doc",
    "tensorflow.experimental.numpy.flip": "doc",
    "tensorflow.experimental.numpy.full": "doc",
    "tensorflow.experimental.numpy.imag": "doc",
    "tensorflow.experimental.numpy.int8": "doc",
    "tensorflow.experimental.numpy.int_": "doc",
    "tensorflow.experimental.numpy.kron": "doc",
    "tensorflow.experimental.numpy.less": "doc",
    "tensorflow.experimental.numpy.mean": "doc",
    "tensorflow.experimental.numpy.ndim": "doc",
    "tensorflow.experimental.numpy.ones": "doc",
    "tensorflow.experimental.numpy.prod": "doc",
    "tensorflow.experimental.numpy.real": "doc",
    "tensorflow.experimental.numpy.roll": "doc",
    "tensorflow.experimental.numpy.size": "doc",
    "tensorflow.experimental.numpy.sort": "doc",
    "tensorflow.experimental.numpy.sqrt": "doc",
    "tensorflow.experimental.numpy.take": "doc",
    "tensorflow.experimental.numpy.tanh": "doc",
    "tensorflow.experimental.numpy.tile": "doc",
    "tensorflow.experimental.numpy.tril": "doc",
    "tensorflow.experimental.numpy.triu": "doc",
    "tensorflow.experimental.numpy.vdot": "doc",
    "tensorflow.keras.regularizers.L1L2": "doc",
    "tensorflow.data.experimental.unique": "doc",
    "tensorflow.experimental.async_scope": "doc",
    "tensorflow.experimental.numpy.angle": "doc",
    "tensorflow.experimental.numpy.array": "doc",
    "tensorflow.experimental.numpy.bool_": "doc",
    "tensorflow.experimental.numpy.cross": "doc",
    "tensorflow.experimental.numpy.empty": "doc",
    "tensorflow.experimental.numpy.equal": "doc",
    "tensorflow.experimental.numpy.expm1": "doc",
    "tensorflow.experimental.numpy.finfo": "doc",
    "tensorflow.experimental.numpy.floor": "doc",
    "tensorflow.experimental.numpy.hypot": "doc",
    "tensorflow.experimental.numpy.iinfo": "doc",
    "tensorflow.experimental.numpy.inner": "doc",
    "tensorflow.experimental.numpy.int16": "doc",
    "tensorflow.experimental.numpy.int32": "doc",
    "tensorflow.experimental.numpy.int64": "doc",
    "tensorflow.experimental.numpy.isnan": "doc",
    "tensorflow.experimental.numpy.outer": "doc",
    "tensorflow.experimental.numpy.power": "doc",
    "tensorflow.experimental.numpy.ravel": "doc",
    "tensorflow.experimental.numpy.rot90": "doc",
    "tensorflow.experimental.numpy.shape": "doc",
    "tensorflow.experimental.numpy.split": "doc",
    "tensorflow.experimental.numpy.stack": "doc",
    "tensorflow.experimental.numpy.trace": "doc",
    "tensorflow.experimental.numpy.uint8": "doc",
    "tensorflow.experimental.numpy.where": "doc",
    "tensorflow.experimental.numpy.zeros": "doc",
    "tensorflow.keras.regularizers.l1_l2": "doc",
    "tensorflow.saved_model.experimental": "doc",
    "tensorflow.compat.dimension_at_index": "doc",
    "tensorflow.data.experimental.Counter": "doc",
    "tensorflow.data.experimental.Reducer": "doc",
    "tensorflow.data.experimental.service": "doc",
    "tensorflow.data.experimental.unbatch": "doc",
    "tensorflow.experimental.numpy.append": "doc",
    "tensorflow.experimental.numpy.arange": "doc",
    "tensorflow.experimental.numpy.arccos": "doc",
    "tensorflow.experimental.numpy.arctan": "doc",
    "tensorflow.experimental.numpy.argmax": "doc",
    "tensorflow.experimental.numpy.around": "doc",
    "tensorflow.experimental.numpy.cumsum": "doc",
    "tensorflow.experimental.numpy.divide": "doc",
    "tensorflow.experimental.numpy.divmod": "doc",
    "tensorflow.experimental.numpy.dsplit": "doc",
    "tensorflow.experimental.numpy.dstack": "doc",
    "tensorflow.experimental.numpy.einsum": "doc",
    "tensorflow.experimental.numpy.fliplr": "doc",
    "tensorflow.experimental.numpy.flipud": "doc",
    "tensorflow.experimental.numpy.float_": "doc",
    "tensorflow.experimental.numpy.hsplit": "doc",
    "tensorflow.experimental.numpy.hstack": "doc",
    "tensorflow.experimental.numpy.isreal": "doc",
    "tensorflow.experimental.numpy.matmul": "doc",
    "tensorflow.experimental.numpy.nansum": "doc",
    "tensorflow.experimental.numpy.random": "doc",
    "tensorflow.experimental.numpy.repeat": "doc",
    "tensorflow.experimental.numpy.select": "doc",
    "tensorflow.experimental.numpy.square": "doc",
    "tensorflow.experimental.numpy.uint16": "doc",
    "tensorflow.experimental.numpy.uint32": "doc",
    "tensorflow.experimental.numpy.uint64": "doc",
    "tensorflow.experimental.numpy.vander": "doc",
    "tensorflow.experimental.numpy.vsplit": "doc",
    "tensorflow.experimental.numpy.vstack": "doc",
    "tensorflow.initializers.GlorotNormal": "doc",
    "tensorflow.initializers.lecun_normal": "doc",
    "tensorflow.keras.layers.experimental": "doc",
    "tensorflow.random.stateless_binomial": "doc",
    "tensorflow.data.experimental.Optional": "doc",
    "tensorflow.data.experimental.snapshot": "doc",
    "tensorflow.experimental.numpy.arccosh": "doc",
    "tensorflow.experimental.numpy.arctan2": "doc",
    "tensorflow.experimental.numpy.arctanh": "doc",
    "tensorflow.experimental.numpy.argsort": "doc",
    "tensorflow.experimental.numpy.asarray": "doc",
    "tensorflow.experimental.numpy.average": "doc",
    "tensorflow.experimental.numpy.cumprod": "doc",
    "tensorflow.experimental.numpy.deg2rad": "doc",
    "tensorflow.experimental.numpy.float16": "doc",
    "tensorflow.experimental.numpy.float32": "doc",
    "tensorflow.experimental.numpy.float64": "doc",
    "tensorflow.experimental.numpy.greater": "doc",
    "tensorflow.experimental.numpy.inexact": "doc",
    "tensorflow.experimental.numpy.isclose": "doc",
    "tensorflow.experimental.numpy.maximum": "doc",
    "tensorflow.experimental.numpy.minimum": "doc",
    "tensorflow.experimental.numpy.nanmean": "doc",
    "tensorflow.experimental.numpy.nanprod": "doc",
    "tensorflow.experimental.numpy.ndarray": "doc",
    "tensorflow.experimental.numpy.nonzero": "doc",
    "tensorflow.experimental.numpy.object_": "doc",
    "tensorflow.experimental.numpy.polyval": "doc",
    "tensorflow.experimental.numpy.rad2deg": "doc",
    "tensorflow.experimental.numpy.reshape": "doc",
    "tensorflow.experimental.numpy.signbit": "doc",
    "tensorflow.experimental.numpy.squeeze": "doc",
    "tensorflow.keras.metrics.KLDivergence": "doc",
    "tensorflow.keras.metrics.LogCoshError": "doc",
    "tensorflow.profiler.experimental.stop": "doc",
    "tensorflow.raw_ops.CloseSummaryWriter": "doc",
    "tensorflow.raw_ops.ConjugateTranspose": "doc",
    "tensorflow.raw_ops.IsotonicRegression": "doc",
    "tensorflow.raw_ops.MergeV2Checkpoints": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueueV2": "doc",
    "tensorflow.raw_ops.ParseSingleExample": "doc",
    "tensorflow.raw_ops.StatefulUniformInt": "doc",
    "tensorflow.raw_ops.StridedSliceAssign": "doc",
    "tensorflow.raw_ops.TensorListConcatV2": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMax": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMin": "doc",
    "tensorflow.raw_ops.UnsortedSegmentSum": "doc",
    "tensorflow.xla.experimental.jit_scope": "doc",
    "tensorflow.compat.v1.tpu.experimental": "doc",
    "tensorflow.compat.v1.xla.experimental": "doc",
    "tensorflow.experimental.numpy.absolute": "doc",
    "tensorflow.experimental.numpy.allclose": "doc",
    "tensorflow.experimental.numpy.complex_": "doc",
    "tensorflow.experimental.numpy.compress": "doc",
    "tensorflow.experimental.numpy.diagflat": "doc",
    "tensorflow.experimental.numpy.identity": "doc",
    "tensorflow.experimental.numpy.isfinite": "doc",
    "tensorflow.experimental.numpy.isscalar": "doc",
    "tensorflow.experimental.numpy.linspace": "doc",
    "tensorflow.experimental.numpy.meshgrid": "doc",
    "tensorflow.experimental.numpy.moveaxis": "doc",
    "tensorflow.experimental.numpy.multiply": "doc",
    "tensorflow.experimental.numpy.subtract": "doc",
    "tensorflow.experimental.numpy.swapaxes": "doc",
    "tensorflow.experimental.numpy.unicode_": "doc",
    "tensorflow.profiler.experimental.Trace": "doc",
    "tensorflow.profiler.experimental.start": "doc",
    "tensorflow.compat.v1.data.experimental": "doc",
    "tensorflow.compat.v1.math.segment_mean": "doc",
    "tensorflow.compat.v1.math.segment_prod": "doc",
    "tensorflow.compat.v1.mlir.experimental": "doc",
    "tensorflow.data.experimental.CsvDataset": "doc",
    "tensorflow.data.experimental.SqlDataset": "doc",
    "tensorflow.data.experimental.take_while": "doc",
    "tensorflow.experimental.numpy.complex64": "doc",
    "tensorflow.experimental.numpy.geomspace": "doc",
    "tensorflow.experimental.numpy.heaviside": "doc",
    "tensorflow.experimental.numpy.iscomplex": "doc",
    "tensorflow.experimental.numpy.isrealobj": "doc",
    "tensorflow.experimental.numpy.nextafter": "doc",
    "tensorflow.experimental.numpy.not_equal": "doc",
    "tensorflow.experimental.numpy.ones_like": "doc",
    "tensorflow.experimental.numpy.tensordot": "doc",
    "tensorflow.experimental.numpy.transpose": "doc",
    "tensorflow.keras.callbacks.CallbackList": "doc",
    "tensorflow.keras.callbacks.experimental": "doc",
    "tensorflow.keras.regularizers.serialize": "doc",
    "tensorflow.mixed_precision.experimental": "doc",
    "tensorflow.profiler.experimental.client": "doc",
    "tensorflow.profiler.experimental.server": "doc",
    "tensorflow.compat.v1.add_to_collections": "doc",
    "tensorflow.compat.v1.dimension_at_index": "doc",
    "tensorflow.compat.v1.get_collection_ref": "doc",
    "tensorflow.compat.v1.get_local_variable": "doc",
    "tensorflow.compat.v1.keras.experimental": "doc",
    "tensorflow.compat.v1.keras.regularizers": "doc",
    "tensorflow.compat.v1.tables_initializer": "doc",
    "tensorflow.compat.v1.types.experimental": "doc",
    "tensorflow.experimental.dlpack.to_dlpack": "doc",
    "tensorflow.experimental.numpy.asanyarray": "doc",
    "tensorflow.experimental.numpy.atleast_1d": "doc",
    "tensorflow.experimental.numpy.atleast_2d": "doc",
    "tensorflow.experimental.numpy.atleast_3d": "doc",
    "tensorflow.experimental.numpy.bitwise_or": "doc",
    "tensorflow.experimental.numpy.complex128": "doc",
    "tensorflow.experimental.numpy.empty_like": "doc",
    "tensorflow.experimental.numpy.issubdtype": "doc",
    "tensorflow.experimental.numpy.less_equal": "doc",
    "tensorflow.experimental.numpy.reciprocal": "doc",
    "tensorflow.profiler.experimental.Profile": "doc",
    "tensorflow.random.experimental.Generator": "doc",
    "tensorflow.summary.experimental.get_step": "doc",
    "tensorflow.summary.experimental.set_step": "doc",
    "tensorflow.compat.v1.layers.experimental": "doc",
    "tensorflow.compat.v1.random.experimental": "doc",
    "tensorflow.compat.v1.sparse.segment_mean": "doc",
    "tensorflow.compat.v1.sparse.to_indicator": "doc",
    "tensorflow.data.experimental.StatsOptions": "doc",
    "tensorflow.experimental.async_clear_error": "doc",
    "tensorflow.experimental.numpy.array_equal": "doc",
    "tensorflow.experimental.numpy.bitwise_xor": "doc",
    "tensorflow.experimental.numpy.expand_dims": "doc",
    "tensorflow.experimental.numpy.random.rand": "doc",
    "tensorflow.experimental.numpy.random.seed": "doc",
    "tensorflow.experimental.numpy.result_type": "doc",
    "tensorflow.experimental.numpy.true_divide": "doc",
    "tensorflow.keras.experimental.LinearModel": "doc",
    "tensorflow.keras.regularizers.deserialize": "doc",
    "tensorflow.data.experimental.RandomDataset": "doc",
    "tensorflow.data.experimental.get_structure": "doc",
    "tensorflow.data.experimental.ignore_errors": "doc",
    "tensorflow.data.experimental.latency_stats": "doc",
    "tensorflow.data.experimental.map_and_batch": "doc",
    "tensorflow.experimental.dlpack.from_dlpack": "doc",
    "tensorflow.experimental.numpy.broadcast_to": "doc",
    "tensorflow.experimental.numpy.iscomplexobj": "doc",
    "tensorflow.experimental.numpy.random.randn": "doc",
    "tensorflow.experimental.tensorrt.Converter": "doc",
    "tensorflow.keras.initializers.GlorotNormal": "doc",
    "tensorflow.keras.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.experimental.Optional": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1": "doc",
    "tensorflow.compat.v1.keras.regularizers.L2": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1": "doc",
    "tensorflow.compat.v1.keras.regularizers.l2": "doc",
    "tensorflow.compat.v1.profiler.write_op_log": "doc",
    "tensorflow.data.experimental.TFRecordWriter": "doc",
    "tensorflow.data.experimental.copy_to_device": "doc",
    "tensorflow.experimental.numpy.count_nonzero": "doc",
    "tensorflow.experimental.numpy.greater_equal": "doc",
    "tensorflow.experimental.numpy.promote_types": "doc",
    "tensorflow.experimental.numpy.random.random": "doc",
    "tensorflow.keras.experimental.WideDeepModel": "doc",
    "tensorflow.raw_ops.AccumulatorApplyGradient": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandle": "doc",
    "tensorflow.compat.v1.data.experimental.scan": "doc",
    "tensorflow.compat.v1.estimator.experimental": "doc",
    "tensorflow.compat.v1.keras.regularizers.get": "doc",
    "tensorflow.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.experimental.numpy.random.uniform": "doc",
    "tensorflow.summary.experimental.write_raw_pb": "doc",
    "tensorflow.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.compat.v1.distribute.experimental": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1L2": "doc",
    "tensorflow.data.experimental.group_by_reducer": "doc",
    "tensorflow.data.experimental.make_csv_dataset": "doc",
    "tensorflow.keras.estimator.model_to_estimator": "doc",
    "tensorflow.keras.mixed_precision.experimental": "doc",
    "tensorflow.mlir.experimental.convert_function": "doc",
    "tensorflow.profiler.experimental.client.trace": "doc",
    "tensorflow.profiler.experimental.server.start": "doc",
    "tensorflow.summary.experimental.summary_scope": "doc",
    "tensorflow.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.compat.v1.data.experimental.unique": "doc",
    "tensorflow.compat.v1.experimental.async_scope": "doc",
    "tensorflow.compat.v1.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1_l2": "doc",
    "tensorflow.compat.v1.moving_average_variables": "doc",
    "tensorflow.compat.v1.saved_model.experimental": "doc",
    "tensorflow.data.experimental.DistributeOptions": "doc",
    "tensorflow.data.experimental.enumerate_dataset": "doc",
    "tensorflow.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.estimator.experimental.RNNEstimator": "doc",
    "tensorflow.experimental.function_executor_type": "doc",
    "tensorflow.experimental.numpy.broadcast_arrays": "doc",
    "tensorflow.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.random.experimental.stateless_split": "doc",
    "tensorflow.compat.v1.compat.dimension_at_index": "doc",
    "tensorflow.compat.v1.data.experimental.Counter": "doc",
    "tensorflow.compat.v1.data.experimental.Reducer": "doc",
    "tensorflow.compat.v1.data.experimental.service": "doc",
    "tensorflow.compat.v1.data.experimental.unbatch": "doc",
    "tensorflow.compat.v1.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.keras.layers.experimental": "doc",
    "tensorflow.compat.v1.random.stateless_binomial": "doc",
    "tensorflow.data.experimental.assert_cardinality": "doc",
    "tensorflow.data.experimental.get_single_element": "doc",
    "tensorflow.data.experimental.prefetch_to_device": "doc",
    "tensorflow.data.experimental.rejection_resample": "doc",
    "tensorflow.data.experimental.service.distribute": "doc",
    "tensorflow.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.distribute.experimental.ValueContext": "doc",
    "tensorflow.distribute.experimental.partitioners": "doc",
    "tensorflow.estimator.experimental.RNNClassifier": "doc",
    "tensorflow.experimental.numpy.ascontiguousarray": "doc",
    "tensorflow.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.profiler.experimental.client.monitor": "doc",
    "tensorflow.random.experimental.create_rng_state": "doc",
    "tensorflow.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.compat.v1.data.experimental.Optional": "doc",
    "tensorflow.compat.v1.data.experimental.snapshot": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental": "doc",
    "tensorflow.compat.v1.keras.metrics.KLDivergence": "doc",
    "tensorflow.compat.v1.keras.metrics.LogCoshError": "doc",
    "tensorflow.compat.v1.xla.experimental.jit_scope": "doc",
    "tensorflow.data.experimental.OptimizationOptions": "doc",
    "tensorflow.data.experimental.parallel_interleave": "doc",
    "tensorflow.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.compat.v1.data.experimental.Structure": "doc",
    "tensorflow.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.data.experimental.choose_from_datasets": "doc",
    "tensorflow.data.experimental.get_next_as_optional": "doc",
    "tensorflow.data.experimental.sample_from_datasets": "doc",
    "tensorflow.data.experimental.service.WorkerServer": "doc",
    "tensorflow.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.compat.v1.app.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.data.experimental.CsvDataset": "doc",
    "tensorflow.compat.v1.data.experimental.SqlDataset": "doc",
    "tensorflow.compat.v1.data.experimental.take_while": "doc",
    "tensorflow.compat.v1.keras.callbacks.CallbackList": "doc",
    "tensorflow.compat.v1.keras.regularizers.serialize": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental": "doc",
    "tensorflow.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.data.experimental.parse_example_dataset": "doc",
    "tensorflow.experimental.register_filesystem_plugin": "doc",
    "tensorflow.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.compat.v1.distribute.get_loss_reduction": "doc",
    "tensorflow.compat.v1.estimator.experimental.KMeans": "doc",
    "tensorflow.compat.v1.random.experimental.Generator": "doc",
    "tensorflow.compat.v1.saved_model.experimental.save": "doc",
    "tensorflow.data.experimental.service.DispatchServer": "doc",
    "tensorflow.compat.v1.data.experimental.StatsOptions": "doc",
    "tensorflow.compat.v1.experimental.async_clear_error": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearModel": "doc",
    "tensorflow.compat.v1.keras.regularizers.deserialize": "doc",
    "tensorflow.compat.v1.saved_model.is_valid_signature": "doc",
    "tensorflow.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.compat.v1.MetaGraphDef.CollectionDefEntry": "doc",
    "tensorflow.compat.v1.data.experimental.RandomDataset": "doc",
    "tensorflow.compat.v1.data.experimental.get_structure": "doc",
    "tensorflow.compat.v1.data.experimental.ignore_errors": "doc",
    "tensorflow.compat.v1.data.experimental.latency_stats": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch": "doc",
    "tensorflow.compat.v1.initializers.tables_initializer": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdamParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.FtrlParameters": "doc",
    "tensorflow.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.data.experimental.service.register_dataset": "doc",
    "tensorflow.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.compat.v1.data.experimental.TFRecordWriter": "doc",
    "tensorflow.compat.v1.data.experimental.copy_to_device": "doc",
    "tensorflow.compat.v1.keras.experimental.WideDeepModel": "doc",
    "tensorflow.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.compat.v1.data.experimental.TensorStructure": "doc",
    "tensorflow.compat.v1.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.compat.v1.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.compat.v1.data.experimental.DatasetStructure": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_reducer": "doc",
    "tensorflow.compat.v1.data.experimental.make_csv_dataset": "doc",
    "tensorflow.compat.v1.keras.estimator.model_to_estimator": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_function": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdagradParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.keras.callbacks.experimental.BackupAndRestore": "doc",
    "tensorflow.keras.mixed_precision.experimental.set_policy": "doc",
    "tensorflow.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.data.experimental.DistributeOptions": "doc",
    "tensorflow.compat.v1.data.experimental.OptionalStructure": "doc",
    "tensorflow.compat.v1.data.experimental.enumerate_dataset": "doc",
    "tensorflow.compat.v1.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.compat.v1.experimental.function_executor_type": "doc",
    "tensorflow.compat.v1.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.compat.v1.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.compat.v1.layers.experimental.set_keras_style": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_split": "doc",
    "tensorflow.compat.v1.data.experimental.assert_cardinality": "doc",
    "tensorflow.compat.v1.data.experimental.get_single_element": "doc",
    "tensorflow.compat.v1.data.experimental.prefetch_to_device": "doc",
    "tensorflow.compat.v1.data.experimental.rejection_resample": "doc",
    "tensorflow.compat.v1.data.experimental.service.distribute": "doc",
    "tensorflow.compat.v1.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.compat.v1.random.experimental.create_rng_state": "doc",
    "tensorflow.compat.v1.saved_model.regression_signature_def": "doc",
    "tensorflow.compat.v1.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.compat.v1.data.experimental.OptimizationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.parallel_interleave": "doc",
    "tensorflow.compat.v1.experimental.output_all_intermediates": "doc",
    "tensorflow.compat.v1.keras.experimental.export_saved_model": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.compat.v1.layers.experimental.keras_style_scope": "doc",
    "tensorflow.keras.layers.experimental.SyncBatchNormalization": "doc",
    "tensorflow.compat.v1.data.experimental.TensorArrayStructure": "doc",
    "tensorflow.compat.v1.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.compat.v1.data.experimental.choose_from_datasets": "doc",
    "tensorflow.compat.v1.data.experimental.get_next_as_optional": "doc",
    "tensorflow.compat.v1.data.experimental.sample_from_datasets": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.compat.v1.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.compat.v1.data.experimental.RaggedTensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.SparseTensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.compat.v1.data.experimental.parse_example_dataset": "doc",
    "tensorflow.compat.v1.experimental.register_filesystem_plugin": "doc",
    "tensorflow.compat.v1.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.compat.v1.keras.experimental.load_from_saved_model": "doc",
    "tensorflow.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.keras.mixed_precision.experimental.get_layer_policy": "doc",
    "tensorflow.compat.v1.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.compat.v1.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.compat.v1.tpu.experimental.shared_embedding_columns": "doc",
    "tensorflow.compat.v1.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.compat.v1.data.experimental.service.register_dataset": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.compat.v1.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.distribute.experimental.partitioners.MaxSizePartitioner": "doc",
    "tensorflow.distribute.experimental.partitioners.MinSizePartitioner": "doc",
    "tensorflow.compat.v1.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.compat.v1.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental.EmbeddingConfigSpec": "doc",
    "tensorflow.compat.v1.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.compat.v1.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.distribute.experimental.partitioners.FixedShardsPartitioner": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.is_valid_signature": "doc",
    "tensorflow.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.compat.v1.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch_with_legacy_function": "doc",
    "tensorflow.compat.v1.tpu.experimental.StochasticGradientDescentParameters": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.regression_signature_def": "doc",
    "tensorflow.compat.v1.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.nn.scale_regularization_loss": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformInt": "doc",
    "tensorflow.compat.v1.glorot_normal_initializer": "doc",
    "tensorflow.compat.v1.nn.scale_regularization_loss": "doc",
    "tensorflow.clip_by_global_norm": "doc",
    "tensorflow.nn.fractional_avg_pool": "doc",
    "tensorflow.nn.isotonic_regression": "doc",
    "tensorflow.image.convert_image_dtype": "doc",
    "tensorflow.image.random_jpeg_quality": "doc",
    "tensorflow.raw_ops.CollectiveBcastSend": "doc",
    "tensorflow.raw_ops.CumulativeLogsumexp": "doc",
    "tensorflow.raw_ops.DeleteSessionTensor": "doc",
    "tensorflow.raw_ops.HistogramFixedWidth": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV3": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV4": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV5": "doc",
    "tensorflow.raw_ops.RequantizationRange": "doc",
    "tensorflow.raw_ops.UnsortedSegmentJoin": "doc",
    "tensorflow.raw_ops.UnsortedSegmentProd": "doc",
    "tensorflow.compat.v1.assert_non_negative": "doc",
    "tensorflow.compat.v1.clip_by_global_norm": "doc",
    "tensorflow.keras.utils.get_registered_name": "doc",
    "tensorflow.compat.v1.nn.fractional_avg_pool": "doc",
    "tensorflow.compat.v1.image.convert_image_dtype": "doc",
    "tensorflow.compat.v1.image.random_jpeg_quality": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_name": "doc",
    "tensorflow.compat.v1.saved_model.build_signature_def": "doc",
    "tensorflow.compat.v1.estimator.tpu.InputPipelineConfig": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.build_signature_def": "doc",
    "tensorflow.edit_distance": "doc",
    "tensorflow.unravel_index": "doc",
    "tensorflow.io.RaggedFeature": "doc",
    "tensorflow.nn.atrous_conv2d": "doc",
    "tensorflow.nn.zero_fraction": "doc",
    "tensorflow.math.count_nonzero": "doc",
    "tensorflow.math.zero_fraction": "doc",
    "tensorflow.errors.NotFoundError": "doc",
    "tensorflow.signal.kaiser_window": "doc",
    "tensorflow.metrics.TrueNegatives": "doc",
    "tensorflow.metrics.TruePositives": "doc",
    "tensorflow.raw_ops.ApplyMomentum": "doc",
    "tensorflow.raw_ops.BlockLSTMGrad": "doc",
    "tensorflow.raw_ops.BroadcastArgs": "doc",
    "tensorflow.raw_ops.CropAndResize": "doc",
    "tensorflow.raw_ops.DebugIdentity": "doc",
    "tensorflow.raw_ops.DebugNanCount": "doc",
    "tensorflow.raw_ops.DenseBincount": "doc",
    "tensorflow.raw_ops.EuclideanNorm": "doc",
    "tensorflow.raw_ops.LSTMBlockCell": "doc",
    "tensorflow.raw_ops.MatrixInverse": "doc",
    "tensorflow.raw_ops.MatrixSetDiag": "doc",
    "tensorflow.raw_ops.NcclBroadcast": "doc",
    "tensorflow.raw_ops.PlaceholderV2": "doc",
    "tensorflow.raw_ops.RandomPoisson": "doc",
    "tensorflow.raw_ops.RandomUniform": "doc",
    "tensorflow.raw_ops.StringSplitV2": "doc",
    "tensorflow.raw_ops.UnicodeEncode": "doc",
    "tensorflow.raw_ops.UnicodeScript": "doc",
    "tensorflow.Variable.SaveSliceInfo": "doc",
    "tensorflow.estimator.DNNClassifier": "doc",
    "tensorflow.compat.v1.all_variables": "doc",
    "tensorflow.compat.v1.count_nonzero": "doc",
    "tensorflow.compat.v1.distributions": "doc",
    "tensorflow.compat.v1.edit_distance": "doc",
    "tensorflow.compat.v1.unravel_index": "doc",
    "tensorflow.histogram_fixed_width_bins": "doc",
    "tensorflow.initializers.RandomUniform": "doc",
    "tensorflow.initializers.lecun_uniform": "doc",
    "tensorflow.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.keras.layers.Bidirectional": "doc",
    "tensorflow.keras.layers.GaussianNoise": "doc",
    "tensorflow.compat.v1.io.RaggedFeature": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d": "doc",
    "tensorflow.compat.v1.nn.zero_fraction": "doc",
    "tensorflow.keras.backend.clear_session": "doc",
    "tensorflow.keras.metrics.TrueNegatives": "doc",
    "tensorflow.keras.metrics.TruePositives": "doc",
    "tensorflow.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.keras.datasets.fashion_mnist": "doc",
    "tensorflow.compat.v1.distributions.Beta": "doc",
    "tensorflow.compat.v1.math.count_nonzero": "doc",
    "tensorflow.compat.v1.math.zero_fraction": "doc",
    "tensorflow.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.compat.v1.distributions.Gamma": "doc",
    "tensorflow.compat.v1.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.image.resize_images": "doc",
    "tensorflow.compat.v1.distributions.Normal": "doc",
    "tensorflow.compat.v1.errors.NotFoundError": "doc",
    "tensorflow.compat.v1.signal.kaiser_window": "doc",
    "tensorflow.compat.v1.distributions.Laplace": "doc",
    "tensorflow.compat.v1.distributions.Uniform": "doc",
    "tensorflow.keras.initializers.RandomUniform": "doc",
    "tensorflow.keras.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.Variable.SaveSliceInfo": "doc",
    "tensorflow.compat.v1.distributions.StudentT": "doc",
    "tensorflow.compat.v1.app.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.distributions.Bernoulli": "doc",
    "tensorflow.compat.v1.distributions.Dirichlet": "doc",
    "tensorflow.compat.v1.estimator.DNNClassifier": "doc",
    "tensorflow.raw_ops.BoostedTreesAggregateStats": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandleV2": "doc",
    "tensorflow.raw_ops.LogUniformCandidateSampler": "doc",
    "tensorflow.raw_ops.QuantizeDownAndShrinkRange": "doc",
    "tensorflow.compat.v1.distributions.RegisterKL": "doc",
    "tensorflow.compat.v1.saved_model.tag_constants": "doc",
    "tensorflow.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.compat.v1.distributions.Distribution": "doc",
    "tensorflow.compat.v1.glorot_uniform_initializer": "doc",
    "tensorflow.compat.v1.histogram_fixed_width_bins": "doc",
    "tensorflow.compat.v1.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.compat.v1.keras.layers.Bidirectional": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianNoise": "doc",
    "tensorflow.compat.v1.keras.backend.clear_session": "doc",
    "tensorflow.compat.v1.keras.metrics.TrueNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.TruePositives": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist": "doc",
    "tensorflow.compat.v1.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.compat.v1.resource_loader.load_resource": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomUniform": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_uniform": "doc",
    "tensorflow.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.compat.v1.distributions.DirichletMultinomial": "doc",
    "tensorflow.compat.v1.distributions.ReparameterizationType": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.compat.v1.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorToStringHandle": "doc",
    "tensorflow.UnconnectedGradients": "doc",
    "tensorflow.constant_initializer": "doc",
    "tensorflow.io.decode_and_crop_jpeg": "doc",
    "tensorflow.io.parse_single_example": "doc",
    "tensorflow.nn.max_pool_with_argmax": "doc",
    "tensorflow.math.cumulative_logsumexp": "doc",
    "tensorflow.math.unsorted_segment_max": "doc",
    "tensorflow.math.unsorted_segment_min": "doc",
    "tensorflow.math.unsorted_segment_sum": "doc",
    "tensorflow.image.decode_and_crop_jpeg": "doc",
    "tensorflow.errors.InvalidArgumentError": "doc",
    "tensorflow.raw_ops.ApplyGradientDescent": "doc",
    "tensorflow.raw_ops.ApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.GroupByWindowDataset": "doc",
    "tensorflow.raw_ops.MatchingFilesDataset": "doc",
    "tensorflow.raw_ops.NonDeterministicInts": "doc",
    "tensorflow.raw_ops.RaggedTensorToSparse": "doc",
    "tensorflow.raw_ops.RaggedTensorToTensor": "doc",
    "tensorflow.raw_ops.ResourceApplyAddSign": "doc",
    "tensorflow.raw_ops.StatelessMultinomial": "doc",
    "tensorflow.raw_ops.TPUCompilationResult": "doc",
    "tensorflow.raw_ops.TensorListFromTensor": "doc",
    "tensorflow.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.UnconnectedGradients": "doc",
    "tensorflow.compat.v1.clip_by_average_norm": "doc",
    "tensorflow.compat.v1.constant_initializer": "doc",
    "tensorflow.compat.v1.parse_single_example": "doc",
    "tensorflow.compat.v1.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.unsorted_segment_sum": "doc",
    "tensorflow.distribute.InputReplicationMode": "doc",
    "tensorflow.saved_model.contains_saved_model": "doc",
    "tensorflow.compat.v1.io.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.io.parse_single_example": "doc",
    "tensorflow.compat.v1.nn.max_pool_with_argmax": "doc",
    "tensorflow.compat.v1.math.cumulative_logsumexp": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sum": "doc",
    "tensorflow.compat.v1.image.decode_and_crop_jpeg": "doc",
    "tensorflow.estimator.export.ClassificationOutput": "doc",
    "tensorflow.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.compat.v1.errors.InvalidArgumentError": "doc",
    "tensorflow.compat.v1.metrics.mean_cosine_distance": "doc",
    "tensorflow.compat.v1.profiler.ProfileOptionBuilder": "doc",
    "tensorflow.compat.v1.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.compat.v1.distribute.InputReplicationMode": "doc",
    "tensorflow.compat.v1.saved_model.contains_saved_model": "doc",
    "tensorflow.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.compat.v1.estimator.export.ClassificationOutput": "doc",
    "tensorflow.compat.v1.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.image.stateless_random_brightness": "doc",
    "tensorflow.raw_ops.BoostedTreesTrainingPredict": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformIntV2": "doc",
    "tensorflow.compat.v1.local_variables_initializer": "doc",
    "tensorflow.distribute.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.io": "doc",
    "tensorflow.nn": "doc",
    "tensorflow.cos": "doc",
    "tensorflow.pow": "doc",
    "tensorflow.tan": "doc",
    "tensorflow.atan": "doc",
    "tensorflow.cosh": "doc",
    "tensorflow.fill": "doc",
    "tensorflow.less": "doc",
    "tensorflow.mlir": "doc",
    "tensorflow.norm": "doc",
    "tensorflow.ones": "doc",
    "tensorflow.rank": "doc",
    "tensorflow.roll": "doc",
    "tensorflow.scan": "doc",
    "tensorflow.size": "doc",
    "tensorflow.sort": "doc",
    "tensorflow.tanh": "doc",
    "tensorflow.tile": "doc",
    "tensorflow.add_n": "doc",
    "tensorflow.atan2": "doc",
    "tensorflow.atanh": "doc",
    "tensorflow.audio": "doc",
    "tensorflow.floor": "doc",
    "tensorflow.foldl": "doc",
    "tensorflow.foldr": "doc",
    "tensorflow.group": "doc",
    "tensorflow.image": "doc",
    "tensorflow.no_op": "doc",
    "tensorflow.range": "doc",
    "tensorflow.slice": "doc",
    "tensorflow.split": "doc",
    "tensorflow.Module": "doc",
    "tensorflow.argmax": "doc",
    "tensorflow.compat": "doc",
    "tensorflow.concat": "doc",
    "tensorflow.device": "doc",
    "tensorflow.divide": "doc",
    "tensorflow.map_fn": "doc",
    "tensorflow.nn.elu": "doc",
    "tensorflow.signal": "doc",
    "tensorflow.argsort": "doc",
    "tensorflow.bitwise": "doc",
    "tensorflow.complex": "doc",
    "tensorflow.eigvals": "doc",
    "tensorflow.metrics": "doc",
    "tensorflow.nn.gelu": "doc",
    "tensorflow.nn.pool": "doc",
    "tensorflow.nn.relu": "doc",
    "tensorflow.nn.selu": "doc",
    "tensorflow.nn.silu": "doc",
    "tensorflow.nn.tanh": "doc",
    "tensorflow.sigmoid": "doc",
    "tensorflow.version": "doc",
    "tensorflow.math.cos": "doc",
    "tensorflow.math.mod": "doc",
    "tensorflow.math.pow": "doc",
    "tensorflow.math.tan": "doc",
    "tensorflow.nn.crelu": "doc",
    "tensorflow.nn.relu6": "doc",
    "tensorflow.nn.swish": "doc",
    "tensorflow.nn.top_k": "doc",
    "tensorflow.math.atan": "doc",
    "tensorflow.math.ceil": "doc",
    "tensorflow.math.cosh": "doc",
    "tensorflow.math.imag": "doc",
    "tensorflow.math.less": "doc",
    "tensorflow.math.tanh": "doc",
    "tensorflow.nn.conv1d": "doc",
    "tensorflow.nn.conv2d": "doc",
    "tensorflow.nn.conv3d": "doc",
    "tensorflow.sets.size": "doc",
    "tensorflow.compat.v1": "doc",
    "tensorflow.image.psnr": "doc",
    "tensorflow.image.ssim": "doc",
    "tensorflow.io.is_jpeg": "doc",
    "tensorflow.math.add_n": "doc",
    "tensorflow.math.angle": "doc",
    "tensorflow.math.atan2": "doc",
    "tensorflow.math.atanh": "doc",
    "tensorflow.math.floor": "doc",
    "tensorflow.math.lbeta": "doc",
    "tensorflow.math.ndtri": "doc",
    "tensorflow.math.top_k": "doc",
    "tensorflow.math.xdivy": "doc",
    "tensorflow.nn.dropout": "doc",
    "tensorflow.nn.l2_loss": "doc",
    "tensorflow.nn.moments": "doc",
    "tensorflow.nn.sigmoid": "doc",
    "tensorflow.nn.softmax": "doc",
    "tensorflow.sets.union": "doc",
    "tensorflow.signal.dct": "doc",
    "tensorflow.signal.fft": "doc",
    "tensorflow.image.rot90": "doc",
    "tensorflow.keras.Model": "doc",
    "tensorflow.keras.utils": "doc",
    "tensorflow.math.argmax": "doc",
    "tensorflow.math.divide": "doc",
    "tensorflow.math.igamma": "doc",
    "tensorflow.math.is_nan": "doc",
    "tensorflow.metrics.AUC": "doc",
    "tensorflow.metrics.KLD": "doc",
    "tensorflow.metrics.MAE": "doc",
    "tensorflow.metrics.MSE": "doc",
    "tensorflow.metrics.Sum": "doc",
    "tensorflow.metrics.get": "doc",
    "tensorflow.metrics.kld": "doc",
    "tensorflow.metrics.mae": "doc",
    "tensorflow.metrics.mse": "doc",
    "tensorflow.nn.avg_pool": "doc",
    "tensorflow.nn.bias_add": "doc",
    "tensorflow.nn.ctc_loss": "doc",
    "tensorflow.nn.in_top_k": "doc",
    "tensorflow.nn.max_pool": "doc",
    "tensorflow.nn.nce_loss": "doc",
    "tensorflow.nn.softplus": "doc",
    "tensorflow.raw_ops.Any": "doc",
    "tensorflow.raw_ops.Cos": "doc",
    "tensorflow.raw_ops.Div": "doc",
    "tensorflow.raw_ops.For": "doc",
    "tensorflow.raw_ops.Inv": "doc",
    "tensorflow.raw_ops.Mod": "doc",
    "tensorflow.raw_ops.Neg": "doc",
    "tensorflow.raw_ops.Pow": "doc",
    "tensorflow.raw_ops.Tan": "doc",
    "tensorflow.signal.idct": "doc",
    "tensorflow.signal.ifft": "doc",
    "tensorflow.signal.mdct": "doc",
    "tensorflow.signal.rfft": "doc",
    "tensorflow.signal.stft": "doc",
    "tensorflow.data.Options": "doc",
    "tensorflow.image.resize": "doc",
    "tensorflow.io.read_file": "doc",
    "tensorflow.keras.layers": "doc",
    "tensorflow.keras.models": "doc",
    "tensorflow.math.digamma": "doc",
    "tensorflow.math.polyval": "doc",
    "tensorflow.math.sigmoid": "doc",
    "tensorflow.math.softmax": "doc",
    "tensorflow.math.special": "doc",
    "tensorflow.metrics.MAPE": "doc",
    "tensorflow.metrics.MSLE": "doc",
    "tensorflow.metrics.Mean": "doc",
    "tensorflow.metrics.mape": "doc",
    "tensorflow.metrics.msle": "doc",
    "tensorflow.nest.flatten": "doc",
    "tensorflow.random.gamma": "doc",
    "tensorflow.raw_ops.Atan": "doc",
    "tensorflow.raw_ops.Ceil": "doc",
    "tensorflow.raw_ops.Copy": "doc",
    "tensorflow.raw_ops.Cosh": "doc",
    "tensorflow.raw_ops.Exit": "doc",
    "tensorflow.raw_ops.Fill": "doc",
    "tensorflow.raw_ops.Imag": "doc",
    "tensorflow.raw_ops.Mean": "doc",
    "tensorflow.raw_ops.NoOp": "doc",
    "tensorflow.raw_ops.Rank": "doc",
    "tensorflow.raw_ops.Roll": "doc",
    "tensorflow.raw_ops.Send": "doc",
    "tensorflow.raw_ops.Size": "doc",
    "tensorflow.raw_ops.Tanh": "doc",
    "tensorflow.raw_ops.Tile": "doc",
    "tensorflow.raw_ops.TopK": "doc",
    "tensorflow.signal.fft2d": "doc",
    "tensorflow.signal.fft3d": "doc",
    "tensorflow.signal.frame": "doc",
    "tensorflow.signal.irfft": "doc",
    "tensorflow.sparse.slice": "doc",
    "tensorflow.sparse.split": "doc",
    "tensorflow.compat.v1.io": "doc",
    "tensorflow.compat.v1.nn": "doc",
    "tensorflow.compat.v1.qr": "doc",
    "tensorflow.compat.as_str": "doc",
    "tensorflow.image.is_jpeg": "doc",
    "tensorflow.io.decode_bmp": "doc",
    "tensorflow.io.decode_csv": "doc",
    "tensorflow.io.decode_raw": "doc",
    "tensorflow.io.write_file": "doc",
    "tensorflow.keras.backend": "doc",
    "tensorflow.keras.metrics": "doc",
    "tensorflow.nn.avg_pool1d": "doc",
    "tensorflow.nn.avg_pool2d": "doc",
    "tensorflow.nn.avg_pool3d": "doc",
    "tensorflow.nn.leaky_relu": "doc",
    "tensorflow.nn.max_pool1d": "doc",
    "tensorflow.nn.max_pool2d": "doc",
    "tensorflow.nn.max_pool3d": "doc",
    "tensorflow.random.normal": "doc",
    "tensorflow.raw_ops.Angle": "doc",
    "tensorflow.raw_ops.Atan2": "doc",
    "tensorflow.raw_ops.Atanh": "doc",
    "tensorflow.raw_ops.Const": "doc",
    "tensorflow.raw_ops.Dawsn": "doc",
    "tensorflow.raw_ops.Floor": "doc",
    "tensorflow.raw_ops.IsInf": "doc",
    "tensorflow.raw_ops.IsNan": "doc",
    "tensorflow.raw_ops.Merge": "doc",
    "tensorflow.raw_ops.Ndtri": "doc",
    "tensorflow.raw_ops.Range": "doc",
    "tensorflow.raw_ops.Slice": "doc",
    "tensorflow.raw_ops.Split": "doc",
    "tensorflow.raw_ops.Stage": "doc",
    "tensorflow.raw_ops.While": "doc",
    "tensorflow.raw_ops.Xdivy": "doc",
    "tensorflow.signal.ifft2d": "doc",
    "tensorflow.signal.ifft3d": "doc",
    "tensorflow.signal.rfft2d": "doc",
    "tensorflow.signal.rfft3d": "doc",
    "tensorflow.sparse.concat": "doc",
    "tensorflow.summary.audio": "doc",
    "tensorflow.summary.image": "doc",
    "tensorflow.summary.write": "doc",
    "tensorflow.compat.v1.abs": "doc",
    "tensorflow.compat.v1.add": "doc",
    "tensorflow.compat.v1.app": "doc",
    "tensorflow.compat.v1.cos": "doc",
    "tensorflow.compat.v1.div": "doc",
    "tensorflow.compat.v1.erf": "doc",
    "tensorflow.compat.v1.exp": "doc",
    "tensorflow.compat.v1.eye": "doc",
    "tensorflow.compat.v1.fft": "doc",
    "tensorflow.compat.v1.mod": "doc",
    "tensorflow.compat.v1.pad": "doc",
    "tensorflow.compat.v1.pow": "doc",
    "tensorflow.compat.v1.svd": "doc",
    "tensorflow.compat.v1.tan": "doc",
    "tensorflow.compat.v1.tpu": "doc",
    "tensorflow.compat.v1.xla": "doc",
    "tensorflow.bitwise.invert": "doc",
    "tensorflow.compat.as_text": "doc",
    "tensorflow.dtypes.complex": "doc",
    "tensorflow.io.write_graph": "doc",
    "tensorflow.metrics.Metric": "doc",
    "tensorflow.metrics.Recall": "doc",
    "tensorflow.optimizers.get": "doc",
    "tensorflow.random.poisson": "doc",
    "tensorflow.raw_ops.ArgMax": "doc",
    "tensorflow.raw_ops.Concat": "doc",
    "tensorflow.raw_ops.Conv2D": "doc",
    "tensorflow.raw_ops.Conv3D": "doc",
    "tensorflow.raw_ops.Igamma": "doc",
    "tensorflow.raw_ops.Lgamma": "doc",
    "tensorflow.raw_ops.PyFunc": "doc",
    "tensorflow.raw_ops.SplitV": "doc",
    "tensorflow.raw_ops.ToBool": "doc",
    "tensorflow.raw_ops.TopKV2": "doc",
    "tensorflow.recompute_grad": "doc",
    "tensorflow.signal.irfft2d": "doc",
    "tensorflow.signal.irfft3d": "doc",
    "tensorflow.sparse.softmax": "doc",
    "tensorflow.compat.v1.acos": "doc",
    "tensorflow.compat.v1.atan": "doc",
    "tensorflow.compat.v1.case": "doc",
    "tensorflow.compat.v1.cast": "doc",
    "tensorflow.compat.v1.ceil": "doc",
    "tensorflow.compat.v1.cosh": "doc",
    "tensorflow.compat.v1.data": "doc",
    "tensorflow.compat.v1.erfc": "doc",
    "tensorflow.compat.v1.fill": "doc",
    "tensorflow.compat.v1.ifft": "doc",
    "tensorflow.compat.v1.imag": "doc",
    "tensorflow.compat.v1.less": "doc",
    "tensorflow.compat.v1.math": "doc",
    "tensorflow.compat.v1.mlir": "doc",
    "tensorflow.compat.v1.nest": "doc",
    "tensorflow.compat.v1.norm": "doc",
    "tensorflow.compat.v1.ones": "doc",
    "tensorflow.compat.v1.rank": "doc",
    "tensorflow.compat.v1.real": "doc",
    "tensorflow.compat.v1.roll": "doc",
    "tensorflow.compat.v1.scan": "doc",
    "tensorflow.compat.v1.sets": "doc",
    "tensorflow.compat.v1.size": "doc",
    "tensorflow.compat.v1.sort": "doc",
    "tensorflow.compat.v1.sqrt": "doc",
    "tensorflow.compat.v1.tanh": "doc",
    "tensorflow.compat.v1.test": "doc",
    "tensorflow.compat.v1.tile": "doc",
    "tensorflow.compat.v1.zeta": "doc",
    "tensorflow.compat.as_bytes": "doc",
    "tensorflow.image.transpose": "doc",
    "tensorflow.io.decode_proto": "doc",
    "tensorflow.io.encode_proto": "doc",
    "tensorflow.io.parse_tensor": "doc",
    "tensorflow.metrics.MeanIoU": "doc",
    "tensorflow.metrics.Poisson": "doc",
    "tensorflow.metrics.poisson": "doc",
    "tensorflow.raw_ops.AvgPool": "doc",
    "tensorflow.raw_ops.Barrier": "doc",
    "tensorflow.raw_ops.Complex": "doc",
    "tensorflow.raw_ops.Digamma": "doc",
    "tensorflow.raw_ops.MapSize": "doc",
    "tensorflow.raw_ops.RngSkip": "doc",
    "tensorflow.raw_ops.SetSize": "doc",
    "tensorflow.raw_ops.Sigmoid": "doc",
    "tensorflow.raw_ops.Softmax": "doc",
    "tensorflow.signal.fftshift": "doc",
    "tensorflow.compat.v1.DType": "doc",
    "tensorflow.compat.v1.Event": "doc",
    "tensorflow.compat.v1.Graph": "doc",
    "tensorflow.compat.v1.acosh": "doc",
    "tensorflow.compat.v1.add_n": "doc",
    "tensorflow.compat.v1.angle": "doc",
    "tensorflow.compat.v1.atan2": "doc",
    "tensorflow.compat.v1.atanh": "doc",
    "tensorflow.compat.v1.audio": "doc",
    "tensorflow.compat.v1.cross": "doc",
    "tensorflow.compat.v1.equal": "doc",
    "tensorflow.compat.v1.expm1": "doc",
    "tensorflow.compat.v1.fft2d": "doc",
    "tensorflow.compat.v1.fft3d": "doc",
    "tensorflow.compat.v1.flags": "doc",
    "tensorflow.compat.v1.floor": "doc",
    "tensorflow.compat.v1.foldl": "doc",
    "tensorflow.compat.v1.foldr": "doc",
    "tensorflow.compat.v1.group": "doc",
    "tensorflow.compat.v1.image": "doc",
    "tensorflow.compat.v1.keras": "doc",
    "tensorflow.compat.v1.lbeta": "doc",
    "tensorflow.compat.v1.manip": "doc",
    "tensorflow.compat.v1.no_op": "doc",
    "tensorflow.compat.v1.queue": "doc",
    "tensorflow.compat.v1.range": "doc",
    "tensorflow.compat.v1.rsqrt": "doc",
    "tensorflow.compat.v1.shape": "doc",
    "tensorflow.compat.v1.slice": "doc",
    "tensorflow.compat.v1.split": "doc",
    "tensorflow.compat.v1.stack": "doc",
    "tensorflow.compat.v1.trace": "doc",
    "tensorflow.compat.v1.tuple": "doc",
    "tensorflow.compat.v1.types": "doc",
    "tensorflow.compat.v1.where": "doc",
    "tensorflow.compat.v1.zeros": "doc",
    "tensorflow.audio.decode_wav": "doc",
    "tensorflow.audio.encode_wav": "doc",
    "tensorflow.image.adjust_hue": "doc",
    "tensorflow.image.decode_bmp": "doc",
    "tensorflow.image.hsv_to_rgb": "doc",
    "tensorflow.image.random_hue": "doc",
    "tensorflow.image.rgb_to_hsv": "doc",
    "tensorflow.image.rgb_to_yiq": "doc",
    "tensorflow.image.rgb_to_yuv": "doc",
    "tensorflow.image.yiq_to_rgb": "doc",
    "tensorflow.image.yuv_to_rgb": "doc",
    "tensorflow.initializers.get": "doc",
    "tensorflow.io.SparseFeature": "doc",
    "tensorflow.io.VarLenFeature": "doc",
    "tensorflow.io.decode_base64": "doc",
    "tensorflow.io.encode_base64": "doc",
    "tensorflow.io.parse_example": "doc",
    "tensorflow.keras.layers.Add": "doc",
    "tensorflow.keras.layers.Dot": "doc",
    "tensorflow.keras.layers.ELU": "doc",
    "tensorflow.keras.layers.GRU": "doc",
    "tensorflow.keras.layers.RNN": "doc",
    "tensorflow.keras.layers.add": "doc",
    "tensorflow.keras.layers.dot": "doc",
    "tensorflow.metrics.Accuracy": "doc",
    "tensorflow.signal.ifftshift": "doc",
    "tensorflow.compat.v1.Assert": "doc",
    "tensorflow.compat.v1.Module": "doc",
    "tensorflow.compat.v1.Tensor": "doc",
    "tensorflow.compat.v1.argmax": "doc",
    "tensorflow.compat.v1.compat": "doc",
    "tensorflow.compat.v1.concat": "doc",
    "tensorflow.compat.v1.cumsum": "doc",
    "tensorflow.compat.v1.device": "doc",
    "tensorflow.compat.v1.divide": "doc",
    "tensorflow.compat.v1.dtypes": "doc",
    "tensorflow.compat.v1.einsum": "doc",
    "tensorflow.compat.v1.errors": "doc",
    "tensorflow.compat.v1.gather": "doc",
    "tensorflow.compat.v1.ifft2d": "doc",
    "tensorflow.compat.v1.ifft3d": "doc",
    "tensorflow.compat.v1.igamma": "doc",
    "tensorflow.compat.v1.is_nan": "doc",
    "tensorflow.compat.v1.layers": "doc",
    "tensorflow.compat.v1.map_fn": "doc",
    "tensorflow.compat.v1.matmul": "doc",
    "tensorflow.compat.v1.nn.elu": "doc",
    "tensorflow.compat.v1.random": "doc",
    "tensorflow.compat.v1.repeat": "doc",
    "tensorflow.compat.v1.signal": "doc",
    "tensorflow.compat.v1.sparse": "doc",
    "tensorflow.compat.v1.square": "doc",
    "tensorflow.compat.v1.substr": "doc",
    "tensorflow.compat.v1.unique": "doc",
    "tensorflow.compat.as_str_any": "doc",
    "tensorflow.image.random_crop": "doc",
    "tensorflow.initializers.ones": "doc",
    "tensorflow.io.TFRecordWriter": "doc",
    "tensorflow.keras.backend.rnn": "doc",
    "tensorflow.keras.layers.LSTM": "doc",
    "tensorflow.keras.layers.ReLU": "doc",
    "tensorflow.keras.metrics.AUC": "doc",
    "tensorflow.keras.metrics.KLD": "doc",
    "tensorflow.keras.metrics.MAE": "doc",
    "tensorflow.keras.metrics.MSE": "doc",
    "tensorflow.keras.metrics.Sum": "doc",
    "tensorflow.keras.metrics.get": "doc",
    "tensorflow.keras.metrics.kld": "doc",
    "tensorflow.keras.metrics.mae": "doc",
    "tensorflow.keras.metrics.mse": "doc",
    "tensorflow.metrics.Precision": "doc",
    "tensorflow.metrics.serialize": "doc",
    "tensorflow.nn.conv_transpose": "doc",
    "tensorflow.nn.depth_to_space": "doc",
    "tensorflow.nn.space_to_batch": "doc",
    "tensorflow.nn.space_to_depth": "doc",
    "tensorflow.compat.v1.NodeDef": "doc",
    "tensorflow.compat.v1.OpError": "doc",
    "tensorflow.compat.v1.Session": "doc",
    "tensorflow.compat.v1.Summary": "doc",
    "tensorflow.compat.v1.app.run": "doc",
    "tensorflow.compat.v1.arg_max": "doc",
    "tensorflow.compat.v1.argsort": "doc",
    "tensorflow.compat.v1.bitcast": "doc",
    "tensorflow.compat.v1.bitwise": "doc",
    "tensorflow.compat.v1.complex": "doc",
    "tensorflow.compat.v1.cumprod": "doc",
    "tensorflow.compat.v1.digamma": "doc",
    "tensorflow.compat.v1.greater": "doc",
    "tensorflow.compat.v1.igammac": "doc",
    "tensorflow.compat.v1.maximum": "doc",
    "tensorflow.compat.v1.metrics": "doc",
    "tensorflow.compat.v1.minimum": "doc",
    "tensorflow.compat.v1.nn.pool": "doc",
    "tensorflow.compat.v1.nn.relu": "doc",
    "tensorflow.compat.v1.nn.selu": "doc",
    "tensorflow.compat.v1.nn.silu": "doc",
    "tensorflow.compat.v1.nn.tanh": "doc",
    "tensorflow.compat.v1.one_hot": "doc",
    "tensorflow.compat.v1.py_func": "doc",
    "tensorflow.compat.v1.realdiv": "doc",
    "tensorflow.compat.v1.reshape": "doc",
    "tensorflow.compat.v1.reverse": "doc",
    "tensorflow.compat.v1.shape_n": "doc",
    "tensorflow.compat.v1.sigmoid": "doc",
    "tensorflow.compat.v1.squeeze": "doc",
    "tensorflow.compat.v1.summary": "doc",
    "tensorflow.compat.v1.truediv": "doc",
    "tensorflow.compat.v1.unstack": "doc",
    "tensorflow.compat.v1.version": "doc",
    "tensorflow.bitwise.bitwise_or": "doc",
    "tensorflow.compat.path_to_str": "doc",
    "tensorflow.image.ResizeMethod": "doc",
    "tensorflow.image.adjust_gamma": "doc",
    "tensorflow.image.central_crop": "doc",
    "tensorflow.image.flip_up_down": "doc",
    "tensorflow.io.FixedLenFeature": "doc",
    "tensorflow.keras.layers.Dense": "doc",
    "tensorflow.keras.layers.Input": "doc",
    "tensorflow.keras.layers.Layer": "doc",
    "tensorflow.keras.layers.PReLU": "doc",
    "tensorflow.keras.metrics.MAPE": "doc",
    "tensorflow.keras.metrics.MSLE": "doc",
    "tensorflow.keras.metrics.Mean": "doc",
    "tensorflow.keras.metrics.mape": "doc",
    "tensorflow.keras.metrics.msle": "doc",
    "tensorflow.keras.models.Model": "doc",
    "tensorflow.math.special.dawsn": "doc",
    "tensorflow.metrics.MeanTensor": "doc",
    "tensorflow.optimizers.Adagrad": "doc",
    "tensorflow.compat.v1.GraphDef": "doc",
    "tensorflow.compat.v1.TypeSpec": "doc",
    "tensorflow.compat.v1.Variable": "doc",
    "tensorflow.compat.v1.as_dtype": "doc",
    "tensorflow.compat.v1.bincount": "doc",
    "tensorflow.compat.v1.cholesky": "doc",
    "tensorflow.compat.v1.function": "doc",
    "tensorflow.compat.v1.get_seed": "doc",
    "tensorflow.compat.v1.identity": "doc",
    "tensorflow.compat.v1.linspace": "doc",
    "tensorflow.compat.v1.math.abs": "doc",
    "tensorflow.compat.v1.math.add": "doc",
    "tensorflow.compat.v1.math.cos": "doc",
    "tensorflow.compat.v1.math.erf": "doc",
    "tensorflow.compat.v1.math.exp": "doc",
    "tensorflow.compat.v1.math.mod": "doc",
    "tensorflow.compat.v1.math.pow": "doc",
    "tensorflow.compat.v1.math.tan": "doc",
    "tensorflow.compat.v1.meshgrid": "doc",
    "tensorflow.compat.v1.multiply": "doc",
    "tensorflow.compat.v1.nn.crelu": "doc",
    "tensorflow.compat.v1.nn.relu6": "doc",
    "tensorflow.compat.v1.nn.swish": "doc",
    "tensorflow.compat.v1.nn.top_k": "doc",
    "tensorflow.compat.v1.op_scope": "doc",
    "tensorflow.compat.v1.profiler": "doc",
    "tensorflow.compat.v1.quantize": "doc",
    "tensorflow.compat.v1.spectral": "doc",
    "tensorflow.compat.v1.subtract": "doc",
    "tensorflow.compat.v1.to_float": "doc",
    "tensorflow.compat.v1.tpu.core": "doc",
    "tensorflow.compat.v1.user_ops": "doc",
    "tensorflow.compat.v1.where_v2": "doc",
    "tensorflow.bitwise.bitwise_xor": "doc",
    "tensorflow.io.serialize_sparse": "doc",
    "tensorflow.io.serialize_tensor": "doc",
    "tensorflow.keras.layers.Conv1D": "doc",
    "tensorflow.keras.layers.Conv2D": "doc",
    "tensorflow.keras.layers.Conv3D": "doc",
    "tensorflow.keras.layers.Lambda": "doc",
    "tensorflow.keras.utils.Progbar": "doc",
    "tensorflow.math.special.spence": "doc",
    "tensorflow.metrics.deserialize": "doc",
    "tensorflow.nn.conv1d_transpose": "doc",
    "tensorflow.nn.conv2d_transpose": "doc",
    "tensorflow.nn.conv3d_transpose": "doc",
    "tensorflow.nn.depthwise_conv2d": "doc",
    "tensorflow.nn.separable_conv2d": "doc",
    "tensorflow.nn.weighted_moments": "doc",
    "tensorflow.signal.inverse_mdct": "doc",
    "tensorflow.signal.inverse_stft": "doc",
    "tensorflow.compat.v1.AttrValue": "doc",
    "tensorflow.compat.v1.Dimension": "doc",
    "tensorflow.compat.v1.FIFOQueue": "doc",
    "tensorflow.compat.v1.GraphKeys": "doc",
    "tensorflow.compat.v1.Operation": "doc",
    "tensorflow.compat.v1.QueueBase": "doc",
    "tensorflow.compat.v1.app.flags": "doc",
    "tensorflow.compat.v1.diag_part": "doc",
    "tensorflow.compat.v1.estimator": "doc",
    "tensorflow.compat.v1.gather_nd": "doc",
    "tensorflow.compat.v1.is_tensor": "doc",
    "tensorflow.compat.v1.lin_space": "doc",
    "tensorflow.compat.v1.math.acos": "doc",
    "tensorflow.compat.v1.math.atan": "doc",
    "tensorflow.compat.v1.math.ceil": "doc",
    "tensorflow.compat.v1.math.cosh": "doc",
    "tensorflow.compat.v1.math.erfc": "doc",
    "tensorflow.compat.v1.math.imag": "doc",
    "tensorflow.compat.v1.math.less": "doc",
    "tensorflow.compat.v1.math.real": "doc",
    "tensorflow.compat.v1.math.sqrt": "doc",
    "tensorflow.compat.v1.math.tanh": "doc",
    "tensorflow.compat.v1.math.zeta": "doc",
    "tensorflow.compat.v1.nn.conv1d": "doc",
    "tensorflow.compat.v1.nn.conv2d": "doc",
    "tensorflow.compat.v1.nn.conv3d": "doc",
    "tensorflow.compat.v1.not_equal": "doc",
    "tensorflow.compat.v1.ones_like": "doc",
    "tensorflow.compat.v1.python_io": "doc",
    "tensorflow.compat.v1.read_file": "doc",
    "tensorflow.compat.v1.setdiff1d": "doc",
    "tensorflow.compat.v1.sets.size": "doc",
    "tensorflow.compat.v1.tensordot": "doc",
    "tensorflow.compat.v1.timestamp": "doc",
    "tensorflow.compat.v1.to_double": "doc",
    "tensorflow.compat.v1.tpu.shard": "doc",
    "tensorflow.compat.v1.transpose": "doc",
    "tensorflow.io.decode_compressed": "doc",
    "tensorflow.keras.backend.floatx": "doc",
    "tensorflow.keras.datasets.mnist": "doc",
    "tensorflow.keras.layers.Average": "doc",
    "tensorflow.keras.layers.Dropout": "doc",
    "tensorflow.keras.layers.Flatten": "doc",
    "tensorflow.keras.layers.GRUCell": "doc",
    "tensorflow.keras.layers.Maximum": "doc",
    "tensorflow.keras.layers.Minimum": "doc",
    "tensorflow.keras.layers.Permute": "doc",
    "tensorflow.keras.layers.Reshape": "doc",
    "tensorflow.keras.layers.Softmax": "doc",
    "tensorflow.keras.layers.Wrapper": "doc",
    "tensorflow.keras.layers.average": "doc",
    "tensorflow.keras.layers.maximum": "doc",
    "tensorflow.keras.layers.minimum": "doc",
    "tensorflow.keras.metrics.Metric": "doc",
    "tensorflow.keras.metrics.Recall": "doc",
    "tensorflow.keras.optimizers.get": "doc",
    "tensorflow.keras.utils.Sequence": "doc",
    "tensorflow.keras.utils.get_file": "doc",
    "tensorflow.nn.collapse_repeated": "doc",
    "tensorflow.nn.ctc_unique_labels": "doc",
    "tensorflow.compat.v1.DeviceSpec": "doc",
    "tensorflow.compat.v1.LMDBReader": "doc",
    "tensorflow.compat.v1.ReaderBase": "doc",
    "tensorflow.compat.v1.TensorInfo": "doc",
    "tensorflow.compat.v1.TensorSpec": "doc",
    "tensorflow.compat.v1.decode_csv": "doc",
    "tensorflow.compat.v1.decode_raw": "doc",
    "tensorflow.compat.v1.dequantize": "doc",
    "tensorflow.compat.v1.distribute": "doc",
    "tensorflow.compat.v1.div_no_nan": "doc",
    "tensorflow.compat.v1.flags.Flag": "doc",
    "tensorflow.compat.v1.graph_util": "doc",
    "tensorflow.compat.v1.identity_n": "doc",
    "tensorflow.compat.v1.image.psnr": "doc",
    "tensorflow.compat.v1.image.ssim": "doc",
    "tensorflow.compat.v1.init_scope": "doc",
    "tensorflow.compat.v1.io.is_jpeg": "doc",
    "tensorflow.compat.v1.less_equal": "doc",
    "tensorflow.compat.v1.manip.roll": "doc",
    "tensorflow.compat.v1.manip.tile": "doc",
    "tensorflow.compat.v1.math.acosh": "doc",
    "tensorflow.compat.v1.math.add_n": "doc",
    "tensorflow.compat.v1.math.angle": "doc",
    "tensorflow.compat.v1.math.atan2": "doc",
    "tensorflow.compat.v1.math.atanh": "doc",
    "tensorflow.compat.v1.math.equal": "doc",
    "tensorflow.compat.v1.math.expm1": "doc",
    "tensorflow.compat.v1.math.floor": "doc",
    "tensorflow.compat.v1.math.lbeta": "doc",
    "tensorflow.compat.v1.math.ndtri": "doc",
    "tensorflow.compat.v1.math.rsqrt": "doc",
    "tensorflow.compat.v1.math.top_k": "doc",
    "tensorflow.compat.v1.math.xdivy": "doc",
    "tensorflow.compat.v1.name_scope": "doc",
    "tensorflow.compat.v1.nn.dropout": "doc",
    "tensorflow.compat.v1.nn.l2_loss": "doc",
    "tensorflow.compat.v1.nn.moments": "doc",
    "tensorflow.compat.v1.nn.raw_rnn": "doc",
    "tensorflow.compat.v1.nn.sigmoid": "doc",
    "tensorflow.compat.v1.nn.softmax": "doc",
    "tensorflow.compat.v1.reciprocal": "doc",
    "tensorflow.compat.v1.reduce_all": "doc",
    "tensorflow.compat.v1.reduce_any": "doc",
    "tensorflow.compat.v1.reduce_max": "doc",
    "tensorflow.compat.v1.reduce_min": "doc",
    "tensorflow.compat.v1.reduce_sum": "doc",
    "tensorflow.compat.v1.reverse_v2": "doc",
    "tensorflow.compat.v1.scalar_mul": "doc",
    "tensorflow.compat.v1.scatter_nd": "doc",
    "tensorflow.compat.v1.sets.union": "doc",
    "tensorflow.compat.v1.signal.dct": "doc",
    "tensorflow.compat.v1.signal.fft": "doc",
    "tensorflow.compat.v1.sparse.add": "doc",
    "tensorflow.compat.v1.sparse.eye": "doc",
    "tensorflow.compat.v1.sparse_add": "doc",
    "tensorflow.compat.v1.while_loop": "doc",
    "tensorflow.compat.v1.write_file": "doc",
    "tensorflow.histogram_fixed_width": "doc",
    "tensorflow.image.adjust_contrast": "doc",
    "tensorflow.image.crop_and_resize": "doc",
    "tensorflow.image.extract_glimpse": "doc",
    "tensorflow.image.extract_patches": "doc",
    "tensorflow.image.flip_left_right": "doc",
    "tensorflow.image.random_contrast": "doc",
    "tensorflow.image.resize_with_pad": "doc",
    "tensorflow.image.ssim_multiscale": "doc",
    "tensorflow.image.total_variation": "doc",
    "tensorflow.io.extract_jpeg_shape": "doc",
    "tensorflow.keras.backend.epsilon": "doc",
    "tensorflow.keras.backend.get_uid": "doc",
    "tensorflow.keras.layers.LSTMCell": "doc",
    "tensorflow.keras.layers.Multiply": "doc",
    "tensorflow.keras.layers.Subtract": "doc",
    "tensorflow.keras.layers.multiply": "doc",
    "tensorflow.keras.layers.subtract": "doc",
    "tensorflow.keras.metrics.MeanIoU": "doc",
    "tensorflow.keras.metrics.Poisson": "doc",
    "tensorflow.keras.metrics.poisson": "doc",
    "tensorflow.nn.ctc_greedy_decoder": "doc",
    "tensorflow.sparse.segment_sqrt_n": "doc",
    "tensorflow.compat.v1.RunMetadata": "doc",
    "tensorflow.compat.v1.TensorArray": "doc",
    "tensorflow.compat.v1.TensorShape": "doc",
    "tensorflow.compat.v1.assert_less": "doc",
    "tensorflow.compat.v1.assert_near": "doc",
    "tensorflow.compat.v1.assert_rank": "doc",
    "tensorflow.compat.v1.assert_type": "doc",
    "tensorflow.compat.v1.count_up_to": "doc",
    "tensorflow.compat.v1.dtypes.cast": "doc",
    "tensorflow.compat.v1.expand_dims": "doc",
    "tensorflow.compat.v1.flags.Error": "doc",
    "tensorflow.compat.v1.flags.FLAGS": "doc",
    "tensorflow.compat.v1.image.rot90": "doc",
    "tensorflow.compat.v1.keras.Input": "doc",
    "tensorflow.compat.v1.keras.Model": "doc",
    "tensorflow.compat.v1.keras.utils": "doc",
    "tensorflow.compat.v1.math.argmax": "doc",
    "tensorflow.compat.v1.math.cumsum": "doc",
    "tensorflow.compat.v1.math.divide": "doc",
    "tensorflow.compat.v1.math.igamma": "doc",
    "tensorflow.compat.v1.math.is_nan": "doc",
    "tensorflow.compat.v1.math.square": "doc",
    "tensorflow.compat.v1.metrics.auc": "doc",
    "tensorflow.compat.v1.nn.avg_pool": "doc",
    "tensorflow.compat.v1.nn.bias_add": "doc",
    "tensorflow.compat.v1.nn.ctc_loss": "doc",
    "tensorflow.compat.v1.nn.in_top_k": "doc",
    "tensorflow.compat.v1.nn.max_pool": "doc",
    "tensorflow.compat.v1.nn.nce_loss": "doc",
    "tensorflow.compat.v1.nn.rnn_cell": "doc",
    "tensorflow.compat.v1.nn.softplus": "doc",
    "tensorflow.compat.v1.placeholder": "doc",
    "tensorflow.compat.v1.py_function": "doc",
    "tensorflow.compat.v1.quantize_v2": "doc",
    "tensorflow.compat.v1.random_crop": "doc",
    "tensorflow.compat.v1.reduce_join": "doc",
    "tensorflow.compat.v1.reduce_mean": "doc",
    "tensorflow.compat.v1.reduce_prod": "doc",
    "tensorflow.compat.v1.saved_model": "doc",
    "tensorflow.compat.v1.scatter_add": "doc",
    "tensorflow.compat.v1.scatter_div": "doc",
    "tensorflow.compat.v1.scatter_max": "doc",
    "tensorflow.compat.v1.scatter_min": "doc",
    "tensorflow.compat.v1.scatter_mul": "doc",
    "tensorflow.compat.v1.scatter_sub": "doc",
    "tensorflow.compat.v1.signal.idct": "doc",
    "tensorflow.compat.v1.signal.ifft": "doc",
    "tensorflow.compat.v1.signal.mdct": "doc",
    "tensorflow.compat.v1.signal.rfft": "doc",
    "tensorflow.compat.v1.signal.stft": "doc",
    "tensorflow.compat.v1.sparse.mask": "doc",
    "tensorflow.compat.v1.sparse_mask": "doc",
    "tensorflow.compat.v1.switch_case": "doc",
    "tensorflow.compat.v1.to_bfloat16": "doc",
    "tensorflow.compat.v1.tpu.rewrite": "doc",
    "tensorflow.compat.v1.truncatediv": "doc",
    "tensorflow.compat.v1.truncatemod": "doc",
    "tensorflow.compat.dimension_value": "doc",
    "tensorflow.image.grayscale_to_rgb": "doc",
    "tensorflow.image.rgb_to_grayscale": "doc",
    "tensorflow.io.decode_json_example": "doc",
    "tensorflow.keras.initializers.get": "doc",
    "tensorflow.keras.layers.Attention": "doc",
    "tensorflow.keras.layers.AvgPool1D": "doc",
    "tensorflow.keras.layers.AvgPool2D": "doc",
    "tensorflow.keras.layers.AvgPool3D": "doc",
    "tensorflow.keras.layers.InputSpec": "doc",
    "tensorflow.keras.layers.LeakyReLU": "doc",
    "tensorflow.keras.layers.MaxPool1D": "doc",
    "tensorflow.keras.layers.MaxPool2D": "doc",
    "tensorflow.keras.layers.MaxPool3D": "doc",
    "tensorflow.keras.layers.SimpleRNN": "doc",
    "tensorflow.keras.layers.serialize": "doc",
    "tensorflow.keras.metrics.Accuracy": "doc",
    "tensorflow.math.special.bessel_i0": "doc",
    "tensorflow.math.special.bessel_i1": "doc",
    "tensorflow.math.special.bessel_j0": "doc",
    "tensorflow.math.special.bessel_j1": "doc",
    "tensorflow.math.special.bessel_k0": "doc",
    "tensorflow.math.special.bessel_k1": "doc",
    "tensorflow.math.special.bessel_y0": "doc",
    "tensorflow.math.special.bessel_y1": "doc",
    "tensorflow.metrics.BinaryAccuracy": "doc",
    "tensorflow.nn.batch_normalization": "doc",
    "tensorflow.nn.fractional_max_pool": "doc",
    "tensorflow.nn.with_space_to_batch": "doc",
    "tensorflow.raw_ops.ApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ApplyAdagradV2": "doc",
    "tensorflow.raw_ops.MatrixBandPart": "doc",
    "tensorflow.raw_ops.MatrixDiagPart": "doc",
    "tensorflow.raw_ops.ParallelConcat": "doc",
    "tensorflow.raw_ops.ResizeBilinear": "doc",
    "tensorflow.raw_ops.RngReadAndSkip": "doc",
    "tensorflow.raw_ops.SparseBincount": "doc",
    "tensorflow.raw_ops.StatelessWhile": "doc",
    "tensorflow.raw_ops.StringToNumber": "doc",
    "tensorflow.raw_ops.TextLineReader": "doc",
    "tensorflow.signal.overlap_and_add": "doc",
    "tensorflow.compat.v1.MetaGraphDef": "doc",
    "tensorflow.compat.v1.NameAttrList": "doc",
    "tensorflow.compat.v1.OptionalSpec": "doc",
    "tensorflow.compat.v1.SparseTensor": "doc",
    "tensorflow.compat.v1.accumulate_n": "doc",
    "tensorflow.compat.v1.assert_equal": "doc",
    "tensorflow.compat.v1.batch_gather": "doc",
    "tensorflow.compat.v1.broadcast_to": "doc",
    "tensorflow.compat.v1.data.Dataset": "doc",
    "tensorflow.compat.v1.data.Options": "doc",
    "tensorflow.compat.v1.dtypes.DType": "doc",
    "tensorflow.compat.v1.ensure_shape": "doc",
    "tensorflow.compat.v1.flags.DEFINE": "doc",
    "tensorflow.compat.v1.get_variable": "doc",
    "tensorflow.compat.v1.image.resize": "doc",
    "tensorflow.compat.v1.initializers": "doc",
    "tensorflow.compat.v1.io.QueueBase": "doc",
    "tensorflow.compat.v1.io.read_file": "doc",
    "tensorflow.compat.v1.keras.layers": "doc",
    "tensorflow.compat.v1.keras.models": "doc",
    "tensorflow.compat.v1.layers.Dense": "doc",
    "tensorflow.compat.v1.layers.Layer": "doc",
    "tensorflow.compat.v1.layers.dense": "doc",
    "tensorflow.compat.v1.make_ndarray": "doc",
    "tensorflow.compat.v1.math.cumprod": "doc",
    "tensorflow.compat.v1.math.digamma": "doc",
    "tensorflow.compat.v1.math.greater": "doc",
    "tensorflow.compat.v1.math.igammac": "doc",
    "tensorflow.compat.v1.math.maximum": "doc",
    "tensorflow.compat.v1.math.minimum": "doc",
    "tensorflow.compat.v1.math.polyval": "doc",
    "tensorflow.compat.v1.math.sigmoid": "doc",
    "tensorflow.compat.v1.math.softmax": "doc",
    "tensorflow.compat.v1.math.special": "doc",
    "tensorflow.compat.v1.math.truediv": "doc",
    "tensorflow.compat.v1.matrix_solve": "doc",
    "tensorflow.compat.v1.metrics.mean": "doc",
    "tensorflow.compat.v1.nest.flatten": "doc",
    "tensorflow.compat.v1.nn.xw_plus_b": "doc",
    "tensorflow.compat.v1.parse_tensor": "doc",
    "tensorflow.compat.v1.quantization": "doc",
    "tensorflow.compat.v1.random.gamma": "doc",
    "tensorflow.compat.v1.searchsorted": "doc",
    "tensorflow.compat.v1.signal.fft2d": "doc",
    "tensorflow.compat.v1.signal.fft3d": "doc",
    "tensorflow.compat.v1.signal.frame": "doc",
    "tensorflow.compat.v1.signal.irfft": "doc",
    "tensorflow.compat.v1.sparse.cross": "doc",
    "tensorflow.compat.v1.sparse.merge": "doc",
    "tensorflow.compat.v1.sparse.slice": "doc",
    "tensorflow.compat.v1.sparse.split": "doc",
    "tensorflow.compat.v1.sparse_merge": "doc",
    "tensorflow.compat.v1.sparse_slice": "doc",
    "tensorflow.compat.v1.sparse_split": "doc",
    "tensorflow.compat.v1.spectral.dct": "doc",
    "tensorflow.compat.v1.spectral.fft": "doc",
    "tensorflow.compat.v1.summary.text": "doc",
    "tensorflow.compat.v1.to_complex64": "doc",
    "tensorflow.image.adjust_brightness": "doc",
    "tensorflow.image.adjust_saturation": "doc",
    "tensorflow.image.random_saturation": "doc",
    "tensorflow.io.match_filenames_once": "doc",
    "tensorflow.keras.initializers.ones": "doc",
    "tensorflow.keras.layers.Activation": "doc",
    "tensorflow.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.keras.layers.InputLayer": "doc",
    "tensorflow.keras.metrics.Precision": "doc",
    "tensorflow.keras.metrics.serialize": "doc",
    "tensorflow.keras.models.Sequential": "doc",
    "tensorflow.keras.models.save_model": "doc",
    "tensorflow.math.special.bessel_i0e": "doc",
    "tensorflow.math.special.bessel_i1e": "doc",
    "tensorflow.math.special.bessel_k0e": "doc",
    "tensorflow.math.special.bessel_k1e": "doc",
    "tensorflow.metrics.binary_accuracy": "doc",
    "tensorflow.nn.RNNCellDeviceWrapper": "doc",
    "tensorflow.nn.compute_average_loss": "doc",
    "tensorflow.nn.sampled_softmax_loss": "doc",
    "tensorflow.compat.v1.IndexedSlices": "doc",
    "tensorflow.compat.v1.PriorityQueue": "doc",
    "tensorflow.compat.v1.SparseFeature": "doc",
    "tensorflow.compat.v1.Summary.Audio": "doc",
    "tensorflow.compat.v1.Summary.Image": "doc",
    "tensorflow.compat.v1.Summary.Value": "doc",
    "tensorflow.compat.v1.VarLenFeature": "doc",
    "tensorflow.compat.v1.VariableScope": "doc",
    "tensorflow.compat.v1.assert_scalar": "doc",
    "tensorflow.compat.v1.clip_by_value": "doc",
    "tensorflow.compat.v1.compat.as_str": "doc",
    "tensorflow.compat.v1.data.Iterator": "doc",
    "tensorflow.compat.v1.decode_base64": "doc",
    "tensorflow.compat.v1.encode_base64": "doc",
    "tensorflow.compat.v1.estimator.tpu": "doc",
    "tensorflow.compat.v1.greater_equal": "doc",
    "tensorflow.compat.v1.image.is_jpeg": "doc",
    "tensorflow.compat.v1.io.decode_bmp": "doc",
    "tensorflow.compat.v1.io.decode_csv": "doc",
    "tensorflow.compat.v1.io.decode_raw": "doc",
    "tensorflow.compat.v1.io.write_file": "doc",
    "tensorflow.compat.v1.keras.backend": "doc",
    "tensorflow.compat.v1.keras.metrics": "doc",
    "tensorflow.compat.v1.layers.Conv1D": "doc",
    "tensorflow.compat.v1.layers.Conv2D": "doc",
    "tensorflow.compat.v1.layers.Conv3D": "doc",
    "tensorflow.compat.v1.layers.conv1d": "doc",
    "tensorflow.compat.v1.layers.conv2d": "doc",
    "tensorflow.compat.v1.layers.conv3d": "doc",
    "tensorflow.compat.v1.make_template": "doc",
    "tensorflow.compat.v1.manip.reshape": "doc",
    "tensorflow.compat.v1.manip.reverse": "doc",
    "tensorflow.compat.v1.math.bincount": "doc",
    "tensorflow.compat.v1.math.in_top_k": "doc",
    "tensorflow.compat.v1.math.multiply": "doc",
    "tensorflow.compat.v1.math.softplus": "doc",
    "tensorflow.compat.v1.math.subtract": "doc",
    "tensorflow.compat.v1.nn.avg_pool1d": "doc",
    "tensorflow.compat.v1.nn.avg_pool2d": "doc",
    "tensorflow.compat.v1.nn.avg_pool3d": "doc",
    "tensorflow.compat.v1.nn.leaky_relu": "doc",
    "tensorflow.compat.v1.nn.max_pool1d": "doc",
    "tensorflow.compat.v1.nn.max_pool2d": "doc",
    "tensorflow.compat.v1.nn.max_pool3d": "doc",
    "tensorflow.compat.v1.nn.relu_layer": "doc",
    "tensorflow.compat.v1.parse_example": "doc",
    "tensorflow.compat.v1.random.normal": "doc",
    "tensorflow.compat.v1.random_normal": "doc",
    "tensorflow.compat.v1.regex_replace": "doc",
    "tensorflow.compat.v1.saturate_cast": "doc",
    "tensorflow.compat.v1.sequence_mask": "doc",
    "tensorflow.compat.v1.sets.set_size": "doc",
    "tensorflow.compat.v1.signal.ifft2d": "doc",
    "tensorflow.compat.v1.signal.ifft3d": "doc",
    "tensorflow.compat.v1.signal.rfft2d": "doc",
    "tensorflow.compat.v1.signal.rfft3d": "doc",
    "tensorflow.compat.v1.sparse.concat": "doc",
    "tensorflow.compat.v1.sparse.matmul": "doc",
    "tensorflow.compat.v1.sparse_concat": "doc",
    "tensorflow.compat.v1.sparse_matmul": "doc",
    "tensorflow.compat.v1.sparse_retain": "doc",
    "tensorflow.compat.v1.spectral.idct": "doc",
    "tensorflow.compat.v1.spectral.ifft": "doc",
    "tensorflow.compat.v1.spectral.rfft": "doc",
    "tensorflow.compat.v1.strided_slice": "doc",
    "tensorflow.compat.v1.summary.Event": "doc",
    "tensorflow.compat.v1.summary.audio": "doc",
    "tensorflow.compat.v1.summary.image": "doc",
    "tensorflow.compat.v1.summary.merge": "doc",
    "tensorflow.compat.v1.test.TestCase": "doc",
    "tensorflow.compat.v1.to_complex128": "doc",
    "tensorflow.compat.v1.tpu.replicate": "doc",
    "tensorflow.compat.v1.wrap_function": "doc",
    "tensorflow.estimator.SessionRunHook": "doc",
    "tensorflow.image.extract_jpeg_shape": "doc",
    "tensorflow.io.serialize_many_sparse": "doc",
    "tensorflow.keras.backend.reset_uids": "doc",
    "tensorflow.keras.backend.set_floatx": "doc",
    "tensorflow.keras.layers.deserialize": "doc",
    "tensorflow.keras.metrics.MeanTensor": "doc",
    "tensorflow.keras.optimizers.Adagrad": "doc",
    "tensorflow.keras.utils.model_to_dot": "doc",
    "tensorflow.math.special.fresnel_cos": "doc",
    "tensorflow.math.special.fresnel_sin": "doc",
    "tensorflow.metrics.CosineSimilarity": "doc",
    "tensorflow.metrics.MeanSquaredError": "doc",
    "tensorflow.nn.RNNCellDropoutWrapper": "doc",
    "tensorflow.nn.all_candidate_sampler": "doc",
    "tensorflow.nn.sufficient_statistics": "doc",
    "tensorflow.compat.v1.HistogramProto": "doc",
    "tensorflow.compat.v1.IdentityReader": "doc",
    "tensorflow.compat.v1.TFRecordReader": "doc",
    "tensorflow.compat.v1.TextLineReader": "doc",
    "tensorflow.compat.v1.app.flags.Flag": "doc",
    "tensorflow.compat.v1.assert_greater": "doc",
    "tensorflow.compat.v1.assert_rank_in": "doc",
    "tensorflow.compat.v1.batch_to_space": "doc",
    "tensorflow.compat.v1.bitwise.invert": "doc",
    "tensorflow.compat.v1.check_numerics": "doc",
    "tensorflow.compat.v1.cholesky_solve": "doc",
    "tensorflow.compat.v1.compat.as_text": "doc",
    "tensorflow.compat.v1.depth_to_space": "doc",
    "tensorflow.compat.v1.dtypes.complex": "doc",
    "tensorflow.compat.v1.dynamic_stitch": "doc",
    "tensorflow.compat.v1.errors.OpError": "doc",
    "tensorflow.compat.v1.estimator.Head": "doc",
    "tensorflow.compat.v1.feature_column": "doc",
    "tensorflow.compat.v1.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.get_collection": "doc",
    "tensorflow.compat.v1.io.write_graph": "doc",
    "tensorflow.compat.v1.keras.datasets": "doc",
    "tensorflow.compat.v1.keras.wrappers": "doc",
    "tensorflow.compat.v1.layers.Dropout": "doc",
    "tensorflow.compat.v1.layers.Flatten": "doc",
    "tensorflow.compat.v1.layers.dropout": "doc",
    "tensorflow.compat.v1.layers.flatten": "doc",
    "tensorflow.compat.v1.math.bessel_i0": "doc",
    "tensorflow.compat.v1.math.bessel_i1": "doc",
    "tensorflow.compat.v1.math.nextafter": "doc",
    "tensorflow.compat.v1.math.not_equal": "doc",
    "tensorflow.compat.v1.matrix_inverse": "doc",
    "tensorflow.compat.v1.metrics.recall": "doc",
    "tensorflow.compat.v1.nest.is_nested": "doc",
    "tensorflow.compat.v1.nn.avg_pool_v2": "doc",
    "tensorflow.compat.v1.nn.max_pool_v2": "doc",
    "tensorflow.compat.v1.numpy_function": "doc",
    "tensorflow.compat.v1.parallel_stack": "doc",
    "tensorflow.compat.v1.random.poisson": "doc",
    "tensorflow.compat.v1.random.shuffle": "doc",
    "tensorflow.compat.v1.random.uniform": "doc",
    "tensorflow.compat.v1.random_poisson": "doc",
    "tensorflow.compat.v1.random_shuffle": "doc",
    "tensorflow.compat.v1.random_uniform": "doc",
    "tensorflow.compat.v1.recompute_grad": "doc",
    "tensorflow.compat.v1.scatter_nd_add": "doc",
    "tensorflow.compat.v1.scatter_nd_sub": "doc",
    "tensorflow.compat.v1.scatter_update": "doc",
    "tensorflow.compat.v1.sets.set_union": "doc",
    "tensorflow.compat.v1.signal.irfft2d": "doc",
    "tensorflow.compat.v1.signal.irfft3d": "doc",
    "tensorflow.compat.v1.space_to_batch": "doc",
    "tensorflow.compat.v1.space_to_depth": "doc",
    "tensorflow.compat.v1.sparse.maximum": "doc",
    "tensorflow.compat.v1.sparse.minimum": "doc",
    "tensorflow.compat.v1.sparse.reorder": "doc",
    "tensorflow.compat.v1.sparse.reshape": "doc",
    "tensorflow.compat.v1.sparse.softmax": "doc",
    "tensorflow.compat.v1.sparse_maximum": "doc",
    "tensorflow.compat.v1.sparse_minimum": "doc",
    "tensorflow.compat.v1.sparse_reorder": "doc",
    "tensorflow.compat.v1.sparse_reshape": "doc",
    "tensorflow.compat.v1.sparse_softmax": "doc",
    "tensorflow.compat.v1.spectral.fft2d": "doc",
    "tensorflow.compat.v1.spectral.fft3d": "doc",
    "tensorflow.compat.v1.spectral.irfft": "doc",
    "tensorflow.compat.v1.summary.scalar": "doc",
    "tensorflow.compat.v1.test.Benchmark": "doc",
    "tensorflow.compat.v1.variable_scope": "doc",
    "tensorflow.compat.v1.vectorized_map": "doc",
    "tensorflow.compat.forward_compatible": "doc",
    "tensorflow.distribute.CrossDeviceOps": "doc",
    "tensorflow.distribute.ReplicaContext": "doc",
    "tensorflow.image.adjust_jpeg_quality": "doc",
    "tensorflow.image.non_max_suppression": "doc",
    "tensorflow.image.random_flip_up_down": "doc",
    "tensorflow.io.parse_sequence_example": "doc",
    "tensorflow.keras.backend.set_epsilon": "doc",
    "tensorflow.keras.layers.AlphaDropout": "doc",
    "tensorflow.keras.layers.RepeatVector": "doc",
    "tensorflow.keras.metrics.deserialize": "doc",
    "tensorflow.metrics.MeanAbsoluteError": "doc",
    "tensorflow.metrics.MeanRelativeError": "doc",
    "tensorflow.metrics.PrecisionAtRecall": "doc",
    "tensorflow.metrics.RecallAtPrecision": "doc",
    "tensorflow.nn.RNNCellResidualWrapper": "doc",
    "tensorflow.compat.v1.CriticalSection": "doc",
    "tensorflow.compat.v1.FixedLenFeature": "doc",
    "tensorflow.compat.v1.SummaryMetadata": "doc",
    "tensorflow.compat.v1.TensorArraySpec": "doc",
    "tensorflow.compat.v1.WholeFileReader": "doc",
    "tensorflow.compat.v1.app.flags.Error": "doc",
    "tensorflow.compat.v1.app.flags.FLAGS": "doc",
    "tensorflow.compat.v1.assert_negative": "doc",
    "tensorflow.compat.v1.assert_positive": "doc",
    "tensorflow.compat.v1.compat.as_bytes": "doc",
    "tensorflow.compat.v1.dimension_value": "doc",
    "tensorflow.compat.v1.dtypes.as_dtype": "doc",
    "tensorflow.compat.v1.flags.text_wrap": "doc",
    "tensorflow.compat.v1.flags.validator": "doc",
    "tensorflow.compat.v1.guarantee_const": "doc",
    "tensorflow.compat.v1.image.transpose": "doc",
    "tensorflow.compat.v1.io.decode_proto": "doc",
    "tensorflow.compat.v1.io.encode_proto": "doc",
    "tensorflow.compat.v1.io.parse_tensor": "doc",
    "tensorflow.compat.v1.keras.callbacks": "doc",
    "tensorflow.compat.v1.keras.estimator": "doc",
    "tensorflow.compat.v1.manip.gather_nd": "doc",
    "tensorflow.compat.v1.math.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.less_equal": "doc",
    "tensorflow.compat.v1.math.reciprocal": "doc",
    "tensorflow.compat.v1.math.reduce_all": "doc",
    "tensorflow.compat.v1.math.reduce_any": "doc",
    "tensorflow.compat.v1.math.reduce_max": "doc",
    "tensorflow.compat.v1.math.reduce_min": "doc",
    "tensorflow.compat.v1.math.reduce_std": "doc",
    "tensorflow.compat.v1.math.reduce_sum": "doc",
    "tensorflow.compat.v1.math.scalar_mul": "doc",
    "tensorflow.compat.v1.matrix_set_diag": "doc",
    "tensorflow.compat.v1.matrix_solve_ls": "doc",
    "tensorflow.compat.v1.mixed_precision": "doc",
    "tensorflow.compat.v1.model_variables": "doc",
    "tensorflow.compat.v1.profiler.advise": "doc",
    "tensorflow.compat.v1.queue.FIFOQueue": "doc",
    "tensorflow.compat.v1.queue.QueueBase": "doc",
    "tensorflow.compat.v1.random.get_seed": "doc",
    "tensorflow.compat.v1.resource_loader": "doc",
    "tensorflow.compat.v1.set_random_seed": "doc",
    "tensorflow.compat.v1.sets.difference": "doc",
    "tensorflow.compat.v1.signal.fftshift": "doc",
    "tensorflow.compat.v1.sparse.bincount": "doc",
    "tensorflow.compat.v1.sparse_to_dense": "doc",
    "tensorflow.compat.v1.spectral.ifft2d": "doc",
    "tensorflow.compat.v1.spectral.ifft3d": "doc",
    "tensorflow.compat.v1.spectral.rfft2d": "doc",
    "tensorflow.compat.v1.spectral.rfft3d": "doc",
    "tensorflow.compat.v1.summary.Summary": "doc",
    "tensorflow.image.stateless_random_hue": "doc",
    "tensorflow.io.FixedLenSequenceFeature": "doc",
    "tensorflow.io.deserialize_many_sparse": "doc",
    "tensorflow.keras.layers.DenseFeatures": "doc",
    "tensorflow.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.math.unsorted_segment_mean": "doc",
    "tensorflow.math.unsorted_segment_prod": "doc",
    "tensorflow.metrics.BinaryCrossentropy": "doc",
    "tensorflow.metrics.mean_squared_error": "doc",
    "tensorflow.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.nn.compute_accidental_hits": "doc",
    "tensorflow.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.nn.embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.OptimizerOptions": "doc",
    "tensorflow.compat.v1.SparseTensorSpec": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE": "doc",
    "tensorflow.compat.v1.audio.decode_wav": "doc",
    "tensorflow.compat.v1.audio.encode_wav": "doc",
    "tensorflow.compat.v1.data.DatasetSpec": "doc",
    "tensorflow.compat.v1.estimator.export": "doc",
    "tensorflow.compat.v1.estimator.inputs": "doc",
    "tensorflow.compat.v1.flags.EnumParser": "doc",
    "tensorflow.compat.v1.flags.ListParser": "doc",
    "tensorflow.compat.v1.get_static_value": "doc",
    "tensorflow.compat.v1.image.adjust_hue": "doc",
    "tensorflow.compat.v1.image.decode_bmp": "doc",
    "tensorflow.compat.v1.image.hsv_to_rgb": "doc",
    "tensorflow.compat.v1.image.random_hue": "doc",
    "tensorflow.compat.v1.image.rgb_to_hsv": "doc",
    "tensorflow.compat.v1.image.rgb_to_yiq": "doc",
    "tensorflow.compat.v1.image.rgb_to_yuv": "doc",
    "tensorflow.compat.v1.image.yiq_to_rgb": "doc",
    "tensorflow.compat.v1.image.yuv_to_rgb": "doc",
    "tensorflow.compat.v1.import_graph_def": "doc",
    "tensorflow.compat.v1.io.PriorityQueue": "doc",
    "tensorflow.compat.v1.io.SparseFeature": "doc",
    "tensorflow.compat.v1.io.VarLenFeature": "doc",
    "tensorflow.compat.v1.io.decode_base64": "doc",
    "tensorflow.compat.v1.io.encode_base64": "doc",
    "tensorflow.compat.v1.io.parse_example": "doc",
    "tensorflow.compat.v1.keras.Sequential": "doc",
    "tensorflow.compat.v1.keras.layers.Add": "doc",
    "tensorflow.compat.v1.keras.layers.Dot": "doc",
    "tensorflow.compat.v1.keras.layers.ELU": "doc",
    "tensorflow.compat.v1.keras.layers.GRU": "doc",
    "tensorflow.compat.v1.keras.layers.RNN": "doc",
    "tensorflow.compat.v1.keras.layers.add": "doc",
    "tensorflow.compat.v1.keras.layers.dot": "doc",
    "tensorflow.compat.v1.keras.optimizers": "doc",
    "tensorflow.compat.v1.layers.InputSpec": "doc",
    "tensorflow.compat.v1.manip.scatter_nd": "doc",
    "tensorflow.compat.v1.math.reduce_mean": "doc",
    "tensorflow.compat.v1.math.reduce_prod": "doc",
    "tensorflow.compat.v1.matrix_band_part": "doc",
    "tensorflow.compat.v1.matrix_diag_part": "doc",
    "tensorflow.compat.v1.matrix_transpose": "doc",
    "tensorflow.compat.v1.metrics.accuracy": "doc",
    "tensorflow.compat.v1.metrics.mean_iou": "doc",
    "tensorflow.compat.v1.ones_initializer": "doc",
    "tensorflow.compat.v1.profiler.profile": "doc",
    "tensorflow.compat.v1.quantized_concat": "doc",
    "tensorflow.compat.v1.random.Generator": "doc",
    "tensorflow.compat.v1.reverse_sequence": "doc",
    "tensorflow.compat.v1.saved_model.save": "doc",
    "tensorflow.compat.v1.serialize_sparse": "doc",
    "tensorflow.compat.v1.serialize_tensor": "doc",
    "tensorflow.compat.v1.signal.ifftshift": "doc",
    "tensorflow.compat.v1.sparse.transpose": "doc",
    "tensorflow.compat.v1.sparse_transpose": "doc",
    "tensorflow.compat.v1.spectral.irfft2d": "doc",
    "tensorflow.compat.v1.spectral.irfft3d": "doc",
    "tensorflow.compat.v1.string_to_number": "doc",
    "tensorflow.compat.v1.truncated_normal": "doc",
    "tensorflow.compat.v1.user_ops.my_fact": "doc",
    "tensorflow.image.stateless_random_crop": "doc",
    "tensorflow.initializers.random_uniform": "doc",
    "tensorflow.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.metrics.CategoricalAccuracy": "doc",
    "tensorflow.metrics.binary_crossentropy": "doc",
    "tensorflow.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.IndexedSlicesSpec": "doc",
    "tensorflow.compat.v1.NodeDef.AttrEntry": "doc",
    "tensorflow.compat.v1.SparseTensorValue": "doc",
    "tensorflow.compat.v1.add_to_collection": "doc",
    "tensorflow.compat.v1.assert_less_equal": "doc",
    "tensorflow.compat.v1.assert_none_equal": "doc",
    "tensorflow.compat.v1.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.compat.as_str_any": "doc",
    "tensorflow.compat.v1.convert_to_tensor": "doc",
    "tensorflow.compat.v1.decode_compressed": "doc",
    "tensorflow.compat.v1.distribute.Server": "doc",
    "tensorflow.compat.v1.dynamic_partition": "doc",
    "tensorflow.compat.v1.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.get_default_graph": "doc",
    "tensorflow.compat.v1.grad_pass_through": "doc",
    "tensorflow.compat.v1.image.random_crop": "doc",
    "tensorflow.compat.v1.image.resize_area": "doc",
    "tensorflow.compat.v1.initializers.ones": "doc",
    "tensorflow.compat.v1.io.TFRecordWriter": "doc",
    "tensorflow.compat.v1.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.keras.backend.rnn": "doc",
    "tensorflow.compat.v1.keras.layers.LSTM": "doc",
    "tensorflow.compat.v1.keras.layers.ReLU": "doc",
    "tensorflow.compat.v1.keras.metrics.AUC": "doc",
    "tensorflow.compat.v1.keras.metrics.KLD": "doc",
    "tensorflow.compat.v1.keras.metrics.MAE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSE": "doc",
    "tensorflow.compat.v1.keras.metrics.Sum": "doc",
    "tensorflow.compat.v1.keras.metrics.get": "doc",
    "tensorflow.compat.v1.keras.metrics.kld": "doc",
    "tensorflow.compat.v1.keras.metrics.mae": "doc",
    "tensorflow.compat.v1.keras.metrics.mse": "doc",
    "tensorflow.compat.v1.make_tensor_proto": "doc",
    "tensorflow.compat.v1.math.accumulate_n": "doc",
    "tensorflow.compat.v1.math.sobol_sample": "doc",
    "tensorflow.compat.v1.metrics.precision": "doc",
    "tensorflow.compat.v1.nn.conv_transpose": "doc",
    "tensorflow.compat.v1.nn.depth_to_space": "doc",
    "tensorflow.compat.v1.nn.space_to_batch": "doc",
    "tensorflow.compat.v1.nn.space_to_depth": "doc",
    "tensorflow.compat.v1.profiler.Profiler": "doc",
    "tensorflow.compat.v1.saved_model.Asset": "doc",
    "tensorflow.compat.v1.saved_model.utils": "doc",
    "tensorflow.compat.v1.scatter_nd_update": "doc",
    "tensorflow.compat.v1.sets.intersection": "doc",
    "tensorflow.compat.v1.space_to_batch_nd": "doc",
    "tensorflow.compat.v1.sparse.reduce_max": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum": "doc",
    "tensorflow.compat.v1.sparse_reduce_max": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum": "doc",
    "tensorflow.compat.v1.summary.histogram": "doc",
    "tensorflow.compat.v1.summary.merge_all": "doc",
    "tensorflow.compat.v1.test.get_temp_dir": "doc",
    "tensorflow.compat.v1.variable_op_scope": "doc",
    "tensorflow.image.random_flip_left_right": "doc",
    "tensorflow.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.keras.layers.GaussianDropout": "doc",
    "tensorflow.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.keras.layers.SeparableConv1D": "doc",
    "tensorflow.keras.layers.SeparableConv2D": "doc",
    "tensorflow.keras.layers.StackedRNNCells": "doc",
    "tensorflow.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.keras.layers.TimeDistributed": "doc",
    "tensorflow.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.keras.models.model_from_json": "doc",
    "tensorflow.keras.models.model_from_yaml": "doc",
    "tensorflow.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.metrics.RootMeanSquaredError": "doc",
    "tensorflow.metrics.categorical_accuracy": "doc",
    "tensorflow.random.stateless_categorical": "doc",
    "tensorflow.compat.v1.InteractiveSession": "doc",
    "tensorflow.compat.v1.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.app.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_or": "doc",
    "tensorflow.compat.v1.compat.path_to_str": "doc",
    "tensorflow.compat.v1.enable_v2_behavior": "doc",
    "tensorflow.compat.v1.estimator.EvalSpec": "doc",
    "tensorflow.compat.v1.estimator.Exporter": "doc",
    "tensorflow.compat.v1.estimator.ModeKeys": "doc",
    "tensorflow.compat.v1.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.flags.tf_decorator": "doc",
    "tensorflow.compat.v1.get_session_handle": "doc",
    "tensorflow.compat.v1.get_session_tensor": "doc",
    "tensorflow.compat.v1.get_variable_scope": "doc",
    "tensorflow.compat.v1.image.ResizeMethod": "doc",
    "tensorflow.compat.v1.image.adjust_gamma": "doc",
    "tensorflow.compat.v1.image.central_crop": "doc",
    "tensorflow.compat.v1.image.flip_up_down": "doc",
    "tensorflow.compat.v1.initializers.zeros": "doc",
    "tensorflow.compat.v1.invert_permutation": "doc",
    "tensorflow.compat.v1.io.FixedLenFeature": "doc",
    "tensorflow.compat.v1.keras.initializers": "doc",
    "tensorflow.compat.v1.keras.layers.Dense": "doc",
    "tensorflow.compat.v1.keras.layers.Input": "doc",
    "tensorflow.compat.v1.keras.layers.Layer": "doc",
    "tensorflow.compat.v1.keras.layers.PReLU": "doc",
    "tensorflow.compat.v1.keras.metrics.MAPE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSLE": "doc",
    "tensorflow.compat.v1.keras.metrics.Mean": "doc",
    "tensorflow.compat.v1.keras.metrics.mape": "doc",
    "tensorflow.compat.v1.keras.metrics.msle": "doc",
    "tensorflow.compat.v1.keras.models.Model": "doc",
    "tensorflow.compat.v1.math.divide_no_nan": "doc",
    "tensorflow.compat.v1.math.greater_equal": "doc",
    "tensorflow.compat.v1.math.special.dawsn": "doc",
    "tensorflow.compat.v1.matrix_determinant": "doc",
    "tensorflow.compat.v1.matrix_square_root": "doc",
    "tensorflow.compat.v1.nest.map_structure": "doc",
    "tensorflow.compat.v1.sparse.expand_dims": "doc",
    "tensorflow.compat.v1.sparse.placeholder": "doc",
    "tensorflow.compat.v1.sparse.reset_shape": "doc",
    "tensorflow.compat.v1.sparse_placeholder": "doc",
    "tensorflow.compat.v1.sparse_reset_shape": "doc",
    "tensorflow.compat.v1.sparse_segment_sum": "doc",
    "tensorflow.compat.v1.squared_difference": "doc",
    "tensorflow.compat.v1.summary.initialize": "doc",
    "tensorflow.compat.v1.tensor_scatter_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_sub": "doc",
    "tensorflow.compat.v1.tpu.batch_parallel": "doc",
    "tensorflow.compat.v1.tpu.bfloat16_scope": "doc",
    "tensorflow.compat.v1.unique_with_counts": "doc",
    "tensorflow.image.resize_with_crop_or_pad": "doc",
    "tensorflow.keras.backend.is_keras_tensor": "doc",
    "tensorflow.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.keras.metrics.binary_accuracy": "doc",
    "tensorflow.keras.utils.CustomObjectScope": "doc",
    "tensorflow.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.raw_ops.BandedTriangularSolve": "doc",
    "tensorflow.raw_ops.ComputeAccidentalHits": "doc",
    "tensorflow.raw_ops.DebugGradientIdentity": "doc",
    "tensorflow.raw_ops.FractionalAvgPoolGrad": "doc",
    "tensorflow.raw_ops.MatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.MaxPoolGradWithArgmax": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandle": "doc",
    "tensorflow.raw_ops.TensorListConcatLists": "doc",
    "tensorflow.signal.inverse_stft_window_fn": "doc",
    "tensorflow.compat.v1.AttrValue.ListValue": "doc",
    "tensorflow.compat.v1.app.flags.text_wrap": "doc",
    "tensorflow.compat.v1.app.flags.validator": "doc",
    "tensorflow.compat.v1.assert_non_positive": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_xor": "doc",
    "tensorflow.compat.v1.decode_json_example": "doc",
    "tensorflow.compat.v1.disable_v2_behavior": "doc",
    "tensorflow.compat.v1.distribute.ReduceOp": "doc",
    "tensorflow.compat.v1.distribute.Strategy": "doc",
    "tensorflow.compat.v1.errors.AbortedError": "doc",
    "tensorflow.compat.v1.errors.UnknownError": "doc",
    "tensorflow.compat.v1.estimator.Estimator": "doc",
    "tensorflow.compat.v1.estimator.MultiHead": "doc",
    "tensorflow.compat.v1.estimator.TrainSpec": "doc",
    "tensorflow.compat.v1.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.get_default_session": "doc",
    "tensorflow.compat.v1.io.serialize_sparse": "doc",
    "tensorflow.compat.v1.io.serialize_tensor": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3D": "doc",
    "tensorflow.compat.v1.keras.layers.Lambda": "doc",
    "tensorflow.compat.v1.keras.utils.Progbar": "doc",
    "tensorflow.compat.v1.math.special.spence": "doc",
    "tensorflow.compat.v1.metrics.mean_tensor": "doc",
    "tensorflow.compat.v1.metrics.recall_at_k": "doc",
    "tensorflow.compat.v1.nn.conv1d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv3d_transpose": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d": "doc",
    "tensorflow.compat.v1.nn.fused_batch_norm": "doc",
    "tensorflow.compat.v1.nn.quantized_conv2d": "doc",
    "tensorflow.compat.v1.nn.quantized_relu_x": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.GRUCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.RNNCell": "doc",
    "tensorflow.compat.v1.nn.separable_conv2d": "doc",
    "tensorflow.compat.v1.nn.weighted_moments": "doc",
    "tensorflow.compat.v1.queue.PriorityQueue": "doc",
    "tensorflow.compat.v1.reset_default_graph": "doc",
    "tensorflow.compat.v1.saved_model.Builder": "doc",
    "tensorflow.compat.v1.saved_model.builder": "doc",
    "tensorflow.compat.v1.saved_model.main_op": "doc",
    "tensorflow.compat.v1.sets.set_difference": "doc",
    "tensorflow.compat.v1.signal.inverse_mdct": "doc",
    "tensorflow.compat.v1.signal.inverse_stft": "doc",
    "tensorflow.compat.v1.sparse.SparseTensor": "doc",
    "tensorflow.compat.v1.sparse.cross_hashed": "doc",
    "tensorflow.compat.v1.sparse_segment_mean": "doc",
    "tensorflow.compat.v1.sparse_to_indicator": "doc",
    "tensorflow.compat.v1.tpu.shutdown_system": "doc",
    "tensorflow.compat.v1.trainable_variables": "doc",
    "tensorflow.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.keras.layers.AdditiveAttention": "doc",
    "tensorflow.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.keras.utils.get_custom_objects": "doc",
    "tensorflow.compat.v1.TensorInfo.CooSparse": "doc",
    "tensorflow.compat.v1.app.flags.EnumParser": "doc",
    "tensorflow.compat.v1.app.flags.ListParser": "doc",
    "tensorflow.compat.v1.assert_greater_equal": "doc",
    "tensorflow.compat.v1.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.batch_scatter_update": "doc",
    "tensorflow.compat.v1.control_dependencies": "doc",
    "tensorflow.compat.v1.data.TFRecordDataset": "doc",
    "tensorflow.compat.v1.data.TextLineDataset": "doc",
    "tensorflow.compat.v1.dtypes.saturate_cast": "doc",
    "tensorflow.compat.v1.errors.DataLossError": "doc",
    "tensorflow.compat.v1.errors.InternalError": "doc",
    "tensorflow.compat.v1.estimator.FeedFnHook": "doc",
    "tensorflow.compat.v1.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.flags.get_help_width": "doc",
    "tensorflow.compat.v1.image.resize_bicubic": "doc",
    "tensorflow.compat.v1.initialize_variables": "doc",
    "tensorflow.compat.v1.io.decode_compressed": "doc",
    "tensorflow.compat.v1.keras.backend.floatx": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist": "doc",
    "tensorflow.compat.v1.keras.layers.Average": "doc",
    "tensorflow.compat.v1.keras.layers.Dropout": "doc",
    "tensorflow.compat.v1.keras.layers.Flatten": "doc",
    "tensorflow.compat.v1.keras.layers.GRUCell": "doc",
    "tensorflow.compat.v1.keras.layers.Maximum": "doc",
    "tensorflow.compat.v1.keras.layers.Minimum": "doc",
    "tensorflow.compat.v1.keras.layers.Permute": "doc",
    "tensorflow.compat.v1.keras.layers.Reshape": "doc",
    "tensorflow.compat.v1.keras.layers.Softmax": "doc",
    "tensorflow.compat.v1.keras.layers.Wrapper": "doc",
    "tensorflow.compat.v1.keras.layers.average": "doc",
    "tensorflow.compat.v1.keras.layers.maximum": "doc",
    "tensorflow.compat.v1.keras.layers.minimum": "doc",
    "tensorflow.compat.v1.keras.metrics.Metric": "doc",
    "tensorflow.compat.v1.keras.metrics.Recall": "doc",
    "tensorflow.compat.v1.keras.optimizers.SGD": "doc",
    "tensorflow.compat.v1.keras.optimizers.get": "doc",
    "tensorflow.compat.v1.keras.utils.Sequence": "doc",
    "tensorflow.compat.v1.keras.utils.get_file": "doc",
    "tensorflow.compat.v1.math.multiply_no_nan": "doc",
    "tensorflow.compat.v1.math.reduce_variance": "doc",
    "tensorflow.compat.v1.nn.collapse_repeated": "doc",
    "tensorflow.compat.v1.nn.ctc_unique_labels": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMCell": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto": "doc",
    "tensorflow.compat.v1.test.gpu_device_name": "doc",
    "tensorflow.compat.v1.type_spec_from_value": "doc",
    "tensorflow.image.per_image_standardization": "doc",
    "tensorflow.image.stateless_random_contrast": "doc",
    "tensorflow.keras.backend.image_data_format": "doc",
    "tensorflow.keras.layers.BatchNormalization": "doc",
    "tensorflow.keras.layers.LayerNormalization": "doc",
    "tensorflow.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.keras.utils.custom_object_scope": "doc",
    "tensorflow.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.nn.local_response_normalization": "doc",
    "tensorflow.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.app.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.data.get_output_types": "doc",
    "tensorflow.compat.v1.delete_session_tensor": "doc",
    "tensorflow.compat.v1.enable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.errors.CancelledError": "doc",
    "tensorflow.compat.v1.estimator.add_metrics": "doc",
    "tensorflow.compat.v1.extract_image_patches": "doc",
    "tensorflow.compat.v1.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.histogram_fixed_width": "doc",
    "tensorflow.compat.v1.image.adjust_contrast": "doc",
    "tensorflow.compat.v1.image.crop_and_resize": "doc",
    "tensorflow.compat.v1.image.extract_glimpse": "doc",
    "tensorflow.compat.v1.image.extract_patches": "doc",
    "tensorflow.compat.v1.image.flip_left_right": "doc",
    "tensorflow.compat.v1.image.random_contrast": "doc",
    "tensorflow.compat.v1.image.resize_bilinear": "doc",
    "tensorflow.compat.v1.image.ssim_multiscale": "doc",
    "tensorflow.compat.v1.image.total_variation": "doc",
    "tensorflow.compat.v1.initialize_all_tables": "doc",
    "tensorflow.compat.v1.initializers.identity": "doc",
    "tensorflow.compat.v1.io.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.io.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.io.tf_record_iterator": "doc",
    "tensorflow.compat.v1.keras.backend.epsilon": "doc",
    "tensorflow.compat.v1.keras.backend.get_uid": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNGRU": "doc",
    "tensorflow.compat.v1.keras.layers.LSTMCell": "doc",
    "tensorflow.compat.v1.keras.layers.Multiply": "doc",
    "tensorflow.compat.v1.keras.layers.Subtract": "doc",
    "tensorflow.compat.v1.keras.layers.multiply": "doc",
    "tensorflow.compat.v1.keras.layers.subtract": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanIoU": "doc",
    "tensorflow.compat.v1.keras.metrics.Poisson": "doc",
    "tensorflow.compat.v1.keras.metrics.poisson": "doc",
    "tensorflow.compat.v1.keras.mixed_precision": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adam": "doc",
    "tensorflow.compat.v1.keras.optimizers.Ftrl": "doc",
    "tensorflow.compat.v1.nest.pack_sequence_as": "doc",
    "tensorflow.compat.v1.nn.ctc_greedy_decoder": "doc",
    "tensorflow.compat.v1.nn.quantized_avg_pool": "doc",
    "tensorflow.compat.v1.nn.quantized_max_pool": "doc",
    "tensorflow.compat.v1.quantization.quantize": "doc",
    "tensorflow.compat.v1.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.sets.set_intersection": "doc",
    "tensorflow.compat.v1.sparse.segment_sqrt_n": "doc",
    "tensorflow.compat.v1.sparse_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket": "doc",
    "tensorflow.compat.v1.summary.Summary.Audio": "doc",
    "tensorflow.compat.v1.summary.Summary.Image": "doc",
    "tensorflow.compat.v1.summary.Summary.Value": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_max": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_min": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_sub": "doc",
    "tensorflow.compat.v1.tensor_scatter_update": "doc",
    "tensorflow.compat.v1.test.benchmark_config": "doc",
    "tensorflow.compat.v1.test.is_gpu_available": "doc",
    "tensorflow.compat.v1.tpu.cross_replica_sum": "doc",
    "tensorflow.compat.v1.tpu.initialize_system": "doc",
    "tensorflow.compat.v1.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.unsorted_segment_prod": "doc",
    "tensorflow.compat.v1.variables_initializer": "doc",
    "tensorflow.image.non_max_suppression_padded": "doc",
    "tensorflow.io.parse_single_sequence_example": "doc",
    "tensorflow.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.keras.metrics.mean_squared_error": "doc",
    "tensorflow.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.ConditionalAccumulator": "doc",
    "tensorflow.compat.v1.NameAttrList.AttrEntry": "doc",
    "tensorflow.compat.v1.add_check_numerics_ops": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator": "doc",
    "tensorflow.compat.v1.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.broadcast_static_shape": "doc",
    "tensorflow.compat.v1.compat.dimension_value": "doc",
    "tensorflow.compat.v1.data.get_output_shapes": "doc",
    "tensorflow.compat.v1.disable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.enable_control_flow_v2": "doc",
    "tensorflow.compat.v1.enable_eager_execution": "doc",
    "tensorflow.compat.v1.enable_tensor_equality": "doc",
    "tensorflow.compat.v1.errors.OutOfRangeError": "doc",
    "tensorflow.compat.v1.estimator.BestExporter": "doc",
    "tensorflow.compat.v1.estimator.DNNEstimator": "doc",
    "tensorflow.compat.v1.estimator.DNNRegressor": "doc",
    "tensorflow.compat.v1.estimator.FinalOpsHook": "doc",
    "tensorflow.compat.v1.estimator.ProfilerHook": "doc",
    "tensorflow.compat.v1.extract_volume_patches": "doc",
    "tensorflow.compat.v1.fixed_size_partitioner": "doc",
    "tensorflow.compat.v1.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.image.grayscale_to_rgb": "doc",
    "tensorflow.compat.v1.image.rgb_to_grayscale": "doc",
    "tensorflow.compat.v1.initializers.he_normal": "doc",
    "tensorflow.compat.v1.initializers.variables": "doc",
    "tensorflow.compat.v1.io.decode_json_example": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters": "doc",
    "tensorflow.compat.v1.keras.initializers.get": "doc",
    "tensorflow.compat.v1.keras.layers.Attention": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNLSTM": "doc",
    "tensorflow.compat.v1.keras.layers.InputSpec": "doc",
    "tensorflow.compat.v1.keras.layers.LeakyReLU": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNN": "doc",
    "tensorflow.compat.v1.keras.layers.serialize": "doc",
    "tensorflow.compat.v1.keras.metrics.Accuracy": "doc",
    "tensorflow.compat.v1.keras.optimizers.Nadam": "doc",
    "tensorflow.compat.v1.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.math.reciprocal_no_nan": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1": "doc",
    "tensorflow.compat.v1.math.special.bessel_j0": "doc",
    "tensorflow.compat.v1.math.special.bessel_j1": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1": "doc",
    "tensorflow.compat.v1.math.special.bessel_y0": "doc",
    "tensorflow.compat.v1.math.special.bessel_y1": "doc",
    "tensorflow.compat.v1.metrics.precision_at_k": "doc",
    "tensorflow.compat.v1.metrics.true_negatives": "doc",
    "tensorflow.compat.v1.metrics.true_positives": "doc",
    "tensorflow.compat.v1.nn.batch_normalization": "doc",
    "tensorflow.compat.v1.nn.fractional_max_pool": "doc",
    "tensorflow.compat.v1.nn.with_space_to_batch": "doc",
    "tensorflow.compat.v1.random.set_random_seed": "doc",
    "tensorflow.compat.v1.random.stateless_gamma": "doc",
    "tensorflow.compat.v1.signal.overlap_and_add": "doc",
    "tensorflow.compat.v1.sparse.fill_empty_rows": "doc",
    "tensorflow.compat.v1.sparse_fill_empty_rows": "doc",
    "tensorflow.compat.v1.sparse_tensor_to_dense": "doc",
    "tensorflow.compat.v1.summary.tensor_summary": "doc",
    "tensorflow.compat.v1.test.is_built_with_xla": "doc",
    "tensorflow.compat.v1.test.test_src_dir_path": "doc",
    "tensorflow.compat.v1.variable_creator_scope": "doc",
    "tensorflow.image.stateless_random_saturation": "doc",
    "tensorflow.keras.initializers.random_uniform": "doc",
    "tensorflow.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.keras.utils.get_registered_object": "doc",
    "tensorflow.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.FixedLengthRecordReader": "doc",
    "tensorflow.compat.v1.VariableSynchronization": "doc",
    "tensorflow.compat.v1.app.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.broadcast_dynamic_shape": "doc",
    "tensorflow.compat.v1.control_flow_v2_enabled": "doc",
    "tensorflow.compat.v1.data.get_output_classes": "doc",
    "tensorflow.compat.v1.deserialize_many_sparse": "doc",
    "tensorflow.compat.v1.disable_control_flow_v2": "doc",
    "tensorflow.compat.v1.disable_eager_execution": "doc",
    "tensorflow.compat.v1.disable_tensor_equality": "doc",
    "tensorflow.compat.v1.distribute.InputContext": "doc",
    "tensorflow.compat.v1.distribute.get_strategy": "doc",
    "tensorflow.compat.v1.distribute.has_strategy": "doc",
    "tensorflow.compat.v1.errors.UnavailableError": "doc",
    "tensorflow.compat.v1.estimator.EstimatorSpec": "doc",
    "tensorflow.compat.v1.estimator.FinalExporter": "doc",
    "tensorflow.compat.v1.estimator.NanTensorHook": "doc",
    "tensorflow.compat.v1.flags.CsvListSerializer": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.image.adjust_brightness": "doc",
    "tensorflow.compat.v1.image.adjust_saturation": "doc",
    "tensorflow.compat.v1.image.random_saturation": "doc",
    "tensorflow.compat.v1.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.io.match_filenames_once": "doc",
    "tensorflow.compat.v1.is_variable_initialized": "doc",
    "tensorflow.compat.v1.keras.callbacks.History": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100": "doc",
    "tensorflow.compat.v1.keras.initializers.Ones": "doc",
    "tensorflow.compat.v1.keras.initializers.ones": "doc",
    "tensorflow.compat.v1.keras.layers.Activation": "doc",
    "tensorflow.compat.v1.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.compat.v1.keras.layers.InputLayer": "doc",
    "tensorflow.compat.v1.keras.metrics.Precision": "doc",
    "tensorflow.compat.v1.keras.metrics.serialize": "doc",
    "tensorflow.compat.v1.keras.models.Sequential": "doc",
    "tensorflow.compat.v1.keras.models.save_model": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adamax": "doc",
    "tensorflow.compat.v1.layers.conv2d_transpose": "doc",
    "tensorflow.compat.v1.layers.conv3d_transpose": "doc",
    "tensorflow.compat.v1.layers.separable_conv1d": "doc",
    "tensorflow.compat.v1.layers.separable_conv2d": "doc",
    "tensorflow.compat.v1.manip.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.manip.space_to_batch_nd": "doc",
    "tensorflow.compat.v1.math.invert_permutation": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1e": "doc",
    "tensorflow.compat.v1.math.squared_difference": "doc",
    "tensorflow.compat.v1.matrix_triangular_solve": "doc",
    "tensorflow.compat.v1.metrics.recall_at_top_k": "doc",
    "tensorflow.compat.v1.nn.compute_average_loss": "doc",
    "tensorflow.compat.v1.nn.sampled_softmax_loss": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto": "doc",
    "tensorflow.compat.v1.quantization.dequantize": "doc",
    "tensorflow.compat.v1.random.create_rng_state": "doc",
    "tensorflow.compat.v1.random.stateless_normal": "doc",
    "tensorflow.compat.v1.random.truncated_normal": "doc",
    "tensorflow.compat.v1.saved_model.simple_save": "doc",
    "tensorflow.compat.v1.summary.FileWriterCache": "doc",
    "tensorflow.compat.v1.test.is_built_with_cuda": "doc",
    "tensorflow.compat.v1.test.is_built_with_rocm": "doc",
    "tensorflow.compat.v1.tpu.CrossShardOptimizer": "doc",
    "tensorflow.compat.v1.tpu.outside_compilation": "doc",
    "tensorflow.compat.v1.unsorted_segment_sqrt_n": "doc",
    "tensorflow.image.combined_non_max_suppression": "doc",
    "tensorflow.image.non_max_suppression_overlaps": "doc",
    "tensorflow.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.keras.utils.pack_x_y_sample_weight": "doc",
    "tensorflow.keras.utils.serialize_keras_object": "doc",
    "tensorflow.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.app.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.app.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.app.flags.get_help_width": "doc",
    "tensorflow.compat.v1.distribute.NcclAllReduce": "doc",
    "tensorflow.compat.v1.estimator.LatestExporter": "doc",
    "tensorflow.compat.v1.estimator.MultiClassHead": "doc",
    "tensorflow.compat.v1.estimator.MultiLabelHead": "doc",
    "tensorflow.compat.v1.estimator.SessionRunHook": "doc",
    "tensorflow.compat.v1.estimator.StopAtStepHook": "doc",
    "tensorflow.compat.v1.flags.ArgumentSerializer": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.flags.register_validator": "doc",
    "tensorflow.compat.v1.image.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.initialize_all_variables": "doc",
    "tensorflow.compat.v1.io.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.keras.backend.name_scope": "doc",
    "tensorflow.compat.v1.keras.backend.reset_uids": "doc",
    "tensorflow.compat.v1.keras.backend.set_floatx": "doc",
    "tensorflow.compat.v1.keras.callbacks.Callback": "doc",
    "tensorflow.compat.v1.keras.initializers.Zeros": "doc",
    "tensorflow.compat.v1.keras.initializers.zeros": "doc",
    "tensorflow.compat.v1.keras.layers.deserialize": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanTensor": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adagrad": "doc",
    "tensorflow.compat.v1.keras.optimizers.RMSprop": "doc",
    "tensorflow.compat.v1.keras.utils.model_to_dot": "doc",
    "tensorflow.compat.v1.load_file_system_library": "doc",
    "tensorflow.compat.v1.math.special.fresnel_cos": "doc",
    "tensorflow.compat.v1.math.special.fresnel_sin": "doc",
    "tensorflow.compat.v1.metrics.percentage_below": "doc",
    "tensorflow.compat.v1.nn.all_candidate_sampler": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicRNNCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.MultiRNNCell": "doc",
    "tensorflow.compat.v1.nn.sufficient_statistics": "doc",
    "tensorflow.compat.v1.placeholder_with_default": "doc",
    "tensorflow.compat.v1.python_io.TFRecordWriter": "doc",
    "tensorflow.compat.v1.queue.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.random.stateless_poisson": "doc",
    "tensorflow.compat.v1.random.stateless_uniform": "doc",
    "tensorflow.compat.v1.sparse.reduce_max_sparse": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum_sparse": "doc",
    "tensorflow.compat.v1.sparse_reduce_max_sparse": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum_sparse": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_update": "doc",
    "tensorflow.compat.v1.verify_tensor_all_finite": "doc",
    "tensorflow.image.stateless_random_flip_up_down": "doc",
    "tensorflow.image.stateless_random_jpeg_quality": "doc",
    "tensorflow.keras.backend.set_image_data_format": "doc",
    "tensorflow.keras.layers.ActivityRegularization": "doc",
    "tensorflow.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.compat.forward_compatible": "doc",
    "tensorflow.compat.v1.distribute.CrossDeviceOps": "doc",
    "tensorflow.compat.v1.distribute.ReplicaContext": "doc",
    "tensorflow.compat.v1.enable_resource_variables": "doc",
    "tensorflow.compat.v1.errors.AlreadyExistsError": "doc",
    "tensorflow.compat.v1.errors.UnimplementedError": "doc",
    "tensorflow.compat.v1.estimator.BinaryClassHead": "doc",
    "tensorflow.compat.v1.estimator.LinearEstimator": "doc",
    "tensorflow.compat.v1.estimator.LinearRegressor": "doc",
    "tensorflow.compat.v1.estimator.StepCounterHook": "doc",
    "tensorflow.compat.v1.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.image.adjust_jpeg_quality": "doc",
    "tensorflow.compat.v1.image.non_max_suppression": "doc",
    "tensorflow.compat.v1.image.random_flip_up_down": "doc",
    "tensorflow.compat.v1.io.parse_sequence_example": "doc",
    "tensorflow.compat.v1.keras.backend.get_session": "doc",
    "tensorflow.compat.v1.keras.backend.set_epsilon": "doc",
    "tensorflow.compat.v1.keras.backend.set_session": "doc",
    "tensorflow.compat.v1.keras.initializers.normal": "doc",
    "tensorflow.compat.v1.keras.layers.AlphaDropout": "doc",
    "tensorflow.compat.v1.keras.layers.RepeatVector": "doc",
    "tensorflow.compat.v1.keras.metrics.deserialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adadelta": "doc",
    "tensorflow.compat.v1.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.mixed_precision.LossScale": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicLSTMCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DeviceWrapper": "doc",
    "tensorflow.compat.v1.random_normal_initializer": "doc",
    "tensorflow.compat.v1.test.create_local_cluster": "doc",
    "tensorflow.compat.forward_compatibility_horizon": "doc",
    "tensorflow.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.keras.utils.unpack_x_y_sample_weight": "doc",
    "tensorflow.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.raw_ops.ApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.GenerateBoundingBoxProposals": "doc",
    "tensorflow.compat.v1.ConditionalAccumulatorBase": "doc",
    "tensorflow.compat.v1.RunMetadata.FunctionGraphs": "doc",
    "tensorflow.compat.v1.app.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.disable_resource_variables": "doc",
    "tensorflow.compat.v1.estimator.LinearClassifier": "doc",
    "tensorflow.compat.v1.estimator.SessionRunValues": "doc",
    "tensorflow.compat.v1.estimator.SummarySaverHook": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimator": "doc",
    "tensorflow.compat.v1.feature_column.input_layer": "doc",
    "tensorflow.compat.v1.graph_util.must_run_on_cpu": "doc",
    "tensorflow.compat.v1.initialize_local_variables": "doc",
    "tensorflow.compat.v1.initializers.random_normal": "doc",
    "tensorflow.compat.v1.io.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.io.TFRecordCompressionType": "doc",
    "tensorflow.compat.v1.io.deserialize_many_sparse": "doc",
    "tensorflow.compat.v1.keras.initializers.uniform": "doc",
    "tensorflow.compat.v1.keras.layers.DenseFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.compat.v1.keras.optimizers.Optimizer": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules": "doc",
    "tensorflow.compat.v1.keras.optimizers.serialize": "doc",
    "tensorflow.compat.v1.layers.batch_normalization": "doc",
    "tensorflow.compat.v1.math.reduce_euclidean_norm": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_prod": "doc",
    "tensorflow.compat.v1.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.metrics.precision_at_top_k": "doc",
    "tensorflow.compat.v1.nest.assert_same_structure": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.compute_accidental_hits": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DropoutWrapper": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMStateTuple": "doc",
    "tensorflow.compat.v1.nn.static_state_saving_rnn": "doc",
    "tensorflow.compat.v1.quantize_and_dequantize_v4": "doc",
    "tensorflow.compat.v1.random_uniform_initializer": "doc",
    "tensorflow.compat.v1.resource_variables_enabled": "doc",
    "tensorflow.compat.v1.sparse.sparse_dense_matmul": "doc",
    "tensorflow.compat.v1.sparse_tensor_dense_matmul": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.summary.SummaryDescription": "doc",
    "tensorflow.compat.v1.summary.all_v2_summary_ops": "doc",
    "tensorflow.image.generate_bounding_box_proposals": "doc",
    "tensorflow.image.non_max_suppression_with_scores": "doc",
    "tensorflow.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.app.flags.CsvListSerializer": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.data.make_one_shot_iterator": "doc",
    "tensorflow.compat.v1.distribute.MirroredStrategy": "doc",
    "tensorflow.compat.v1.distribute.StrategyExtended": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver": "doc",
    "tensorflow.compat.v1.errors.UnauthenticatedError": "doc",
    "tensorflow.compat.v1.estimator.BaselineEstimator": "doc",
    "tensorflow.compat.v1.estimator.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.estimator.SessionRunContext": "doc",
    "tensorflow.compat.v1.feature_column.linear_model": "doc",
    "tensorflow.compat.v1.flags.CantOpenFlagFileError": "doc",
    "tensorflow.compat.v1.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.compat.v1.graph_util.import_graph_def": "doc",
    "tensorflow.compat.v1.image.extract_image_patches": "doc",
    "tensorflow.compat.v1.image.resize_image_with_pad": "doc",
    "tensorflow.compat.v1.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.keras.callbacks.TensorBoard": "doc",
    "tensorflow.compat.v1.keras.initializers.Identity": "doc",
    "tensorflow.compat.v1.keras.initializers.identity": "doc",
    "tensorflow.compat.v1.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn": "doc",
    "tensorflow.compat.v1.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.metrics.mean_relative_error": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.ResidualWrapper": "doc",
    "tensorflow.compat.v1.nn.static_bidirectional_rnn": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op": "doc",
    "tensorflow.compat.v1.test.assert_equal_graph_def": "doc",
    "tensorflow.image.stateless_random_flip_left_right": "doc",
    "tensorflow.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.compat.v1.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentSerializer": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.app.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.app.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.app.flags.register_validator": "doc",
    "tensorflow.compat.v1.assert_variables_initialized": "doc",
    "tensorflow.compat.v1.create_partitioned_variables": "doc",
    "tensorflow.compat.v1.distribute.OneDeviceStrategy": "doc",
    "tensorflow.compat.v1.errors.DeadlineExceededError": "doc",
    "tensorflow.compat.v1.errors.PermissionDeniedError": "doc",
    "tensorflow.compat.v1.estimator.BaselineClassifier": "doc",
    "tensorflow.compat.v1.estimator.train_and_evaluate": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.global_variables_initializer": "doc",
    "tensorflow.compat.v1.graph_util.extract_sub_graph": "doc",
    "tensorflow.compat.v1.image.random_flip_left_right": "doc",
    "tensorflow.compat.v1.keras.initializers.he_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.serialize": "doc",
    "tensorflow.compat.v1.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianDropout": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.StackedRNNCells": "doc",
    "tensorflow.compat.v1.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.compat.v1.keras.layers.TimeDistributed": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.compat.v1.keras.models.model_from_json": "doc",
    "tensorflow.compat.v1.keras.models.model_from_yaml": "doc",
    "tensorflow.compat.v1.keras.optimizers.deserialize": "doc",
    "tensorflow.compat.v1.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.metrics.recall_at_thresholds": "doc",
    "tensorflow.compat.v1.min_max_variable_partitioner": "doc",
    "tensorflow.compat.v1.nn.bidirectional_dynamic_rnn": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter_v2": "doc",
    "tensorflow.compat.v1.nn.uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.Checker": "doc",
    "tensorflow.compat.v1.profiler.MultiGraphNodeProto": "doc",
    "tensorflow.compat.v1.python_io.tf_record_iterator": "doc",
    "tensorflow.compat.v1.random.all_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.stateless_categorical": "doc",
    "tensorflow.compat.v1.random.stateless_multinomial": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_strong": "doc",
    "tensorflow.compat.v1.truncated_normal_initializer": "doc",
    "tensorflow.compat.v1.variance_scaling_initializer": "doc",
    "tensorflow.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.keras.utils.register_keras_serializable": "doc",
    "tensorflow.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.compat.v1.NodeDef.ExperimentalDebugInfo": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.data.FixedLengthRecordDataset": "doc",
    "tensorflow.compat.v1.errors.ResourceExhaustedError": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.estimator.export.ExportOutput": "doc",
    "tensorflow.compat.v1.feature_column.crossed_column": "doc",
    "tensorflow.compat.v1.feature_column.numeric_column": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.image.resize_nearest_neighbor": "doc",
    "tensorflow.compat.v1.image.resize_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.keras.backend.is_keras_tensor": "doc",
    "tensorflow.compat.v1.keras.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_accuracy": "doc",
    "tensorflow.compat.v1.keras.utils.CustomObjectScope": "doc",
    "tensorflow.compat.v1.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.compat.v1.metrics.sparse_precision_at_k": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder_v2": "doc",
    "tensorflow.compat.v1.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.quantization.quantized_concat": "doc",
    "tensorflow.compat.v1.signal.inverse_stft_window_fn": "doc",
    "tensorflow.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.MetaGraphDef.SignatureDefEntry": "doc",
    "tensorflow.compat.v1.distribute.get_replica_context": "doc",
    "tensorflow.compat.v1.estimator.export.PredictOutput": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.compat.v1.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.compat.v1.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.compat.v1.keras.initializers.Initializer": "doc",
    "tensorflow.compat.v1.keras.initializers.deserialize": "doc",
    "tensorflow.compat.v1.keras.layers.AdditiveAttention": "doc",
    "tensorflow.compat.v1.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine_proximity": "doc",
    "tensorflow.compat.v1.keras.utils.get_custom_objects": "doc",
    "tensorflow.compat.v1.metrics.average_precision_at_k": "doc",
    "tensorflow.compat.v1.mixed_precision.FixedLossScale": "doc",
    "tensorflow.compat.v1.report_uninitialized_variables": "doc",
    "tensorflow.compat.v1.test.TestCase.failureException": "doc",
    "tensorflow.compat.v1.test.is_built_with_gpu_support": "doc",
    "tensorflow.compat.v1.variable_axis_size_partitioner": "doc",
    "tensorflow.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.app.flags.CantOpenFlagFileError": "doc",
    "tensorflow.compat.v1.app.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.app.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.app.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.compat.v1.distribute.ReductionToOneDevice": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.compat.v1.estimator.inputs.numpy_input_fn": "doc",
    "tensorflow.compat.v1.feature_column.indicator_column": "doc",
    "tensorflow.compat.v1.image.per_image_standardization": "doc",
    "tensorflow.compat.v1.keras.backend.image_data_format": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomNormal": "doc",
    "tensorflow.compat.v1.keras.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.keras.layers.LayerNormalization": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.compat.v1.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.compat.v1.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.compat.v1.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.compat.v1.keras.utils.custom_object_scope": "doc",
    "tensorflow.compat.v1.metrics.mean_per_class_accuracy": "doc",
    "tensorflow.compat.v1.metrics.precision_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.root_mean_squared_error": "doc",
    "tensorflow.compat.v1.nn.local_response_normalization": "doc",
    "tensorflow.compat.v1.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.saved_model.signature_constants": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils": "doc",
    "tensorflow.compat.v1.summary.get_summary_description": "doc",
    "tensorflow.compat.v1.app.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.data.make_initializable_iterator": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.compat.v1.estimator.inputs.pandas_input_fn": "doc",
    "tensorflow.compat.v1.feature_column.bucketized_column": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_padded": "doc",
    "tensorflow.compat.v1.io.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.keras.initializers.random_normal": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.mixed_precision.DynamicLossScale": "doc",
    "tensorflow.compat.v1.nondifferentiable_batch_function": "doc",
    "tensorflow.compat.v1.random.uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.required_space_to_batch_paddings": "doc",
    "tensorflow.compat.v1.saved_model.main_op_with_restore": "doc",
    "tensorflow.compat.v1.uniform_unit_scaling_initializer": "doc",
    "tensorflow.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorFromStringHandle": "doc",
    "tensorflow.raw_ops.StatelessSampleDistortedBoundingBox": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.app.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.compat.v1.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.compat.v1.keras.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_object": "doc",
    "tensorflow.compat.v1.python_io.TFRecordCompressionType": "doc",
    "tensorflow.compat.v1.random.stateless_truncated_normal": "doc",
    "tensorflow.compat.v1.saved_model.predict_signature_def": "doc",
    "tensorflow.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_sparse_tensor": "doc",
    "tensorflow.compat.v1.image.combined_non_max_suppression": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_overlaps": "doc",
    "tensorflow.compat.v1.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.compat.v1.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.utils.serialize_keras_object": "doc",
    "tensorflow.compat.v1.metrics.sensitivity_at_specificity": "doc",
    "tensorflow.compat.v1.metrics.specificity_at_sensitivity": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.CheckersEntry": "doc",
    "tensorflow.compat.v1.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.image.stateless_sample_distorted_bounding_box": "doc",
    "tensorflow.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_indexed_slices": "doc",
    "tensorflow.compat.v1.distribute.in_cross_replica_context": "doc",
    "tensorflow.compat.v1.executing_eagerly_outside_functions": "doc",
    "tensorflow.compat.v1.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.compat.v1.image.resize_image_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.keras.backend.set_image_data_format": "doc",
    "tensorflow.compat.v1.keras.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.keras.layers.ActivityRegularization": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.register_tensor_conversion_function": "doc",
    "tensorflow.compat.v1.resource_loader.get_data_files_path": "doc",
    "tensorflow.compat.v1.resource_loader.readahead_file_path": "doc",
    "tensorflow.compat.v1.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.compat.v1.sparse.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.compat.forward_compatibility_horizon": "doc",
    "tensorflow.compat.v1.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.compat.v1.distribute.experimental_set_strategy": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.compat.v1.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.compat.v1.metrics.true_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.true_positives_at_thresholds": "doc",
    "tensorflow.compat.v1.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize": "doc",
    "tensorflow.compat.v1.resource_loader.get_path_to_datafile": "doc",
    "tensorflow.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.compat.v1.errors.error_code_from_exception_type": "doc",
    "tensorflow.compat.v1.errors.exception_type_from_error_code": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.compat.v1.image.generate_bounding_box_proposals": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_with_scores": "doc",
    "tensorflow.compat.v1.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.compat.v1.keras.layers.enable_v2_dtype_behavior": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.metrics.false_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.false_positives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.sparse_average_precision_at_k": "doc",
    "tensorflow.compat.v1.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.saved_model.builder.SavedModelBuilder": "doc",
    "tensorflow.compat.v1.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.compat.v1.feature_column.make_parse_example_spec": "doc",
    "tensorflow.compat.v1.feature_column.sequence_numeric_column": "doc",
    "tensorflow.compat.v1.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.compat.v1.keras.layers.disable_v2_dtype_behavior": "doc",
    "tensorflow.compat.v1.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.compat.v1.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.compat.v1.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.compat.v1.app.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.compat.v1.errors.raise_exception_on_not_ok_status": "doc",
    "tensorflow.compat.v1.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.compat.v1.feature_column.shared_embedding_columns": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.utils.register_keras_serializable": "doc",
    "tensorflow.compat.v1.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits_v2": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.compat.v1.saved_model.get_tensor_from_tensor_info": "doc",
    "tensorflow.compat.v1.saved_model.maybe_saved_model_directory": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.app.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.compat.v1.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto.InputShapesEntry": "doc",
    "tensorflow.compat.v1.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.saved_model.classification_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op_with_restore": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.compat.v1.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.graph_util.convert_variables_to_constants": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_input": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.app.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.compat.v1.feature_column.weighted_categorical_column": "doc",
    "tensorflow.compat.v1.graph_util.tensor_shape_from_node_def_name": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_filter": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.compat.v1.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.app.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.saved_model.utils.get_tensor_from_tensor_info": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.compat.v1.resource_loader.get_root_dir_with_all_resources": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.compat.v1.mixed_precision.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.MethodNameUpdater": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.compat.v1.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.mixed_precision.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.compat.v1.mixed_precision.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.predict_signature_def": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.compat.v1.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.classification_signature_def": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariantGradient": "doc",
    "tensorflow.raw_ops.SparseAccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullInt": "doc",
    "tensorflow.raw_ops.ConditionalAccumulator": "doc",
    "tensorflow.raw_ops.CropAndResizeGradImage": "doc",
    "tensorflow.raw_ops.DatasetToSingleElement": "doc",
    "tensorflow.raw_ops.PlaceholderWithDefault": "doc",
    "tensorflow.raw_ops.StatefulUniformFullInt": "doc",
    "tensorflow.raw_ops.StatelessRandomPoisson": "doc",
    "tensorflow.raw_ops.StatelessRandomUniform": "doc",
    "tensorflow.raw_ops.StatsAggregatorSummary": "doc",
    "tensorflow.raw_ops.TensorListElementShape": "doc",
    "tensorflow.CriticalSection": "doc",
    "tensorflow.data.TextLineDataset": "doc",
    "tensorflow.math.multiply_no_nan": "doc",
    "tensorflow.math.reduce_variance": "doc",
    "tensorflow.test.gpu_device_name": "doc",
    "tensorflow.errors.OutOfRangeError": "doc",
    "tensorflow.random.stateless_gamma": "doc",
    "tensorflow.raw_ops.BarrierTakeMany": "doc",
    "tensorflow.raw_ops.BatchMatrixDiag": "doc",
    "tensorflow.raw_ops.BlockLSTMGradV2": "doc",
    "tensorflow.raw_ops.CompressElement": "doc",
    "tensorflow.raw_ops.CrossReplicaSum": "doc",
    "tensorflow.raw_ops.DebugIdentityV2": "doc",
    "tensorflow.raw_ops.EmptyTensorList": "doc",
    "tensorflow.raw_ops.LookupTableSize": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV2": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV3": "doc",
    "tensorflow.raw_ops.PartitionedCall": "doc",
    "tensorflow.raw_ops.PreventGradient": "doc",
    "tensorflow.raw_ops.QuantizedConcat": "doc",
    "tensorflow.raw_ops.QuantizedConv2D": "doc",
    "tensorflow.raw_ops.QueueIsClosedV2": "doc",
    "tensorflow.raw_ops.SerializeTensor": "doc",
    "tensorflow.raw_ops.ShardedFilename": "doc",
    "tensorflow.raw_ops.TensorArraySize": "doc",
    "tensorflow.raw_ops.TensorListSplit": "doc",
    "tensorflow.raw_ops.TensorListStack": "doc",
    "tensorflow.raw_ops.TextLineDataset": "doc",
    "tensorflow.raw_ops.WholeFileReader": "doc",
    "tensorflow.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.raw_ops.SparseAccumulatorApplyGradient": "doc",
    "tensorflow.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.VariableSynchronization": "doc",
    "tensorflow.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.raw_ops.ConfigureDistributedTPU": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropInput": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgs": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorInit": "doc",
    "tensorflow.raw_ops.RaggedCountSparseOutput": "doc",
    "tensorflow.raw_ops.SparseMatrixOrderingAMD": "doc",
    "tensorflow.raw_ops.StatefulPartitionedCall": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandleV2": "doc",
    "tensorflow.raw_ops.TPUEmbeddingActivations": "doc",
    "tensorflow.summary.should_record_summaries": "doc",
    "tensorflow.estimator.CheckpointSaverListener": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.StatelessRandomGetKeyCounterAlg": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullIntV2": "doc",
    "tensorflow.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.autodiff": "doc",
    "tensorflow.function": "doc",
    "tensorflow.identity": "doc",
    "tensorflow.linspace": "doc",
    "tensorflow.meshgrid": "doc",
    "tensorflow.multiply": "doc",
    "tensorflow.profiler": "doc",
    "tensorflow.math.bincount": "doc",
    "tensorflow.math.multiply": "doc",
    "tensorflow.math.softplus": "doc",
    "tensorflow.sparse.bincount": "doc",
    "tensorflow.import_graph_def": "doc",
    "tensorflow.ones_initializer": "doc",
    "tensorflow.raw_ops.AllToAll": "doc",
    "tensorflow.raw_ops.Bincount": "doc",
    "tensorflow.raw_ops.Cholesky": "doc",
    "tensorflow.raw_ops.ConcatV2": "doc",
    "tensorflow.raw_ops.CopyHost": "doc",
    "tensorflow.raw_ops.DiagPart": "doc",
    "tensorflow.raw_ops.Identity": "doc",
    "tensorflow.raw_ops.IsFinite": "doc",
    "tensorflow.raw_ops.ListDiff": "doc",
    "tensorflow.raw_ops.MapStage": "doc",
    "tensorflow.raw_ops.MulNoNan": "doc",
    "tensorflow.raw_ops.NotEqual": "doc",
    "tensorflow.raw_ops.OnesLike": "doc",
    "tensorflow.raw_ops.ReadFile": "doc",
    "tensorflow.raw_ops.RefMerge": "doc",
    "tensorflow.raw_ops.Softplus": "doc",
    "tensorflow.estimator.ModeKeys": "doc",
    "tensorflow.distribute.Strategy": "doc",
    "tensorflow.initializers.Identity": "doc",
    "tensorflow.initializers.identity": "doc",
    "tensorflow.quantization.quantize": "doc",
    "tensorflow.test.benchmark_config": "doc",
    "tensorflow.test.is_gpu_available": "doc",
    "tensorflow.random.create_rng_state": "doc",
    "tensorflow.random.stateless_normal": "doc",
    "tensorflow.raw_ops.AssignVariableOp": "doc",
    "tensorflow.raw_ops.AudioSpectrogram": "doc",
    "tensorflow.raw_ops.CollectiveGather": "doc",
    "tensorflow.raw_ops.CollectiveReduce": "doc",
    "tensorflow.raw_ops.ComputeBatchSize": "doc",
    "tensorflow.raw_ops.DataFormatDimMap": "doc",
    "tensorflow.raw_ops.GRUBlockCellGrad": "doc",
    "tensorflow.raw_ops.GetSessionHandle": "doc",
    "tensorflow.raw_ops.GetSessionTensor": "doc",
    "tensorflow.raw_ops.HistogramSummary": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV2": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV3": "doc",
    "tensorflow.raw_ops.QuantizedAvgPool": "doc",
    "tensorflow.raw_ops.SparseSegmentSum": "doc",
    "tensorflow.raw_ops.TensorArrayWrite": "doc",
    "tensorflow.raw_ops.TensorListGather": "doc",
    "tensorflow.raw_ops.TensorListResize": "doc",
    "tensorflow.raw_ops.TensorScatterMin": "doc",
    "tensorflow.raw_ops.TextLineReaderV2": "doc",
    "tensorflow.raw_ops.ThreadPoolHandle": "doc",
    "tensorflow.raw_ops.TridiagonalSolve": "doc",
    "tensorflow.raw_ops.UnicodeTranscode": "doc",
    "tensorflow.raw_ops.UniqueWithCounts": "doc",
    "tensorflow.estimator.LinearClassifier": "doc",
    "tensorflow.estimator.SessionRunValues": "doc",
    "tensorflow.autodiff.ForwardAccumulator": "doc",
    "tensorflow.distribute.MirroredStrategy": "doc",
    "tensorflow.distribute.StrategyExtended": "doc",
    "tensorflow.graph_util.import_graph_def": "doc",
    "tensorflow.keras.initializers.Identity": "doc",
    "tensorflow.keras.initializers.identity": "doc",
    "tensorflow.quantization.quantized_concat": "doc",
    "tensorflow.test.TestCase.failureException": "doc",
    "tensorflow.raw_ops.DebugGradientRefIdentity": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropFilter": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformV2": "doc",
    "tensorflow.raw_ops.StringToHashBucketStrong": "doc",
    "tensorflow.required_space_to_batch_paddings": "doc",
    "tensorflow.distribute.in_cross_replica_context": "doc",
    "tensorflow.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseAggregateStats": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByWindowDataset": "doc",
    "tensorflow.raw_ops.ExperimentalMatchingFilesDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSlidingWindowDataset": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorApplyGradient": "doc",
    "tensorflow.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorHandle": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.raw_ops.TensorListScatterIntoExistingList": "doc",
    "tensorflow.random_normal_initializer": "doc",
    "tensorflow.test.is_built_with_gpu_support": "doc",
    "tensorflow.raw_ops.CombinedNonMaxSuppression": "doc",
    "tensorflow.raw_ops.DeleteRandomSeedGenerator": "doc",
    "tensorflow.raw_ops.EncodeJpegVariableQuality": "doc",
    "tensorflow.raw_ops.IteratorGetNextAsOptional": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradWithArgmax": "doc",
    "tensorflow.raw_ops.SendTPUEmbeddingGradients": "doc",
    "tensorflow.raw_ops.SetStatsAggregatorDataset": "doc",
    "tensorflow.distribute.experimental_set_strategy": "doc",
    "tensorflow.convert_to_tensor": "doc",
    "tensorflow.space_to_batch_nd": "doc",
    "tensorflow.math.reciprocal_no_nan": "doc",
    "tensorflow.test.is_built_with_xla": "doc",
    "tensorflow.random.stateless_poisson": "doc",
    "tensorflow.random.stateless_uniform": "doc",
    "tensorflow.raw_ops.BarrierInsertMany": "doc",
    "tensorflow.raw_ops.CollectivePermute": "doc",
    "tensorflow.raw_ops.CompareAndBitpack": "doc",
    "tensorflow.raw_ops.DeleteMemoryCache": "doc",
    "tensorflow.raw_ops.FractionalMaxPool": "doc",
    "tensorflow.raw_ops.IteratorGetDevice": "doc",
    "tensorflow.raw_ops.LSTMBlockCellGrad": "doc",
    "tensorflow.raw_ops.LookupTableInsert": "doc",
    "tensorflow.raw_ops.LookupTableSizeV2": "doc",
    "tensorflow.raw_ops.MapIncompleteSize": "doc",
    "tensorflow.raw_ops.MatrixDeterminant": "doc",
    "tensorflow.raw_ops.MatrixExponential": "doc",
    "tensorflow.raw_ops.NonMaxSuppression": "doc",
    "tensorflow.raw_ops.OptionalFromValue": "doc",
    "tensorflow.raw_ops.OrderedMapUnstage": "doc",
    "tensorflow.raw_ops.PrelinearizeTuple": "doc",
    "tensorflow.raw_ops.ResourceCountUpTo": "doc",
    "tensorflow.raw_ops.ScaleAndTranslate": "doc",
    "tensorflow.raw_ops.SparseSegmentMean": "doc",
    "tensorflow.raw_ops.SquaredDifference": "doc",
    "tensorflow.raw_ops.TemporaryVariable": "doc",
    "tensorflow.raw_ops.TensorArrayConcat": "doc",
    "tensorflow.raw_ops.TensorArraySizeV2": "doc",
    "tensorflow.raw_ops.TensorArraySizeV3": "doc",
    "tensorflow.raw_ops.TensorArrayUnpack": "doc",
    "tensorflow.raw_ops.TensorListGetItem": "doc",
    "tensorflow.raw_ops.TensorListPopBack": "doc",
    "tensorflow.raw_ops.TensorListReserve": "doc",
    "tensorflow.raw_ops.TensorListScatter": "doc",
    "tensorflow.raw_ops.TensorListSetItem": "doc",
    "tensorflow.raw_ops.TridiagonalMatMul": "doc",
    "tensorflow.raw_ops.UncompressElement": "doc",
    "tensorflow.raw_ops.WholeFileReaderV2": "doc",
    "tensorflow.estimator.BaselineEstimator": "doc",
    "tensorflow.estimator.SecondOrStepTimer": "doc",
    "tensorflow.estimator.SessionRunContext": "doc",
    "tensorflow.distribute.OneDeviceStrategy": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorSummary": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.raw_ops.SparseApplyProximalGradientDescent": "doc",
    "tensorflow.random_uniform_initializer": "doc",
    "tensorflow.raw_ops.BatchMatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV2": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV3": "doc",
    "tensorflow.raw_ops.ParseSingleSequenceExample": "doc",
    "tensorflow.raw_ops.ResourceStridedSliceAssign": "doc",
    "tensorflow.raw_ops.SparseApplyProximalAdagrad": "doc",
    "tensorflow.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.Operation": "doc",
    "tensorflow.gather_nd": "doc",
    "tensorflow.is_tensor": "doc",
    "tensorflow.not_equal": "doc",
    "tensorflow.ones_like": "doc",
    "tensorflow.math.not_equal": "doc",
    "tensorflow.keras.callbacks": "doc",
    "tensorflow.raw_ops.AvgPool3D": "doc",
    "tensorflow.raw_ops.BitwiseOr": "doc",
    "tensorflow.raw_ops.Bucketize": "doc",
    "tensorflow.raw_ops.CountUpTo": "doc",
    "tensorflow.raw_ops.DecodeBmp": "doc",
    "tensorflow.raw_ops.DecodeCSV": "doc",
    "tensorflow.raw_ops.DecodeGif": "doc",
    "tensorflow.raw_ops.DecodeRaw": "doc",
    "tensorflow.raw_ops.DecodeWav": "doc",
    "tensorflow.raw_ops.EncodeWav": "doc",
    "tensorflow.raw_ops.IdentityN": "doc",
    "tensorflow.raw_ops.LeftShift": "doc",
    "tensorflow.raw_ops.QueueSize": "doc",
    "tensorflow.raw_ops.RefSwitch": "doc",
    "tensorflow.raw_ops.Relu6Grad": "doc",
    "tensorflow.raw_ops.StagePeek": "doc",
    "tensorflow.raw_ops.WriteFile": "doc",
    "tensorflow.summary.histogram": "doc",
    "tensorflow.summary.record_if": "doc",
    "tensorflow.unique_with_counts": "doc",
    "tensorflow.estimator.MultiHead": "doc",
    "tensorflow.estimator.TrainSpec": "doc",
    "tensorflow.optimizers.Optimizer": "doc",
    "tensorflow.optimizers.serialize": "doc",
    "tensorflow.initializers.HeUniform": "doc",
    "tensorflow.initializers.serialize": "doc",
    "tensorflow.keras.callbacks.History": "doc",
    "tensorflow.math.squared_difference": "doc",
    "tensorflow.test.is_built_with_cuda": "doc",
    "tensorflow.test.is_built_with_rocm": "doc",
    "tensorflow.keras.callbacks.Callback": "doc",
    "tensorflow.errors.AlreadyExistsError": "doc",
    "tensorflow.keras.optimizers.Optimizer": "doc",
    "tensorflow.keras.optimizers.serialize": "doc",
    "tensorflow.raw_ops.BatchMatrixInverse": "doc",
    "tensorflow.raw_ops.BatchMatrixSetDiag": "doc",
    "tensorflow.raw_ops.CollectiveGatherV2": "doc",
    "tensorflow.raw_ops.CollectiveReduceV2": "doc",
    "tensorflow.raw_ops.ConcatenateDataset": "doc",
    "tensorflow.raw_ops.DatasetCardinality": "doc",
    "tensorflow.raw_ops.FlushSummaryWriter": "doc",
    "tensorflow.raw_ops.GetSessionHandleV2": "doc",
    "tensorflow.raw_ops.LoadAndRemapMatrix": "doc",
    "tensorflow.raw_ops.ResizeBilinearGrad": "doc",
    "tensorflow.raw_ops.ResourceScatterMin": "doc",
    "tensorflow.raw_ops.SparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtN": "doc",
    "tensorflow.raw_ops.StaticRegexReplace": "doc",
    "tensorflow.raw_ops.StringToHashBucket": "doc",
    "tensorflow.raw_ops.TPUOrdinalSelector": "doc",
    "tensorflow.raw_ops.TPUPartitionedCall": "doc",
    "tensorflow.raw_ops.TPUReplicatedInput": "doc",
    "tensorflow.raw_ops.TensorArraySplitV2": "doc",
    "tensorflow.raw_ops.TensorArraySplitV3": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV2": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV3": "doc",
    "tensorflow.raw_ops.TensorListPushBack": "doc",
    "tensorflow.raw_ops.TensorSliceDataset": "doc",
    "tensorflow.raw_ops.UniqueWithCountsV2": "doc",
    "tensorflow.raw_ops.WrapDatasetVariant": "doc",
    "tensorflow.summary.create_file_writer": "doc",
    "tensorflow.summary.create_noop_writer": "doc",
    "tensorflow.keras.callbacks.TensorBoard": "doc",
    "tensorflow.estimator.BaselineClassifier": "doc",
    "tensorflow.keras.initializers.serialize": "doc",
    "tensorflow.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.optimizers.schedules.serialize": "doc",
    "tensorflow.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFile": "doc",
    "tensorflow.raw_ops.RecvTPUEmbeddingActivations": "doc",
    "tensorflow.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.feature_column.weighted_categorical_column": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalizationGrad": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.ExperimentalSetStatsAggregatorDataset": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolHandle": "doc",
    "tensorflow.raw_ops.FilterByLastComponentDataset": "doc",
    "tensorflow.raw_ops.ResourceApplyAdamWithAmsgrad": "doc",
    "tensorflow.raw_ops.ResourceApplyGradientDescent": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.SparseConditionalAccumulator": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.raw_ops.AllCandidateSampler": "doc",
    "tensorflow.raw_ops.AssignAddVariableOp": "doc",
    "tensorflow.raw_ops.AssignSubVariableOp": "doc",
    "tensorflow.raw_ops.BatchMatrixBandPart": "doc",
    "tensorflow.raw_ops.BatchMatrixDiagPart": "doc",
    "tensorflow.raw_ops.BoostedTreesPredict": "doc",
    "tensorflow.raw_ops.CollectiveBcastRecv": "doc",
    "tensorflow.raw_ops.Conv2DBackpropInput": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInput": "doc",
    "tensorflow.raw_ops.DebugNumericSummary": "doc",
    "tensorflow.raw_ops.DeleteSeedGenerator": "doc",
    "tensorflow.raw_ops.IteratorGetNextSync": "doc",
    "tensorflow.raw_ops.LookupTableInsertV2": "doc",
    "tensorflow.raw_ops.MultiDeviceIterator": "doc",
    "tensorflow.raw_ops.SerializeManySparse": "doc",
    "tensorflow.raw_ops.SparseApplyMomentum": "doc",
    "tensorflow.raw_ops.SparseSparseMinimum": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV2": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV3": "doc",
    "tensorflow.raw_ops.TensorListScatterV2": "doc",
    "tensorflow.estimator.CheckpointSaverHook": "doc",
    "tensorflow.distribute.get_replica_context": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.raw_ops.BoostedTreesSerializeEnsemble": "doc",
    "tensorflow.raw_ops.ExperimentalIteratorGetDevice": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFileV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionWithOverlaps": "doc",
    "tensorflow.raw_ops.RequantizationRangePerChannel": "doc",
    "tensorflow.raw_ops.SoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.abs": "doc",
    "tensorflow.add": "doc",
    "tensorflow.exp": "doc",
    "tensorflow.eye": "doc",
    "tensorflow.pad": "doc",
    "tensorflow.tpu": "doc",
    "tensorflow.xla": "doc",
    "tensorflow.acos": "doc",
    "tensorflow.case": "doc",
    "tensorflow.cast": "doc",
    "tensorflow.data": "doc",
    "tensorflow.math": "doc",
    "tensorflow.nest": "doc",
    "tensorflow.sets": "doc",
    "tensorflow.sqrt": "doc",
    "tensorflow.test": "doc",
    "tensorflow.DType": "doc",
    "tensorflow.Graph": "doc",
    "tensorflow.acosh": "doc",
    "tensorflow.equal": "doc",
    "tensorflow.keras": "doc",
    "tensorflow.queue": "doc",
    "tensorflow.shape": "doc",
    "tensorflow.stack": "doc",
    "tensorflow.tuple": "doc",
    "tensorflow.types": "doc",
    "tensorflow.where": "doc",
    "tensorflow.zeros": "doc",
    "tensorflow.Assert": "doc",
    "tensorflow.Tensor": "doc",
    "tensorflow.cumsum": "doc",
    "tensorflow.dtypes": "doc",
    "tensorflow.einsum": "doc",
    "tensorflow.errors": "doc",
    "tensorflow.gather": "doc",
    "tensorflow.matmul": "doc",
    "tensorflow.random": "doc",
    "tensorflow.repeat": "doc",
    "tensorflow.sparse": "doc",
    "tensorflow.square": "doc",
    "tensorflow.unique": "doc",
    "tensorflow.bitcast": "doc",
    "tensorflow.greater": "doc",
    "tensorflow.maximum": "doc",
    "tensorflow.minimum": "doc",
    "tensorflow.one_hot": "doc",
    "tensorflow.raw_ops": "doc",
    "tensorflow.realdiv": "doc",
    "tensorflow.reshape": "doc",
    "tensorflow.reverse": "doc",
    "tensorflow.shape_n": "doc",
    "tensorflow.squeeze": "doc",
    "tensorflow.summary": "doc",
    "tensorflow.truediv": "doc",
    "tensorflow.unstack": "doc",
    "tensorflow.TypeSpec": "doc",
    "tensorflow.Variable": "doc",
    "tensorflow.as_dtype": "doc",
    "tensorflow.math.abs": "doc",
    "tensorflow.math.add": "doc",
    "tensorflow.math.erf": "doc",
    "tensorflow.math.exp": "doc",
    "tensorflow.subtract": "doc",
    "tensorflow.estimator": "doc",
    "tensorflow.math.acos": "doc",
    "tensorflow.math.erfc": "doc",
    "tensorflow.math.real": "doc",
    "tensorflow.math.sqrt": "doc",
    "tensorflow.math.zeta": "doc",
    "tensorflow.tensordot": "doc",
    "tensorflow.timestamp": "doc",
    "tensorflow.transpose": "doc",
    "tensorflow.DeviceSpec": "doc",
    "tensorflow.TensorSpec": "doc",
    "tensorflow.distribute": "doc",
    "tensorflow.graph_util": "doc",
    "tensorflow.identity_n": "doc",
    "tensorflow.init_scope": "doc",
    "tensorflow.less_equal": "doc",
    "tensorflow.math.acosh": "doc",
    "tensorflow.math.equal": "doc",
    "tensorflow.math.expm1": "doc",
    "tensorflow.math.rsqrt": "doc",
    "tensorflow.name_scope": "doc",
    "tensorflow.optimizers": "doc",
    "tensorflow.raw_ops.If": "doc",
    "tensorflow.raw_ops.Lu": "doc",
    "tensorflow.raw_ops.Qr": "doc",
    "tensorflow.reduce_all": "doc",
    "tensorflow.reduce_any": "doc",
    "tensorflow.reduce_max": "doc",
    "tensorflow.reduce_min": "doc",
    "tensorflow.reduce_sum": "doc",
    "tensorflow.scalar_mul": "doc",
    "tensorflow.scatter_nd": "doc",
    "tensorflow.sparse.add": "doc",
    "tensorflow.sparse.eye": "doc",
    "tensorflow.while_loop": "doc",
    "tensorflow.TensorArray": "doc",
    "tensorflow.TensorShape": "doc",
    "tensorflow.assert_less": "doc",
    "tensorflow.assert_rank": "doc",
    "tensorflow.dtypes.cast": "doc",
    "tensorflow.expand_dims": "doc",
    "tensorflow.keras.Input": "doc",
    "tensorflow.math.cumsum": "doc",
    "tensorflow.math.square": "doc",
    "tensorflow.py_function": "doc",
    "tensorflow.raw_ops.Abs": "doc",
    "tensorflow.raw_ops.Add": "doc",
    "tensorflow.raw_ops.All": "doc",
    "tensorflow.raw_ops.Elu": "doc",
    "tensorflow.raw_ops.Erf": "doc",
    "tensorflow.raw_ops.Exp": "doc",
    "tensorflow.raw_ops.FFT": "doc",
    "tensorflow.raw_ops.LRN": "doc",
    "tensorflow.raw_ops.Max": "doc",
    "tensorflow.raw_ops.Mul": "doc",
    "tensorflow.raw_ops.Pad": "doc",
    "tensorflow.raw_ops.Sub": "doc",
    "tensorflow.raw_ops.Sum": "doc",
    "tensorflow.raw_ops.Svd": "doc",
    "tensorflow.reduce_mean": "doc",
    "tensorflow.reduce_prod": "doc",
    "tensorflow.saved_model": "doc",
    "tensorflow.sparse.mask": "doc",
    "tensorflow.switch_case": "doc",
    "tensorflow.truncatediv": "doc",
    "tensorflow.truncatemod": "doc",
    "tensorflow.OptionalSpec": "doc",
    "tensorflow.SparseTensor": "doc",
    "tensorflow.assert_equal": "doc",
    "tensorflow.broadcast_to": "doc",
    "tensorflow.data.Dataset": "doc",
    "tensorflow.dtypes.DType": "doc",
    "tensorflow.ensure_shape": "doc",
    "tensorflow.initializers": "doc",
    "tensorflow.make_ndarray": "doc",
    "tensorflow.math.cumprod": "doc",
    "tensorflow.math.greater": "doc",
    "tensorflow.math.igammac": "doc",
    "tensorflow.math.maximum": "doc",
    "tensorflow.math.minimum": "doc",
    "tensorflow.math.truediv": "doc",
    "tensorflow.quantization": "doc",
    "tensorflow.raw_ops.Acos": "doc",
    "tensorflow.raw_ops.AddN": "doc",
    "tensorflow.raw_ops.Case": "doc",
    "tensorflow.raw_ops.Cast": "doc",
    "tensorflow.raw_ops.Erfc": "doc",
    "tensorflow.raw_ops.Fact": "doc",
    "tensorflow.raw_ops.IFFT": "doc",
    "tensorflow.raw_ops.Less": "doc",
    "tensorflow.raw_ops.Mfcc": "doc",
    "tensorflow.raw_ops.Pack": "doc",
    "tensorflow.raw_ops.Prod": "doc",
    "tensorflow.raw_ops.RFFT": "doc",
    "tensorflow.raw_ops.Real": "doc",
    "tensorflow.raw_ops.Recv": "doc",
    "tensorflow.raw_ops.Relu": "doc",
    "tensorflow.raw_ops.Save": "doc",
    "tensorflow.raw_ops.Selu": "doc",
    "tensorflow.raw_ops.Sqrt": "doc",
    "tensorflow.raw_ops.Zeta": "doc",
    "tensorflow.searchsorted": "doc",
    "tensorflow.sparse.cross": "doc",
    "tensorflow.summary.text": "doc",
    "tensorflow.IndexedSlices": "doc",
    "tensorflow.clip_by_value": "doc",
    "tensorflow.data.Iterator": "doc",
    "tensorflow.greater_equal": "doc",
    "tensorflow.math.in_top_k": "doc",
    "tensorflow.math.subtract": "doc",
    "tensorflow.raw_ops.Abort": "doc",
    "tensorflow.raw_ops.Acosh": "doc",
    "tensorflow.raw_ops.AddV2": "doc",
    "tensorflow.raw_ops.Batch": "doc",
    "tensorflow.raw_ops.Cross": "doc",
    "tensorflow.raw_ops.Empty": "doc",
    "tensorflow.raw_ops.Enter": "doc",
    "tensorflow.raw_ops.Equal": "doc",
    "tensorflow.raw_ops.Expm1": "doc",
    "tensorflow.raw_ops.FFT2D": "doc",
    "tensorflow.raw_ops.FFT3D": "doc",
    "tensorflow.raw_ops.IRFFT": "doc",
    "tensorflow.raw_ops.PadV2": "doc",
    "tensorflow.raw_ops.Relu6": "doc",
    "tensorflow.raw_ops.Rsqrt": "doc",
    "tensorflow.raw_ops.Shape": "doc",
    "tensorflow.raw_ops.Stack": "doc",
    "tensorflow.raw_ops.Where": "doc",
    "tensorflow.saturate_cast": "doc",
    "tensorflow.sequence_mask": "doc",
    "tensorflow.strided_slice": "doc",
    "tensorflow.summary.flush": "doc",
    "tensorflow.test.TestCase": "doc",
    "tensorflow.assert_greater": "doc",
    "tensorflow.batch_to_space": "doc",
    "tensorflow.dynamic_stitch": "doc",
    "tensorflow.errors.OpError": "doc",
    "tensorflow.estimator.Head": "doc",
    "tensorflow.feature_column": "doc",
    "tensorflow.keras.datasets": "doc",
    "tensorflow.keras.wrappers": "doc",
    "tensorflow.math.bessel_i0": "doc",
    "tensorflow.math.bessel_i1": "doc",
    "tensorflow.math.nextafter": "doc",
    "tensorflow.nest.is_nested": "doc",
    "tensorflow.numpy_function": "doc",
    "tensorflow.optimizers.SGD": "doc",
    "tensorflow.parallel_stack": "doc",
    "tensorflow.random.shuffle": "doc",
    "tensorflow.random.uniform": "doc",
    "tensorflow.raw_ops.Assert": "doc",
    "tensorflow.raw_ops.Cumsum": "doc",
    "tensorflow.raw_ops.Einsum": "doc",
    "tensorflow.raw_ops.Gather": "doc",
    "tensorflow.raw_ops.IFFT2D": "doc",
    "tensorflow.raw_ops.IFFT3D": "doc",
    "tensorflow.raw_ops.InTopK": "doc",
    "tensorflow.raw_ops.Invert": "doc",
    "tensorflow.raw_ops.L2Loss": "doc",
    "tensorflow.raw_ops.MatMul": "doc",
    "tensorflow.raw_ops.OneHot": "doc",
    "tensorflow.raw_ops.RFFT2D": "doc",
    "tensorflow.raw_ops.RFFT3D": "doc",
    "tensorflow.raw_ops.SaveV2": "doc",
    "tensorflow.raw_ops.Select": "doc",
    "tensorflow.raw_ops.ShapeN": "doc",
    "tensorflow.raw_ops.Spence": "doc",
    "tensorflow.raw_ops.Square": "doc",
    "tensorflow.raw_ops.Substr": "doc",
    "tensorflow.raw_ops.Switch": "doc",
    "tensorflow.raw_ops.Unique": "doc",
    "tensorflow.raw_ops.Unpack": "doc",
    "tensorflow.space_to_batch": "doc",
    "tensorflow.sparse.maximum": "doc",
    "tensorflow.sparse.minimum": "doc",
    "tensorflow.sparse.reorder": "doc",
    "tensorflow.sparse.reshape": "doc",
    "tensorflow.summary.scalar": "doc",
    "tensorflow.test.Benchmark": "doc",
    "tensorflow.vectorized_map": "doc",
    "tensorflow.TensorArraySpec": "doc",
    "tensorflow.dtypes.as_dtype": "doc",
    "tensorflow.guarantee_const": "doc",
    "tensorflow.inside_function": "doc",
    "tensorflow.keras.estimator": "doc",
    "tensorflow.math.bessel_i0e": "doc",
    "tensorflow.math.bessel_i1e": "doc",
    "tensorflow.math.less_equal": "doc",
    "tensorflow.math.reciprocal": "doc",
    "tensorflow.math.reduce_all": "doc",
    "tensorflow.math.reduce_any": "doc",
    "tensorflow.math.reduce_max": "doc",
    "tensorflow.math.reduce_min": "doc",
    "tensorflow.math.reduce_std": "doc",
    "tensorflow.math.reduce_sum": "doc",
    "tensorflow.math.scalar_mul": "doc",
    "tensorflow.mixed_precision": "doc",
    "tensorflow.optimizers.Adam": "doc",
    "tensorflow.optimizers.Ftrl": "doc",
    "tensorflow.queue.FIFOQueue": "doc",
    "tensorflow.queue.QueueBase": "doc",
    "tensorflow.random.set_seed": "doc",
    "tensorflow.raw_ops.BiasAdd": "doc",
    "tensorflow.raw_ops.Bitcast": "doc",
    "tensorflow.raw_ops.CTCLoss": "doc",
    "tensorflow.raw_ops.Cumprod": "doc",
    "tensorflow.raw_ops.EluGrad": "doc",
    "tensorflow.raw_ops.Greater": "doc",
    "tensorflow.raw_ops.IRFFT2D": "doc",
    "tensorflow.raw_ops.IRFFT3D": "doc",
    "tensorflow.raw_ops.Igammac": "doc",
    "tensorflow.raw_ops.InvGrad": "doc",
    "tensorflow.raw_ops.LRNGrad": "doc",
    "tensorflow.raw_ops.MapPeek": "doc",
    "tensorflow.raw_ops.MaxPool": "doc",
    "tensorflow.raw_ops.Maximum": "doc",
    "tensorflow.raw_ops.Minimum": "doc",
    "tensorflow.raw_ops.MutexV2": "doc",
    "tensorflow.raw_ops.PrintV2": "doc",
    "tensorflow.raw_ops.RealDiv": "doc",
    "tensorflow.raw_ops.RefExit": "doc",
    "tensorflow.raw_ops.Reshape": "doc",
    "tensorflow.raw_ops.Restore": "doc",
    "tensorflow.raw_ops.Reverse": "doc",
    "tensorflow.raw_ops.Squeeze": "doc",
    "tensorflow.raw_ops.StackV2": "doc",
    "tensorflow.raw_ops.Unbatch": "doc",
    "tensorflow.raw_ops.Unstage": "doc",
    "tensorflow.sets.difference": "doc",
    "tensorflow.SparseTensorSpec": "doc",
    "tensorflow.data.DatasetSpec": "doc",
    "tensorflow.estimator.export": "doc",
    "tensorflow.get_static_value": "doc",
    "tensorflow.keras.Sequential": "doc",
    "tensorflow.keras.optimizers": "doc",
    "tensorflow.math.reduce_mean": "doc",
    "tensorflow.math.reduce_prod": "doc",
    "tensorflow.optimizers.Nadam": "doc",
    "tensorflow.random.Generator": "doc",
    "tensorflow.raw_ops.BatchFFT": "doc",
    "tensorflow.raw_ops.BatchSvd": "doc",
    "tensorflow.raw_ops.BesselI0": "doc",
    "tensorflow.raw_ops.BesselI1": "doc",
    "tensorflow.raw_ops.BesselJ0": "doc",
    "tensorflow.raw_ops.BesselJ1": "doc",
    "tensorflow.raw_ops.BesselK0": "doc",
    "tensorflow.raw_ops.BesselK1": "doc",
    "tensorflow.raw_ops.BesselY0": "doc",
    "tensorflow.raw_ops.BesselY1": "doc",
    "tensorflow.raw_ops.CudnnRNN": "doc",
    "tensorflow.raw_ops.DeepCopy": "doc",
    "tensorflow.raw_ops.DivNoNan": "doc",
    "tensorflow.raw_ops.GatherNd": "doc",
    "tensorflow.raw_ops.GatherV2": "doc",
    "tensorflow.raw_ops.HSVToRGB": "doc",
    "tensorflow.raw_ops.InTopKV2": "doc",
    "tensorflow.raw_ops.Iterator": "doc",
    "tensorflow.raw_ops.LinSpace": "doc",
    "tensorflow.raw_ops.MapClear": "doc",
    "tensorflow.raw_ops.MapDefun": "doc",
    "tensorflow.raw_ops.RGBToHSV": "doc",
    "tensorflow.raw_ops.RefEnter": "doc",
    "tensorflow.raw_ops.ReluGrad": "doc",
    "tensorflow.raw_ops.SelectV2": "doc",
    "tensorflow.raw_ops.SeluGrad": "doc",
    "tensorflow.raw_ops.Snapshot": "doc",
    "tensorflow.raw_ops.SqrtGrad": "doc",
    "tensorflow.raw_ops.StackPop": "doc",
    "tensorflow.raw_ops.TanhGrad": "doc",
    "tensorflow.raw_ops.TileGrad": "doc",
    "tensorflow.raw_ops.UniqueV2": "doc",
    "tensorflow.raw_ops.Variable": "doc",
    "tensorflow.reverse_sequence": "doc",
    "tensorflow.saved_model.save": "doc",
    "tensorflow.sparse.transpose": "doc",
    "tensorflow.summary.trace_on": "doc",
    "tensorflow.IndexedSlicesSpec": "doc",
    "tensorflow.data.IteratorSpec": "doc",
    "tensorflow.distribute.Server": "doc",
    "tensorflow.dynamic_partition": "doc",
    "tensorflow.grad_pass_through": "doc",
    "tensorflow.initializers.Ones": "doc",
    "tensorflow.make_tensor_proto": "doc",
    "tensorflow.math.accumulate_n": "doc",
    "tensorflow.math.sobol_sample": "doc",
    "tensorflow.optimizers.Adamax": "doc",
    "tensorflow.raw_ops.AdjustHue": "doc",
    "tensorflow.raw_ops.ApplyAdam": "doc",
    "tensorflow.raw_ops.ApplyFtrl": "doc",
    "tensorflow.raw_ops.BatchIFFT": "doc",
    "tensorflow.raw_ops.BesselI0e": "doc",
    "tensorflow.raw_ops.BesselI1e": "doc",
    "tensorflow.raw_ops.BesselK0e": "doc",
    "tensorflow.raw_ops.BesselK1e": "doc",
    "tensorflow.raw_ops.BiasAddV1": "doc",
    "tensorflow.raw_ops.CTCLossV2": "doc",
    "tensorflow.raw_ops.FIFOQueue": "doc",
    "tensorflow.raw_ops.FakeParam": "doc",
    "tensorflow.raw_ops.FakeQueue": "doc",
    "tensorflow.raw_ops.HashTable": "doc",
    "tensorflow.raw_ops.LeakyRelu": "doc",
    "tensorflow.raw_ops.LessEqual": "doc",
    "tensorflow.raw_ops.MaxPool3D": "doc",
    "tensorflow.raw_ops.MaxPoolV2": "doc",
    "tensorflow.raw_ops.MirrorPad": "doc",
    "tensorflow.raw_ops.MutexLock": "doc",
    "tensorflow.raw_ops.NextAfter": "doc",
    "tensorflow.raw_ops.RefSelect": "doc",
    "tensorflow.raw_ops.RestoreV2": "doc",
    "tensorflow.raw_ops.ReverseV2": "doc",
    "tensorflow.raw_ops.RsqrtGrad": "doc",
    "tensorflow.raw_ops.ScatterNd": "doc",
    "tensorflow.raw_ops.SparseAdd": "doc",
    "tensorflow.raw_ops.StackPush": "doc",
    "tensorflow.raw_ops.Timestamp": "doc",
    "tensorflow.raw_ops.Transpose": "doc",
    "tensorflow.saved_model.Asset": "doc",
    "tensorflow.sets.intersection": "doc",
    "tensorflow.sparse.map_values": "doc",
    "tensorflow.sparse.reduce_max": "doc",
    "tensorflow.sparse.reduce_sum": "doc",
    "tensorflow.summary.trace_off": "doc",
    "tensorflow.estimator.EvalSpec": "doc",
    "tensorflow.estimator.Exporter": "doc",
    "tensorflow.initializers.Zeros": "doc",
    "tensorflow.initializers.zeros": "doc",
    "tensorflow.keras.initializers": "doc",
    "tensorflow.math.divide_no_nan": "doc",
    "tensorflow.math.greater_equal": "doc",
    "tensorflow.matrix_square_root": "doc",
    "tensorflow.nest.map_structure": "doc",
    "tensorflow.optimizers.RMSprop": "doc",
    "tensorflow.raw_ops.BatchFFT2D": "doc",
    "tensorflow.raw_ops.BatchFFT3D": "doc",
    "tensorflow.raw_ops.BitwiseXor": "doc",
    "tensorflow.raw_ops.CSVDataset": "doc",
    "tensorflow.raw_ops.ComplexAbs": "doc",
    "tensorflow.raw_ops.CudnnRNNV2": "doc",
    "tensorflow.raw_ops.CudnnRNNV3": "doc",
    "tensorflow.raw_ops.Dequantize": "doc",
    "tensorflow.raw_ops.ExpandDims": "doc",
    "tensorflow.raw_ops.FresnelCos": "doc",
    "tensorflow.raw_ops.FresnelSin": "doc",
    "tensorflow.raw_ops.InplaceAdd": "doc",
    "tensorflow.raw_ops.InplaceSub": "doc",
    "tensorflow.raw_ops.IteratorV2": "doc",
    "tensorflow.raw_ops.LMDBReader": "doc",
    "tensorflow.raw_ops.MapDataset": "doc",
    "tensorflow.raw_ops.MapUnstage": "doc",
    "tensorflow.raw_ops.NcclReduce": "doc",
    "tensorflow.raw_ops.NthElement": "doc",
    "tensorflow.raw_ops.QuantizeV2": "doc",
    "tensorflow.raw_ops.QueueClose": "doc",
    "tensorflow.raw_ops.RandomCrop": "doc",
    "tensorflow.raw_ops.ReaderRead": "doc",
    "tensorflow.raw_ops.Reciprocal": "doc",
    "tensorflow.raw_ops.ReduceJoin": "doc",
    "tensorflow.raw_ops.RemoteCall": "doc",
    "tensorflow.raw_ops.Requantize": "doc",
    "tensorflow.raw_ops.ResizeArea": "doc",
    "tensorflow.raw_ops.SaveSlices": "doc",
    "tensorflow.raw_ops.ScatterAdd": "doc",
    "tensorflow.raw_ops.ScatterDiv": "doc",
    "tensorflow.raw_ops.ScatterMax": "doc",
    "tensorflow.raw_ops.ScatterMin": "doc",
    "tensorflow.raw_ops.ScatterMul": "doc",
    "tensorflow.raw_ops.ScatterSub": "doc",
    "tensorflow.raw_ops.SqlDataset": "doc",
    "tensorflow.raw_ops.StackClose": "doc",
    "tensorflow.raw_ops.StackPopV2": "doc",
    "tensorflow.raw_ops.StageClear": "doc",
    "tensorflow.raw_ops.UpperBound": "doc",
    "tensorflow.raw_ops.VariableV2": "doc",
    "tensorflow.raw_ops.ZipDataset": "doc",
    "tensorflow.sparse.expand_dims": "doc",
    "tensorflow.sparse.reset_shape": "doc",
    "tensorflow.distribute.ReduceOp": "doc",
    "tensorflow.errors.AbortedError": "doc",
    "tensorflow.errors.UnknownError": "doc",
    "tensorflow.estimator.Estimator": "doc",
    "tensorflow.keras.datasets.imdb": "doc",
    "tensorflow.optimizers.Adadelta": "doc",
    "tensorflow.queue.PriorityQueue": "doc",
    "tensorflow.raw_ops.ApplyAdaMax": "doc",
    "tensorflow.raw_ops.ApplyFtrlV2": "doc",
    "tensorflow.raw_ops.AvgPoolGrad": "doc",
    "tensorflow.raw_ops.BatchIFFT2D": "doc",
    "tensorflow.raw_ops.BatchIFFT3D": "doc",
    "tensorflow.raw_ops.BatchMatMul": "doc",
    "tensorflow.raw_ops.BiasAddGrad": "doc",
    "tensorflow.raw_ops.BroadcastTo": "doc",
    "tensorflow.raw_ops.ClipByValue": "doc",
    "tensorflow.raw_ops.DeviceIndex": "doc",
    "tensorflow.raw_ops.EncodeProto": "doc",
    "tensorflow.raw_ops.EnsureShape": "doc",
    "tensorflow.raw_ops.FIFOQueueV2": "doc",
    "tensorflow.raw_ops.HashTableV2": "doc",
    "tensorflow.raw_ops.IgammaGradA": "doc",
    "tensorflow.raw_ops.LMDBDataset": "doc",
    "tensorflow.raw_ops.LoadDataset": "doc",
    "tensorflow.raw_ops.MatrixSolve": "doc",
    "tensorflow.raw_ops.MaxPoolGrad": "doc",
    "tensorflow.raw_ops.ParseTensor": "doc",
    "tensorflow.raw_ops.Placeholder": "doc",
    "tensorflow.raw_ops.QueueSizeV2": "doc",
    "tensorflow.raw_ops.RandomGamma": "doc",
    "tensorflow.raw_ops.ReaderReset": "doc",
    "tensorflow.raw_ops.RefIdentity": "doc",
    "tensorflow.raw_ops.SaveDataset": "doc",
    "tensorflow.raw_ops.ScanDataset": "doc",
    "tensorflow.raw_ops.SkipDataset": "doc",
    "tensorflow.raw_ops.SobolSample": "doc",
    "tensorflow.raw_ops.SparseCross": "doc",
    "tensorflow.raw_ops.SparseSlice": "doc",
    "tensorflow.raw_ops.SparseSplit": "doc",
    "tensorflow.raw_ops.StackPushV2": "doc",
    "tensorflow.raw_ops.StatelessIf": "doc",
    "tensorflow.raw_ops.TakeDataset": "doc",
    "tensorflow.raw_ops.TensorArray": "doc",
    "tensorflow.raw_ops.TruncateDiv": "doc",
    "tensorflow.raw_ops.TruncateMod": "doc",
    "tensorflow.raw_ops.UnbatchGrad": "doc",
    "tensorflow.raw_ops.VarHandleOp": "doc",
    "tensorflow.sparse.SparseTensor": "doc",
    "tensorflow.sparse.cross_hashed": "doc",
    "tensorflow.control_dependencies": "doc",
    "tensorflow.data.TFRecordDataset": "doc",
    "tensorflow.dtypes.saturate_cast": "doc",
    "tensorflow.errors.DataLossError": "doc",
    "tensorflow.errors.InternalError": "doc",
    "tensorflow.estimator.FeedFnHook": "doc",
    "tensorflow.keras.optimizers.SGD": "doc",
    "tensorflow.optimizers.schedules": "doc",
    "tensorflow.raw_ops.ApplyRMSProp": "doc",
    "tensorflow.raw_ops.AudioSummary": "doc",
    "tensorflow.raw_ops.BarrierClose": "doc",
    "tensorflow.raw_ops.BatchDataset": "doc",
    "tensorflow.raw_ops.BatchToSpace": "doc",
    "tensorflow.raw_ops.CSVDatasetV2": "doc",
    "tensorflow.raw_ops.CacheDataset": "doc",
    "tensorflow.raw_ops.CholeskyGrad": "doc",
    "tensorflow.raw_ops.ConcatOffset": "doc",
    "tensorflow.raw_ops.DecodeBase64": "doc",
    "tensorflow.raw_ops.DepthToSpace": "doc",
    "tensorflow.raw_ops.EncodeBase64": "doc",
    "tensorflow.raw_ops.GreaterEqual": "doc",
    "tensorflow.raw_ops.ImageSummary": "doc",
    "tensorflow.raw_ops.MakeIterator": "doc",
    "tensorflow.raw_ops.MergeSummary": "doc",
    "tensorflow.raw_ops.ModelDataset": "doc",
    "tensorflow.raw_ops.ParseExample": "doc",
    "tensorflow.raw_ops.QuantizedAdd": "doc",
    "tensorflow.raw_ops.QuantizedMul": "doc",
    "tensorflow.raw_ops.QueueCloseV2": "doc",
    "tensorflow.raw_ops.QueueDequeue": "doc",
    "tensorflow.raw_ops.QueueEnqueue": "doc",
    "tensorflow.raw_ops.RangeDataset": "doc",
    "tensorflow.raw_ops.ReaderReadV2": "doc",
    "tensorflow.raw_ops.RegexReplace": "doc",
    "tensorflow.raw_ops.ScatterNdAdd": "doc",
    "tensorflow.raw_ops.ScatterNdMax": "doc",
    "tensorflow.raw_ops.ScatterNdMin": "doc",
    "tensorflow.raw_ops.ScatterNdSub": "doc",
    "tensorflow.raw_ops.ShardDataset": "doc",
    "tensorflow.raw_ops.SleepDataset": "doc",
    "tensorflow.raw_ops.SoftplusGrad": "doc",
    "tensorflow.raw_ops.SpaceToBatch": "doc",
    "tensorflow.raw_ops.SpaceToDepth": "doc",
    "tensorflow.raw_ops.SparseConcat": "doc",
    "tensorflow.raw_ops.SparseMatMul": "doc",
    "tensorflow.raw_ops.StackCloseV2": "doc",
    "tensorflow.raw_ops.StridedSlice": "doc",
    "tensorflow.raw_ops.UnravelIndex": "doc",
    "tensorflow.raw_ops.WriteSummary": "doc",
    "tensorflow.summary.trace_export": "doc",
    "tensorflow.type_spec_from_value": "doc",
    "tensorflow.errors.CancelledError": "doc",
    "tensorflow.estimator.add_metrics": "doc",
    "tensorflow.initializers.HeNormal": "doc",
    "tensorflow.keras.mixed_precision": "doc",
    "tensorflow.keras.optimizers.Adam": "doc",
    "tensorflow.keras.optimizers.Ftrl": "doc",
    "tensorflow.nest.pack_sequence_as": "doc",
    "tensorflow.raw_ops.AccumulateNV2": "doc",
    "tensorflow.raw_ops.ApplyAdadelta": "doc",
    "tensorflow.raw_ops.AvgPool3DGrad": "doc",
    "tensorflow.raw_ops.BatchCholesky": "doc",
    "tensorflow.raw_ops.BatchFunction": "doc",
    "tensorflow.raw_ops.BatchMatMulV2": "doc",
    "tensorflow.raw_ops.CheckNumerics": "doc",
    "tensorflow.raw_ops.DecodeProtoV2": "doc",
    "tensorflow.raw_ops.DynamicStitch": "doc",
    "tensorflow.raw_ops.FilterDataset": "doc",
    "tensorflow.raw_ops.InfeedDequeue": "doc",
    "tensorflow.raw_ops.InfeedEnqueue": "doc",
    "tensorflow.raw_ops.InplaceUpdate": "doc",
    "tensorflow.raw_ops.LeakyReluGrad": "doc",
    "tensorflow.raw_ops.MatrixSolveLs": "doc",
    "tensorflow.raw_ops.MaxPool3DGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradV2": "doc",
    "tensorflow.raw_ops.MirrorPadGrad": "doc",
    "tensorflow.raw_ops.NcclAllReduce": "doc",
    "tensorflow.raw_ops.NextIteration": "doc",
    "tensorflow.raw_ops.PriorityQueue": "doc",
    "tensorflow.raw_ops.QuantizedRelu": "doc",
    "tensorflow.raw_ops.QueueIsClosed": "doc",
    "tensorflow.raw_ops.RandomDataset": "doc",
    "tensorflow.raw_ops.RandomShuffle": "doc",
    "tensorflow.raw_ops.ReaderResetV2": "doc",
    "tensorflow.raw_ops.ReduceDataset": "doc",
    "tensorflow.raw_ops.RepeatDataset": "doc",
    "tensorflow.raw_ops.ResizeBicubic": "doc",
    "tensorflow.raw_ops.ScalarSummary": "doc",
    "tensorflow.raw_ops.ScatterUpdate": "doc",
    "tensorflow.raw_ops.SdcaOptimizer": "doc",
    "tensorflow.raw_ops.SparseAddGrad": "doc",
    "tensorflow.raw_ops.SparseCrossV2": "doc",
    "tensorflow.raw_ops.SparseReorder": "doc",
    "tensorflow.raw_ops.SparseReshape": "doc",
    "tensorflow.raw_ops.SparseSoftmax": "doc",
    "tensorflow.raw_ops.SparseToDense": "doc",
    "tensorflow.raw_ops.StatelessCase": "doc",
    "tensorflow.raw_ops.SummaryWriter": "doc",
    "tensorflow.raw_ops.TensorArrayV2": "doc",
    "tensorflow.raw_ops.TensorArrayV3": "doc",
    "tensorflow.raw_ops.TensorDataset": "doc",
    "tensorflow.raw_ops.TensorSummary": "doc",
    "tensorflow.raw_ops.UnicodeDecode": "doc",
    "tensorflow.raw_ops.UniqueDataset": "doc",
    "tensorflow.raw_ops.VariableShape": "doc",
    "tensorflow.raw_ops.WindowDataset": "doc",
    "tensorflow.summary.SummaryWriter": "doc",
    "tensorflow.tensor_scatter_nd_add": "doc",
    "tensorflow.tensor_scatter_nd_max": "doc",
    "tensorflow.tensor_scatter_nd_min": "doc",
    "tensorflow.tensor_scatter_nd_sub": "doc",
    "tensorflow.broadcast_static_shape": "doc",
    "tensorflow.distribute.TPUStrategy": "doc",
    "tensorflow.estimator.BestExporter": "doc",
    "tensorflow.estimator.DNNEstimator": "doc",
    "tensorflow.estimator.DNNRegressor": "doc",
    "tensorflow.estimator.FinalOpsHook": "doc",
    "tensorflow.estimator.ProfilerHook": "doc",
    "tensorflow.extract_volume_patches": "doc",
    "tensorflow.initializers.he_normal": "doc",
    "tensorflow.keras.datasets.cifar10": "doc",
    "tensorflow.keras.datasets.reuters": "doc",
    "tensorflow.keras.optimizers.Nadam": "doc",
    "tensorflow.optimizers.deserialize": "doc",
    "tensorflow.raw_ops.AdjustContrast": "doc",
    "tensorflow.raw_ops.AudioSummaryV2": "doc",
    "tensorflow.raw_ops.BatchDatasetV2": "doc",
    "tensorflow.raw_ops.BatchToSpaceND": "doc",
    "tensorflow.raw_ops.CacheDatasetV2": "doc",
    "tensorflow.raw_ops.DatasetToGraph": "doc",
    "tensorflow.raw_ops.DeleteIterator": "doc",
    "tensorflow.raw_ops.ExtractGlimpse": "doc",
    "tensorflow.raw_ops.FlatMapDataset": "doc",
    "tensorflow.raw_ops.FusedBatchNorm": "doc",
    "tensorflow.raw_ops.FusedPadConv2D": "doc",
    "tensorflow.raw_ops.GuaranteeConst": "doc",
    "tensorflow.raw_ops.IdentityReader": "doc",
    "tensorflow.raw_ops.ImmutableConst": "doc",
    "tensorflow.raw_ops.OrderedMapPeek": "doc",
    "tensorflow.raw_ops.OrderedMapSize": "doc",
    "tensorflow.raw_ops.OutfeedDequeue": "doc",
    "tensorflow.raw_ops.OutfeedEnqueue": "doc",
    "tensorflow.raw_ops.ParseExampleV2": "doc",
    "tensorflow.raw_ops.QuantizedRelu6": "doc",
    "tensorflow.raw_ops.QuantizedReluX": "doc",
    "tensorflow.raw_ops.QueueDequeueV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueV2": "doc",
    "tensorflow.raw_ops.ReadVariableOp": "doc",
    "tensorflow.raw_ops.ReaderReadUpTo": "doc",
    "tensorflow.raw_ops.RebatchDataset": "doc",
    "tensorflow.raw_ops.ReciprocalGrad": "doc",
    "tensorflow.raw_ops.RegexFullMatch": "doc",
    "tensorflow.raw_ops.ResourceGather": "doc",
    "tensorflow.raw_ops.ShuffleDataset": "doc",
    "tensorflow.raw_ops.SpaceToBatchND": "doc",
    "tensorflow.raw_ops.TFRecordReader": "doc",
    "tensorflow.raw_ops.UnbatchDataset": "doc",
    "tensorflow.sparse.fill_empty_rows": "doc",
    "tensorflow.variable_creator_scope": "doc",
    "tensorflow.broadcast_dynamic_shape": "doc",
    "tensorflow.distribute.InputContext": "doc",
    "tensorflow.distribute.get_strategy": "doc",
    "tensorflow.distribute.has_strategy": "doc",
    "tensorflow.errors.UnavailableError": "doc",
    "tensorflow.estimator.EstimatorSpec": "doc",
    "tensorflow.estimator.FinalExporter": "doc",
    "tensorflow.estimator.NanTensorHook": "doc",
    "tensorflow.initializers.he_uniform": "doc",
    "tensorflow.keras.datasets.cifar100": "doc",
    "tensorflow.keras.initializers.Ones": "doc",
    "tensorflow.keras.optimizers.Adamax": "doc",
    "tensorflow.math.invert_permutation": "doc",
    "tensorflow.quantization.dequantize": "doc",
    "tensorflow.random.truncated_normal": "doc",
    "tensorflow.raw_ops.CheckNumericsV2": "doc",
    "tensorflow.raw_ops.DecodePaddedRaw": "doc",
    "tensorflow.raw_ops.InitializeTable": "doc",
    "tensorflow.raw_ops.IteratorGetNext": "doc",
    "tensorflow.raw_ops.MapUnstageNoKey": "doc",
    "tensorflow.raw_ops.MaxPoolGradGrad": "doc",
    "tensorflow.raw_ops.OneShotIterator": "doc",
    "tensorflow.raw_ops.OptimizeDataset": "doc",
    "tensorflow.raw_ops.OrderedMapClear": "doc",
    "tensorflow.raw_ops.OrderedMapStage": "doc",
    "tensorflow.raw_ops.PrefetchDataset": "doc",
    "tensorflow.raw_ops.PriorityQueueV2": "doc",
    "tensorflow.raw_ops.PyFuncStateless": "doc",
    "tensorflow.raw_ops.QuantizedMatMul": "doc",
    "tensorflow.raw_ops.RandomGammaGrad": "doc",
    "tensorflow.raw_ops.RegisterDataset": "doc",
    "tensorflow.raw_ops.ReverseSequence": "doc",
    "tensorflow.raw_ops.ScatterNdUpdate": "doc",
    "tensorflow.raw_ops.SdcaOptimizerV2": "doc",
    "tensorflow.raw_ops.SerializeSparse": "doc",
    "tensorflow.raw_ops.ShardedFilespec": "doc",
    "tensorflow.raw_ops.SnapshotDataset": "doc",
    "tensorflow.raw_ops.SparseApplyFtrl": "doc",
    "tensorflow.raw_ops.SparseMatrixAdd": "doc",
    "tensorflow.raw_ops.SparseMatrixMul": "doc",
    "tensorflow.raw_ops.SparseMatrixNNZ": "doc",
    "tensorflow.raw_ops.SparseReduceMax": "doc",
    "tensorflow.raw_ops.SparseReduceSum": "doc",
    "tensorflow.raw_ops.SparseSliceGrad": "doc",
    "tensorflow.raw_ops.StatefulUniform": "doc",
    "tensorflow.raw_ops.TFRecordDataset": "doc",
    "tensorflow.raw_ops.TensorArrayGrad": "doc",
    "tensorflow.raw_ops.TensorArrayPack": "doc",
    "tensorflow.raw_ops.TensorArrayRead": "doc",
    "tensorflow.raw_ops.TensorSummaryV2": "doc",
    "tensorflow.raw_ops.TruncatedNormal": "doc",
    "tensorflow.raw_ops.WorkerHeartbeat": "doc",
    "tensorflow.distribute.NcclAllReduce": "doc",
    "tensorflow.estimator.LatestExporter": "doc",
    "tensorflow.estimator.MultiClassHead": "doc",
    "tensorflow.estimator.MultiLabelHead": "doc",
    "tensorflow.estimator.StopAtStepHook": "doc",
    "tensorflow.initializers.Initializer": "doc",
    "tensorflow.initializers.LecunNormal": "doc",
    "tensorflow.initializers.deserialize": "doc",
    "tensorflow.keras.initializers.Zeros": "doc",
    "tensorflow.keras.initializers.zeros": "doc",
    "tensorflow.keras.optimizers.RMSprop": "doc",
    "tensorflow.queue.RandomShuffleQueue": "doc",
    "tensorflow.raw_ops.AdjustContrastv2": "doc",
    "tensorflow.raw_ops.AdjustSaturation": "doc",
    "tensorflow.raw_ops.ApproximateEqual": "doc",
    "tensorflow.raw_ops.AutoShardDataset": "doc",
    "tensorflow.raw_ops.BarrierReadySize": "doc",
    "tensorflow.raw_ops.BatchMatrixSolve": "doc",
    "tensorflow.raw_ops.CTCGreedyDecoder": "doc",
    "tensorflow.raw_ops.ConsumeMutexLock": "doc",
    "tensorflow.raw_ops.CudnnRNNBackprop": "doc",
    "tensorflow.raw_ops.DatasetFromGraph": "doc",
    "tensorflow.raw_ops.DatasetToGraphV2": "doc",
    "tensorflow.raw_ops.DecodeCompressed": "doc",
    "tensorflow.raw_ops.DummyMemoryCache": "doc",
    "tensorflow.raw_ops.DynamicPartition": "doc",
    "tensorflow.raw_ops.ExtractGlimpseV2": "doc",
    "tensorflow.raw_ops.ExtractJpegShape": "doc",
    "tensorflow.raw_ops.FusedBatchNormV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormV3": "doc",
    "tensorflow.raw_ops.GeneratorDataset": "doc",
    "tensorflow.raw_ops.IdentityReaderV2": "doc",
    "tensorflow.raw_ops.MatrixSquareRoot": "doc",
    "tensorflow.raw_ops.MutableHashTable": "doc",
    "tensorflow.raw_ops.OptionalGetValue": "doc",
    "tensorflow.raw_ops.OptionalHasValue": "doc",
    "tensorflow.raw_ops.OutfeedDequeueV2": "doc",
    "tensorflow.raw_ops.QuantizedBiasAdd": "doc",
    "tensorflow.raw_ops.QuantizedMaxPool": "doc",
    "tensorflow.raw_ops.QuantizedReshape": "doc",
    "tensorflow.raw_ops.QueueDequeueMany": "doc",
    "tensorflow.raw_ops.QueueDequeueUpTo": "doc",
    "tensorflow.raw_ops.QueueEnqueueMany": "doc",
    "tensorflow.raw_ops.ReaderReadUpToV2": "doc",
    "tensorflow.raw_ops.RebatchDatasetV2": "doc",
    "tensorflow.raw_ops.RefNextIteration": "doc",
    "tensorflow.raw_ops.ResourceGatherNd": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV2": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV3": "doc",
    "tensorflow.raw_ops.StridedSliceGrad": "doc",
    "tensorflow.raw_ops.TFRecordReaderV2": "doc",
    "tensorflow.raw_ops.TakeWhileDataset": "doc",
    "tensorflow.raw_ops.TensorArrayClose": "doc",
    "tensorflow.raw_ops.TensorArraySplit": "doc",
    "tensorflow.raw_ops.TensorScatterAdd": "doc",
    "tensorflow.raw_ops.TensorScatterMax": "doc",
    "tensorflow.raw_ops.TensorScatterSub": "doc",
    "tensorflow.tensor_scatter_nd_update": "doc",
    "tensorflow.errors.UnimplementedError": "doc",
    "tensorflow.estimator.BinaryClassHead": "doc",
    "tensorflow.estimator.LinearEstimator": "doc",
    "tensorflow.estimator.LinearRegressor": "doc",
    "tensorflow.estimator.StepCounterHook": "doc",
    "tensorflow.initializers.LecunUniform": "doc",
    "tensorflow.initializers.RandomNormal": "doc",
    "tensorflow.keras.optimizers.Adadelta": "doc",
    "tensorflow.raw_ops.AnonymousIterator": "doc",
    "tensorflow.raw_ops.AssertNextDataset": "doc",
    "tensorflow.raw_ops.BatchCholeskyGrad": "doc",
    "tensorflow.raw_ops.DatasetToTFRecord": "doc",
    "tensorflow.raw_ops.DecodeJSONExample": "doc",
    "tensorflow.raw_ops.DeserializeSparse": "doc",
    "tensorflow.raw_ops.DestroyResourceOp": "doc",
    "tensorflow.raw_ops.InitializeTableV2": "doc",
    "tensorflow.raw_ops.InterleaveDataset": "doc",
    "tensorflow.raw_ops.InvertPermutation": "doc",
    "tensorflow.raw_ops.LookupTableExport": "doc",
    "tensorflow.raw_ops.LookupTableImport": "doc",
    "tensorflow.raw_ops.MaxPool3DGradGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradV2": "doc",
    "tensorflow.raw_ops.OptimizeDatasetV2": "doc",
    "tensorflow.raw_ops.ResizeBicubicGrad": "doc",
    "tensorflow.raw_ops.ResourceApplyAdam": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrl": "doc",
    "tensorflow.raw_ops.SerializeIterator": "doc",
    "tensorflow.raw_ops.SnapshotDatasetV2": "doc",
    "tensorflow.raw_ops.SparseApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SparseCrossHashed": "doc",
    "tensorflow.raw_ops.SparseMatrixZeros": "doc",
    "tensorflow.raw_ops.TensorArrayGather": "doc",
    "tensorflow.raw_ops.TensorArrayGradV2": "doc",
    "tensorflow.raw_ops.TensorArrayGradV3": "doc",
    "tensorflow.raw_ops.TensorArrayReadV2": "doc",
    "tensorflow.raw_ops.TensorArrayReadV3": "doc",
    "tensorflow.raw_ops.ThreadPoolDataset": "doc",
    "tensorflow.raw_ops.WriteAudioSummary": "doc",
    "tensorflow.raw_ops.WriteGraphSummary": "doc",
    "tensorflow.raw_ops.WriteImageSummary": "doc",
    "tensorflow.test.create_local_cluster": "doc",
    "tensorflow.estimator.SummarySaverHook": "doc",
    "tensorflow.initializers.random_normal": "doc",
    "tensorflow.keras.optimizers.schedules": "doc",
    "tensorflow.math.reduce_euclidean_norm": "doc",
    "tensorflow.nest.assert_same_structure": "doc",
    "tensorflow.quantize_and_dequantize_v4": "doc",
    "tensorflow.raw_ops.BatchMatrixSolveLs": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV2": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV3": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsSize": "doc",
    "tensorflow.raw_ops.DataServiceDataset": "doc",
    "tensorflow.raw_ops.DummySeedGenerator": "doc",
    "tensorflow.raw_ops.FusedBatchNormGrad": "doc",
    "tensorflow.raw_ops.InfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.InfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.MapAndBatchDataset": "doc",
    "tensorflow.raw_ops.MutableHashTableV2": "doc",
    "tensorflow.raw_ops.PaddedBatchDataset": "doc",
    "tensorflow.raw_ops.ParallelMapDataset": "doc",
    "tensorflow.raw_ops.QueueDequeueManyV2": "doc",
    "tensorflow.raw_ops.QueueDequeueUpToV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueManyV2": "doc",
    "tensorflow.raw_ops.RandomShuffleQueue": "doc",
    "tensorflow.raw_ops.ReaderRestoreState": "doc",
    "tensorflow.raw_ops.ResourceScatterAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterDiv": "doc",
    "tensorflow.raw_ops.ResourceScatterMax": "doc",
    "tensorflow.raw_ops.ResourceScatterMul": "doc",
    "tensorflow.raw_ops.ResourceScatterSub": "doc",
    "tensorflow.raw_ops.SparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.SparseMatrixMatMul": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV2": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV3": "doc",
    "tensorflow.raw_ops.TensorArrayScatter": "doc",
    "tensorflow.raw_ops.VarIsInitializedOp": "doc",
    "tensorflow.raw_ops.WriteScalarSummary": "doc",
    "tensorflow.sparse.sparse_dense_matmul": "doc",
    "tensorflow.distribute.cluster_resolver": "doc",
    "tensorflow.errors.UnauthenticatedError": "doc",
    "tensorflow.keras.initializers.HeNormal": "doc",
    "tensorflow.keras.wrappers.scikit_learn": "doc",
    "tensorflow.raw_ops.AnonymousIteratorV2": "doc",
    "tensorflow.raw_ops.DeserializeIterator": "doc",
    "tensorflow.raw_ops.ExtractImagePatches": "doc",
    "tensorflow.raw_ops.IgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.LatencyStatsDataset": "doc",
    "tensorflow.raw_ops.LookupTableExportV2": "doc",
    "tensorflow.raw_ops.LookupTableImportV2": "doc",
    "tensorflow.raw_ops.LookupTableRemoveV2": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.OutfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.ParseExampleDataset": "doc",
    "tensorflow.raw_ops.ResourceApplyAdaMax": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SparseApplyAdadelta": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseAdd": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseDiv": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseMul": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRows": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmax": "doc",
    "tensorflow.raw_ops.SparseSparseMaximum": "doc",
    "tensorflow.raw_ops.TPUReplicatedOutput": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV2": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV3": "doc",
    "tensorflow.raw_ops.TensorScatterUpdate": "doc",
    "tensorflow.test.assert_equal_graph_def": "doc",
    "tensorflow.distribute.DistributedValues": "doc",
    "tensorflow.errors.DeadlineExceededError": "doc",
    "tensorflow.errors.PermissionDeniedError": "doc",
    "tensorflow.estimator.train_and_evaluate": "doc",
    "tensorflow.initializers.TruncatedNormal": "doc",
    "tensorflow.keras.initializers.he_normal": "doc",
    "tensorflow.keras.optimizers.deserialize": "doc",
    "tensorflow.random.all_candidate_sampler": "doc",
    "tensorflow.raw_ops.AnonymousMemoryCache": "doc",
    "tensorflow.raw_ops.ApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.CTCBeamSearchDecoder": "doc",
    "tensorflow.raw_ops.ChooseFastestDataset": "doc",
    "tensorflow.raw_ops.Conv2DBackpropFilter": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilter": "doc",
    "tensorflow.raw_ops.DataFormatVecPermute": "doc",
    "tensorflow.raw_ops.ExtractVolumePatches": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV3": "doc",
    "tensorflow.raw_ops.PaddedBatchDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelMapDatasetV2": "doc",
    "tensorflow.raw_ops.ParseSequenceExample": "doc",
    "tensorflow.raw_ops.RandomShuffleQueueV2": "doc",
    "tensorflow.raw_ops.RandomStandardNormal": "doc",
    "tensorflow.raw_ops.ReaderRestoreStateV2": "doc",
    "tensorflow.raw_ops.ReaderSerializeState": "doc",
    "tensorflow.raw_ops.RequantizePerChannel": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagrad": "doc",
    "tensorflow.raw_ops.ResourceApplyRMSProp": "doc",
    "tensorflow.raw_ops.ResourceScatterNdAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMax": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMin": "doc",
    "tensorflow.raw_ops.ResourceScatterNdSub": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.SparseTensorDenseAdd": "doc",
    "tensorflow.raw_ops.StaticRegexFullMatch": "doc",
    "tensorflow.raw_ops.TPUReplicateMetadata": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV2": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV3": "doc",
    "tensorflow.raw_ops.UnwrapDatasetVariant": "doc",
    "tensorflow.raw_ops.WriteRawProtoSummary": "doc",
    "tensorflow.data.FixedLengthRecordDataset": "doc",
    "tensorflow.distribute.DistributedDataset": "doc",
    "tensorflow.errors.ResourceExhaustedError": "doc",
    "tensorflow.estimator.export.ExportOutput": "doc",
    "tensorflow.feature_column.crossed_column": "doc",
    "tensorflow.feature_column.numeric_column": "doc",
    "tensorflow.initializers.truncated_normal": "doc",
    "tensorflow.keras.initializers.he_uniform": "doc",
    "tensorflow.raw_ops.AddSparseToTensorsMap": "doc",
    "tensorflow.raw_ops.BarrierIncompleteSize": "doc",
    "tensorflow.raw_ops.BoostedTreesBucketize": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInputV2": "doc",
    "tensorflow.raw_ops.CreateSummaryDbWriter": "doc",
    "tensorflow.raw_ops.DebugNumericSummaryV2": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNative": "doc",
    "tensorflow.raw_ops.DeserializeManySparse": "doc",
    "tensorflow.raw_ops.DummyIterationCounter": "doc",
    "tensorflow.raw_ops.FractionalMaxPoolGrad": "doc",
    "tensorflow.raw_ops.GroupByReducerDataset": "doc",
    "tensorflow.raw_ops.IsVariableInitialized": "doc",
    "tensorflow.raw_ops.MutableDenseHashTable": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTupleV2": "doc",
    "tensorflow.raw_ops.ParallelDynamicStitch": "doc",
    "tensorflow.raw_ops.ParseExampleDatasetV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantize": "doc",
    "tensorflow.raw_ops.QuantizedInstanceNorm": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighbor": "doc",
    "tensorflow.raw_ops.ResourceApplyAdadelta": "doc",
    "tensorflow.raw_ops.ResourceApplyMomentum": "doc",
    "tensorflow.raw_ops.ResourceScatterUpdate": "doc",
    "tensorflow.raw_ops.ScaleAndTranslateGrad": "doc",
    "tensorflow.raw_ops.SparseMatrixTranspose": "doc",
    "tensorflow.raw_ops.SparseReduceMaxSparse": "doc",
    "tensorflow.raw_ops.SparseReduceSumSparse": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanGrad": "doc",
    "tensorflow.raw_ops.StatelessRandomNormal": "doc",
    "tensorflow.raw_ops.WriteHistogramSummary": "doc",
    "tensorflow.distribute.DistributedIterator": "doc",
    "tensorflow.estimator.export.PredictOutput": "doc",
    "tensorflow.keras.initializers.Initializer": "doc",
    "tensorflow.keras.initializers.LecunNormal": "doc",
    "tensorflow.keras.initializers.deserialize": "doc",
    "tensorflow.raw_ops.AnonymousSeedGenerator": "doc",
    "tensorflow.raw_ops.BatchMatrixDeterminant": "doc",
    "tensorflow.raw_ops.BoostedTreesCenterBias": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToDense": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilterV2": "doc",
    "tensorflow.raw_ops.CropAndResizeGradBoxes": "doc",
    "tensorflow.raw_ops.DenseCountSparseOutput": "doc",
    "tensorflow.raw_ops.DenseToCSRSparseMatrix": "doc",
    "tensorflow.raw_ops.ExperimentalCSVDataset": "doc",
    "tensorflow.raw_ops.ExperimentalMapDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSqlDataset": "doc",
    "tensorflow.raw_ops.NonSerializableDataset": "doc",
    "tensorflow.raw_ops.OrderedMapUnstageNoKey": "doc",
    "tensorflow.raw_ops.ParseSequenceExampleV2": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRelu": "doc",
    "tensorflow.raw_ops.ReaderSerializeStateV2": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradV2": "doc",
    "tensorflow.raw_ops.ShutdownDistributedTPU": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNGrad": "doc",
    "tensorflow.raw_ops.StatefulStandardNormal": "doc",
    "tensorflow.raw_ops.StatelessRandomGammaV2": "doc",
    "tensorflow.raw_ops.StringToHashBucketFast": "doc",
    "tensorflow.distribute.ReductionToOneDevice": "doc",
    "tensorflow.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.feature_column.indicator_column": "doc",
    "tensorflow.keras.initializers.LecunUniform": "doc",
    "tensorflow.keras.initializers.RandomNormal": "doc",
    "tensorflow.raw_ops.CreateSummaryFileWriter": "doc",
    "tensorflow.raw_ops.ExperimentalLMDBDataset": "doc",
    "tensorflow.raw_ops.ExperimentalScanDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVars": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReader": "doc",
    "tensorflow.raw_ops.FusedResizeAndPadConv2D": "doc",
    "tensorflow.raw_ops.MutableDenseHashTableV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV3": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBias": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBias": "doc",
    "tensorflow.raw_ops.QuantizedResizeBilinear": "doc",
    "tensorflow.raw_ops.ResourceScatterNdUpdate": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrl": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDataset": "doc",
    "tensorflow.raw_ops.SparseCountSparseOutput": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRowsGrad": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmaxGrad": "doc",
    "tensorflow.raw_ops.SparseTensorDenseMatMul": "doc",
    "tensorflow.raw_ops.StatefulTruncatedNormal": "doc",
    "tensorflow.raw_ops.StatelessRandomNormalV2": "doc",
    "tensorflow.raw_ops.TensorListPushBackBatch": "doc",
    "tensorflow.raw_ops.UniformCandidateSampler": "doc",
    "tensorflow.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.feature_column.bucketized_column": "doc",
    "tensorflow.keras.initializers.random_normal": "doc",
    "tensorflow.nondifferentiable_batch_function": "doc",
    "tensorflow.optimizers.schedules.deserialize": "doc",
    "tensorflow.random.uniform_candidate_sampler": "doc",
    "tensorflow.raw_ops.AccumulatorSetGlobalStep": "doc",
    "tensorflow.raw_ops.AssertCardinalityDataset": "doc",
    "tensorflow.raw_ops.DenseToDenseSetOperation": "doc",
    "tensorflow.raw_ops.DestroyTemporaryVariable": "doc",
    "tensorflow.raw_ops.ExperimentalSleepDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDataset": "doc",
    "tensorflow.raw_ops.OrderedMapIncompleteSize": "doc",
    "tensorflow.raw_ops.PrivateThreadPoolDataset": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2D": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProduced": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseMatMul": "doc",
    "tensorflow.raw_ops.SparseTensorSliceDataset": "doc",
    "tensorflow.raw_ops.StatefulStandardNormalV2": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormal": "doc",
    "tensorflow.raw_ops.TensorArrayGradWithShape": "doc",
    "tensorflow.raw_ops.TensorStridedSliceUpdate": "doc",
    "tensorflow.raw_ops.UnicodeDecodeWithOffsets": "doc",
    "tensorflow.random.stateless_truncated_normal": "doc",
    "tensorflow.raw_ops.AccumulatorNumAccumulated": "doc",
    "tensorflow.raw_ops.AddManySparseToTensorsMap": "doc",
    "tensorflow.raw_ops.BytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixComponents": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParams": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonical": "doc",
    "tensorflow.raw_ops.DeleteMultiDeviceIterator": "doc",
    "tensorflow.raw_ops.DenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.DenseToSparseSetOperation": "doc",
    "tensorflow.raw_ops.DirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.ExperimentalRandomDataset": "doc",
    "tensorflow.raw_ops.ExperimentalUniqueDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReaderV2": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensors": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DPerChannel": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighborGrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrlV2": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDatasetV2": "doc",
    "tensorflow.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateEnsemble": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsemble": "doc",
    "tensorflow.raw_ops.ChooseFastestBranchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalRebatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalUnbatchDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDatasetV2": "doc",
    "tensorflow.raw_ops.InitializeTableFromDataset": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProducedV2": "doc",
    "tensorflow.raw_ops.ResourceApplyKerasMomentum": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.SparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseCholesky": "doc",
    "tensorflow.raw_ops.SparseToSparseSetOperation": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormalV2": "doc",
    "tensorflow.keras.initializers.truncated_normal": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParamsV2": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonicalV2": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensorsV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV3": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV4": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4Grad": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompleted": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdadelta": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyMomentum": "doc",
    "tensorflow.register_tensor_conversion_function": "doc",
    "tensorflow.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.quantization.quantize_and_dequantize": "doc",
    "tensorflow.raw_ops.AnonymousMultiDeviceIterator": "doc",
    "tensorflow.raw_ops.AnonymousRandomSeedGenerator": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeStatsSummary": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsembleV2": "doc",
    "tensorflow.raw_ops.ExperimentalAutoShardDataset": "doc",
    "tensorflow.raw_ops.ExperimentalTakeWhileDataset": "doc",
    "tensorflow.raw_ops.FixedUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.MaxIntraOpParallelismDataset": "doc",
    "tensorflow.raw_ops.ParameterizedTruncatedNormal": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRequantize": "doc",
    "tensorflow.raw_ops.ResourceApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.TakeManySparseFromTensorsMap": "doc",
    "tensorflow.errors.OperatorNotAllowedInGraphError": "doc",
    "tensorflow.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.raw_ops.BoostedTreesGetEnsembleStates": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToSparseTensor": "doc",
    "tensorflow.raw_ops.ExperimentalAssertNextDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetToTFRecord": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolDataset": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompletedV2": "doc",
    "tensorflow.raw_ops.SparseTensorToCSRSparseMatrix": "doc",
    "tensorflow.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.feature_column.make_parse_example_spec": "doc",
    "tensorflow.feature_column.sequence_numeric_column": "doc",
    "tensorflow.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseBatch": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetCardinality": "doc",
    "tensorflow.raw_ops.ExperimentalMapAndBatchDataset": "doc",
    "tensorflow.raw_ops.LearnedUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRelu": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRelu": "doc",
    "tensorflow.raw_ops.ResourceConditionalAccumulator": "doc",
    "tensorflow.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.raw_ops.BoostedTreesDeserializeEnsemble": "doc",
    "tensorflow.raw_ops.BoostedTreesExampleDebugOutputs": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingIntegerBatch": "doc",
    "tensorflow.raw_ops.ExperimentalIgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalLatencyStatsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalParseExampleDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgsGradient": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsGradient": "doc",
    "tensorflow.raw_ops.SparseSegmentSumWithNumSegments": "doc",
    "tensorflow.raw_ops.StatsAggregatorSetSummaryWriter": "doc",
    "tensorflow.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalization": "doc",
    "tensorflow.raw_ops.ExperimentalChooseFastestDataset": "doc",
    "tensorflow.raw_ops.InfeedEnqueuePrelinearizedBuffer": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBias": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorSetGlobalStep": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyKerasMomentum": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanWithNumSegments": "doc",
    "tensorflow.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeQuantileSummaries": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByReducerDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannel": "doc",
    "tensorflow.raw_ops.IsBoostedTreesEnsembleInitialized": "doc",
    "tensorflow.raw_ops.LegacyParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndRelu": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorNumAccumulated": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNWithNumSegments": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.raw_ops.BoostedTreesFlushQuantileSummaries": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropInput": "doc",
    "tensorflow.raw_ops.ExperimentalNonSerializableDataset": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropFilter": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorGetNextFromShard": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.SparseSoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.ThreadUnsafeUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.BoostedTreesEnsembleResourceHandleOp": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingRaggedTensorBatch": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseTensorBatch": "doc",
    "tensorflow.raw_ops.ExperimentalPrivateThreadPoolDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndDequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRequantize": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.ExperimentalBytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.ExperimentalParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.raw_ops.StatelessParameterizedTruncatedNormal": "doc",
    "tensorflow.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplitV2": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceFlush": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndRelu": "doc",
    "tensorflow.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestGainsPerFeature": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateQuantileStreamResource": "doc",
    "tensorflow.raw_ops.ExperimentalMaxIntraOpParallelismDataset": "doc",
    "tensorflow.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannelGradient": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.raw_ops.QuantizedBatchNormWithGlobalNormalization": "doc",
    "tensorflow.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceHandleOp": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceDeserialize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceAddSummaries": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.IsBoostedTreesQuantileStreamResourceInitialized": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSignedSumAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceGetBucketBoundaries": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc"
  },
  "tensorflow.set_random_seed": {
    "tensorflow.compat.v1.random.set_random_seed": "doc",
    "tensorflow.compat.v1.set_random_seed": "doc",
    "tensorflow.image.random_hue": "doc",
    "tensorflow.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.random.set_seed": "doc",
    "tensorflow.compat.v1.image.random_hue": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.image.stateless_random_hue": "doc",
    "tensorflow.image.stateless_random_crop": "doc",
    "tensorflow.image.random_crop": "doc",
    "tensorflow.compat.v1.get_seed": "doc",
    "tensorflow.compat.v1.random_crop": "doc",
    "tensorflow.compat.v1.random.get_seed": "doc",
    "tensorflow.compat.v1.image.random_crop": "doc",
    "tensorflow.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.debugging.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_at_least": "doc",
    "tensorflow.image.stateless_random_brightness": "doc",
    "tensorflow.image.stateless_random_saturation": "doc",
    "tensorflow.random": "doc",
    "tensorflow.transpose": "doc",
    "tensorflow.random.gamma": "doc",
    "tensorflow.searchsorted": "doc",
    "tensorflow.random.normal": "doc",
    "tensorflow.random.poisson": "doc",
    "tensorflow.random.shuffle": "doc",
    "tensorflow.random.uniform": "doc",
    "tensorflow.image.transpose": "doc",
    "tensorflow.random.Algorithm": "doc",
    "tensorflow.random.Generator": "doc",
    "tensorflow.sparse.transpose": "doc",
    "tensorflow.compat.v1.random": "doc",
    "tensorflow.random.categorical": "doc",
    "tensorflow.random.experimental": "doc",
    "tensorflow.compat.v1.transpose": "doc",
    "tensorflow.random.stateless_gamma": "doc",
    "tensorflow.compat.v1.random.gamma": "doc",
    "tensorflow.compat.v1.random_gamma": "doc",
    "tensorflow.compat.v1.searchsorted": "doc",
    "tensorflow.autograph.set_verbosity": "doc",
    "tensorflow.random.create_rng_state": "doc",
    "tensorflow.random.stateless_normal": "doc",
    "tensorflow.random.truncated_normal": "doc",
    "tensorflow.compat.v1.random.normal": "doc",
    "tensorflow.random.stateless_poisson": "doc",
    "tensorflow.random.stateless_uniform": "doc",
    "tensorflow.compat.v1.random.poisson": "doc",
    "tensorflow.compat.v1.random.shuffle": "doc",
    "tensorflow.compat.v1.random.uniform": "doc",
    "tensorflow.compat.v1.sets.set_union": "doc",
    "tensorflow.experimental.numpy.random": "doc",
    "tensorflow.random.stateless_binomial": "doc",
    "tensorflow.compat.v1.image.transpose": "doc",
    "tensorflow.compat.v1.linalg.transpose": "doc",
    "tensorflow.compat.v1.random.Algorithm": "doc",
    "tensorflow.compat.v1.random.Generator": "doc",
    "tensorflow.compat.v1.sparse.transpose": "doc",
    "tensorflow.random.get_global_generator": "doc",
    "tensorflow.random.set_global_generator": "doc",
    "tensorflow.compat.v1.losses.get_losses": "doc",
    "tensorflow.experimental.numpy.transpose": "doc",
    "tensorflow.random.all_candidate_sampler": "doc",
    "tensorflow.random.stateless_categorical": "doc",
    "tensorflow.compat.v1.random.categorical": "doc",
    "tensorflow.compat.v1.random.multinomial": "doc",
    "tensorflow.random.experimental.Algorithm": "doc",
    "tensorflow.random.experimental.Generator": "doc",
    "tensorflow.summary.experimental.set_step": "doc",
    "tensorflow.compat.v1.random.experimental": "doc",
    "tensorflow.experimental.numpy.random.rand": "doc",
    "tensorflow.experimental.numpy.random.seed": "doc",
    "tensorflow.experimental.numpy.random.randn": "doc",
    "tensorflow.image.stateless_random_contrast": "doc",
    "tensorflow.compat.v1.logging.set_verbosity": "doc",
    "tensorflow.compat.v1.train.get_global_step": "doc",
    "tensorflow.experimental.numpy.random.random": "doc",
    "tensorflow.random.uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.stateless_gamma": "doc",
    "tensorflow.experimental.numpy.random.randint": "doc",
    "tensorflow.experimental.numpy.random.uniform": "doc",
    "tensorflow.random.stateless_truncated_normal": "doc",
    "tensorflow.compat.v1.autograph.set_verbosity": "doc",
    "tensorflow.compat.v1.random.create_rng_state": "doc",
    "tensorflow.compat.v1.random.stateless_normal": "doc",
    "tensorflow.compat.v1.random.truncated_normal": "doc",
    "tensorflow.compat.v1.random.stateless_poisson": "doc",
    "tensorflow.compat.v1.random.stateless_uniform": "doc",
    "tensorflow.random.experimental.stateless_split": "doc",
    "tensorflow.compat.v1.random.stateless_binomial": "doc",
    "tensorflow.random.experimental.create_rng_state": "doc",
    "tensorflow.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.random.experimental.stateless_fold_in": "doc",
    "tensorflow.compat.v1.random.get_global_generator": "doc",
    "tensorflow.compat.v1.random.set_global_generator": "doc",
    "tensorflow.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.all_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.stateless_categorical": "doc",
    "tensorflow.compat.v1.random.stateless_multinomial": "doc",
    "tensorflow.compat.v1.random.experimental.Algorithm": "doc",
    "tensorflow.compat.v1.random.experimental.Generator": "doc",
    "tensorflow.random.experimental.get_global_generator": "doc",
    "tensorflow.random.experimental.set_global_generator": "doc",
    "tensorflow.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.stateless_truncated_normal": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_split": "doc",
    "tensorflow.compat.v1.random.experimental.create_rng_state": "doc",
    "tensorflow.compat.v1.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_fold_in": "doc",
    "tensorflow.compat.v1.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.experimental.get_global_generator": "doc",
    "tensorflow.compat.v1.random.experimental.set_global_generator": "doc",
    "tensorflow.compat.v1.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.keras.utils.get_custom_objects": "doc",
    "tensorflow.compat.v1.train.assert_global_step": "doc",
    "tensorflow.data.experimental.get_single_element": "doc",
    "tensorflow.compat.v1.keras.utils.get_custom_objects": "doc",
    "tensorflow.compat.v1.data.experimental.get_single_element": "doc",
    "tensorflow.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.image.stateless_random_flip_up_down": "doc",
    "tensorflow.image.stateless_random_jpeg_quality": "doc",
    "tensorflow.config.set_visible_devices": "doc",
    "tensorflow.compat.v1.config.set_visible_devices": "doc",
    "tensorflow.config.experimental.set_visible_devices": "doc",
    "tensorflow.compat.v1.config.experimental.set_visible_devices": "doc",
    "tensorflow.raw_ops.DeleteRandomSeedGenerator": "doc",
    "tensorflow.compat.v1.train.get_or_create_global_step": "doc",
    "tensorflow.compat.v1.losses.get_regularization_losses": "doc",
    "tensorflow.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.compat.v1.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.io.decode_compressed": "doc",
    "tensorflow.compat.v1.decode_compressed": "doc",
    "tensorflow.compat.v1.io.decode_compressed": "doc",
    "tensorflow.compat.v1.data.get_output_shapes": "doc",
    "tensorflow.compat.v1.test.test_src_dir_path": "doc",
    "tensorflow.io.decode_and_crop_jpeg": "doc",
    "tensorflow.image.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.io.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.image.decode_and_crop_jpeg": "doc",
    "tensorflow.image.stateless_random_flip_left_right": "doc",
    "tensorflow.strings": "doc",
    "tensorflow.get_logger": "doc",
    "tensorflow.expand_dims": "doc",
    "tensorflow.strings.join": "doc",
    "tensorflow.saturate_cast": "doc",
    "tensorflow.strided_slice": "doc",
    "tensorflow.strings.lower": "doc",
    "tensorflow.strings.split": "doc",
    "tensorflow.strings.strip": "doc",
    "tensorflow.strings.upper": "doc",
    "tensorflow.nest.is_nested": "doc",
    "tensorflow.strings.format": "doc",
    "tensorflow.strings.length": "doc",
    "tensorflow.strings.ngrams": "doc",
    "tensorflow.strings.substr": "doc",
    "tensorflow.linalg.set_diag": "doc",
    "tensorflow.math.segment_sum": "doc",
    "tensorflow.data.IteratorSpec": "doc",
    "tensorflow.math.segment_mean": "doc",
    "tensorflow.math.segment_prod": "doc",
    "tensorflow.raw_ops.Transpose": "doc",
    "tensorflow.strings.as_string": "doc",
    "tensorflow.strings.to_number": "doc",
    "tensorflow.compat.v1.strings": "doc",
    "tensorflow.raw_ops.RandomCrop": "doc",
    "tensorflow.raw_ops.ReaderRead": "doc",
    "tensorflow.sparse.expand_dims": "doc",
    "tensorflow.sparse.segment_sum": "doc",
    "tensorflow.raw_ops.RandomGamma": "doc",
    "tensorflow.raw_ops.ReaderReset": "doc",
    "tensorflow.sparse.segment_mean": "doc",
    "tensorflow.strings.bytes_split": "doc",
    "tensorflow.strings.reduce_join": "doc",
    "tensorflow.compat.v1.setdiff1d": "doc",
    "tensorflow.dtypes.saturate_cast": "doc",
    "tensorflow.compat.v1.get_logger": "doc",
    "tensorflow.strings.regex_replace": "doc",
    "tensorflow.strings.unicode_split": "doc",
    "tensorflow.sysconfig.get_include": "doc",
    "tensorflow.compat.v1.expand_dims": "doc",
    "tensorflow.compat.v1.segment_sum": "doc",
    "tensorflow.compat.v1.string_join": "doc",
    "tensorflow.strings.to_hash_bucket": "doc",
    "tensorflow.strings.unicode_decode": "doc",
    "tensorflow.strings.unicode_encode": "doc",
    "tensorflow.strings.unicode_script": "doc",
    "tensorflow.compat.v1.get_variable": "doc",
    "tensorflow.compat.v1.segment_mean": "doc",
    "tensorflow.compat.v1.segment_prod": "doc",
    "tensorflow.compat.v1.string_split": "doc",
    "tensorflow.compat.v1.string_strip": "doc",
    "tensorflow.compat.v1.strings.join": "doc",
    "tensorflow.compat.v1.random_normal": "doc",
    "tensorflow.compat.v1.saturate_cast": "doc",
    "tensorflow.compat.v1.sets.set_size": "doc",
    "tensorflow.compat.v1.strided_slice": "doc",
    "tensorflow.compat.v1.strings.lower": "doc",
    "tensorflow.compat.v1.strings.split": "doc",
    "tensorflow.compat.v1.strings.strip": "doc",
    "tensorflow.compat.v1.strings.upper": "doc",
    "tensorflow.debugging.assert_rank_in": "doc",
    "tensorflow.keras.backend.set_floatx": "doc",
    "tensorflow.nn.all_candidate_sampler": "doc",
    "tensorflow.strings.regex_full_match": "doc",
    "tensorflow.compat.v1.assert_rank_in": "doc",
    "tensorflow.compat.v1.nest.is_nested": "doc",
    "tensorflow.compat.v1.random_poisson": "doc",
    "tensorflow.compat.v1.random_shuffle": "doc",
    "tensorflow.compat.v1.scatter_nd_add": "doc",
    "tensorflow.compat.v1.scatter_nd_sub": "doc",
    "tensorflow.compat.v1.strings.format": "doc",
    "tensorflow.compat.v1.strings.length": "doc",
    "tensorflow.compat.v1.strings.ngrams": "doc",
    "tensorflow.compat.v1.strings.substr": "doc",
    "tensorflow.strings.unicode_transcode": "doc",
    "tensorflow.compat.v1.linalg.set_diag": "doc",
    "tensorflow.experimental.numpy.string_": "doc",
    "tensorflow.initializers.random_normal": "doc",
    "tensorflow.compat.v1.math.segment_sum": "doc",
    "tensorflow.strings.to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.math.segment_mean": "doc",
    "tensorflow.compat.v1.math.segment_prod": "doc",
    "tensorflow.compat.v1.strings.as_string": "doc",
    "tensorflow.compat.v1.strings.to_number": "doc",
    "tensorflow.compat.v1.get_session_handle": "doc",
    "tensorflow.compat.v1.get_session_tensor": "doc",
    "tensorflow.compat.v1.get_variable_scope": "doc",
    "tensorflow.compat.v1.sparse.expand_dims": "doc",
    "tensorflow.compat.v1.sparse.segment_sum": "doc",
    "tensorflow.strings.to_hash_bucket_strong": "doc",
    "tensorflow.strings.unsorted_segment_join": "doc",
    "tensorflow.summary.experimental.get_step": "doc",
    "tensorflow.compat.v1.sets.set_difference": "doc",
    "tensorflow.compat.v1.sparse.segment_mean": "doc",
    "tensorflow.compat.v1.strings.bytes_split": "doc",
    "tensorflow.compat.v1.strings.reduce_join": "doc",
    "tensorflow.experimental.numpy.expand_dims": "doc",
    "tensorflow.compat.v1.dtypes.saturate_cast": "doc",
    "tensorflow.compat.v1.logging.get_verbosity": "doc",
    "tensorflow.compat.v1.strings.regex_replace": "doc",
    "tensorflow.compat.v1.strings.unicode_split": "doc",
    "tensorflow.compat.v1.sysconfig.get_include": "doc",
    "tensorflow.keras.initializers.random_normal": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket": "doc",
    "tensorflow.compat.v1.strings.unicode_decode": "doc",
    "tensorflow.compat.v1.strings.unicode_encode": "doc",
    "tensorflow.compat.v1.strings.unicode_script": "doc",
    "tensorflow.compat.v1.data.get_output_classes": "doc",
    "tensorflow.debugging.set_log_device_placement": "doc",
    "tensorflow.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.strings.unicode_split_with_offsets": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_in": "doc",
    "tensorflow.compat.v1.keras.backend.set_floatx": "doc",
    "tensorflow.compat.v1.nn.all_candidate_sampler": "doc",
    "tensorflow.compat.v1.strings.regex_full_match": "doc",
    "tensorflow.compat.v1.train.create_global_step": "doc",
    "tensorflow.keras.backend.set_image_data_format": "doc",
    "tensorflow.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.compat.v1.keras.backend.set_session": "doc",
    "tensorflow.compat.v1.strings.unicode_transcode": "doc",
    "tensorflow.data.experimental.assert_cardinality": "doc",
    "tensorflow.compat.v1.graph_util.must_run_on_cpu": "doc",
    "tensorflow.compat.v1.initializers.random_normal": "doc",
    "tensorflow.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.train.replica_device_setter": "doc",
    "tensorflow.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_strong": "doc",
    "tensorflow.compat.v1.strings.unsorted_segment_join": "doc",
    "tensorflow.compat.v1.graph_util.remove_training_nodes": "doc",
    "tensorflow.compat.v1.keras.initializers.random_normal": "doc",
    "tensorflow.compat.v1.debugging.set_log_device_placement": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.compat.v1.strings.unicode_split_with_offsets": "doc",
    "tensorflow.keras.mixed_precision.experimental.set_policy": "doc",
    "tensorflow.compat.v1.keras.backend.set_image_data_format": "doc",
    "tensorflow.compat.v1.layers.experimental.set_keras_style": "doc",
    "tensorflow.compat.v1.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.compat.v1.data.experimental.assert_cardinality": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.compat.v1.assert_variables_initialized": "doc",
    "tensorflow.config.set_soft_device_placement": "doc",
    "tensorflow.raw_ops.ExperimentalRandomDataset": "doc",
    "tensorflow.compat.v1.config.set_soft_device_placement": "doc",
    "tensorflow.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.compat.v1.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.raw_ops.StatelessRandomPoisson": "doc",
    "tensorflow.config.get_visible_devices": "doc",
    "tensorflow.debugging.assert_non_positive": "doc",
    "tensorflow.compat.v1.assert_non_positive": "doc",
    "tensorflow.compat.v1.get_default_session": "doc",
    "tensorflow.distribute.get_replica_context": "doc",
    "tensorflow.keras.utils.get_registered_name": "doc",
    "tensorflow.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.compat.v1.config.get_visible_devices": "doc",
    "tensorflow.config.experimental.get_visible_devices": "doc",
    "tensorflow.compat.v1.debugging.assert_non_positive": "doc",
    "tensorflow.compat.v1.distribute.get_replica_context": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_name": "doc",
    "tensorflow.compat.v1.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.compat.v1.config.experimental.get_visible_devices": "doc",
    "tensorflow.nn.separable_conv2d": "doc",
    "tensorflow.raw_ops.DecodeCompressed": "doc",
    "tensorflow.raw_ops.ExtractGlimpseV2": "doc",
    "tensorflow.compat.v1.self_adjoint_eig": "doc",
    "tensorflow.compat.v1.sparse_transpose": "doc",
    "tensorflow.compat.v1.nn.separable_conv2d": "doc",
    "tensorflow.compat.v1.data.get_output_types": "doc",
    "tensorflow.compat.v1.sets.set_intersection": "doc",
    "tensorflow.compat.v1.layers.separable_conv1d": "doc",
    "tensorflow.compat.v1.layers.separable_conv2d": "doc",
    "tensorflow.config.experimental.get_memory_usage": "doc",
    "tensorflow.autograph.experimental.set_loop_options": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_usage": "doc",
    "tensorflow.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.autograph.experimental.set_loop_options": "doc",
    "tensorflow.compat.v1.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.image.resize_with_crop_or_pad": "doc",
    "tensorflow.linalg.banded_triangular_solve": "doc",
    "tensorflow.debugging.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.matrix_triangular_solve": "doc",
    "tensorflow.compat.v1.image.resize_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.losses.get_regularization_loss": "doc",
    "tensorflow.compat.v1.debugging.assert_same_float_dtype": "doc",
    "tensorflow.test.create_local_cluster": "doc",
    "tensorflow.train.get_checkpoint_state": "doc",
    "tensorflow.debugging.assert_greater_equal": "doc",
    "tensorflow.compat.v1.assert_greater_equal": "doc",
    "tensorflow.compat.v1.test.create_local_cluster": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_state": "doc",
    "tensorflow.data.experimental.choose_from_datasets": "doc",
    "tensorflow.data.experimental.sample_from_datasets": "doc",
    "tensorflow.compat.v1.debugging.assert_greater_equal": "doc",
    "tensorflow.compat.v1.data.experimental.choose_from_datasets": "doc",
    "tensorflow.compat.v1.data.experimental.sample_from_datasets": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompleted": "doc",
    "tensorflow.keras.preprocessing.text_dataset_from_directory": "doc",
    "tensorflow.compat.v1.saved_model.get_tensor_from_tensor_info": "doc",
    "tensorflow.compat.v1.saved_model.utils.get_tensor_from_tensor_info": "doc",
    "tensorflow.compat.v1.scatter_nd_update": "doc",
    "tensorflow.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.compat.v1.train.natural_exp_decay": "doc",
    "tensorflow.config.experimental.set_device_policy": "doc",
    "tensorflow.config.experimental.set_memory_growth": "doc",
    "tensorflow.keras.mixed_precision.set_global_policy": "doc",
    "tensorflow.compat.v1.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.compat.v1.config.experimental.set_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.set_memory_growth": "doc",
    "tensorflow.raw_ops.OrderedMapIncompleteSize": "doc",
    "tensorflow.debugging.get_log_device_placement": "doc",
    "tensorflow.config.optimizer.set_experimental_options": "doc",
    "tensorflow.compat.v1.debugging.get_log_device_placement": "doc",
    "tensorflow.compat.v1.config.optimizer.set_experimental_options": "doc",
    "tensorflow.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.config.run_functions_eagerly": "doc",
    "tensorflow.raw_ops.BarrierIncompleteSize": "doc",
    "tensorflow.raw_ops.StatelessRandomNormal": "doc",
    "tensorflow.compat.v1.delete_session_tensor": "doc",
    "tensorflow.keras.utils.get_registered_object": "doc",
    "tensorflow.compat.v1.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_mtimes": "doc",
    "tensorflow.compat.v1.config.run_functions_eagerly": "doc",
    "tensorflow.compat.v1.app.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_object": "doc",
    "tensorflow.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.config.get_soft_device_placement": "doc",
    "tensorflow.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.compat.v1.nn.uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.config.get_soft_device_placement": "doc",
    "tensorflow.compat.v1.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.nn.ctc_greedy_decoder": "doc",
    "tensorflow.summary.create_noop_writer": "doc",
    "tensorflow.compat.v1.get_collection_ref": "doc",
    "tensorflow.compat.v1.nn.ctc_greedy_decoder": "doc",
    "tensorflow.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.config.experimental.get_device_details": "doc",
    "tensorflow.compat.v1.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.compat.v1.keras.experimental.export_saved_model": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_details": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompletedV2": "doc",
    "tensorflow.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.compat.v1.nn.log_uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.compat.v1.lite.experimental.get_potentially_supported_ops": "doc",
    "tensorflow.extract_volume_patches": "doc",
    "tensorflow.test.assert_equal_graph_def": "doc",
    "tensorflow.signal.inverse_stft_window_fn": "doc",
    "tensorflow.raw_ops.DatasetToSingleElement": "doc",
    "tensorflow.raw_ops.StatefulRandomBinomial": "doc",
    "tensorflow.raw_ops.StatelessRandomGammaV2": "doc",
    "tensorflow.raw_ops.StatelessRandomUniform": "doc",
    "tensorflow.debugging.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.extract_volume_patches": "doc",
    "tensorflow.compat.v1.sparse_tensor_to_dense": "doc",
    "tensorflow.keras.utils.serialize_keras_object": "doc",
    "tensorflow.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.test.assert_equal_graph_def": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.signal.inverse_stft_window_fn": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.debugging.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.keras.utils.serialize_keras_object": "doc",
    "tensorflow.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.compat.v1.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.raw_ops.ChooseFastestBranchDataset": "doc",
    "tensorflow.compat.v1.resource_variables_enabled": "doc",
    "tensorflow.compat.v1.sparse_tensor_dense_matmul": "doc",
    "tensorflow.sets": "doc",
    "tensorflow.keras": "doc",
    "tensorflow.range": "doc",
    "tensorflow.zeros": "doc",
    "tensorflow.errors": "doc",
    "tensorflow.ragged": "doc",
    "tensorflow.sparse": "doc",
    "tensorflow.metrics": "doc",
    "tensorflow.raw_ops": "doc",
    "tensorflow.reverse": "doc",
    "tensorflow.hessians": "doc",
    "tensorflow.estimator": "doc",
    "tensorflow.sets.size": "doc",
    "tensorflow.TensorSpec": "doc",
    "tensorflow.raw_ops.If": "doc",
    "tensorflow.raw_ops.Lu": "doc",
    "tensorflow.raw_ops.Qr": "doc",
    "tensorflow.scatter_nd": "doc",
    "tensorflow.sets.union": "doc",
    "tensorflow.sparse.add": "doc",
    "tensorflow.sparse.eye": "doc",
    "tensorflow.zeros_like": "doc",
    "tensorflow.assert_rank": "doc",
    "tensorflow.keras.Input": "doc",
    "tensorflow.keras.Model": "doc",
    "tensorflow.keras.utils": "doc",
    "tensorflow.metrics.AUC": "doc",
    "tensorflow.metrics.KLD": "doc",
    "tensorflow.metrics.MAE": "doc",
    "tensorflow.metrics.MSE": "doc",
    "tensorflow.metrics.Sum": "doc",
    "tensorflow.metrics.get": "doc",
    "tensorflow.metrics.kld": "doc",
    "tensorflow.metrics.mae": "doc",
    "tensorflow.metrics.mse": "doc",
    "tensorflow.no_gradient": "doc",
    "tensorflow.raw_ops.Abs": "doc",
    "tensorflow.raw_ops.Add": "doc",
    "tensorflow.raw_ops.All": "doc",
    "tensorflow.raw_ops.Any": "doc",
    "tensorflow.raw_ops.Cos": "doc",
    "tensorflow.raw_ops.Div": "doc",
    "tensorflow.raw_ops.Eig": "doc",
    "tensorflow.raw_ops.Elu": "doc",
    "tensorflow.raw_ops.Erf": "doc",
    "tensorflow.raw_ops.Exp": "doc",
    "tensorflow.raw_ops.FFT": "doc",
    "tensorflow.raw_ops.For": "doc",
    "tensorflow.raw_ops.Inv": "doc",
    "tensorflow.raw_ops.LRN": "doc",
    "tensorflow.raw_ops.Log": "doc",
    "tensorflow.raw_ops.Max": "doc",
    "tensorflow.raw_ops.Min": "doc",
    "tensorflow.raw_ops.Mod": "doc",
    "tensorflow.raw_ops.Mul": "doc",
    "tensorflow.raw_ops.Neg": "doc",
    "tensorflow.raw_ops.Pad": "doc",
    "tensorflow.raw_ops.Pow": "doc",
    "tensorflow.raw_ops.Sin": "doc",
    "tensorflow.raw_ops.Sub": "doc",
    "tensorflow.raw_ops.Sum": "doc",
    "tensorflow.raw_ops.Svd": "doc",
    "tensorflow.raw_ops.Tan": "doc",
    "tensorflow.saved_model": "doc",
    "tensorflow.sparse.mask": "doc",
    "tensorflow.truncatemod": "doc",
    "tensorflow.boolean_mask": "doc",
    "tensorflow.data.Dataset": "doc",
    "tensorflow.io.read_file": "doc",
    "tensorflow.keras.layers": "doc",
    "tensorflow.keras.losses": "doc",
    "tensorflow.keras.models": "doc",
    "tensorflow.linalg.trace": "doc",
    "tensorflow.metrics.MAPE": "doc",
    "tensorflow.metrics.MSLE": "doc",
    "tensorflow.metrics.Mean": "doc",
    "tensorflow.metrics.mape": "doc",
    "tensorflow.metrics.msle": "doc",
    "tensorflow.nn.erosion2d": "doc",
    "tensorflow.ragged.cross": "doc",
    "tensorflow.ragged.range": "doc",
    "tensorflow.ragged.stack": "doc",
    "tensorflow.raw_ops.Acos": "doc",
    "tensorflow.raw_ops.AddN": "doc",
    "tensorflow.raw_ops.Asin": "doc",
    "tensorflow.raw_ops.Atan": "doc",
    "tensorflow.raw_ops.Case": "doc",
    "tensorflow.raw_ops.Cast": "doc",
    "tensorflow.raw_ops.Ceil": "doc",
    "tensorflow.raw_ops.Conj": "doc",
    "tensorflow.raw_ops.Copy": "doc",
    "tensorflow.raw_ops.Cosh": "doc",
    "tensorflow.raw_ops.Diag": "doc",
    "tensorflow.raw_ops.Erfc": "doc",
    "tensorflow.raw_ops.Exit": "doc",
    "tensorflow.raw_ops.Fact": "doc",
    "tensorflow.raw_ops.Fill": "doc",
    "tensorflow.raw_ops.IFFT": "doc",
    "tensorflow.raw_ops.Imag": "doc",
    "tensorflow.raw_ops.Less": "doc",
    "tensorflow.raw_ops.Mean": "doc",
    "tensorflow.raw_ops.Mfcc": "doc",
    "tensorflow.raw_ops.NoOp": "doc",
    "tensorflow.raw_ops.Pack": "doc",
    "tensorflow.raw_ops.Prod": "doc",
    "tensorflow.raw_ops.RFFT": "doc",
    "tensorflow.raw_ops.Rank": "doc",
    "tensorflow.raw_ops.Real": "doc",
    "tensorflow.raw_ops.Recv": "doc",
    "tensorflow.raw_ops.Relu": "doc",
    "tensorflow.raw_ops.Rint": "doc",
    "tensorflow.raw_ops.Roll": "doc",
    "tensorflow.raw_ops.Save": "doc",
    "tensorflow.raw_ops.Selu": "doc",
    "tensorflow.raw_ops.Send": "doc",
    "tensorflow.raw_ops.Sign": "doc",
    "tensorflow.raw_ops.Sinh": "doc",
    "tensorflow.raw_ops.Size": "doc",
    "tensorflow.raw_ops.Sqrt": "doc",
    "tensorflow.raw_ops.Tanh": "doc",
    "tensorflow.raw_ops.Tile": "doc",
    "tensorflow.raw_ops.TopK": "doc",
    "tensorflow.raw_ops.Zeta": "doc",
    "tensorflow.signal.frame": "doc",
    "tensorflow.sparse.cross": "doc",
    "tensorflow.sparse.slice": "doc",
    "tensorflow.sparse.split": "doc",
    "tensorflow.data.Iterator": "doc",
    "tensorflow.keras.backend": "doc",
    "tensorflow.keras.metrics": "doc",
    "tensorflow.metrics.Hinge": "doc",
    "tensorflow.metrics.hinge": "doc",
    "tensorflow.nn.leaky_relu": "doc",
    "tensorflow.raw_ops.Abort": "doc",
    "tensorflow.raw_ops.Acosh": "doc",
    "tensorflow.raw_ops.AddV2": "doc",
    "tensorflow.raw_ops.Angle": "doc",
    "tensorflow.raw_ops.Asinh": "doc",
    "tensorflow.raw_ops.Atan2": "doc",
    "tensorflow.raw_ops.Atanh": "doc",
    "tensorflow.raw_ops.Batch": "doc",
    "tensorflow.raw_ops.Const": "doc",
    "tensorflow.raw_ops.Cross": "doc",
    "tensorflow.raw_ops.Dawsn": "doc",
    "tensorflow.raw_ops.Empty": "doc",
    "tensorflow.raw_ops.Enter": "doc",
    "tensorflow.raw_ops.Equal": "doc",
    "tensorflow.raw_ops.Expm1": "doc",
    "tensorflow.raw_ops.FFT2D": "doc",
    "tensorflow.raw_ops.FFT3D": "doc",
    "tensorflow.raw_ops.Floor": "doc",
    "tensorflow.raw_ops.IRFFT": "doc",
    "tensorflow.raw_ops.IsInf": "doc",
    "tensorflow.raw_ops.IsNan": "doc",
    "tensorflow.raw_ops.Log1p": "doc",
    "tensorflow.raw_ops.Merge": "doc",
    "tensorflow.raw_ops.Ndtri": "doc",
    "tensorflow.raw_ops.PadV2": "doc",
    "tensorflow.raw_ops.Print": "doc",
    "tensorflow.raw_ops.Range": "doc",
    "tensorflow.raw_ops.Relu6": "doc",
    "tensorflow.raw_ops.Round": "doc",
    "tensorflow.raw_ops.Rsqrt": "doc",
    "tensorflow.raw_ops.Shape": "doc",
    "tensorflow.raw_ops.Slice": "doc",
    "tensorflow.raw_ops.Split": "doc",
    "tensorflow.raw_ops.Stack": "doc",
    "tensorflow.raw_ops.Stage": "doc",
    "tensorflow.raw_ops.Where": "doc",
    "tensorflow.raw_ops.While": "doc",
    "tensorflow.raw_ops.Xdivy": "doc",
    "tensorflow.raw_ops.Xlogy": "doc",
    "tensorflow.sequence_mask": "doc",
    "tensorflow.sparse.concat": "doc",
    "tensorflow.sparse.retain": "doc",
    "tensorflow.stop_gradient": "doc",
    "tensorflow.test.TestCase": "doc",
    "tensorflow.errors.OpError": "doc",
    "tensorflow.estimator.Head": "doc",
    "tensorflow.io.decode_jpeg": "doc",
    "tensorflow.io.encode_jpeg": "doc",
    "tensorflow.keras.datasets": "doc",
    "tensorflow.keras.wrappers": "doc",
    "tensorflow.metrics.Metric": "doc",
    "tensorflow.metrics.Recall": "doc",
    "tensorflow.raw_ops.ArgMax": "doc",
    "tensorflow.raw_ops.ArgMin": "doc",
    "tensorflow.raw_ops.Assert": "doc",
    "tensorflow.raw_ops.Assign": "doc",
    "tensorflow.raw_ops.Concat": "doc",
    "tensorflow.raw_ops.Conv2D": "doc",
    "tensorflow.raw_ops.Conv3D": "doc",
    "tensorflow.raw_ops.Cumsum": "doc",
    "tensorflow.raw_ops.Einsum": "doc",
    "tensorflow.raw_ops.Erfinv": "doc",
    "tensorflow.raw_ops.Expint": "doc",
    "tensorflow.raw_ops.Gather": "doc",
    "tensorflow.raw_ops.IFFT2D": "doc",
    "tensorflow.raw_ops.IFFT3D": "doc",
    "tensorflow.raw_ops.Igamma": "doc",
    "tensorflow.raw_ops.InTopK": "doc",
    "tensorflow.raw_ops.Invert": "doc",
    "tensorflow.raw_ops.L2Loss": "doc",
    "tensorflow.raw_ops.Lgamma": "doc",
    "tensorflow.raw_ops.MatMul": "doc",
    "tensorflow.raw_ops.OneHot": "doc",
    "tensorflow.raw_ops.PyFunc": "doc",
    "tensorflow.raw_ops.RFFT2D": "doc",
    "tensorflow.raw_ops.RFFT3D": "doc",
    "tensorflow.raw_ops.SaveV2": "doc",
    "tensorflow.raw_ops.Select": "doc",
    "tensorflow.raw_ops.ShapeN": "doc",
    "tensorflow.raw_ops.Spence": "doc",
    "tensorflow.raw_ops.SplitV": "doc",
    "tensorflow.raw_ops.Square": "doc",
    "tensorflow.raw_ops.Substr": "doc",
    "tensorflow.raw_ops.Switch": "doc",
    "tensorflow.raw_ops.ToBool": "doc",
    "tensorflow.raw_ops.TopKV2": "doc",
    "tensorflow.raw_ops.Unique": "doc",
    "tensorflow.raw_ops.Unpack": "doc",
    "tensorflow.sparse.maximum": "doc",
    "tensorflow.sparse.minimum": "doc",
    "tensorflow.sparse.reorder": "doc",
    "tensorflow.sparse.reshape": "doc",
    "tensorflow.sparse.softmax": "doc",
    "tensorflow.compat.v1.sets": "doc",
    "tensorflow.autograph.trace": "doc",
    "tensorflow.io.gfile.rename": "doc",
    "tensorflow.io.gfile.rmtree": "doc",
    "tensorflow.keras.callbacks": "doc",
    "tensorflow.keras.estimator": "doc",
    "tensorflow.math.reduce_std": "doc",
    "tensorflow.metrics.MeanIoU": "doc",
    "tensorflow.metrics.Poisson": "doc",
    "tensorflow.metrics.logcosh": "doc",
    "tensorflow.metrics.poisson": "doc",
    "tensorflow.ragged.constant": "doc",
    "tensorflow.raw_ops.AvgPool": "doc",
    "tensorflow.raw_ops.Barrier": "doc",
    "tensorflow.raw_ops.Betainc": "doc",
    "tensorflow.raw_ops.BiasAdd": "doc",
    "tensorflow.raw_ops.Bitcast": "doc",
    "tensorflow.raw_ops.CTCLoss": "doc",
    "tensorflow.raw_ops.Complex": "doc",
    "tensorflow.raw_ops.Cumprod": "doc",
    "tensorflow.raw_ops.Digamma": "doc",
    "tensorflow.raw_ops.EluGrad": "doc",
    "tensorflow.raw_ops.Greater": "doc",
    "tensorflow.raw_ops.IRFFT2D": "doc",
    "tensorflow.raw_ops.IRFFT3D": "doc",
    "tensorflow.raw_ops.Igammac": "doc",
    "tensorflow.raw_ops.InvGrad": "doc",
    "tensorflow.raw_ops.LRNGrad": "doc",
    "tensorflow.raw_ops.MapPeek": "doc",
    "tensorflow.raw_ops.MapSize": "doc",
    "tensorflow.raw_ops.MaxPool": "doc",
    "tensorflow.raw_ops.Maximum": "doc",
    "tensorflow.raw_ops.Minimum": "doc",
    "tensorflow.raw_ops.MutexV2": "doc",
    "tensorflow.raw_ops.PrintV2": "doc",
    "tensorflow.raw_ops.RealDiv": "doc",
    "tensorflow.raw_ops.RefExit": "doc",
    "tensorflow.raw_ops.Reshape": "doc",
    "tensorflow.raw_ops.Restore": "doc",
    "tensorflow.raw_ops.Reverse": "doc",
    "tensorflow.raw_ops.RngSkip": "doc",
    "tensorflow.raw_ops.SetSize": "doc",
    "tensorflow.raw_ops.Sigmoid": "doc",
    "tensorflow.raw_ops.Softmax": "doc",
    "tensorflow.raw_ops.Squeeze": "doc",
    "tensorflow.raw_ops.StackV2": "doc",
    "tensorflow.raw_ops.Unbatch": "doc",
    "tensorflow.raw_ops.Unstage": "doc",
    "tensorflow.raw_ops.Xlog1py": "doc",
    "tensorflow.sets.difference": "doc",
    "tensorflow.sparse.bincount": "doc",
    "tensorflow.sparse.to_dense": "doc",
    "tensorflow.compat.v1.keras": "doc",
    "tensorflow.compat.v1.range": "doc",
    "tensorflow.compat.v1.trace": "doc",
    "tensorflow.compat.v1.zeros": "doc",
    "tensorflow.estimator.export": "doc",
    "tensorflow.keras.Sequential": "doc",
    "tensorflow.keras.layers.Add": "doc",
    "tensorflow.keras.layers.Dot": "doc",
    "tensorflow.keras.layers.ELU": "doc",
    "tensorflow.keras.layers.GRU": "doc",
    "tensorflow.keras.layers.RNN": "doc",
    "tensorflow.keras.layers.add": "doc",
    "tensorflow.keras.layers.dot": "doc",
    "tensorflow.keras.losses.KLD": "doc",
    "tensorflow.keras.losses.MAE": "doc",
    "tensorflow.keras.losses.MSE": "doc",
    "tensorflow.keras.losses.get": "doc",
    "tensorflow.keras.losses.kld": "doc",
    "tensorflow.keras.losses.mae": "doc",
    "tensorflow.keras.losses.mse": "doc",
    "tensorflow.keras.optimizers": "doc",
    "tensorflow.linalg.band_part": "doc",
    "tensorflow.losses.serialize": "doc",
    "tensorflow.math.segment_max": "doc",
    "tensorflow.math.segment_min": "doc",
    "tensorflow.metrics.Accuracy": "doc",
    "tensorflow.metrics.log_cosh": "doc",
    "tensorflow.raw_ops.AllToAll": "doc",
    "tensorflow.raw_ops.AsString": "doc",
    "tensorflow.raw_ops.BatchFFT": "doc",
    "tensorflow.raw_ops.BatchSvd": "doc",
    "tensorflow.raw_ops.BesselI0": "doc",
    "tensorflow.raw_ops.BesselI1": "doc",
    "tensorflow.raw_ops.BesselJ0": "doc",
    "tensorflow.raw_ops.BesselJ1": "doc",
    "tensorflow.raw_ops.BesselK0": "doc",
    "tensorflow.raw_ops.BesselK1": "doc",
    "tensorflow.raw_ops.BesselY0": "doc",
    "tensorflow.raw_ops.BesselY1": "doc",
    "tensorflow.raw_ops.Bincount": "doc",
    "tensorflow.raw_ops.Cholesky": "doc",
    "tensorflow.raw_ops.ConcatV2": "doc",
    "tensorflow.raw_ops.CopyHost": "doc",
    "tensorflow.raw_ops.CudnnRNN": "doc",
    "tensorflow.raw_ops.DeepCopy": "doc",
    "tensorflow.raw_ops.DiagPart": "doc",
    "tensorflow.raw_ops.DivNoNan": "doc",
    "tensorflow.raw_ops.FloorDiv": "doc",
    "tensorflow.raw_ops.FloorMod": "doc",
    "tensorflow.raw_ops.GatherNd": "doc",
    "tensorflow.raw_ops.GatherV2": "doc",
    "tensorflow.raw_ops.HSVToRGB": "doc",
    "tensorflow.raw_ops.Identity": "doc",
    "tensorflow.raw_ops.InTopKV2": "doc",
    "tensorflow.raw_ops.IsFinite": "doc",
    "tensorflow.raw_ops.Iterator": "doc",
    "tensorflow.raw_ops.LinSpace": "doc",
    "tensorflow.raw_ops.ListDiff": "doc",
    "tensorflow.raw_ops.LoopCond": "doc",
    "tensorflow.raw_ops.MapClear": "doc",
    "tensorflow.raw_ops.MapDefun": "doc",
    "tensorflow.raw_ops.MapStage": "doc",
    "tensorflow.raw_ops.MulNoNan": "doc",
    "tensorflow.raw_ops.NotEqual": "doc",
    "tensorflow.raw_ops.OnesLike": "doc",
    "tensorflow.raw_ops.RGBToHSV": "doc",
    "tensorflow.raw_ops.ReadFile": "doc",
    "tensorflow.raw_ops.RefEnter": "doc",
    "tensorflow.raw_ops.RefMerge": "doc",
    "tensorflow.raw_ops.ReluGrad": "doc",
    "tensorflow.raw_ops.SelectV2": "doc",
    "tensorflow.raw_ops.SeluGrad": "doc",
    "tensorflow.raw_ops.Snapshot": "doc",
    "tensorflow.raw_ops.Softplus": "doc",
    "tensorflow.raw_ops.Softsign": "doc",
    "tensorflow.raw_ops.SqrtGrad": "doc",
    "tensorflow.raw_ops.StackPop": "doc",
    "tensorflow.raw_ops.TanhGrad": "doc",
    "tensorflow.raw_ops.TileGrad": "doc",
    "tensorflow.raw_ops.UniqueV2": "doc",
    "tensorflow.raw_ops.Variable": "doc",
    "tensorflow.saved_model.load": "doc",
    "tensorflow.saved_model.save": "doc",
    "tensorflow.summary.trace_on": "doc",
    "tensorflow.compat.v1.errors": "doc",
    "tensorflow.compat.v1.ragged": "doc",
    "tensorflow.compat.v1.sparse": "doc",
    "tensorflow.autograph.to_code": "doc",
    "tensorflow.image.decode_jpeg": "doc",
    "tensorflow.image.encode_jpeg": "doc",
    "tensorflow.keras.activations": "doc",
    "tensorflow.keras.backend.rnn": "doc",
    "tensorflow.keras.constraints": "doc",
    "tensorflow.keras.layers.LSTM": "doc",
    "tensorflow.keras.layers.ReLU": "doc",
    "tensorflow.keras.losses.Loss": "doc",
    "tensorflow.keras.losses.MAPE": "doc",
    "tensorflow.keras.losses.MSLE": "doc",
    "tensorflow.keras.losses.mape": "doc",
    "tensorflow.keras.losses.msle": "doc",
    "tensorflow.keras.metrics.AUC": "doc",
    "tensorflow.keras.metrics.KLD": "doc",
    "tensorflow.keras.metrics.MAE": "doc",
    "tensorflow.keras.metrics.MSE": "doc",
    "tensorflow.keras.metrics.Sum": "doc",
    "tensorflow.keras.metrics.get": "doc",
    "tensorflow.keras.metrics.kld": "doc",
    "tensorflow.keras.metrics.mae": "doc",
    "tensorflow.keras.metrics.mse": "doc",
    "tensorflow.metrics.Precision": "doc",
    "tensorflow.metrics.serialize": "doc",
    "tensorflow.nn.conv_transpose": "doc",
    "tensorflow.raw_ops.AdjustHue": "doc",
    "tensorflow.raw_ops.ApplyAdam": "doc",
    "tensorflow.raw_ops.ApplyFtrl": "doc",
    "tensorflow.raw_ops.AssignAdd": "doc",
    "tensorflow.raw_ops.AssignSub": "doc",
    "tensorflow.raw_ops.AvgPool3D": "doc",
    "tensorflow.raw_ops.BatchIFFT": "doc",
    "tensorflow.raw_ops.BesselI0e": "doc",
    "tensorflow.raw_ops.BesselI1e": "doc",
    "tensorflow.raw_ops.BesselK0e": "doc",
    "tensorflow.raw_ops.BesselK1e": "doc",
    "tensorflow.raw_ops.BiasAddV1": "doc",
    "tensorflow.raw_ops.BitwiseOr": "doc",
    "tensorflow.raw_ops.BlockLSTM": "doc",
    "tensorflow.raw_ops.Bucketize": "doc",
    "tensorflow.raw_ops.CTCLossV2": "doc",
    "tensorflow.raw_ops.CountUpTo": "doc",
    "tensorflow.raw_ops.DecodeBmp": "doc",
    "tensorflow.raw_ops.DecodeCSV": "doc",
    "tensorflow.raw_ops.DecodeGif": "doc",
    "tensorflow.raw_ops.DecodePng": "doc",
    "tensorflow.raw_ops.DecodeRaw": "doc",
    "tensorflow.raw_ops.DecodeWav": "doc",
    "tensorflow.raw_ops.EncodePng": "doc",
    "tensorflow.raw_ops.EncodeWav": "doc",
    "tensorflow.raw_ops.FIFOQueue": "doc",
    "tensorflow.raw_ops.FakeParam": "doc",
    "tensorflow.raw_ops.FakeQueue": "doc",
    "tensorflow.raw_ops.HashTable": "doc",
    "tensorflow.raw_ops.IdentityN": "doc",
    "tensorflow.raw_ops.LeakyRelu": "doc",
    "tensorflow.raw_ops.LeftShift": "doc",
    "tensorflow.raw_ops.LessEqual": "doc",
    "tensorflow.raw_ops.LogicalOr": "doc",
    "tensorflow.raw_ops.MaxPool3D": "doc",
    "tensorflow.raw_ops.MaxPoolV2": "doc",
    "tensorflow.raw_ops.MirrorPad": "doc",
    "tensorflow.raw_ops.MutexLock": "doc",
    "tensorflow.raw_ops.NextAfter": "doc",
    "tensorflow.raw_ops.Polygamma": "doc",
    "tensorflow.raw_ops.QueueSize": "doc",
    "tensorflow.raw_ops.RefSelect": "doc",
    "tensorflow.raw_ops.RefSwitch": "doc",
    "tensorflow.raw_ops.Relu6Grad": "doc",
    "tensorflow.raw_ops.RestoreV2": "doc",
    "tensorflow.raw_ops.ReverseV2": "doc",
    "tensorflow.raw_ops.RsqrtGrad": "doc",
    "tensorflow.raw_ops.ScatterNd": "doc",
    "tensorflow.raw_ops.SparseAdd": "doc",
    "tensorflow.raw_ops.StackPush": "doc",
    "tensorflow.raw_ops.StagePeek": "doc",
    "tensorflow.raw_ops.StageSize": "doc",
    "tensorflow.raw_ops.Timestamp": "doc",
    "tensorflow.raw_ops.WriteFile": "doc",
    "tensorflow.raw_ops.ZerosLike": "doc",
    "tensorflow.saved_model.Asset": "doc",
    "tensorflow.sets.intersection": "doc",
    "tensorflow.sparse.from_dense": "doc",
    "tensorflow.sparse.map_values": "doc",
    "tensorflow.sparse.reduce_max": "doc",
    "tensorflow.sparse.reduce_sum": "doc",
    "tensorflow.summary.record_if": "doc",
    "tensorflow.summary.trace_off": "doc",
    "tensorflow.compat.v1.metrics": "doc",
    "tensorflow.compat.v1.reverse": "doc",
    "tensorflow.compat.path_to_str": "doc",
    "tensorflow.estimator.EvalSpec": "doc",
    "tensorflow.estimator.Exporter": "doc",
    "tensorflow.estimator.ModeKeys": "doc",
    "tensorflow.image.central_crop": "doc",
    "tensorflow.initializers.Zeros": "doc",
    "tensorflow.initializers.zeros": "doc",
    "tensorflow.keras.applications": "doc",
    "tensorflow.keras.experimental": "doc",
    "tensorflow.keras.initializers": "doc",
    "tensorflow.keras.layers.Dense": "doc",
    "tensorflow.keras.layers.Input": "doc",
    "tensorflow.keras.layers.Layer": "doc",
    "tensorflow.keras.layers.PReLU": "doc",
    "tensorflow.keras.losses.Hinge": "doc",
    "tensorflow.keras.losses.Huber": "doc",
    "tensorflow.keras.losses.hinge": "doc",
    "tensorflow.keras.losses.huber": "doc",
    "tensorflow.keras.metrics.MAPE": "doc",
    "tensorflow.keras.metrics.MSLE": "doc",
    "tensorflow.keras.metrics.Mean": "doc",
    "tensorflow.keras.metrics.mape": "doc",
    "tensorflow.keras.metrics.msle": "doc",
    "tensorflow.keras.models.Model": "doc",
    "tensorflow.keras.regularizers": "doc",
    "tensorflow.linalg.tensor_diag": "doc",
    "tensorflow.metrics.MeanTensor": "doc",
    "tensorflow.raw_ops.BatchFFT2D": "doc",
    "tensorflow.raw_ops.BatchFFT3D": "doc",
    "tensorflow.raw_ops.BitwiseAnd": "doc",
    "tensorflow.raw_ops.BitwiseXor": "doc",
    "tensorflow.raw_ops.CSVDataset": "doc",
    "tensorflow.raw_ops.ComplexAbs": "doc",
    "tensorflow.raw_ops.CudnnRNNV2": "doc",
    "tensorflow.raw_ops.CudnnRNNV3": "doc",
    "tensorflow.raw_ops.DecodeJpeg": "doc",
    "tensorflow.raw_ops.Dequantize": "doc",
    "tensorflow.raw_ops.Dilation2D": "doc",
    "tensorflow.raw_ops.EncodeJpeg": "doc",
    "tensorflow.raw_ops.ExpandDims": "doc",
    "tensorflow.raw_ops.FresnelCos": "doc",
    "tensorflow.raw_ops.FresnelSin": "doc",
    "tensorflow.raw_ops.InplaceAdd": "doc",
    "tensorflow.raw_ops.InplaceSub": "doc",
    "tensorflow.raw_ops.IteratorV2": "doc",
    "tensorflow.raw_ops.LMDBReader": "doc",
    "tensorflow.raw_ops.LogSoftmax": "doc",
    "tensorflow.raw_ops.LogicalAnd": "doc",
    "tensorflow.raw_ops.LogicalNot": "doc",
    "tensorflow.raw_ops.LowerBound": "doc",
    "tensorflow.raw_ops.MapDataset": "doc",
    "tensorflow.raw_ops.MapUnstage": "doc",
    "tensorflow.raw_ops.MatrixDiag": "doc",
    "tensorflow.raw_ops.NcclReduce": "doc",
    "tensorflow.raw_ops.NthElement": "doc",
    "tensorflow.raw_ops.QuantizeV2": "doc",
    "tensorflow.raw_ops.QueueClose": "doc",
    "tensorflow.raw_ops.Reciprocal": "doc",
    "tensorflow.raw_ops.ReduceJoin": "doc",
    "tensorflow.raw_ops.RemoteCall": "doc",
    "tensorflow.raw_ops.Requantize": "doc",
    "tensorflow.raw_ops.ResizeArea": "doc",
    "tensorflow.raw_ops.RightShift": "doc",
    "tensorflow.raw_ops.SaveSlices": "doc",
    "tensorflow.raw_ops.ScatterAdd": "doc",
    "tensorflow.raw_ops.ScatterDiv": "doc",
    "tensorflow.raw_ops.ScatterMax": "doc",
    "tensorflow.raw_ops.ScatterMin": "doc",
    "tensorflow.raw_ops.ScatterMul": "doc",
    "tensorflow.raw_ops.ScatterSub": "doc",
    "tensorflow.raw_ops.SdcaFprint": "doc",
    "tensorflow.raw_ops.SegmentMax": "doc",
    "tensorflow.raw_ops.SegmentMin": "doc",
    "tensorflow.raw_ops.SegmentSum": "doc",
    "tensorflow.raw_ops.SqlDataset": "doc",
    "tensorflow.raw_ops.StackClose": "doc",
    "tensorflow.raw_ops.StackPopV2": "doc",
    "tensorflow.raw_ops.StageClear": "doc",
    "tensorflow.raw_ops.StringJoin": "doc",
    "tensorflow.raw_ops.UpperBound": "doc",
    "tensorflow.raw_ops.VariableV2": "doc",
    "tensorflow.raw_ops.ZipDataset": "doc",
    "tensorflow.sparse.reset_shape": "doc",
    "tensorflow.compat.v1.hessians": "doc",
    "tensorflow.compat.v1.user_ops": "doc",
    "tensorflow.distribute.Strategy": "doc",
    "tensorflow.errors.AbortedError": "doc",
    "tensorflow.errors.UnknownError": "doc",
    "tensorflow.estimator.Estimator": "doc",
    "tensorflow.estimator.MultiHead": "doc",
    "tensorflow.estimator.RunConfig": "doc",
    "tensorflow.estimator.TrainSpec": "doc",
    "tensorflow.estimator.VocabInfo": "doc",
    "tensorflow.keras.datasets.imdb": "doc",
    "tensorflow.keras.layers.Conv1D": "doc",
    "tensorflow.keras.layers.Conv2D": "doc",
    "tensorflow.keras.layers.Conv3D": "doc",
    "tensorflow.keras.layers.Lambda": "doc",
    "tensorflow.keras.metrics.Hinge": "doc",
    "tensorflow.keras.metrics.hinge": "doc",
    "tensorflow.keras.preprocessing": "doc",
    "tensorflow.keras.utils.Progbar": "doc",
    "tensorflow.metrics.deserialize": "doc",
    "tensorflow.ragged.boolean_mask": "doc",
    "tensorflow.ragged.cross_hashed": "doc",
    "tensorflow.raw_ops.ApplyAdaMax": "doc",
    "tensorflow.raw_ops.ApplyFtrlV2": "doc",
    "tensorflow.raw_ops.AvgPoolGrad": "doc",
    "tensorflow.raw_ops.BatchIFFT2D": "doc",
    "tensorflow.raw_ops.BatchIFFT3D": "doc",
    "tensorflow.raw_ops.BatchMatMul": "doc",
    "tensorflow.raw_ops.BiasAddGrad": "doc",
    "tensorflow.raw_ops.BlockLSTMV2": "doc",
    "tensorflow.raw_ops.BroadcastTo": "doc",
    "tensorflow.raw_ops.ClipByValue": "doc",
    "tensorflow.raw_ops.DecodeImage": "doc",
    "tensorflow.raw_ops.DeviceIndex": "doc",
    "tensorflow.raw_ops.EagerPyFunc": "doc",
    "tensorflow.raw_ops.EncodeProto": "doc",
    "tensorflow.raw_ops.EnsureShape": "doc",
    "tensorflow.raw_ops.FIFOQueueV2": "doc",
    "tensorflow.raw_ops.Fingerprint": "doc",
    "tensorflow.raw_ops.HashTableV2": "doc",
    "tensorflow.raw_ops.IgammaGradA": "doc",
    "tensorflow.raw_ops.ImportEvent": "doc",
    "tensorflow.raw_ops.LMDBDataset": "doc",
    "tensorflow.raw_ops.LoadDataset": "doc",
    "tensorflow.raw_ops.MatrixSolve": "doc",
    "tensorflow.raw_ops.MaxPoolGrad": "doc",
    "tensorflow.raw_ops.Multinomial": "doc",
    "tensorflow.raw_ops.ParseTensor": "doc",
    "tensorflow.raw_ops.Placeholder": "doc",
    "tensorflow.raw_ops.QueueSizeV2": "doc",
    "tensorflow.raw_ops.RaggedCross": "doc",
    "tensorflow.raw_ops.RaggedRange": "doc",
    "tensorflow.raw_ops.RecordInput": "doc",
    "tensorflow.raw_ops.RefIdentity": "doc",
    "tensorflow.raw_ops.SaveDataset": "doc",
    "tensorflow.raw_ops.ScanDataset": "doc",
    "tensorflow.raw_ops.SegmentMean": "doc",
    "tensorflow.raw_ops.SegmentProd": "doc",
    "tensorflow.raw_ops.SigmoidGrad": "doc",
    "tensorflow.raw_ops.SkipDataset": "doc",
    "tensorflow.raw_ops.SobolSample": "doc",
    "tensorflow.raw_ops.SparseCross": "doc",
    "tensorflow.raw_ops.SparseSlice": "doc",
    "tensorflow.raw_ops.SparseSplit": "doc",
    "tensorflow.raw_ops.StackPushV2": "doc",
    "tensorflow.raw_ops.StatelessIf": "doc",
    "tensorflow.raw_ops.StringLower": "doc",
    "tensorflow.raw_ops.StringSplit": "doc",
    "tensorflow.raw_ops.StringStrip": "doc",
    "tensorflow.raw_ops.StringUpper": "doc",
    "tensorflow.raw_ops.TakeDataset": "doc",
    "tensorflow.raw_ops.TensorArray": "doc",
    "tensorflow.raw_ops.TruncateDiv": "doc",
    "tensorflow.raw_ops.TruncateMod": "doc",
    "tensorflow.raw_ops.UnbatchGrad": "doc",
    "tensorflow.raw_ops.VarHandleOp": "doc",
    "tensorflow.sparse.SparseTensor": "doc",
    "tensorflow.sparse.cross_hashed": "doc",
    "tensorflow.sparse.to_indicator": "doc",
    "tensorflow.compat.v1.estimator": "doc",
    "tensorflow.compat.v1.read_file": "doc",
    "tensorflow.compat.v1.sets.size": "doc",
    "tensorflow.compat.v1.to_double": "doc",
    "tensorflow.errors.DataLossError": "doc",
    "tensorflow.errors.InternalError": "doc",
    "tensorflow.errors.NotFoundError": "doc",
    "tensorflow.estimator.FeedFnHook": "doc",
    "tensorflow.keras.backend.floatx": "doc",
    "tensorflow.keras.datasets.mnist": "doc",
    "tensorflow.keras.layers.Average": "doc",
    "tensorflow.keras.layers.Dropout": "doc",
    "tensorflow.keras.layers.Flatten": "doc",
    "tensorflow.keras.layers.GRUCell": "doc",
    "tensorflow.keras.layers.Masking": "doc",
    "tensorflow.keras.layers.Maximum": "doc",
    "tensorflow.keras.layers.Minimum": "doc",
    "tensorflow.keras.layers.Permute": "doc",
    "tensorflow.keras.layers.Reshape": "doc",
    "tensorflow.keras.layers.Softmax": "doc",
    "tensorflow.keras.layers.Wrapper": "doc",
    "tensorflow.keras.layers.average": "doc",
    "tensorflow.keras.layers.maximum": "doc",
    "tensorflow.keras.layers.minimum": "doc",
    "tensorflow.keras.losses.LogCosh": "doc",
    "tensorflow.keras.losses.Poisson": "doc",
    "tensorflow.keras.losses.logcosh": "doc",
    "tensorflow.keras.losses.poisson": "doc",
    "tensorflow.keras.metrics.Metric": "doc",
    "tensorflow.keras.metrics.Recall": "doc",
    "tensorflow.keras.optimizers.SGD": "doc",
    "tensorflow.keras.optimizers.get": "doc",
    "tensorflow.keras.utils.Sequence": "doc",
    "tensorflow.keras.utils.get_file": "doc",
    "tensorflow.losses.squared_hinge": "doc",
    "tensorflow.metrics.KLDivergence": "doc",
    "tensorflow.metrics.LogCoshError": "doc",
    "tensorflow.metrics.SquaredHinge": "doc",
    "tensorflow.optimizers.serialize": "doc",
    "tensorflow.raw_ops.ApplyAdagrad": "doc",
    "tensorflow.raw_ops.ApplyAddSign": "doc",
    "tensorflow.raw_ops.ApplyRMSProp": "doc",
    "tensorflow.raw_ops.AudioSummary": "doc",
    "tensorflow.raw_ops.BarrierClose": "doc",
    "tensorflow.raw_ops.BatchDataset": "doc",
    "tensorflow.raw_ops.BatchToSpace": "doc",
    "tensorflow.raw_ops.CSVDatasetV2": "doc",
    "tensorflow.raw_ops.CacheDataset": "doc",
    "tensorflow.raw_ops.CholeskyGrad": "doc",
    "tensorflow.raw_ops.ConcatOffset": "doc",
    "tensorflow.raw_ops.DecodeBase64": "doc",
    "tensorflow.raw_ops.DepthToSpace": "doc",
    "tensorflow.raw_ops.EditDistance": "doc",
    "tensorflow.raw_ops.EncodeBase64": "doc",
    "tensorflow.raw_ops.GRUBlockCell": "doc",
    "tensorflow.raw_ops.GreaterEqual": "doc",
    "tensorflow.raw_ops.ImageSummary": "doc",
    "tensorflow.raw_ops.MakeIterator": "doc",
    "tensorflow.raw_ops.MatrixDiagV2": "doc",
    "tensorflow.raw_ops.MatrixDiagV3": "doc",
    "tensorflow.raw_ops.MergeSummary": "doc",
    "tensorflow.raw_ops.ModelDataset": "doc",
    "tensorflow.raw_ops.OptionalNone": "doc",
    "tensorflow.raw_ops.ParseExample": "doc",
    "tensorflow.raw_ops.Prelinearize": "doc",
    "tensorflow.raw_ops.QuantizedAdd": "doc",
    "tensorflow.raw_ops.QuantizedMul": "doc",
    "tensorflow.raw_ops.QueueCloseV2": "doc",
    "tensorflow.raw_ops.QueueDequeue": "doc",
    "tensorflow.raw_ops.QueueEnqueue": "doc",
    "tensorflow.raw_ops.RaggedGather": "doc",
    "tensorflow.raw_ops.RangeDataset": "doc",
    "tensorflow.raw_ops.ReaderReadV2": "doc",
    "tensorflow.raw_ops.RegexReplace": "doc",
    "tensorflow.raw_ops.RestoreSlice": "doc",
    "tensorflow.raw_ops.ScatterNdAdd": "doc",
    "tensorflow.raw_ops.ScatterNdMax": "doc",
    "tensorflow.raw_ops.ScatterNdMin": "doc",
    "tensorflow.raw_ops.ScatterNdSub": "doc",
    "tensorflow.raw_ops.SdcaShrinkL1": "doc",
    "tensorflow.raw_ops.ShardDataset": "doc",
    "tensorflow.raw_ops.SleepDataset": "doc",
    "tensorflow.raw_ops.SoftplusGrad": "doc",
    "tensorflow.raw_ops.SoftsignGrad": "doc",
    "tensorflow.raw_ops.SpaceToBatch": "doc",
    "tensorflow.raw_ops.SpaceToDepth": "doc",
    "tensorflow.raw_ops.SparseConcat": "doc",
    "tensorflow.raw_ops.SparseMatMul": "doc",
    "tensorflow.raw_ops.StackCloseV2": "doc",
    "tensorflow.raw_ops.StopGradient": "doc",
    "tensorflow.raw_ops.StridedSlice": "doc",
    "tensorflow.raw_ops.StringFormat": "doc",
    "tensorflow.raw_ops.StringLength": "doc",
    "tensorflow.raw_ops.StringNGrams": "doc",
    "tensorflow.raw_ops.UnravelIndex": "doc",
    "tensorflow.raw_ops.WriteSummary": "doc",
    "tensorflow.compat.v1.NoGradient": "doc",
    "tensorflow.compat.v1.ReaderBase": "doc",
    "tensorflow.compat.v1.TensorSpec": "doc",
    "tensorflow.compat.v1.dequantize": "doc",
    "tensorflow.compat.v1.div_no_nan": "doc",
    "tensorflow.compat.v1.scatter_nd": "doc",
    "tensorflow.compat.v1.sets.union": "doc",
    "tensorflow.compat.v1.sparse.add": "doc",
    "tensorflow.compat.v1.sparse.eye": "doc",
    "tensorflow.compat.v1.sparse_add": "doc",
    "tensorflow.compat.v1.zeros_like": "doc",
    "tensorflow.debugging.assert_rank": "doc",
    "tensorflow.errors.CancelledError": "doc",
    "tensorflow.estimator.add_metrics": "doc",
    "tensorflow.image.crop_and_resize": "doc",
    "tensorflow.keras.activations.elu": "doc",
    "tensorflow.keras.activations.get": "doc",
    "tensorflow.keras.backend.epsilon": "doc",
    "tensorflow.keras.backend.get_uid": "doc",
    "tensorflow.keras.constraints.get": "doc",
    "tensorflow.keras.layers.LSTMCell": "doc",
    "tensorflow.keras.layers.Multiply": "doc",
    "tensorflow.keras.layers.Subtract": "doc",
    "tensorflow.keras.layers.multiply": "doc",
    "tensorflow.keras.layers.subtract": "doc",
    "tensorflow.keras.losses.log_cosh": "doc",
    "tensorflow.keras.metrics.MeanIoU": "doc",
    "tensorflow.keras.metrics.Poisson": "doc",
    "tensorflow.keras.metrics.logcosh": "doc",
    "tensorflow.keras.metrics.poisson": "doc",
    "tensorflow.keras.mixed_precision": "doc",
    "tensorflow.keras.optimizers.Adam": "doc",
    "tensorflow.keras.optimizers.Ftrl": "doc",
    "tensorflow.keras.regularizers.L1": "doc",
    "tensorflow.keras.regularizers.L2": "doc",
    "tensorflow.keras.regularizers.l1": "doc",
    "tensorflow.keras.regularizers.l2": "doc",
    "tensorflow.keras.utils.normalize": "doc",
    "tensorflow.metrics.TrueNegatives": "doc",
    "tensorflow.metrics.TruePositives": "doc",
    "tensorflow.metrics.kl_divergence": "doc",
    "tensorflow.metrics.squared_hinge": "doc",
    "tensorflow.raw_ops.AccumulateNV2": "doc",
    "tensorflow.raw_ops.ApplyAdadelta": "doc",
    "tensorflow.raw_ops.ApplyMomentum": "doc",
    "tensorflow.raw_ops.AvgPool3DGrad": "doc",
    "tensorflow.raw_ops.BatchCholesky": "doc",
    "tensorflow.raw_ops.BatchFunction": "doc",
    "tensorflow.raw_ops.BatchMatMulV2": "doc",
    "tensorflow.raw_ops.BlockLSTMGrad": "doc",
    "tensorflow.raw_ops.BroadcastArgs": "doc",
    "tensorflow.raw_ops.CheckNumerics": "doc",
    "tensorflow.raw_ops.CropAndResize": "doc",
    "tensorflow.raw_ops.DebugIdentity": "doc",
    "tensorflow.raw_ops.DebugNanCount": "doc",
    "tensorflow.raw_ops.DecodeProtoV2": "doc",
    "tensorflow.raw_ops.DenseBincount": "doc",
    "tensorflow.raw_ops.DynamicStitch": "doc",
    "tensorflow.raw_ops.EuclideanNorm": "doc",
    "tensorflow.raw_ops.FilterDataset": "doc",
    "tensorflow.raw_ops.InfeedDequeue": "doc",
    "tensorflow.raw_ops.InfeedEnqueue": "doc",
    "tensorflow.raw_ops.InplaceUpdate": "doc",
    "tensorflow.raw_ops.LSTMBlockCell": "doc",
    "tensorflow.raw_ops.LeakyReluGrad": "doc",
    "tensorflow.raw_ops.MatchingFiles": "doc",
    "tensorflow.raw_ops.MatrixInverse": "doc",
    "tensorflow.raw_ops.MatrixSetDiag": "doc",
    "tensorflow.raw_ops.MatrixSolveLs": "doc",
    "tensorflow.raw_ops.MaxPool3DGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradV2": "doc",
    "tensorflow.raw_ops.MirrorPadGrad": "doc",
    "tensorflow.raw_ops.NcclAllReduce": "doc",
    "tensorflow.raw_ops.NcclBroadcast": "doc",
    "tensorflow.raw_ops.NextIteration": "doc",
    "tensorflow.raw_ops.PlaceholderV2": "doc",
    "tensorflow.raw_ops.PriorityQueue": "doc",
    "tensorflow.raw_ops.QuantizedRelu": "doc",
    "tensorflow.raw_ops.QueueIsClosed": "doc",
    "tensorflow.raw_ops.RandomDataset": "doc",
    "tensorflow.raw_ops.RandomPoisson": "doc",
    "tensorflow.raw_ops.RandomShuffle": "doc",
    "tensorflow.raw_ops.RandomUniform": "doc",
    "tensorflow.raw_ops.ReaderResetV2": "doc",
    "tensorflow.raw_ops.ReduceDataset": "doc",
    "tensorflow.raw_ops.RepeatDataset": "doc",
    "tensorflow.raw_ops.ResizeBicubic": "doc",
    "tensorflow.raw_ops.ScalarSummary": "doc",
    "tensorflow.raw_ops.ScatterUpdate": "doc",
    "tensorflow.raw_ops.SdcaOptimizer": "doc",
    "tensorflow.raw_ops.SparseAddGrad": "doc",
    "tensorflow.raw_ops.SparseCrossV2": "doc",
    "tensorflow.raw_ops.SparseReorder": "doc",
    "tensorflow.raw_ops.SparseReshape": "doc",
    "tensorflow.raw_ops.SparseSoftmax": "doc",
    "tensorflow.raw_ops.SparseToDense": "doc",
    "tensorflow.raw_ops.StatelessCase": "doc",
    "tensorflow.raw_ops.StringSplitV2": "doc",
    "tensorflow.raw_ops.SummaryWriter": "doc",
    "tensorflow.raw_ops.TensorArrayV2": "doc",
    "tensorflow.raw_ops.TensorArrayV3": "doc",
    "tensorflow.raw_ops.TensorDataset": "doc",
    "tensorflow.raw_ops.TensorSummary": "doc",
    "tensorflow.raw_ops.UnicodeDecode": "doc",
    "tensorflow.raw_ops.UnicodeEncode": "doc",
    "tensorflow.raw_ops.UnicodeScript": "doc",
    "tensorflow.raw_ops.UniqueDataset": "doc",
    "tensorflow.raw_ops.VariableShape": "doc",
    "tensorflow.raw_ops.WindowDataset": "doc",
    "tensorflow.sparse.segment_sqrt_n": "doc",
    "tensorflow.compat.v1.assert_rank": "doc",
    "tensorflow.compat.v1.keras.Input": "doc",
    "tensorflow.compat.v1.keras.Model": "doc",
    "tensorflow.compat.v1.keras.utils": "doc",
    "tensorflow.compat.v1.metrics.auc": "doc",
    "tensorflow.compat.v1.nn.rnn_cell": "doc",
    "tensorflow.compat.v1.no_gradient": "doc",
    "tensorflow.compat.v1.saved_model": "doc",
    "tensorflow.compat.v1.scatter_add": "doc",
    "tensorflow.compat.v1.scatter_sub": "doc",
    "tensorflow.compat.v1.segment_max": "doc",
    "tensorflow.compat.v1.segment_min": "doc",
    "tensorflow.compat.v1.sparse.mask": "doc",
    "tensorflow.compat.v1.sparse_mask": "doc",
    "tensorflow.compat.v1.truncatemod": "doc",
    "tensorflow.errors.OutOfRangeError": "doc",
    "tensorflow.estimator.BestExporter": "doc",
    "tensorflow.estimator.DNNEstimator": "doc",
    "tensorflow.estimator.DNNRegressor": "doc",
    "tensorflow.estimator.FinalOpsHook": "doc",
    "tensorflow.estimator.ProfilerHook": "doc",
    "tensorflow.estimator.experimental": "doc",
    "tensorflow.initializers.he_normal": "doc",
    "tensorflow.initializers.serialize": "doc",
    "tensorflow.keras.activations.gelu": "doc",
    "tensorflow.keras.activations.relu": "doc",
    "tensorflow.keras.activations.selu": "doc",
    "tensorflow.keras.activations.tanh": "doc",
    "tensorflow.keras.datasets.cifar10": "doc",
    "tensorflow.keras.datasets.reuters": "doc",
    "tensorflow.keras.initializers.get": "doc",
    "tensorflow.keras.layers.Attention": "doc",
    "tensorflow.keras.layers.AvgPool1D": "doc",
    "tensorflow.keras.layers.AvgPool2D": "doc",
    "tensorflow.keras.layers.AvgPool3D": "doc",
    "tensorflow.keras.layers.Embedding": "doc",
    "tensorflow.keras.layers.InputSpec": "doc",
    "tensorflow.keras.layers.LeakyReLU": "doc",
    "tensorflow.keras.layers.MaxPool1D": "doc",
    "tensorflow.keras.layers.MaxPool2D": "doc",
    "tensorflow.keras.layers.MaxPool3D": "doc",
    "tensorflow.keras.layers.SimpleRNN": "doc",
    "tensorflow.keras.layers.serialize": "doc",
    "tensorflow.keras.losses.Reduction": "doc",
    "tensorflow.keras.losses.serialize": "doc",
    "tensorflow.keras.metrics.Accuracy": "doc",
    "tensorflow.keras.metrics.log_cosh": "doc",
    "tensorflow.keras.optimizers.Nadam": "doc",
    "tensorflow.keras.regularizers.get": "doc",
    "tensorflow.keras.utils.plot_model": "doc",
    "tensorflow.metrics.BinaryAccuracy": "doc",
    "tensorflow.metrics.FalseNegatives": "doc",
    "tensorflow.metrics.FalsePositives": "doc",
    "tensorflow.ragged.map_flat_values": "doc",
    "tensorflow.raw_ops.AdjustContrast": "doc",
    "tensorflow.raw_ops.ApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ApplyAdagradV2": "doc",
    "tensorflow.raw_ops.ApplyPowerSign": "doc",
    "tensorflow.raw_ops.AudioSummaryV2": "doc",
    "tensorflow.raw_ops.BatchDatasetV2": "doc",
    "tensorflow.raw_ops.BatchToSpaceND": "doc",
    "tensorflow.raw_ops.CacheDatasetV2": "doc",
    "tensorflow.raw_ops.ControlTrigger": "doc",
    "tensorflow.raw_ops.DatasetToGraph": "doc",
    "tensorflow.raw_ops.DeleteIterator": "doc",
    "tensorflow.raw_ops.ExtractGlimpse": "doc",
    "tensorflow.raw_ops.FlatMapDataset": "doc",
    "tensorflow.raw_ops.FusedBatchNorm": "doc",
    "tensorflow.raw_ops.FusedPadConv2D": "doc",
    "tensorflow.raw_ops.GuaranteeConst": "doc",
    "tensorflow.raw_ops.IdentityReader": "doc",
    "tensorflow.raw_ops.ImmutableConst": "doc",
    "tensorflow.raw_ops.MatrixBandPart": "doc",
    "tensorflow.raw_ops.MatrixDiagPart": "doc",
    "tensorflow.raw_ops.OrderedMapPeek": "doc",
    "tensorflow.raw_ops.OrderedMapSize": "doc",
    "tensorflow.raw_ops.OutfeedDequeue": "doc",
    "tensorflow.raw_ops.OutfeedEnqueue": "doc",
    "tensorflow.raw_ops.ParallelConcat": "doc",
    "tensorflow.raw_ops.ParseExampleV2": "doc",
    "tensorflow.raw_ops.QuantizedRelu6": "doc",
    "tensorflow.raw_ops.QuantizedReluX": "doc",
    "tensorflow.raw_ops.QueueDequeueV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueV2": "doc",
    "tensorflow.raw_ops.RaggedBincount": "doc",
    "tensorflow.raw_ops.ReadVariableOp": "doc",
    "tensorflow.raw_ops.ReaderReadUpTo": "doc",
    "tensorflow.raw_ops.RebatchDataset": "doc",
    "tensorflow.raw_ops.ReciprocalGrad": "doc",
    "tensorflow.raw_ops.RegexFullMatch": "doc",
    "tensorflow.raw_ops.ResizeBilinear": "doc",
    "tensorflow.raw_ops.ResourceGather": "doc",
    "tensorflow.raw_ops.RngReadAndSkip": "doc",
    "tensorflow.raw_ops.SelfAdjointEig": "doc",
    "tensorflow.raw_ops.ShuffleDataset": "doc",
    "tensorflow.raw_ops.SpaceToBatchND": "doc",
    "tensorflow.raw_ops.SparseBincount": "doc",
    "tensorflow.raw_ops.StatelessWhile": "doc",
    "tensorflow.raw_ops.StringToNumber": "doc",
    "tensorflow.raw_ops.TFRecordReader": "doc",
    "tensorflow.raw_ops.TextLineReader": "doc",
    "tensorflow.raw_ops.UnbatchDataset": "doc",
    "tensorflow.sparse.fill_empty_rows": "doc",
    "tensorflow.compat.v1.MetaGraphDef": "doc",
    "tensorflow.compat.v1.boolean_mask": "doc",
    "tensorflow.compat.v1.data.Dataset": "doc",
    "tensorflow.compat.v1.gfile.Rename": "doc",
    "tensorflow.compat.v1.io.read_file": "doc",
    "tensorflow.compat.v1.keras.layers": "doc",
    "tensorflow.compat.v1.keras.losses": "doc",
    "tensorflow.compat.v1.keras.models": "doc",
    "tensorflow.compat.v1.layers.Dense": "doc",
    "tensorflow.compat.v1.layers.dense": "doc",
    "tensorflow.compat.v1.linalg.trace": "doc",
    "tensorflow.compat.v1.metrics.mean": "doc",
    "tensorflow.compat.v1.nn.erosion2d": "doc",
    "tensorflow.compat.v1.ragged.cross": "doc",
    "tensorflow.compat.v1.ragged.range": "doc",
    "tensorflow.compat.v1.ragged.stack": "doc",
    "tensorflow.compat.v1.signal.frame": "doc",
    "tensorflow.compat.v1.sparse.cross": "doc",
    "tensorflow.compat.v1.sparse.merge": "doc",
    "tensorflow.compat.v1.sparse.slice": "doc",
    "tensorflow.compat.v1.sparse.split": "doc",
    "tensorflow.compat.v1.sparse_merge": "doc",
    "tensorflow.distribute.get_strategy": "doc",
    "tensorflow.errors.UnavailableError": "doc",
    "tensorflow.estimator.DNNClassifier": "doc",
    "tensorflow.estimator.EstimatorSpec": "doc",
    "tensorflow.estimator.FinalExporter": "doc",
    "tensorflow.estimator.NanTensorHook": "doc",
    "tensorflow.keras.activations.swish": "doc",
    "tensorflow.keras.callbacks.History": "doc",
    "tensorflow.keras.datasets.cifar100": "doc",
    "tensorflow.keras.initializers.Ones": "doc",
    "tensorflow.keras.initializers.ones": "doc",
    "tensorflow.keras.layers.Activation": "doc",
    "tensorflow.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.keras.layers.Cropping1D": "doc",
    "tensorflow.keras.layers.Cropping2D": "doc",
    "tensorflow.keras.layers.Cropping3D": "doc",
    "tensorflow.keras.layers.InputLayer": "doc",
    "tensorflow.keras.metrics.Precision": "doc",
    "tensorflow.keras.metrics.serialize": "doc",
    "tensorflow.keras.models.Sequential": "doc",
    "tensorflow.keras.models.load_model": "doc",
    "tensorflow.keras.models.save_model": "doc",
    "tensorflow.keras.optimizers.Adamax": "doc",
    "tensorflow.keras.regularizers.L1L2": "doc",
    "tensorflow.metrics.binary_accuracy": "doc",
    "tensorflow.quantization.dequantize": "doc",
    "tensorflow.raw_ops.BarrierTakeMany": "doc",
    "tensorflow.raw_ops.BatchMatrixDiag": "doc",
    "tensorflow.raw_ops.BlockLSTMGradV2": "doc",
    "tensorflow.raw_ops.CheckNumericsV2": "doc",
    "tensorflow.raw_ops.CompressElement": "doc",
    "tensorflow.raw_ops.CrossReplicaSum": "doc",
    "tensorflow.raw_ops.DebugIdentityV2": "doc",
    "tensorflow.raw_ops.DecodePaddedRaw": "doc",
    "tensorflow.raw_ops.EmptyTensorList": "doc",
    "tensorflow.raw_ops.InitializeTable": "doc",
    "tensorflow.raw_ops.IteratorGetNext": "doc",
    "tensorflow.raw_ops.LookupTableFind": "doc",
    "tensorflow.raw_ops.LookupTableSize": "doc",
    "tensorflow.raw_ops.MapUnstageNoKey": "doc",
    "tensorflow.raw_ops.MatrixLogarithm": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV2": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV3": "doc",
    "tensorflow.raw_ops.MaxPoolGradGrad": "doc",
    "tensorflow.raw_ops.OneShotIterator": "doc",
    "tensorflow.raw_ops.OptimizeDataset": "doc",
    "tensorflow.raw_ops.OrderedMapClear": "doc",
    "tensorflow.raw_ops.OrderedMapStage": "doc",
    "tensorflow.raw_ops.PartitionedCall": "doc",
    "tensorflow.raw_ops.PopulationCount": "doc",
    "tensorflow.raw_ops.PrefetchDataset": "doc",
    "tensorflow.raw_ops.PreventGradient": "doc",
    "tensorflow.raw_ops.PriorityQueueV2": "doc",
    "tensorflow.raw_ops.PyFuncStateless": "doc",
    "tensorflow.raw_ops.QuantizedConcat": "doc",
    "tensorflow.raw_ops.QuantizedConv2D": "doc",
    "tensorflow.raw_ops.QuantizedMatMul": "doc",
    "tensorflow.raw_ops.QueueIsClosedV2": "doc",
    "tensorflow.raw_ops.RandomGammaGrad": "doc",
    "tensorflow.raw_ops.RandomPoissonV2": "doc",
    "tensorflow.raw_ops.RegisterDataset": "doc",
    "tensorflow.raw_ops.ReverseSequence": "doc",
    "tensorflow.raw_ops.SamplingDataset": "doc",
    "tensorflow.raw_ops.ScatterNdUpdate": "doc",
    "tensorflow.raw_ops.SdcaOptimizerV2": "doc",
    "tensorflow.raw_ops.SerializeSparse": "doc",
    "tensorflow.raw_ops.SerializeTensor": "doc",
    "tensorflow.raw_ops.ShardedFilename": "doc",
    "tensorflow.raw_ops.ShardedFilespec": "doc",
    "tensorflow.raw_ops.SnapshotDataset": "doc",
    "tensorflow.raw_ops.SparseApplyFtrl": "doc",
    "tensorflow.raw_ops.SparseMatrixAdd": "doc",
    "tensorflow.raw_ops.SparseMatrixMul": "doc",
    "tensorflow.raw_ops.SparseMatrixNNZ": "doc",
    "tensorflow.raw_ops.SparseReduceMax": "doc",
    "tensorflow.raw_ops.SparseReduceSum": "doc",
    "tensorflow.raw_ops.SparseSliceGrad": "doc",
    "tensorflow.raw_ops.StatefulUniform": "doc",
    "tensorflow.raw_ops.TFRecordDataset": "doc",
    "tensorflow.raw_ops.TensorArrayGrad": "doc",
    "tensorflow.raw_ops.TensorArrayPack": "doc",
    "tensorflow.raw_ops.TensorArrayRead": "doc",
    "tensorflow.raw_ops.TensorArraySize": "doc",
    "tensorflow.raw_ops.TensorListSplit": "doc",
    "tensorflow.raw_ops.TensorListStack": "doc",
    "tensorflow.raw_ops.TensorSummaryV2": "doc",
    "tensorflow.raw_ops.TextLineDataset": "doc",
    "tensorflow.raw_ops.TruncatedNormal": "doc",
    "tensorflow.raw_ops.WholeFileReader": "doc",
    "tensorflow.raw_ops.WorkerHeartbeat": "doc",
    "tensorflow.saved_model.LoadOptions": "doc",
    "tensorflow.saved_model.SaveOptions": "doc",
    "tensorflow.compat.v1.data.Iterator": "doc",
    "tensorflow.compat.v1.estimator.tpu": "doc",
    "tensorflow.compat.v1.keras.backend": "doc",
    "tensorflow.compat.v1.keras.metrics": "doc",
    "tensorflow.compat.v1.manip.reverse": "doc",
    "tensorflow.compat.v1.nn.leaky_relu": "doc",
    "tensorflow.compat.v1.nn.static_rnn": "doc",
    "tensorflow.compat.v1.sequence_mask": "doc",
    "tensorflow.compat.v1.sparse.concat": "doc",
    "tensorflow.compat.v1.sparse.matmul": "doc",
    "tensorflow.compat.v1.sparse.retain": "doc",
    "tensorflow.compat.v1.stop_gradient": "doc",
    "tensorflow.compat.v1.test.TestCase": "doc",
    "tensorflow.config.optimizer.set_jit": "doc",
    "tensorflow.estimator.LatestExporter": "doc",
    "tensorflow.estimator.MultiClassHead": "doc",
    "tensorflow.estimator.MultiLabelHead": "doc",
    "tensorflow.estimator.RegressionHead": "doc",
    "tensorflow.estimator.SessionRunArgs": "doc",
    "tensorflow.estimator.SessionRunHook": "doc",
    "tensorflow.estimator.StopAtStepHook": "doc",
    "tensorflow.experimental.numpy.trace": "doc",
    "tensorflow.experimental.numpy.zeros": "doc",
    "tensorflow.keras.activations.linear": "doc",
    "tensorflow.keras.applications.VGG16": "doc",
    "tensorflow.keras.applications.VGG19": "doc",
    "tensorflow.keras.applications.vgg16": "doc",
    "tensorflow.keras.applications.vgg19": "doc",
    "tensorflow.keras.backend.reset_uids": "doc",
    "tensorflow.keras.callbacks.Callback": "doc",
    "tensorflow.keras.constraints.NonNeg": "doc",
    "tensorflow.keras.initializers.Zeros": "doc",
    "tensorflow.keras.initializers.zeros": "doc",
    "tensorflow.keras.layers.Concatenate": "doc",
    "tensorflow.keras.layers.concatenate": "doc",
    "tensorflow.keras.layers.deserialize": "doc",
    "tensorflow.keras.losses.deserialize": "doc",
    "tensorflow.keras.metrics.MeanTensor": "doc",
    "tensorflow.keras.models.clone_model": "doc",
    "tensorflow.keras.optimizers.Adagrad": "doc",
    "tensorflow.keras.optimizers.RMSprop": "doc",
    "tensorflow.keras.preprocessing.text": "doc",
    "tensorflow.keras.regularizers.l1_l2": "doc",
    "tensorflow.keras.utils.model_to_dot": "doc",
    "tensorflow.math.special.fresnel_sin": "doc",
    "tensorflow.metrics.CategoricalHinge": "doc",
    "tensorflow.metrics.CosineSimilarity": "doc",
    "tensorflow.metrics.MeanSquaredError": "doc",
    "tensorflow.raw_ops.AdjustContrastv2": "doc",
    "tensorflow.raw_ops.AdjustSaturation": "doc",
    "tensorflow.raw_ops.ApproximateEqual": "doc",
    "tensorflow.raw_ops.AssignVariableOp": "doc",
    "tensorflow.raw_ops.AudioSpectrogram": "doc",
    "tensorflow.raw_ops.AutoShardDataset": "doc",
    "tensorflow.raw_ops.BarrierReadySize": "doc",
    "tensorflow.raw_ops.BatchMatrixSolve": "doc",
    "tensorflow.raw_ops.CTCGreedyDecoder": "doc",
    "tensorflow.raw_ops.CollectiveGather": "doc",
    "tensorflow.raw_ops.CollectiveReduce": "doc",
    "tensorflow.raw_ops.ComputeBatchSize": "doc",
    "tensorflow.raw_ops.ConsumeMutexLock": "doc",
    "tensorflow.raw_ops.CudnnRNNBackprop": "doc",
    "tensorflow.raw_ops.DataFormatDimMap": "doc",
    "tensorflow.raw_ops.DatasetFromGraph": "doc",
    "tensorflow.raw_ops.DatasetToGraphV2": "doc",
    "tensorflow.raw_ops.DummyMemoryCache": "doc",
    "tensorflow.raw_ops.DynamicPartition": "doc",
    "tensorflow.raw_ops.ExtractJpegShape": "doc",
    "tensorflow.raw_ops.FusedBatchNormV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormV3": "doc",
    "tensorflow.raw_ops.GRUBlockCellGrad": "doc",
    "tensorflow.raw_ops.GeneratorDataset": "doc",
    "tensorflow.raw_ops.GetSessionHandle": "doc",
    "tensorflow.raw_ops.GetSessionTensor": "doc",
    "tensorflow.raw_ops.HistogramSummary": "doc",
    "tensorflow.raw_ops.IdentityReaderV2": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV2": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV3": "doc",
    "tensorflow.raw_ops.MatrixSquareRoot": "doc",
    "tensorflow.raw_ops.MutableHashTable": "doc",
    "tensorflow.raw_ops.OptionalGetValue": "doc",
    "tensorflow.raw_ops.OptionalHasValue": "doc",
    "tensorflow.raw_ops.OutfeedDequeueV2": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueue": "doc",
    "tensorflow.raw_ops.QuantizedAvgPool": "doc",
    "tensorflow.raw_ops.QuantizedBiasAdd": "doc",
    "tensorflow.raw_ops.QuantizedMaxPool": "doc",
    "tensorflow.raw_ops.QuantizedReshape": "doc",
    "tensorflow.raw_ops.QueueDequeueMany": "doc",
    "tensorflow.raw_ops.QueueDequeueUpTo": "doc",
    "tensorflow.raw_ops.QueueEnqueueMany": "doc",
    "tensorflow.raw_ops.RandomUniformInt": "doc",
    "tensorflow.raw_ops.ReaderReadUpToV2": "doc",
    "tensorflow.raw_ops.RebatchDatasetV2": "doc",
    "tensorflow.raw_ops.RefNextIteration": "doc",
    "tensorflow.raw_ops.ResourceGatherNd": "doc",
    "tensorflow.raw_ops.SelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV2": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV3": "doc",
    "tensorflow.raw_ops.SparseSegmentSum": "doc",
    "tensorflow.raw_ops.StridedSliceGrad": "doc",
    "tensorflow.raw_ops.SymbolicGradient": "doc",
    "tensorflow.raw_ops.TFRecordReaderV2": "doc",
    "tensorflow.raw_ops.TakeWhileDataset": "doc",
    "tensorflow.raw_ops.TensorArrayClose": "doc",
    "tensorflow.raw_ops.TensorArraySplit": "doc",
    "tensorflow.raw_ops.TensorArrayWrite": "doc",
    "tensorflow.raw_ops.TensorListConcat": "doc",
    "tensorflow.raw_ops.TensorListGather": "doc",
    "tensorflow.raw_ops.TensorListLength": "doc",
    "tensorflow.raw_ops.TensorListResize": "doc",
    "tensorflow.raw_ops.TensorScatterAdd": "doc",
    "tensorflow.raw_ops.TensorScatterMax": "doc",
    "tensorflow.raw_ops.TensorScatterMin": "doc",
    "tensorflow.raw_ops.TensorScatterSub": "doc",
    "tensorflow.raw_ops.TextLineReaderV2": "doc",
    "tensorflow.raw_ops.ThreadPoolHandle": "doc",
    "tensorflow.raw_ops.TridiagonalSolve": "doc",
    "tensorflow.raw_ops.UnicodeTranscode": "doc",
    "tensorflow.raw_ops.UniqueWithCounts": "doc",
    "tensorflow.saved_model.experimental": "doc",
    "tensorflow.sysconfig.get_build_info": "doc",
    "tensorflow.sysconfig.get_link_flags": "doc",
    "tensorflow.compat.v1.errors.OpError": "doc",
    "tensorflow.compat.v1.estimator.Head": "doc",
    "tensorflow.compat.v1.io.decode_jpeg": "doc",
    "tensorflow.compat.v1.io.encode_jpeg": "doc",
    "tensorflow.compat.v1.keras.datasets": "doc",
    "tensorflow.compat.v1.keras.wrappers": "doc",
    "tensorflow.compat.v1.metrics.recall": "doc",
    "tensorflow.compat.v1.random_uniform": "doc",
    "tensorflow.compat.v1.sparse.maximum": "doc",
    "tensorflow.compat.v1.sparse.minimum": "doc",
    "tensorflow.compat.v1.sparse.reorder": "doc",
    "tensorflow.compat.v1.sparse.reshape": "doc",
    "tensorflow.compat.v1.sparse.softmax": "doc",
    "tensorflow.data.experimental.service": "doc",
    "tensorflow.errors.AlreadyExistsError": "doc",
    "tensorflow.errors.UnimplementedError": "doc",
    "tensorflow.estimator.BinaryClassHead": "doc",
    "tensorflow.estimator.LinearEstimator": "doc",
    "tensorflow.estimator.LinearRegressor": "doc",
    "tensorflow.estimator.StepCounterHook": "doc",
    "tensorflow.experimental.numpy.arange": "doc",
    "tensorflow.experimental.numpy.vander": "doc",
    "tensorflow.initializers.RandomNormal": "doc",
    "tensorflow.keras.activations.sigmoid": "doc",
    "tensorflow.keras.activations.softmax": "doc",
    "tensorflow.keras.applications.nasnet": "doc",
    "tensorflow.keras.applications.resnet": "doc",
    "tensorflow.keras.backend.set_epsilon": "doc",
    "tensorflow.keras.callbacks.CSVLogger": "doc",
    "tensorflow.keras.constraints.MaxNorm": "doc",
    "tensorflow.keras.constraints.non_neg": "doc",
    "tensorflow.keras.layers.AlphaDropout": "doc",
    "tensorflow.keras.layers.MaxPooling1D": "doc",
    "tensorflow.keras.layers.MaxPooling2D": "doc",
    "tensorflow.keras.layers.MaxPooling3D": "doc",
    "tensorflow.keras.layers.RepeatVector": "doc",
    "tensorflow.keras.layers.UpSampling1D": "doc",
    "tensorflow.keras.layers.UpSampling2D": "doc",
    "tensorflow.keras.layers.UpSampling3D": "doc",
    "tensorflow.keras.layers.experimental": "doc",
    "tensorflow.keras.losses.KLDivergence": "doc",
    "tensorflow.keras.losses.SquaredHinge": "doc",
    "tensorflow.keras.metrics.deserialize": "doc",
    "tensorflow.keras.optimizers.Adadelta": "doc",
    "tensorflow.keras.preprocessing.image": "doc",
    "tensorflow.metrics.MeanAbsoluteError": "doc",
    "tensorflow.metrics.MeanRelativeError": "doc",
    "tensorflow.metrics.PrecisionAtRecall": "doc",
    "tensorflow.metrics.RecallAtPrecision": "doc",
    "tensorflow.raw_ops.AnonymousIterator": "doc",
    "tensorflow.raw_ops.AssertNextDataset": "doc",
    "tensorflow.raw_ops.BarrierInsertMany": "doc",
    "tensorflow.raw_ops.BatchCholeskyGrad": "doc",
    "tensorflow.raw_ops.CollectivePermute": "doc",
    "tensorflow.raw_ops.CompareAndBitpack": "doc",
    "tensorflow.raw_ops.DatasetToTFRecord": "doc",
    "tensorflow.raw_ops.DecodeAndCropJpeg": "doc",
    "tensorflow.raw_ops.DecodeJSONExample": "doc",
    "tensorflow.raw_ops.DeleteMemoryCache": "doc",
    "tensorflow.raw_ops.DeserializeSparse": "doc",
    "tensorflow.raw_ops.DestroyResourceOp": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxes": "doc",
    "tensorflow.raw_ops.FractionalAvgPool": "doc",
    "tensorflow.raw_ops.FractionalMaxPool": "doc",
    "tensorflow.raw_ops.InitializeTableV2": "doc",
    "tensorflow.raw_ops.InterleaveDataset": "doc",
    "tensorflow.raw_ops.InvertPermutation": "doc",
    "tensorflow.raw_ops.IteratorGetDevice": "doc",
    "tensorflow.raw_ops.LSTMBlockCellGrad": "doc",
    "tensorflow.raw_ops.LookupTableExport": "doc",
    "tensorflow.raw_ops.LookupTableFindV2": "doc",
    "tensorflow.raw_ops.LookupTableImport": "doc",
    "tensorflow.raw_ops.LookupTableInsert": "doc",
    "tensorflow.raw_ops.LookupTableSizeV2": "doc",
    "tensorflow.raw_ops.MapIncompleteSize": "doc",
    "tensorflow.raw_ops.MatrixDeterminant": "doc",
    "tensorflow.raw_ops.MatrixExponential": "doc",
    "tensorflow.raw_ops.MaxPool3DGradGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradV2": "doc",
    "tensorflow.raw_ops.MaxPoolWithArgmax": "doc",
    "tensorflow.raw_ops.NonMaxSuppression": "doc",
    "tensorflow.raw_ops.OptimizeDatasetV2": "doc",
    "tensorflow.raw_ops.OptionalFromValue": "doc",
    "tensorflow.raw_ops.OrderedMapUnstage": "doc",
    "tensorflow.raw_ops.PrelinearizeTuple": "doc",
    "tensorflow.raw_ops.ResizeBicubicGrad": "doc",
    "tensorflow.raw_ops.ResourceApplyAdam": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrl": "doc",
    "tensorflow.raw_ops.ResourceCountUpTo": "doc",
    "tensorflow.raw_ops.ScaleAndTranslate": "doc",
    "tensorflow.raw_ops.SerializeIterator": "doc",
    "tensorflow.raw_ops.SnapshotDatasetV2": "doc",
    "tensorflow.raw_ops.SparseApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SparseCrossHashed": "doc",
    "tensorflow.raw_ops.SparseMatrixZeros": "doc",
    "tensorflow.raw_ops.SparseSegmentMean": "doc",
    "tensorflow.raw_ops.SquaredDifference": "doc",
    "tensorflow.raw_ops.TemporaryVariable": "doc",
    "tensorflow.raw_ops.TensorArrayConcat": "doc",
    "tensorflow.raw_ops.TensorArrayGather": "doc",
    "tensorflow.raw_ops.TensorArrayGradV2": "doc",
    "tensorflow.raw_ops.TensorArrayGradV3": "doc",
    "tensorflow.raw_ops.TensorArrayReadV2": "doc",
    "tensorflow.raw_ops.TensorArrayReadV3": "doc",
    "tensorflow.raw_ops.TensorArraySizeV2": "doc",
    "tensorflow.raw_ops.TensorArraySizeV3": "doc",
    "tensorflow.raw_ops.TensorArrayUnpack": "doc",
    "tensorflow.raw_ops.TensorListGetItem": "doc",
    "tensorflow.raw_ops.TensorListPopBack": "doc",
    "tensorflow.raw_ops.TensorListReserve": "doc",
    "tensorflow.raw_ops.TensorListScatter": "doc",
    "tensorflow.raw_ops.TensorListSetItem": "doc",
    "tensorflow.raw_ops.ThreadPoolDataset": "doc",
    "tensorflow.raw_ops.TridiagonalMatMul": "doc",
    "tensorflow.raw_ops.UncompressElement": "doc",
    "tensorflow.raw_ops.WholeFileReaderV2": "doc",
    "tensorflow.raw_ops.WriteAudioSummary": "doc",
    "tensorflow.raw_ops.WriteGraphSummary": "doc",
    "tensorflow.raw_ops.WriteImageSummary": "doc",
    "tensorflow.compat.v1.autograph.trace": "doc",
    "tensorflow.compat.v1.io.gfile.rename": "doc",
    "tensorflow.compat.v1.io.gfile.rmtree": "doc",
    "tensorflow.compat.v1.keras.callbacks": "doc",
    "tensorflow.compat.v1.keras.estimator": "doc",
    "tensorflow.compat.v1.math.reduce_std": "doc",
    "tensorflow.compat.v1.profiler.advise": "doc",
    "tensorflow.compat.v1.ragged.constant": "doc",
    "tensorflow.compat.v1.sets.difference": "doc",
    "tensorflow.compat.v1.sparse.bincount": "doc",
    "tensorflow.compat.v1.sparse.to_dense": "doc",
    "tensorflow.estimator.LinearClassifier": "doc",
    "tensorflow.estimator.SessionRunValues": "doc",
    "tensorflow.estimator.SummarySaverHook": "doc",
    "tensorflow.experimental.numpy.deg2rad": "doc",
    "tensorflow.experimental.numpy.nanmean": "doc",
    "tensorflow.experimental.numpy.rad2deg": "doc",
    "tensorflow.keras.activations.softplus": "doc",
    "tensorflow.keras.activations.softsign": "doc",
    "tensorflow.keras.callbacks.BaseLogger": "doc",
    "tensorflow.keras.constraints.UnitNorm": "doc",
    "tensorflow.keras.constraints.max_norm": "doc",
    "tensorflow.keras.layers.Bidirectional": "doc",
    "tensorflow.keras.layers.Convolution1D": "doc",
    "tensorflow.keras.layers.Convolution2D": "doc",
    "tensorflow.keras.layers.Convolution3D": "doc",
    "tensorflow.keras.layers.DenseFeatures": "doc",
    "tensorflow.keras.layers.GaussianNoise": "doc",
    "tensorflow.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.keras.losses.kl_divergence": "doc",
    "tensorflow.keras.losses.squared_hinge": "doc",
    "tensorflow.keras.metrics.KLDivergence": "doc",
    "tensorflow.keras.metrics.LogCoshError": "doc",
    "tensorflow.keras.metrics.SquaredHinge": "doc",
    "tensorflow.keras.optimizers.Optimizer": "doc",
    "tensorflow.keras.optimizers.schedules": "doc",
    "tensorflow.keras.optimizers.serialize": "doc",
    "tensorflow.keras.utils.to_categorical": "doc",
    "tensorflow.metrics.BinaryCrossentropy": "doc",
    "tensorflow.metrics.mean_squared_error": "doc",
    "tensorflow.raw_ops.BatchMatrixInverse": "doc",
    "tensorflow.raw_ops.BatchMatrixSetDiag": "doc",
    "tensorflow.raw_ops.BatchMatrixSolveLs": "doc",
    "tensorflow.raw_ops.CloseSummaryWriter": "doc",
    "tensorflow.raw_ops.CollectiveGatherV2": "doc",
    "tensorflow.raw_ops.CollectiveReduceV2": "doc",
    "tensorflow.raw_ops.ConcatenateDataset": "doc",
    "tensorflow.raw_ops.ConjugateTranspose": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV2": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV3": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsSize": "doc",
    "tensorflow.raw_ops.DataServiceDataset": "doc",
    "tensorflow.raw_ops.DatasetCardinality": "doc",
    "tensorflow.raw_ops.DummySeedGenerator": "doc",
    "tensorflow.raw_ops.FlushSummaryWriter": "doc",
    "tensorflow.raw_ops.FusedBatchNormGrad": "doc",
    "tensorflow.raw_ops.GetSessionHandleV2": "doc",
    "tensorflow.raw_ops.InfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.InfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.IsotonicRegression": "doc",
    "tensorflow.raw_ops.LoadAndRemapMatrix": "doc",
    "tensorflow.raw_ops.MapAndBatchDataset": "doc",
    "tensorflow.raw_ops.MergeV2Checkpoints": "doc",
    "tensorflow.raw_ops.MutableHashTableV2": "doc",
    "tensorflow.raw_ops.PaddedBatchDataset": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueueV2": "doc",
    "tensorflow.raw_ops.ParallelMapDataset": "doc",
    "tensorflow.raw_ops.ParseSingleExample": "doc",
    "tensorflow.raw_ops.QueueDequeueManyV2": "doc",
    "tensorflow.raw_ops.QueueDequeueUpToV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueManyV2": "doc",
    "tensorflow.raw_ops.RandomShuffleQueue": "doc",
    "tensorflow.raw_ops.ReaderRestoreState": "doc",
    "tensorflow.raw_ops.ResizeBilinearGrad": "doc",
    "tensorflow.raw_ops.ResourceScatterAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterDiv": "doc",
    "tensorflow.raw_ops.ResourceScatterMax": "doc",
    "tensorflow.raw_ops.ResourceScatterMin": "doc",
    "tensorflow.raw_ops.ResourceScatterMul": "doc",
    "tensorflow.raw_ops.ResourceScatterSub": "doc",
    "tensorflow.raw_ops.SparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.SparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.SparseMatrixMatMul": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtN": "doc",
    "tensorflow.raw_ops.StatefulUniformInt": "doc",
    "tensorflow.raw_ops.StaticRegexReplace": "doc",
    "tensorflow.raw_ops.StridedSliceAssign": "doc",
    "tensorflow.raw_ops.StringToHashBucket": "doc",
    "tensorflow.raw_ops.TPUOrdinalSelector": "doc",
    "tensorflow.raw_ops.TPUPartitionedCall": "doc",
    "tensorflow.raw_ops.TPUReplicatedInput": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV2": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV3": "doc",
    "tensorflow.raw_ops.TensorArrayScatter": "doc",
    "tensorflow.raw_ops.TensorArraySplitV2": "doc",
    "tensorflow.raw_ops.TensorArraySplitV3": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV2": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV3": "doc",
    "tensorflow.raw_ops.TensorListConcatV2": "doc",
    "tensorflow.raw_ops.TensorListPushBack": "doc",
    "tensorflow.raw_ops.TensorSliceDataset": "doc",
    "tensorflow.raw_ops.UniqueWithCountsV2": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMax": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMin": "doc",
    "tensorflow.raw_ops.UnsortedSegmentSum": "doc",
    "tensorflow.raw_ops.VarIsInitializedOp": "doc",
    "tensorflow.raw_ops.WrapDatasetVariant": "doc",
    "tensorflow.raw_ops.WriteScalarSummary": "doc",
    "tensorflow.sparse.sparse_dense_matmul": "doc",
    "tensorflow.xla.experimental.jit_scope": "doc",
    "tensorflow.compat.v1.estimator.export": "doc",
    "tensorflow.compat.v1.estimator.inputs": "doc",
    "tensorflow.compat.v1.keras.Sequential": "doc",
    "tensorflow.compat.v1.keras.layers.Add": "doc",
    "tensorflow.compat.v1.keras.layers.Dot": "doc",
    "tensorflow.compat.v1.keras.layers.ELU": "doc",
    "tensorflow.compat.v1.keras.layers.GRU": "doc",
    "tensorflow.compat.v1.keras.layers.RNN": "doc",
    "tensorflow.compat.v1.keras.layers.add": "doc",
    "tensorflow.compat.v1.keras.layers.dot": "doc",
    "tensorflow.compat.v1.keras.losses.KLD": "doc",
    "tensorflow.compat.v1.keras.losses.MAE": "doc",
    "tensorflow.compat.v1.keras.losses.MSE": "doc",
    "tensorflow.compat.v1.keras.losses.get": "doc",
    "tensorflow.compat.v1.keras.losses.kld": "doc",
    "tensorflow.compat.v1.keras.losses.mae": "doc",
    "tensorflow.compat.v1.keras.losses.mse": "doc",
    "tensorflow.compat.v1.keras.optimizers": "doc",
    "tensorflow.compat.v1.linalg.band_part": "doc",
    "tensorflow.compat.v1.manip.scatter_nd": "doc",
    "tensorflow.compat.v1.math.segment_max": "doc",
    "tensorflow.compat.v1.math.segment_min": "doc",
    "tensorflow.compat.v1.metrics.accuracy": "doc",
    "tensorflow.compat.v1.metrics.mean_iou": "doc",
    "tensorflow.compat.v1.saved_model.load": "doc",
    "tensorflow.compat.v1.saved_model.save": "doc",
    "tensorflow.compat.v1.user_ops.my_fact": "doc",
    "tensorflow.errors.InvalidArgumentError": "doc",
    "tensorflow.errors.UnauthenticatedError": "doc",
    "tensorflow.estimator.BaselineEstimator": "doc",
    "tensorflow.estimator.BaselineRegressor": "doc",
    "tensorflow.estimator.LoggingTensorHook": "doc",
    "tensorflow.estimator.SecondOrStepTimer": "doc",
    "tensorflow.estimator.SessionRunContext": "doc",
    "tensorflow.estimator.WarmStartSettings": "doc",
    "tensorflow.initializers.random_uniform": "doc",
    "tensorflow.keras.activations.serialize": "doc",
    "tensorflow.keras.applications.ResNet50": "doc",
    "tensorflow.keras.applications.Xception": "doc",
    "tensorflow.keras.applications.densenet": "doc",
    "tensorflow.keras.applications.resnet50": "doc",
    "tensorflow.keras.applications.xception": "doc",
    "tensorflow.keras.backend.clear_session": "doc",
    "tensorflow.keras.callbacks.TensorBoard": "doc",
    "tensorflow.keras.constraints.serialize": "doc",
    "tensorflow.keras.constraints.unit_norm": "doc",
    "tensorflow.keras.initializers.Constant": "doc",
    "tensorflow.keras.initializers.HeNormal": "doc",
    "tensorflow.keras.initializers.Identity": "doc",
    "tensorflow.keras.initializers.constant": "doc",
    "tensorflow.keras.initializers.identity": "doc",
    "tensorflow.keras.metrics.TrueNegatives": "doc",
    "tensorflow.keras.metrics.TruePositives": "doc",
    "tensorflow.keras.metrics.kl_divergence": "doc",
    "tensorflow.keras.metrics.squared_hinge": "doc",
    "tensorflow.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.keras.wrappers.scikit_learn": "doc",
    "tensorflow.metrics.CategoricalAccuracy": "doc",
    "tensorflow.metrics.binary_crossentropy": "doc",
    "tensorflow.metrics.mean_absolute_error": "doc",
    "tensorflow.raw_ops.AllCandidateSampler": "doc",
    "tensorflow.raw_ops.AnonymousIteratorV2": "doc",
    "tensorflow.raw_ops.AssignAddVariableOp": "doc",
    "tensorflow.raw_ops.AssignSubVariableOp": "doc",
    "tensorflow.raw_ops.BatchMatrixBandPart": "doc",
    "tensorflow.raw_ops.BatchMatrixDiagPart": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEig": "doc",
    "tensorflow.raw_ops.BoostedTreesPredict": "doc",
    "tensorflow.raw_ops.CollectiveBcastRecv": "doc",
    "tensorflow.raw_ops.CollectiveBcastSend": "doc",
    "tensorflow.raw_ops.Conv2DBackpropInput": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInput": "doc",
    "tensorflow.raw_ops.CumulativeLogsumexp": "doc",
    "tensorflow.raw_ops.DebugNumericSummary": "doc",
    "tensorflow.raw_ops.DeleteSeedGenerator": "doc",
    "tensorflow.raw_ops.DeleteSessionTensor": "doc",
    "tensorflow.raw_ops.DeserializeIterator": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxesV2": "doc",
    "tensorflow.raw_ops.ExtractImagePatches": "doc",
    "tensorflow.raw_ops.HistogramFixedWidth": "doc",
    "tensorflow.raw_ops.IgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.IteratorGetNextSync": "doc",
    "tensorflow.raw_ops.LatencyStatsDataset": "doc",
    "tensorflow.raw_ops.LookupTableExportV2": "doc",
    "tensorflow.raw_ops.LookupTableImportV2": "doc",
    "tensorflow.raw_ops.LookupTableInsertV2": "doc",
    "tensorflow.raw_ops.LookupTableRemoveV2": "doc",
    "tensorflow.raw_ops.MultiDeviceIterator": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV3": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV4": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV5": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.OutfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.ParseExampleDataset": "doc",
    "tensorflow.raw_ops.RequantizationRange": "doc",
    "tensorflow.raw_ops.ResourceApplyAdaMax": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SerializeManySparse": "doc",
    "tensorflow.raw_ops.SparseApplyAdadelta": "doc",
    "tensorflow.raw_ops.SparseApplyMomentum": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseAdd": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseDiv": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseMul": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRows": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmax": "doc",
    "tensorflow.raw_ops.SparseSparseMaximum": "doc",
    "tensorflow.raw_ops.SparseSparseMinimum": "doc",
    "tensorflow.raw_ops.TPUReplicatedOutput": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV2": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV3": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV2": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV3": "doc",
    "tensorflow.raw_ops.TensorListScatterV2": "doc",
    "tensorflow.raw_ops.TensorScatterUpdate": "doc",
    "tensorflow.raw_ops.UnsortedSegmentJoin": "doc",
    "tensorflow.raw_ops.UnsortedSegmentProd": "doc",
    "tensorflow.compat.v1.autograph.to_code": "doc",
    "tensorflow.compat.v1.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.image.decode_jpeg": "doc",
    "tensorflow.compat.v1.image.encode_jpeg": "doc",
    "tensorflow.compat.v1.keras.activations": "doc",
    "tensorflow.compat.v1.keras.backend.rnn": "doc",
    "tensorflow.compat.v1.keras.constraints": "doc",
    "tensorflow.compat.v1.keras.layers.LSTM": "doc",
    "tensorflow.compat.v1.keras.layers.ReLU": "doc",
    "tensorflow.compat.v1.keras.losses.Loss": "doc",
    "tensorflow.compat.v1.keras.losses.MAPE": "doc",
    "tensorflow.compat.v1.keras.losses.MSLE": "doc",
    "tensorflow.compat.v1.keras.losses.mape": "doc",
    "tensorflow.compat.v1.keras.losses.msle": "doc",
    "tensorflow.compat.v1.keras.metrics.AUC": "doc",
    "tensorflow.compat.v1.keras.metrics.KLD": "doc",
    "tensorflow.compat.v1.keras.metrics.MAE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSE": "doc",
    "tensorflow.compat.v1.keras.metrics.Sum": "doc",
    "tensorflow.compat.v1.keras.metrics.get": "doc",
    "tensorflow.compat.v1.keras.metrics.kld": "doc",
    "tensorflow.compat.v1.keras.metrics.mae": "doc",
    "tensorflow.compat.v1.keras.metrics.mse": "doc",
    "tensorflow.compat.v1.metrics.precision": "doc",
    "tensorflow.compat.v1.nn.conv_transpose": "doc",
    "tensorflow.compat.v1.saved_model.Asset": "doc",
    "tensorflow.compat.v1.saved_model.utils": "doc",
    "tensorflow.compat.v1.sets.intersection": "doc",
    "tensorflow.compat.v1.sparse.from_dense": "doc",
    "tensorflow.compat.v1.sparse.reduce_max": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum": "doc",
    "tensorflow.compat.v1.test.get_temp_dir": "doc",
    "tensorflow.compat.v1.train.global_step": "doc",
    "tensorflow.errors.DeadlineExceededError": "doc",
    "tensorflow.errors.PermissionDeniedError": "doc",
    "tensorflow.estimator.BaselineClassifier": "doc",
    "tensorflow.estimator.train_and_evaluate": "doc",
    "tensorflow.experimental.numpy.heaviside": "doc",
    "tensorflow.experimental.numpy.remainder": "doc",
    "tensorflow.keras.applications.MobileNet": "doc",
    "tensorflow.keras.applications.ResNet101": "doc",
    "tensorflow.keras.applications.ResNet152": "doc",
    "tensorflow.keras.applications.mobilenet": "doc",
    "tensorflow.keras.applications.resnet_v2": "doc",
    "tensorflow.keras.callbacks.CallbackList": "doc",
    "tensorflow.keras.callbacks.experimental": "doc",
    "tensorflow.keras.constraints.Constraint": "doc",
    "tensorflow.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.keras.datasets.fashion_mnist": "doc",
    "tensorflow.keras.initializers.he_normal": "doc",
    "tensorflow.keras.initializers.serialize": "doc",
    "tensorflow.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.keras.layers.GaussianDropout": "doc",
    "tensorflow.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.keras.layers.SeparableConv1D": "doc",
    "tensorflow.keras.layers.SeparableConv2D": "doc",
    "tensorflow.keras.layers.StackedRNNCells": "doc",
    "tensorflow.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.keras.layers.TimeDistributed": "doc",
    "tensorflow.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.keras.metrics.FalseNegatives": "doc",
    "tensorflow.keras.metrics.FalsePositives": "doc",
    "tensorflow.keras.mixed_precision.Policy": "doc",
    "tensorflow.keras.models.model_from_json": "doc",
    "tensorflow.keras.models.model_from_yaml": "doc",
    "tensorflow.keras.optimizers.deserialize": "doc",
    "tensorflow.keras.preprocessing.sequence": "doc",
    "tensorflow.keras.regularizers.serialize": "doc",
    "tensorflow.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.metrics.RootMeanSquaredError": "doc",
    "tensorflow.metrics.categorical_accuracy": "doc",
    "tensorflow.profiler.experimental.server": "doc",
    "tensorflow.raw_ops.AnonymousMemoryCache": "doc",
    "tensorflow.raw_ops.ApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ApplyGradientDescent": "doc",
    "tensorflow.raw_ops.ApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.CTCBeamSearchDecoder": "doc",
    "tensorflow.raw_ops.ChooseFastestDataset": "doc",
    "tensorflow.raw_ops.Conv2DBackpropFilter": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilter": "doc",
    "tensorflow.raw_ops.DataFormatVecPermute": "doc",
    "tensorflow.raw_ops.ExtractVolumePatches": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV3": "doc",
    "tensorflow.raw_ops.GroupByWindowDataset": "doc",
    "tensorflow.raw_ops.LogMatrixDeterminant": "doc",
    "tensorflow.raw_ops.MatchingFilesDataset": "doc",
    "tensorflow.raw_ops.NonDeterministicInts": "doc",
    "tensorflow.raw_ops.PaddedBatchDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelMapDatasetV2": "doc",
    "tensorflow.raw_ops.ParseSequenceExample": "doc",
    "tensorflow.raw_ops.RaggedTensorToSparse": "doc",
    "tensorflow.raw_ops.RaggedTensorToTensor": "doc",
    "tensorflow.raw_ops.RandomShuffleQueueV2": "doc",
    "tensorflow.raw_ops.RandomStandardNormal": "doc",
    "tensorflow.raw_ops.ReaderRestoreStateV2": "doc",
    "tensorflow.raw_ops.ReaderSerializeState": "doc",
    "tensorflow.raw_ops.RequantizePerChannel": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagrad": "doc",
    "tensorflow.raw_ops.ResourceApplyAddSign": "doc",
    "tensorflow.raw_ops.ResourceApplyRMSProp": "doc",
    "tensorflow.raw_ops.ResourceScatterNdAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMax": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMin": "doc",
    "tensorflow.raw_ops.ResourceScatterNdSub": "doc",
    "tensorflow.raw_ops.SlidingWindowDataset": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.SparseTensorDenseAdd": "doc",
    "tensorflow.raw_ops.StatelessMultinomial": "doc",
    "tensorflow.raw_ops.StaticRegexFullMatch": "doc",
    "tensorflow.raw_ops.TPUCompilationResult": "doc",
    "tensorflow.raw_ops.TPUReplicateMetadata": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV2": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV3": "doc",
    "tensorflow.raw_ops.TensorListFromTensor": "doc",
    "tensorflow.raw_ops.UnwrapDatasetVariant": "doc",
    "tensorflow.raw_ops.WriteRawProtoSummary": "doc",
    "tensorflow.compat.v1.compat.path_to_str": "doc",
    "tensorflow.compat.v1.estimator.EvalSpec": "doc",
    "tensorflow.compat.v1.estimator.Exporter": "doc",
    "tensorflow.compat.v1.estimator.ModeKeys": "doc",
    "tensorflow.compat.v1.image.central_crop": "doc",
    "tensorflow.compat.v1.initializers.zeros": "doc",
    "tensorflow.compat.v1.keras.applications": "doc",
    "tensorflow.compat.v1.keras.experimental": "doc",
    "tensorflow.compat.v1.keras.initializers": "doc",
    "tensorflow.compat.v1.keras.layers.Dense": "doc",
    "tensorflow.compat.v1.keras.layers.Input": "doc",
    "tensorflow.compat.v1.keras.layers.Layer": "doc",
    "tensorflow.compat.v1.keras.layers.PReLU": "doc",
    "tensorflow.compat.v1.keras.losses.Hinge": "doc",
    "tensorflow.compat.v1.keras.losses.Huber": "doc",
    "tensorflow.compat.v1.keras.losses.hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.MAPE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSLE": "doc",
    "tensorflow.compat.v1.keras.metrics.Mean": "doc",
    "tensorflow.compat.v1.keras.metrics.mape": "doc",
    "tensorflow.compat.v1.keras.metrics.msle": "doc",
    "tensorflow.compat.v1.keras.models.Model": "doc",
    "tensorflow.compat.v1.keras.regularizers": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag": "doc",
    "tensorflow.compat.v1.ragged.placeholder": "doc",
    "tensorflow.compat.v1.saved_model.loader": "doc",
    "tensorflow.compat.v1.sparse.placeholder": "doc",
    "tensorflow.compat.v1.sparse.reset_shape": "doc",
    "tensorflow.errors.ResourceExhaustedError": "doc",
    "tensorflow.estimator.CheckpointSaverHook": "doc",
    "tensorflow.estimator.export.ExportOutput": "doc",
    "tensorflow.experimental.numpy.atleast_1d": "doc",
    "tensorflow.experimental.numpy.atleast_2d": "doc",
    "tensorflow.experimental.numpy.atleast_3d": "doc",
    "tensorflow.experimental.numpy.zeros_like": "doc",
    "tensorflow.keras.activations.deserialize": "doc",
    "tensorflow.keras.activations.exponential": "doc",
    "tensorflow.keras.applications.ResNet50V2": "doc",
    "tensorflow.keras.backend.is_keras_tensor": "doc",
    "tensorflow.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.keras.constraints.deserialize": "doc",
    "tensorflow.keras.datasets.boston_housing": "doc",
    "tensorflow.keras.datasets.imdb.load_data": "doc",
    "tensorflow.keras.initializers.Orthogonal": "doc",
    "tensorflow.keras.initializers.he_uniform": "doc",
    "tensorflow.keras.initializers.orthogonal": "doc",
    "tensorflow.keras.layers.AveragePooling1D": "doc",
    "tensorflow.keras.layers.AveragePooling2D": "doc",
    "tensorflow.keras.layers.AveragePooling3D": "doc",
    "tensorflow.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.keras.losses.CategoricalHinge": "doc",
    "tensorflow.keras.losses.CosineSimilarity": "doc",
    "tensorflow.keras.losses.MeanSquaredError": "doc",
    "tensorflow.keras.metrics.binary_accuracy": "doc",
    "tensorflow.keras.utils.CustomObjectScope": "doc",
    "tensorflow.keras.utils.get_source_inputs": "doc",
    "tensorflow.raw_ops.AddSparseToTensorsMap": "doc",
    "tensorflow.raw_ops.BandedTriangularSolve": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.BoostedTreesBucketize": "doc",
    "tensorflow.raw_ops.BroadcastGradientArgs": "doc",
    "tensorflow.raw_ops.ComputeAccidentalHits": "doc",
    "tensorflow.raw_ops.ConfigureTPUEmbedding": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInputV2": "doc",
    "tensorflow.raw_ops.CreateSummaryDbWriter": "doc",
    "tensorflow.raw_ops.DebugGradientIdentity": "doc",
    "tensorflow.raw_ops.DebugNumericSummaryV2": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNative": "doc",
    "tensorflow.raw_ops.DeserializeManySparse": "doc",
    "tensorflow.raw_ops.DummyIterationCounter": "doc",
    "tensorflow.raw_ops.FractionalAvgPoolGrad": "doc",
    "tensorflow.raw_ops.FractionalMaxPoolGrad": "doc",
    "tensorflow.raw_ops.GroupByReducerDataset": "doc",
    "tensorflow.raw_ops.IsVariableInitialized": "doc",
    "tensorflow.raw_ops.MatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.MaxPoolGradWithArgmax": "doc",
    "tensorflow.raw_ops.MutableDenseHashTable": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTupleV2": "doc",
    "tensorflow.raw_ops.ParallelDynamicStitch": "doc",
    "tensorflow.raw_ops.ParseExampleDatasetV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantize": "doc",
    "tensorflow.raw_ops.QuantizedInstanceNorm": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariant": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighbor": "doc",
    "tensorflow.raw_ops.ResourceApplyAdadelta": "doc",
    "tensorflow.raw_ops.ResourceApplyMomentum": "doc",
    "tensorflow.raw_ops.ResourceScatterUpdate": "doc",
    "tensorflow.raw_ops.ScaleAndTranslateGrad": "doc",
    "tensorflow.raw_ops.SparseMatrixTranspose": "doc",
    "tensorflow.raw_ops.SparseReduceMaxSparse": "doc",
    "tensorflow.raw_ops.SparseReduceSumSparse": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanGrad": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandle": "doc",
    "tensorflow.raw_ops.TensorListConcatLists": "doc",
    "tensorflow.raw_ops.WriteHistogramSummary": "doc",
    "tensorflow.types.experimental.TensorLike": "doc",
    "tensorflow.compat.v1.distribute.Strategy": "doc",
    "tensorflow.compat.v1.errors.AbortedError": "doc",
    "tensorflow.compat.v1.errors.UnknownError": "doc",
    "tensorflow.compat.v1.estimator.Estimator": "doc",
    "tensorflow.compat.v1.estimator.MultiHead": "doc",
    "tensorflow.compat.v1.estimator.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.TrainSpec": "doc",
    "tensorflow.compat.v1.estimator.VocabInfo": "doc",
    "tensorflow.compat.v1.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3D": "doc",
    "tensorflow.compat.v1.keras.layers.Lambda": "doc",
    "tensorflow.compat.v1.keras.losses.cosine": "doc",
    "tensorflow.compat.v1.keras.metrics.Hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.hinge": "doc",
    "tensorflow.compat.v1.keras.preprocessing": "doc",
    "tensorflow.compat.v1.keras.utils.Progbar": "doc",
    "tensorflow.compat.v1.metrics.mean_tensor": "doc",
    "tensorflow.compat.v1.metrics.recall_at_k": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.GRUCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.RNNCell": "doc",
    "tensorflow.compat.v1.ragged.boolean_mask": "doc",
    "tensorflow.compat.v1.ragged.cross_hashed": "doc",
    "tensorflow.compat.v1.saved_model.Builder": "doc",
    "tensorflow.compat.v1.saved_model.builder": "doc",
    "tensorflow.compat.v1.saved_model.load_v2": "doc",
    "tensorflow.compat.v1.saved_model.main_op": "doc",
    "tensorflow.compat.v1.sparse.SparseTensor": "doc",
    "tensorflow.compat.v1.sparse.cross_hashed": "doc",
    "tensorflow.compat.v1.sparse.to_indicator": "doc",
    "tensorflow.compat.v1.tpu.shutdown_system": "doc",
    "tensorflow.errors.FailedPreconditionError": "doc",
    "tensorflow.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.estimator.export.PredictOutput": "doc",
    "tensorflow.keras.activations.hard_sigmoid": "doc",
    "tensorflow.keras.applications.DenseNet121": "doc",
    "tensorflow.keras.applications.DenseNet169": "doc",
    "tensorflow.keras.applications.DenseNet201": "doc",
    "tensorflow.keras.applications.InceptionV3": "doc",
    "tensorflow.keras.applications.MobileNetV2": "doc",
    "tensorflow.keras.applications.NASNetLarge": "doc",
    "tensorflow.keras.applications.ResNet101V2": "doc",
    "tensorflow.keras.applications.ResNet152V2": "doc",
    "tensorflow.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.keras.constraints.min_max_norm": "doc",
    "tensorflow.keras.datasets.mnist.load_data": "doc",
    "tensorflow.keras.experimental.CosineDecay": "doc",
    "tensorflow.keras.experimental.LinearModel": "doc",
    "tensorflow.keras.initializers.Initializer": "doc",
    "tensorflow.keras.initializers.LecunNormal": "doc",
    "tensorflow.keras.initializers.deserialize": "doc",
    "tensorflow.keras.layers.AdditiveAttention": "doc",
    "tensorflow.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.keras.losses.categorical_hinge": "doc",
    "tensorflow.keras.losses.cosine_similarity": "doc",
    "tensorflow.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.keras.models.model_from_config": "doc",
    "tensorflow.keras.regularizers.Regularizer": "doc",
    "tensorflow.keras.regularizers.deserialize": "doc",
    "tensorflow.optimizers.schedules.serialize": "doc",
    "tensorflow.raw_ops.AnonymousSeedGenerator": "doc",
    "tensorflow.raw_ops.BatchMatrixDeterminant": "doc",
    "tensorflow.raw_ops.BoostedTreesCenterBias": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToDense": "doc",
    "tensorflow.raw_ops.ConditionalAccumulator": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilterV2": "doc",
    "tensorflow.raw_ops.CropAndResizeGradBoxes": "doc",
    "tensorflow.raw_ops.CropAndResizeGradImage": "doc",
    "tensorflow.raw_ops.DenseCountSparseOutput": "doc",
    "tensorflow.raw_ops.DenseToCSRSparseMatrix": "doc",
    "tensorflow.raw_ops.ExperimentalCSVDataset": "doc",
    "tensorflow.raw_ops.ExperimentalMapDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSqlDataset": "doc",
    "tensorflow.raw_ops.GenerateVocabRemapping": "doc",
    "tensorflow.raw_ops.IteratorToStringHandle": "doc",
    "tensorflow.raw_ops.NonSerializableDataset": "doc",
    "tensorflow.raw_ops.OrderedMapUnstageNoKey": "doc",
    "tensorflow.raw_ops.ParseSequenceExampleV2": "doc",
    "tensorflow.raw_ops.PlaceholderWithDefault": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRelu": "doc",
    "tensorflow.raw_ops.ReaderSerializeStateV2": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradV2": "doc",
    "tensorflow.raw_ops.ResourceApplyPowerSign": "doc",
    "tensorflow.raw_ops.ShutdownDistributedTPU": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNGrad": "doc",
    "tensorflow.raw_ops.StatefulStandardNormal": "doc",
    "tensorflow.raw_ops.StatefulUniformFullInt": "doc",
    "tensorflow.raw_ops.StatsAggregatorSummary": "doc",
    "tensorflow.raw_ops.StringToHashBucketFast": "doc",
    "tensorflow.raw_ops.TensorListElementShape": "doc",
    "tensorflow.test.TestCase.failureException": "doc",
    "tensorflow.compat.v1.errors.DataLossError": "doc",
    "tensorflow.compat.v1.errors.InternalError": "doc",
    "tensorflow.compat.v1.errors.NotFoundError": "doc",
    "tensorflow.compat.v1.estimator.FeedFnHook": "doc",
    "tensorflow.compat.v1.keras.backend.floatx": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist": "doc",
    "tensorflow.compat.v1.keras.layers.Average": "doc",
    "tensorflow.compat.v1.keras.layers.Dropout": "doc",
    "tensorflow.compat.v1.keras.layers.Flatten": "doc",
    "tensorflow.compat.v1.keras.layers.GRUCell": "doc",
    "tensorflow.compat.v1.keras.layers.Masking": "doc",
    "tensorflow.compat.v1.keras.layers.Maximum": "doc",
    "tensorflow.compat.v1.keras.layers.Minimum": "doc",
    "tensorflow.compat.v1.keras.layers.Permute": "doc",
    "tensorflow.compat.v1.keras.layers.Reshape": "doc",
    "tensorflow.compat.v1.keras.layers.Softmax": "doc",
    "tensorflow.compat.v1.keras.layers.Wrapper": "doc",
    "tensorflow.compat.v1.keras.layers.average": "doc",
    "tensorflow.compat.v1.keras.layers.maximum": "doc",
    "tensorflow.compat.v1.keras.layers.minimum": "doc",
    "tensorflow.compat.v1.keras.losses.LogCosh": "doc",
    "tensorflow.compat.v1.keras.losses.Poisson": "doc",
    "tensorflow.compat.v1.keras.losses.logcosh": "doc",
    "tensorflow.compat.v1.keras.losses.poisson": "doc",
    "tensorflow.compat.v1.keras.metrics.Metric": "doc",
    "tensorflow.compat.v1.keras.metrics.Recall": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine": "doc",
    "tensorflow.compat.v1.keras.optimizers.SGD": "doc",
    "tensorflow.compat.v1.keras.optimizers.get": "doc",
    "tensorflow.compat.v1.keras.utils.Sequence": "doc",
    "tensorflow.compat.v1.keras.utils.get_file": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMCell": "doc",
    "tensorflow.data.experimental.RandomDataset": "doc",
    "tensorflow.data.experimental.get_structure": "doc",
    "tensorflow.data.experimental.map_and_batch": "doc",
    "tensorflow.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.estimator.PoissonRegressionHead": "doc",
    "tensorflow.keras.applications.NASNetMobile": "doc",
    "tensorflow.keras.applications.efficientnet": "doc",
    "tensorflow.keras.applications.inception_v3": "doc",
    "tensorflow.keras.applications.mobilenet_v2": "doc",
    "tensorflow.keras.applications.mobilenet_v3": "doc",
    "tensorflow.keras.backend.image_data_format": "doc",
    "tensorflow.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.keras.initializers.GlorotNormal": "doc",
    "tensorflow.keras.initializers.LecunUniform": "doc",
    "tensorflow.keras.initializers.RandomNormal": "doc",
    "tensorflow.keras.initializers.lecun_normal": "doc",
    "tensorflow.keras.layers.BatchNormalization": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.keras.layers.LayerNormalization": "doc",
    "tensorflow.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.keras.losses.mean_squared_error": "doc",
    "tensorflow.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.keras.utils.custom_object_scope": "doc",
    "tensorflow.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.raw_ops.AccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.ConfigureDistributedTPU": "doc",
    "tensorflow.raw_ops.CreateSummaryFileWriter": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropInput": "doc",
    "tensorflow.raw_ops.ExperimentalLMDBDataset": "doc",
    "tensorflow.raw_ops.ExperimentalScanDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgs": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVars": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReader": "doc",
    "tensorflow.raw_ops.FusedResizeAndPadConv2D": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorInit": "doc",
    "tensorflow.raw_ops.MutableDenseHashTableV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV3": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBias": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBias": "doc",
    "tensorflow.raw_ops.QuantizedResizeBilinear": "doc",
    "tensorflow.raw_ops.RaggedCountSparseOutput": "doc",
    "tensorflow.raw_ops.RaggedTensorFromVariant": "doc",
    "tensorflow.raw_ops.ResourceScatterNdUpdate": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrl": "doc",
    "tensorflow.raw_ops.ScatterNdNonAliasingAdd": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDataset": "doc",
    "tensorflow.raw_ops.SparseCountSparseOutput": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRowsGrad": "doc",
    "tensorflow.raw_ops.SparseMatrixOrderingAMD": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmaxGrad": "doc",
    "tensorflow.raw_ops.SparseTensorDenseMatMul": "doc",
    "tensorflow.raw_ops.StatefulPartitionedCall": "doc",
    "tensorflow.raw_ops.StatefulTruncatedNormal": "doc",
    "tensorflow.raw_ops.StatelessRandomBinomial": "doc",
    "tensorflow.raw_ops.StatelessRandomNormalV2": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandleV2": "doc",
    "tensorflow.raw_ops.TPUEmbeddingActivations": "doc",
    "tensorflow.raw_ops.TensorListPushBackBatch": "doc",
    "tensorflow.raw_ops.UniformCandidateSampler": "doc",
    "tensorflow.compat.v1.app.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.debugging.assert_rank": "doc",
    "tensorflow.compat.v1.errors.CancelledError": "doc",
    "tensorflow.compat.v1.estimator.add_metrics": "doc",
    "tensorflow.compat.v1.image.crop_and_resize": "doc",
    "tensorflow.compat.v1.keras.activations.elu": "doc",
    "tensorflow.compat.v1.keras.activations.get": "doc",
    "tensorflow.compat.v1.keras.backend.epsilon": "doc",
    "tensorflow.compat.v1.keras.backend.get_uid": "doc",
    "tensorflow.compat.v1.keras.constraints.get": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNGRU": "doc",
    "tensorflow.compat.v1.keras.layers.LSTMCell": "doc",
    "tensorflow.compat.v1.keras.layers.Multiply": "doc",
    "tensorflow.compat.v1.keras.layers.Subtract": "doc",
    "tensorflow.compat.v1.keras.layers.multiply": "doc",
    "tensorflow.compat.v1.keras.layers.subtract": "doc",
    "tensorflow.compat.v1.keras.losses.log_cosh": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanIoU": "doc",
    "tensorflow.compat.v1.keras.metrics.Poisson": "doc",
    "tensorflow.compat.v1.keras.metrics.logcosh": "doc",
    "tensorflow.compat.v1.keras.metrics.poisson": "doc",
    "tensorflow.compat.v1.keras.mixed_precision": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adam": "doc",
    "tensorflow.compat.v1.keras.optimizers.Ftrl": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1": "doc",
    "tensorflow.compat.v1.keras.regularizers.L2": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1": "doc",
    "tensorflow.compat.v1.keras.regularizers.l2": "doc",
    "tensorflow.compat.v1.keras.utils.normalize": "doc",
    "tensorflow.compat.v1.losses.get_total_loss": "doc",
    "tensorflow.compat.v1.ragged.constant_value": "doc",
    "tensorflow.compat.v1.saved_model.constants": "doc",
    "tensorflow.compat.v1.sparse.segment_sqrt_n": "doc",
    "tensorflow.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.estimator.LogisticRegressionHead": "doc",
    "tensorflow.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.keras.datasets.reuters.load_data": "doc",
    "tensorflow.keras.experimental.WideDeepModel": "doc",
    "tensorflow.keras.initializers.GlorotUniform": "doc",
    "tensorflow.keras.initializers.RandomUniform": "doc",
    "tensorflow.keras.initializers.glorot_normal": "doc",
    "tensorflow.keras.initializers.lecun_uniform": "doc",
    "tensorflow.keras.losses.binary_crossentropy": "doc",
    "tensorflow.keras.losses.mean_absolute_error": "doc",
    "tensorflow.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.keras.metrics.mean_squared_error": "doc",
    "tensorflow.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.metrics.categorical_crossentropy": "doc",
    "tensorflow.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.raw_ops.AccumulatorApplyGradient": "doc",
    "tensorflow.raw_ops.AccumulatorSetGlobalStep": "doc",
    "tensorflow.raw_ops.AssertCardinalityDataset": "doc",
    "tensorflow.raw_ops.DebugGradientRefIdentity": "doc",
    "tensorflow.raw_ops.DenseToDenseSetOperation": "doc",
    "tensorflow.raw_ops.DestroyTemporaryVariable": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropFilter": "doc",
    "tensorflow.raw_ops.ExperimentalSleepDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDataset": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandle": "doc",
    "tensorflow.raw_ops.PrivateThreadPoolDataset": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2D": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProduced": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseMatMul": "doc",
    "tensorflow.raw_ops.SparseTensorSliceDataset": "doc",
    "tensorflow.raw_ops.StatefulStandardNormalV2": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformV2": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormal": "doc",
    "tensorflow.raw_ops.StringToHashBucketStrong": "doc",
    "tensorflow.raw_ops.TensorArrayGradWithShape": "doc",
    "tensorflow.raw_ops.TensorStridedSliceUpdate": "doc",
    "tensorflow.raw_ops.UnicodeDecodeWithOffsets": "doc",
    "tensorflow.saved_model.contains_saved_model": "doc",
    "tensorflow.compat.v1.errors.OutOfRangeError": "doc",
    "tensorflow.compat.v1.estimator.BestExporter": "doc",
    "tensorflow.compat.v1.estimator.DNNEstimator": "doc",
    "tensorflow.compat.v1.estimator.DNNRegressor": "doc",
    "tensorflow.compat.v1.estimator.FinalOpsHook": "doc",
    "tensorflow.compat.v1.estimator.ProfilerHook": "doc",
    "tensorflow.compat.v1.estimator.experimental": "doc",
    "tensorflow.compat.v1.initializers.he_normal": "doc",
    "tensorflow.compat.v1.keras.activations.relu": "doc",
    "tensorflow.compat.v1.keras.activations.selu": "doc",
    "tensorflow.compat.v1.keras.activations.tanh": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters": "doc",
    "tensorflow.compat.v1.keras.initializers.get": "doc",
    "tensorflow.compat.v1.keras.layers.Attention": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNLSTM": "doc",
    "tensorflow.compat.v1.keras.layers.Embedding": "doc",
    "tensorflow.compat.v1.keras.layers.InputSpec": "doc",
    "tensorflow.compat.v1.keras.layers.LeakyReLU": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNN": "doc",
    "tensorflow.compat.v1.keras.layers.serialize": "doc",
    "tensorflow.compat.v1.keras.losses.serialize": "doc",
    "tensorflow.compat.v1.keras.metrics.Accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.log_cosh": "doc",
    "tensorflow.compat.v1.keras.optimizers.Nadam": "doc",
    "tensorflow.compat.v1.keras.regularizers.get": "doc",
    "tensorflow.compat.v1.keras.utils.plot_model": "doc",
    "tensorflow.compat.v1.metrics.precision_at_k": "doc",
    "tensorflow.compat.v1.metrics.true_negatives": "doc",
    "tensorflow.compat.v1.metrics.true_positives": "doc",
    "tensorflow.compat.v1.ragged.map_flat_values": "doc",
    "tensorflow.compat.v1.sparse.fill_empty_rows": "doc",
    "tensorflow.estimator.CheckpointSaverListener": "doc",
    "tensorflow.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.estimator.export.RegressionOutput": "doc",
    "tensorflow.keras.applications.EfficientNetB0": "doc",
    "tensorflow.keras.applications.EfficientNetB1": "doc",
    "tensorflow.keras.applications.EfficientNetB2": "doc",
    "tensorflow.keras.applications.EfficientNetB3": "doc",
    "tensorflow.keras.applications.EfficientNetB4": "doc",
    "tensorflow.keras.applications.EfficientNetB5": "doc",
    "tensorflow.keras.applications.EfficientNetB6": "doc",
    "tensorflow.keras.applications.EfficientNetB7": "doc",
    "tensorflow.keras.applications.imagenet_utils": "doc",
    "tensorflow.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.keras.initializers.glorot_uniform": "doc",
    "tensorflow.keras.initializers.random_uniform": "doc",
    "tensorflow.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.raw_ops.AccumulatorNumAccumulated": "doc",
    "tensorflow.raw_ops.AddManySparseToTensorsMap": "doc",
    "tensorflow.raw_ops.BytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixComponents": "doc",
    "tensorflow.raw_ops.CombinedNonMaxSuppression": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParams": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonical": "doc",
    "tensorflow.raw_ops.DeleteMultiDeviceIterator": "doc",
    "tensorflow.raw_ops.DenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.DenseToSparseSetOperation": "doc",
    "tensorflow.raw_ops.DirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.EncodeJpegVariableQuality": "doc",
    "tensorflow.raw_ops.ExperimentalUniqueDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReaderV2": "doc",
    "tensorflow.raw_ops.IteratorGetNextAsOptional": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradWithArgmax": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensors": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DPerChannel": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighborGrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SendTPUEmbeddingGradients": "doc",
    "tensorflow.raw_ops.SetStatsAggregatorDataset": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDatasetV2": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformInt": "doc",
    "tensorflow.compat.v1.app.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.distribute.get_strategy": "doc",
    "tensorflow.compat.v1.distributions.Bernoulli": "doc",
    "tensorflow.compat.v1.errors.UnavailableError": "doc",
    "tensorflow.compat.v1.estimator.DNNClassifier": "doc",
    "tensorflow.compat.v1.estimator.EstimatorSpec": "doc",
    "tensorflow.compat.v1.estimator.FinalExporter": "doc",
    "tensorflow.compat.v1.estimator.NanTensorHook": "doc",
    "tensorflow.compat.v1.estimator.tpu.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUConfig": "doc",
    "tensorflow.compat.v1.keras.activations.swish": "doc",
    "tensorflow.compat.v1.keras.callbacks.History": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100": "doc",
    "tensorflow.compat.v1.keras.initializers.Ones": "doc",
    "tensorflow.compat.v1.keras.initializers.ones": "doc",
    "tensorflow.compat.v1.keras.layers.Activation": "doc",
    "tensorflow.compat.v1.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping1D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping2D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping3D": "doc",
    "tensorflow.compat.v1.keras.layers.InputLayer": "doc",
    "tensorflow.compat.v1.keras.metrics.Precision": "doc",
    "tensorflow.compat.v1.keras.metrics.serialize": "doc",
    "tensorflow.compat.v1.keras.models.Sequential": "doc",
    "tensorflow.compat.v1.keras.models.load_model": "doc",
    "tensorflow.compat.v1.keras.models.save_model": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adamax": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1L2": "doc",
    "tensorflow.compat.v1.metrics.false_negatives": "doc",
    "tensorflow.compat.v1.metrics.false_positives": "doc",
    "tensorflow.compat.v1.metrics.recall_at_top_k": "doc",
    "tensorflow.compat.v1.quantization.dequantize": "doc",
    "tensorflow.compat.v1.saved_model.SaveOptions": "doc",
    "tensorflow.compat.v1.saved_model.loader.load": "doc",
    "tensorflow.compat.v1.saved_model.simple_save": "doc",
    "tensorflow.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.keras.constraints.RadialConstraint": "doc",
    "tensorflow.keras.estimator.model_to_estimator": "doc",
    "tensorflow.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.keras.initializers.VarianceScaling": "doc",
    "tensorflow.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.keras.mixed_precision.experimental": "doc",
    "tensorflow.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.keras.preprocessing.image.load_img": "doc",
    "tensorflow.keras.preprocessing.image.save_img": "doc",
    "tensorflow.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.keras.utils.pack_x_y_sample_weight": "doc",
    "tensorflow.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.profiler.experimental.client.trace": "doc",
    "tensorflow.profiler.experimental.server.start": "doc",
    "tensorflow.raw_ops.BatchMatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.BoostedTreesAggregateStats": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateEnsemble": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsemble": "doc",
    "tensorflow.raw_ops.ExperimentalRebatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalUnbatchDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDatasetV2": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV2": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV3": "doc",
    "tensorflow.raw_ops.InitializeTableFromDataset": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandleV2": "doc",
    "tensorflow.raw_ops.LogUniformCandidateSampler": "doc",
    "tensorflow.raw_ops.ParseSingleSequenceExample": "doc",
    "tensorflow.raw_ops.QuantizeDownAndShrinkRange": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProducedV2": "doc",
    "tensorflow.raw_ops.ResourceApplyKerasMomentum": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.ResourceStridedSliceAssign": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBox": "doc",
    "tensorflow.raw_ops.SparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.SparseApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseCholesky": "doc",
    "tensorflow.raw_ops.SparseToSparseSetOperation": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormalV2": "doc",
    "tensorflow.compat.v1.config.optimizer.set_jit": "doc",
    "tensorflow.compat.v1.estimator.LatestExporter": "doc",
    "tensorflow.compat.v1.estimator.MultiClassHead": "doc",
    "tensorflow.compat.v1.estimator.MultiLabelHead": "doc",
    "tensorflow.compat.v1.estimator.RegressionHead": "doc",
    "tensorflow.compat.v1.estimator.SessionRunArgs": "doc",
    "tensorflow.compat.v1.estimator.SessionRunHook": "doc",
    "tensorflow.compat.v1.estimator.StopAtStepHook": "doc",
    "tensorflow.compat.v1.keras.activations.linear": "doc",
    "tensorflow.compat.v1.keras.applications.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.VGG19": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19": "doc",
    "tensorflow.compat.v1.keras.backend.name_scope": "doc",
    "tensorflow.compat.v1.keras.backend.reset_uids": "doc",
    "tensorflow.compat.v1.keras.callbacks.Callback": "doc",
    "tensorflow.compat.v1.keras.constraints.NonNeg": "doc",
    "tensorflow.compat.v1.keras.initializers.Zeros": "doc",
    "tensorflow.compat.v1.keras.initializers.zeros": "doc",
    "tensorflow.compat.v1.keras.layers.Concatenate": "doc",
    "tensorflow.compat.v1.keras.layers.concatenate": "doc",
    "tensorflow.compat.v1.keras.layers.deserialize": "doc",
    "tensorflow.compat.v1.keras.losses.deserialize": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanTensor": "doc",
    "tensorflow.compat.v1.keras.models.clone_model": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adagrad": "doc",
    "tensorflow.compat.v1.keras.optimizers.RMSprop": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1_l2": "doc",
    "tensorflow.compat.v1.keras.utils.model_to_dot": "doc",
    "tensorflow.compat.v1.math.special.fresnel_sin": "doc",
    "tensorflow.compat.v1.metrics.percentage_below": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicRNNCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.MultiRNNCell": "doc",
    "tensorflow.compat.v1.ragged.RaggedTensorValue": "doc",
    "tensorflow.compat.v1.saved_model.experimental": "doc",
    "tensorflow.compat.v1.sparse.reduce_max_sparse": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum_sparse": "doc",
    "tensorflow.compat.v1.sysconfig.get_build_info": "doc",
    "tensorflow.compat.v1.sysconfig.get_link_flags": "doc",
    "tensorflow.estimator.experimental.RNNEstimator": "doc",
    "tensorflow.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.keras.constraints.radial_constraint": "doc",
    "tensorflow.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.keras.initializers.truncated_normal": "doc",
    "tensorflow.keras.initializers.variance_scaling": "doc",
    "tensorflow.keras.layers.ActivityRegularization": "doc",
    "tensorflow.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.keras.mixed_precision.global_policy": "doc",
    "tensorflow.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.raw_ops.BoostedTreesTrainingPredict": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParamsV2": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonicalV2": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFile": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensorsV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV3": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV4": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4Grad": "doc",
    "tensorflow.raw_ops.RecvTPUEmbeddingActivations": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdadelta": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyMomentum": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformIntV2": "doc",
    "tensorflow.compat.v1.data.experimental.service": "doc",
    "tensorflow.compat.v1.errors.AlreadyExistsError": "doc",
    "tensorflow.compat.v1.errors.UnimplementedError": "doc",
    "tensorflow.compat.v1.estimator.BinaryClassHead": "doc",
    "tensorflow.compat.v1.estimator.LinearEstimator": "doc",
    "tensorflow.compat.v1.estimator.LinearRegressor": "doc",
    "tensorflow.compat.v1.estimator.StepCounterHook": "doc",
    "tensorflow.compat.v1.keras.activations.sigmoid": "doc",
    "tensorflow.compat.v1.keras.activations.softmax": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet": "doc",
    "tensorflow.compat.v1.keras.backend.get_session": "doc",
    "tensorflow.compat.v1.keras.backend.set_epsilon": "doc",
    "tensorflow.compat.v1.keras.callbacks.CSVLogger": "doc",
    "tensorflow.compat.v1.keras.constraints.MaxNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.non_neg": "doc",
    "tensorflow.compat.v1.keras.initializers.normal": "doc",
    "tensorflow.compat.v1.keras.layers.AlphaDropout": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.RepeatVector": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling1D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling2D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling3D": "doc",
    "tensorflow.compat.v1.keras.layers.experimental": "doc",
    "tensorflow.compat.v1.keras.losses.KLDivergence": "doc",
    "tensorflow.compat.v1.keras.losses.SquaredHinge": "doc",
    "tensorflow.compat.v1.keras.metrics.deserialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adadelta": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicLSTMCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DeviceWrapper": "doc",
    "tensorflow.compat.v1.saved_model.tag_constants": "doc",
    "tensorflow.data.experimental.service.distribute": "doc",
    "tensorflow.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.estimator.experimental.RNNClassifier": "doc",
    "tensorflow.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.keras.applications.xception.Xception": "doc",
    "tensorflow.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.keras.utils.unpack_x_y_sample_weight": "doc",
    "tensorflow.raw_ops.AnonymousMultiDeviceIterator": "doc",
    "tensorflow.raw_ops.AnonymousRandomSeedGenerator": "doc",
    "tensorflow.raw_ops.ApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeStatsSummary": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsembleV2": "doc",
    "tensorflow.raw_ops.ExperimentalAutoShardDataset": "doc",
    "tensorflow.raw_ops.ExperimentalTakeWhileDataset": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolHandle": "doc",
    "tensorflow.raw_ops.FilterByLastComponentDataset": "doc",
    "tensorflow.raw_ops.FixedUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.GenerateBoundingBoxProposals": "doc",
    "tensorflow.raw_ops.MaxIntraOpParallelismDataset": "doc",
    "tensorflow.raw_ops.ParameterizedTruncatedNormal": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRequantize": "doc",
    "tensorflow.raw_ops.ResourceApplyAdamWithAmsgrad": "doc",
    "tensorflow.raw_ops.ResourceApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ResourceApplyGradientDescent": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBoxV2": "doc",
    "tensorflow.raw_ops.SparseConditionalAccumulator": "doc",
    "tensorflow.raw_ops.TakeManySparseFromTensorsMap": "doc",
    "tensorflow.compat.v1.estimator.LinearClassifier": "doc",
    "tensorflow.compat.v1.estimator.SessionRunValues": "doc",
    "tensorflow.compat.v1.estimator.SummarySaverHook": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimator": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental": "doc",
    "tensorflow.compat.v1.keras.activations.softplus": "doc",
    "tensorflow.compat.v1.keras.activations.softsign": "doc",
    "tensorflow.compat.v1.keras.callbacks.BaseLogger": "doc",
    "tensorflow.compat.v1.keras.constraints.UnitNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.max_norm": "doc",
    "tensorflow.compat.v1.keras.initializers.uniform": "doc",
    "tensorflow.compat.v1.keras.layers.Bidirectional": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3D": "doc",
    "tensorflow.compat.v1.keras.layers.DenseFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianNoise": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.compat.v1.keras.losses.kl_divergence": "doc",
    "tensorflow.compat.v1.keras.losses.squared_hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.KLDivergence": "doc",
    "tensorflow.compat.v1.keras.metrics.LogCoshError": "doc",
    "tensorflow.compat.v1.keras.metrics.SquaredHinge": "doc",
    "tensorflow.compat.v1.keras.optimizers.Optimizer": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules": "doc",
    "tensorflow.compat.v1.keras.optimizers.serialize": "doc",
    "tensorflow.compat.v1.keras.utils.to_categorical": "doc",
    "tensorflow.compat.v1.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.metrics.precision_at_top_k": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DropoutWrapper": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMStateTuple": "doc",
    "tensorflow.compat.v1.sparse.sparse_dense_matmul": "doc",
    "tensorflow.compat.v1.xla.experimental.jit_scope": "doc",
    "tensorflow.errors.OperatorNotAllowedInGraphError": "doc",
    "tensorflow.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.estimator.export.ClassificationOutput": "doc",
    "tensorflow.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.raw_ops.BoostedTreesGetEnsembleStates": "doc",
    "tensorflow.raw_ops.BoostedTreesSerializeEnsemble": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToSparseTensor": "doc",
    "tensorflow.raw_ops.ExperimentalAssertNextDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetToTFRecord": "doc",
    "tensorflow.raw_ops.ExperimentalIteratorGetDevice": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolDataset": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFileV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionWithOverlaps": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariantGradient": "doc",
    "tensorflow.raw_ops.RequantizationRangePerChannel": "doc",
    "tensorflow.raw_ops.SoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.SparseAccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.SparseTensorToCSRSparseMatrix": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullInt": "doc",
    "tensorflow.compat.v1.errors.InvalidArgumentError": "doc",
    "tensorflow.compat.v1.errors.UnauthenticatedError": "doc",
    "tensorflow.compat.v1.estimator.BaselineEstimator": "doc",
    "tensorflow.compat.v1.estimator.BaselineRegressor": "doc",
    "tensorflow.compat.v1.estimator.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.estimator.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.estimator.SessionRunContext": "doc",
    "tensorflow.compat.v1.estimator.WarmStartSettings": "doc",
    "tensorflow.compat.v1.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.keras.activations.serialize": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.Xception": "doc",
    "tensorflow.compat.v1.keras.applications.densenet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50": "doc",
    "tensorflow.compat.v1.keras.applications.xception": "doc",
    "tensorflow.compat.v1.keras.backend.clear_session": "doc",
    "tensorflow.compat.v1.keras.callbacks.TensorBoard": "doc",
    "tensorflow.compat.v1.keras.constraints.serialize": "doc",
    "tensorflow.compat.v1.keras.constraints.unit_norm": "doc",
    "tensorflow.compat.v1.keras.initializers.Constant": "doc",
    "tensorflow.compat.v1.keras.initializers.Identity": "doc",
    "tensorflow.compat.v1.keras.initializers.constant": "doc",
    "tensorflow.compat.v1.keras.initializers.identity": "doc",
    "tensorflow.compat.v1.keras.metrics.TrueNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.TruePositives": "doc",
    "tensorflow.compat.v1.keras.metrics.kl_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.squared_hinge": "doc",
    "tensorflow.compat.v1.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn": "doc",
    "tensorflow.compat.v1.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.metrics.mean_relative_error": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.ResidualWrapper": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op": "doc",
    "tensorflow.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.data.experimental.service.WorkerServer": "doc",
    "tensorflow.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.keras.preprocessing.image.smart_resize": "doc",
    "tensorflow.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseBatch": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetCardinality": "doc",
    "tensorflow.raw_ops.ExperimentalMapAndBatchDataset": "doc",
    "tensorflow.raw_ops.LearnedUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRelu": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRelu": "doc",
    "tensorflow.raw_ops.ResourceConditionalAccumulator": "doc",
    "tensorflow.raw_ops.SparseAccumulatorApplyGradient": "doc",
    "tensorflow.compat.v1.errors.DeadlineExceededError": "doc",
    "tensorflow.compat.v1.errors.PermissionDeniedError": "doc",
    "tensorflow.compat.v1.estimator.BaselineClassifier": "doc",
    "tensorflow.compat.v1.estimator.train_and_evaluate": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNet": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2": "doc",
    "tensorflow.compat.v1.keras.callbacks.CallbackList": "doc",
    "tensorflow.compat.v1.keras.constraints.Constraint": "doc",
    "tensorflow.compat.v1.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist": "doc",
    "tensorflow.compat.v1.keras.initializers.he_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.serialize": "doc",
    "tensorflow.compat.v1.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianDropout": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.StackedRNNCells": "doc",
    "tensorflow.compat.v1.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.compat.v1.keras.layers.TimeDistributed": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.FalseNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.FalsePositives": "doc",
    "tensorflow.compat.v1.keras.models.model_from_json": "doc",
    "tensorflow.compat.v1.keras.models.model_from_yaml": "doc",
    "tensorflow.compat.v1.keras.optimizers.deserialize": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence": "doc",
    "tensorflow.compat.v1.keras.regularizers.serialize": "doc",
    "tensorflow.compat.v1.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.compat.v1.metrics.mean_cosine_distance": "doc",
    "tensorflow.compat.v1.metrics.recall_at_thresholds": "doc",
    "tensorflow.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.keras.utils.register_keras_serializable": "doc",
    "tensorflow.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.raw_ops.BoostedTreesDeserializeEnsemble": "doc",
    "tensorflow.raw_ops.BoostedTreesExampleDebugOutputs": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingIntegerBatch": "doc",
    "tensorflow.raw_ops.ExperimentalIgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalLatencyStatsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalParseExampleDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgsGradient": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsGradient": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.SparseSegmentSumWithNumSegments": "doc",
    "tensorflow.raw_ops.StatelessRandomGetKeyCounterAlg": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullIntV2": "doc",
    "tensorflow.raw_ops.StatsAggregatorSetSummaryWriter": "doc",
    "tensorflow.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.compat.v1.errors.ResourceExhaustedError": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.estimator.experimental.KMeans": "doc",
    "tensorflow.compat.v1.estimator.export.ExportOutput": "doc",
    "tensorflow.compat.v1.keras.activations.deserialize": "doc",
    "tensorflow.compat.v1.keras.activations.exponential": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50V2": "doc",
    "tensorflow.compat.v1.keras.backend.is_keras_tensor": "doc",
    "tensorflow.compat.v1.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.compat.v1.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.compat.v1.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.compat.v1.keras.constraints.deserialize": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.load_data": "doc",
    "tensorflow.compat.v1.keras.initializers.Orthogonal": "doc",
    "tensorflow.compat.v1.keras.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalHinge": "doc",
    "tensorflow.compat.v1.keras.losses.CosineSimilarity": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_proximity": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_accuracy": "doc",
    "tensorflow.compat.v1.keras.utils.CustomObjectScope": "doc",
    "tensorflow.compat.v1.keras.utils.get_source_inputs": "doc",
    "tensorflow.compat.v1.metrics.sparse_precision_at_k": "doc",
    "tensorflow.compat.v1.saved_model.build_tensor_info": "doc",
    "tensorflow.compat.v1.saved_model.experimental.save": "doc",
    "tensorflow.compat.v1.types.experimental.TensorLike": "doc",
    "tensorflow.data.experimental.service.DispatchServer": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalization": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseAggregateStats": "doc",
    "tensorflow.raw_ops.ExperimentalChooseFastestDataset": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByWindowDataset": "doc",
    "tensorflow.raw_ops.ExperimentalMatchingFilesDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSlidingWindowDataset": "doc",
    "tensorflow.raw_ops.InfeedEnqueuePrelinearizedBuffer": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBias": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorApplyGradient": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorSetGlobalStep": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyKerasMomentum": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanWithNumSegments": "doc",
    "tensorflow.compat.v1.MetaGraphDef.SignatureDefEntry": "doc",
    "tensorflow.compat.v1.errors.FailedPreconditionError": "doc",
    "tensorflow.compat.v1.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.estimator.export.PredictOutput": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec": "doc",
    "tensorflow.compat.v1.keras.activations.hard_sigmoid": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetLarge": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152V2": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.compat.v1.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.compat.v1.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.compat.v1.keras.constraints.min_max_norm": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecay": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearModel": "doc",
    "tensorflow.compat.v1.keras.initializers.Initializer": "doc",
    "tensorflow.compat.v1.keras.initializers.deserialize": "doc",
    "tensorflow.compat.v1.keras.layers.AdditiveAttention": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_hinge": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_similarity": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.compat.v1.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine_proximity": "doc",
    "tensorflow.compat.v1.keras.models.model_from_config": "doc",
    "tensorflow.compat.v1.keras.regularizers.Regularizer": "doc",
    "tensorflow.compat.v1.keras.regularizers.deserialize": "doc",
    "tensorflow.compat.v1.metrics.average_precision_at_k": "doc",
    "tensorflow.compat.v1.saved_model.is_valid_signature": "doc",
    "tensorflow.compat.v1.test.TestCase.failureException": "doc",
    "tensorflow.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.keras.mixed_precision.experimental.Policy": "doc",
    "tensorflow.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeQuantileSummaries": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByReducerDataset": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorHandle": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannel": "doc",
    "tensorflow.raw_ops.IsBoostedTreesEnsembleInitialized": "doc",
    "tensorflow.raw_ops.LegacyParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorToStringHandle": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndRelu": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorNumAccumulated": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNWithNumSegments": "doc",
    "tensorflow.raw_ops.TensorListScatterIntoExistingList": "doc",
    "tensorflow.compat.v1.MetaGraphDef.CollectionDefEntry": "doc",
    "tensorflow.compat.v1.data.experimental.RandomDataset": "doc",
    "tensorflow.compat.v1.data.experimental.get_structure": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.compat.v1.estimator.PoissonRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.inputs.numpy_input_fn": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3": "doc",
    "tensorflow.compat.v1.keras.backend.image_data_format": "doc",
    "tensorflow.compat.v1.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomNormal": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.keras.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.LayerNormalization": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.compat.v1.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.compat.v1.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.compat.v1.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.compat.v1.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.compat.v1.keras.utils.custom_object_scope": "doc",
    "tensorflow.compat.v1.metrics.mean_per_class_accuracy": "doc",
    "tensorflow.compat.v1.metrics.precision_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.root_mean_squared_error": "doc",
    "tensorflow.compat.v1.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.compat.v1.saved_model.build_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.signature_constants": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils": "doc",
    "tensorflow.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.data.experimental.service.register_dataset": "doc",
    "tensorflow.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.raw_ops.BoostedTreesFlushQuantileSummaries": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropInput": "doc",
    "tensorflow.raw_ops.ExperimentalNonSerializableDataset": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorSummary": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.raw_ops.SparseApplyProximalGradientDescent": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.compat.v1.estimator.LogisticRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.inputs.pandas_input_fn": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.load_data": "doc",
    "tensorflow.compat.v1.keras.experimental.WideDeepModel": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomUniform": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.keras.losses.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_error": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.compat.v1.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.compat.v1.saved_model.contains_saved_model": "doc",
    "tensorflow.compat.v1.saved_model.main_op_with_restore": "doc",
    "tensorflow.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropFilter": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorFromStringHandle": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorGetNextFromShard": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.SparseSoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.StatelessSampleDistortedBoundingBox": "doc",
    "tensorflow.raw_ops.ThreadUnsafeUnigramCandidateSampler": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.compat.v1.estimator.export.RegressionOutput": "doc",
    "tensorflow.compat.v1.estimator.tpu.InputPipelineConfig": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils": "doc",
    "tensorflow.compat.v1.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.saved_model.predict_signature_def": "doc",
    "tensorflow.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalizationGrad": "doc",
    "tensorflow.raw_ops.BoostedTreesEnsembleResourceHandleOp": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingRaggedTensorBatch": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseTensorBatch": "doc",
    "tensorflow.raw_ops.ExperimentalPrivateThreadPoolDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndDequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRequantize": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalGradientDescent": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.compat.v1.keras.constraints.RadialConstraint": "doc",
    "tensorflow.compat.v1.keras.estimator.model_to_estimator": "doc",
    "tensorflow.compat.v1.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.compat.v1.keras.initializers.VarianceScaling": "doc",
    "tensorflow.compat.v1.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.load_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.save_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.compat.v1.metrics.sensitivity_at_specificity": "doc",
    "tensorflow.compat.v1.metrics.specificity_at_sensitivity": "doc",
    "tensorflow.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.keras.callbacks.experimental.BackupAndRestore": "doc",
    "tensorflow.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.ExperimentalBytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.ExperimentalParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSetStatsAggregatorDataset": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.raw_ops.StatelessParameterizedTruncatedNormal": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.compat.v1.keras.constraints.radial_constraint": "doc",
    "tensorflow.compat.v1.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.compat.v1.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.compat.v1.keras.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.keras.layers.ActivityRegularization": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.compat.v1.saved_model.utils.build_tensor_info": "doc",
    "tensorflow.compat.v1.sparse.SparseConditionalAccumulator": "doc",
    "tensorflow.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.compat.v1.data.experimental.service.distribute": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.compat.v1.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.xception.Xception": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.compat.v1.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.compat.v1.metrics.true_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.true_positives_at_thresholds": "doc",
    "tensorflow.compat.v1.saved_model.regression_signature_def": "doc",
    "tensorflow.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplitV2": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceFlush": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndRelu": "doc",
    "tensorflow.compat.v1.errors.error_code_from_exception_type": "doc",
    "tensorflow.compat.v1.errors.exception_type_from_error_code": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.compat.v1.estimator.export.ClassificationOutput": "doc",
    "tensorflow.compat.v1.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.compat.v1.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.compat.v1.keras.layers.enable_v2_dtype_behavior": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.metrics.false_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.false_positives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.sparse_average_precision_at_k": "doc",
    "tensorflow.compat.v1.saved_model.builder.SavedModelBuilder": "doc",
    "tensorflow.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.keras.layers.experimental.SyncBatchNormalization": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.keras.mixed_precision.experimental.global_policy": "doc",
    "tensorflow.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.keras.preprocessing.image_dataset_from_directory": "doc",
    "tensorflow.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestGainsPerFeature": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateQuantileStreamResource": "doc",
    "tensorflow.raw_ops.ExperimentalMaxIntraOpParallelismDataset": "doc",
    "tensorflow.compat.v1.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.compat.v1.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.compat.v1.keras.layers.disable_v2_dtype_behavior": "doc",
    "tensorflow.compat.v1.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.compat.v1.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.keras.preprocessing.timeseries_dataset_from_array": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannelGradient": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.raw_ops.QuantizedBatchNormWithGlobalNormalization": "doc",
    "tensorflow.compat.v1.errors.raise_exception_on_not_ok_status": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.utils.register_keras_serializable": "doc",
    "tensorflow.compat.v1.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.compat.v1.saved_model.maybe_saved_model_directory": "doc",
    "tensorflow.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceHandleOp": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.compat.v1.keras.experimental.load_from_saved_model": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.saved_model.classification_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op_with_restore": "doc",
    "tensorflow.keras.mixed_precision.experimental.get_layer_policy": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndReluAndRequantize": "doc",
    "tensorflow.compat.v1.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.compat.v1.data.experimental.service.register_dataset": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceDeserialize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.compat.v1.estimator.experimental.dnn_logit_fn_builder": "doc",
    "tensorflow.compat.v1.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceAddSummaries": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndReluAndRequantize": "doc",
    "tensorflow.compat.v1.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.raw_ops.IsBoostedTreesQuantileStreamResourceInitialized": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.estimator.experimental.linear_logit_fn_builder": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental.EmbeddingConfigSpec": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.compat.v1.saved_model.loader.maybe_saved_model_directory": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.MethodNameUpdater": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSignedSumAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.is_valid_signature": "doc",
    "tensorflow.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceGetBucketBoundaries": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.build_signature_def": "doc",
    "tensorflow.compat.v1.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.predict_signature_def": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.compat.v1.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.regression_signature_def": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.classification_signature_def": "doc",
    "tensorflow.compat.v1.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc",
    "tensorflow.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_sparse_tensor": "doc",
    "tensorflow.compat.v1.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.image.draw_bounding_boxes": "doc",
    "tensorflow.losses.mean_absolute_error": "doc",
    "tensorflow.debugging.assert_non_negative": "doc",
    "tensorflow.compat.v1.assert_non_negative": "doc",
    "tensorflow.compat.v1.reset_default_graph": "doc",
    "tensorflow.compat.v1.image.draw_bounding_boxes": "doc",
    "tensorflow.compat.v1.debugging.assert_non_negative": "doc",
    "tensorflow.compat.v1.resource_loader.get_data_files_path": "doc",
    "tensorflow.io.deserialize_many_sparse": "doc",
    "tensorflow.summary.should_record_summaries": "doc",
    "tensorflow.compat.v1.control_flow_v2_enabled": "doc",
    "tensorflow.compat.v1.deserialize_many_sparse": "doc",
    "tensorflow.compat.v1.is_variable_initialized": "doc",
    "tensorflow.compat.v1.io.deserialize_many_sparse": "doc",
    "tensorflow.feature_column.make_parse_example_spec": "doc",
    "tensorflow.compat.v1.feature_column.make_parse_example_spec": "doc",
    "tensorflow.compat.v1.losses.mean_pairwise_squared_error": "doc",
    "tensorflow.image.generate_bounding_box_proposals": "doc",
    "tensorflow.compat.v1.image.generate_bounding_box_proposals": "doc",
    "tensorflow.compat.v1.graph_util.tensor_shape_from_node_def_name": "doc",
    "tensorflow.compat.v1.resource_loader.get_root_dir_with_all_resources": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_indexed_slices": "doc",
    "tensorflow.get_static_value": "doc",
    "tensorflow.io.serialize_sparse": "doc",
    "tensorflow.io.serialize_tensor": "doc",
    "tensorflow.nn.weighted_moments": "doc",
    "tensorflow.linalg.matrix_transpose": "doc",
    "tensorflow.compat.v1.get_static_value": "doc",
    "tensorflow.compat.v1.matrix_band_part": "doc",
    "tensorflow.compat.v1.matrix_transpose": "doc",
    "tensorflow.compat.v1.serialize_sparse": "doc",
    "tensorflow.compat.v1.serialize_tensor": "doc",
    "tensorflow.compat.v1.string_to_number": "doc",
    "tensorflow.config.list_logical_devices": "doc",
    "tensorflow.distribute.StrategyExtended": "doc",
    "tensorflow.compat.v1.io.serialize_sparse": "doc",
    "tensorflow.compat.v1.io.serialize_tensor": "doc",
    "tensorflow.compat.v1.nn.fused_batch_norm": "doc",
    "tensorflow.compat.v1.nn.weighted_moments": "doc",
    "tensorflow.compat.v1.batch_scatter_update": "doc",
    "tensorflow.compat.v1.self_adjoint_eigvals": "doc",
    "tensorflow.compat.v1.linalg.matrix_transpose": "doc",
    "tensorflow.compat.v1.sparse_reduce_max_sparse": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum_sparse": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.compat.v1.config.list_logical_devices": "doc",
    "tensorflow.compat.v1.distribute.StrategyExtended": "doc",
    "tensorflow.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.data.experimental.get_next_as_optional": "doc",
    "tensorflow.compat.v1.create_partitioned_variables": "doc",
    "tensorflow.config.experimental.list_logical_devices": "doc",
    "tensorflow.config.optimizer.get_experimental_options": "doc",
    "tensorflow.compat.v1.losses.sparse_softmax_cross_entropy": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.compat.v1.resource_loader.get_path_to_datafile": "doc",
    "tensorflow.compat.v1.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.compat.v1.data.experimental.get_next_as_optional": "doc",
    "tensorflow.compat.v1.train.do_quantize_training_on_graphdef": "doc",
    "tensorflow.compat.v1.config.experimental.list_logical_devices": "doc",
    "tensorflow.compat.v1.config.optimizer.get_experimental_options": "doc",
    "tensorflow.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.io.parse_single_sequence_example": "doc",
    "tensorflow.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.io.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.image.resize_image_with_crop_or_pad": "doc",
    "tensorflow.nn.scale_regularization_loss": "doc",
    "tensorflow.linalg.LinearOperatorComposition": "doc",
    "tensorflow.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.compat.v1.glorot_normal_initializer": "doc",
    "tensorflow.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.distribute.experimental_set_strategy": "doc",
    "tensorflow.compat.v1.nn.scale_regularization_loss": "doc",
    "tensorflow.compat.v1.train.noisy_linear_cosine_decay": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorComposition": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.compat.v1.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.compat.v1.distribute.experimental_set_strategy": "doc",
    "tensorflow.compat.v1.lite.experimental.convert_op_hints_to_stubs": "doc",
    "tensorflow.tensor_scatter_nd_add": "doc",
    "tensorflow.io.serialize_many_sparse": "doc",
    "tensorflow.math.unsorted_segment_mean": "doc",
    "tensorflow.math.unsorted_segment_prod": "doc",
    "tensorflow.nest.assert_same_structure": "doc",
    "tensorflow.config.list_physical_devices": "doc",
    "tensorflow.compat.v1.extract_image_patches": "doc",
    "tensorflow.compat.v1.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_update": "doc",
    "tensorflow.compat.v1.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.unsorted_segment_prod": "doc",
    "tensorflow.compat.v1.io.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_prod": "doc",
    "tensorflow.compat.v1.nest.assert_same_structure": "doc",
    "tensorflow.compat.v1.image.extract_image_patches": "doc",
    "tensorflow.compat.v1.train.string_input_producer": "doc",
    "tensorflow.compat.v1.config.list_physical_devices": "doc",
    "tensorflow.compat.v1.losses.softmax_cross_entropy": "doc",
    "tensorflow.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.data.experimental.parse_example_dataset": "doc",
    "tensorflow.config.experimental.list_physical_devices": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.compat.v1.data.experimental.parse_example_dataset": "doc",
    "tensorflow.compat.v1.config.experimental.list_physical_devices": "doc",
    "tensorflow.make_tensor_proto": "doc",
    "tensorflow.space_to_batch_nd": "doc",
    "tensorflow.image.random_brightness": "doc",
    "tensorflow.image.random_saturation": "doc",
    "tensorflow.debugging.assert_all_finite": "doc",
    "tensorflow.debugging.assert_none_equal": "doc",
    "tensorflow.sysconfig.get_compile_flags": "doc",
    "tensorflow.compat.v1.assert_none_equal": "doc",
    "tensorflow.compat.v1.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.get_default_graph": "doc",
    "tensorflow.compat.v1.make_tensor_proto": "doc",
    "tensorflow.compat.v1.space_to_batch_nd": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum": "doc",
    "tensorflow.compat.v1.tpu.initialize_system": "doc",
    "tensorflow.compat.v1.image.random_brightness": "doc",
    "tensorflow.compat.v1.image.random_saturation": "doc",
    "tensorflow.compat.v1.manip.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.manip.space_to_batch_nd": "doc",
    "tensorflow.data.experimental.enumerate_dataset": "doc",
    "tensorflow.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.config.experimental.get_device_policy": "doc",
    "tensorflow.config.experimental.get_memory_growth": "doc",
    "tensorflow.compat.v1.debugging.assert_all_finite": "doc",
    "tensorflow.compat.v1.debugging.assert_none_equal": "doc",
    "tensorflow.compat.v1.sysconfig.get_compile_flags": "doc",
    "tensorflow.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdagradParameters": "doc",
    "tensorflow.compat.v1.data.experimental.enumerate_dataset": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_growth": "doc",
    "tensorflow.compat.v1.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.graph_util.convert_variables_to_constants": "doc",
    "tensorflow.image.non_max_suppression_padded": "doc",
    "tensorflow.compat.v1.glorot_uniform_initializer": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_padded": "doc",
    "tensorflow.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.variable_creator_scope": "doc",
    "tensorflow.math.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.disable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.variable_creator_scope": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter": "doc",
    "tensorflow.compat.v1.math.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.test.compute_gradient_error": "doc",
    "tensorflow.compat.v1.debugging.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.distributions.ReparameterizationType": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.config.experimental_connect_to_cluster": "doc",
    "tensorflow.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.train.generate_checkpoint_state_proto": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_cluster": "doc",
    "tensorflow.compat.v1.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.io.extract_jpeg_shape": "doc",
    "tensorflow.math.squared_difference": "doc",
    "tensorflow.image.extract_jpeg_shape": "doc",
    "tensorflow.compat.dimension_at_index": "doc",
    "tensorflow.summary.create_file_writer": "doc",
    "tensorflow.compat.v1.InteractiveSession": "doc",
    "tensorflow.compat.v1.dimension_at_index": "doc",
    "tensorflow.compat.v1.get_local_variable": "doc",
    "tensorflow.compat.v1.sparse_reset_shape": "doc",
    "tensorflow.compat.v1.squared_difference": "doc",
    "tensorflow.compat.v1.tensor_scatter_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_sub": "doc",
    "tensorflow.compat.v1.io.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.math.squared_difference": "doc",
    "tensorflow.compat.v1.image.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.train.inverse_time_decay": "doc",
    "tensorflow.compat.v1.compat.dimension_at_index": "doc",
    "tensorflow.compat.v1.distribute.get_loss_reduction": "doc",
    "tensorflow.feature_column.weighted_categorical_column": "doc",
    "tensorflow.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits_v2": "doc",
    "tensorflow.compat.v1.feature_column.weighted_categorical_column": "doc",
    "tensorflow.compat.v1.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.config.set_logical_device_configuration": "doc",
    "tensorflow.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.config.set_logical_device_configuration": "doc",
    "tensorflow.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.compat.v1.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.broadcast_dynamic_shape": "doc",
    "tensorflow.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.losses.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.broadcast_dynamic_shape": "doc",
    "tensorflow.compat.v1.disable_control_flow_v2": "doc",
    "tensorflow.compat.v1.disable_tensor_equality": "doc",
    "tensorflow.compat.v1.unsorted_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.image.resize_nearest_neighbor": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.train.update_checkpoint_state": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.compat.v1.summary.get_summary_description": "doc",
    "tensorflow.compat.v1.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.image.combined_non_max_suppression": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_strong": "doc",
    "tensorflow.compat.v1.truncated_normal_initializer": "doc",
    "tensorflow.compat.v1.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.image.combined_non_max_suppression": "doc",
    "tensorflow.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.compat.v1.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.nn.fractional_max_pool": "doc",
    "tensorflow.nn.isotonic_regression": "doc",
    "tensorflow.nn.with_space_to_batch": "doc",
    "tensorflow.image.convert_image_dtype": "doc",
    "tensorflow.image.pad_to_bounding_box": "doc",
    "tensorflow.image.random_flip_up_down": "doc",
    "tensorflow.image.random_jpeg_quality": "doc",
    "tensorflow.lookup.TextFileInitializer": "doc",
    "tensorflow.compat.v1.sparse_segment_mean": "doc",
    "tensorflow.compat.v1.sparse_to_indicator": "doc",
    "tensorflow.compat.v1.nn.fractional_max_pool": "doc",
    "tensorflow.compat.v1.nn.with_space_to_batch": "doc",
    "tensorflow.compat.v1.image.convert_image_dtype": "doc",
    "tensorflow.compat.v1.image.pad_to_bounding_box": "doc",
    "tensorflow.compat.v1.image.random_flip_up_down": "doc",
    "tensorflow.compat.v1.image.random_jpeg_quality": "doc",
    "tensorflow.compat.v1.train.NewCheckpointReader": "doc",
    "tensorflow.compat.v1.train.linear_cosine_decay": "doc",
    "tensorflow.compat.v1.train.start_queue_runners": "doc",
    "tensorflow.compat.v1.lookup.TextFileInitializer": "doc",
    "tensorflow.compat.v1.profiler.MultiGraphNodeProto": "doc",
    "tensorflow.compat.v1.train.queue_runner.start_queue_runners": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.tensor_scatter_nd_update": "doc",
    "tensorflow.losses.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_update": "doc",
    "tensorflow.compat.v1.verify_tensor_all_finite": "doc",
    "tensorflow.compat.v1.nn.static_bidirectional_rnn": "doc",
    "tensorflow.compat.v1.train.MonitoredTrainingSession": "doc",
    "tensorflow.compat.v1.train.piecewise_constant_decay": "doc",
    "tensorflow.compat.v1.experimental.output_all_intermediates": "doc",
    "tensorflow.compat.v1.feature_column.shared_embedding_columns": "doc",
    "tensorflow.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.compat.v1.tpu.experimental.shared_embedding_columns": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.image.sample_distorted_bounding_box": "doc",
    "tensorflow.compat.v1.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.compat.v1.image.sample_distorted_bounding_box": "doc",
    "tensorflow.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.compat.v1.app.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.compat.v1.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.image.stateless_sample_distorted_bounding_box": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_filter": "doc",
    "tensorflow.io": "doc",
    "tensorflow.nn": "doc",
    "tensorflow.abs": "doc",
    "tensorflow.add": "doc",
    "tensorflow.cos": "doc",
    "tensorflow.eig": "doc",
    "tensorflow.exp": "doc",
    "tensorflow.eye": "doc",
    "tensorflow.pad": "doc",
    "tensorflow.pow": "doc",
    "tensorflow.sin": "doc",
    "tensorflow.tan": "doc",
    "tensorflow.tpu": "doc",
    "tensorflow.xla": "doc",
    "tensorflow.acos": "doc",
    "tensorflow.asin": "doc",
    "tensorflow.atan": "doc",
    "tensorflow.case": "doc",
    "tensorflow.cast": "doc",
    "tensorflow.cond": "doc",
    "tensorflow.cosh": "doc",
    "tensorflow.data": "doc",
    "tensorflow.fill": "doc",
    "tensorflow.less": "doc",
    "tensorflow.lite": "doc",
    "tensorflow.math": "doc",
    "tensorflow.mlir": "doc",
    "tensorflow.nest": "doc",
    "tensorflow.norm": "doc",
    "tensorflow.ones": "doc",
    "tensorflow.rank": "doc",
    "tensorflow.roll": "doc",
    "tensorflow.scan": "doc",
    "tensorflow.sign": "doc",
    "tensorflow.sinh": "doc",
    "tensorflow.size": "doc",
    "tensorflow.sort": "doc",
    "tensorflow.sqrt": "doc",
    "tensorflow.tanh": "doc",
    "tensorflow.test": "doc",
    "tensorflow.tile": "doc",
    "tensorflow.DType": "doc",
    "tensorflow.Graph": "doc",
    "tensorflow.acosh": "doc",
    "tensorflow.add_n": "doc",
    "tensorflow.asinh": "doc",
    "tensorflow.atan2": "doc",
    "tensorflow.atanh": "doc",
    "tensorflow.audio": "doc",
    "tensorflow.equal": "doc",
    "tensorflow.floor": "doc",
    "tensorflow.foldl": "doc",
    "tensorflow.foldr": "doc",
    "tensorflow.group": "doc",
    "tensorflow.image": "doc",
    "tensorflow.no_op": "doc",
    "tensorflow.print": "doc",
    "tensorflow.queue": "doc",
    "tensorflow.round": "doc",
    "tensorflow.shape": "doc",
    "tensorflow.slice": "doc",
    "tensorflow.split": "doc",
    "tensorflow.stack": "doc",
    "tensorflow.train": "doc",
    "tensorflow.tuple": "doc",
    "tensorflow.types": "doc",
    "tensorflow.where": "doc",
    "tensorflow.Assert": "doc",
    "tensorflow.Module": "doc",
    "tensorflow.Tensor": "doc",
    "tensorflow.argmax": "doc",
    "tensorflow.argmin": "doc",
    "tensorflow.compat": "doc",
    "tensorflow.concat": "doc",
    "tensorflow.config": "doc",
    "tensorflow.cumsum": "doc",
    "tensorflow.device": "doc",
    "tensorflow.divide": "doc",
    "tensorflow.dtypes": "doc",
    "tensorflow.einsum": "doc",
    "tensorflow.gather": "doc",
    "tensorflow.linalg": "doc",
    "tensorflow.lookup": "doc",
    "tensorflow.losses": "doc",
    "tensorflow.map_fn": "doc",
    "tensorflow.matmul": "doc",
    "tensorflow.nn.elu": "doc",
    "tensorflow.nn.lrn": "doc",
    "tensorflow.repeat": "doc",
    "tensorflow.signal": "doc",
    "tensorflow.square": "doc",
    "tensorflow.unique": "doc",
    "tensorflow.argsort": "doc",
    "tensorflow.bitcast": "doc",
    "tensorflow.bitwise": "doc",
    "tensorflow.complex": "doc",
    "tensorflow.eigvals": "doc",
    "tensorflow.greater": "doc",
    "tensorflow.maximum": "doc",
    "tensorflow.minimum": "doc",
    "tensorflow.nn.gelu": "doc",
    "tensorflow.nn.pool": "doc",
    "tensorflow.nn.relu": "doc",
    "tensorflow.nn.selu": "doc",
    "tensorflow.nn.silu": "doc",
    "tensorflow.nn.tanh": "doc",
    "tensorflow.one_hot": "doc",
    "tensorflow.realdiv": "doc",
    "tensorflow.reshape": "doc",
    "tensorflow.shape_n": "doc",
    "tensorflow.sigmoid": "doc",
    "tensorflow.squeeze": "doc",
    "tensorflow.summary": "doc",
    "tensorflow.truediv": "doc",
    "tensorflow.unstack": "doc",
    "tensorflow.version": "doc",
    "tensorflow.TypeSpec": "doc",
    "tensorflow.Variable": "doc",
    "tensorflow.as_dtype": "doc",
    "tensorflow.autodiff": "doc",
    "tensorflow.constant": "doc",
    "tensorflow.function": "doc",
    "tensorflow.identity": "doc",
    "tensorflow.io.gfile": "doc",
    "tensorflow.linspace": "doc",
    "tensorflow.math.abs": "doc",
    "tensorflow.math.add": "doc",
    "tensorflow.math.cos": "doc",
    "tensorflow.math.erf": "doc",
    "tensorflow.math.exp": "doc",
    "tensorflow.math.log": "doc",
    "tensorflow.math.mod": "doc",
    "tensorflow.math.pow": "doc",
    "tensorflow.math.sin": "doc",
    "tensorflow.math.tan": "doc",
    "tensorflow.meshgrid": "doc",
    "tensorflow.multiply": "doc",
    "tensorflow.negative": "doc",
    "tensorflow.nn.crelu": "doc",
    "tensorflow.nn.relu6": "doc",
    "tensorflow.nn.swish": "doc",
    "tensorflow.nn.top_k": "doc",
    "tensorflow.profiler": "doc",
    "tensorflow.subtract": "doc",
    "tensorflow.Operation": "doc",
    "tensorflow.as_string": "doc",
    "tensorflow.autograph": "doc",
    "tensorflow.debugging": "doc",
    "tensorflow.gather_nd": "doc",
    "tensorflow.gradients": "doc",
    "tensorflow.is_tensor": "doc",
    "tensorflow.linalg.lu": "doc",
    "tensorflow.linalg.qr": "doc",
    "tensorflow.math.acos": "doc",
    "tensorflow.math.asin": "doc",
    "tensorflow.math.atan": "doc",
    "tensorflow.math.ceil": "doc",
    "tensorflow.math.conj": "doc",
    "tensorflow.math.cosh": "doc",
    "tensorflow.math.erfc": "doc",
    "tensorflow.math.imag": "doc",
    "tensorflow.math.less": "doc",
    "tensorflow.math.real": "doc",
    "tensorflow.math.rint": "doc",
    "tensorflow.math.sign": "doc",
    "tensorflow.math.sinh": "doc",
    "tensorflow.math.sqrt": "doc",
    "tensorflow.math.tanh": "doc",
    "tensorflow.math.zeta": "doc",
    "tensorflow.nn.conv1d": "doc",
    "tensorflow.nn.conv2d": "doc",
    "tensorflow.nn.conv3d": "doc",
    "tensorflow.not_equal": "doc",
    "tensorflow.ones_like": "doc",
    "tensorflow.sysconfig": "doc",
    "tensorflow.tensordot": "doc",
    "tensorflow.test.main": "doc",
    "tensorflow.timestamp": "doc",
    "tensorflow.compat.v1": "doc",
    "tensorflow.DeviceSpec": "doc",
    "tensorflow.distribute": "doc",
    "tensorflow.graph_util": "doc",
    "tensorflow.identity_n": "doc",
    "tensorflow.image.psnr": "doc",
    "tensorflow.image.ssim": "doc",
    "tensorflow.init_scope": "doc",
    "tensorflow.io.is_jpeg": "doc",
    "tensorflow.less_equal": "doc",
    "tensorflow.linalg.det": "doc",
    "tensorflow.linalg.eig": "doc",
    "tensorflow.linalg.eye": "doc",
    "tensorflow.linalg.inv": "doc",
    "tensorflow.linalg.svd": "doc",
    "tensorflow.logical_or": "doc",
    "tensorflow.losses.KLD": "doc",
    "tensorflow.losses.MAE": "doc",
    "tensorflow.losses.MSE": "doc",
    "tensorflow.losses.get": "doc",
    "tensorflow.losses.kld": "doc",
    "tensorflow.losses.mae": "doc",
    "tensorflow.losses.mse": "doc",
    "tensorflow.math.acosh": "doc",
    "tensorflow.math.add_n": "doc",
    "tensorflow.math.angle": "doc",
    "tensorflow.math.asinh": "doc",
    "tensorflow.math.atan2": "doc",
    "tensorflow.math.atanh": "doc",
    "tensorflow.math.equal": "doc",
    "tensorflow.math.expm1": "doc",
    "tensorflow.math.floor": "doc",
    "tensorflow.math.lbeta": "doc",
    "tensorflow.math.log1p": "doc",
    "tensorflow.math.ndtri": "doc",
    "tensorflow.math.round": "doc",
    "tensorflow.math.rsqrt": "doc",
    "tensorflow.math.top_k": "doc",
    "tensorflow.math.xdivy": "doc",
    "tensorflow.math.xlogy": "doc",
    "tensorflow.name_scope": "doc",
    "tensorflow.nn.dropout": "doc",
    "tensorflow.nn.l2_loss": "doc",
    "tensorflow.nn.moments": "doc",
    "tensorflow.nn.sigmoid": "doc",
    "tensorflow.nn.softmax": "doc",
    "tensorflow.optimizers": "doc",
    "tensorflow.reduce_all": "doc",
    "tensorflow.reduce_any": "doc",
    "tensorflow.reduce_max": "doc",
    "tensorflow.reduce_min": "doc",
    "tensorflow.reduce_sum": "doc",
    "tensorflow.scalar_mul": "doc",
    "tensorflow.signal.dct": "doc",
    "tensorflow.signal.fft": "doc",
    "tensorflow.while_loop": "doc",
    "tensorflow.TensorArray": "doc",
    "tensorflow.TensorShape": "doc",
    "tensorflow.assert_less": "doc",
    "tensorflow.dtypes.cast": "doc",
    "tensorflow.fingerprint": "doc",
    "tensorflow.image.rot90": "doc",
    "tensorflow.linalg.diag": "doc",
    "tensorflow.linalg.eigh": "doc",
    "tensorflow.linalg.expm": "doc",
    "tensorflow.linalg.logm": "doc",
    "tensorflow.linalg.norm": "doc",
    "tensorflow.linalg.pinv": "doc",
    "tensorflow.lite.OpsSet": "doc",
    "tensorflow.logical_and": "doc",
    "tensorflow.logical_not": "doc",
    "tensorflow.losses.Loss": "doc",
    "tensorflow.losses.MAPE": "doc",
    "tensorflow.losses.MSLE": "doc",
    "tensorflow.losses.mape": "doc",
    "tensorflow.losses.msle": "doc",
    "tensorflow.math.argmax": "doc",
    "tensorflow.math.argmin": "doc",
    "tensorflow.math.cumsum": "doc",
    "tensorflow.math.divide": "doc",
    "tensorflow.math.erfinv": "doc",
    "tensorflow.math.igamma": "doc",
    "tensorflow.math.is_inf": "doc",
    "tensorflow.math.is_nan": "doc",
    "tensorflow.math.lgamma": "doc",
    "tensorflow.math.square": "doc",
    "tensorflow.nn.avg_pool": "doc",
    "tensorflow.nn.bias_add": "doc",
    "tensorflow.nn.ctc_loss": "doc",
    "tensorflow.nn.in_top_k": "doc",
    "tensorflow.nn.max_pool": "doc",
    "tensorflow.nn.nce_loss": "doc",
    "tensorflow.nn.softplus": "doc",
    "tensorflow.nn.softsign": "doc",
    "tensorflow.py_function": "doc",
    "tensorflow.reduce_mean": "doc",
    "tensorflow.reduce_prod": "doc",
    "tensorflow.signal.idct": "doc",
    "tensorflow.signal.ifft": "doc",
    "tensorflow.signal.mdct": "doc",
    "tensorflow.signal.rfft": "doc",
    "tensorflow.signal.stft": "doc",
    "tensorflow.switch_case": "doc",
    "tensorflow.truncatediv": "doc",
    "tensorflow.GradientTape": "doc",
    "tensorflow.OptionalSpec": "doc",
    "tensorflow.RaggedTensor": "doc",
    "tensorflow.SparseTensor": "doc",
    "tensorflow.assert_equal": "doc",
    "tensorflow.broadcast_to": "doc",
    "tensorflow.clip_by_norm": "doc",
    "tensorflow.data.Options": "doc",
    "tensorflow.dtypes.DType": "doc",
    "tensorflow.ensure_shape": "doc",
    "tensorflow.experimental": "doc",
    "tensorflow.image.resize": "doc",
    "tensorflow.initializers": "doc",
    "tensorflow.linalg.cross": "doc",
    "tensorflow.linalg.lstsq": "doc",
    "tensorflow.linalg.solve": "doc",
    "tensorflow.linalg.sqrtm": "doc",
    "tensorflow.load_library": "doc",
    "tensorflow.losses.Hinge": "doc",
    "tensorflow.losses.Huber": "doc",
    "tensorflow.losses.hinge": "doc",
    "tensorflow.losses.huber": "doc",
    "tensorflow.make_ndarray": "doc",
    "tensorflow.math.betainc": "doc",
    "tensorflow.math.cumprod": "doc",
    "tensorflow.math.digamma": "doc",
    "tensorflow.math.erfcinv": "doc",
    "tensorflow.math.greater": "doc",
    "tensorflow.math.igammac": "doc",
    "tensorflow.math.maximum": "doc",
    "tensorflow.math.minimum": "doc",
    "tensorflow.math.polyval": "doc",
    "tensorflow.math.sigmoid": "doc",
    "tensorflow.math.softmax": "doc",
    "tensorflow.math.special": "doc",
    "tensorflow.math.truediv": "doc",
    "tensorflow.math.xlog1py": "doc",
    "tensorflow.nest.flatten": "doc",
    "tensorflow.quantization": "doc",
    "tensorflow.signal.fft2d": "doc",
    "tensorflow.signal.fft3d": "doc",
    "tensorflow.signal.irfft": "doc",
    "tensorflow.summary.text": "doc",
    "tensorflow.train.JobDef": "doc",
    "tensorflow.compat.v1.io": "doc",
    "tensorflow.compat.v1.nn": "doc",
    "tensorflow.compat.v1.qr": "doc",
    "tensorflow.IndexedSlices": "doc",
    "tensorflow.clip_by_value": "doc",
    "tensorflow.compat.as_str": "doc",
    "tensorflow.edit_distance": "doc",
    "tensorflow.greater_equal": "doc",
    "tensorflow.image.is_jpeg": "doc",
    "tensorflow.io.decode_bmp": "doc",
    "tensorflow.io.decode_csv": "doc",
    "tensorflow.io.decode_gif": "doc",
    "tensorflow.io.decode_png": "doc",
    "tensorflow.io.decode_raw": "doc",
    "tensorflow.io.encode_png": "doc",
    "tensorflow.io.gfile.copy": "doc",
    "tensorflow.io.gfile.glob": "doc",
    "tensorflow.io.gfile.stat": "doc",
    "tensorflow.io.gfile.walk": "doc",
    "tensorflow.io.write_file": "doc",
    "tensorflow.linalg.einsum": "doc",
    "tensorflow.linalg.logdet": "doc",
    "tensorflow.linalg.matmul": "doc",
    "tensorflow.linalg.matvec": "doc",
    "tensorflow.lite.Optimize": "doc",
    "tensorflow.math.bincount": "doc",
    "tensorflow.math.floordiv": "doc",
    "tensorflow.math.floormod": "doc",
    "tensorflow.math.in_top_k": "doc",
    "tensorflow.math.multiply": "doc",
    "tensorflow.math.negative": "doc",
    "tensorflow.math.softplus": "doc",
    "tensorflow.math.softsign": "doc",
    "tensorflow.math.subtract": "doc",
    "tensorflow.nn.avg_pool1d": "doc",
    "tensorflow.nn.avg_pool2d": "doc",
    "tensorflow.nn.avg_pool3d": "doc",
    "tensorflow.nn.dilation2d": "doc",
    "tensorflow.nn.max_pool1d": "doc",
    "tensorflow.nn.max_pool2d": "doc",
    "tensorflow.nn.max_pool3d": "doc",
    "tensorflow.signal.ifft2d": "doc",
    "tensorflow.signal.ifft3d": "doc",
    "tensorflow.signal.rfft2d": "doc",
    "tensorflow.signal.rfft3d": "doc",
    "tensorflow.summary.audio": "doc",
    "tensorflow.summary.flush": "doc",
    "tensorflow.summary.image": "doc",
    "tensorflow.summary.write": "doc",
    "tensorflow.train.Example": "doc",
    "tensorflow.train.Feature": "doc",
    "tensorflow.unravel_index": "doc",
    "tensorflow.compat.v1.abs": "doc",
    "tensorflow.compat.v1.add": "doc",
    "tensorflow.compat.v1.app": "doc",
    "tensorflow.compat.v1.cos": "doc",
    "tensorflow.compat.v1.div": "doc",
    "tensorflow.compat.v1.erf": "doc",
    "tensorflow.compat.v1.exp": "doc",
    "tensorflow.compat.v1.eye": "doc",
    "tensorflow.compat.v1.fft": "doc",
    "tensorflow.compat.v1.log": "doc",
    "tensorflow.compat.v1.mod": "doc",
    "tensorflow.compat.v1.pad": "doc",
    "tensorflow.compat.v1.pow": "doc",
    "tensorflow.compat.v1.sin": "doc",
    "tensorflow.compat.v1.svd": "doc",
    "tensorflow.compat.v1.tan": "doc",
    "tensorflow.compat.v1.tpu": "doc",
    "tensorflow.compat.v1.xla": "doc",
    "tensorflow.assert_greater": "doc",
    "tensorflow.batch_to_space": "doc",
    "tensorflow.bitwise.invert": "doc",
    "tensorflow.compat.as_text": "doc",
    "tensorflow.dtypes.complex": "doc",
    "tensorflow.dynamic_stitch": "doc",
    "tensorflow.feature_column": "doc",
    "tensorflow.io.gfile.GFile": "doc",
    "tensorflow.io.gfile.isdir": "doc",
    "tensorflow.io.gfile.mkdir": "doc",
    "tensorflow.io.write_graph": "doc",
    "tensorflow.linalg.adjoint": "doc",
    "tensorflow.linalg.eigvals": "doc",
    "tensorflow.linalg.slogdet": "doc",
    "tensorflow.losses.LogCosh": "doc",
    "tensorflow.losses.Poisson": "doc",
    "tensorflow.losses.logcosh": "doc",
    "tensorflow.losses.poisson": "doc",
    "tensorflow.math.bessel_i0": "doc",
    "tensorflow.math.bessel_i1": "doc",
    "tensorflow.math.is_finite": "doc",
    "tensorflow.math.nextafter": "doc",
    "tensorflow.math.not_equal": "doc",
    "tensorflow.math.polygamma": "doc",
    "tensorflow.nn.convolution": "doc",
    "tensorflow.nn.log_softmax": "doc",
    "tensorflow.numpy_function": "doc",
    "tensorflow.optimizers.SGD": "doc",
    "tensorflow.optimizers.get": "doc",
    "tensorflow.parallel_stack": "doc",
    "tensorflow.recompute_grad": "doc",
    "tensorflow.signal.irfft2d": "doc",
    "tensorflow.signal.irfft3d": "doc",
    "tensorflow.space_to_batch": "doc",
    "tensorflow.summary.scalar": "doc",
    "tensorflow.test.Benchmark": "doc",
    "tensorflow.train.Features": "doc",
    "tensorflow.vectorized_map": "doc",
    "tensorflow.compat.v1.acos": "doc",
    "tensorflow.compat.v1.asin": "doc",
    "tensorflow.compat.v1.atan": "doc",
    "tensorflow.compat.v1.case": "doc",
    "tensorflow.compat.v1.cast": "doc",
    "tensorflow.compat.v1.ceil": "doc",
    "tensorflow.compat.v1.cond": "doc",
    "tensorflow.compat.v1.conj": "doc",
    "tensorflow.compat.v1.cosh": "doc",
    "tensorflow.compat.v1.data": "doc",
    "tensorflow.compat.v1.diag": "doc",
    "tensorflow.compat.v1.erfc": "doc",
    "tensorflow.compat.v1.fill": "doc",
    "tensorflow.compat.v1.ifft": "doc",
    "tensorflow.compat.v1.imag": "doc",
    "tensorflow.compat.v1.less": "doc",
    "tensorflow.compat.v1.lite": "doc",
    "tensorflow.compat.v1.math": "doc",
    "tensorflow.compat.v1.mlir": "doc",
    "tensorflow.compat.v1.nest": "doc",
    "tensorflow.compat.v1.norm": "doc",
    "tensorflow.compat.v1.ones": "doc",
    "tensorflow.compat.v1.rank": "doc",
    "tensorflow.compat.v1.real": "doc",
    "tensorflow.compat.v1.rint": "doc",
    "tensorflow.compat.v1.roll": "doc",
    "tensorflow.compat.v1.scan": "doc",
    "tensorflow.compat.v1.sign": "doc",
    "tensorflow.compat.v1.sinh": "doc",
    "tensorflow.compat.v1.size": "doc",
    "tensorflow.compat.v1.sort": "doc",
    "tensorflow.compat.v1.sqrt": "doc",
    "tensorflow.compat.v1.tanh": "doc",
    "tensorflow.compat.v1.test": "doc",
    "tensorflow.compat.v1.tile": "doc",
    "tensorflow.compat.v1.zeta": "doc",
    "tensorflow.CriticalSection": "doc",
    "tensorflow.TensorArraySpec": "doc",
    "tensorflow.compat.as_bytes": "doc",
    "tensorflow.custom_gradient": "doc",
    "tensorflow.dtypes.as_dtype": "doc",
    "tensorflow.guarantee_const": "doc",
    "tensorflow.inside_function": "doc",
    "tensorflow.io.decode_image": "doc",
    "tensorflow.io.decode_proto": "doc",
    "tensorflow.io.encode_proto": "doc",
    "tensorflow.io.gfile.exists": "doc",
    "tensorflow.io.gfile.remove": "doc",
    "tensorflow.io.parse_tensor": "doc",
    "tensorflow.linalg.cholesky": "doc",
    "tensorflow.linalg.eigvalsh": "doc",
    "tensorflow.linalg.lu_solve": "doc",
    "tensorflow.lite.TargetSpec": "doc",
    "tensorflow.load_op_library": "doc",
    "tensorflow.losses.log_cosh": "doc",
    "tensorflow.math.bessel_i0e": "doc",
    "tensorflow.math.bessel_i1e": "doc",
    "tensorflow.math.less_equal": "doc",
    "tensorflow.math.logical_or": "doc",
    "tensorflow.math.reciprocal": "doc",
    "tensorflow.math.reduce_all": "doc",
    "tensorflow.math.reduce_any": "doc",
    "tensorflow.math.reduce_max": "doc",
    "tensorflow.math.reduce_min": "doc",
    "tensorflow.math.reduce_sum": "doc",
    "tensorflow.math.scalar_mul": "doc",
    "tensorflow.mixed_precision": "doc",
    "tensorflow.nn.l2_normalize": "doc",
    "tensorflow.optimizers.Adam": "doc",
    "tensorflow.optimizers.Ftrl": "doc",
    "tensorflow.queue.FIFOQueue": "doc",
    "tensorflow.queue.QueueBase": "doc",
    "tensorflow.signal.fftshift": "doc",
    "tensorflow.train.BytesList": "doc",
    "tensorflow.train.FloatList": "doc",
    "tensorflow.train.Int64List": "doc",
    "tensorflow.train.ServerDef": "doc",
    "tensorflow.compat.v1.DType": "doc",
    "tensorflow.compat.v1.Event": "doc",
    "tensorflow.compat.v1.Graph": "doc",
    "tensorflow.compat.v1.Print": "doc",
    "tensorflow.compat.v1.acosh": "doc",
    "tensorflow.compat.v1.add_n": "doc",
    "tensorflow.compat.v1.angle": "doc",
    "tensorflow.compat.v1.asinh": "doc",
    "tensorflow.compat.v1.atan2": "doc",
    "tensorflow.compat.v1.atanh": "doc",
    "tensorflow.compat.v1.audio": "doc",
    "tensorflow.compat.v1.cross": "doc",
    "tensorflow.compat.v1.equal": "doc",
    "tensorflow.compat.v1.expm1": "doc",
    "tensorflow.compat.v1.fft2d": "doc",
    "tensorflow.compat.v1.fft3d": "doc",
    "tensorflow.compat.v1.flags": "doc",
    "tensorflow.compat.v1.floor": "doc",
    "tensorflow.compat.v1.foldl": "doc",
    "tensorflow.compat.v1.foldr": "doc",
    "tensorflow.compat.v1.gfile": "doc",
    "tensorflow.compat.v1.group": "doc",
    "tensorflow.compat.v1.image": "doc",
    "tensorflow.compat.v1.lbeta": "doc",
    "tensorflow.compat.v1.log1p": "doc",
    "tensorflow.compat.v1.manip": "doc",
    "tensorflow.compat.v1.no_op": "doc",
    "tensorflow.compat.v1.print": "doc",
    "tensorflow.compat.v1.queue": "doc",
    "tensorflow.compat.v1.round": "doc",
    "tensorflow.compat.v1.rsqrt": "doc",
    "tensorflow.compat.v1.shape": "doc",
    "tensorflow.compat.v1.slice": "doc",
    "tensorflow.compat.v1.split": "doc",
    "tensorflow.compat.v1.stack": "doc",
    "tensorflow.compat.v1.train": "doc",
    "tensorflow.compat.v1.tuple": "doc",
    "tensorflow.compat.v1.types": "doc",
    "tensorflow.compat.v1.where": "doc",
    "tensorflow.RaggedTensorSpec": "doc",
    "tensorflow.RegisterGradient": "doc",
    "tensorflow.SparseTensorSpec": "doc",
    "tensorflow.audio.decode_wav": "doc",
    "tensorflow.audio.encode_wav": "doc",
    "tensorflow.config.optimizer": "doc",
    "tensorflow.config.threading": "doc",
    "tensorflow.data.DatasetSpec": "doc",
    "tensorflow.debugging.Assert": "doc",
    "tensorflow.image.adjust_hue": "doc",
    "tensorflow.image.decode_bmp": "doc",
    "tensorflow.image.decode_gif": "doc",
    "tensorflow.image.decode_png": "doc",
    "tensorflow.image.encode_png": "doc",
    "tensorflow.image.hsv_to_rgb": "doc",
    "tensorflow.image.rgb_to_hsv": "doc",
    "tensorflow.image.rgb_to_yiq": "doc",
    "tensorflow.image.rgb_to_yuv": "doc",
    "tensorflow.image.yiq_to_rgb": "doc",
    "tensorflow.image.yuv_to_rgb": "doc",
    "tensorflow.import_graph_def": "doc",
    "tensorflow.initializers.get": "doc",
    "tensorflow.io.RaggedFeature": "doc",
    "tensorflow.io.SparseFeature": "doc",
    "tensorflow.io.VarLenFeature": "doc",
    "tensorflow.io.decode_base64": "doc",
    "tensorflow.io.encode_base64": "doc",
    "tensorflow.io.gfile.listdir": "doc",
    "tensorflow.io.parse_example": "doc",
    "tensorflow.linalg.diag_part": "doc",
    "tensorflow.linalg.normalize": "doc",
    "tensorflow.linalg.tensordot": "doc",
    "tensorflow.lite.Interpreter": "doc",
    "tensorflow.losses.Reduction": "doc",
    "tensorflow.math.log_sigmoid": "doc",
    "tensorflow.math.log_softmax": "doc",
    "tensorflow.math.logical_and": "doc",
    "tensorflow.math.logical_not": "doc",
    "tensorflow.math.logical_xor": "doc",
    "tensorflow.math.reduce_mean": "doc",
    "tensorflow.math.reduce_prod": "doc",
    "tensorflow.nn.atrous_conv2d": "doc",
    "tensorflow.nn.zero_fraction": "doc",
    "tensorflow.ones_initializer": "doc",
    "tensorflow.optimizers.Nadam": "doc",
    "tensorflow.reduce_logsumexp": "doc",
    "tensorflow.reverse_sequence": "doc",
    "tensorflow.signal.ifftshift": "doc",
    "tensorflow.tpu.experimental": "doc",
    "tensorflow.train.Checkpoint": "doc",
    "tensorflow.train.ClusterDef": "doc",
    "tensorflow.xla.experimental": "doc",
    "tensorflow.compat.v1.Assert": "doc",
    "tensorflow.compat.v1.Module": "doc",
    "tensorflow.compat.v1.Tensor": "doc",
    "tensorflow.compat.v1.argmax": "doc",
    "tensorflow.compat.v1.argmin": "doc",
    "tensorflow.compat.v1.assign": "doc",
    "tensorflow.compat.v1.compat": "doc",
    "tensorflow.compat.v1.concat": "doc",
    "tensorflow.compat.v1.config": "doc",
    "tensorflow.compat.v1.cumsum": "doc",
    "tensorflow.compat.v1.device": "doc",
    "tensorflow.compat.v1.divide": "doc",
    "tensorflow.compat.v1.dtypes": "doc",
    "tensorflow.compat.v1.einsum": "doc",
    "tensorflow.compat.v1.gather": "doc",
    "tensorflow.compat.v1.ifft2d": "doc",
    "tensorflow.compat.v1.ifft3d": "doc",
    "tensorflow.compat.v1.igamma": "doc",
    "tensorflow.compat.v1.is_inf": "doc",
    "tensorflow.compat.v1.is_nan": "doc",
    "tensorflow.compat.v1.layers": "doc",
    "tensorflow.compat.v1.lgamma": "doc",
    "tensorflow.compat.v1.linalg": "doc",
    "tensorflow.compat.v1.lookup": "doc",
    "tensorflow.compat.v1.losses": "doc",
    "tensorflow.compat.v1.map_fn": "doc",
    "tensorflow.compat.v1.matmul": "doc",
    "tensorflow.compat.v1.nn.elu": "doc",
    "tensorflow.compat.v1.nn.lrn": "doc",
    "tensorflow.compat.v1.repeat": "doc",
    "tensorflow.compat.v1.signal": "doc",
    "tensorflow.compat.v1.square": "doc",
    "tensorflow.compat.v1.substr": "doc",
    "tensorflow.compat.v1.unique": "doc",
    "tensorflow.AggregationMethod": "doc",
    "tensorflow.IndexedSlicesSpec": "doc",
    "tensorflow.compat.as_str_any": "doc",
    "tensorflow.convert_to_tensor": "doc",
    "tensorflow.data.experimental": "doc",
    "tensorflow.distribute.Server": "doc",
    "tensorflow.dynamic_partition": "doc",
    "tensorflow.executing_eagerly": "doc",
    "tensorflow.grad_pass_through": "doc",
    "tensorflow.image.sobel_edges": "doc",
    "tensorflow.initializers.Ones": "doc",
    "tensorflow.initializers.ones": "doc",
    "tensorflow.io.TFRecordWriter": "doc",
    "tensorflow.io.gfile.makedirs": "doc",
    "tensorflow.io.matching_files": "doc",
    "tensorflow.lite.experimental": "doc",
    "tensorflow.math.accumulate_n": "doc",
    "tensorflow.math.l2_normalize": "doc",
    "tensorflow.math.sobol_sample": "doc",
    "tensorflow.mlir.experimental": "doc",
    "tensorflow.nn.depth_to_space": "doc",
    "tensorflow.nn.space_to_batch": "doc",
    "tensorflow.nn.space_to_depth": "doc",
    "tensorflow.optimizers.Adamax": "doc",
    "tensorflow.summary.histogram": "doc",
    "tensorflow.sysconfig.get_lib": "doc",
    "tensorflow.train.ClusterSpec": "doc",
    "tensorflow.train.Coordinator": "doc",
    "tensorflow.train.FeatureList": "doc",
    "tensorflow.zeros_initializer": "doc",
    "tensorflow.compat.v1.NodeDef": "doc",
    "tensorflow.compat.v1.OpError": "doc",
    "tensorflow.compat.v1.Session": "doc",
    "tensorflow.compat.v1.Summary": "doc",
    "tensorflow.compat.v1.app.run": "doc",
    "tensorflow.compat.v1.arg_max": "doc",
    "tensorflow.compat.v1.arg_min": "doc",
    "tensorflow.compat.v1.argsort": "doc",
    "tensorflow.compat.v1.betainc": "doc",
    "tensorflow.compat.v1.bitcast": "doc",
    "tensorflow.compat.v1.bitwise": "doc",
    "tensorflow.compat.v1.complex": "doc",
    "tensorflow.compat.v1.cumprod": "doc",
    "tensorflow.compat.v1.digamma": "doc",
    "tensorflow.compat.v1.greater": "doc",
    "tensorflow.compat.v1.igammac": "doc",
    "tensorflow.compat.v1.logging": "doc",
    "tensorflow.compat.v1.maximum": "doc",
    "tensorflow.compat.v1.minimum": "doc",
    "tensorflow.compat.v1.nn.pool": "doc",
    "tensorflow.compat.v1.nn.relu": "doc",
    "tensorflow.compat.v1.nn.selu": "doc",
    "tensorflow.compat.v1.nn.silu": "doc",
    "tensorflow.compat.v1.nn.tanh": "doc",
    "tensorflow.compat.v1.one_hot": "doc",
    "tensorflow.compat.v1.py_func": "doc",
    "tensorflow.compat.v1.realdiv": "doc",
    "tensorflow.compat.v1.reshape": "doc",
    "tensorflow.compat.v1.shape_n": "doc",
    "tensorflow.compat.v1.sigmoid": "doc",
    "tensorflow.compat.v1.squeeze": "doc",
    "tensorflow.compat.v1.summary": "doc",
    "tensorflow.compat.v1.truediv": "doc",
    "tensorflow.compat.v1.unstack": "doc",
    "tensorflow.compat.v1.version": "doc",
    "tensorflow.autograph.to_graph": "doc",
    "tensorflow.bitwise.bitwise_or": "doc",
    "tensorflow.bitwise.left_shift": "doc",
    "tensorflow.experimental.numpy": "doc",
    "tensorflow.image.ResizeMethod": "doc",
    "tensorflow.image.adjust_gamma": "doc",
    "tensorflow.image.decode_image": "doc",
    "tensorflow.image.flip_up_down": "doc",
    "tensorflow.io.FixedLenFeature": "doc",
    "tensorflow.io.TFRecordOptions": "doc",
    "tensorflow.linalg.global_norm": "doc",
    "tensorflow.linalg.matrix_rank": "doc",
    "tensorflow.losses.deserialize": "doc",
    "tensorflow.math.count_nonzero": "doc",
    "tensorflow.math.divide_no_nan": "doc",
    "tensorflow.math.greater_equal": "doc",
    "tensorflow.math.special.dawsn": "doc",
    "tensorflow.math.zero_fraction": "doc",
    "tensorflow.matrix_square_root": "doc",
    "tensorflow.nest.map_structure": "doc",
    "tensorflow.optimizers.Adagrad": "doc",
    "tensorflow.optimizers.RMSprop": "doc",
    "tensorflow.signal.hann_window": "doc",
    "tensorflow.train.FeatureLists": "doc",
    "tensorflow.train.experimental": "doc",
    "tensorflow.types.experimental": "doc",
    "tensorflow.unique_with_counts": "doc",
    "tensorflow.compat.v1.GraphDef": "doc",
    "tensorflow.compat.v1.TypeSpec": "doc",
    "tensorflow.compat.v1.Variable": "doc",
    "tensorflow.compat.v1.as_dtype": "doc",
    "tensorflow.compat.v1.bincount": "doc",
    "tensorflow.compat.v1.cholesky": "doc",
    "tensorflow.compat.v1.constant": "doc",
    "tensorflow.compat.v1.floordiv": "doc",
    "tensorflow.compat.v1.floormod": "doc",
    "tensorflow.compat.v1.function": "doc",
    "tensorflow.compat.v1.identity": "doc",
    "tensorflow.compat.v1.io.gfile": "doc",
    "tensorflow.compat.v1.linspace": "doc",
    "tensorflow.compat.v1.math.abs": "doc",
    "tensorflow.compat.v1.math.add": "doc",
    "tensorflow.compat.v1.math.cos": "doc",
    "tensorflow.compat.v1.math.erf": "doc",
    "tensorflow.compat.v1.math.exp": "doc",
    "tensorflow.compat.v1.math.log": "doc",
    "tensorflow.compat.v1.math.mod": "doc",
    "tensorflow.compat.v1.math.pow": "doc",
    "tensorflow.compat.v1.math.sin": "doc",
    "tensorflow.compat.v1.math.tan": "doc",
    "tensorflow.compat.v1.meshgrid": "doc",
    "tensorflow.compat.v1.multiply": "doc",
    "tensorflow.compat.v1.negative": "doc",
    "tensorflow.compat.v1.nn.crelu": "doc",
    "tensorflow.compat.v1.nn.relu6": "doc",
    "tensorflow.compat.v1.nn.swish": "doc",
    "tensorflow.compat.v1.nn.top_k": "doc",
    "tensorflow.compat.v1.op_scope": "doc",
    "tensorflow.compat.v1.profiler": "doc",
    "tensorflow.compat.v1.quantize": "doc",
    "tensorflow.compat.v1.spectral": "doc",
    "tensorflow.compat.v1.subtract": "doc",
    "tensorflow.compat.v1.to_float": "doc",
    "tensorflow.compat.v1.to_int32": "doc",
    "tensorflow.compat.v1.to_int64": "doc",
    "tensorflow.compat.v1.tpu.core": "doc",
    "tensorflow.compat.v1.where_v2": "doc",
    "tensorflow.VariableAggregation": "doc",
    "tensorflow.bitwise.bitwise_and": "doc",
    "tensorflow.bitwise.bitwise_xor": "doc",
    "tensorflow.bitwise.right_shift": "doc",
    "tensorflow.clip_by_global_norm": "doc",
    "tensorflow.config.experimental": "doc",
    "tensorflow.distribute.ReduceOp": "doc",
    "tensorflow.experimental.dlpack": "doc",
    "tensorflow.linalg.experimental": "doc",
    "tensorflow.linalg.l2_normalize": "doc",
    "tensorflow.lookup.experimental": "doc",
    "tensorflow.losses.KLDivergence": "doc",
    "tensorflow.losses.SquaredHinge": "doc",
    "tensorflow.math.special.expint": "doc",
    "tensorflow.math.special.spence": "doc",
    "tensorflow.nn.conv1d_transpose": "doc",
    "tensorflow.nn.conv2d_transpose": "doc",
    "tensorflow.nn.conv3d_transpose": "doc",
    "tensorflow.nn.depthwise_conv2d": "doc",
    "tensorflow.nn.embedding_lookup": "doc",
    "tensorflow.nn.log_poisson_loss": "doc",
    "tensorflow.optimizers.Adadelta": "doc",
    "tensorflow.queue.PriorityQueue": "doc",
    "tensorflow.signal.inverse_mdct": "doc",
    "tensorflow.signal.inverse_stft": "doc",
    "tensorflow.train.load_variable": "doc",
    "tensorflow.compat.v1.AttrValue": "doc",
    "tensorflow.compat.v1.Dimension": "doc",
    "tensorflow.compat.v1.FIFOQueue": "doc",
    "tensorflow.compat.v1.GraphKeys": "doc",
    "tensorflow.compat.v1.Operation": "doc",
    "tensorflow.compat.v1.QueueBase": "doc",
    "tensorflow.compat.v1.app.flags": "doc",
    "tensorflow.compat.v1.as_string": "doc",
    "tensorflow.compat.v1.autograph": "doc",
    "tensorflow.compat.v1.container": "doc",
    "tensorflow.compat.v1.debugging": "doc",
    "tensorflow.compat.v1.diag_part": "doc",
    "tensorflow.compat.v1.floor_div": "doc",
    "tensorflow.compat.v1.gather_nd": "doc",
    "tensorflow.compat.v1.gradients": "doc",
    "tensorflow.compat.v1.is_finite": "doc",
    "tensorflow.compat.v1.is_tensor": "doc",
    "tensorflow.compat.v1.lin_space": "doc",
    "tensorflow.compat.v1.linalg.lu": "doc",
    "tensorflow.compat.v1.linalg.qr": "doc",
    "tensorflow.compat.v1.math.acos": "doc",
    "tensorflow.compat.v1.math.asin": "doc",
    "tensorflow.compat.v1.math.atan": "doc",
    "tensorflow.compat.v1.math.ceil": "doc",
    "tensorflow.compat.v1.math.conj": "doc",
    "tensorflow.compat.v1.math.cosh": "doc",
    "tensorflow.compat.v1.math.erfc": "doc",
    "tensorflow.compat.v1.math.imag": "doc",
    "tensorflow.compat.v1.math.less": "doc",
    "tensorflow.compat.v1.math.real": "doc",
    "tensorflow.compat.v1.math.rint": "doc",
    "tensorflow.compat.v1.math.sign": "doc",
    "tensorflow.compat.v1.math.sinh": "doc",
    "tensorflow.compat.v1.math.sqrt": "doc",
    "tensorflow.compat.v1.math.tanh": "doc",
    "tensorflow.compat.v1.math.zeta": "doc",
    "tensorflow.compat.v1.nn.conv1d": "doc",
    "tensorflow.compat.v1.nn.conv2d": "doc",
    "tensorflow.compat.v1.nn.conv3d": "doc",
    "tensorflow.compat.v1.not_equal": "doc",
    "tensorflow.compat.v1.ones_like": "doc",
    "tensorflow.compat.v1.polygamma": "doc",
    "tensorflow.compat.v1.python_io": "doc",
    "tensorflow.compat.v1.sysconfig": "doc",
    "tensorflow.compat.v1.tensordot": "doc",
    "tensorflow.compat.v1.test.main": "doc",
    "tensorflow.compat.v1.timestamp": "doc",
    "tensorflow.compat.v1.tpu.shard": "doc",
    "tensorflow.UnconnectedGradients": "doc",
    "tensorflow.config.LogicalDevice": "doc",
    "tensorflow.constant_initializer": "doc",
    "tensorflow.control_dependencies": "doc",
    "tensorflow.data.TFRecordDataset": "doc",
    "tensorflow.data.TextLineDataset": "doc",
    "tensorflow.lite.TFLiteConverter": "doc",
    "tensorflow.lookup.TextFileIndex": "doc",
    "tensorflow.losses.kl_divergence": "doc",
    "tensorflow.math.multiply_no_nan": "doc",
    "tensorflow.math.reduce_variance": "doc",
    "tensorflow.nn.collapse_repeated": "doc",
    "tensorflow.nn.ctc_unique_labels": "doc",
    "tensorflow.nn.normalize_moments": "doc",
    "tensorflow.optimizers.Optimizer": "doc",
    "tensorflow.optimizers.schedules": "doc",
    "tensorflow.signal.kaiser_window": "doc",
    "tensorflow.signal.vorbis_window": "doc",
    "tensorflow.summary.experimental": "doc",
    "tensorflow.summary.trace_export": "doc",
    "tensorflow.test.gpu_device_name": "doc",
    "tensorflow.train.list_variables": "doc",
    "tensorflow.type_spec_from_value": "doc",
    "tensorflow.compat.v1.DeviceSpec": "doc",
    "tensorflow.compat.v1.GPUOptions": "doc",
    "tensorflow.compat.v1.LMDBReader": "doc",
    "tensorflow.compat.v1.LogMessage": "doc",
    "tensorflow.compat.v1.RunOptions": "doc",
    "tensorflow.compat.v1.SessionLog": "doc",
    "tensorflow.compat.v1.TensorInfo": "doc",
    "tensorflow.compat.v1.assign_add": "doc",
    "tensorflow.compat.v1.assign_sub": "doc",
    "tensorflow.compat.v1.decode_csv": "doc",
    "tensorflow.compat.v1.decode_raw": "doc",
    "tensorflow.compat.v1.distribute": "doc",
    "tensorflow.compat.v1.flags.Flag": "doc",
    "tensorflow.compat.v1.gfile.Copy": "doc",
    "tensorflow.compat.v1.gfile.Glob": "doc",
    "tensorflow.compat.v1.gfile.Open": "doc",
    "tensorflow.compat.v1.gfile.Stat": "doc",
    "tensorflow.compat.v1.gfile.Walk": "doc",
    "tensorflow.compat.v1.graph_util": "doc",
    "tensorflow.compat.v1.identity_n": "doc",
    "tensorflow.compat.v1.image.psnr": "doc",
    "tensorflow.compat.v1.image.ssim": "doc",
    "tensorflow.compat.v1.init_scope": "doc",
    "tensorflow.compat.v1.io.is_jpeg": "doc",
    "tensorflow.compat.v1.less_equal": "doc",
    "tensorflow.compat.v1.linalg.det": "doc",
    "tensorflow.compat.v1.linalg.eye": "doc",
    "tensorflow.compat.v1.linalg.inv": "doc",
    "tensorflow.compat.v1.linalg.svd": "doc",
    "tensorflow.compat.v1.logical_or": "doc",
    "tensorflow.compat.v1.manip.roll": "doc",
    "tensorflow.compat.v1.manip.tile": "doc",
    "tensorflow.compat.v1.math.acosh": "doc",
    "tensorflow.compat.v1.math.add_n": "doc",
    "tensorflow.compat.v1.math.angle": "doc",
    "tensorflow.compat.v1.math.asinh": "doc",
    "tensorflow.compat.v1.math.atan2": "doc",
    "tensorflow.compat.v1.math.atanh": "doc",
    "tensorflow.compat.v1.math.equal": "doc",
    "tensorflow.compat.v1.math.expm1": "doc",
    "tensorflow.compat.v1.math.floor": "doc",
    "tensorflow.compat.v1.math.lbeta": "doc",
    "tensorflow.compat.v1.math.log1p": "doc",
    "tensorflow.compat.v1.math.ndtri": "doc",
    "tensorflow.compat.v1.math.round": "doc",
    "tensorflow.compat.v1.math.rsqrt": "doc",
    "tensorflow.compat.v1.math.top_k": "doc",
    "tensorflow.compat.v1.math.xdivy": "doc",
    "tensorflow.compat.v1.math.xlogy": "doc",
    "tensorflow.compat.v1.name_scope": "doc",
    "tensorflow.compat.v1.nn.dropout": "doc",
    "tensorflow.compat.v1.nn.l2_loss": "doc",
    "tensorflow.compat.v1.nn.moments": "doc",
    "tensorflow.compat.v1.nn.raw_rnn": "doc",
    "tensorflow.compat.v1.nn.sigmoid": "doc",
    "tensorflow.compat.v1.nn.softmax": "doc",
    "tensorflow.compat.v1.reciprocal": "doc",
    "tensorflow.compat.v1.reduce_all": "doc",
    "tensorflow.compat.v1.reduce_any": "doc",
    "tensorflow.compat.v1.reduce_max": "doc",
    "tensorflow.compat.v1.reduce_min": "doc",
    "tensorflow.compat.v1.reduce_sum": "doc",
    "tensorflow.compat.v1.reverse_v2": "doc",
    "tensorflow.compat.v1.scalar_mul": "doc",
    "tensorflow.compat.v1.signal.dct": "doc",
    "tensorflow.compat.v1.signal.fft": "doc",
    "tensorflow.compat.v1.while_loop": "doc",
    "tensorflow.compat.v1.write_file": "doc",
    "tensorflow.autodiff.GradientTape": "doc",
    "tensorflow.config.PhysicalDevice": "doc",
    "tensorflow.debugging.assert_less": "doc",
    "tensorflow.debugging.assert_near": "doc",
    "tensorflow.debugging.assert_type": "doc",
    "tensorflow.distribute.RunOptions": "doc",
    "tensorflow.experimental.Optional": "doc",
    "tensorflow.experimental.tensorrt": "doc",
    "tensorflow.histogram_fixed_width": "doc",
    "tensorflow.image.adjust_contrast": "doc",
    "tensorflow.image.extract_glimpse": "doc",
    "tensorflow.image.extract_patches": "doc",
    "tensorflow.image.flip_left_right": "doc",
    "tensorflow.image.image_gradients": "doc",
    "tensorflow.image.random_contrast": "doc",
    "tensorflow.image.resize_with_pad": "doc",
    "tensorflow.image.ssim_multiscale": "doc",
    "tensorflow.image.total_variation": "doc",
    "tensorflow.initializers.Constant": "doc",
    "tensorflow.initializers.HeNormal": "doc",
    "tensorflow.initializers.Identity": "doc",
    "tensorflow.initializers.constant": "doc",
    "tensorflow.initializers.identity": "doc",
    "tensorflow.linalg.LinearOperator": "doc",
    "tensorflow.linalg.cholesky_solve": "doc",
    "tensorflow.linalg.lu_reconstruct": "doc",
    "tensorflow.math.confusion_matrix": "doc",
    "tensorflow.math.reduce_logsumexp": "doc",
    "tensorflow.nest.pack_sequence_as": "doc",
    "tensorflow.profiler.experimental": "doc",
    "tensorflow.quantization.quantize": "doc",
    "tensorflow.signal.hamming_window": "doc",
    "tensorflow.summary.SummaryWriter": "doc",
    "tensorflow.tensor_scatter_nd_max": "doc",
    "tensorflow.tensor_scatter_nd_min": "doc",
    "tensorflow.tensor_scatter_nd_sub": "doc",
    "tensorflow.test.benchmark_config": "doc",
    "tensorflow.test.compute_gradient": "doc",
    "tensorflow.test.is_gpu_available": "doc",
    "tensorflow.train.SequenceExample": "doc",
    "tensorflow.train.load_checkpoint": "doc",
    "tensorflow.compat.v1.ConfigProto": "doc",
    "tensorflow.compat.v1.RunMetadata": "doc",
    "tensorflow.compat.v1.TensorArray": "doc",
    "tensorflow.compat.v1.TensorShape": "doc",
    "tensorflow.compat.v1.assert_less": "doc",
    "tensorflow.compat.v1.assert_near": "doc",
    "tensorflow.compat.v1.assert_type": "doc",
    "tensorflow.compat.v1.count_up_to": "doc",
    "tensorflow.compat.v1.dtypes.cast": "doc",
    "tensorflow.compat.v1.fingerprint": "doc",
    "tensorflow.compat.v1.flags.Error": "doc",
    "tensorflow.compat.v1.flags.FLAGS": "doc",
    "tensorflow.compat.v1.gfile.GFile": "doc",
    "tensorflow.compat.v1.gfile.MkDir": "doc",
    "tensorflow.compat.v1.global_norm": "doc",
    "tensorflow.compat.v1.image.rot90": "doc",
    "tensorflow.compat.v1.linalg.diag": "doc",
    "tensorflow.compat.v1.linalg.eigh": "doc",
    "tensorflow.compat.v1.linalg.expm": "doc",
    "tensorflow.compat.v1.linalg.logm": "doc",
    "tensorflow.compat.v1.linalg.norm": "doc",
    "tensorflow.compat.v1.linalg.pinv": "doc",
    "tensorflow.compat.v1.lite.OpHint": "doc",
    "tensorflow.compat.v1.lite.OpsSet": "doc",
    "tensorflow.compat.v1.log_sigmoid": "doc",
    "tensorflow.compat.v1.logging.log": "doc",
    "tensorflow.compat.v1.logical_and": "doc",
    "tensorflow.compat.v1.logical_not": "doc",
    "tensorflow.compat.v1.logical_xor": "doc",
    "tensorflow.compat.v1.math.argmax": "doc",
    "tensorflow.compat.v1.math.argmin": "doc",
    "tensorflow.compat.v1.math.cumsum": "doc",
    "tensorflow.compat.v1.math.divide": "doc",
    "tensorflow.compat.v1.math.erfinv": "doc",
    "tensorflow.compat.v1.math.igamma": "doc",
    "tensorflow.compat.v1.math.is_inf": "doc",
    "tensorflow.compat.v1.math.is_nan": "doc",
    "tensorflow.compat.v1.math.lgamma": "doc",
    "tensorflow.compat.v1.math.square": "doc",
    "tensorflow.compat.v1.matrix_diag": "doc",
    "tensorflow.compat.v1.multinomial": "doc",
    "tensorflow.compat.v1.nn.avg_pool": "doc",
    "tensorflow.compat.v1.nn.bias_add": "doc",
    "tensorflow.compat.v1.nn.ctc_loss": "doc",
    "tensorflow.compat.v1.nn.in_top_k": "doc",
    "tensorflow.compat.v1.nn.max_pool": "doc",
    "tensorflow.compat.v1.nn.nce_loss": "doc",
    "tensorflow.compat.v1.nn.softplus": "doc",
    "tensorflow.compat.v1.nn.softsign": "doc",
    "tensorflow.compat.v1.placeholder": "doc",
    "tensorflow.compat.v1.py_function": "doc",
    "tensorflow.compat.v1.quantize_v2": "doc",
    "tensorflow.compat.v1.reduce_join": "doc",
    "tensorflow.compat.v1.reduce_mean": "doc",
    "tensorflow.compat.v1.reduce_prod": "doc",
    "tensorflow.compat.v1.scatter_div": "doc",
    "tensorflow.compat.v1.scatter_max": "doc",
    "tensorflow.compat.v1.scatter_min": "doc",
    "tensorflow.compat.v1.scatter_mul": "doc",
    "tensorflow.compat.v1.signal.idct": "doc",
    "tensorflow.compat.v1.signal.ifft": "doc",
    "tensorflow.compat.v1.signal.mdct": "doc",
    "tensorflow.compat.v1.signal.rfft": "doc",
    "tensorflow.compat.v1.signal.stft": "doc",
    "tensorflow.compat.v1.switch_case": "doc",
    "tensorflow.compat.v1.to_bfloat16": "doc",
    "tensorflow.compat.v1.tpu.rewrite": "doc",
    "tensorflow.compat.v1.train.Saver": "doc",
    "tensorflow.compat.v1.train.batch": "doc",
    "tensorflow.compat.v1.truncatediv": "doc",
    "tensorflow.Variable.SaveSliceInfo": "doc",
    "tensorflow.autograph.experimental": "doc",
    "tensorflow.broadcast_static_shape": "doc",
    "tensorflow.compat.dimension_value": "doc",
    "tensorflow.data.experimental.load": "doc",
    "tensorflow.data.experimental.save": "doc",
    "tensorflow.data.experimental.scan": "doc",
    "tensorflow.debugging.assert_equal": "doc",
    "tensorflow.debugging.experimental": "doc",
    "tensorflow.distribute.TPUStrategy": "doc",
    "tensorflow.experimental.numpy.abs": "doc",
    "tensorflow.experimental.numpy.add": "doc",
    "tensorflow.experimental.numpy.all": "doc",
    "tensorflow.experimental.numpy.any": "doc",
    "tensorflow.experimental.numpy.cos": "doc",
    "tensorflow.experimental.numpy.dot": "doc",
    "tensorflow.experimental.numpy.exp": "doc",
    "tensorflow.experimental.numpy.eye": "doc",
    "tensorflow.experimental.numpy.fix": "doc",
    "tensorflow.experimental.numpy.gcd": "doc",
    "tensorflow.experimental.numpy.ix_": "doc",
    "tensorflow.experimental.numpy.lcm": "doc",
    "tensorflow.experimental.numpy.log": "doc",
    "tensorflow.experimental.numpy.max": "doc",
    "tensorflow.experimental.numpy.min": "doc",
    "tensorflow.experimental.numpy.mod": "doc",
    "tensorflow.experimental.numpy.pad": "doc",
    "tensorflow.experimental.numpy.ptp": "doc",
    "tensorflow.experimental.numpy.sin": "doc",
    "tensorflow.experimental.numpy.std": "doc",
    "tensorflow.experimental.numpy.sum": "doc",
    "tensorflow.experimental.numpy.tan": "doc",
    "tensorflow.experimental.numpy.tri": "doc",
    "tensorflow.experimental.numpy.var": "doc",
    "tensorflow.image.grayscale_to_rgb": "doc",
    "tensorflow.image.rgb_to_grayscale": "doc",
    "tensorflow.initializers.HeUniform": "doc",
    "tensorflow.io.decode_json_example": "doc",
    "tensorflow.lookup.StaticHashTable": "doc",
    "tensorflow.math.is_non_decreasing": "doc",
    "tensorflow.math.reciprocal_no_nan": "doc",
    "tensorflow.math.special.bessel_i0": "doc",
    "tensorflow.math.special.bessel_i1": "doc",
    "tensorflow.math.special.bessel_j0": "doc",
    "tensorflow.math.special.bessel_j1": "doc",
    "tensorflow.math.special.bessel_k0": "doc",
    "tensorflow.math.special.bessel_k1": "doc",
    "tensorflow.math.special.bessel_y0": "doc",
    "tensorflow.math.special.bessel_y1": "doc",
    "tensorflow.nn.batch_normalization": "doc",
    "tensorflow.nn.fractional_avg_pool": "doc",
    "tensorflow.optimizers.deserialize": "doc",
    "tensorflow.queue.PaddingFIFOQueue": "doc",
    "tensorflow.signal.overlap_and_add": "doc",
    "tensorflow.test.is_built_with_xla": "doc",
    "tensorflow.compat.v1.GradientTape": "doc",
    "tensorflow.compat.v1.GraphOptions": "doc",
    "tensorflow.compat.v1.NameAttrList": "doc",
    "tensorflow.compat.v1.OptionalSpec": "doc",
    "tensorflow.compat.v1.RaggedTensor": "doc",
    "tensorflow.compat.v1.SparseTensor": "doc",
    "tensorflow.compat.v1.accumulate_n": "doc",
    "tensorflow.compat.v1.assert_equal": "doc",
    "tensorflow.compat.v1.batch_gather": "doc",
    "tensorflow.compat.v1.broadcast_to": "doc",
    "tensorflow.compat.v1.clip_by_norm": "doc",
    "tensorflow.compat.v1.data.Options": "doc",
    "tensorflow.compat.v1.dtypes.DType": "doc",
    "tensorflow.compat.v1.ensure_shape": "doc",
    "tensorflow.compat.v1.experimental": "doc",
    "tensorflow.compat.v1.flags.DEFINE": "doc",
    "tensorflow.compat.v1.gfile.Exists": "doc",
    "tensorflow.compat.v1.gfile.Remove": "doc",
    "tensorflow.compat.v1.image.resize": "doc",
    "tensorflow.compat.v1.initializers": "doc",
    "tensorflow.compat.v1.io.QueueBase": "doc",
    "tensorflow.compat.v1.layers.Layer": "doc",
    "tensorflow.compat.v1.linalg.cross": "doc",
    "tensorflow.compat.v1.linalg.lstsq": "doc",
    "tensorflow.compat.v1.linalg.solve": "doc",
    "tensorflow.compat.v1.linalg.sqrtm": "doc",
    "tensorflow.compat.v1.load_library": "doc",
    "tensorflow.compat.v1.logging.info": "doc",
    "tensorflow.compat.v1.logging.vlog": "doc",
    "tensorflow.compat.v1.logging.warn": "doc",
    "tensorflow.compat.v1.make_ndarray": "doc",
    "tensorflow.compat.v1.math.betainc": "doc",
    "tensorflow.compat.v1.math.cumprod": "doc",
    "tensorflow.compat.v1.math.digamma": "doc",
    "tensorflow.compat.v1.math.erfcinv": "doc",
    "tensorflow.compat.v1.math.greater": "doc",
    "tensorflow.compat.v1.math.igammac": "doc",
    "tensorflow.compat.v1.math.maximum": "doc",
    "tensorflow.compat.v1.math.minimum": "doc",
    "tensorflow.compat.v1.math.polyval": "doc",
    "tensorflow.compat.v1.math.sigmoid": "doc",
    "tensorflow.compat.v1.math.softmax": "doc",
    "tensorflow.compat.v1.math.special": "doc",
    "tensorflow.compat.v1.math.truediv": "doc",
    "tensorflow.compat.v1.math.xlog1py": "doc",
    "tensorflow.compat.v1.matrix_solve": "doc",
    "tensorflow.compat.v1.nest.flatten": "doc",
    "tensorflow.compat.v1.nn.xw_plus_b": "doc",
    "tensorflow.compat.v1.parse_tensor": "doc",
    "tensorflow.compat.v1.quantization": "doc",
    "tensorflow.compat.v1.signal.fft2d": "doc",
    "tensorflow.compat.v1.signal.fft3d": "doc",
    "tensorflow.compat.v1.signal.irfft": "doc",
    "tensorflow.compat.v1.sparse_slice": "doc",
    "tensorflow.compat.v1.sparse_split": "doc",
    "tensorflow.compat.v1.spectral.dct": "doc",
    "tensorflow.compat.v1.spectral.fft": "doc",
    "tensorflow.compat.v1.summary.text": "doc",
    "tensorflow.compat.v1.to_complex64": "doc",
    "tensorflow.compat.v1.train.JobDef": "doc",
    "tensorflow.compat.v1.train.Server": "doc",
    "tensorflow.VariableSynchronization": "doc",
    "tensorflow.debugging.assert_scalar": "doc",
    "tensorflow.debugging.assert_shapes": "doc",
    "tensorflow.distribute.InputContext": "doc",
    "tensorflow.distribute.InputOptions": "doc",
    "tensorflow.distribute.experimental": "doc",
    "tensorflow.distribute.has_strategy": "doc",
    "tensorflow.experimental.numpy.amax": "doc",
    "tensorflow.experimental.numpy.amin": "doc",
    "tensorflow.experimental.numpy.cbrt": "doc",
    "tensorflow.experimental.numpy.ceil": "doc",
    "tensorflow.experimental.numpy.clip": "doc",
    "tensorflow.experimental.numpy.conj": "doc",
    "tensorflow.experimental.numpy.copy": "doc",
    "tensorflow.experimental.numpy.cosh": "doc",
    "tensorflow.experimental.numpy.diag": "doc",
    "tensorflow.experimental.numpy.diff": "doc",
    "tensorflow.experimental.numpy.exp2": "doc",
    "tensorflow.experimental.numpy.fabs": "doc",
    "tensorflow.experimental.numpy.flip": "doc",
    "tensorflow.experimental.numpy.full": "doc",
    "tensorflow.experimental.numpy.imag": "doc",
    "tensorflow.experimental.numpy.int8": "doc",
    "tensorflow.experimental.numpy.int_": "doc",
    "tensorflow.experimental.numpy.kron": "doc",
    "tensorflow.experimental.numpy.less": "doc",
    "tensorflow.experimental.numpy.log2": "doc",
    "tensorflow.experimental.numpy.mean": "doc",
    "tensorflow.experimental.numpy.ndim": "doc",
    "tensorflow.experimental.numpy.ones": "doc",
    "tensorflow.experimental.numpy.prod": "doc",
    "tensorflow.experimental.numpy.real": "doc",
    "tensorflow.experimental.numpy.roll": "doc",
    "tensorflow.experimental.numpy.sign": "doc",
    "tensorflow.experimental.numpy.sinc": "doc",
    "tensorflow.experimental.numpy.sinh": "doc",
    "tensorflow.experimental.numpy.size": "doc",
    "tensorflow.experimental.numpy.sort": "doc",
    "tensorflow.experimental.numpy.sqrt": "doc",
    "tensorflow.experimental.numpy.take": "doc",
    "tensorflow.experimental.numpy.tanh": "doc",
    "tensorflow.experimental.numpy.tile": "doc",
    "tensorflow.experimental.numpy.tril": "doc",
    "tensorflow.experimental.numpy.triu": "doc",
    "tensorflow.experimental.numpy.vdot": "doc",
    "tensorflow.image.adjust_brightness": "doc",
    "tensorflow.image.adjust_saturation": "doc",
    "tensorflow.initializers.Orthogonal": "doc",
    "tensorflow.initializers.he_uniform": "doc",
    "tensorflow.initializers.orthogonal": "doc",
    "tensorflow.io.match_filenames_once": "doc",
    "tensorflow.io.parse_single_example": "doc",
    "tensorflow.linalg.tensor_diag_part": "doc",
    "tensorflow.linalg.triangular_solve": "doc",
    "tensorflow.losses.CategoricalHinge": "doc",
    "tensorflow.losses.CosineSimilarity": "doc",
    "tensorflow.losses.MeanSquaredError": "doc",
    "tensorflow.math.invert_permutation": "doc",
    "tensorflow.math.special.bessel_i0e": "doc",
    "tensorflow.math.special.bessel_i1e": "doc",
    "tensorflow.math.special.bessel_k0e": "doc",
    "tensorflow.math.special.bessel_k1e": "doc",
    "tensorflow.nn.RNNCellDeviceWrapper": "doc",
    "tensorflow.nn.compute_average_loss": "doc",
    "tensorflow.nn.max_pool_with_argmax": "doc",
    "tensorflow.nn.sampled_softmax_loss": "doc",
    "tensorflow.test.is_built_with_cuda": "doc",
    "tensorflow.test.is_built_with_rocm": "doc",
    "tensorflow.train.CheckpointManager": "doc",
    "tensorflow.train.CheckpointOptions": "doc",
    "tensorflow.train.JobDef.TasksEntry": "doc",
    "tensorflow.train.latest_checkpoint": "doc",
    "tensorflow.compat.v1.IndexedSlices": "doc",
    "tensorflow.compat.v1.PriorityQueue": "doc",
    "tensorflow.compat.v1.SparseFeature": "doc",
    "tensorflow.compat.v1.Summary.Audio": "doc",
    "tensorflow.compat.v1.Summary.Image": "doc",
    "tensorflow.compat.v1.Summary.Value": "doc",
    "tensorflow.compat.v1.VarLenFeature": "doc",
    "tensorflow.compat.v1.VariableScope": "doc",
    "tensorflow.compat.v1.all_variables": "doc",
    "tensorflow.compat.v1.assert_scalar": "doc",
    "tensorflow.compat.v1.clip_by_value": "doc",
    "tensorflow.compat.v1.colocate_with": "doc",
    "tensorflow.compat.v1.compat.as_str": "doc",
    "tensorflow.compat.v1.count_nonzero": "doc",
    "tensorflow.compat.v1.decode_base64": "doc",
    "tensorflow.compat.v1.distributions": "doc",
    "tensorflow.compat.v1.edit_distance": "doc",
    "tensorflow.compat.v1.encode_base64": "doc",
    "tensorflow.compat.v1.greater_equal": "doc",
    "tensorflow.compat.v1.image.is_jpeg": "doc",
    "tensorflow.compat.v1.io.decode_bmp": "doc",
    "tensorflow.compat.v1.io.decode_csv": "doc",
    "tensorflow.compat.v1.io.decode_gif": "doc",
    "tensorflow.compat.v1.io.decode_png": "doc",
    "tensorflow.compat.v1.io.decode_raw": "doc",
    "tensorflow.compat.v1.io.encode_png": "doc",
    "tensorflow.compat.v1.io.gfile.copy": "doc",
    "tensorflow.compat.v1.io.gfile.glob": "doc",
    "tensorflow.compat.v1.io.gfile.stat": "doc",
    "tensorflow.compat.v1.io.gfile.walk": "doc",
    "tensorflow.compat.v1.io.write_file": "doc",
    "tensorflow.compat.v1.layers.Conv1D": "doc",
    "tensorflow.compat.v1.layers.Conv2D": "doc",
    "tensorflow.compat.v1.layers.Conv3D": "doc",
    "tensorflow.compat.v1.layers.conv1d": "doc",
    "tensorflow.compat.v1.layers.conv2d": "doc",
    "tensorflow.compat.v1.layers.conv3d": "doc",
    "tensorflow.compat.v1.linalg.einsum": "doc",
    "tensorflow.compat.v1.linalg.logdet": "doc",
    "tensorflow.compat.v1.linalg.matmul": "doc",
    "tensorflow.compat.v1.linalg.matvec": "doc",
    "tensorflow.compat.v1.lite.Optimize": "doc",
    "tensorflow.compat.v1.logging.debug": "doc",
    "tensorflow.compat.v1.logging.error": "doc",
    "tensorflow.compat.v1.logging.fatal": "doc",
    "tensorflow.compat.v1.logging.flush": "doc",
    "tensorflow.compat.v1.make_template": "doc",
    "tensorflow.compat.v1.manip.reshape": "doc",
    "tensorflow.compat.v1.math.bincount": "doc",
    "tensorflow.compat.v1.math.floordiv": "doc",
    "tensorflow.compat.v1.math.floormod": "doc",
    "tensorflow.compat.v1.math.in_top_k": "doc",
    "tensorflow.compat.v1.math.multiply": "doc",
    "tensorflow.compat.v1.math.negative": "doc",
    "tensorflow.compat.v1.math.softplus": "doc",
    "tensorflow.compat.v1.math.softsign": "doc",
    "tensorflow.compat.v1.math.subtract": "doc",
    "tensorflow.compat.v1.nn.avg_pool1d": "doc",
    "tensorflow.compat.v1.nn.avg_pool2d": "doc",
    "tensorflow.compat.v1.nn.avg_pool3d": "doc",
    "tensorflow.compat.v1.nn.dilation2d": "doc",
    "tensorflow.compat.v1.nn.max_pool1d": "doc",
    "tensorflow.compat.v1.nn.max_pool2d": "doc",
    "tensorflow.compat.v1.nn.max_pool3d": "doc",
    "tensorflow.compat.v1.nn.relu_layer": "doc",
    "tensorflow.compat.v1.parse_example": "doc",
    "tensorflow.compat.v1.regex_replace": "doc",
    "tensorflow.compat.v1.signal.ifft2d": "doc",
    "tensorflow.compat.v1.signal.ifft3d": "doc",
    "tensorflow.compat.v1.signal.rfft2d": "doc",
    "tensorflow.compat.v1.signal.rfft3d": "doc",
    "tensorflow.compat.v1.sparse_concat": "doc",
    "tensorflow.compat.v1.sparse_matmul": "doc",
    "tensorflow.compat.v1.sparse_retain": "doc",
    "tensorflow.compat.v1.spectral.idct": "doc",
    "tensorflow.compat.v1.spectral.ifft": "doc",
    "tensorflow.compat.v1.spectral.rfft": "doc",
    "tensorflow.compat.v1.summary.Event": "doc",
    "tensorflow.compat.v1.summary.audio": "doc",
    "tensorflow.compat.v1.summary.image": "doc",
    "tensorflow.compat.v1.summary.merge": "doc",
    "tensorflow.compat.v1.to_complex128": "doc",
    "tensorflow.compat.v1.tpu.replicate": "doc",
    "tensorflow.compat.v1.train.Example": "doc",
    "tensorflow.compat.v1.train.Feature": "doc",
    "tensorflow.compat.v1.unravel_index": "doc",
    "tensorflow.compat.v1.wrap_function": "doc",
    "tensorflow.config.optimizer.get_jit": "doc",
    "tensorflow.data.experimental.unique": "doc",
    "tensorflow.debugging.assert_greater": "doc",
    "tensorflow.debugging.assert_integer": "doc",
    "tensorflow.debugging.check_numerics": "doc",
    "tensorflow.distribute.NcclAllReduce": "doc",
    "tensorflow.experimental.async_scope": "doc",
    "tensorflow.experimental.numpy.angle": "doc",
    "tensorflow.experimental.numpy.array": "doc",
    "tensorflow.experimental.numpy.bool_": "doc",
    "tensorflow.experimental.numpy.cross": "doc",
    "tensorflow.experimental.numpy.empty": "doc",
    "tensorflow.experimental.numpy.equal": "doc",
    "tensorflow.experimental.numpy.expm1": "doc",
    "tensorflow.experimental.numpy.finfo": "doc",
    "tensorflow.experimental.numpy.floor": "doc",
    "tensorflow.experimental.numpy.hypot": "doc",
    "tensorflow.experimental.numpy.iinfo": "doc",
    "tensorflow.experimental.numpy.inner": "doc",
    "tensorflow.experimental.numpy.int16": "doc",
    "tensorflow.experimental.numpy.int32": "doc",
    "tensorflow.experimental.numpy.int64": "doc",
    "tensorflow.experimental.numpy.isinf": "doc",
    "tensorflow.experimental.numpy.isnan": "doc",
    "tensorflow.experimental.numpy.log10": "doc",
    "tensorflow.experimental.numpy.log1p": "doc",
    "tensorflow.experimental.numpy.outer": "doc",
    "tensorflow.experimental.numpy.power": "doc",
    "tensorflow.experimental.numpy.ravel": "doc",
    "tensorflow.experimental.numpy.rot90": "doc",
    "tensorflow.experimental.numpy.round": "doc",
    "tensorflow.experimental.numpy.shape": "doc",
    "tensorflow.experimental.numpy.split": "doc",
    "tensorflow.experimental.numpy.stack": "doc",
    "tensorflow.experimental.numpy.uint8": "doc",
    "tensorflow.experimental.numpy.where": "doc",
    "tensorflow.initializers.Initializer": "doc",
    "tensorflow.initializers.LecunNormal": "doc",
    "tensorflow.initializers.deserialize": "doc",
    "tensorflow.linalg.lu_matrix_inverse": "doc",
    "tensorflow.linalg.tridiagonal_solve": "doc",
    "tensorflow.losses.MeanAbsoluteError": "doc",
    "tensorflow.losses.categorical_hinge": "doc",
    "tensorflow.losses.cosine_similarity": "doc",
    "tensorflow.math.special.fresnel_cos": "doc",
    "tensorflow.nn.RNNCellDropoutWrapper": "doc",
    "tensorflow.nn.sufficient_statistics": "doc",
    "tensorflow.queue.RandomShuffleQueue": "doc",
    "tensorflow.xla.experimental.compile": "doc",
    "tensorflow.compat.v1.HistogramProto": "doc",
    "tensorflow.compat.v1.IdentityReader": "doc",
    "tensorflow.compat.v1.TFRecordReader": "doc",
    "tensorflow.compat.v1.TextLineReader": "doc",
    "tensorflow.compat.v1.app.flags.Flag": "doc",
    "tensorflow.compat.v1.assert_greater": "doc",
    "tensorflow.compat.v1.assert_integer": "doc",
    "tensorflow.compat.v1.batch_to_space": "doc",
    "tensorflow.compat.v1.bitwise.invert": "doc",
    "tensorflow.compat.v1.check_numerics": "doc",
    "tensorflow.compat.v1.cholesky_solve": "doc",
    "tensorflow.compat.v1.compat.as_text": "doc",
    "tensorflow.compat.v1.depth_to_space": "doc",
    "tensorflow.compat.v1.dtypes.complex": "doc",
    "tensorflow.compat.v1.dynamic_stitch": "doc",
    "tensorflow.compat.v1.feature_column": "doc",
    "tensorflow.compat.v1.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.get_collection": "doc",
    "tensorflow.compat.v1.gfile.MakeDirs": "doc",
    "tensorflow.compat.v1.io.gfile.GFile": "doc",
    "tensorflow.compat.v1.io.gfile.isdir": "doc",
    "tensorflow.compat.v1.io.gfile.mkdir": "doc",
    "tensorflow.compat.v1.io.write_graph": "doc",
    "tensorflow.compat.v1.layers.Dropout": "doc",
    "tensorflow.compat.v1.layers.Flatten": "doc",
    "tensorflow.compat.v1.layers.dropout": "doc",
    "tensorflow.compat.v1.layers.flatten": "doc",
    "tensorflow.compat.v1.linalg.adjoint": "doc",
    "tensorflow.compat.v1.linalg.slogdet": "doc",
    "tensorflow.compat.v1.lite.constants": "doc",
    "tensorflow.compat.v1.logging.log_if": "doc",
    "tensorflow.compat.v1.matching_files": "doc",
    "tensorflow.compat.v1.math.bessel_i0": "doc",
    "tensorflow.compat.v1.math.bessel_i1": "doc",
    "tensorflow.compat.v1.math.is_finite": "doc",
    "tensorflow.compat.v1.math.nextafter": "doc",
    "tensorflow.compat.v1.math.not_equal": "doc",
    "tensorflow.compat.v1.math.polygamma": "doc",
    "tensorflow.compat.v1.matrix_inverse": "doc",
    "tensorflow.compat.v1.nn.avg_pool_v2": "doc",
    "tensorflow.compat.v1.nn.convolution": "doc",
    "tensorflow.compat.v1.nn.ctc_loss_v2": "doc",
    "tensorflow.compat.v1.nn.dynamic_rnn": "doc",
    "tensorflow.compat.v1.nn.log_softmax": "doc",
    "tensorflow.compat.v1.nn.max_pool_v2": "doc",
    "tensorflow.compat.v1.no_regularizer": "doc",
    "tensorflow.compat.v1.numpy_function": "doc",
    "tensorflow.compat.v1.parallel_stack": "doc",
    "tensorflow.compat.v1.recompute_grad": "doc",
    "tensorflow.compat.v1.scatter_update": "doc",
    "tensorflow.compat.v1.signal.irfft2d": "doc",
    "tensorflow.compat.v1.signal.irfft3d": "doc",
    "tensorflow.compat.v1.space_to_batch": "doc",
    "tensorflow.compat.v1.space_to_depth": "doc",
    "tensorflow.compat.v1.sparse_maximum": "doc",
    "tensorflow.compat.v1.sparse_minimum": "doc",
    "tensorflow.compat.v1.sparse_reorder": "doc",
    "tensorflow.compat.v1.sparse_reshape": "doc",
    "tensorflow.compat.v1.sparse_softmax": "doc",
    "tensorflow.compat.v1.spectral.fft2d": "doc",
    "tensorflow.compat.v1.spectral.fft3d": "doc",
    "tensorflow.compat.v1.spectral.irfft": "doc",
    "tensorflow.compat.v1.summary.scalar": "doc",
    "tensorflow.compat.v1.test.Benchmark": "doc",
    "tensorflow.compat.v1.tpu.XLAOptions": "doc",
    "tensorflow.compat.v1.train.Features": "doc",
    "tensorflow.compat.v1.train.SaverDef": "doc",
    "tensorflow.compat.v1.train.Scaffold": "doc",
    "tensorflow.compat.v1.variable_scope": "doc",
    "tensorflow.compat.v1.vectorized_map": "doc",
    "tensorflow.compat.forward_compatible": "doc",
    "tensorflow.data.experimental.Counter": "doc",
    "tensorflow.data.experimental.Reducer": "doc",
    "tensorflow.data.experimental.unbatch": "doc",
    "tensorflow.debugging.assert_negative": "doc",
    "tensorflow.debugging.assert_positive": "doc",
    "tensorflow.distribute.CrossDeviceOps": "doc",
    "tensorflow.distribute.ReplicaContext": "doc",
    "tensorflow.experimental.numpy.append": "doc",
    "tensorflow.experimental.numpy.arccos": "doc",
    "tensorflow.experimental.numpy.arcsin": "doc",
    "tensorflow.experimental.numpy.arctan": "doc",
    "tensorflow.experimental.numpy.argmax": "doc",
    "tensorflow.experimental.numpy.argmin": "doc",
    "tensorflow.experimental.numpy.around": "doc",
    "tensorflow.experimental.numpy.cumsum": "doc",
    "tensorflow.experimental.numpy.divide": "doc",
    "tensorflow.experimental.numpy.divmod": "doc",
    "tensorflow.experimental.numpy.dsplit": "doc",
    "tensorflow.experimental.numpy.dstack": "doc",
    "tensorflow.experimental.numpy.einsum": "doc",
    "tensorflow.experimental.numpy.fliplr": "doc",
    "tensorflow.experimental.numpy.flipud": "doc",
    "tensorflow.experimental.numpy.float_": "doc",
    "tensorflow.experimental.numpy.hsplit": "doc",
    "tensorflow.experimental.numpy.hstack": "doc",
    "tensorflow.experimental.numpy.isreal": "doc",
    "tensorflow.experimental.numpy.matmul": "doc",
    "tensorflow.experimental.numpy.nansum": "doc",
    "tensorflow.experimental.numpy.repeat": "doc",
    "tensorflow.experimental.numpy.select": "doc",
    "tensorflow.experimental.numpy.square": "doc",
    "tensorflow.experimental.numpy.uint16": "doc",
    "tensorflow.experimental.numpy.uint32": "doc",
    "tensorflow.experimental.numpy.uint64": "doc",
    "tensorflow.experimental.numpy.vsplit": "doc",
    "tensorflow.experimental.numpy.vstack": "doc",
    "tensorflow.image.adjust_jpeg_quality": "doc",
    "tensorflow.image.non_max_suppression": "doc",
    "tensorflow.initializers.GlorotNormal": "doc",
    "tensorflow.initializers.LecunUniform": "doc",
    "tensorflow.initializers.lecun_normal": "doc",
    "tensorflow.io.parse_sequence_example": "doc",
    "tensorflow.linalg.LinearOperatorDiag": "doc",
    "tensorflow.linalg.tridiagonal_matmul": "doc",
    "tensorflow.losses.BinaryCrossentropy": "doc",
    "tensorflow.losses.mean_squared_error": "doc",
    "tensorflow.math.cumulative_logsumexp": "doc",
    "tensorflow.math.unsorted_segment_max": "doc",
    "tensorflow.math.unsorted_segment_min": "doc",
    "tensorflow.math.unsorted_segment_sum": "doc",
    "tensorflow.nn.RNNCellResidualWrapper": "doc",
    "tensorflow.random_normal_initializer": "doc",
    "tensorflow.tpu.experimental.Topology": "doc",
    "tensorflow.compat.v1.CriticalSection": "doc",
    "tensorflow.compat.v1.FixedLenFeature": "doc",
    "tensorflow.compat.v1.SummaryMetadata": "doc",
    "tensorflow.compat.v1.TensorArraySpec": "doc",
    "tensorflow.compat.v1.WholeFileReader": "doc",
    "tensorflow.compat.v1.app.flags.Error": "doc",
    "tensorflow.compat.v1.app.flags.FLAGS": "doc",
    "tensorflow.compat.v1.assert_negative": "doc",
    "tensorflow.compat.v1.assert_positive": "doc",
    "tensorflow.compat.v1.compat.as_bytes": "doc",
    "tensorflow.compat.v1.custom_gradient": "doc",
    "tensorflow.compat.v1.dimension_value": "doc",
    "tensorflow.compat.v1.dtypes.as_dtype": "doc",
    "tensorflow.compat.v1.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.flags.text_wrap": "doc",
    "tensorflow.compat.v1.flags.validator": "doc",
    "tensorflow.compat.v1.gfile.FastGFile": "doc",
    "tensorflow.compat.v1.guarantee_const": "doc",
    "tensorflow.compat.v1.io.decode_image": "doc",
    "tensorflow.compat.v1.io.decode_proto": "doc",
    "tensorflow.compat.v1.io.encode_proto": "doc",
    "tensorflow.compat.v1.io.gfile.exists": "doc",
    "tensorflow.compat.v1.io.gfile.remove": "doc",
    "tensorflow.compat.v1.io.parse_tensor": "doc",
    "tensorflow.compat.v1.linalg.cholesky": "doc",
    "tensorflow.compat.v1.linalg.eigvalsh": "doc",
    "tensorflow.compat.v1.linalg.lu_solve": "doc",
    "tensorflow.compat.v1.lite.TargetSpec": "doc",
    "tensorflow.compat.v1.load_op_library": "doc",
    "tensorflow.compat.v1.local_variables": "doc",
    "tensorflow.compat.v1.logging.warning": "doc",
    "tensorflow.compat.v1.losses.add_loss": "doc",
    "tensorflow.compat.v1.losses.log_loss": "doc",
    "tensorflow.compat.v1.manip.gather_nd": "doc",
    "tensorflow.compat.v1.math.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.less_equal": "doc",
    "tensorflow.compat.v1.math.logical_or": "doc",
    "tensorflow.compat.v1.math.reciprocal": "doc",
    "tensorflow.compat.v1.math.reduce_all": "doc",
    "tensorflow.compat.v1.math.reduce_any": "doc",
    "tensorflow.compat.v1.math.reduce_max": "doc",
    "tensorflow.compat.v1.math.reduce_min": "doc",
    "tensorflow.compat.v1.math.reduce_sum": "doc",
    "tensorflow.compat.v1.math.scalar_mul": "doc",
    "tensorflow.compat.v1.matrix_set_diag": "doc",
    "tensorflow.compat.v1.matrix_solve_ls": "doc",
    "tensorflow.compat.v1.mixed_precision": "doc",
    "tensorflow.compat.v1.model_variables": "doc",
    "tensorflow.compat.v1.nn.l2_normalize": "doc",
    "tensorflow.compat.v1.queue.FIFOQueue": "doc",
    "tensorflow.compat.v1.queue.QueueBase": "doc",
    "tensorflow.compat.v1.resource_loader": "doc",
    "tensorflow.compat.v1.signal.fftshift": "doc",
    "tensorflow.compat.v1.sparse_to_dense": "doc",
    "tensorflow.compat.v1.spectral.ifft2d": "doc",
    "tensorflow.compat.v1.spectral.ifft3d": "doc",
    "tensorflow.compat.v1.spectral.rfft2d": "doc",
    "tensorflow.compat.v1.spectral.rfft3d": "doc",
    "tensorflow.compat.v1.summary.Summary": "doc",
    "tensorflow.compat.v1.tpu.PaddingSpec": "doc",
    "tensorflow.compat.v1.train.BytesList": "doc",
    "tensorflow.compat.v1.train.FloatList": "doc",
    "tensorflow.compat.v1.train.Int64List": "doc",
    "tensorflow.compat.v1.train.Optimizer": "doc",
    "tensorflow.compat.v1.train.ServerDef": "doc",
    "tensorflow.compat.v1.train.VocabInfo": "doc",
    "tensorflow.data.experimental.Optional": "doc",
    "tensorflow.data.experimental.snapshot": "doc",
    "tensorflow.experimental.numpy.arccosh": "doc",
    "tensorflow.experimental.numpy.arcsinh": "doc",
    "tensorflow.experimental.numpy.arctan2": "doc",
    "tensorflow.experimental.numpy.arctanh": "doc",
    "tensorflow.experimental.numpy.argsort": "doc",
    "tensorflow.experimental.numpy.asarray": "doc",
    "tensorflow.experimental.numpy.average": "doc",
    "tensorflow.experimental.numpy.cumprod": "doc",
    "tensorflow.experimental.numpy.float16": "doc",
    "tensorflow.experimental.numpy.float32": "doc",
    "tensorflow.experimental.numpy.float64": "doc",
    "tensorflow.experimental.numpy.greater": "doc",
    "tensorflow.experimental.numpy.inexact": "doc",
    "tensorflow.experimental.numpy.isclose": "doc",
    "tensorflow.experimental.numpy.maximum": "doc",
    "tensorflow.experimental.numpy.minimum": "doc",
    "tensorflow.experimental.numpy.nanprod": "doc",
    "tensorflow.experimental.numpy.ndarray": "doc",
    "tensorflow.experimental.numpy.nonzero": "doc",
    "tensorflow.experimental.numpy.object_": "doc",
    "tensorflow.experimental.numpy.polyval": "doc",
    "tensorflow.experimental.numpy.reshape": "doc",
    "tensorflow.experimental.numpy.signbit": "doc",
    "tensorflow.experimental.numpy.squeeze": "doc",
    "tensorflow.histogram_fixed_width_bins": "doc",
    "tensorflow.image.crop_to_bounding_box": "doc",
    "tensorflow.initializers.GlorotUniform": "doc",
    "tensorflow.initializers.RandomUniform": "doc",
    "tensorflow.initializers.glorot_normal": "doc",
    "tensorflow.initializers.lecun_uniform": "doc",
    "tensorflow.io.FixedLenSequenceFeature": "doc",
    "tensorflow.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.linalg.LinearOperatorZeros": "doc",
    "tensorflow.lite.RepresentativeDataset": "doc",
    "tensorflow.losses.binary_crossentropy": "doc",
    "tensorflow.math.reduce_euclidean_norm": "doc",
    "tensorflow.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.nn.compute_accidental_hits": "doc",
    "tensorflow.nn.embedding_lookup_sparse": "doc",
    "tensorflow.profiler.experimental.stop": "doc",
    "tensorflow.quantize_and_dequantize_v4": "doc",
    "tensorflow.random_uniform_initializer": "doc",
    "tensorflow.tpu.experimental.embedding": "doc",
    "tensorflow.train.checkpoints_iterator": "doc",
    "tensorflow.compat.v1.OptimizerOptions": "doc",
    "tensorflow.compat.v1.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.RaggedTensorSpec": "doc",
    "tensorflow.compat.v1.RegisterGradient": "doc",
    "tensorflow.compat.v1.SparseTensorSpec": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE": "doc",
    "tensorflow.compat.v1.audio.decode_wav": "doc",
    "tensorflow.compat.v1.audio.encode_wav": "doc",
    "tensorflow.compat.v1.config.optimizer": "doc",
    "tensorflow.compat.v1.config.threading": "doc",
    "tensorflow.compat.v1.confusion_matrix": "doc",
    "tensorflow.compat.v1.data.DatasetSpec": "doc",
    "tensorflow.compat.v1.debugging.Assert": "doc",
    "tensorflow.compat.v1.debugging.is_inf": "doc",
    "tensorflow.compat.v1.debugging.is_nan": "doc",
    "tensorflow.compat.v1.dtypes.as_string": "doc",
    "tensorflow.compat.v1.flags.EnumParser": "doc",
    "tensorflow.compat.v1.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.flags.FlagValues": "doc",
    "tensorflow.compat.v1.flags.ListParser": "doc",
    "tensorflow.compat.v1.global_variables": "doc",
    "tensorflow.compat.v1.image.adjust_hue": "doc",
    "tensorflow.compat.v1.image.decode_bmp": "doc",
    "tensorflow.compat.v1.image.decode_gif": "doc",
    "tensorflow.compat.v1.image.decode_png": "doc",
    "tensorflow.compat.v1.image.encode_png": "doc",
    "tensorflow.compat.v1.image.hsv_to_rgb": "doc",
    "tensorflow.compat.v1.image.rgb_to_hsv": "doc",
    "tensorflow.compat.v1.image.rgb_to_yiq": "doc",
    "tensorflow.compat.v1.image.rgb_to_yuv": "doc",
    "tensorflow.compat.v1.image.yiq_to_rgb": "doc",
    "tensorflow.compat.v1.image.yuv_to_rgb": "doc",
    "tensorflow.compat.v1.import_graph_def": "doc",
    "tensorflow.compat.v1.io.PriorityQueue": "doc",
    "tensorflow.compat.v1.io.RaggedFeature": "doc",
    "tensorflow.compat.v1.io.SparseFeature": "doc",
    "tensorflow.compat.v1.io.VarLenFeature": "doc",
    "tensorflow.compat.v1.io.decode_base64": "doc",
    "tensorflow.compat.v1.io.encode_base64": "doc",
    "tensorflow.compat.v1.io.gfile.listdir": "doc",
    "tensorflow.compat.v1.io.parse_example": "doc",
    "tensorflow.compat.v1.layers.InputSpec": "doc",
    "tensorflow.compat.v1.linalg.diag_part": "doc",
    "tensorflow.compat.v1.linalg.normalize": "doc",
    "tensorflow.compat.v1.linalg.tensordot": "doc",
    "tensorflow.compat.v1.lite.Interpreter": "doc",
    "tensorflow.compat.v1.losses.Reduction": "doc",
    "tensorflow.compat.v1.math.log_sigmoid": "doc",
    "tensorflow.compat.v1.math.log_softmax": "doc",
    "tensorflow.compat.v1.math.logical_and": "doc",
    "tensorflow.compat.v1.math.logical_not": "doc",
    "tensorflow.compat.v1.math.logical_xor": "doc",
    "tensorflow.compat.v1.math.reduce_mean": "doc",
    "tensorflow.compat.v1.math.reduce_prod": "doc",
    "tensorflow.compat.v1.matrix_diag_part": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d": "doc",
    "tensorflow.compat.v1.nn.zero_fraction": "doc",
    "tensorflow.compat.v1.ones_initializer": "doc",
    "tensorflow.compat.v1.profiler.profile": "doc",
    "tensorflow.compat.v1.quantized_concat": "doc",
    "tensorflow.compat.v1.reduce_logsumexp": "doc",
    "tensorflow.compat.v1.reverse_sequence": "doc",
    "tensorflow.compat.v1.signal.ifftshift": "doc",
    "tensorflow.compat.v1.spectral.irfft2d": "doc",
    "tensorflow.compat.v1.spectral.irfft3d": "doc",
    "tensorflow.compat.v1.tpu.experimental": "doc",
    "tensorflow.compat.v1.train.Checkpoint": "doc",
    "tensorflow.compat.v1.train.ClusterDef": "doc",
    "tensorflow.compat.v1.train.FeedFnHook": "doc",
    "tensorflow.compat.v1.train.Supervisor": "doc",
    "tensorflow.compat.v1.train.batch_join": "doc",
    "tensorflow.compat.v1.train.warm_start": "doc",
    "tensorflow.compat.v1.truncated_normal": "doc",
    "tensorflow.compat.v1.xla.experimental": "doc",
    "tensorflow.autodiff.ForwardAccumulator": "doc",
    "tensorflow.debugging.assert_less_equal": "doc",
    "tensorflow.debugging.is_numeric_tensor": "doc",
    "tensorflow.distribute.MirroredStrategy": "doc",
    "tensorflow.distribute.cluster_resolver": "doc",
    "tensorflow.experimental.numpy.absolute": "doc",
    "tensorflow.experimental.numpy.allclose": "doc",
    "tensorflow.experimental.numpy.complex_": "doc",
    "tensorflow.experimental.numpy.compress": "doc",
    "tensorflow.experimental.numpy.diagflat": "doc",
    "tensorflow.experimental.numpy.diagonal": "doc",
    "tensorflow.experimental.numpy.identity": "doc",
    "tensorflow.experimental.numpy.isfinite": "doc",
    "tensorflow.experimental.numpy.isneginf": "doc",
    "tensorflow.experimental.numpy.isposinf": "doc",
    "tensorflow.experimental.numpy.isscalar": "doc",
    "tensorflow.experimental.numpy.linspace": "doc",
    "tensorflow.experimental.numpy.logspace": "doc",
    "tensorflow.experimental.numpy.meshgrid": "doc",
    "tensorflow.experimental.numpy.moveaxis": "doc",
    "tensorflow.experimental.numpy.multiply": "doc",
    "tensorflow.experimental.numpy.negative": "doc",
    "tensorflow.experimental.numpy.positive": "doc",
    "tensorflow.experimental.numpy.subtract": "doc",
    "tensorflow.experimental.numpy.swapaxes": "doc",
    "tensorflow.experimental.numpy.unicode_": "doc",
    "tensorflow.graph_util.import_graph_def": "doc",
    "tensorflow.initializers.glorot_uniform": "doc",
    "tensorflow.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.profiler.experimental.Trace": "doc",
    "tensorflow.profiler.experimental.start": "doc",
    "tensorflow.train.Features.FeatureEntry": "doc",
    "tensorflow.compat.v1.AggregationMethod": "doc",
    "tensorflow.compat.v1.IndexedSlicesSpec": "doc",
    "tensorflow.compat.v1.NodeDef.AttrEntry": "doc",
    "tensorflow.compat.v1.NotDifferentiable": "doc",
    "tensorflow.compat.v1.SparseTensorValue": "doc",
    "tensorflow.compat.v1.add_to_collection": "doc",
    "tensorflow.compat.v1.assert_less_equal": "doc",
    "tensorflow.compat.v1.compat.as_str_any": "doc",
    "tensorflow.compat.v1.convert_to_tensor": "doc",
    "tensorflow.compat.v1.data.experimental": "doc",
    "tensorflow.compat.v1.distribute.Server": "doc",
    "tensorflow.compat.v1.dynamic_partition": "doc",
    "tensorflow.compat.v1.executing_eagerly": "doc",
    "tensorflow.compat.v1.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.flags.FloatParser": "doc",
    "tensorflow.compat.v1.gfile.IsDirectory": "doc",
    "tensorflow.compat.v1.grad_pass_through": "doc",
    "tensorflow.compat.v1.image.resize_area": "doc",
    "tensorflow.compat.v1.image.sobel_edges": "doc",
    "tensorflow.compat.v1.initializers.ones": "doc",
    "tensorflow.compat.v1.io.TFRecordWriter": "doc",
    "tensorflow.compat.v1.io.gfile.makedirs": "doc",
    "tensorflow.compat.v1.io.matching_files": "doc",
    "tensorflow.compat.v1.is_non_decreasing": "doc",
    "tensorflow.compat.v1.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.lite.experimental": "doc",
    "tensorflow.compat.v1.lite.toco_convert": "doc",
    "tensorflow.compat.v1.losses.hinge_loss": "doc",
    "tensorflow.compat.v1.losses.huber_loss": "doc",
    "tensorflow.compat.v1.math.accumulate_n": "doc",
    "tensorflow.compat.v1.math.l2_normalize": "doc",
    "tensorflow.compat.v1.math.sobol_sample": "doc",
    "tensorflow.compat.v1.mlir.experimental": "doc",
    "tensorflow.compat.v1.nn.depth_to_space": "doc",
    "tensorflow.compat.v1.nn.space_to_batch": "doc",
    "tensorflow.compat.v1.nn.space_to_depth": "doc",
    "tensorflow.compat.v1.profiler.Profiler": "doc",
    "tensorflow.compat.v1.sparse_reduce_max": "doc",
    "tensorflow.compat.v1.summary.histogram": "doc",
    "tensorflow.compat.v1.summary.merge_all": "doc",
    "tensorflow.compat.v1.sysconfig.get_lib": "doc",
    "tensorflow.compat.v1.train.ClusterSpec": "doc",
    "tensorflow.compat.v1.train.Coordinator": "doc",
    "tensorflow.compat.v1.train.FeatureList": "doc",
    "tensorflow.compat.v1.train.QueueRunner": "doc",
    "tensorflow.compat.v1.train.maybe_batch": "doc",
    "tensorflow.compat.v1.train.sdca_fprint": "doc",
    "tensorflow.compat.v1.train.write_graph": "doc",
    "tensorflow.compat.v1.variable_op_scope": "doc",
    "tensorflow.compat.v1.zeros_initializer": "doc",
    "tensorflow.config.functions_run_eagerly": "doc",
    "tensorflow.data.experimental.CsvDataset": "doc",
    "tensorflow.data.experimental.SqlDataset": "doc",
    "tensorflow.data.experimental.take_while": "doc",
    "tensorflow.data.experimental.to_variant": "doc",
    "tensorflow.distribute.DistributedValues": "doc",
    "tensorflow.distribute.OneDeviceStrategy": "doc",
    "tensorflow.experimental.numpy.complex64": "doc",
    "tensorflow.experimental.numpy.conjugate": "doc",
    "tensorflow.experimental.numpy.full_like": "doc",
    "tensorflow.experimental.numpy.geomspace": "doc",
    "tensorflow.experimental.numpy.iscomplex": "doc",
    "tensorflow.experimental.numpy.isrealobj": "doc",
    "tensorflow.experimental.numpy.logaddexp": "doc",
    "tensorflow.experimental.numpy.nextafter": "doc",
    "tensorflow.experimental.numpy.not_equal": "doc",
    "tensorflow.experimental.numpy.ones_like": "doc",
    "tensorflow.experimental.numpy.tensordot": "doc",
    "tensorflow.image.random_flip_left_right": "doc",
    "tensorflow.initializers.TruncatedNormal": "doc",
    "tensorflow.initializers.VarianceScaling": "doc",
    "tensorflow.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.lookup.StaticVocabularyTable": "doc",
    "tensorflow.mixed_precision.experimental": "doc",
    "tensorflow.profiler.experimental.client": "doc",
    "tensorflow.train.experimental.LossScale": "doc",
    "tensorflow.compat.v1.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.add_to_collections": "doc",
    "tensorflow.compat.v1.app.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.autograph.to_graph": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_or": "doc",
    "tensorflow.compat.v1.bitwise.left_shift": "doc",
    "tensorflow.compat.v1.distributions.Beta": "doc",
    "tensorflow.compat.v1.enable_v2_behavior": "doc",
    "tensorflow.compat.v1.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.flags.tf_decorator": "doc",
    "tensorflow.compat.v1.image.ResizeMethod": "doc",
    "tensorflow.compat.v1.image.adjust_gamma": "doc",
    "tensorflow.compat.v1.image.decode_image": "doc",
    "tensorflow.compat.v1.image.flip_up_down": "doc",
    "tensorflow.compat.v1.invert_permutation": "doc",
    "tensorflow.compat.v1.io.FixedLenFeature": "doc",
    "tensorflow.compat.v1.io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.linalg.global_norm": "doc",
    "tensorflow.compat.v1.linalg.matrix_rank": "doc",
    "tensorflow.compat.v1.lite.TocoConverter": "doc",
    "tensorflow.compat.v1.math.count_nonzero": "doc",
    "tensorflow.compat.v1.math.divide_no_nan": "doc",
    "tensorflow.compat.v1.math.greater_equal": "doc",
    "tensorflow.compat.v1.math.special.dawsn": "doc",
    "tensorflow.compat.v1.math.zero_fraction": "doc",
    "tensorflow.compat.v1.matrix_determinant": "doc",
    "tensorflow.compat.v1.matrix_square_root": "doc",
    "tensorflow.compat.v1.nest.map_structure": "doc",
    "tensorflow.compat.v1.signal.hann_window": "doc",
    "tensorflow.compat.v1.sparse_placeholder": "doc",
    "tensorflow.compat.v1.sparse_segment_sum": "doc",
    "tensorflow.compat.v1.summary.FileWriter": "doc",
    "tensorflow.compat.v1.summary.SessionLog": "doc",
    "tensorflow.compat.v1.summary.initialize": "doc",
    "tensorflow.compat.v1.tables_initializer": "doc",
    "tensorflow.compat.v1.tpu.batch_parallel": "doc",
    "tensorflow.compat.v1.tpu.bfloat16_scope": "doc",
    "tensorflow.compat.v1.train.FeatureLists": "doc",
    "tensorflow.compat.v1.train.FinalOpsHook": "doc",
    "tensorflow.compat.v1.train.LooperThread": "doc",
    "tensorflow.compat.v1.train.ProfilerHook": "doc",
    "tensorflow.compat.v1.train.cosine_decay": "doc",
    "tensorflow.compat.v1.train.experimental": "doc",
    "tensorflow.compat.v1.train.limit_epochs": "doc",
    "tensorflow.compat.v1.train.queue_runner": "doc",
    "tensorflow.compat.v1.types.experimental": "doc",
    "tensorflow.compat.v1.unique_with_counts": "doc",
    "tensorflow.data.FixedLengthRecordDataset": "doc",
    "tensorflow.data.experimental.cardinality": "doc",
    "tensorflow.distribute.DistributedDataset": "doc",
    "tensorflow.experimental.dlpack.to_dlpack": "doc",
    "tensorflow.experimental.numpy.asanyarray": "doc",
    "tensorflow.experimental.numpy.bitwise_or": "doc",
    "tensorflow.experimental.numpy.complex128": "doc",
    "tensorflow.experimental.numpy.empty_like": "doc",
    "tensorflow.experimental.numpy.issubdtype": "doc",
    "tensorflow.experimental.numpy.less_equal": "doc",
    "tensorflow.experimental.numpy.logaddexp2": "doc",
    "tensorflow.experimental.numpy.logical_or": "doc",
    "tensorflow.experimental.numpy.reciprocal": "doc",
    "tensorflow.feature_column.crossed_column": "doc",
    "tensorflow.feature_column.numeric_column": "doc",
    "tensorflow.initializers.truncated_normal": "doc",
    "tensorflow.initializers.variance_scaling": "doc",
    "tensorflow.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.profiler.experimental.Profile": "doc",
    "tensorflow.quantization.quantized_concat": "doc",
    "tensorflow.compat.v1.AttrValue.ListValue": "doc",
    "tensorflow.compat.v1.VariableAggregation": "doc",
    "tensorflow.compat.v1.app.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.app.flags.text_wrap": "doc",
    "tensorflow.compat.v1.app.flags.validator": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_and": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_xor": "doc",
    "tensorflow.compat.v1.bitwise.right_shift": "doc",
    "tensorflow.compat.v1.clip_by_global_norm": "doc",
    "tensorflow.compat.v1.config.experimental": "doc",
    "tensorflow.compat.v1.debugging.is_finite": "doc",
    "tensorflow.compat.v1.decode_json_example": "doc",
    "tensorflow.compat.v1.disable_v2_behavior": "doc",
    "tensorflow.compat.v1.distribute.ReduceOp": "doc",
    "tensorflow.compat.v1.distributions.Gamma": "doc",
    "tensorflow.compat.v1.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.gfile.ListDirectory": "doc",
    "tensorflow.compat.v1.image.resize_images": "doc",
    "tensorflow.compat.v1.io.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.layers.experimental": "doc",
    "tensorflow.compat.v1.linalg.experimental": "doc",
    "tensorflow.compat.v1.linalg.l2_normalize": "doc",
    "tensorflow.compat.v1.logging.log_every_n": "doc",
    "tensorflow.compat.v1.logging.log_first_n": "doc",
    "tensorflow.compat.v1.lookup.experimental": "doc",
    "tensorflow.compat.v1.math.special.expint": "doc",
    "tensorflow.compat.v1.math.special.spence": "doc",
    "tensorflow.compat.v1.nn.conv1d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv3d_transpose": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup": "doc",
    "tensorflow.compat.v1.nn.log_poisson_loss": "doc",
    "tensorflow.compat.v1.nn.quantized_conv2d": "doc",
    "tensorflow.compat.v1.nn.quantized_relu_x": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto": "doc",
    "tensorflow.compat.v1.queue.PriorityQueue": "doc",
    "tensorflow.compat.v1.signal.inverse_mdct": "doc",
    "tensorflow.compat.v1.signal.inverse_stft": "doc",
    "tensorflow.compat.v1.train.AdamOptimizer": "doc",
    "tensorflow.compat.v1.train.FtrlOptimizer": "doc",
    "tensorflow.compat.v1.train.NanTensorHook": "doc",
    "tensorflow.compat.v1.train.load_variable": "doc",
    "tensorflow.compat.v1.train.shuffle_batch": "doc",
    "tensorflow.compat.v1.trainable_variables": "doc",
    "tensorflow.autograph.experimental.Feature": "doc",
    "tensorflow.data.experimental.StatsOptions": "doc",
    "tensorflow.data.experimental.from_variant": "doc",
    "tensorflow.distribute.DistributedIterator": "doc",
    "tensorflow.experimental.async_clear_error": "doc",
    "tensorflow.experimental.numpy.array_equal": "doc",
    "tensorflow.experimental.numpy.bitwise_and": "doc",
    "tensorflow.experimental.numpy.bitwise_not": "doc",
    "tensorflow.experimental.numpy.bitwise_xor": "doc",
    "tensorflow.experimental.numpy.concatenate": "doc",
    "tensorflow.experimental.numpy.float_power": "doc",
    "tensorflow.experimental.numpy.logical_and": "doc",
    "tensorflow.experimental.numpy.logical_not": "doc",
    "tensorflow.experimental.numpy.logical_xor": "doc",
    "tensorflow.experimental.numpy.result_type": "doc",
    "tensorflow.experimental.numpy.true_divide": "doc",
    "tensorflow.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.linalg.LinearOperatorInversion": "doc",
    "tensorflow.test.is_built_with_gpu_support": "doc",
    "tensorflow.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.train.ExponentialMovingAverage": "doc",
    "tensorflow.train.experimental.PythonState": "doc",
    "tensorflow.compat.v1.TensorInfo.CooSparse": "doc",
    "tensorflow.compat.v1.UnconnectedGradients": "doc",
    "tensorflow.compat.v1.app.flags.EnumParser": "doc",
    "tensorflow.compat.v1.app.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.app.flags.FlagValues": "doc",
    "tensorflow.compat.v1.app.flags.ListParser": "doc",
    "tensorflow.compat.v1.clip_by_average_norm": "doc",
    "tensorflow.compat.v1.config.LogicalDevice": "doc",
    "tensorflow.compat.v1.constant_initializer": "doc",
    "tensorflow.compat.v1.control_dependencies": "doc",
    "tensorflow.compat.v1.data.TFRecordDataset": "doc",
    "tensorflow.compat.v1.data.TextLineDataset": "doc",
    "tensorflow.compat.v1.distributions.Normal": "doc",
    "tensorflow.compat.v1.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.flags.get_help_width": "doc",
    "tensorflow.compat.v1.image.resize_bicubic": "doc",
    "tensorflow.compat.v1.initialize_variables": "doc",
    "tensorflow.compat.v1.layers.max_pooling1d": "doc",
    "tensorflow.compat.v1.layers.max_pooling2d": "doc",
    "tensorflow.compat.v1.layers.max_pooling3d": "doc",
    "tensorflow.compat.v1.lite.TFLiteConverter": "doc",
    "tensorflow.compat.v1.lite.experimental.nn": "doc",
    "tensorflow.compat.v1.lookup.TextFileIndex": "doc",
    "tensorflow.compat.v1.math.multiply_no_nan": "doc",
    "tensorflow.compat.v1.math.reduce_variance": "doc",
    "tensorflow.compat.v1.nn.collapse_repeated": "doc",
    "tensorflow.compat.v1.nn.ctc_unique_labels": "doc",
    "tensorflow.compat.v1.nn.normalize_moments": "doc",
    "tensorflow.compat.v1.parse_single_example": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto": "doc",
    "tensorflow.compat.v1.signal.kaiser_window": "doc",
    "tensorflow.compat.v1.signal.vorbis_window": "doc",
    "tensorflow.compat.v1.test.gpu_device_name": "doc",
    "tensorflow.compat.v1.train.SessionCreator": "doc",
    "tensorflow.compat.v1.train.SessionManager": "doc",
    "tensorflow.compat.v1.train.SessionRunArgs": "doc",
    "tensorflow.compat.v1.train.SessionRunHook": "doc",
    "tensorflow.compat.v1.train.StopAtStepHook": "doc",
    "tensorflow.compat.v1.train.input_producer": "doc",
    "tensorflow.compat.v1.train.list_variables": "doc",
    "tensorflow.compat.v1.train.sdca_optimizer": "doc",
    "tensorflow.compat.v1.train.sdca_shrink_l1": "doc",
    "tensorflow.compat.v1.type_spec_from_value": "doc",
    "tensorflow.compat.v1.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.unsorted_segment_sum": "doc",
    "tensorflow.data.experimental.ignore_errors": "doc",
    "tensorflow.data.experimental.latency_stats": "doc",
    "tensorflow.debugging.enable_check_numerics": "doc",
    "tensorflow.distribute.InputReplicationMode": "doc",
    "tensorflow.distribute.ReductionToOneDevice": "doc",
    "tensorflow.experimental.dlpack.from_dlpack": "doc",
    "tensorflow.experimental.numpy.broadcast_to": "doc",
    "tensorflow.experimental.numpy.diag_indices": "doc",
    "tensorflow.experimental.numpy.floor_divide": "doc",
    "tensorflow.experimental.numpy.iscomplexobj": "doc",
    "tensorflow.experimental.tensorrt.Converter": "doc",
    "tensorflow.feature_column.embedding_column": "doc",
    "tensorflow.feature_column.indicator_column": "doc",
    "tensorflow.image.per_image_standardization": "doc",
    "tensorflow.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.lite.experimental.load_delegate": "doc",
    "tensorflow.nn.local_response_normalization": "doc",
    "tensorflow.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.compat.v1.app.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.app.flags.FloatParser": "doc",
    "tensorflow.compat.v1.config.PhysicalDevice": "doc",
    "tensorflow.compat.v1.debugging.assert_less": "doc",
    "tensorflow.compat.v1.debugging.assert_near": "doc",
    "tensorflow.compat.v1.debugging.assert_type": "doc",
    "tensorflow.compat.v1.distribute.RunOptions": "doc",
    "tensorflow.compat.v1.distributions.Laplace": "doc",
    "tensorflow.compat.v1.distributions.Uniform": "doc",
    "tensorflow.compat.v1.enable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.experimental.Optional": "doc",
    "tensorflow.compat.v1.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.flags.ValidationError": "doc",
    "tensorflow.compat.v1.histogram_fixed_width": "doc",
    "tensorflow.compat.v1.image.adjust_contrast": "doc",
    "tensorflow.compat.v1.image.extract_glimpse": "doc",
    "tensorflow.compat.v1.image.extract_patches": "doc",
    "tensorflow.compat.v1.image.flip_left_right": "doc",
    "tensorflow.compat.v1.image.image_gradients": "doc",
    "tensorflow.compat.v1.image.random_contrast": "doc",
    "tensorflow.compat.v1.image.resize_bilinear": "doc",
    "tensorflow.compat.v1.image.ssim_multiscale": "doc",
    "tensorflow.compat.v1.image.total_variation": "doc",
    "tensorflow.compat.v1.image.transpose_image": "doc",
    "tensorflow.compat.v1.initialize_all_tables": "doc",
    "tensorflow.compat.v1.initializers.constant": "doc",
    "tensorflow.compat.v1.initializers.identity": "doc",
    "tensorflow.compat.v1.io.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.io.tf_record_iterator": "doc",
    "tensorflow.compat.v1.linalg.LinearOperator": "doc",
    "tensorflow.compat.v1.linalg.cholesky_solve": "doc",
    "tensorflow.compat.v1.linalg.lu_reconstruct": "doc",
    "tensorflow.compat.v1.math.confusion_matrix": "doc",
    "tensorflow.compat.v1.math.reduce_logsumexp": "doc",
    "tensorflow.compat.v1.nest.pack_sequence_as": "doc",
    "tensorflow.compat.v1.nn.quantized_avg_pool": "doc",
    "tensorflow.compat.v1.nn.quantized_max_pool": "doc",
    "tensorflow.compat.v1.profiler.write_op_log": "doc",
    "tensorflow.compat.v1.quantization.quantize": "doc",
    "tensorflow.compat.v1.signal.hamming_window": "doc",
    "tensorflow.compat.v1.sparse_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.summary.Summary.Audio": "doc",
    "tensorflow.compat.v1.summary.Summary.Image": "doc",
    "tensorflow.compat.v1.summary.Summary.Value": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_max": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_min": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_sub": "doc",
    "tensorflow.compat.v1.test.benchmark_config": "doc",
    "tensorflow.compat.v1.test.compute_gradient": "doc",
    "tensorflow.compat.v1.test.is_gpu_available": "doc",
    "tensorflow.compat.v1.tpu.cross_replica_sum": "doc",
    "tensorflow.compat.v1.train.SequenceExample": "doc",
    "tensorflow.compat.v1.train.StepCounterHook": "doc",
    "tensorflow.compat.v1.train.load_checkpoint": "doc",
    "tensorflow.compat.v1.variables_initializer": "doc",
    "tensorflow.data.experimental.TFRecordWriter": "doc",
    "tensorflow.data.experimental.copy_to_device": "doc",
    "tensorflow.debugging.disable_check_numerics": "doc",
    "tensorflow.experimental.numpy.count_nonzero": "doc",
    "tensorflow.experimental.numpy.greater_equal": "doc",
    "tensorflow.experimental.numpy.promote_types": "doc",
    "tensorflow.feature_column.bucketized_column": "doc",
    "tensorflow.feature_column.shared_embeddings": "doc",
    "tensorflow.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.nondifferentiable_batch_function": "doc",
    "tensorflow.optimizers.schedules.deserialize": "doc",
    "tensorflow.required_space_to_batch_paddings": "doc",
    "tensorflow.compat.v1.ConditionalAccumulator": "doc",
    "tensorflow.compat.v1.NameAttrList.AttrEntry": "doc",
    "tensorflow.compat.v1.Variable.SaveSliceInfo": "doc",
    "tensorflow.compat.v1.add_check_numerics_ops": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator": "doc",
    "tensorflow.compat.v1.autograph.experimental": "doc",
    "tensorflow.compat.v1.broadcast_static_shape": "doc",
    "tensorflow.compat.v1.compat.dimension_value": "doc",
    "tensorflow.compat.v1.data.experimental.scan": "doc",
    "tensorflow.compat.v1.debugging.assert_equal": "doc",
    "tensorflow.compat.v1.debugging.experimental": "doc",
    "tensorflow.compat.v1.distributions.StudentT": "doc",
    "tensorflow.compat.v1.enable_control_flow_v2": "doc",
    "tensorflow.compat.v1.enable_eager_execution": "doc",
    "tensorflow.compat.v1.enable_tensor_equality": "doc",
    "tensorflow.compat.v1.fixed_size_partitioner": "doc",
    "tensorflow.compat.v1.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.image.grayscale_to_rgb": "doc",
    "tensorflow.compat.v1.image.rgb_to_grayscale": "doc",
    "tensorflow.compat.v1.initializers.variables": "doc",
    "tensorflow.compat.v1.io.decode_json_example": "doc",
    "tensorflow.compat.v1.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.lookup.StaticHashTable": "doc",
    "tensorflow.compat.v1.losses.cosine_distance": "doc",
    "tensorflow.compat.v1.math.is_non_decreasing": "doc",
    "tensorflow.compat.v1.math.reciprocal_no_nan": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1": "doc",
    "tensorflow.compat.v1.math.special.bessel_j0": "doc",
    "tensorflow.compat.v1.math.special.bessel_j1": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1": "doc",
    "tensorflow.compat.v1.math.special.bessel_y0": "doc",
    "tensorflow.compat.v1.math.special.bessel_y1": "doc",
    "tensorflow.compat.v1.nn.batch_normalization": "doc",
    "tensorflow.compat.v1.nn.fractional_avg_pool": "doc",
    "tensorflow.compat.v1.orthogonal_initializer": "doc",
    "tensorflow.compat.v1.queue.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.signal.overlap_and_add": "doc",
    "tensorflow.compat.v1.sparse_fill_empty_rows": "doc",
    "tensorflow.compat.v1.summary.tensor_summary": "doc",
    "tensorflow.compat.v1.test.StubOutForTesting": "doc",
    "tensorflow.compat.v1.test.is_built_with_xla": "doc",
    "tensorflow.compat.v1.train.AdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.MonitoredSession": "doc",
    "tensorflow.compat.v1.train.RMSPropOptimizer": "doc",
    "tensorflow.compat.v1.train.SessionRunValues": "doc",
    "tensorflow.compat.v1.train.SummarySaverHook": "doc",
    "tensorflow.compat.v1.train.add_queue_runner": "doc",
    "tensorflow.compat.v1.train.basic_train_loop": "doc",
    "tensorflow.compat.v1.train.maybe_batch_join": "doc",
    "tensorflow.compat.v1.train.polynomial_decay": "doc",
    "tensorflow.compat.v1.train.summary_iterator": "doc",
    "tensorflow.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.data.experimental.StatsAggregator": "doc",
    "tensorflow.data.experimental.group_by_window": "doc",
    "tensorflow.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.summary.experimental.write_raw_pb": "doc",
    "tensorflow.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.train.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.FixedLengthRecordReader": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental": "doc",
    "tensorflow.compat.v1.VariableSynchronization": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.app.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.debugging.assert_scalar": "doc",
    "tensorflow.compat.v1.debugging.assert_shapes": "doc",
    "tensorflow.compat.v1.disable_eager_execution": "doc",
    "tensorflow.compat.v1.distribute.InputContext": "doc",
    "tensorflow.compat.v1.distribute.experimental": "doc",
    "tensorflow.compat.v1.distribute.has_strategy": "doc",
    "tensorflow.compat.v1.distributions.Dirichlet": "doc",
    "tensorflow.compat.v1.flags.CsvListSerializer": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.gfile.DeleteRecursively": "doc",
    "tensorflow.compat.v1.image.adjust_brightness": "doc",
    "tensorflow.compat.v1.image.adjust_saturation": "doc",
    "tensorflow.compat.v1.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.io.match_filenames_once": "doc",
    "tensorflow.compat.v1.io.parse_single_example": "doc",
    "tensorflow.compat.v1.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling3D": "doc",
    "tensorflow.compat.v1.layers.conv2d_transpose": "doc",
    "tensorflow.compat.v1.layers.conv3d_transpose": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag_part": "doc",
    "tensorflow.compat.v1.linalg.triangular_solve": "doc",
    "tensorflow.compat.v1.math.invert_permutation": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1e": "doc",
    "tensorflow.compat.v1.nn.compute_average_loss": "doc",
    "tensorflow.compat.v1.nn.max_pool_with_argmax": "doc",
    "tensorflow.compat.v1.nn.sampled_softmax_loss": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto": "doc",
    "tensorflow.compat.v1.summary.FileWriterCache": "doc",
    "tensorflow.compat.v1.test.is_built_with_cuda": "doc",
    "tensorflow.compat.v1.test.is_built_with_rocm": "doc",
    "tensorflow.compat.v1.tpu.CrossShardOptimizer": "doc",
    "tensorflow.compat.v1.tpu.outside_compilation": "doc",
    "tensorflow.compat.v1.train.AdadeltaOptimizer": "doc",
    "tensorflow.compat.v1.train.CheckpointManager": "doc",
    "tensorflow.compat.v1.train.CheckpointOptions": "doc",
    "tensorflow.compat.v1.train.JobDef.TasksEntry": "doc",
    "tensorflow.compat.v1.train.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.train.MomentumOptimizer": "doc",
    "tensorflow.compat.v1.train.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.train.SessionRunContext": "doc",
    "tensorflow.compat.v1.train.checkpoint_exists": "doc",
    "tensorflow.compat.v1.train.exponential_decay": "doc",
    "tensorflow.compat.v1.train.export_meta_graph": "doc",
    "tensorflow.compat.v1.train.import_meta_graph": "doc",
    "tensorflow.compat.v1.train.latest_checkpoint": "doc",
    "tensorflow.compat.v1.train.remove_checkpoint": "doc",
    "tensorflow.data.experimental.ThreadingOptions": "doc",
    "tensorflow.data.experimental.group_by_reducer": "doc",
    "tensorflow.data.experimental.make_csv_dataset": "doc",
    "tensorflow.experimental.numpy.take_along_axis": "doc",
    "tensorflow.image.non_max_suppression_overlaps": "doc",
    "tensorflow.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.losses.kullback_leibler_divergence": "doc",
    "tensorflow.mlir.experimental.convert_function": "doc",
    "tensorflow.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.summary.experimental.summary_scope": "doc",
    "tensorflow.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.compat.v1.ConfigProto.Experimental": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.app.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.app.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.app.flags.get_help_width": "doc",
    "tensorflow.compat.v1.config.optimizer.get_jit": "doc",
    "tensorflow.compat.v1.data.experimental.unique": "doc",
    "tensorflow.compat.v1.debugging.assert_greater": "doc",
    "tensorflow.compat.v1.debugging.assert_integer": "doc",
    "tensorflow.compat.v1.debugging.check_numerics": "doc",
    "tensorflow.compat.v1.distribute.NcclAllReduce": "doc",
    "tensorflow.compat.v1.distributions.RegisterKL": "doc",
    "tensorflow.compat.v1.experimental.async_scope": "doc",
    "tensorflow.compat.v1.flags.ArgumentSerializer": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.flags.register_validator": "doc",
    "tensorflow.compat.v1.initialize_all_variables": "doc",
    "tensorflow.compat.v1.layers.average_pooling1d": "doc",
    "tensorflow.compat.v1.layers.average_pooling2d": "doc",
    "tensorflow.compat.v1.layers.average_pooling3d": "doc",
    "tensorflow.compat.v1.linalg.lu_matrix_inverse": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_solve": "doc",
    "tensorflow.compat.v1.load_file_system_library": "doc",
    "tensorflow.compat.v1.math.special.fresnel_cos": "doc",
    "tensorflow.compat.v1.moving_average_variables": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.nn.sufficient_statistics": "doc",
    "tensorflow.compat.v1.placeholder_with_default": "doc",
    "tensorflow.compat.v1.python_io.TFRecordWriter": "doc",
    "tensorflow.compat.v1.queue.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.train.AdagradDAOptimizer": "doc",
    "tensorflow.compat.v1.train.piecewise_constant": "doc",
    "tensorflow.compat.v1.train.shuffle_batch_join": "doc",
    "tensorflow.compat.v1.xla.experimental.compile": "doc",
    "tensorflow.config.experimental_connect_to_host": "doc",
    "tensorflow.data.experimental.DistributeOptions": "doc",
    "tensorflow.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.distribute.experimental.coordinator": "doc",
    "tensorflow.distribute.in_cross_replica_context": "doc",
    "tensorflow.experimental.function_executor_type": "doc",
    "tensorflow.experimental.numpy.broadcast_arrays": "doc",
    "tensorflow.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.register_tensor_conversion_function": "doc",
    "tensorflow.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.train.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.app.flags.ValidationError": "doc",
    "tensorflow.compat.v1.compat.forward_compatible": "doc",
    "tensorflow.compat.v1.data.experimental.Counter": "doc",
    "tensorflow.compat.v1.data.experimental.Reducer": "doc",
    "tensorflow.compat.v1.data.experimental.unbatch": "doc",
    "tensorflow.compat.v1.debugging.assert_negative": "doc",
    "tensorflow.compat.v1.debugging.assert_positive": "doc",
    "tensorflow.compat.v1.distribute.CrossDeviceOps": "doc",
    "tensorflow.compat.v1.distribute.ReplicaContext": "doc",
    "tensorflow.compat.v1.distributions.Categorical": "doc",
    "tensorflow.compat.v1.distributions.Exponential": "doc",
    "tensorflow.compat.v1.distributions.Multinomial": "doc",
    "tensorflow.compat.v1.enable_resource_variables": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_string": "doc",
    "tensorflow.compat.v1.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.image.adjust_jpeg_quality": "doc",
    "tensorflow.compat.v1.image.non_max_suppression": "doc",
    "tensorflow.compat.v1.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.io.parse_sequence_example": "doc",
    "tensorflow.compat.v1.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorDiag": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_matmul": "doc",
    "tensorflow.compat.v1.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.math.cumulative_logsumexp": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sum": "doc",
    "tensorflow.compat.v1.mixed_precision.LossScale": "doc",
    "tensorflow.compat.v1.python_io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.random_normal_initializer": "doc",
    "tensorflow.compat.v1.summary.TaggedRunMetadata": "doc",
    "tensorflow.compat.v1.tpu.experimental.Topology": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.train.ChiefSessionCreator": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch": "doc",
    "tensorflow.compat.forward_compatibility_horizon": "doc",
    "tensorflow.data.experimental.prefetch_to_device": "doc",
    "tensorflow.data.experimental.rejection_resample": "doc",
    "tensorflow.distribute.experimental.ValueContext": "doc",
    "tensorflow.distribute.experimental.partitioners": "doc",
    "tensorflow.experimental.numpy.ascontiguousarray": "doc",
    "tensorflow.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.profiler.experimental.client.monitor": "doc",
    "tensorflow.quantization.quantize_and_dequantize": "doc",
    "tensorflow.compat.v1.ConditionalAccumulatorBase": "doc",
    "tensorflow.compat.v1.RunMetadata.FunctionGraphs": "doc",
    "tensorflow.compat.v1.SummaryMetadata.PluginData": "doc",
    "tensorflow.compat.v1.TensorInfo.CompositeTensor": "doc",
    "tensorflow.compat.v1.app.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.data.experimental.Optional": "doc",
    "tensorflow.compat.v1.data.experimental.snapshot": "doc",
    "tensorflow.compat.v1.disable_resource_variables": "doc",
    "tensorflow.compat.v1.distributions.Distribution": "doc",
    "tensorflow.compat.v1.feature_column.input_layer": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.histogram_fixed_width_bins": "doc",
    "tensorflow.compat.v1.image.crop_to_bounding_box": "doc",
    "tensorflow.compat.v1.initialize_local_variables": "doc",
    "tensorflow.compat.v1.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.io.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.compat.v1.io.TFRecordCompressionType": "doc",
    "tensorflow.compat.v1.layers.batch_normalization": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorZeros": "doc",
    "tensorflow.compat.v1.lite.RepresentativeDataset": "doc",
    "tensorflow.compat.v1.losses.absolute_difference": "doc",
    "tensorflow.compat.v1.math.reduce_euclidean_norm": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.compute_accidental_hits": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.nn.static_state_saving_rnn": "doc",
    "tensorflow.compat.v1.quantize_and_dequantize_v4": "doc",
    "tensorflow.compat.v1.random_uniform_initializer": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.summary.SummaryDescription": "doc",
    "tensorflow.compat.v1.summary.all_v2_summary_ops": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding": "doc",
    "tensorflow.compat.v1.train.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.train.WorkerSessionCreator": "doc",
    "tensorflow.compat.v1.train.checkpoints_iterator": "doc",
    "tensorflow.compat.v1.train.init_from_checkpoint": "doc",
    "tensorflow.compat.v1.train.match_filenames_once": "doc",
    "tensorflow.compat.v1.train.range_input_producer": "doc",
    "tensorflow.compat.v1.train.slice_input_producer": "doc",
    "tensorflow.autograph.experimental.do_not_convert": "doc",
    "tensorflow.data.experimental.OptimizationOptions": "doc",
    "tensorflow.data.experimental.parallel_interleave": "doc",
    "tensorflow.image.non_max_suppression_with_scores": "doc",
    "tensorflow.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.profiler.experimental.ProfilerOptions": "doc",
    "tensorflow.compat.v1.app.flags.CsvListSerializer": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.app.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.data.experimental.Structure": "doc",
    "tensorflow.compat.v1.data.make_one_shot_iterator": "doc",
    "tensorflow.compat.v1.debugging.assert_less_equal": "doc",
    "tensorflow.compat.v1.debugging.is_non_decreasing": "doc",
    "tensorflow.compat.v1.debugging.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.distribute.MirroredStrategy": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver": "doc",
    "tensorflow.compat.v1.distributions.kl_divergence": "doc",
    "tensorflow.compat.v1.feature_column.linear_model": "doc",
    "tensorflow.compat.v1.flags.CantOpenFlagFileError": "doc",
    "tensorflow.compat.v1.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.compat.v1.graph_util.import_graph_def": "doc",
    "tensorflow.compat.v1.image.resize_image_with_pad": "doc",
    "tensorflow.compat.v1.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.compat.v1.local_variables_initializer": "doc",
    "tensorflow.compat.v1.train.Features.FeatureEntry": "doc",
    "tensorflow.compat.v1.train.SyncReplicasOptimizer": "doc",
    "tensorflow.compat.v1.train.cosine_decay_restarts": "doc",
    "tensorflow.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.distribute.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.experimental.tensorrt.ConversionParams": "doc",
    "tensorflow.feature_column.sequence_numeric_column": "doc",
    "tensorflow.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.compat.v1.ConfigProto.DeviceCountEntry": "doc",
    "tensorflow.compat.v1.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentSerializer": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.app.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.app.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.app.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.app.flags.register_validator": "doc",
    "tensorflow.compat.v1.config.functions_run_eagerly": "doc",
    "tensorflow.compat.v1.data.experimental.CsvDataset": "doc",
    "tensorflow.compat.v1.data.experimental.SqlDataset": "doc",
    "tensorflow.compat.v1.data.experimental.take_while": "doc",
    "tensorflow.compat.v1.data.experimental.to_variant": "doc",
    "tensorflow.compat.v1.distribute.OneDeviceStrategy": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.global_variables_initializer": "doc",
    "tensorflow.compat.v1.graph_util.extract_sub_graph": "doc",
    "tensorflow.compat.v1.image.random_flip_left_right": "doc",
    "tensorflow.compat.v1.initializers.local_variables": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.compat.v1.lookup.StaticVocabularyTable": "doc",
    "tensorflow.compat.v1.losses.compute_weighted_loss": "doc",
    "tensorflow.compat.v1.losses.sigmoid_cross_entropy": "doc",
    "tensorflow.compat.v1.min_max_variable_partitioner": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.nn.bidirectional_dynamic_rnn": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter_v2": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.Checker": "doc",
    "tensorflow.compat.v1.python_io.tf_record_iterator": "doc",
    "tensorflow.compat.v1.train.experimental.LossScale": "doc",
    "tensorflow.compat.v1.variance_scaling_initializer": "doc",
    "tensorflow.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.config.get_logical_device_configuration": "doc",
    "tensorflow.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.experimental.register_filesystem_plugin": "doc",
    "tensorflow.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.compat.v1.NodeDef.ExperimentalDebugInfo": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_string": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.data.FixedLengthRecordDataset": "doc",
    "tensorflow.compat.v1.data.experimental.cardinality": "doc",
    "tensorflow.compat.v1.feature_column.crossed_column": "doc",
    "tensorflow.compat.v1.feature_column.numeric_column": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.initializers.global_variables": "doc",
    "tensorflow.compat.v1.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder_v2": "doc",
    "tensorflow.compat.v1.profiler.ProfileOptionBuilder": "doc",
    "tensorflow.compat.v1.quantization.quantized_concat": "doc",
    "tensorflow.compat.v1.resource_loader.load_resource": "doc",
    "tensorflow.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.autograph.experimental.Feature": "doc",
    "tensorflow.compat.v1.data.experimental.StatsOptions": "doc",
    "tensorflow.compat.v1.data.experimental.from_variant": "doc",
    "tensorflow.compat.v1.experimental.async_clear_error": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorInversion": "doc",
    "tensorflow.compat.v1.logging.TaskLevelStatusMessage": "doc",
    "tensorflow.compat.v1.mixed_precision.FixedLossScale": "doc",
    "tensorflow.compat.v1.report_uninitialized_variables": "doc",
    "tensorflow.compat.v1.test.is_built_with_gpu_support": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.compat.v1.train.ExponentialMovingAverage": "doc",
    "tensorflow.compat.v1.train.GradientDescentOptimizer": "doc",
    "tensorflow.compat.v1.train.ProximalAdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession": "doc",
    "tensorflow.compat.v1.train.experimental.PythonState": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch_join": "doc",
    "tensorflow.compat.v1.train.queue_runner.QueueRunner": "doc",
    "tensorflow.compat.v1.variable_axis_size_partitioner": "doc",
    "tensorflow.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.app.flags.CantOpenFlagFileError": "doc",
    "tensorflow.compat.v1.app.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.app.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.app.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.compat.v1.data.experimental.ignore_errors": "doc",
    "tensorflow.compat.v1.data.experimental.latency_stats": "doc",
    "tensorflow.compat.v1.debugging.enable_check_numerics": "doc",
    "tensorflow.compat.v1.distribute.InputReplicationMode": "doc",
    "tensorflow.compat.v1.distribute.ReductionToOneDevice": "doc",
    "tensorflow.compat.v1.feature_column.embedding_column": "doc",
    "tensorflow.compat.v1.feature_column.indicator_column": "doc",
    "tensorflow.compat.v1.image.per_image_standardization": "doc",
    "tensorflow.compat.v1.initializers.tables_initializer": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.compat.v1.lite.experimental.load_delegate": "doc",
    "tensorflow.compat.v1.nn.local_response_normalization": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdamParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.FtrlParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.compat.v1.app.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.data.experimental.TFRecordWriter": "doc",
    "tensorflow.compat.v1.data.experimental.copy_to_device": "doc",
    "tensorflow.compat.v1.data.make_initializable_iterator": "doc",
    "tensorflow.compat.v1.debugging.disable_check_numerics": "doc",
    "tensorflow.compat.v1.feature_column.bucketized_column": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.dynamic_rnn": "doc",
    "tensorflow.compat.v1.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.compat.v1.mixed_precision.DynamicLossScale": "doc",
    "tensorflow.compat.v1.nondifferentiable_batch_function": "doc",
    "tensorflow.compat.v1.required_space_to_batch_paddings": "doc",
    "tensorflow.compat.v1.train.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.uniform_unit_scaling_initializer": "doc",
    "tensorflow.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.app.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.compat.v1.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.compat.v1.data.experimental.StatsAggregator": "doc",
    "tensorflow.compat.v1.data.experimental.TensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_window": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.compat.v1.initializers.uniform_unit_scaling": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.compat.v1.lite.OpHint.OpHintArgumentTracker": "doc",
    "tensorflow.compat.v1.python_io.TFRecordCompressionType": "doc",
    "tensorflow.compat.v1.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding_column": "doc",
    "tensorflow.compat.v1.train.experimental.FixedLossScale": "doc",
    "tensorflow.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.compat.v1.data.experimental.DatasetStructure": "doc",
    "tensorflow.compat.v1.data.experimental.ThreadingOptions": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_reducer": "doc",
    "tensorflow.compat.v1.data.experimental.make_csv_dataset": "doc",
    "tensorflow.compat.v1.distributions.DirichletMultinomial": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_overlaps": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TfLiteRNNCell": "doc",
    "tensorflow.compat.v1.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_function": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.CheckersEntry": "doc",
    "tensorflow.compat.v1.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.compat.v1.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.compat.v1.train.MonitoredSession.StepContext": "doc",
    "tensorflow.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_host": "doc",
    "tensorflow.compat.v1.data.experimental.DistributeOptions": "doc",
    "tensorflow.compat.v1.data.experimental.OptionalStructure": "doc",
    "tensorflow.compat.v1.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.compat.v1.distribute.in_cross_replica_context": "doc",
    "tensorflow.compat.v1.executing_eagerly_outside_functions": "doc",
    "tensorflow.compat.v1.experimental.function_executor_type": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TFLiteLSTMCell": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto.IdToStringEntry": "doc",
    "tensorflow.compat.v1.register_tensor_conversion_function": "doc",
    "tensorflow.compat.v1.resource_loader.readahead_file_path": "doc",
    "tensorflow.compat.v1.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.compat.v1.train.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.train.queue_runner.add_queue_runner": "doc",
    "tensorflow.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.compat.v1.compat.forward_compatibility_horizon": "doc",
    "tensorflow.compat.v1.data.experimental.prefetch_to_device": "doc",
    "tensorflow.compat.v1.data.experimental.rejection_resample": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.compat.v1.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize": "doc",
    "tensorflow.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.distribute.experimental.coordinator.RemoteValue": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.compat.v1.autograph.experimental.do_not_convert": "doc",
    "tensorflow.compat.v1.data.experimental.OptimizationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.parallel_interleave": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_with_scores": "doc",
    "tensorflow.compat.v1.layers.experimental.keras_style_scope": "doc",
    "tensorflow.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.distribute.experimental.partitioners.Partitioner": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental.VirtualDevices": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.compat.v1.data.experimental.TensorArrayStructure": "doc",
    "tensorflow.compat.v1.feature_column.sequence_numeric_column": "doc",
    "tensorflow.compat.v1.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.compat.v1.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.compat.v1.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.compat.v1.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.compat.v1.train.ProximalGradientDescentOptimizer": "doc",
    "tensorflow.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.compat.v1.config.get_logical_device_configuration": "doc",
    "tensorflow.compat.v1.data.experimental.RaggedTensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.SparseTensorStructure": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.compat.v1.experimental.register_filesystem_plugin": "doc",
    "tensorflow.compat.v1.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.app.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto.InputShapesEntry": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.distribute.experimental.coordinator.PerWorkerValues": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.compat.v1.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_input": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.app.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession.StepContext": "doc",
    "tensorflow.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.distribute.experimental.coordinator.ClusterCoordinator": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.distribute.experimental.partitioners.MaxSizePartitioner": "doc",
    "tensorflow.distribute.experimental.partitioners.MinSizePartitioner": "doc",
    "tensorflow.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental.RunHandlerPoolOptions": "doc",
    "tensorflow.compat.v1.app.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.compat.v1.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.compat.v1.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.compat.v1.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.compat.v1.mixed_precision.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.distribute.experimental.partitioners.FixedShardsPartitioner": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.compat.v1.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.compat.v1.train.experimental.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch_with_legacy_function": "doc",
    "tensorflow.compat.v1.mixed_precision.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.tpu.experimental.StochasticGradientDescentParameters": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.compat.v1.mixed_precision.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.compat.v1.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_list": "doc"
  },
  "tensorflow.contrib": {
    "tensorflow.config": "doc",
    "tensorflow.config.LogicalDevice": "doc",
    "tensorflow.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.config.PhysicalDevice": "doc",
    "tensorflow.config.experimental": "doc",
    "tensorflow.config.optimizer": "doc",
    "tensorflow.config.threading": "doc",
    "tensorflow.compat.v1.config": "doc",
    "tensorflow.config.optimizer.get_jit": "doc",
    "tensorflow.config.optimizer.set_jit": "doc",
    "tensorflow.config.get_visible_devices": "doc",
    "tensorflow.config.set_visible_devices": "doc",
    "tensorflow.compat.v1.config.optimizer": "doc",
    "tensorflow.compat.v1.config.threading": "doc",
    "tensorflow.config.list_logical_devices": "doc",
    "tensorflow.config.functions_run_eagerly": "doc",
    "tensorflow.config.list_physical_devices": "doc",
    "tensorflow.config.run_functions_eagerly": "doc",
    "tensorflow.compat.v1.config.experimental": "doc",
    "tensorflow.compat.v1.config.LogicalDevice": "doc",
    "tensorflow.compat.v1.config.PhysicalDevice": "doc",
    "tensorflow.config.get_soft_device_placement": "doc",
    "tensorflow.config.set_soft_device_placement": "doc",
    "tensorflow.compat.v1.config.optimizer.get_jit": "doc",
    "tensorflow.compat.v1.config.optimizer.set_jit": "doc",
    "tensorflow.config.experimental_connect_to_host": "doc",
    "tensorflow.config.experimental.get_memory_usage": "doc",
    "tensorflow.compat.v1.config.get_visible_devices": "doc",
    "tensorflow.compat.v1.config.set_visible_devices": "doc",
    "tensorflow.config.experimental.get_device_policy": "doc",
    "tensorflow.config.experimental.get_memory_growth": "doc",
    "tensorflow.config.experimental.set_device_policy": "doc",
    "tensorflow.config.experimental.set_memory_growth": "doc",
    "tensorflow.compat.v1.config.list_logical_devices": "doc",
    "tensorflow.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.config.experimental.get_device_details": "doc",
    "tensorflow.config.experimental_connect_to_cluster": "doc",
    "tensorflow.compat.v1.config.functions_run_eagerly": "doc",
    "tensorflow.compat.v1.config.list_physical_devices": "doc",
    "tensorflow.compat.v1.config.run_functions_eagerly": "doc",
    "tensorflow.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.config.experimental.get_visible_devices": "doc",
    "tensorflow.config.experimental.set_visible_devices": "doc",
    "tensorflow.config.get_logical_device_configuration": "doc",
    "tensorflow.config.set_logical_device_configuration": "doc",
    "tensorflow.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.config.experimental.list_logical_devices": "doc",
    "tensorflow.config.experimental.list_physical_devices": "doc",
    "tensorflow.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.config.optimizer.get_experimental_options": "doc",
    "tensorflow.config.optimizer.set_experimental_options": "doc",
    "tensorflow.compat.v1.config.get_soft_device_placement": "doc",
    "tensorflow.compat.v1.config.set_soft_device_placement": "doc",
    "tensorflow.compat.v1.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_host": "doc",
    "tensorflow.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_usage": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_growth": "doc",
    "tensorflow.compat.v1.config.experimental.set_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.set_memory_growth": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_details": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_cluster": "doc",
    "tensorflow.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.compat.v1.config.experimental.get_visible_devices": "doc",
    "tensorflow.compat.v1.config.experimental.set_visible_devices": "doc",
    "tensorflow.compat.v1.config.get_logical_device_configuration": "doc",
    "tensorflow.compat.v1.config.set_logical_device_configuration": "doc",
    "tensorflow.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.compat.v1.config.experimental.list_logical_devices": "doc",
    "tensorflow.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.list_physical_devices": "doc",
    "tensorflow.compat.v1.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.compat.v1.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.compat.v1.config.optimizer.get_experimental_options": "doc",
    "tensorflow.compat.v1.config.optimizer.set_experimental_options": "doc",
    "tensorflow.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.compat.v1.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.compat.v1.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.compat.v1.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.compat.v1.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.compat.v1.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.compat.v1.container": "doc",
    "tensorflow.keras.constraints": "doc",
    "tensorflow.keras.constraints.get": "doc",
    "tensorflow.keras.constraints.NonNeg": "doc",
    "tensorflow.keras.constraints.MaxNorm": "doc",
    "tensorflow.keras.constraints.non_neg": "doc",
    "tensorflow.keras.constraints.UnitNorm": "doc",
    "tensorflow.keras.constraints.max_norm": "doc",
    "tensorflow.keras.constraints.serialize": "doc",
    "tensorflow.keras.constraints.unit_norm": "doc",
    "tensorflow.compat.v1.keras.constraints": "doc",
    "tensorflow.keras.constraints.Constraint": "doc",
    "tensorflow.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.keras.constraints.deserialize": "doc",
    "tensorflow.keras.constraints.min_max_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.get": "doc",
    "tensorflow.keras.constraints.RadialConstraint": "doc",
    "tensorflow.compat.v1.keras.constraints.NonNeg": "doc",
    "tensorflow.keras.constraints.radial_constraint": "doc",
    "tensorflow.compat.v1.keras.constraints.MaxNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.non_neg": "doc",
    "tensorflow.compat.v1.keras.constraints.UnitNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.max_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.serialize": "doc",
    "tensorflow.compat.v1.keras.constraints.unit_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.Constraint": "doc",
    "tensorflow.compat.v1.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.deserialize": "doc",
    "tensorflow.compat.v1.keras.constraints.min_max_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.RadialConstraint": "doc",
    "tensorflow.compat.v1.keras.constraints.radial_constraint": "doc",
    "tensorflow.constant": "doc",
    "tensorflow.ragged.constant": "doc",
    "tensorflow.compat.v1.constant": "doc",
    "tensorflow.initializers.constant": "doc",
    "tensorflow.compat.v1.ragged.constant": "doc",
    "tensorflow.keras.initializers.constant": "doc",
    "tensorflow.compat.v1.initializers.constant": "doc",
    "tensorflow.compat.v1.keras.initializers.constant": "doc",
    "tensorflow.compat.v1.lite.constants": "doc",
    "tensorflow.compat.v1.saved_model.constants": "doc",
    "tensorflow.cond": "doc",
    "tensorflow.concat": "doc",
    "tensorflow.math.conj": "doc",
    "tensorflow.nn.conv1d": "doc",
    "tensorflow.nn.conv2d": "doc",
    "tensorflow.nn.conv3d": "doc",
    "tensorflow.math.ndtri": "doc",
    "tensorflow.raw_ops.Ndtri": "doc",
    "tensorflow.sparse.concat": "doc",
    "tensorflow.strings.strip": "doc",
    "tensorflow.metrics.Metric": "doc",
    "tensorflow.compat.v1.cond": "doc",
    "tensorflow.compat.v1.conj": "doc",
    "tensorflow.compat.v1.concat": "doc",
    "tensorflow.compat.v1.tpu.core": "doc",
    "tensorflow.compat.v1.math.conj": "doc",
    "tensorflow.compat.v1.nn.conv1d": "doc",
    "tensorflow.compat.v1.nn.conv2d": "doc",
    "tensorflow.compat.v1.nn.conv3d": "doc",
    "tensorflow.keras.metrics.Metric": "doc",
    "tensorflow.compat.v1.math.ndtri": "doc",
    "tensorflow.experimental.numpy.tri": "doc",
    "tensorflow.experimental.numpy.conj": "doc",
    "tensorflow.experimental.numpy.tril": "doc",
    "tensorflow.experimental.numpy.triu": "doc",
    "tensorflow.compat.v1.layers.conv1d": "doc",
    "tensorflow.compat.v1.layers.conv2d": "doc",
    "tensorflow.compat.v1.layers.conv3d": "doc",
    "tensorflow.compat.v1.sparse.concat": "doc",
    "tensorflow.compat.v1.strings.strip": "doc",
    "tensorflow.compat.v1.keras.metrics.Metric": "doc",
    "tensorflow.distribute": "doc",
    "tensorflow.distribute.Server": "doc",
    "tensorflow.raw_ops.ScatterDiv": "doc",
    "tensorflow.raw_ops.ScatterMin": "doc",
    "tensorflow.raw_ops.ScatterSub": "doc",
    "tensorflow.distribute.ReduceOp": "doc",
    "tensorflow.distribute.Strategy": "doc",
    "tensorflow.compat.v1.distribute": "doc",
    "tensorflow.distribute.RunOptions": "doc",
    "tensorflow.distribute.TPUStrategy": "doc",
    "tensorflow.distribute.InputContext": "doc",
    "tensorflow.distribute.InputOptions": "doc",
    "tensorflow.distribute.experimental": "doc",
    "tensorflow.distribute.get_strategy": "doc",
    "tensorflow.distribute.has_strategy": "doc",
    "tensorflow.distribute.NcclAllReduce": "doc",
    "tensorflow.distribute.CrossDeviceOps": "doc",
    "tensorflow.distribute.ReplicaContext": "doc",
    "tensorflow.distribute.MirroredStrategy": "doc",
    "tensorflow.distribute.StrategyExtended": "doc",
    "tensorflow.distribute.cluster_resolver": "doc",
    "tensorflow.compat.v1.distribute.Server": "doc",
    "tensorflow.distribute.DistributedValues": "doc",
    "tensorflow.distribute.OneDeviceStrategy": "doc",
    "tensorflow.distribute.DistributedDataset": "doc",
    "tensorflow.compat.v1.distribute.ReduceOp": "doc",
    "tensorflow.compat.v1.distribute.Strategy": "doc",
    "tensorflow.distribute.DistributedIterator": "doc",
    "tensorflow.distribute.get_replica_context": "doc",
    "tensorflow.distribute.InputReplicationMode": "doc",
    "tensorflow.distribute.ReductionToOneDevice": "doc",
    "tensorflow.compat.v1.distribute.RunOptions": "doc",
    "tensorflow.compat.v1.distribute.InputContext": "doc",
    "tensorflow.compat.v1.distribute.experimental": "doc",
    "tensorflow.compat.v1.distribute.get_strategy": "doc",
    "tensorflow.compat.v1.distribute.has_strategy": "doc",
    "tensorflow.compat.v1.distribute.NcclAllReduce": "doc",
    "tensorflow.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.distribute.experimental.coordinator": "doc",
    "tensorflow.distribute.in_cross_replica_context": "doc",
    "tensorflow.compat.v1.distribute.CrossDeviceOps": "doc",
    "tensorflow.compat.v1.distribute.ReplicaContext": "doc",
    "tensorflow.data.experimental.service.distribute": "doc",
    "tensorflow.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.distribute.experimental.ValueContext": "doc",
    "tensorflow.distribute.experimental.partitioners": "doc",
    "tensorflow.distribute.experimental_set_strategy": "doc",
    "tensorflow.compat.v1.distribute.MirroredStrategy": "doc",
    "tensorflow.compat.v1.distribute.StrategyExtended": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver": "doc",
    "tensorflow.distribute.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.compat.v1.distribute.OneDeviceStrategy": "doc",
    "tensorflow.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.compat.v1.distribute.get_loss_reduction": "doc",
    "tensorflow.compat.v1.distribute.get_replica_context": "doc",
    "tensorflow.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.compat.v1.distribute.InputReplicationMode": "doc",
    "tensorflow.compat.v1.distribute.ReductionToOneDevice": "doc",
    "tensorflow.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.compat.v1.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.compat.v1.distribute.in_cross_replica_context": "doc",
    "tensorflow.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.compat.v1.data.experimental.service.distribute": "doc",
    "tensorflow.compat.v1.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.compat.v1.distribute.experimental_set_strategy": "doc",
    "tensorflow.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.distribute.experimental.coordinator.RemoteValue": "doc",
    "tensorflow.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.distribute.experimental.partitioners.Partitioner": "doc",
    "tensorflow.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.distribute.experimental.coordinator.PerWorkerValues": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.distribute.experimental.coordinator.ClusterCoordinator": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.distribute.experimental.partitioners.MaxSizePartitioner": "doc",
    "tensorflow.distribute.experimental.partitioners.MinSizePartitioner": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.compat.v1.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.distribute.experimental.partitioners.FixedShardsPartitioner": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.compat.v1.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.nn.softsign": "doc",
    "tensorflow.math.softsign": "doc",
    "tensorflow.raw_ops.AsString": "doc",
    "tensorflow.raw_ops.Softsign": "doc",
    "tensorflow.initializers.Constant": "doc",
    "tensorflow.math.confusion_matrix": "doc",
    "tensorflow.compat.v1.nn.softsign": "doc",
    "tensorflow.compat.v1.math.softsign": "doc",
    "tensorflow.keras.activations.softsign": "doc",
    "tensorflow.compat.v1.confusion_matrix": "doc",
    "tensorflow.experimental.numpy.compress": "doc",
    "tensorflow.keras.initializers.Constant": "doc",
    "tensorflow.compat.v1.math.confusion_matrix": "doc",
    "tensorflow.compat.v1.keras.activations.softsign": "doc",
    "tensorflow.compat.v1.keras.initializers.Constant": "doc",
    "tensorflow.nn.convolution": "doc",
    "tensorflow.raw_ops.StringStrip": "doc",
    "tensorflow.compat.v1.count_up_to": "doc",
    "tensorflow.compat.v1.scatter_div": "doc",
    "tensorflow.compat.v1.scatter_min": "doc",
    "tensorflow.compat.v1.scatter_sub": "doc",
    "tensorflow.keras.layers.concatenate": "doc",
    "tensorflow.compat.v1.nn.convolution": "doc",
    "tensorflow.experimental.numpy.concatenate": "doc",
    "tensorflow.compat.v1.keras.layers.concatenate": "doc",
    "tensorflow.nn.conv_transpose": "doc",
    "tensorflow.linalg.lu_reconstruct": "doc",
    "tensorflow.raw_ops.ControlTrigger": "doc",
    "tensorflow.compat.v1.nn.conv_transpose": "doc",
    "tensorflow.compat.v1.linalg.lu_reconstruct": "doc",
    "tensorflow.as_string": "doc",
    "tensorflow.sysconfig": "doc",
    "tensorflow.train.FloatList": "doc",
    "tensorflow.raw_ops.CountUpTo": "doc",
    "tensorflow.raw_ops.DecodeGif": "doc",
    "tensorflow.raw_ops.ScatterNd": "doc",
    "tensorflow.strings.as_string": "doc",
    "tensorflow.summary.record_if": "doc",
    "tensorflow.sysconfig.get_lib": "doc",
    "tensorflow.image.central_crop": "doc",
    "tensorflow.compat.v1.as_string": "doc",
    "tensorflow.compat.v1.sysconfig": "doc",
    "tensorflow.raw_ops.ScatterNdMin": "doc",
    "tensorflow.raw_ops.ScatterNdSub": "doc",
    "tensorflow.image.adjust_contrast": "doc",
    "tensorflow.image.crop_and_resize": "doc",
    "tensorflow.image.random_contrast": "doc",
    "tensorflow.sysconfig.get_include": "doc",
    "tensorflow.compat.v1.string_strip": "doc",
    "tensorflow.sysconfig.get_build_info": "doc",
    "tensorflow.sysconfig.get_link_flags": "doc",
    "tensorflow.compat.v1.train.FloatList": "doc",
    "tensorflow.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.compat.v1.dtypes.as_string": "doc",
    "tensorflow.sysconfig.get_compile_flags": "doc",
    "tensorflow.compat.v1.strings.as_string": "doc",
    "tensorflow.compat.v1.sysconfig.get_lib": "doc",
    "tensorflow.experimental.numpy.conjugate": "doc",
    "tensorflow.compat.v1.image.central_crop": "doc",
    "tensorflow.experimental.tensorrt.Converter": "doc",
    "tensorflow.compat.v1.image.adjust_contrast": "doc",
    "tensorflow.compat.v1.image.crop_and_resize": "doc",
    "tensorflow.compat.v1.image.random_contrast": "doc",
    "tensorflow.compat.v1.sysconfig.get_include": "doc",
    "tensorflow.compat.v1.sysconfig.get_build_info": "doc",
    "tensorflow.compat.v1.sysconfig.get_link_flags": "doc",
    "tensorflow.compat.v1.distributions.Distribution": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.compat.v1.sysconfig.get_compile_flags": "doc",
    "tensorflow.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.compat.v1.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.nn.conv1d_transpose": "doc",
    "tensorflow.nn.conv2d_transpose": "doc",
    "tensorflow.nn.conv3d_transpose": "doc",
    "tensorflow.test.compute_gradient": "doc",
    "tensorflow.compat.v1.nn.conv1d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv3d_transpose": "doc",
    "tensorflow.compat.v1.test.compute_gradient": "doc",
    "tensorflow.compat.v1.train.MonitoredSession": "doc",
    "tensorflow.compat.v1.layers.conv2d_transpose": "doc",
    "tensorflow.compat.v1.layers.conv3d_transpose": "doc",
    "tensorflow.mlir.experimental.convert_function": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_proximity": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine_proximity": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_function": "doc",
    "tensorflow.compat.v1.train.MonitoredSession.StepContext": "doc",
    "tensorflow.math.count_nonzero": "doc",
    "tensorflow.train.load_variable": "doc",
    "tensorflow.raw_ops.UnicodeScript": "doc",
    "tensorflow.compat.v1.colocate_with": "doc",
    "tensorflow.compat.v1.count_nonzero": "doc",
    "tensorflow.compat.v1.distributions": "doc",
    "tensorflow.compat.v1.distributions.Beta": "doc",
    "tensorflow.compat.v1.lite.TocoConverter": "doc",
    "tensorflow.compat.v1.math.count_nonzero": "doc",
    "tensorflow.compat.v1.distributions.Gamma": "doc",
    "tensorflow.compat.v1.train.load_variable": "doc",
    "tensorflow.compat.v1.distributions.Normal": "doc",
    "tensorflow.compat.v1.distributions.Laplace": "doc",
    "tensorflow.compat.v1.distributions.Uniform": "doc",
    "tensorflow.experimental.numpy.count_nonzero": "doc",
    "tensorflow.compat.v1.distributions.StudentT": "doc",
    "tensorflow.compat.v1.distributions.Bernoulli": "doc",
    "tensorflow.compat.v1.distributions.Dirichlet": "doc",
    "tensorflow.compat.v1.distributions.RegisterKL": "doc",
    "tensorflow.compat.v1.distributions.Categorical": "doc",
    "tensorflow.compat.v1.distributions.Exponential": "doc",
    "tensorflow.compat.v1.distributions.Multinomial": "doc",
    "tensorflow.compat.v1.saved_model.tag_constants": "doc",
    "tensorflow.compat.v1.distributions.kl_divergence": "doc",
    "tensorflow.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.compat.v1.distributions.DirichletMultinomial": "doc",
    "tensorflow.compat.v1.distributions.ReparameterizationType": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.scatter_nd": "doc",
    "tensorflow.io.decode_gif": "doc",
    "tensorflow.io.decode_raw": "doc",
    "tensorflow.image.decode_gif": "doc",
    "tensorflow.image.hsv_to_rgb": "doc",
    "tensorflow.image.yiq_to_rgb": "doc",
    "tensorflow.image.yuv_to_rgb": "doc",
    "tensorflow.raw_ops.ScatterAdd": "doc",
    "tensorflow.raw_ops.ScatterMax": "doc",
    "tensorflow.raw_ops.ScatterMul": "doc",
    "tensorflow.raw_ops.SdcaFprint": "doc",
    "tensorflow.raw_ops.SegmentMin": "doc",
    "tensorflow.UnconnectedGradients": "doc",
    "tensorflow.control_dependencies": "doc",
    "tensorflow.compat.v1.decode_raw": "doc",
    "tensorflow.compat.v1.scatter_nd": "doc",
    "tensorflow.compat.v1.io.decode_gif": "doc",
    "tensorflow.compat.v1.io.decode_raw": "doc",
    "tensorflow.compat.v1.image.decode_gif": "doc",
    "tensorflow.compat.v1.image.hsv_to_rgb": "doc",
    "tensorflow.compat.v1.image.yiq_to_rgb": "doc",
    "tensorflow.compat.v1.image.yuv_to_rgb": "doc",
    "tensorflow.compat.v1.manip.scatter_nd": "doc",
    "tensorflow.data.experimental.to_variant": "doc",
    "tensorflow.types.experimental.TensorLike": "doc",
    "tensorflow.compat.v1.UnconnectedGradients": "doc",
    "tensorflow.compat.v1.control_dependencies": "doc",
    "tensorflow.compat.v1.data.experimental.to_variant": "doc",
    "tensorflow.compat.v1.types.experimental.TensorLike": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.train.CheckpointOptions": "doc",
    "tensorflow.losses.cosine_similarity": "doc",
    "tensorflow.estimator.SecondOrStepTimer": "doc",
    "tensorflow.keras.losses.cosine_similarity": "doc",
    "tensorflow.compat.v1.train.CheckpointOptions": "doc",
    "tensorflow.compat.v1.train.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.train.checkpoint_exists": "doc",
    "tensorflow.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.experimental.numpy.ascontiguousarray": "doc",
    "tensorflow.compat.v1.estimator.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_similarity": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.cos": "doc",
    "tensorflow.cast": "doc",
    "tensorflow.cosh": "doc",
    "tensorflow.norm": "doc",
    "tensorflow.ones": "doc",
    "tensorflow.sort": "doc",
    "tensorflow.foldr": "doc",
    "tensorflow.train": "doc",
    "tensorflow.compat": "doc",
    "tensorflow.complex": "doc",
    "tensorflow.metrics": "doc",
    "tensorflow.math.cos": "doc",
    "tensorflow.math.ceil": "doc",
    "tensorflow.math.cosh": "doc",
    "tensorflow.math.rint": "doc",
    "tensorflow.compat.v1": "doc",
    "tensorflow.image.psnr": "doc",
    "tensorflow.nn.softmax": "doc",
    "tensorflow.dtypes.cast": "doc",
    "tensorflow.image.rot90": "doc",
    "tensorflow.linalg.norm": "doc",
    "tensorflow.metrics.AUC": "doc",
    "tensorflow.metrics.KLD": "doc",
    "tensorflow.metrics.MAE": "doc",
    "tensorflow.metrics.MSE": "doc",
    "tensorflow.metrics.Sum": "doc",
    "tensorflow.metrics.get": "doc",
    "tensorflow.metrics.kld": "doc",
    "tensorflow.metrics.mae": "doc",
    "tensorflow.metrics.mse": "doc",
    "tensorflow.raw_ops.For": "doc",
    "tensorflow.linalg.cross": "doc",
    "tensorflow.math.cumprod": "doc",
    "tensorflow.math.softmax": "doc",
    "tensorflow.metrics.MAPE": "doc",
    "tensorflow.metrics.MSLE": "doc",
    "tensorflow.metrics.Mean": "doc",
    "tensorflow.metrics.mape": "doc",
    "tensorflow.metrics.msle": "doc",
    "tensorflow.ragged.cross": "doc",
    "tensorflow.raw_ops.Conj": "doc",
    "tensorflow.raw_ops.Rint": "doc",
    "tensorflow.sparse.cross": "doc",
    "tensorflow.strings.join": "doc",
    "tensorflow.train.JobDef": "doc",
    "tensorflow.compat.v1.io": "doc",
    "tensorflow.compat.v1.nn": "doc",
    "tensorflow.compat.v1.qr": "doc",
    "tensorflow.compat.as_str": "doc",
    "tensorflow.io.gfile.copy": "doc",
    "tensorflow.keras.metrics": "doc",
    "tensorflow.metrics.Hinge": "doc",
    "tensorflow.metrics.hinge": "doc",
    "tensorflow.raw_ops.Const": "doc",
    "tensorflow.raw_ops.Enter": "doc",
    "tensorflow.sparse.retain": "doc",
    "tensorflow.strings.lower": "doc",
    "tensorflow.train.Example": "doc",
    "tensorflow.train.Feature": "doc",
    "tensorflow.compat.v1.abs": "doc",
    "tensorflow.compat.v1.add": "doc",
    "tensorflow.compat.v1.app": "doc",
    "tensorflow.compat.v1.cos": "doc",
    "tensorflow.compat.v1.div": "doc",
    "tensorflow.compat.v1.erf": "doc",
    "tensorflow.compat.v1.exp": "doc",
    "tensorflow.compat.v1.eye": "doc",
    "tensorflow.compat.v1.fft": "doc",
    "tensorflow.compat.v1.log": "doc",
    "tensorflow.compat.v1.mod": "doc",
    "tensorflow.compat.v1.pad": "doc",
    "tensorflow.compat.v1.pow": "doc",
    "tensorflow.compat.v1.sin": "doc",
    "tensorflow.compat.v1.svd": "doc",
    "tensorflow.compat.v1.tan": "doc",
    "tensorflow.compat.v1.tpu": "doc",
    "tensorflow.compat.v1.xla": "doc",
    "tensorflow.compat.as_text": "doc",
    "tensorflow.dtypes.complex": "doc",
    "tensorflow.metrics.Recall": "doc",
    "tensorflow.raw_ops.Concat": "doc",
    "tensorflow.raw_ops.Conv2D": "doc",
    "tensorflow.raw_ops.Conv3D": "doc",
    "tensorflow.recompute_grad": "doc",
    "tensorflow.sparse.softmax": "doc",
    "tensorflow.train.Features": "doc",
    "tensorflow.compat.v1.acos": "doc",
    "tensorflow.compat.v1.asin": "doc",
    "tensorflow.compat.v1.atan": "doc",
    "tensorflow.compat.v1.case": "doc",
    "tensorflow.compat.v1.cast": "doc",
    "tensorflow.compat.v1.ceil": "doc",
    "tensorflow.compat.v1.cosh": "doc",
    "tensorflow.compat.v1.data": "doc",
    "tensorflow.compat.v1.diag": "doc",
    "tensorflow.compat.v1.erfc": "doc",
    "tensorflow.compat.v1.fill": "doc",
    "tensorflow.compat.v1.ifft": "doc",
    "tensorflow.compat.v1.imag": "doc",
    "tensorflow.compat.v1.less": "doc",
    "tensorflow.compat.v1.lite": "doc",
    "tensorflow.compat.v1.math": "doc",
    "tensorflow.compat.v1.mlir": "doc",
    "tensorflow.compat.v1.nest": "doc",
    "tensorflow.compat.v1.norm": "doc",
    "tensorflow.compat.v1.ones": "doc",
    "tensorflow.compat.v1.rank": "doc",
    "tensorflow.compat.v1.real": "doc",
    "tensorflow.compat.v1.rint": "doc",
    "tensorflow.compat.v1.roll": "doc",
    "tensorflow.compat.v1.scan": "doc",
    "tensorflow.compat.v1.sets": "doc",
    "tensorflow.compat.v1.sign": "doc",
    "tensorflow.compat.v1.sinh": "doc",
    "tensorflow.compat.v1.size": "doc",
    "tensorflow.compat.v1.sort": "doc",
    "tensorflow.compat.v1.sqrt": "doc",
    "tensorflow.compat.v1.tanh": "doc",
    "tensorflow.compat.v1.test": "doc",
    "tensorflow.compat.v1.tile": "doc",
    "tensorflow.compat.v1.zeta": "doc",
    "tensorflow.compat.as_bytes": "doc",
    "tensorflow.io.gfile.rmtree": "doc",
    "tensorflow.metrics.MeanIoU": "doc",
    "tensorflow.metrics.Poisson": "doc",
    "tensorflow.metrics.logcosh": "doc",
    "tensorflow.metrics.poisson": "doc",
    "tensorflow.optimizers.Ftrl": "doc",
    "tensorflow.raw_ops.Softmax": "doc",
    "tensorflow.train.BytesList": "doc",
    "tensorflow.train.Int64List": "doc",
    "tensorflow.train.ServerDef": "doc",
    "tensorflow.compat.v1.DType": "doc",
    "tensorflow.compat.v1.Event": "doc",
    "tensorflow.compat.v1.Graph": "doc",
    "tensorflow.compat.v1.Print": "doc",
    "tensorflow.compat.v1.acosh": "doc",
    "tensorflow.compat.v1.add_n": "doc",
    "tensorflow.compat.v1.angle": "doc",
    "tensorflow.compat.v1.asinh": "doc",
    "tensorflow.compat.v1.atan2": "doc",
    "tensorflow.compat.v1.atanh": "doc",
    "tensorflow.compat.v1.audio": "doc",
    "tensorflow.compat.v1.cross": "doc",
    "tensorflow.compat.v1.equal": "doc",
    "tensorflow.compat.v1.expm1": "doc",
    "tensorflow.compat.v1.fft2d": "doc",
    "tensorflow.compat.v1.fft3d": "doc",
    "tensorflow.compat.v1.flags": "doc",
    "tensorflow.compat.v1.floor": "doc",
    "tensorflow.compat.v1.foldl": "doc",
    "tensorflow.compat.v1.foldr": "doc",
    "tensorflow.compat.v1.gfile": "doc",
    "tensorflow.compat.v1.group": "doc",
    "tensorflow.compat.v1.image": "doc",
    "tensorflow.compat.v1.keras": "doc",
    "tensorflow.compat.v1.lbeta": "doc",
    "tensorflow.compat.v1.log1p": "doc",
    "tensorflow.compat.v1.manip": "doc",
    "tensorflow.compat.v1.no_op": "doc",
    "tensorflow.compat.v1.print": "doc",
    "tensorflow.compat.v1.queue": "doc",
    "tensorflow.compat.v1.range": "doc",
    "tensorflow.compat.v1.round": "doc",
    "tensorflow.compat.v1.rsqrt": "doc",
    "tensorflow.compat.v1.shape": "doc",
    "tensorflow.compat.v1.slice": "doc",
    "tensorflow.compat.v1.split": "doc",
    "tensorflow.compat.v1.stack": "doc",
    "tensorflow.compat.v1.trace": "doc",
    "tensorflow.compat.v1.train": "doc",
    "tensorflow.compat.v1.tuple": "doc",
    "tensorflow.compat.v1.types": "doc",
    "tensorflow.compat.v1.where": "doc",
    "tensorflow.compat.v1.zeros": "doc",
    "tensorflow.io.gfile.listdir": "doc",
    "tensorflow.keras.layers.Dot": "doc",
    "tensorflow.keras.layers.dot": "doc",
    "tensorflow.metrics.Accuracy": "doc",
    "tensorflow.metrics.log_cosh": "doc",
    "tensorflow.train.Checkpoint": "doc",
    "tensorflow.train.ClusterDef": "doc",
    "tensorflow.compat.v1.Assert": "doc",
    "tensorflow.compat.v1.Module": "doc",
    "tensorflow.compat.v1.Tensor": "doc",
    "tensorflow.compat.v1.argmax": "doc",
    "tensorflow.compat.v1.argmin": "doc",
    "tensorflow.compat.v1.assign": "doc",
    "tensorflow.compat.v1.compat": "doc",
    "tensorflow.compat.v1.cumsum": "doc",
    "tensorflow.compat.v1.device": "doc",
    "tensorflow.compat.v1.divide": "doc",
    "tensorflow.compat.v1.dtypes": "doc",
    "tensorflow.compat.v1.einsum": "doc",
    "tensorflow.compat.v1.errors": "doc",
    "tensorflow.compat.v1.gather": "doc",
    "tensorflow.compat.v1.ifft2d": "doc",
    "tensorflow.compat.v1.ifft3d": "doc",
    "tensorflow.compat.v1.igamma": "doc",
    "tensorflow.compat.v1.is_inf": "doc",
    "tensorflow.compat.v1.is_nan": "doc",
    "tensorflow.compat.v1.layers": "doc",
    "tensorflow.compat.v1.lgamma": "doc",
    "tensorflow.compat.v1.linalg": "doc",
    "tensorflow.compat.v1.lookup": "doc",
    "tensorflow.compat.v1.losses": "doc",
    "tensorflow.compat.v1.map_fn": "doc",
    "tensorflow.compat.v1.matmul": "doc",
    "tensorflow.compat.v1.nn.elu": "doc",
    "tensorflow.compat.v1.nn.lrn": "doc",
    "tensorflow.compat.v1.ragged": "doc",
    "tensorflow.compat.v1.random": "doc",
    "tensorflow.compat.v1.repeat": "doc",
    "tensorflow.compat.v1.signal": "doc",
    "tensorflow.compat.v1.sparse": "doc",
    "tensorflow.compat.v1.square": "doc",
    "tensorflow.compat.v1.substr": "doc",
    "tensorflow.compat.v1.unique": "doc",
    "tensorflow.compat.as_str_any": "doc",
    "tensorflow.initializers.ones": "doc",
    "tensorflow.io.TFRecordWriter": "doc",
    "tensorflow.keras.metrics.AUC": "doc",
    "tensorflow.keras.metrics.KLD": "doc",
    "tensorflow.keras.metrics.MAE": "doc",
    "tensorflow.keras.metrics.MSE": "doc",
    "tensorflow.keras.metrics.Sum": "doc",
    "tensorflow.keras.metrics.get": "doc",
    "tensorflow.keras.metrics.kld": "doc",
    "tensorflow.keras.metrics.mae": "doc",
    "tensorflow.keras.metrics.mse": "doc",
    "tensorflow.metrics.Precision": "doc",
    "tensorflow.metrics.serialize": "doc",
    "tensorflow.train.ClusterSpec": "doc",
    "tensorflow.train.Coordinator": "doc",
    "tensorflow.train.FeatureList": "doc",
    "tensorflow.compat.v1.NodeDef": "doc",
    "tensorflow.compat.v1.OpError": "doc",
    "tensorflow.compat.v1.Session": "doc",
    "tensorflow.compat.v1.Summary": "doc",
    "tensorflow.compat.v1.app.run": "doc",
    "tensorflow.compat.v1.arg_max": "doc",
    "tensorflow.compat.v1.arg_min": "doc",
    "tensorflow.compat.v1.argsort": "doc",
    "tensorflow.compat.v1.betainc": "doc",
    "tensorflow.compat.v1.bitcast": "doc",
    "tensorflow.compat.v1.bitwise": "doc",
    "tensorflow.compat.v1.complex": "doc",
    "tensorflow.compat.v1.cumprod": "doc",
    "tensorflow.compat.v1.digamma": "doc",
    "tensorflow.compat.v1.greater": "doc",
    "tensorflow.compat.v1.igammac": "doc",
    "tensorflow.compat.v1.logging": "doc",
    "tensorflow.compat.v1.maximum": "doc",
    "tensorflow.compat.v1.metrics": "doc",
    "tensorflow.compat.v1.minimum": "doc",
    "tensorflow.compat.v1.nn.pool": "doc",
    "tensorflow.compat.v1.nn.relu": "doc",
    "tensorflow.compat.v1.nn.selu": "doc",
    "tensorflow.compat.v1.nn.silu": "doc",
    "tensorflow.compat.v1.nn.tanh": "doc",
    "tensorflow.compat.v1.one_hot": "doc",
    "tensorflow.compat.v1.py_func": "doc",
    "tensorflow.compat.v1.realdiv": "doc",
    "tensorflow.compat.v1.reshape": "doc",
    "tensorflow.compat.v1.reverse": "doc",
    "tensorflow.compat.v1.shape_n": "doc",
    "tensorflow.compat.v1.sigmoid": "doc",
    "tensorflow.compat.v1.squeeze": "doc",
    "tensorflow.compat.v1.strings": "doc",
    "tensorflow.compat.v1.summary": "doc",
    "tensorflow.compat.v1.truediv": "doc",
    "tensorflow.compat.v1.unstack": "doc",
    "tensorflow.compat.v1.version": "doc",
    "tensorflow.compat.path_to_str": "doc",
    "tensorflow.keras.metrics.MAPE": "doc",
    "tensorflow.keras.metrics.MSLE": "doc",
    "tensorflow.keras.metrics.Mean": "doc",
    "tensorflow.keras.metrics.mape": "doc",
    "tensorflow.keras.metrics.msle": "doc",
    "tensorflow.metrics.MeanTensor": "doc",
    "tensorflow.train.FeatureLists": "doc",
    "tensorflow.train.experimental": "doc",
    "tensorflow.compat.v1.GraphDef": "doc",
    "tensorflow.compat.v1.TypeSpec": "doc",
    "tensorflow.compat.v1.Variable": "doc",
    "tensorflow.compat.v1.as_dtype": "doc",
    "tensorflow.compat.v1.bincount": "doc",
    "tensorflow.compat.v1.cholesky": "doc",
    "tensorflow.compat.v1.floordiv": "doc",
    "tensorflow.compat.v1.floormod": "doc",
    "tensorflow.compat.v1.function": "doc",
    "tensorflow.compat.v1.get_seed": "doc",
    "tensorflow.compat.v1.hessians": "doc",
    "tensorflow.compat.v1.identity": "doc",
    "tensorflow.compat.v1.io.gfile": "doc",
    "tensorflow.compat.v1.linspace": "doc",
    "tensorflow.compat.v1.math.abs": "doc",
    "tensorflow.compat.v1.math.add": "doc",
    "tensorflow.compat.v1.math.cos": "doc",
    "tensorflow.compat.v1.math.erf": "doc",
    "tensorflow.compat.v1.math.exp": "doc",
    "tensorflow.compat.v1.math.log": "doc",
    "tensorflow.compat.v1.math.mod": "doc",
    "tensorflow.compat.v1.math.pow": "doc",
    "tensorflow.compat.v1.math.sin": "doc",
    "tensorflow.compat.v1.math.tan": "doc",
    "tensorflow.compat.v1.meshgrid": "doc",
    "tensorflow.compat.v1.multiply": "doc",
    "tensorflow.compat.v1.negative": "doc",
    "tensorflow.compat.v1.nn.crelu": "doc",
    "tensorflow.compat.v1.nn.relu6": "doc",
    "tensorflow.compat.v1.nn.swish": "doc",
    "tensorflow.compat.v1.nn.top_k": "doc",
    "tensorflow.compat.v1.op_scope": "doc",
    "tensorflow.compat.v1.profiler": "doc",
    "tensorflow.compat.v1.quantize": "doc",
    "tensorflow.compat.v1.spectral": "doc",
    "tensorflow.compat.v1.subtract": "doc",
    "tensorflow.compat.v1.to_float": "doc",
    "tensorflow.compat.v1.to_int32": "doc",
    "tensorflow.compat.v1.to_int64": "doc",
    "tensorflow.compat.v1.user_ops": "doc",
    "tensorflow.compat.v1.where_v2": "doc",
    "tensorflow.keras.layers.Conv1D": "doc",
    "tensorflow.keras.layers.Conv2D": "doc",
    "tensorflow.keras.layers.Conv3D": "doc",
    "tensorflow.keras.metrics.Hinge": "doc",
    "tensorflow.keras.metrics.hinge": "doc",
    "tensorflow.metrics.deserialize": "doc",
    "tensorflow.compat.v1.AttrValue": "doc",
    "tensorflow.compat.v1.Dimension": "doc",
    "tensorflow.compat.v1.FIFOQueue": "doc",
    "tensorflow.compat.v1.GraphKeys": "doc",
    "tensorflow.compat.v1.Operation": "doc",
    "tensorflow.compat.v1.QueueBase": "doc",
    "tensorflow.compat.v1.app.flags": "doc",
    "tensorflow.compat.v1.autograph": "doc",
    "tensorflow.compat.v1.debugging": "doc",
    "tensorflow.compat.v1.diag_part": "doc",
    "tensorflow.compat.v1.estimator": "doc",
    "tensorflow.compat.v1.floor_div": "doc",
    "tensorflow.compat.v1.gather_nd": "doc",
    "tensorflow.compat.v1.gradients": "doc",
    "tensorflow.compat.v1.is_finite": "doc",
    "tensorflow.compat.v1.is_tensor": "doc",
    "tensorflow.compat.v1.lin_space": "doc",
    "tensorflow.compat.v1.linalg.lu": "doc",
    "tensorflow.compat.v1.linalg.qr": "doc",
    "tensorflow.compat.v1.math.acos": "doc",
    "tensorflow.compat.v1.math.asin": "doc",
    "tensorflow.compat.v1.math.atan": "doc",
    "tensorflow.compat.v1.math.ceil": "doc",
    "tensorflow.compat.v1.math.cosh": "doc",
    "tensorflow.compat.v1.math.erfc": "doc",
    "tensorflow.compat.v1.math.imag": "doc",
    "tensorflow.compat.v1.math.less": "doc",
    "tensorflow.compat.v1.math.real": "doc",
    "tensorflow.compat.v1.math.rint": "doc",
    "tensorflow.compat.v1.math.sign": "doc",
    "tensorflow.compat.v1.math.sinh": "doc",
    "tensorflow.compat.v1.math.sqrt": "doc",
    "tensorflow.compat.v1.math.tanh": "doc",
    "tensorflow.compat.v1.math.zeta": "doc",
    "tensorflow.compat.v1.not_equal": "doc",
    "tensorflow.compat.v1.ones_like": "doc",
    "tensorflow.compat.v1.polygamma": "doc",
    "tensorflow.compat.v1.python_io": "doc",
    "tensorflow.compat.v1.read_file": "doc",
    "tensorflow.compat.v1.setdiff1d": "doc",
    "tensorflow.compat.v1.sets.size": "doc",
    "tensorflow.compat.v1.tensordot": "doc",
    "tensorflow.compat.v1.test.main": "doc",
    "tensorflow.compat.v1.timestamp": "doc",
    "tensorflow.compat.v1.to_double": "doc",
    "tensorflow.compat.v1.tpu.shard": "doc",
    "tensorflow.compat.v1.transpose": "doc",
    "tensorflow.keras.layers.Softmax": "doc",
    "tensorflow.keras.metrics.Recall": "doc",
    "tensorflow.metrics.KLDivergence": "doc",
    "tensorflow.metrics.LogCoshError": "doc",
    "tensorflow.metrics.SquaredHinge": "doc",
    "tensorflow.train.list_variables": "doc",
    "tensorflow.compat.v1.DeviceSpec": "doc",
    "tensorflow.compat.v1.GPUOptions": "doc",
    "tensorflow.compat.v1.LMDBReader": "doc",
    "tensorflow.compat.v1.LogMessage": "doc",
    "tensorflow.compat.v1.NoGradient": "doc",
    "tensorflow.compat.v1.ReaderBase": "doc",
    "tensorflow.compat.v1.RunOptions": "doc",
    "tensorflow.compat.v1.SessionLog": "doc",
    "tensorflow.compat.v1.TensorInfo": "doc",
    "tensorflow.compat.v1.TensorSpec": "doc",
    "tensorflow.compat.v1.assign_add": "doc",
    "tensorflow.compat.v1.assign_sub": "doc",
    "tensorflow.compat.v1.decode_csv": "doc",
    "tensorflow.compat.v1.dequantize": "doc",
    "tensorflow.compat.v1.div_no_nan": "doc",
    "tensorflow.compat.v1.flags.Flag": "doc",
    "tensorflow.compat.v1.get_logger": "doc",
    "tensorflow.compat.v1.gfile.Copy": "doc",
    "tensorflow.compat.v1.gfile.Glob": "doc",
    "tensorflow.compat.v1.gfile.Open": "doc",
    "tensorflow.compat.v1.gfile.Stat": "doc",
    "tensorflow.compat.v1.gfile.Walk": "doc",
    "tensorflow.compat.v1.graph_util": "doc",
    "tensorflow.compat.v1.identity_n": "doc",
    "tensorflow.compat.v1.image.psnr": "doc",
    "tensorflow.compat.v1.image.ssim": "doc",
    "tensorflow.compat.v1.init_scope": "doc",
    "tensorflow.compat.v1.io.is_jpeg": "doc",
    "tensorflow.compat.v1.less_equal": "doc",
    "tensorflow.compat.v1.linalg.det": "doc",
    "tensorflow.compat.v1.linalg.eye": "doc",
    "tensorflow.compat.v1.linalg.inv": "doc",
    "tensorflow.compat.v1.linalg.svd": "doc",
    "tensorflow.compat.v1.logical_or": "doc",
    "tensorflow.compat.v1.manip.roll": "doc",
    "tensorflow.compat.v1.manip.tile": "doc",
    "tensorflow.compat.v1.math.acosh": "doc",
    "tensorflow.compat.v1.math.add_n": "doc",
    "tensorflow.compat.v1.math.angle": "doc",
    "tensorflow.compat.v1.math.asinh": "doc",
    "tensorflow.compat.v1.math.atan2": "doc",
    "tensorflow.compat.v1.math.atanh": "doc",
    "tensorflow.compat.v1.math.equal": "doc",
    "tensorflow.compat.v1.math.expm1": "doc",
    "tensorflow.compat.v1.math.floor": "doc",
    "tensorflow.compat.v1.math.lbeta": "doc",
    "tensorflow.compat.v1.math.log1p": "doc",
    "tensorflow.compat.v1.math.round": "doc",
    "tensorflow.compat.v1.math.rsqrt": "doc",
    "tensorflow.compat.v1.math.top_k": "doc",
    "tensorflow.compat.v1.math.xdivy": "doc",
    "tensorflow.compat.v1.math.xlogy": "doc",
    "tensorflow.compat.v1.name_scope": "doc",
    "tensorflow.compat.v1.nn.dropout": "doc",
    "tensorflow.compat.v1.nn.l2_loss": "doc",
    "tensorflow.compat.v1.nn.moments": "doc",
    "tensorflow.compat.v1.nn.raw_rnn": "doc",
    "tensorflow.compat.v1.nn.sigmoid": "doc",
    "tensorflow.compat.v1.nn.softmax": "doc",
    "tensorflow.compat.v1.reciprocal": "doc",
    "tensorflow.compat.v1.reduce_all": "doc",
    "tensorflow.compat.v1.reduce_any": "doc",
    "tensorflow.compat.v1.reduce_max": "doc",
    "tensorflow.compat.v1.reduce_min": "doc",
    "tensorflow.compat.v1.reduce_sum": "doc",
    "tensorflow.compat.v1.reverse_v2": "doc",
    "tensorflow.compat.v1.scalar_mul": "doc",
    "tensorflow.compat.v1.sets.union": "doc",
    "tensorflow.compat.v1.signal.dct": "doc",
    "tensorflow.compat.v1.signal.fft": "doc",
    "tensorflow.compat.v1.sparse.add": "doc",
    "tensorflow.compat.v1.sparse.eye": "doc",
    "tensorflow.compat.v1.sparse_add": "doc",
    "tensorflow.compat.v1.while_loop": "doc",
    "tensorflow.compat.v1.write_file": "doc",
    "tensorflow.compat.v1.zeros_like": "doc",
    "tensorflow.keras.metrics.MeanIoU": "doc",
    "tensorflow.keras.metrics.Poisson": "doc",
    "tensorflow.keras.metrics.logcosh": "doc",
    "tensorflow.keras.metrics.poisson": "doc",
    "tensorflow.keras.optimizers.Ftrl": "doc",
    "tensorflow.metrics.TrueNegatives": "doc",
    "tensorflow.metrics.TruePositives": "doc",
    "tensorflow.metrics.kl_divergence": "doc",
    "tensorflow.metrics.squared_hinge": "doc",
    "tensorflow.train.SequenceExample": "doc",
    "tensorflow.train.load_checkpoint": "doc",
    "tensorflow.compat.v1.ConfigProto": "doc",
    "tensorflow.compat.v1.RunMetadata": "doc",
    "tensorflow.compat.v1.TensorArray": "doc",
    "tensorflow.compat.v1.TensorShape": "doc",
    "tensorflow.compat.v1.assert_less": "doc",
    "tensorflow.compat.v1.assert_near": "doc",
    "tensorflow.compat.v1.assert_rank": "doc",
    "tensorflow.compat.v1.assert_type": "doc",
    "tensorflow.compat.v1.dtypes.cast": "doc",
    "tensorflow.compat.v1.expand_dims": "doc",
    "tensorflow.compat.v1.fingerprint": "doc",
    "tensorflow.compat.v1.flags.Error": "doc",
    "tensorflow.compat.v1.flags.FLAGS": "doc",
    "tensorflow.compat.v1.gfile.GFile": "doc",
    "tensorflow.compat.v1.gfile.MkDir": "doc",
    "tensorflow.compat.v1.global_norm": "doc",
    "tensorflow.compat.v1.image.rot90": "doc",
    "tensorflow.compat.v1.keras.Input": "doc",
    "tensorflow.compat.v1.keras.Model": "doc",
    "tensorflow.compat.v1.keras.utils": "doc",
    "tensorflow.compat.v1.linalg.diag": "doc",
    "tensorflow.compat.v1.linalg.eigh": "doc",
    "tensorflow.compat.v1.linalg.expm": "doc",
    "tensorflow.compat.v1.linalg.logm": "doc",
    "tensorflow.compat.v1.linalg.norm": "doc",
    "tensorflow.compat.v1.linalg.pinv": "doc",
    "tensorflow.compat.v1.lite.OpHint": "doc",
    "tensorflow.compat.v1.lite.OpsSet": "doc",
    "tensorflow.compat.v1.log_sigmoid": "doc",
    "tensorflow.compat.v1.logging.log": "doc",
    "tensorflow.compat.v1.logical_and": "doc",
    "tensorflow.compat.v1.logical_not": "doc",
    "tensorflow.compat.v1.logical_xor": "doc",
    "tensorflow.compat.v1.math.argmax": "doc",
    "tensorflow.compat.v1.math.argmin": "doc",
    "tensorflow.compat.v1.math.cumsum": "doc",
    "tensorflow.compat.v1.math.divide": "doc",
    "tensorflow.compat.v1.math.erfinv": "doc",
    "tensorflow.compat.v1.math.igamma": "doc",
    "tensorflow.compat.v1.math.is_inf": "doc",
    "tensorflow.compat.v1.math.is_nan": "doc",
    "tensorflow.compat.v1.math.lgamma": "doc",
    "tensorflow.compat.v1.math.square": "doc",
    "tensorflow.compat.v1.matrix_diag": "doc",
    "tensorflow.compat.v1.metrics.auc": "doc",
    "tensorflow.compat.v1.multinomial": "doc",
    "tensorflow.compat.v1.nn.avg_pool": "doc",
    "tensorflow.compat.v1.nn.bias_add": "doc",
    "tensorflow.compat.v1.nn.ctc_loss": "doc",
    "tensorflow.compat.v1.nn.in_top_k": "doc",
    "tensorflow.compat.v1.nn.max_pool": "doc",
    "tensorflow.compat.v1.nn.nce_loss": "doc",
    "tensorflow.compat.v1.nn.rnn_cell": "doc",
    "tensorflow.compat.v1.nn.softplus": "doc",
    "tensorflow.compat.v1.no_gradient": "doc",
    "tensorflow.compat.v1.placeholder": "doc",
    "tensorflow.compat.v1.py_function": "doc",
    "tensorflow.compat.v1.quantize_v2": "doc",
    "tensorflow.compat.v1.random_crop": "doc",
    "tensorflow.compat.v1.reduce_join": "doc",
    "tensorflow.compat.v1.reduce_mean": "doc",
    "tensorflow.compat.v1.reduce_prod": "doc",
    "tensorflow.compat.v1.saved_model": "doc",
    "tensorflow.compat.v1.scatter_add": "doc",
    "tensorflow.compat.v1.scatter_max": "doc",
    "tensorflow.compat.v1.scatter_mul": "doc",
    "tensorflow.compat.v1.segment_max": "doc",
    "tensorflow.compat.v1.segment_min": "doc",
    "tensorflow.compat.v1.segment_sum": "doc",
    "tensorflow.compat.v1.signal.idct": "doc",
    "tensorflow.compat.v1.signal.ifft": "doc",
    "tensorflow.compat.v1.signal.mdct": "doc",
    "tensorflow.compat.v1.signal.rfft": "doc",
    "tensorflow.compat.v1.signal.stft": "doc",
    "tensorflow.compat.v1.sparse.mask": "doc",
    "tensorflow.compat.v1.sparse_mask": "doc",
    "tensorflow.compat.v1.string_join": "doc",
    "tensorflow.compat.v1.switch_case": "doc",
    "tensorflow.compat.v1.to_bfloat16": "doc",
    "tensorflow.compat.v1.tpu.rewrite": "doc",
    "tensorflow.compat.v1.train.Saver": "doc",
    "tensorflow.compat.v1.train.batch": "doc",
    "tensorflow.compat.v1.truncatediv": "doc",
    "tensorflow.compat.v1.truncatemod": "doc",
    "tensorflow.compat.dimension_value": "doc",
    "tensorflow.experimental.numpy.cos": "doc",
    "tensorflow.experimental.numpy.dot": "doc",
    "tensorflow.keras.datasets.cifar10": "doc",
    "tensorflow.keras.metrics.Accuracy": "doc",
    "tensorflow.keras.metrics.log_cosh": "doc",
    "tensorflow.metrics.BinaryAccuracy": "doc",
    "tensorflow.metrics.FalseNegatives": "doc",
    "tensorflow.metrics.FalsePositives": "doc",
    "tensorflow.raw_ops.AdjustContrast": "doc",
    "tensorflow.raw_ops.SelfAdjointEig": "doc",
    "tensorflow.strings.unicode_script": "doc",
    "tensorflow.compat.v1.GradientTape": "doc",
    "tensorflow.compat.v1.GraphOptions": "doc",
    "tensorflow.compat.v1.MetaGraphDef": "doc",
    "tensorflow.compat.v1.NameAttrList": "doc",
    "tensorflow.compat.v1.OptionalSpec": "doc",
    "tensorflow.compat.v1.RaggedTensor": "doc",
    "tensorflow.compat.v1.SparseTensor": "doc",
    "tensorflow.compat.v1.accumulate_n": "doc",
    "tensorflow.compat.v1.assert_equal": "doc",
    "tensorflow.compat.v1.batch_gather": "doc",
    "tensorflow.compat.v1.boolean_mask": "doc",
    "tensorflow.compat.v1.broadcast_to": "doc",
    "tensorflow.compat.v1.clip_by_norm": "doc",
    "tensorflow.compat.v1.data.Dataset": "doc",
    "tensorflow.compat.v1.data.Options": "doc",
    "tensorflow.compat.v1.dtypes.DType": "doc",
    "tensorflow.compat.v1.ensure_shape": "doc",
    "tensorflow.compat.v1.experimental": "doc",
    "tensorflow.compat.v1.flags.DEFINE": "doc",
    "tensorflow.compat.v1.get_variable": "doc",
    "tensorflow.compat.v1.gfile.Exists": "doc",
    "tensorflow.compat.v1.gfile.Remove": "doc",
    "tensorflow.compat.v1.gfile.Rename": "doc",
    "tensorflow.compat.v1.image.resize": "doc",
    "tensorflow.compat.v1.initializers": "doc",
    "tensorflow.compat.v1.io.QueueBase": "doc",
    "tensorflow.compat.v1.io.read_file": "doc",
    "tensorflow.compat.v1.keras.layers": "doc",
    "tensorflow.compat.v1.keras.losses": "doc",
    "tensorflow.compat.v1.keras.models": "doc",
    "tensorflow.compat.v1.layers.Dense": "doc",
    "tensorflow.compat.v1.layers.Layer": "doc",
    "tensorflow.compat.v1.layers.dense": "doc",
    "tensorflow.compat.v1.linalg.cross": "doc",
    "tensorflow.compat.v1.linalg.lstsq": "doc",
    "tensorflow.compat.v1.linalg.solve": "doc",
    "tensorflow.compat.v1.linalg.sqrtm": "doc",
    "tensorflow.compat.v1.linalg.trace": "doc",
    "tensorflow.compat.v1.load_library": "doc",
    "tensorflow.compat.v1.logging.info": "doc",
    "tensorflow.compat.v1.logging.vlog": "doc",
    "tensorflow.compat.v1.logging.warn": "doc",
    "tensorflow.compat.v1.make_ndarray": "doc",
    "tensorflow.compat.v1.math.betainc": "doc",
    "tensorflow.compat.v1.math.cumprod": "doc",
    "tensorflow.compat.v1.math.digamma": "doc",
    "tensorflow.compat.v1.math.erfcinv": "doc",
    "tensorflow.compat.v1.math.greater": "doc",
    "tensorflow.compat.v1.math.igammac": "doc",
    "tensorflow.compat.v1.math.maximum": "doc",
    "tensorflow.compat.v1.math.minimum": "doc",
    "tensorflow.compat.v1.math.polyval": "doc",
    "tensorflow.compat.v1.math.sigmoid": "doc",
    "tensorflow.compat.v1.math.softmax": "doc",
    "tensorflow.compat.v1.math.special": "doc",
    "tensorflow.compat.v1.math.truediv": "doc",
    "tensorflow.compat.v1.math.xlog1py": "doc",
    "tensorflow.compat.v1.matrix_solve": "doc",
    "tensorflow.compat.v1.metrics.mean": "doc",
    "tensorflow.compat.v1.nest.flatten": "doc",
    "tensorflow.compat.v1.nn.erosion2d": "doc",
    "tensorflow.compat.v1.nn.xw_plus_b": "doc",
    "tensorflow.compat.v1.parse_tensor": "doc",
    "tensorflow.compat.v1.quantization": "doc",
    "tensorflow.compat.v1.ragged.cross": "doc",
    "tensorflow.compat.v1.ragged.range": "doc",
    "tensorflow.compat.v1.ragged.stack": "doc",
    "tensorflow.compat.v1.random.gamma": "doc",
    "tensorflow.compat.v1.random_gamma": "doc",
    "tensorflow.compat.v1.searchsorted": "doc",
    "tensorflow.compat.v1.segment_mean": "doc",
    "tensorflow.compat.v1.segment_prod": "doc",
    "tensorflow.compat.v1.signal.fft2d": "doc",
    "tensorflow.compat.v1.signal.fft3d": "doc",
    "tensorflow.compat.v1.signal.frame": "doc",
    "tensorflow.compat.v1.signal.irfft": "doc",
    "tensorflow.compat.v1.sparse.cross": "doc",
    "tensorflow.compat.v1.sparse.merge": "doc",
    "tensorflow.compat.v1.sparse.slice": "doc",
    "tensorflow.compat.v1.sparse.split": "doc",
    "tensorflow.compat.v1.sparse_merge": "doc",
    "tensorflow.compat.v1.sparse_slice": "doc",
    "tensorflow.compat.v1.sparse_split": "doc",
    "tensorflow.compat.v1.spectral.dct": "doc",
    "tensorflow.compat.v1.spectral.fft": "doc",
    "tensorflow.compat.v1.string_split": "doc",
    "tensorflow.compat.v1.strings.join": "doc",
    "tensorflow.compat.v1.summary.text": "doc",
    "tensorflow.compat.v1.to_complex64": "doc",
    "tensorflow.compat.v1.train.JobDef": "doc",
    "tensorflow.compat.v1.train.Server": "doc",
    "tensorflow.experimental.numpy.cbrt": "doc",
    "tensorflow.experimental.numpy.ceil": "doc",
    "tensorflow.experimental.numpy.clip": "doc",
    "tensorflow.experimental.numpy.copy": "doc",
    "tensorflow.experimental.numpy.cosh": "doc",
    "tensorflow.experimental.numpy.int8": "doc",
    "tensorflow.experimental.numpy.int_": "doc",
    "tensorflow.experimental.numpy.ndim": "doc",
    "tensorflow.experimental.numpy.ones": "doc",
    "tensorflow.experimental.numpy.sort": "doc",
    "tensorflow.keras.initializers.ones": "doc",
    "tensorflow.keras.metrics.Precision": "doc",
    "tensorflow.keras.metrics.serialize": "doc",
    "tensorflow.metrics.binary_accuracy": "doc",
    "tensorflow.train.CheckpointManager": "doc",
    "tensorflow.train.JobDef.TasksEntry": "doc",
    "tensorflow.train.latest_checkpoint": "doc",
    "tensorflow.compat.v1.IndexedSlices": "doc",
    "tensorflow.compat.v1.PriorityQueue": "doc",
    "tensorflow.compat.v1.SparseFeature": "doc",
    "tensorflow.compat.v1.Summary.Audio": "doc",
    "tensorflow.compat.v1.Summary.Image": "doc",
    "tensorflow.compat.v1.Summary.Value": "doc",
    "tensorflow.compat.v1.VarLenFeature": "doc",
    "tensorflow.compat.v1.VariableScope": "doc",
    "tensorflow.compat.v1.all_variables": "doc",
    "tensorflow.compat.v1.assert_scalar": "doc",
    "tensorflow.compat.v1.clip_by_value": "doc",
    "tensorflow.compat.v1.compat.as_str": "doc",
    "tensorflow.compat.v1.data.Iterator": "doc",
    "tensorflow.compat.v1.decode_base64": "doc",
    "tensorflow.compat.v1.edit_distance": "doc",
    "tensorflow.compat.v1.encode_base64": "doc",
    "tensorflow.compat.v1.estimator.tpu": "doc",
    "tensorflow.compat.v1.greater_equal": "doc",
    "tensorflow.compat.v1.image.is_jpeg": "doc",
    "tensorflow.compat.v1.io.decode_bmp": "doc",
    "tensorflow.compat.v1.io.decode_csv": "doc",
    "tensorflow.compat.v1.io.decode_png": "doc",
    "tensorflow.compat.v1.io.encode_png": "doc",
    "tensorflow.compat.v1.io.gfile.copy": "doc",
    "tensorflow.compat.v1.io.gfile.glob": "doc",
    "tensorflow.compat.v1.io.gfile.stat": "doc",
    "tensorflow.compat.v1.io.gfile.walk": "doc",
    "tensorflow.compat.v1.io.write_file": "doc",
    "tensorflow.compat.v1.keras.backend": "doc",
    "tensorflow.compat.v1.keras.metrics": "doc",
    "tensorflow.compat.v1.layers.Conv1D": "doc",
    "tensorflow.compat.v1.layers.Conv2D": "doc",
    "tensorflow.compat.v1.layers.Conv3D": "doc",
    "tensorflow.compat.v1.linalg.einsum": "doc",
    "tensorflow.compat.v1.linalg.logdet": "doc",
    "tensorflow.compat.v1.linalg.matmul": "doc",
    "tensorflow.compat.v1.linalg.matvec": "doc",
    "tensorflow.compat.v1.lite.Optimize": "doc",
    "tensorflow.compat.v1.logging.debug": "doc",
    "tensorflow.compat.v1.logging.error": "doc",
    "tensorflow.compat.v1.logging.fatal": "doc",
    "tensorflow.compat.v1.logging.flush": "doc",
    "tensorflow.compat.v1.make_template": "doc",
    "tensorflow.compat.v1.manip.reshape": "doc",
    "tensorflow.compat.v1.manip.reverse": "doc",
    "tensorflow.compat.v1.math.bincount": "doc",
    "tensorflow.compat.v1.math.floordiv": "doc",
    "tensorflow.compat.v1.math.floormod": "doc",
    "tensorflow.compat.v1.math.in_top_k": "doc",
    "tensorflow.compat.v1.math.multiply": "doc",
    "tensorflow.compat.v1.math.negative": "doc",
    "tensorflow.compat.v1.math.softplus": "doc",
    "tensorflow.compat.v1.math.subtract": "doc",
    "tensorflow.compat.v1.nn.avg_pool1d": "doc",
    "tensorflow.compat.v1.nn.avg_pool2d": "doc",
    "tensorflow.compat.v1.nn.avg_pool3d": "doc",
    "tensorflow.compat.v1.nn.dilation2d": "doc",
    "tensorflow.compat.v1.nn.leaky_relu": "doc",
    "tensorflow.compat.v1.nn.max_pool1d": "doc",
    "tensorflow.compat.v1.nn.max_pool2d": "doc",
    "tensorflow.compat.v1.nn.max_pool3d": "doc",
    "tensorflow.compat.v1.nn.relu_layer": "doc",
    "tensorflow.compat.v1.nn.static_rnn": "doc",
    "tensorflow.compat.v1.parse_example": "doc",
    "tensorflow.compat.v1.random.normal": "doc",
    "tensorflow.compat.v1.random_normal": "doc",
    "tensorflow.compat.v1.regex_replace": "doc",
    "tensorflow.compat.v1.saturate_cast": "doc",
    "tensorflow.compat.v1.sequence_mask": "doc",
    "tensorflow.compat.v1.sets.set_size": "doc",
    "tensorflow.compat.v1.signal.ifft2d": "doc",
    "tensorflow.compat.v1.signal.ifft3d": "doc",
    "tensorflow.compat.v1.signal.rfft2d": "doc",
    "tensorflow.compat.v1.signal.rfft3d": "doc",
    "tensorflow.compat.v1.sparse.matmul": "doc",
    "tensorflow.compat.v1.sparse.retain": "doc",
    "tensorflow.compat.v1.sparse_concat": "doc",
    "tensorflow.compat.v1.sparse_matmul": "doc",
    "tensorflow.compat.v1.sparse_retain": "doc",
    "tensorflow.compat.v1.spectral.idct": "doc",
    "tensorflow.compat.v1.spectral.ifft": "doc",
    "tensorflow.compat.v1.spectral.rfft": "doc",
    "tensorflow.compat.v1.stop_gradient": "doc",
    "tensorflow.compat.v1.strided_slice": "doc",
    "tensorflow.compat.v1.strings.lower": "doc",
    "tensorflow.compat.v1.strings.split": "doc",
    "tensorflow.compat.v1.strings.upper": "doc",
    "tensorflow.compat.v1.summary.Event": "doc",
    "tensorflow.compat.v1.summary.audio": "doc",
    "tensorflow.compat.v1.summary.image": "doc",
    "tensorflow.compat.v1.summary.merge": "doc",
    "tensorflow.compat.v1.test.TestCase": "doc",
    "tensorflow.compat.v1.to_complex128": "doc",
    "tensorflow.compat.v1.tpu.replicate": "doc",
    "tensorflow.compat.v1.train.Example": "doc",
    "tensorflow.compat.v1.train.Feature": "doc",
    "tensorflow.compat.v1.unravel_index": "doc",
    "tensorflow.compat.v1.wrap_function": "doc",
    "tensorflow.debugging.check_numerics": "doc",
    "tensorflow.experimental.numpy.cross": "doc",
    "tensorflow.experimental.numpy.inner": "doc",
    "tensorflow.experimental.numpy.int16": "doc",
    "tensorflow.experimental.numpy.int32": "doc",
    "tensorflow.experimental.numpy.int64": "doc",
    "tensorflow.experimental.numpy.outer": "doc",
    "tensorflow.experimental.numpy.power": "doc",
    "tensorflow.experimental.numpy.rot90": "doc",
    "tensorflow.experimental.numpy.uint8": "doc",
    "tensorflow.keras.metrics.MeanTensor": "doc",
    "tensorflow.metrics.CategoricalHinge": "doc",
    "tensorflow.metrics.CosineSimilarity": "doc",
    "tensorflow.metrics.MeanSquaredError": "doc",
    "tensorflow.xla.experimental.compile": "doc",
    "tensorflow.compat.v1.HistogramProto": "doc",
    "tensorflow.compat.v1.IdentityReader": "doc",
    "tensorflow.compat.v1.TFRecordReader": "doc",
    "tensorflow.compat.v1.TextLineReader": "doc",
    "tensorflow.compat.v1.app.flags.Flag": "doc",
    "tensorflow.compat.v1.assert_greater": "doc",
    "tensorflow.compat.v1.assert_integer": "doc",
    "tensorflow.compat.v1.assert_rank_in": "doc",
    "tensorflow.compat.v1.batch_to_space": "doc",
    "tensorflow.compat.v1.bitwise.invert": "doc",
    "tensorflow.compat.v1.check_numerics": "doc",
    "tensorflow.compat.v1.cholesky_solve": "doc",
    "tensorflow.compat.v1.compat.as_text": "doc",
    "tensorflow.compat.v1.depth_to_space": "doc",
    "tensorflow.compat.v1.dtypes.complex": "doc",
    "tensorflow.compat.v1.dynamic_stitch": "doc",
    "tensorflow.compat.v1.errors.OpError": "doc",
    "tensorflow.compat.v1.estimator.Head": "doc",
    "tensorflow.compat.v1.feature_column": "doc",
    "tensorflow.compat.v1.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.get_collection": "doc",
    "tensorflow.compat.v1.gfile.MakeDirs": "doc",
    "tensorflow.compat.v1.io.decode_jpeg": "doc",
    "tensorflow.compat.v1.io.encode_jpeg": "doc",
    "tensorflow.compat.v1.io.gfile.GFile": "doc",
    "tensorflow.compat.v1.io.gfile.isdir": "doc",
    "tensorflow.compat.v1.io.gfile.mkdir": "doc",
    "tensorflow.compat.v1.io.write_graph": "doc",
    "tensorflow.compat.v1.keras.datasets": "doc",
    "tensorflow.compat.v1.keras.wrappers": "doc",
    "tensorflow.compat.v1.layers.Dropout": "doc",
    "tensorflow.compat.v1.layers.Flatten": "doc",
    "tensorflow.compat.v1.layers.dropout": "doc",
    "tensorflow.compat.v1.layers.flatten": "doc",
    "tensorflow.compat.v1.linalg.adjoint": "doc",
    "tensorflow.compat.v1.linalg.slogdet": "doc",
    "tensorflow.compat.v1.logging.log_if": "doc",
    "tensorflow.compat.v1.matching_files": "doc",
    "tensorflow.compat.v1.math.bessel_i0": "doc",
    "tensorflow.compat.v1.math.bessel_i1": "doc",
    "tensorflow.compat.v1.math.is_finite": "doc",
    "tensorflow.compat.v1.math.nextafter": "doc",
    "tensorflow.compat.v1.math.not_equal": "doc",
    "tensorflow.compat.v1.math.polygamma": "doc",
    "tensorflow.compat.v1.matrix_inverse": "doc",
    "tensorflow.compat.v1.metrics.recall": "doc",
    "tensorflow.compat.v1.nest.is_nested": "doc",
    "tensorflow.compat.v1.nn.avg_pool_v2": "doc",
    "tensorflow.compat.v1.nn.ctc_loss_v2": "doc",
    "tensorflow.compat.v1.nn.dynamic_rnn": "doc",
    "tensorflow.compat.v1.nn.log_softmax": "doc",
    "tensorflow.compat.v1.nn.max_pool_v2": "doc",
    "tensorflow.compat.v1.no_regularizer": "doc",
    "tensorflow.compat.v1.numpy_function": "doc",
    "tensorflow.compat.v1.parallel_stack": "doc",
    "tensorflow.compat.v1.random.poisson": "doc",
    "tensorflow.compat.v1.random.shuffle": "doc",
    "tensorflow.compat.v1.random.uniform": "doc",
    "tensorflow.compat.v1.random_poisson": "doc",
    "tensorflow.compat.v1.random_shuffle": "doc",
    "tensorflow.compat.v1.random_uniform": "doc",
    "tensorflow.compat.v1.recompute_grad": "doc",
    "tensorflow.compat.v1.scatter_nd_add": "doc",
    "tensorflow.compat.v1.scatter_nd_sub": "doc",
    "tensorflow.compat.v1.scatter_update": "doc",
    "tensorflow.compat.v1.sets.set_union": "doc",
    "tensorflow.compat.v1.signal.irfft2d": "doc",
    "tensorflow.compat.v1.signal.irfft3d": "doc",
    "tensorflow.compat.v1.space_to_batch": "doc",
    "tensorflow.compat.v1.space_to_depth": "doc",
    "tensorflow.compat.v1.sparse.maximum": "doc",
    "tensorflow.compat.v1.sparse.minimum": "doc",
    "tensorflow.compat.v1.sparse.reorder": "doc",
    "tensorflow.compat.v1.sparse.reshape": "doc",
    "tensorflow.compat.v1.sparse.softmax": "doc",
    "tensorflow.compat.v1.sparse_maximum": "doc",
    "tensorflow.compat.v1.sparse_minimum": "doc",
    "tensorflow.compat.v1.sparse_reorder": "doc",
    "tensorflow.compat.v1.sparse_reshape": "doc",
    "tensorflow.compat.v1.sparse_softmax": "doc",
    "tensorflow.compat.v1.spectral.fft2d": "doc",
    "tensorflow.compat.v1.spectral.fft3d": "doc",
    "tensorflow.compat.v1.spectral.irfft": "doc",
    "tensorflow.compat.v1.strings.format": "doc",
    "tensorflow.compat.v1.strings.length": "doc",
    "tensorflow.compat.v1.strings.ngrams": "doc",
    "tensorflow.compat.v1.strings.substr": "doc",
    "tensorflow.compat.v1.summary.scalar": "doc",
    "tensorflow.compat.v1.test.Benchmark": "doc",
    "tensorflow.compat.v1.tpu.XLAOptions": "doc",
    "tensorflow.compat.v1.train.Features": "doc",
    "tensorflow.compat.v1.train.SaverDef": "doc",
    "tensorflow.compat.v1.train.Scaffold": "doc",
    "tensorflow.compat.v1.variable_scope": "doc",
    "tensorflow.compat.v1.vectorized_map": "doc",
    "tensorflow.compat.dimension_at_index": "doc",
    "tensorflow.compat.forward_compatible": "doc",
    "tensorflow.data.experimental.Counter": "doc",
    "tensorflow.experimental.numpy.uint16": "doc",
    "tensorflow.experimental.numpy.uint32": "doc",
    "tensorflow.experimental.numpy.uint64": "doc",
    "tensorflow.keras.activations.softmax": "doc",
    "tensorflow.keras.metrics.deserialize": "doc",
    "tensorflow.metrics.MeanAbsoluteError": "doc",
    "tensorflow.metrics.MeanRelativeError": "doc",
    "tensorflow.metrics.PrecisionAtRecall": "doc",
    "tensorflow.metrics.RecallAtPrecision": "doc",
    "tensorflow.compat.v1.CriticalSection": "doc",
    "tensorflow.compat.v1.FixedLenFeature": "doc",
    "tensorflow.compat.v1.SummaryMetadata": "doc",
    "tensorflow.compat.v1.TensorArraySpec": "doc",
    "tensorflow.compat.v1.WholeFileReader": "doc",
    "tensorflow.compat.v1.app.flags.Error": "doc",
    "tensorflow.compat.v1.app.flags.FLAGS": "doc",
    "tensorflow.compat.v1.assert_negative": "doc",
    "tensorflow.compat.v1.assert_positive": "doc",
    "tensorflow.compat.v1.autograph.trace": "doc",
    "tensorflow.compat.v1.compat.as_bytes": "doc",
    "tensorflow.compat.v1.custom_gradient": "doc",
    "tensorflow.compat.v1.dimension_value": "doc",
    "tensorflow.compat.v1.dtypes.as_dtype": "doc",
    "tensorflow.compat.v1.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.flags.text_wrap": "doc",
    "tensorflow.compat.v1.flags.validator": "doc",
    "tensorflow.compat.v1.gfile.FastGFile": "doc",
    "tensorflow.compat.v1.guarantee_const": "doc",
    "tensorflow.compat.v1.image.transpose": "doc",
    "tensorflow.compat.v1.io.decode_image": "doc",
    "tensorflow.compat.v1.io.decode_proto": "doc",
    "tensorflow.compat.v1.io.encode_proto": "doc",
    "tensorflow.compat.v1.io.gfile.exists": "doc",
    "tensorflow.compat.v1.io.gfile.remove": "doc",
    "tensorflow.compat.v1.io.gfile.rename": "doc",
    "tensorflow.compat.v1.io.gfile.rmtree": "doc",
    "tensorflow.compat.v1.io.parse_tensor": "doc",
    "tensorflow.compat.v1.keras.callbacks": "doc",
    "tensorflow.compat.v1.keras.estimator": "doc",
    "tensorflow.compat.v1.linalg.cholesky": "doc",
    "tensorflow.compat.v1.linalg.eigvalsh": "doc",
    "tensorflow.compat.v1.linalg.lu_solve": "doc",
    "tensorflow.compat.v1.linalg.set_diag": "doc",
    "tensorflow.compat.v1.lite.TargetSpec": "doc",
    "tensorflow.compat.v1.load_op_library": "doc",
    "tensorflow.compat.v1.local_variables": "doc",
    "tensorflow.compat.v1.logging.warning": "doc",
    "tensorflow.compat.v1.losses.add_loss": "doc",
    "tensorflow.compat.v1.losses.log_loss": "doc",
    "tensorflow.compat.v1.manip.gather_nd": "doc",
    "tensorflow.compat.v1.math.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.less_equal": "doc",
    "tensorflow.compat.v1.math.logical_or": "doc",
    "tensorflow.compat.v1.math.reciprocal": "doc",
    "tensorflow.compat.v1.math.reduce_all": "doc",
    "tensorflow.compat.v1.math.reduce_any": "doc",
    "tensorflow.compat.v1.math.reduce_max": "doc",
    "tensorflow.compat.v1.math.reduce_min": "doc",
    "tensorflow.compat.v1.math.reduce_std": "doc",
    "tensorflow.compat.v1.math.reduce_sum": "doc",
    "tensorflow.compat.v1.math.scalar_mul": "doc",
    "tensorflow.compat.v1.matrix_set_diag": "doc",
    "tensorflow.compat.v1.matrix_solve_ls": "doc",
    "tensorflow.compat.v1.mixed_precision": "doc",
    "tensorflow.compat.v1.model_variables": "doc",
    "tensorflow.compat.v1.nn.l2_normalize": "doc",
    "tensorflow.compat.v1.profiler.advise": "doc",
    "tensorflow.compat.v1.queue.FIFOQueue": "doc",
    "tensorflow.compat.v1.queue.QueueBase": "doc",
    "tensorflow.compat.v1.random.get_seed": "doc",
    "tensorflow.compat.v1.resource_loader": "doc",
    "tensorflow.compat.v1.set_random_seed": "doc",
    "tensorflow.compat.v1.sets.difference": "doc",
    "tensorflow.compat.v1.signal.fftshift": "doc",
    "tensorflow.compat.v1.sparse.bincount": "doc",
    "tensorflow.compat.v1.sparse.to_dense": "doc",
    "tensorflow.compat.v1.sparse_to_dense": "doc",
    "tensorflow.compat.v1.spectral.ifft2d": "doc",
    "tensorflow.compat.v1.spectral.ifft3d": "doc",
    "tensorflow.compat.v1.spectral.rfft2d": "doc",
    "tensorflow.compat.v1.spectral.rfft3d": "doc",
    "tensorflow.compat.v1.summary.Summary": "doc",
    "tensorflow.compat.v1.tpu.PaddingSpec": "doc",
    "tensorflow.compat.v1.train.BytesList": "doc",
    "tensorflow.compat.v1.train.Int64List": "doc",
    "tensorflow.compat.v1.train.Optimizer": "doc",
    "tensorflow.compat.v1.train.ServerDef": "doc",
    "tensorflow.compat.v1.train.VocabInfo": "doc",
    "tensorflow.experimental.numpy.cumprod": "doc",
    "tensorflow.experimental.numpy.nanprod": "doc",
    "tensorflow.experimental.numpy.nonzero": "doc",
    "tensorflow.keras.metrics.KLDivergence": "doc",
    "tensorflow.keras.metrics.LogCoshError": "doc",
    "tensorflow.keras.metrics.SquaredHinge": "doc",
    "tensorflow.keras.utils.to_categorical": "doc",
    "tensorflow.metrics.BinaryCrossentropy": "doc",
    "tensorflow.metrics.mean_squared_error": "doc",
    "tensorflow.train.checkpoints_iterator": "doc",
    "tensorflow.train.get_checkpoint_state": "doc",
    "tensorflow.compat.v1.OptimizerOptions": "doc",
    "tensorflow.compat.v1.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.RaggedTensorSpec": "doc",
    "tensorflow.compat.v1.RegisterGradient": "doc",
    "tensorflow.compat.v1.SparseTensorSpec": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE": "doc",
    "tensorflow.compat.v1.audio.decode_wav": "doc",
    "tensorflow.compat.v1.audio.encode_wav": "doc",
    "tensorflow.compat.v1.data.DatasetSpec": "doc",
    "tensorflow.compat.v1.debugging.Assert": "doc",
    "tensorflow.compat.v1.debugging.is_inf": "doc",
    "tensorflow.compat.v1.debugging.is_nan": "doc",
    "tensorflow.compat.v1.estimator.export": "doc",
    "tensorflow.compat.v1.estimator.inputs": "doc",
    "tensorflow.compat.v1.flags.EnumParser": "doc",
    "tensorflow.compat.v1.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.flags.FlagValues": "doc",
    "tensorflow.compat.v1.flags.ListParser": "doc",
    "tensorflow.compat.v1.get_static_value": "doc",
    "tensorflow.compat.v1.global_variables": "doc",
    "tensorflow.compat.v1.image.adjust_hue": "doc",
    "tensorflow.compat.v1.image.decode_bmp": "doc",
    "tensorflow.compat.v1.image.decode_png": "doc",
    "tensorflow.compat.v1.image.encode_png": "doc",
    "tensorflow.compat.v1.image.random_hue": "doc",
    "tensorflow.compat.v1.image.rgb_to_hsv": "doc",
    "tensorflow.compat.v1.image.rgb_to_yiq": "doc",
    "tensorflow.compat.v1.image.rgb_to_yuv": "doc",
    "tensorflow.compat.v1.import_graph_def": "doc",
    "tensorflow.compat.v1.io.PriorityQueue": "doc",
    "tensorflow.compat.v1.io.RaggedFeature": "doc",
    "tensorflow.compat.v1.io.SparseFeature": "doc",
    "tensorflow.compat.v1.io.VarLenFeature": "doc",
    "tensorflow.compat.v1.io.decode_base64": "doc",
    "tensorflow.compat.v1.io.encode_base64": "doc",
    "tensorflow.compat.v1.io.gfile.listdir": "doc",
    "tensorflow.compat.v1.io.parse_example": "doc",
    "tensorflow.compat.v1.keras.Sequential": "doc",
    "tensorflow.compat.v1.keras.layers.Add": "doc",
    "tensorflow.compat.v1.keras.layers.Dot": "doc",
    "tensorflow.compat.v1.keras.layers.ELU": "doc",
    "tensorflow.compat.v1.keras.layers.GRU": "doc",
    "tensorflow.compat.v1.keras.layers.RNN": "doc",
    "tensorflow.compat.v1.keras.layers.add": "doc",
    "tensorflow.compat.v1.keras.layers.dot": "doc",
    "tensorflow.compat.v1.keras.losses.KLD": "doc",
    "tensorflow.compat.v1.keras.losses.MAE": "doc",
    "tensorflow.compat.v1.keras.losses.MSE": "doc",
    "tensorflow.compat.v1.keras.losses.get": "doc",
    "tensorflow.compat.v1.keras.losses.kld": "doc",
    "tensorflow.compat.v1.keras.losses.mae": "doc",
    "tensorflow.compat.v1.keras.losses.mse": "doc",
    "tensorflow.compat.v1.keras.optimizers": "doc",
    "tensorflow.compat.v1.layers.InputSpec": "doc",
    "tensorflow.compat.v1.linalg.band_part": "doc",
    "tensorflow.compat.v1.linalg.diag_part": "doc",
    "tensorflow.compat.v1.linalg.normalize": "doc",
    "tensorflow.compat.v1.linalg.tensordot": "doc",
    "tensorflow.compat.v1.linalg.transpose": "doc",
    "tensorflow.compat.v1.lite.Interpreter": "doc",
    "tensorflow.compat.v1.losses.Reduction": "doc",
    "tensorflow.compat.v1.math.log_sigmoid": "doc",
    "tensorflow.compat.v1.math.log_softmax": "doc",
    "tensorflow.compat.v1.math.logical_and": "doc",
    "tensorflow.compat.v1.math.logical_not": "doc",
    "tensorflow.compat.v1.math.logical_xor": "doc",
    "tensorflow.compat.v1.math.reduce_mean": "doc",
    "tensorflow.compat.v1.math.reduce_prod": "doc",
    "tensorflow.compat.v1.math.segment_max": "doc",
    "tensorflow.compat.v1.math.segment_min": "doc",
    "tensorflow.compat.v1.math.segment_sum": "doc",
    "tensorflow.compat.v1.matrix_band_part": "doc",
    "tensorflow.compat.v1.matrix_diag_part": "doc",
    "tensorflow.compat.v1.matrix_transpose": "doc",
    "tensorflow.compat.v1.metrics.accuracy": "doc",
    "tensorflow.compat.v1.metrics.mean_iou": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d": "doc",
    "tensorflow.compat.v1.nn.zero_fraction": "doc",
    "tensorflow.compat.v1.ones_initializer": "doc",
    "tensorflow.compat.v1.profiler.profile": "doc",
    "tensorflow.compat.v1.quantized_concat": "doc",
    "tensorflow.compat.v1.random.Algorithm": "doc",
    "tensorflow.compat.v1.random.Generator": "doc",
    "tensorflow.compat.v1.reduce_logsumexp": "doc",
    "tensorflow.compat.v1.reverse_sequence": "doc",
    "tensorflow.compat.v1.saved_model.load": "doc",
    "tensorflow.compat.v1.saved_model.save": "doc",
    "tensorflow.compat.v1.self_adjoint_eig": "doc",
    "tensorflow.compat.v1.serialize_sparse": "doc",
    "tensorflow.compat.v1.serialize_tensor": "doc",
    "tensorflow.compat.v1.signal.ifftshift": "doc",
    "tensorflow.compat.v1.sparse.transpose": "doc",
    "tensorflow.compat.v1.sparse_transpose": "doc",
    "tensorflow.compat.v1.spectral.irfft2d": "doc",
    "tensorflow.compat.v1.spectral.irfft3d": "doc",
    "tensorflow.compat.v1.string_to_number": "doc",
    "tensorflow.compat.v1.tpu.experimental": "doc",
    "tensorflow.compat.v1.train.Checkpoint": "doc",
    "tensorflow.compat.v1.train.ClusterDef": "doc",
    "tensorflow.compat.v1.train.FeedFnHook": "doc",
    "tensorflow.compat.v1.train.Supervisor": "doc",
    "tensorflow.compat.v1.train.batch_join": "doc",
    "tensorflow.compat.v1.train.warm_start": "doc",
    "tensorflow.compat.v1.truncated_normal": "doc",
    "tensorflow.compat.v1.user_ops.my_fact": "doc",
    "tensorflow.compat.v1.xla.experimental": "doc",
    "tensorflow.keras.metrics.TrueNegatives": "doc",
    "tensorflow.keras.metrics.TruePositives": "doc",
    "tensorflow.keras.metrics.kl_divergence": "doc",
    "tensorflow.keras.metrics.squared_hinge": "doc",
    "tensorflow.metrics.CategoricalAccuracy": "doc",
    "tensorflow.metrics.binary_crossentropy": "doc",
    "tensorflow.metrics.mean_absolute_error": "doc",
    "tensorflow.train.Features.FeatureEntry": "doc",
    "tensorflow.compat.v1.AggregationMethod": "doc",
    "tensorflow.compat.v1.IndexedSlicesSpec": "doc",
    "tensorflow.compat.v1.NodeDef.AttrEntry": "doc",
    "tensorflow.compat.v1.NotDifferentiable": "doc",
    "tensorflow.compat.v1.SparseTensorValue": "doc",
    "tensorflow.compat.v1.add_to_collection": "doc",
    "tensorflow.compat.v1.assert_less_equal": "doc",
    "tensorflow.compat.v1.assert_none_equal": "doc",
    "tensorflow.compat.v1.autograph.to_code": "doc",
    "tensorflow.compat.v1.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.compat.as_str_any": "doc",
    "tensorflow.compat.v1.convert_to_tensor": "doc",
    "tensorflow.compat.v1.data.experimental": "doc",
    "tensorflow.compat.v1.decode_compressed": "doc",
    "tensorflow.compat.v1.dynamic_partition": "doc",
    "tensorflow.compat.v1.executing_eagerly": "doc",
    "tensorflow.compat.v1.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.flags.FloatParser": "doc",
    "tensorflow.compat.v1.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.get_default_graph": "doc",
    "tensorflow.compat.v1.gfile.IsDirectory": "doc",
    "tensorflow.compat.v1.grad_pass_through": "doc",
    "tensorflow.compat.v1.image.decode_jpeg": "doc",
    "tensorflow.compat.v1.image.encode_jpeg": "doc",
    "tensorflow.compat.v1.image.random_crop": "doc",
    "tensorflow.compat.v1.image.resize_area": "doc",
    "tensorflow.compat.v1.image.sobel_edges": "doc",
    "tensorflow.compat.v1.initializers.ones": "doc",
    "tensorflow.compat.v1.io.TFRecordWriter": "doc",
    "tensorflow.compat.v1.io.gfile.makedirs": "doc",
    "tensorflow.compat.v1.io.matching_files": "doc",
    "tensorflow.compat.v1.is_non_decreasing": "doc",
    "tensorflow.compat.v1.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.keras.activations": "doc",
    "tensorflow.compat.v1.keras.backend.rnn": "doc",
    "tensorflow.compat.v1.keras.layers.LSTM": "doc",
    "tensorflow.compat.v1.keras.layers.ReLU": "doc",
    "tensorflow.compat.v1.keras.losses.Loss": "doc",
    "tensorflow.compat.v1.keras.losses.MAPE": "doc",
    "tensorflow.compat.v1.keras.losses.MSLE": "doc",
    "tensorflow.compat.v1.keras.losses.mape": "doc",
    "tensorflow.compat.v1.keras.losses.msle": "doc",
    "tensorflow.compat.v1.keras.metrics.AUC": "doc",
    "tensorflow.compat.v1.keras.metrics.KLD": "doc",
    "tensorflow.compat.v1.keras.metrics.MAE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSE": "doc",
    "tensorflow.compat.v1.keras.metrics.Sum": "doc",
    "tensorflow.compat.v1.keras.metrics.get": "doc",
    "tensorflow.compat.v1.keras.metrics.kld": "doc",
    "tensorflow.compat.v1.keras.metrics.mae": "doc",
    "tensorflow.compat.v1.keras.metrics.mse": "doc",
    "tensorflow.compat.v1.lite.experimental": "doc",
    "tensorflow.compat.v1.lite.toco_convert": "doc",
    "tensorflow.compat.v1.losses.get_losses": "doc",
    "tensorflow.compat.v1.losses.hinge_loss": "doc",
    "tensorflow.compat.v1.losses.huber_loss": "doc",
    "tensorflow.compat.v1.make_tensor_proto": "doc",
    "tensorflow.compat.v1.math.accumulate_n": "doc",
    "tensorflow.compat.v1.math.l2_normalize": "doc",
    "tensorflow.compat.v1.math.segment_mean": "doc",
    "tensorflow.compat.v1.math.segment_prod": "doc",
    "tensorflow.compat.v1.math.sobol_sample": "doc",
    "tensorflow.compat.v1.metrics.precision": "doc",
    "tensorflow.compat.v1.mlir.experimental": "doc",
    "tensorflow.compat.v1.nn.depth_to_space": "doc",
    "tensorflow.compat.v1.nn.space_to_batch": "doc",
    "tensorflow.compat.v1.nn.space_to_depth": "doc",
    "tensorflow.compat.v1.profiler.Profiler": "doc",
    "tensorflow.compat.v1.saved_model.Asset": "doc",
    "tensorflow.compat.v1.saved_model.utils": "doc",
    "tensorflow.compat.v1.scatter_nd_update": "doc",
    "tensorflow.compat.v1.sets.intersection": "doc",
    "tensorflow.compat.v1.space_to_batch_nd": "doc",
    "tensorflow.compat.v1.sparse.from_dense": "doc",
    "tensorflow.compat.v1.sparse.reduce_max": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum": "doc",
    "tensorflow.compat.v1.sparse_reduce_max": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum": "doc",
    "tensorflow.compat.v1.strings.to_number": "doc",
    "tensorflow.compat.v1.summary.histogram": "doc",
    "tensorflow.compat.v1.summary.merge_all": "doc",
    "tensorflow.compat.v1.test.get_temp_dir": "doc",
    "tensorflow.compat.v1.train.ClusterSpec": "doc",
    "tensorflow.compat.v1.train.Coordinator": "doc",
    "tensorflow.compat.v1.train.FeatureList": "doc",
    "tensorflow.compat.v1.train.QueueRunner": "doc",
    "tensorflow.compat.v1.train.global_step": "doc",
    "tensorflow.compat.v1.train.maybe_batch": "doc",
    "tensorflow.compat.v1.train.sdca_fprint": "doc",
    "tensorflow.compat.v1.train.write_graph": "doc",
    "tensorflow.compat.v1.variable_op_scope": "doc",
    "tensorflow.compat.v1.zeros_initializer": "doc",
    "tensorflow.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.keras.metrics.FalseNegatives": "doc",
    "tensorflow.keras.metrics.FalsePositives": "doc",
    "tensorflow.metrics.RootMeanSquaredError": "doc",
    "tensorflow.metrics.categorical_accuracy": "doc",
    "tensorflow.train.experimental.LossScale": "doc",
    "tensorflow.compat.v1.InteractiveSession": "doc",
    "tensorflow.compat.v1.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.add_to_collections": "doc",
    "tensorflow.compat.v1.app.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.autograph.to_graph": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_or": "doc",
    "tensorflow.compat.v1.bitwise.left_shift": "doc",
    "tensorflow.compat.v1.compat.path_to_str": "doc",
    "tensorflow.compat.v1.dimension_at_index": "doc",
    "tensorflow.compat.v1.enable_v2_behavior": "doc",
    "tensorflow.compat.v1.estimator.EvalSpec": "doc",
    "tensorflow.compat.v1.estimator.Exporter": "doc",
    "tensorflow.compat.v1.estimator.ModeKeys": "doc",
    "tensorflow.compat.v1.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.flags.tf_decorator": "doc",
    "tensorflow.compat.v1.get_collection_ref": "doc",
    "tensorflow.compat.v1.get_local_variable": "doc",
    "tensorflow.compat.v1.get_session_handle": "doc",
    "tensorflow.compat.v1.get_session_tensor": "doc",
    "tensorflow.compat.v1.get_variable_scope": "doc",
    "tensorflow.compat.v1.image.ResizeMethod": "doc",
    "tensorflow.compat.v1.image.adjust_gamma": "doc",
    "tensorflow.compat.v1.image.decode_image": "doc",
    "tensorflow.compat.v1.image.flip_up_down": "doc",
    "tensorflow.compat.v1.initializers.zeros": "doc",
    "tensorflow.compat.v1.invert_permutation": "doc",
    "tensorflow.compat.v1.io.FixedLenFeature": "doc",
    "tensorflow.compat.v1.io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.keras.applications": "doc",
    "tensorflow.compat.v1.keras.experimental": "doc",
    "tensorflow.compat.v1.keras.initializers": "doc",
    "tensorflow.compat.v1.keras.layers.Dense": "doc",
    "tensorflow.compat.v1.keras.layers.Input": "doc",
    "tensorflow.compat.v1.keras.layers.Layer": "doc",
    "tensorflow.compat.v1.keras.layers.PReLU": "doc",
    "tensorflow.compat.v1.keras.losses.Hinge": "doc",
    "tensorflow.compat.v1.keras.losses.Huber": "doc",
    "tensorflow.compat.v1.keras.losses.hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.MAPE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSLE": "doc",
    "tensorflow.compat.v1.keras.metrics.Mean": "doc",
    "tensorflow.compat.v1.keras.metrics.mape": "doc",
    "tensorflow.compat.v1.keras.metrics.msle": "doc",
    "tensorflow.compat.v1.keras.models.Model": "doc",
    "tensorflow.compat.v1.keras.regularizers": "doc",
    "tensorflow.compat.v1.linalg.global_norm": "doc",
    "tensorflow.compat.v1.linalg.matrix_rank": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag": "doc",
    "tensorflow.compat.v1.math.divide_no_nan": "doc",
    "tensorflow.compat.v1.math.greater_equal": "doc",
    "tensorflow.compat.v1.math.special.dawsn": "doc",
    "tensorflow.compat.v1.math.zero_fraction": "doc",
    "tensorflow.compat.v1.matrix_determinant": "doc",
    "tensorflow.compat.v1.matrix_square_root": "doc",
    "tensorflow.compat.v1.nest.map_structure": "doc",
    "tensorflow.compat.v1.ragged.placeholder": "doc",
    "tensorflow.compat.v1.random.categorical": "doc",
    "tensorflow.compat.v1.random.multinomial": "doc",
    "tensorflow.compat.v1.saved_model.loader": "doc",
    "tensorflow.compat.v1.signal.hann_window": "doc",
    "tensorflow.compat.v1.sparse.expand_dims": "doc",
    "tensorflow.compat.v1.sparse.placeholder": "doc",
    "tensorflow.compat.v1.sparse.reset_shape": "doc",
    "tensorflow.compat.v1.sparse.segment_sum": "doc",
    "tensorflow.compat.v1.sparse_placeholder": "doc",
    "tensorflow.compat.v1.sparse_reset_shape": "doc",
    "tensorflow.compat.v1.sparse_segment_sum": "doc",
    "tensorflow.compat.v1.squared_difference": "doc",
    "tensorflow.compat.v1.summary.FileWriter": "doc",
    "tensorflow.compat.v1.summary.SessionLog": "doc",
    "tensorflow.compat.v1.summary.initialize": "doc",
    "tensorflow.compat.v1.tables_initializer": "doc",
    "tensorflow.compat.v1.tensor_scatter_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_sub": "doc",
    "tensorflow.compat.v1.tpu.batch_parallel": "doc",
    "tensorflow.compat.v1.tpu.bfloat16_scope": "doc",
    "tensorflow.compat.v1.train.FeatureLists": "doc",
    "tensorflow.compat.v1.train.FinalOpsHook": "doc",
    "tensorflow.compat.v1.train.LooperThread": "doc",
    "tensorflow.compat.v1.train.ProfilerHook": "doc",
    "tensorflow.compat.v1.train.cosine_decay": "doc",
    "tensorflow.compat.v1.train.experimental": "doc",
    "tensorflow.compat.v1.train.limit_epochs": "doc",
    "tensorflow.compat.v1.train.queue_runner": "doc",
    "tensorflow.compat.v1.types.experimental": "doc",
    "tensorflow.compat.v1.unique_with_counts": "doc",
    "tensorflow.keras.metrics.binary_accuracy": "doc",
    "tensorflow.compat.v1.AttrValue.ListValue": "doc",
    "tensorflow.compat.v1.VariableAggregation": "doc",
    "tensorflow.compat.v1.app.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.app.flags.text_wrap": "doc",
    "tensorflow.compat.v1.app.flags.validator": "doc",
    "tensorflow.compat.v1.assert_non_negative": "doc",
    "tensorflow.compat.v1.assert_non_positive": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_and": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_xor": "doc",
    "tensorflow.compat.v1.bitwise.right_shift": "doc",
    "tensorflow.compat.v1.clip_by_global_norm": "doc",
    "tensorflow.compat.v1.debugging.is_finite": "doc",
    "tensorflow.compat.v1.decode_json_example": "doc",
    "tensorflow.compat.v1.disable_v2_behavior": "doc",
    "tensorflow.compat.v1.errors.AbortedError": "doc",
    "tensorflow.compat.v1.errors.UnknownError": "doc",
    "tensorflow.compat.v1.estimator.Estimator": "doc",
    "tensorflow.compat.v1.estimator.MultiHead": "doc",
    "tensorflow.compat.v1.estimator.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.TrainSpec": "doc",
    "tensorflow.compat.v1.estimator.VocabInfo": "doc",
    "tensorflow.compat.v1.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.get_default_session": "doc",
    "tensorflow.compat.v1.gfile.ListDirectory": "doc",
    "tensorflow.compat.v1.image.resize_images": "doc",
    "tensorflow.compat.v1.io.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.io.serialize_sparse": "doc",
    "tensorflow.compat.v1.io.serialize_tensor": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3D": "doc",
    "tensorflow.compat.v1.keras.layers.Lambda": "doc",
    "tensorflow.compat.v1.keras.losses.cosine": "doc",
    "tensorflow.compat.v1.keras.metrics.Hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.hinge": "doc",
    "tensorflow.compat.v1.keras.preprocessing": "doc",
    "tensorflow.compat.v1.keras.utils.Progbar": "doc",
    "tensorflow.compat.v1.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.layers.experimental": "doc",
    "tensorflow.compat.v1.linalg.experimental": "doc",
    "tensorflow.compat.v1.linalg.l2_normalize": "doc",
    "tensorflow.compat.v1.logging.log_every_n": "doc",
    "tensorflow.compat.v1.logging.log_first_n": "doc",
    "tensorflow.compat.v1.lookup.experimental": "doc",
    "tensorflow.compat.v1.math.special.expint": "doc",
    "tensorflow.compat.v1.math.special.spence": "doc",
    "tensorflow.compat.v1.metrics.mean_tensor": "doc",
    "tensorflow.compat.v1.metrics.recall_at_k": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup": "doc",
    "tensorflow.compat.v1.nn.fused_batch_norm": "doc",
    "tensorflow.compat.v1.nn.log_poisson_loss": "doc",
    "tensorflow.compat.v1.nn.quantized_conv2d": "doc",
    "tensorflow.compat.v1.nn.quantized_relu_x": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.GRUCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.RNNCell": "doc",
    "tensorflow.compat.v1.nn.separable_conv2d": "doc",
    "tensorflow.compat.v1.nn.weighted_moments": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto": "doc",
    "tensorflow.compat.v1.queue.PriorityQueue": "doc",
    "tensorflow.compat.v1.ragged.boolean_mask": "doc",
    "tensorflow.compat.v1.ragged.cross_hashed": "doc",
    "tensorflow.compat.v1.random.experimental": "doc",
    "tensorflow.compat.v1.reset_default_graph": "doc",
    "tensorflow.compat.v1.saved_model.Builder": "doc",
    "tensorflow.compat.v1.saved_model.builder": "doc",
    "tensorflow.compat.v1.saved_model.load_v2": "doc",
    "tensorflow.compat.v1.saved_model.main_op": "doc",
    "tensorflow.compat.v1.sets.set_difference": "doc",
    "tensorflow.compat.v1.signal.inverse_mdct": "doc",
    "tensorflow.compat.v1.signal.inverse_stft": "doc",
    "tensorflow.compat.v1.sparse.SparseTensor": "doc",
    "tensorflow.compat.v1.sparse.cross_hashed": "doc",
    "tensorflow.compat.v1.sparse.segment_mean": "doc",
    "tensorflow.compat.v1.sparse.to_indicator": "doc",
    "tensorflow.compat.v1.sparse_segment_mean": "doc",
    "tensorflow.compat.v1.sparse_to_indicator": "doc",
    "tensorflow.compat.v1.strings.bytes_split": "doc",
    "tensorflow.compat.v1.strings.reduce_join": "doc",
    "tensorflow.compat.v1.tpu.shutdown_system": "doc",
    "tensorflow.compat.v1.train.AdamOptimizer": "doc",
    "tensorflow.compat.v1.train.FtrlOptimizer": "doc",
    "tensorflow.compat.v1.train.NanTensorHook": "doc",
    "tensorflow.compat.v1.train.shuffle_batch": "doc",
    "tensorflow.compat.v1.trainable_variables": "doc",
    "tensorflow.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.train.ExponentialMovingAverage": "doc",
    "tensorflow.train.experimental.PythonState": "doc",
    "tensorflow.compat.v1.TensorInfo.CooSparse": "doc",
    "tensorflow.compat.v1.app.flags.EnumParser": "doc",
    "tensorflow.compat.v1.app.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.app.flags.FlagValues": "doc",
    "tensorflow.compat.v1.app.flags.ListParser": "doc",
    "tensorflow.compat.v1.assert_greater_equal": "doc",
    "tensorflow.compat.v1.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.batch_scatter_update": "doc",
    "tensorflow.compat.v1.clip_by_average_norm": "doc",
    "tensorflow.compat.v1.constant_initializer": "doc",
    "tensorflow.compat.v1.data.TFRecordDataset": "doc",
    "tensorflow.compat.v1.data.TextLineDataset": "doc",
    "tensorflow.compat.v1.dtypes.saturate_cast": "doc",
    "tensorflow.compat.v1.errors.DataLossError": "doc",
    "tensorflow.compat.v1.errors.InternalError": "doc",
    "tensorflow.compat.v1.errors.NotFoundError": "doc",
    "tensorflow.compat.v1.estimator.FeedFnHook": "doc",
    "tensorflow.compat.v1.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.flags.get_help_width": "doc",
    "tensorflow.compat.v1.image.resize_bicubic": "doc",
    "tensorflow.compat.v1.initialize_variables": "doc",
    "tensorflow.compat.v1.io.decode_compressed": "doc",
    "tensorflow.compat.v1.keras.backend.floatx": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist": "doc",
    "tensorflow.compat.v1.keras.layers.Average": "doc",
    "tensorflow.compat.v1.keras.layers.Dropout": "doc",
    "tensorflow.compat.v1.keras.layers.Flatten": "doc",
    "tensorflow.compat.v1.keras.layers.GRUCell": "doc",
    "tensorflow.compat.v1.keras.layers.Masking": "doc",
    "tensorflow.compat.v1.keras.layers.Maximum": "doc",
    "tensorflow.compat.v1.keras.layers.Minimum": "doc",
    "tensorflow.compat.v1.keras.layers.Permute": "doc",
    "tensorflow.compat.v1.keras.layers.Reshape": "doc",
    "tensorflow.compat.v1.keras.layers.Softmax": "doc",
    "tensorflow.compat.v1.keras.layers.Wrapper": "doc",
    "tensorflow.compat.v1.keras.layers.average": "doc",
    "tensorflow.compat.v1.keras.layers.maximum": "doc",
    "tensorflow.compat.v1.keras.layers.minimum": "doc",
    "tensorflow.compat.v1.keras.losses.LogCosh": "doc",
    "tensorflow.compat.v1.keras.losses.Poisson": "doc",
    "tensorflow.compat.v1.keras.losses.logcosh": "doc",
    "tensorflow.compat.v1.keras.losses.poisson": "doc",
    "tensorflow.compat.v1.keras.metrics.Recall": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine": "doc",
    "tensorflow.compat.v1.keras.optimizers.SGD": "doc",
    "tensorflow.compat.v1.keras.optimizers.get": "doc",
    "tensorflow.compat.v1.keras.utils.Sequence": "doc",
    "tensorflow.compat.v1.keras.utils.get_file": "doc",
    "tensorflow.compat.v1.layers.max_pooling1d": "doc",
    "tensorflow.compat.v1.layers.max_pooling2d": "doc",
    "tensorflow.compat.v1.layers.max_pooling3d": "doc",
    "tensorflow.compat.v1.lite.TFLiteConverter": "doc",
    "tensorflow.compat.v1.lite.experimental.nn": "doc",
    "tensorflow.compat.v1.lookup.TextFileIndex": "doc",
    "tensorflow.compat.v1.math.multiply_no_nan": "doc",
    "tensorflow.compat.v1.math.reduce_variance": "doc",
    "tensorflow.compat.v1.nn.collapse_repeated": "doc",
    "tensorflow.compat.v1.nn.ctc_unique_labels": "doc",
    "tensorflow.compat.v1.nn.normalize_moments": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMCell": "doc",
    "tensorflow.compat.v1.parse_single_example": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto": "doc",
    "tensorflow.compat.v1.self_adjoint_eigvals": "doc",
    "tensorflow.compat.v1.signal.kaiser_window": "doc",
    "tensorflow.compat.v1.signal.vorbis_window": "doc",
    "tensorflow.compat.v1.test.gpu_device_name": "doc",
    "tensorflow.compat.v1.train.SessionCreator": "doc",
    "tensorflow.compat.v1.train.SessionManager": "doc",
    "tensorflow.compat.v1.train.SessionRunArgs": "doc",
    "tensorflow.compat.v1.train.SessionRunHook": "doc",
    "tensorflow.compat.v1.train.StopAtStepHook": "doc",
    "tensorflow.compat.v1.train.input_producer": "doc",
    "tensorflow.compat.v1.train.list_variables": "doc",
    "tensorflow.compat.v1.train.sdca_optimizer": "doc",
    "tensorflow.compat.v1.train.sdca_shrink_l1": "doc",
    "tensorflow.compat.v1.type_spec_from_value": "doc",
    "tensorflow.compat.v1.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.unsorted_segment_sum": "doc",
    "tensorflow.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.app.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.app.flags.FloatParser": "doc",
    "tensorflow.compat.v1.app.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.data.get_output_types": "doc",
    "tensorflow.compat.v1.debugging.assert_less": "doc",
    "tensorflow.compat.v1.debugging.assert_near": "doc",
    "tensorflow.compat.v1.debugging.assert_rank": "doc",
    "tensorflow.compat.v1.debugging.assert_type": "doc",
    "tensorflow.compat.v1.delete_session_tensor": "doc",
    "tensorflow.compat.v1.enable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.errors.CancelledError": "doc",
    "tensorflow.compat.v1.estimator.add_metrics": "doc",
    "tensorflow.compat.v1.experimental.Optional": "doc",
    "tensorflow.compat.v1.extract_image_patches": "doc",
    "tensorflow.compat.v1.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.flags.ValidationError": "doc",
    "tensorflow.compat.v1.histogram_fixed_width": "doc",
    "tensorflow.compat.v1.image.extract_glimpse": "doc",
    "tensorflow.compat.v1.image.extract_patches": "doc",
    "tensorflow.compat.v1.image.flip_left_right": "doc",
    "tensorflow.compat.v1.image.image_gradients": "doc",
    "tensorflow.compat.v1.image.resize_bilinear": "doc",
    "tensorflow.compat.v1.image.ssim_multiscale": "doc",
    "tensorflow.compat.v1.image.total_variation": "doc",
    "tensorflow.compat.v1.image.transpose_image": "doc",
    "tensorflow.compat.v1.initialize_all_tables": "doc",
    "tensorflow.compat.v1.initializers.identity": "doc",
    "tensorflow.compat.v1.io.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.io.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.io.tf_record_iterator": "doc",
    "tensorflow.compat.v1.keras.activations.elu": "doc",
    "tensorflow.compat.v1.keras.activations.get": "doc",
    "tensorflow.compat.v1.keras.backend.epsilon": "doc",
    "tensorflow.compat.v1.keras.backend.get_uid": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNGRU": "doc",
    "tensorflow.compat.v1.keras.layers.LSTMCell": "doc",
    "tensorflow.compat.v1.keras.layers.Multiply": "doc",
    "tensorflow.compat.v1.keras.layers.Subtract": "doc",
    "tensorflow.compat.v1.keras.layers.multiply": "doc",
    "tensorflow.compat.v1.keras.layers.subtract": "doc",
    "tensorflow.compat.v1.keras.losses.log_cosh": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanIoU": "doc",
    "tensorflow.compat.v1.keras.metrics.Poisson": "doc",
    "tensorflow.compat.v1.keras.metrics.logcosh": "doc",
    "tensorflow.compat.v1.keras.metrics.poisson": "doc",
    "tensorflow.compat.v1.keras.mixed_precision": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adam": "doc",
    "tensorflow.compat.v1.keras.optimizers.Ftrl": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1": "doc",
    "tensorflow.compat.v1.keras.regularizers.L2": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1": "doc",
    "tensorflow.compat.v1.keras.regularizers.l2": "doc",
    "tensorflow.compat.v1.keras.utils.normalize": "doc",
    "tensorflow.compat.v1.linalg.LinearOperator": "doc",
    "tensorflow.compat.v1.linalg.cholesky_solve": "doc",
    "tensorflow.compat.v1.logging.get_verbosity": "doc",
    "tensorflow.compat.v1.logging.set_verbosity": "doc",
    "tensorflow.compat.v1.losses.get_total_loss": "doc",
    "tensorflow.compat.v1.math.reduce_logsumexp": "doc",
    "tensorflow.compat.v1.nest.pack_sequence_as": "doc",
    "tensorflow.compat.v1.nn.ctc_greedy_decoder": "doc",
    "tensorflow.compat.v1.nn.quantized_avg_pool": "doc",
    "tensorflow.compat.v1.nn.quantized_max_pool": "doc",
    "tensorflow.compat.v1.profiler.write_op_log": "doc",
    "tensorflow.compat.v1.quantization.quantize": "doc",
    "tensorflow.compat.v1.ragged.constant_value": "doc",
    "tensorflow.compat.v1.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.sets.set_intersection": "doc",
    "tensorflow.compat.v1.signal.hamming_window": "doc",
    "tensorflow.compat.v1.sparse.segment_sqrt_n": "doc",
    "tensorflow.compat.v1.sparse_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket": "doc",
    "tensorflow.compat.v1.strings.regex_replace": "doc",
    "tensorflow.compat.v1.strings.unicode_split": "doc",
    "tensorflow.compat.v1.summary.Summary.Audio": "doc",
    "tensorflow.compat.v1.summary.Summary.Image": "doc",
    "tensorflow.compat.v1.summary.Summary.Value": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_max": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_min": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_sub": "doc",
    "tensorflow.compat.v1.tensor_scatter_update": "doc",
    "tensorflow.compat.v1.test.benchmark_config": "doc",
    "tensorflow.compat.v1.test.is_gpu_available": "doc",
    "tensorflow.compat.v1.tpu.cross_replica_sum": "doc",
    "tensorflow.compat.v1.tpu.initialize_system": "doc",
    "tensorflow.compat.v1.train.SequenceExample": "doc",
    "tensorflow.compat.v1.train.StepCounterHook": "doc",
    "tensorflow.compat.v1.train.get_global_step": "doc",
    "tensorflow.compat.v1.train.load_checkpoint": "doc",
    "tensorflow.compat.v1.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.unsorted_segment_prod": "doc",
    "tensorflow.compat.v1.variables_initializer": "doc",
    "tensorflow.data.experimental.TFRecordWriter": "doc",
    "tensorflow.data.experimental.copy_to_device": "doc",
    "tensorflow.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.keras.metrics.mean_squared_error": "doc",
    "tensorflow.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.ConditionalAccumulator": "doc",
    "tensorflow.compat.v1.NameAttrList.AttrEntry": "doc",
    "tensorflow.compat.v1.Variable.SaveSliceInfo": "doc",
    "tensorflow.compat.v1.add_check_numerics_ops": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator": "doc",
    "tensorflow.compat.v1.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.autograph.experimental": "doc",
    "tensorflow.compat.v1.broadcast_static_shape": "doc",
    "tensorflow.compat.v1.compat.dimension_value": "doc",
    "tensorflow.compat.v1.data.experimental.scan": "doc",
    "tensorflow.compat.v1.data.get_output_shapes": "doc",
    "tensorflow.compat.v1.debugging.assert_equal": "doc",
    "tensorflow.compat.v1.debugging.experimental": "doc",
    "tensorflow.compat.v1.disable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.enable_control_flow_v2": "doc",
    "tensorflow.compat.v1.enable_eager_execution": "doc",
    "tensorflow.compat.v1.enable_tensor_equality": "doc",
    "tensorflow.compat.v1.errors.OutOfRangeError": "doc",
    "tensorflow.compat.v1.estimator.BestExporter": "doc",
    "tensorflow.compat.v1.estimator.DNNEstimator": "doc",
    "tensorflow.compat.v1.estimator.DNNRegressor": "doc",
    "tensorflow.compat.v1.estimator.FinalOpsHook": "doc",
    "tensorflow.compat.v1.estimator.ProfilerHook": "doc",
    "tensorflow.compat.v1.estimator.experimental": "doc",
    "tensorflow.compat.v1.extract_volume_patches": "doc",
    "tensorflow.compat.v1.fixed_size_partitioner": "doc",
    "tensorflow.compat.v1.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.image.grayscale_to_rgb": "doc",
    "tensorflow.compat.v1.image.rgb_to_grayscale": "doc",
    "tensorflow.compat.v1.initializers.he_normal": "doc",
    "tensorflow.compat.v1.initializers.variables": "doc",
    "tensorflow.compat.v1.io.decode_json_example": "doc",
    "tensorflow.compat.v1.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.keras.activations.relu": "doc",
    "tensorflow.compat.v1.keras.activations.selu": "doc",
    "tensorflow.compat.v1.keras.activations.tanh": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters": "doc",
    "tensorflow.compat.v1.keras.initializers.get": "doc",
    "tensorflow.compat.v1.keras.layers.Attention": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNLSTM": "doc",
    "tensorflow.compat.v1.keras.layers.Embedding": "doc",
    "tensorflow.compat.v1.keras.layers.InputSpec": "doc",
    "tensorflow.compat.v1.keras.layers.LeakyReLU": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNN": "doc",
    "tensorflow.compat.v1.keras.layers.serialize": "doc",
    "tensorflow.compat.v1.keras.losses.serialize": "doc",
    "tensorflow.compat.v1.keras.metrics.Accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.log_cosh": "doc",
    "tensorflow.compat.v1.keras.optimizers.Nadam": "doc",
    "tensorflow.compat.v1.keras.regularizers.get": "doc",
    "tensorflow.compat.v1.keras.utils.plot_model": "doc",
    "tensorflow.compat.v1.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.lookup.StaticHashTable": "doc",
    "tensorflow.compat.v1.losses.cosine_distance": "doc",
    "tensorflow.compat.v1.math.is_non_decreasing": "doc",
    "tensorflow.compat.v1.math.reciprocal_no_nan": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1": "doc",
    "tensorflow.compat.v1.math.special.bessel_j0": "doc",
    "tensorflow.compat.v1.math.special.bessel_j1": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1": "doc",
    "tensorflow.compat.v1.math.special.bessel_y0": "doc",
    "tensorflow.compat.v1.math.special.bessel_y1": "doc",
    "tensorflow.compat.v1.metrics.precision_at_k": "doc",
    "tensorflow.compat.v1.metrics.true_negatives": "doc",
    "tensorflow.compat.v1.metrics.true_positives": "doc",
    "tensorflow.compat.v1.nn.batch_normalization": "doc",
    "tensorflow.compat.v1.nn.fractional_avg_pool": "doc",
    "tensorflow.compat.v1.nn.fractional_max_pool": "doc",
    "tensorflow.compat.v1.nn.with_space_to_batch": "doc",
    "tensorflow.compat.v1.orthogonal_initializer": "doc",
    "tensorflow.compat.v1.queue.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.ragged.map_flat_values": "doc",
    "tensorflow.compat.v1.random.set_random_seed": "doc",
    "tensorflow.compat.v1.random.stateless_gamma": "doc",
    "tensorflow.compat.v1.signal.overlap_and_add": "doc",
    "tensorflow.compat.v1.sparse.fill_empty_rows": "doc",
    "tensorflow.compat.v1.sparse_fill_empty_rows": "doc",
    "tensorflow.compat.v1.sparse_tensor_to_dense": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket": "doc",
    "tensorflow.compat.v1.strings.unicode_decode": "doc",
    "tensorflow.compat.v1.strings.unicode_encode": "doc",
    "tensorflow.compat.v1.strings.unicode_script": "doc",
    "tensorflow.compat.v1.summary.tensor_summary": "doc",
    "tensorflow.compat.v1.test.StubOutForTesting": "doc",
    "tensorflow.compat.v1.test.is_built_with_xla": "doc",
    "tensorflow.compat.v1.test.test_src_dir_path": "doc",
    "tensorflow.compat.v1.train.AdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.RMSPropOptimizer": "doc",
    "tensorflow.compat.v1.train.SessionRunValues": "doc",
    "tensorflow.compat.v1.train.SummarySaverHook": "doc",
    "tensorflow.compat.v1.train.add_queue_runner": "doc",
    "tensorflow.compat.v1.train.basic_train_loop": "doc",
    "tensorflow.compat.v1.train.maybe_batch_join": "doc",
    "tensorflow.compat.v1.train.polynomial_decay": "doc",
    "tensorflow.compat.v1.train.summary_iterator": "doc",
    "tensorflow.compat.v1.variable_creator_scope": "doc",
    "tensorflow.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.train.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.FixedLengthRecordReader": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental": "doc",
    "tensorflow.compat.v1.VariableSynchronization": "doc",
    "tensorflow.compat.v1.app.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.app.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.autograph.set_verbosity": "doc",
    "tensorflow.compat.v1.broadcast_dynamic_shape": "doc",
    "tensorflow.compat.v1.control_flow_v2_enabled": "doc",
    "tensorflow.compat.v1.data.get_output_classes": "doc",
    "tensorflow.compat.v1.debugging.assert_scalar": "doc",
    "tensorflow.compat.v1.debugging.assert_shapes": "doc",
    "tensorflow.compat.v1.deserialize_many_sparse": "doc",
    "tensorflow.compat.v1.disable_control_flow_v2": "doc",
    "tensorflow.compat.v1.disable_eager_execution": "doc",
    "tensorflow.compat.v1.disable_tensor_equality": "doc",
    "tensorflow.compat.v1.errors.UnavailableError": "doc",
    "tensorflow.compat.v1.estimator.DNNClassifier": "doc",
    "tensorflow.compat.v1.estimator.EstimatorSpec": "doc",
    "tensorflow.compat.v1.estimator.FinalExporter": "doc",
    "tensorflow.compat.v1.estimator.NanTensorHook": "doc",
    "tensorflow.compat.v1.estimator.tpu.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUConfig": "doc",
    "tensorflow.compat.v1.flags.CsvListSerializer": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.gfile.DeleteRecursively": "doc",
    "tensorflow.compat.v1.image.adjust_brightness": "doc",
    "tensorflow.compat.v1.image.adjust_saturation": "doc",
    "tensorflow.compat.v1.image.random_brightness": "doc",
    "tensorflow.compat.v1.image.random_saturation": "doc",
    "tensorflow.compat.v1.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.io.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.io.match_filenames_once": "doc",
    "tensorflow.compat.v1.io.parse_single_example": "doc",
    "tensorflow.compat.v1.is_variable_initialized": "doc",
    "tensorflow.compat.v1.keras.activations.swish": "doc",
    "tensorflow.compat.v1.keras.callbacks.History": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100": "doc",
    "tensorflow.compat.v1.keras.initializers.Ones": "doc",
    "tensorflow.compat.v1.keras.initializers.ones": "doc",
    "tensorflow.compat.v1.keras.layers.Activation": "doc",
    "tensorflow.compat.v1.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping1D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping2D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping3D": "doc",
    "tensorflow.compat.v1.keras.layers.InputLayer": "doc",
    "tensorflow.compat.v1.keras.metrics.Precision": "doc",
    "tensorflow.compat.v1.keras.metrics.serialize": "doc",
    "tensorflow.compat.v1.keras.models.Sequential": "doc",
    "tensorflow.compat.v1.keras.models.load_model": "doc",
    "tensorflow.compat.v1.keras.models.save_model": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adamax": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1L2": "doc",
    "tensorflow.compat.v1.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling3D": "doc",
    "tensorflow.compat.v1.layers.separable_conv1d": "doc",
    "tensorflow.compat.v1.layers.separable_conv2d": "doc",
    "tensorflow.compat.v1.linalg.matrix_transpose": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag_part": "doc",
    "tensorflow.compat.v1.linalg.triangular_solve": "doc",
    "tensorflow.compat.v1.manip.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.manip.space_to_batch_nd": "doc",
    "tensorflow.compat.v1.math.invert_permutation": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1e": "doc",
    "tensorflow.compat.v1.math.squared_difference": "doc",
    "tensorflow.compat.v1.matrix_triangular_solve": "doc",
    "tensorflow.compat.v1.metrics.false_negatives": "doc",
    "tensorflow.compat.v1.metrics.false_positives": "doc",
    "tensorflow.compat.v1.metrics.recall_at_top_k": "doc",
    "tensorflow.compat.v1.nn.compute_average_loss": "doc",
    "tensorflow.compat.v1.nn.max_pool_with_argmax": "doc",
    "tensorflow.compat.v1.nn.sampled_softmax_loss": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto": "doc",
    "tensorflow.compat.v1.quantization.dequantize": "doc",
    "tensorflow.compat.v1.random.create_rng_state": "doc",
    "tensorflow.compat.v1.random.stateless_normal": "doc",
    "tensorflow.compat.v1.random.truncated_normal": "doc",
    "tensorflow.compat.v1.saved_model.SaveOptions": "doc",
    "tensorflow.compat.v1.saved_model.loader.load": "doc",
    "tensorflow.compat.v1.saved_model.simple_save": "doc",
    "tensorflow.compat.v1.summary.FileWriterCache": "doc",
    "tensorflow.compat.v1.test.is_built_with_cuda": "doc",
    "tensorflow.compat.v1.test.is_built_with_rocm": "doc",
    "tensorflow.compat.v1.tpu.CrossShardOptimizer": "doc",
    "tensorflow.compat.v1.tpu.outside_compilation": "doc",
    "tensorflow.compat.v1.train.AdadeltaOptimizer": "doc",
    "tensorflow.compat.v1.train.CheckpointManager": "doc",
    "tensorflow.compat.v1.train.JobDef.TasksEntry": "doc",
    "tensorflow.compat.v1.train.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.train.MomentumOptimizer": "doc",
    "tensorflow.compat.v1.train.SessionRunContext": "doc",
    "tensorflow.compat.v1.train.exponential_decay": "doc",
    "tensorflow.compat.v1.train.export_meta_graph": "doc",
    "tensorflow.compat.v1.train.import_meta_graph": "doc",
    "tensorflow.compat.v1.train.latest_checkpoint": "doc",
    "tensorflow.compat.v1.train.natural_exp_decay": "doc",
    "tensorflow.compat.v1.train.remove_checkpoint": "doc",
    "tensorflow.compat.v1.unsorted_segment_sqrt_n": "doc",
    "tensorflow.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.ConfigProto.Experimental": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.app.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.app.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.app.flags.get_help_width": "doc",
    "tensorflow.compat.v1.data.experimental.unique": "doc",
    "tensorflow.compat.v1.debugging.assert_greater": "doc",
    "tensorflow.compat.v1.debugging.assert_integer": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_in": "doc",
    "tensorflow.compat.v1.debugging.check_numerics": "doc",
    "tensorflow.compat.v1.estimator.LatestExporter": "doc",
    "tensorflow.compat.v1.estimator.MultiClassHead": "doc",
    "tensorflow.compat.v1.estimator.MultiLabelHead": "doc",
    "tensorflow.compat.v1.estimator.RegressionHead": "doc",
    "tensorflow.compat.v1.estimator.SessionRunArgs": "doc",
    "tensorflow.compat.v1.estimator.SessionRunHook": "doc",
    "tensorflow.compat.v1.estimator.StopAtStepHook": "doc",
    "tensorflow.compat.v1.experimental.async_scope": "doc",
    "tensorflow.compat.v1.flags.ArgumentSerializer": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.flags.register_validator": "doc",
    "tensorflow.compat.v1.image.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.initialize_all_variables": "doc",
    "tensorflow.compat.v1.io.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.keras.activations.linear": "doc",
    "tensorflow.compat.v1.keras.applications.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.VGG19": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19": "doc",
    "tensorflow.compat.v1.keras.backend.name_scope": "doc",
    "tensorflow.compat.v1.keras.backend.reset_uids": "doc",
    "tensorflow.compat.v1.keras.backend.set_floatx": "doc",
    "tensorflow.compat.v1.keras.callbacks.Callback": "doc",
    "tensorflow.compat.v1.keras.initializers.Zeros": "doc",
    "tensorflow.compat.v1.keras.initializers.zeros": "doc",
    "tensorflow.compat.v1.keras.layers.Concatenate": "doc",
    "tensorflow.compat.v1.keras.layers.deserialize": "doc",
    "tensorflow.compat.v1.keras.losses.deserialize": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanTensor": "doc",
    "tensorflow.compat.v1.keras.models.clone_model": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adagrad": "doc",
    "tensorflow.compat.v1.keras.optimizers.RMSprop": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1_l2": "doc",
    "tensorflow.compat.v1.keras.utils.model_to_dot": "doc",
    "tensorflow.compat.v1.layers.average_pooling1d": "doc",
    "tensorflow.compat.v1.layers.average_pooling2d": "doc",
    "tensorflow.compat.v1.layers.average_pooling3d": "doc",
    "tensorflow.compat.v1.linalg.lu_matrix_inverse": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_solve": "doc",
    "tensorflow.compat.v1.load_file_system_library": "doc",
    "tensorflow.compat.v1.math.special.fresnel_cos": "doc",
    "tensorflow.compat.v1.math.special.fresnel_sin": "doc",
    "tensorflow.compat.v1.metrics.percentage_below": "doc",
    "tensorflow.compat.v1.moving_average_variables": "doc",
    "tensorflow.compat.v1.nn.all_candidate_sampler": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicRNNCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.MultiRNNCell": "doc",
    "tensorflow.compat.v1.nn.sufficient_statistics": "doc",
    "tensorflow.compat.v1.placeholder_with_default": "doc",
    "tensorflow.compat.v1.python_io.TFRecordWriter": "doc",
    "tensorflow.compat.v1.queue.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.ragged.RaggedTensorValue": "doc",
    "tensorflow.compat.v1.random.stateless_poisson": "doc",
    "tensorflow.compat.v1.random.stateless_uniform": "doc",
    "tensorflow.compat.v1.saved_model.experimental": "doc",
    "tensorflow.compat.v1.sparse.reduce_max_sparse": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum_sparse": "doc",
    "tensorflow.compat.v1.sparse_reduce_max_sparse": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum_sparse": "doc",
    "tensorflow.compat.v1.strings.regex_full_match": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_update": "doc",
    "tensorflow.compat.v1.train.AdagradDAOptimizer": "doc",
    "tensorflow.compat.v1.train.assert_global_step": "doc",
    "tensorflow.compat.v1.train.create_global_step": "doc",
    "tensorflow.compat.v1.train.inverse_time_decay": "doc",
    "tensorflow.compat.v1.train.piecewise_constant": "doc",
    "tensorflow.compat.v1.train.shuffle_batch_join": "doc",
    "tensorflow.compat.v1.verify_tensor_all_finite": "doc",
    "tensorflow.compat.v1.xla.experimental.compile": "doc",
    "tensorflow.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.train.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.app.flags.ValidationError": "doc",
    "tensorflow.compat.v1.compat.dimension_at_index": "doc",
    "tensorflow.compat.v1.compat.forward_compatible": "doc",
    "tensorflow.compat.v1.data.experimental.Counter": "doc",
    "tensorflow.compat.v1.data.experimental.Reducer": "doc",
    "tensorflow.compat.v1.data.experimental.service": "doc",
    "tensorflow.compat.v1.data.experimental.unbatch": "doc",
    "tensorflow.compat.v1.debugging.assert_negative": "doc",
    "tensorflow.compat.v1.debugging.assert_positive": "doc",
    "tensorflow.compat.v1.enable_resource_variables": "doc",
    "tensorflow.compat.v1.errors.AlreadyExistsError": "doc",
    "tensorflow.compat.v1.errors.UnimplementedError": "doc",
    "tensorflow.compat.v1.estimator.BinaryClassHead": "doc",
    "tensorflow.compat.v1.estimator.LinearEstimator": "doc",
    "tensorflow.compat.v1.estimator.LinearRegressor": "doc",
    "tensorflow.compat.v1.estimator.StepCounterHook": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_string": "doc",
    "tensorflow.compat.v1.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.glorot_normal_initializer": "doc",
    "tensorflow.compat.v1.image.adjust_jpeg_quality": "doc",
    "tensorflow.compat.v1.image.convert_image_dtype": "doc",
    "tensorflow.compat.v1.image.draw_bounding_boxes": "doc",
    "tensorflow.compat.v1.image.non_max_suppression": "doc",
    "tensorflow.compat.v1.image.pad_to_bounding_box": "doc",
    "tensorflow.compat.v1.image.random_flip_up_down": "doc",
    "tensorflow.compat.v1.image.random_jpeg_quality": "doc",
    "tensorflow.compat.v1.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.io.parse_sequence_example": "doc",
    "tensorflow.compat.v1.keras.activations.sigmoid": "doc",
    "tensorflow.compat.v1.keras.activations.softmax": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet": "doc",
    "tensorflow.compat.v1.keras.backend.get_session": "doc",
    "tensorflow.compat.v1.keras.backend.set_epsilon": "doc",
    "tensorflow.compat.v1.keras.backend.set_session": "doc",
    "tensorflow.compat.v1.keras.callbacks.CSVLogger": "doc",
    "tensorflow.compat.v1.keras.initializers.normal": "doc",
    "tensorflow.compat.v1.keras.layers.AlphaDropout": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.RepeatVector": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling1D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling2D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling3D": "doc",
    "tensorflow.compat.v1.keras.layers.experimental": "doc",
    "tensorflow.compat.v1.keras.losses.KLDivergence": "doc",
    "tensorflow.compat.v1.keras.losses.SquaredHinge": "doc",
    "tensorflow.compat.v1.keras.metrics.deserialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adadelta": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image": "doc",
    "tensorflow.compat.v1.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorDiag": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_matmul": "doc",
    "tensorflow.compat.v1.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.math.cumulative_logsumexp": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sum": "doc",
    "tensorflow.compat.v1.mixed_precision.LossScale": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicLSTMCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DeviceWrapper": "doc",
    "tensorflow.compat.v1.python_io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.random.stateless_binomial": "doc",
    "tensorflow.compat.v1.random_normal_initializer": "doc",
    "tensorflow.compat.v1.strings.unicode_transcode": "doc",
    "tensorflow.compat.v1.summary.TaggedRunMetadata": "doc",
    "tensorflow.compat.v1.test.create_local_cluster": "doc",
    "tensorflow.compat.v1.tpu.experimental.Topology": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.train.ChiefSessionCreator": "doc",
    "tensorflow.compat.v1.train.NewCheckpointReader": "doc",
    "tensorflow.compat.v1.train.linear_cosine_decay": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch": "doc",
    "tensorflow.compat.v1.train.start_queue_runners": "doc",
    "tensorflow.compat.forward_compatibility_horizon": "doc",
    "tensorflow.profiler.experimental.client.monitor": "doc",
    "tensorflow.compat.v1.ConditionalAccumulatorBase": "doc",
    "tensorflow.compat.v1.RunMetadata.FunctionGraphs": "doc",
    "tensorflow.compat.v1.SummaryMetadata.PluginData": "doc",
    "tensorflow.compat.v1.TensorInfo.CompositeTensor": "doc",
    "tensorflow.compat.v1.app.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.data.experimental.Optional": "doc",
    "tensorflow.compat.v1.data.experimental.snapshot": "doc",
    "tensorflow.compat.v1.disable_resource_variables": "doc",
    "tensorflow.compat.v1.estimator.LinearClassifier": "doc",
    "tensorflow.compat.v1.estimator.SessionRunValues": "doc",
    "tensorflow.compat.v1.estimator.SummarySaverHook": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimator": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental": "doc",
    "tensorflow.compat.v1.feature_column.input_layer": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.glorot_uniform_initializer": "doc",
    "tensorflow.compat.v1.graph_util.must_run_on_cpu": "doc",
    "tensorflow.compat.v1.histogram_fixed_width_bins": "doc",
    "tensorflow.compat.v1.image.crop_to_bounding_box": "doc",
    "tensorflow.compat.v1.image.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.initialize_local_variables": "doc",
    "tensorflow.compat.v1.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.initializers.random_normal": "doc",
    "tensorflow.compat.v1.io.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.compat.v1.io.TFRecordCompressionType": "doc",
    "tensorflow.compat.v1.io.deserialize_many_sparse": "doc",
    "tensorflow.compat.v1.keras.activations.softplus": "doc",
    "tensorflow.compat.v1.keras.callbacks.BaseLogger": "doc",
    "tensorflow.compat.v1.keras.initializers.uniform": "doc",
    "tensorflow.compat.v1.keras.layers.Bidirectional": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3D": "doc",
    "tensorflow.compat.v1.keras.layers.DenseFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianNoise": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.compat.v1.keras.losses.kl_divergence": "doc",
    "tensorflow.compat.v1.keras.losses.squared_hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.KLDivergence": "doc",
    "tensorflow.compat.v1.keras.metrics.LogCoshError": "doc",
    "tensorflow.compat.v1.keras.metrics.SquaredHinge": "doc",
    "tensorflow.compat.v1.keras.optimizers.Optimizer": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules": "doc",
    "tensorflow.compat.v1.keras.optimizers.serialize": "doc",
    "tensorflow.compat.v1.keras.utils.to_categorical": "doc",
    "tensorflow.compat.v1.layers.batch_normalization": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorZeros": "doc",
    "tensorflow.compat.v1.lite.RepresentativeDataset": "doc",
    "tensorflow.compat.v1.lookup.TextFileInitializer": "doc",
    "tensorflow.compat.v1.losses.absolute_difference": "doc",
    "tensorflow.compat.v1.math.reduce_euclidean_norm": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_prod": "doc",
    "tensorflow.compat.v1.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.metrics.precision_at_top_k": "doc",
    "tensorflow.compat.v1.nest.assert_same_structure": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.compute_accidental_hits": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DropoutWrapper": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMStateTuple": "doc",
    "tensorflow.compat.v1.nn.static_state_saving_rnn": "doc",
    "tensorflow.compat.v1.quantize_and_dequantize_v4": "doc",
    "tensorflow.compat.v1.random_uniform_initializer": "doc",
    "tensorflow.compat.v1.resource_variables_enabled": "doc",
    "tensorflow.compat.v1.sparse.sparse_dense_matmul": "doc",
    "tensorflow.compat.v1.sparse_tensor_dense_matmul": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.summary.SummaryDescription": "doc",
    "tensorflow.compat.v1.summary.all_v2_summary_ops": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding": "doc",
    "tensorflow.compat.v1.train.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.train.WorkerSessionCreator": "doc",
    "tensorflow.compat.v1.train.checkpoints_iterator": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_state": "doc",
    "tensorflow.compat.v1.train.init_from_checkpoint": "doc",
    "tensorflow.compat.v1.train.match_filenames_once": "doc",
    "tensorflow.compat.v1.train.range_input_producer": "doc",
    "tensorflow.compat.v1.train.slice_input_producer": "doc",
    "tensorflow.compat.v1.xla.experimental.jit_scope": "doc",
    "tensorflow.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.app.flags.CsvListSerializer": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.app.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.data.experimental.Structure": "doc",
    "tensorflow.compat.v1.data.make_one_shot_iterator": "doc",
    "tensorflow.compat.v1.debugging.assert_all_finite": "doc",
    "tensorflow.compat.v1.debugging.assert_less_equal": "doc",
    "tensorflow.compat.v1.debugging.assert_none_equal": "doc",
    "tensorflow.compat.v1.debugging.is_non_decreasing": "doc",
    "tensorflow.compat.v1.debugging.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.errors.InvalidArgumentError": "doc",
    "tensorflow.compat.v1.errors.UnauthenticatedError": "doc",
    "tensorflow.compat.v1.estimator.BaselineEstimator": "doc",
    "tensorflow.compat.v1.estimator.BaselineRegressor": "doc",
    "tensorflow.compat.v1.estimator.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.estimator.SessionRunContext": "doc",
    "tensorflow.compat.v1.estimator.WarmStartSettings": "doc",
    "tensorflow.compat.v1.feature_column.linear_model": "doc",
    "tensorflow.compat.v1.flags.CantOpenFlagFileError": "doc",
    "tensorflow.compat.v1.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.compat.v1.graph_util.import_graph_def": "doc",
    "tensorflow.compat.v1.image.extract_image_patches": "doc",
    "tensorflow.compat.v1.image.resize_image_with_pad": "doc",
    "tensorflow.compat.v1.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.compat.v1.keras.activations.serialize": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.Xception": "doc",
    "tensorflow.compat.v1.keras.applications.densenet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50": "doc",
    "tensorflow.compat.v1.keras.applications.xception": "doc",
    "tensorflow.compat.v1.keras.backend.clear_session": "doc",
    "tensorflow.compat.v1.keras.callbacks.TensorBoard": "doc",
    "tensorflow.compat.v1.keras.initializers.Identity": "doc",
    "tensorflow.compat.v1.keras.initializers.identity": "doc",
    "tensorflow.compat.v1.keras.metrics.TrueNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.TruePositives": "doc",
    "tensorflow.compat.v1.keras.metrics.kl_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.squared_hinge": "doc",
    "tensorflow.compat.v1.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn": "doc",
    "tensorflow.compat.v1.local_variables_initializer": "doc",
    "tensorflow.compat.v1.math.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.metrics.mean_relative_error": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.ResidualWrapper": "doc",
    "tensorflow.compat.v1.nn.static_bidirectional_rnn": "doc",
    "tensorflow.compat.v1.random.get_global_generator": "doc",
    "tensorflow.compat.v1.random.set_global_generator": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.test.assert_equal_graph_def": "doc",
    "tensorflow.compat.v1.test.compute_gradient_error": "doc",
    "tensorflow.compat.v1.train.Features.FeatureEntry": "doc",
    "tensorflow.compat.v1.train.SyncReplicasOptimizer": "doc",
    "tensorflow.compat.v1.train.cosine_decay_restarts": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_mtimes": "doc",
    "tensorflow.compat.v1.train.replica_device_setter": "doc",
    "tensorflow.compat.v1.train.string_input_producer": "doc",
    "tensorflow.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.ConfigProto.DeviceCountEntry": "doc",
    "tensorflow.compat.v1.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentSerializer": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.app.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.app.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.app.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.app.flags.register_validator": "doc",
    "tensorflow.compat.v1.assert_variables_initialized": "doc",
    "tensorflow.compat.v1.create_partitioned_variables": "doc",
    "tensorflow.compat.v1.data.experimental.CsvDataset": "doc",
    "tensorflow.compat.v1.data.experimental.SqlDataset": "doc",
    "tensorflow.compat.v1.data.experimental.take_while": "doc",
    "tensorflow.compat.v1.errors.DeadlineExceededError": "doc",
    "tensorflow.compat.v1.errors.PermissionDeniedError": "doc",
    "tensorflow.compat.v1.estimator.BaselineClassifier": "doc",
    "tensorflow.compat.v1.estimator.train_and_evaluate": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.global_variables_initializer": "doc",
    "tensorflow.compat.v1.graph_util.extract_sub_graph": "doc",
    "tensorflow.compat.v1.image.random_flip_left_right": "doc",
    "tensorflow.compat.v1.initializers.local_variables": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNet": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2": "doc",
    "tensorflow.compat.v1.keras.callbacks.CallbackList": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist": "doc",
    "tensorflow.compat.v1.keras.initializers.he_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.serialize": "doc",
    "tensorflow.compat.v1.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianDropout": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.StackedRNNCells": "doc",
    "tensorflow.compat.v1.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.compat.v1.keras.layers.TimeDistributed": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.FalseNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.FalsePositives": "doc",
    "tensorflow.compat.v1.keras.models.model_from_json": "doc",
    "tensorflow.compat.v1.keras.models.model_from_yaml": "doc",
    "tensorflow.compat.v1.keras.optimizers.deserialize": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence": "doc",
    "tensorflow.compat.v1.keras.regularizers.serialize": "doc",
    "tensorflow.compat.v1.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.compat.v1.lookup.StaticVocabularyTable": "doc",
    "tensorflow.compat.v1.losses.compute_weighted_loss": "doc",
    "tensorflow.compat.v1.losses.sigmoid_cross_entropy": "doc",
    "tensorflow.compat.v1.losses.softmax_cross_entropy": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.metrics.mean_cosine_distance": "doc",
    "tensorflow.compat.v1.metrics.recall_at_thresholds": "doc",
    "tensorflow.compat.v1.min_max_variable_partitioner": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.nn.bidirectional_dynamic_rnn": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter_v2": "doc",
    "tensorflow.compat.v1.nn.scale_regularization_loss": "doc",
    "tensorflow.compat.v1.nn.uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.Checker": "doc",
    "tensorflow.compat.v1.profiler.MultiGraphNodeProto": "doc",
    "tensorflow.compat.v1.python_io.tf_record_iterator": "doc",
    "tensorflow.compat.v1.random.all_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.stateless_categorical": "doc",
    "tensorflow.compat.v1.random.stateless_multinomial": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_strong": "doc",
    "tensorflow.compat.v1.train.experimental.LossScale": "doc",
    "tensorflow.compat.v1.truncated_normal_initializer": "doc",
    "tensorflow.compat.v1.variance_scaling_initializer": "doc",
    "tensorflow.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.NodeDef.ExperimentalDebugInfo": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_string": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.data.FixedLengthRecordDataset": "doc",
    "tensorflow.compat.v1.data.experimental.cardinality": "doc",
    "tensorflow.compat.v1.debugging.assert_non_negative": "doc",
    "tensorflow.compat.v1.debugging.assert_non_positive": "doc",
    "tensorflow.compat.v1.errors.ResourceExhaustedError": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.estimator.experimental.KMeans": "doc",
    "tensorflow.compat.v1.estimator.export.ExportOutput": "doc",
    "tensorflow.compat.v1.feature_column.crossed_column": "doc",
    "tensorflow.compat.v1.feature_column.numeric_column": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.image.resize_nearest_neighbor": "doc",
    "tensorflow.compat.v1.image.resize_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.initializers.global_variables": "doc",
    "tensorflow.compat.v1.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.keras.activations.deserialize": "doc",
    "tensorflow.compat.v1.keras.activations.exponential": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50V2": "doc",
    "tensorflow.compat.v1.keras.backend.is_keras_tensor": "doc",
    "tensorflow.compat.v1.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.compat.v1.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.compat.v1.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.load_data": "doc",
    "tensorflow.compat.v1.keras.initializers.Orthogonal": "doc",
    "tensorflow.compat.v1.keras.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalHinge": "doc",
    "tensorflow.compat.v1.keras.losses.CosineSimilarity": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_accuracy": "doc",
    "tensorflow.compat.v1.keras.utils.CustomObjectScope": "doc",
    "tensorflow.compat.v1.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.compat.v1.keras.utils.get_source_inputs": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.compat.v1.metrics.sparse_precision_at_k": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder_v2": "doc",
    "tensorflow.compat.v1.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.profiler.ProfileOptionBuilder": "doc",
    "tensorflow.compat.v1.quantization.quantized_concat": "doc",
    "tensorflow.compat.v1.random.experimental.Algorithm": "doc",
    "tensorflow.compat.v1.random.experimental.Generator": "doc",
    "tensorflow.compat.v1.resource_loader.load_resource": "doc",
    "tensorflow.compat.v1.saved_model.build_tensor_info": "doc",
    "tensorflow.compat.v1.saved_model.experimental.save": "doc",
    "tensorflow.compat.v1.signal.inverse_stft_window_fn": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_strong": "doc",
    "tensorflow.compat.v1.strings.unsorted_segment_join": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.train.update_checkpoint_state": "doc",
    "tensorflow.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.MetaGraphDef.SignatureDefEntry": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.autograph.experimental.Feature": "doc",
    "tensorflow.compat.v1.data.experimental.StatsOptions": "doc",
    "tensorflow.compat.v1.data.experimental.from_variant": "doc",
    "tensorflow.compat.v1.debugging.assert_greater_equal": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.errors.FailedPreconditionError": "doc",
    "tensorflow.compat.v1.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.estimator.export.PredictOutput": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec": "doc",
    "tensorflow.compat.v1.experimental.async_clear_error": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.compat.v1.keras.activations.hard_sigmoid": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetLarge": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152V2": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.compat.v1.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.compat.v1.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecay": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearModel": "doc",
    "tensorflow.compat.v1.keras.initializers.Initializer": "doc",
    "tensorflow.compat.v1.keras.initializers.deserialize": "doc",
    "tensorflow.compat.v1.keras.layers.AdditiveAttention": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.compat.v1.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.models.model_from_config": "doc",
    "tensorflow.compat.v1.keras.regularizers.Regularizer": "doc",
    "tensorflow.compat.v1.keras.regularizers.deserialize": "doc",
    "tensorflow.compat.v1.keras.utils.get_custom_objects": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorInversion": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.compat.v1.logging.TaskLevelStatusMessage": "doc",
    "tensorflow.compat.v1.losses.get_regularization_loss": "doc",
    "tensorflow.compat.v1.metrics.average_precision_at_k": "doc",
    "tensorflow.compat.v1.mixed_precision.FixedLossScale": "doc",
    "tensorflow.compat.v1.report_uninitialized_variables": "doc",
    "tensorflow.compat.v1.saved_model.is_valid_signature": "doc",
    "tensorflow.compat.v1.test.TestCase.failureException": "doc",
    "tensorflow.compat.v1.test.is_built_with_gpu_support": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.compat.v1.train.ExponentialMovingAverage": "doc",
    "tensorflow.compat.v1.train.GradientDescentOptimizer": "doc",
    "tensorflow.compat.v1.train.MonitoredTrainingSession": "doc",
    "tensorflow.compat.v1.train.ProximalAdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession": "doc",
    "tensorflow.compat.v1.train.experimental.PythonState": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch_join": "doc",
    "tensorflow.compat.v1.train.piecewise_constant_decay": "doc",
    "tensorflow.compat.v1.train.queue_runner.QueueRunner": "doc",
    "tensorflow.compat.v1.variable_axis_size_partitioner": "doc",
    "tensorflow.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.MetaGraphDef.CollectionDefEntry": "doc",
    "tensorflow.compat.v1.app.flags.CantOpenFlagFileError": "doc",
    "tensorflow.compat.v1.app.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.app.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.app.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.app.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.compat.v1.data.experimental.RandomDataset": "doc",
    "tensorflow.compat.v1.data.experimental.get_structure": "doc",
    "tensorflow.compat.v1.data.experimental.ignore_errors": "doc",
    "tensorflow.compat.v1.data.experimental.latency_stats": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch": "doc",
    "tensorflow.compat.v1.debugging.enable_check_numerics": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.compat.v1.estimator.PoissonRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.inputs.numpy_input_fn": "doc",
    "tensorflow.compat.v1.feature_column.embedding_column": "doc",
    "tensorflow.compat.v1.feature_column.indicator_column": "doc",
    "tensorflow.compat.v1.image.per_image_standardization": "doc",
    "tensorflow.compat.v1.initializers.tables_initializer": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3": "doc",
    "tensorflow.compat.v1.keras.backend.image_data_format": "doc",
    "tensorflow.compat.v1.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomNormal": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.keras.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.LayerNormalization": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.compat.v1.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.compat.v1.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.compat.v1.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.compat.v1.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.compat.v1.keras.utils.custom_object_scope": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_name": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.compat.v1.lite.experimental.load_delegate": "doc",
    "tensorflow.compat.v1.metrics.mean_per_class_accuracy": "doc",
    "tensorflow.compat.v1.metrics.precision_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.root_mean_squared_error": "doc",
    "tensorflow.compat.v1.nn.local_response_normalization": "doc",
    "tensorflow.compat.v1.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.compat.v1.saved_model.build_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.signature_constants": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils": "doc",
    "tensorflow.compat.v1.summary.get_summary_description": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdamParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.FtrlParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.compat.v1.train.get_or_create_global_step": "doc",
    "tensorflow.compat.v1.train.noisy_linear_cosine_decay": "doc",
    "tensorflow.compat.v1.app.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.data.experimental.TFRecordWriter": "doc",
    "tensorflow.compat.v1.data.experimental.copy_to_device": "doc",
    "tensorflow.compat.v1.data.make_initializable_iterator": "doc",
    "tensorflow.compat.v1.debugging.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.debugging.disable_check_numerics": "doc",
    "tensorflow.compat.v1.debugging.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.compat.v1.estimator.LogisticRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.inputs.pandas_input_fn": "doc",
    "tensorflow.compat.v1.feature_column.bucketized_column": "doc",
    "tensorflow.compat.v1.graph_util.remove_training_nodes": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_padded": "doc",
    "tensorflow.compat.v1.io.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.load_data": "doc",
    "tensorflow.compat.v1.keras.experimental.WideDeepModel": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomUniform": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.random_normal": "doc",
    "tensorflow.compat.v1.keras.losses.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_error": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorComposition": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.dynamic_rnn": "doc",
    "tensorflow.compat.v1.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.compat.v1.losses.get_regularization_losses": "doc",
    "tensorflow.compat.v1.mixed_precision.DynamicLossScale": "doc",
    "tensorflow.compat.v1.nn.log_uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.nondifferentiable_batch_function": "doc",
    "tensorflow.compat.v1.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.compat.v1.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.compat.v1.random.uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.required_space_to_batch_paddings": "doc",
    "tensorflow.compat.v1.saved_model.contains_saved_model": "doc",
    "tensorflow.compat.v1.saved_model.main_op_with_restore": "doc",
    "tensorflow.compat.v1.train.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.uniform_unit_scaling_initializer": "doc",
    "tensorflow.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.app.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.compat.v1.data.experimental.StatsAggregator": "doc",
    "tensorflow.compat.v1.data.experimental.TensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_window": "doc",
    "tensorflow.compat.v1.debugging.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.compat.v1.estimator.export.RegressionOutput": "doc",
    "tensorflow.compat.v1.estimator.tpu.InputPipelineConfig": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.compat.v1.initializers.uniform_unit_scaling": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils": "doc",
    "tensorflow.compat.v1.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_object": "doc",
    "tensorflow.compat.v1.lite.OpHint.OpHintArgumentTracker": "doc",
    "tensorflow.compat.v1.python_io.TFRecordCompressionType": "doc",
    "tensorflow.compat.v1.random.stateless_truncated_normal": "doc",
    "tensorflow.compat.v1.saved_model.predict_signature_def": "doc",
    "tensorflow.compat.v1.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding_column": "doc",
    "tensorflow.compat.v1.train.experimental.FixedLossScale": "doc",
    "tensorflow.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_sparse_tensor": "doc",
    "tensorflow.compat.v1.data.experimental.DatasetStructure": "doc",
    "tensorflow.compat.v1.data.experimental.ThreadingOptions": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_reducer": "doc",
    "tensorflow.compat.v1.data.experimental.make_csv_dataset": "doc",
    "tensorflow.compat.v1.debugging.get_log_device_placement": "doc",
    "tensorflow.compat.v1.debugging.set_log_device_placement": "doc",
    "tensorflow.compat.v1.image.combined_non_max_suppression": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_overlaps": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.compat.v1.keras.estimator.model_to_estimator": "doc",
    "tensorflow.compat.v1.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.compat.v1.keras.initializers.VarianceScaling": "doc",
    "tensorflow.compat.v1.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.load_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.save_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.compat.v1.keras.utils.serialize_keras_object": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TfLiteRNNCell": "doc",
    "tensorflow.compat.v1.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.compat.v1.losses.mean_pairwise_squared_error": "doc",
    "tensorflow.compat.v1.metrics.sensitivity_at_specificity": "doc",
    "tensorflow.compat.v1.metrics.specificity_at_sensitivity": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.CheckersEntry": "doc",
    "tensorflow.compat.v1.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.compat.v1.strings.unicode_split_with_offsets": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdagradParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_indexed_slices": "doc",
    "tensorflow.compat.v1.data.experimental.DistributeOptions": "doc",
    "tensorflow.compat.v1.data.experimental.OptionalStructure": "doc",
    "tensorflow.compat.v1.data.experimental.enumerate_dataset": "doc",
    "tensorflow.compat.v1.executing_eagerly_outside_functions": "doc",
    "tensorflow.compat.v1.experimental.function_executor_type": "doc",
    "tensorflow.compat.v1.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.compat.v1.image.resize_image_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.image.sample_distorted_bounding_box": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.compat.v1.keras.backend.set_image_data_format": "doc",
    "tensorflow.compat.v1.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.compat.v1.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.compat.v1.keras.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.keras.layers.ActivityRegularization": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.compat.v1.layers.experimental.set_keras_style": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TFLiteLSTMCell": "doc",
    "tensorflow.compat.v1.losses.sparse_softmax_cross_entropy": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto.IdToStringEntry": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_split": "doc",
    "tensorflow.compat.v1.register_tensor_conversion_function": "doc",
    "tensorflow.compat.v1.resource_loader.get_data_files_path": "doc",
    "tensorflow.compat.v1.resource_loader.readahead_file_path": "doc",
    "tensorflow.compat.v1.saved_model.utils.build_tensor_info": "doc",
    "tensorflow.compat.v1.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.compat.v1.sparse.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.compat.v1.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.compat.v1.train.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.train.queue_runner.add_queue_runner": "doc",
    "tensorflow.compat.v1.compat.forward_compatibility_horizon": "doc",
    "tensorflow.compat.v1.data.experimental.assert_cardinality": "doc",
    "tensorflow.compat.v1.data.experimental.get_single_element": "doc",
    "tensorflow.compat.v1.data.experimental.prefetch_to_device": "doc",
    "tensorflow.compat.v1.data.experimental.rejection_resample": "doc",
    "tensorflow.compat.v1.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.compat.v1.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.xception.Xception": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.compat.v1.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.compat.v1.metrics.true_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.true_positives_at_thresholds": "doc",
    "tensorflow.compat.v1.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize": "doc",
    "tensorflow.compat.v1.random.experimental.create_rng_state": "doc",
    "tensorflow.compat.v1.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.resource_loader.get_path_to_datafile": "doc",
    "tensorflow.compat.v1.saved_model.regression_signature_def": "doc",
    "tensorflow.compat.v1.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.compat.v1.autograph.experimental.do_not_convert": "doc",
    "tensorflow.compat.v1.data.experimental.OptimizationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.parallel_interleave": "doc",
    "tensorflow.compat.v1.errors.error_code_from_exception_type": "doc",
    "tensorflow.compat.v1.errors.exception_type_from_error_code": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.compat.v1.estimator.export.ClassificationOutput": "doc",
    "tensorflow.compat.v1.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.compat.v1.experimental.output_all_intermediates": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.compat.v1.image.generate_bounding_box_proposals": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_with_scores": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.compat.v1.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.compat.v1.keras.experimental.export_saved_model": "doc",
    "tensorflow.compat.v1.keras.layers.enable_v2_dtype_behavior": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.compat.v1.layers.experimental.keras_style_scope": "doc",
    "tensorflow.compat.v1.metrics.false_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.false_positives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.sparse_average_precision_at_k": "doc",
    "tensorflow.compat.v1.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_fold_in": "doc",
    "tensorflow.compat.v1.saved_model.builder.SavedModelBuilder": "doc",
    "tensorflow.compat.v1.train.generate_checkpoint_state_proto": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental.VirtualDevices": "doc",
    "tensorflow.compat.v1.data.experimental.TensorArrayStructure": "doc",
    "tensorflow.compat.v1.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.compat.v1.data.experimental.choose_from_datasets": "doc",
    "tensorflow.compat.v1.data.experimental.get_next_as_optional": "doc",
    "tensorflow.compat.v1.data.experimental.sample_from_datasets": "doc",
    "tensorflow.compat.v1.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.compat.v1.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.compat.v1.feature_column.make_parse_example_spec": "doc",
    "tensorflow.compat.v1.feature_column.sequence_numeric_column": "doc",
    "tensorflow.compat.v1.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.compat.v1.keras.layers.disable_v2_dtype_behavior": "doc",
    "tensorflow.compat.v1.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.compat.v1.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.compat.v1.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.compat.v1.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.compat.v1.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.compat.v1.train.ProximalGradientDescentOptimizer": "doc",
    "tensorflow.compat.v1.train.do_quantize_training_on_graphdef": "doc",
    "tensorflow.compat.v1.train.queue_runner.start_queue_runners": "doc",
    "tensorflow.compat.v1.app.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.compat.v1.autograph.experimental.set_loop_options": "doc",
    "tensorflow.compat.v1.data.experimental.RaggedTensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.SparseTensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.compat.v1.data.experimental.parse_example_dataset": "doc",
    "tensorflow.compat.v1.errors.raise_exception_on_not_ok_status": "doc",
    "tensorflow.compat.v1.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.compat.v1.experimental.register_filesystem_plugin": "doc",
    "tensorflow.compat.v1.feature_column.shared_embedding_columns": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.utils.register_keras_serializable": "doc",
    "tensorflow.compat.v1.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits_v2": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.compat.v1.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.compat.v1.saved_model.get_tensor_from_tensor_info": "doc",
    "tensorflow.compat.v1.saved_model.maybe_saved_model_directory": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.app.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.compat.v1.keras.experimental.load_from_saved_model": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto.InputShapesEntry": "doc",
    "tensorflow.compat.v1.random.experimental.get_global_generator": "doc",
    "tensorflow.compat.v1.random.experimental.set_global_generator": "doc",
    "tensorflow.compat.v1.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.saved_model.classification_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op_with_restore": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.compat.v1.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.compat.v1.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.graph_util.convert_variables_to_constants": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_input": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.tpu.experimental.shared_embedding_columns": "doc",
    "tensorflow.compat.v1.app.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.compat.v1.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.compat.v1.data.experimental.service.register_dataset": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.compat.v1.feature_column.weighted_categorical_column": "doc",
    "tensorflow.compat.v1.graph_util.tensor_shape_from_node_def_name": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_filter": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession.StepContext": "doc",
    "tensorflow.compat.v1.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.compat.v1.estimator.experimental.dnn_logit_fn_builder": "doc",
    "tensorflow.compat.v1.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.compat.v1.lite.experimental.convert_op_hints_to_stubs": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.compat.v1.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental.RunHandlerPoolOptions": "doc",
    "tensorflow.compat.v1.app.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.compat.v1.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.compat.v1.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.saved_model.utils.get_tensor_from_tensor_info": "doc",
    "tensorflow.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.compat.v1.estimator.experimental.linear_logit_fn_builder": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental.EmbeddingConfigSpec": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.compat.v1.saved_model.loader.maybe_saved_model_directory": "doc",
    "tensorflow.compat.v1.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.compat.v1.lite.experimental.get_potentially_supported_ops": "doc",
    "tensorflow.compat.v1.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.compat.v1.resource_loader.get_root_dir_with_all_resources": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.compat.v1.mixed_precision.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.MethodNameUpdater": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.is_valid_signature": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.build_signature_def": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.compat.v1.train.experimental.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch_with_legacy_function": "doc",
    "tensorflow.compat.v1.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.compat.v1.mixed_precision.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.tpu.experimental.StochasticGradientDescentParameters": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.mixed_precision.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.predict_signature_def": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.compat.v1.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.regression_signature_def": "doc",
    "tensorflow.compat.v1.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.classification_signature_def": "doc",
    "tensorflow.compat.v1.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.raw_ops.LoadAndRemapMatrix": "doc",
    "tensorflow.fingerprint": "doc",
    "tensorflow.no_gradient": "doc",
    "tensorflow.truncatediv": "doc",
    "tensorflow.math.segment_min": "doc",
    "tensorflow.linalg.tensor_diag": "doc",
    "tensorflow.random.categorical": "doc",
    "tensorflow.raw_ops.EncodeProto": "doc",
    "tensorflow.raw_ops.Fingerprint": "doc",
    "tensorflow.raw_ops.ScanDataset": "doc",
    "tensorflow.raw_ops.SegmentProd": "doc",
    "tensorflow.raw_ops.TruncateDiv": "doc",
    "tensorflow.estimator.add_metrics": "doc",
    "tensorflow.initializers.LecunNormal": "doc",
    "tensorflow.keras.layers.Concatenate": "doc",
    "tensorflow.keras.models.clone_model": "doc",
    "tensorflow.data.experimental.cardinality": "doc",
    "tensorflow.keras.activations.exponential": "doc",
    "tensorflow.keras.initializers.LecunNormal": "doc",
    "tensorflow.raw_ops.ShutdownDistributedTPU": "doc",
    "tensorflow.custom_gradient": "doc",
    "tensorflow.raw_ops.BatchMatrixDiag": "doc",
    "tensorflow.raw_ops.PreventGradient": "doc",
    "tensorflow.estimator.StepCounterHook": "doc",
    "tensorflow.keras.layers.TimeDistributed": "doc",
    "tensorflow.image.convert_image_dtype": "doc",
    "tensorflow.losses.binary_crossentropy": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEig": "doc",
    "tensorflow.estimator.CheckpointSaverHook": "doc",
    "tensorflow.keras.losses.binary_crossentropy": "doc",
    "tensorflow.raw_ops.ConfigureDistributedTPU": "doc",
    "tensorflow.estimator.CheckpointSaverListener": "doc",
    "tensorflow.function": "doc",
    "tensorflow.identity": "doc",
    "tensorflow.meshgrid": "doc",
    "tensorflow.subtract": "doc",
    "tensorflow.nn.softplus": "doc",
    "tensorflow.load_library": "doc",
    "tensorflow.quantization": "doc",
    "tensorflow.math.floordiv": "doc",
    "tensorflow.math.softplus": "doc",
    "tensorflow.math.subtract": "doc",
    "tensorflow.io.decode_image": "doc",
    "tensorflow.io.decode_proto": "doc",
    "tensorflow.io.encode_proto": "doc",
    "tensorflow.linalg.cholesky": "doc",
    "tensorflow.nn.l2_normalize": "doc",
    "tensorflow.raw_ops.ConcatV2": "doc",
    "tensorflow.raw_ops.FloorDiv": "doc",
    "tensorflow.raw_ops.Identity": "doc",
    "tensorflow.raw_ops.ListDiff": "doc",
    "tensorflow.raw_ops.Softplus": "doc",
    "tensorflow.raw_ops.SqrtGrad": "doc",
    "tensorflow.raw_ops.TanhGrad": "doc",
    "tensorflow.math.l2_normalize": "doc",
    "tensorflow.math.segment_prod": "doc",
    "tensorflow.sets.intersection": "doc",
    "tensorflow.autograph.to_graph": "doc",
    "tensorflow.image.decode_image": "doc",
    "tensorflow.errors.AbortedError": "doc",
    "tensorflow.errors.UnknownError": "doc",
    "tensorflow.linalg.l2_normalize": "doc",
    "tensorflow.constant_initializer": "doc",
    "tensorflow.raw_ops.ConcatOffset": "doc",
    "tensorflow.raw_ops.Prelinearize": "doc",
    "tensorflow.raw_ops.RestoreSlice": "doc",
    "tensorflow.raw_ops.ScatterNdAdd": "doc",
    "tensorflow.raw_ops.ScatterNdMax": "doc",
    "tensorflow.raw_ops.SdcaShrinkL1": "doc",
    "tensorflow.raw_ops.SoftplusGrad": "doc",
    "tensorflow.raw_ops.SoftsignGrad": "doc",
    "tensorflow.raw_ops.StopGradient": "doc",
    "tensorflow.experimental.tensorrt": "doc",
    "tensorflow.initializers.Identity": "doc",
    "tensorflow.initializers.identity": "doc",
    "tensorflow.keras.layers.Subtract": "doc",
    "tensorflow.keras.layers.subtract": "doc",
    "tensorflow.quantization.quantize": "doc",
    "tensorflow.image.grayscale_to_rgb": "doc",
    "tensorflow.keras.datasets.cifar100": "doc",
    "tensorflow.losses.CosineSimilarity": "doc",
    "tensorflow.quantization.dequantize": "doc",
    "tensorflow.raw_ops.AdjustContrastv2": "doc",
    "tensorflow.raw_ops.AssignVariableOp": "doc",
    "tensorflow.raw_ops.BatchMatrixSolve": "doc",
    "tensorflow.raw_ops.SelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.TensorScatterMin": "doc",
    "tensorflow.raw_ops.TensorScatterSub": "doc",
    "tensorflow.initializers.GlorotNormal": "doc",
    "tensorflow.initializers.LecunUniform": "doc",
    "tensorflow.initializers.lecun_normal": "doc",
    "tensorflow.image.crop_to_bounding_box": "doc",
    "tensorflow.keras.activations.softplus": "doc",
    "tensorflow.experimental.numpy.complex_": "doc",
    "tensorflow.experimental.numpy.identity": "doc",
    "tensorflow.experimental.numpy.isneginf": "doc",
    "tensorflow.experimental.numpy.meshgrid": "doc",
    "tensorflow.experimental.numpy.moveaxis": "doc",
    "tensorflow.experimental.numpy.positive": "doc",
    "tensorflow.experimental.numpy.subtract": "doc",
    "tensorflow.keras.applications.Xception": "doc",
    "tensorflow.keras.applications.xception": "doc",
    "tensorflow.keras.initializers.Identity": "doc",
    "tensorflow.keras.initializers.identity": "doc",
    "tensorflow.raw_ops.NonDeterministicInts": "doc",
    "tensorflow.keras.losses.CosineSimilarity": "doc",
    "tensorflow.quantization.quantized_concat": "doc",
    "tensorflow.data.experimental.from_variant": "doc",
    "tensorflow.experimental.numpy.iscomplexobj": "doc",
    "tensorflow.keras.applications.efficientnet": "doc",
    "tensorflow.keras.applications.mobilenet_v2": "doc",
    "tensorflow.keras.applications.mobilenet_v3": "doc",
    "tensorflow.keras.initializers.GlorotNormal": "doc",
    "tensorflow.keras.initializers.LecunUniform": "doc",
    "tensorflow.keras.initializers.lecun_normal": "doc",
    "tensorflow.saved_model.contains_saved_model": "doc",
    "tensorflow.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.summary.experimental.write_raw_pb": "doc",
    "tensorflow.keras.preprocessing.image.load_img": "doc",
    "tensorflow.keras.applications.xception.Xception": "doc",
    "tensorflow.quantization.quantize_and_dequantize": "doc",
    "tensorflow.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.experimental.tensorrt.ConversionParams": "doc",
    "tensorflow.keras.preprocessing.image.smart_resize": "doc",
    "tensorflow.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEigV2": "doc",
    "tensorflow.convert_to_tensor": "doc",
    "tensorflow.zeros_initializer": "doc",
    "tensorflow.math.is_non_decreasing": "doc",
    "tensorflow.image.random_saturation": "doc",
    "tensorflow.raw_ops.AnonymousIterator": "doc",
    "tensorflow.raw_ops.DecodeAndCropJpeg": "doc",
    "tensorflow.raw_ops.MapIncompleteSize": "doc",
    "tensorflow.raw_ops.NonMaxSuppression": "doc",
    "tensorflow.raw_ops.ResourceCountUpTo": "doc",
    "tensorflow.raw_ops.TemporaryVariable": "doc",
    "tensorflow.strings.unicode_transcode": "doc",
    "tensorflow.data.experimental.DistributeOptions": "doc",
    "tensorflow.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.stop_gradient": "doc",
    "tensorflow.nn.zero_fraction": "doc",
    "tensorflow.math.zero_fraction": "doc",
    "tensorflow.errors.NotFoundError": "doc",
    "tensorflow.raw_ops.BatchFunction": "doc",
    "tensorflow.raw_ops.BroadcastArgs": "doc",
    "tensorflow.raw_ops.CheckNumerics": "doc",
    "tensorflow.raw_ops.CropAndResize": "doc",
    "tensorflow.raw_ops.DecodeProtoV2": "doc",
    "tensorflow.raw_ops.MatchingFiles": "doc",
    "tensorflow.raw_ops.NextIteration": "doc",
    "tensorflow.raw_ops.PlaceholderV2": "doc",
    "tensorflow.raw_ops.ScatterUpdate": "doc",
    "tensorflow.raw_ops.SdcaOptimizer": "doc",
    "tensorflow.raw_ops.UnicodeEncode": "doc",
    "tensorflow.strings.unicode_split": "doc",
    "tensorflow.initializers.GlorotUniform": "doc",
    "tensorflow.initializers.glorot_normal": "doc",
    "tensorflow.initializers.lecun_uniform": "doc",
    "tensorflow.initializers.random_normal": "doc",
    "tensorflow.keras.layers.Convolution1D": "doc",
    "tensorflow.keras.layers.Convolution2D": "doc",
    "tensorflow.keras.layers.Convolution3D": "doc",
    "tensorflow.keras.layers.DenseFeatures": "doc",
    "tensorflow.keras.backend.clear_session": "doc",
    "tensorflow.keras.datasets.fashion_mnist": "doc",
    "tensorflow.keras.initializers.GlorotUniform": "doc",
    "tensorflow.keras.initializers.glorot_normal": "doc",
    "tensorflow.keras.initializers.lecun_uniform": "doc",
    "tensorflow.keras.initializers.random_normal": "doc",
    "tensorflow.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.raw_ops.BoostedTreesCenterBias": "doc",
    "tensorflow.raw_ops.NonSerializableDataset": "doc",
    "tensorflow.experimental.function_executor_type": "doc",
    "tensorflow.Operation": "doc",
    "tensorflow.ones_like": "doc",
    "tensorflow.tensordot": "doc",
    "tensorflow.linalg.normalize": "doc",
    "tensorflow.linalg.tensordot": "doc",
    "tensorflow.random.Algorithm": "doc",
    "tensorflow.random.Generator": "doc",
    "tensorflow.signal.ifftshift": "doc",
    "tensorflow.raw_ops.Bucketize": "doc",
    "tensorflow.raw_ops.DecodeBmp": "doc",
    "tensorflow.raw_ops.DecodeCSV": "doc",
    "tensorflow.raw_ops.DecodePng": "doc",
    "tensorflow.raw_ops.DecodeRaw": "doc",
    "tensorflow.raw_ops.DecodeWav": "doc",
    "tensorflow.raw_ops.EncodePng": "doc",
    "tensorflow.raw_ops.EncodeWav": "doc",
    "tensorflow.raw_ops.IdentityN": "doc",
    "tensorflow.raw_ops.LeftShift": "doc",
    "tensorflow.raw_ops.RestoreV2": "doc",
    "tensorflow.raw_ops.RsqrtGrad": "doc",
    "tensorflow.raw_ops.WriteFile": "doc",
    "tensorflow.strings.to_number": "doc",
    "tensorflow.summary.histogram": "doc",
    "tensorflow.estimator.RunConfig": "doc",
    "tensorflow.keras.utils.normalize": "doc",
    "tensorflow.initializers.he_normal": "doc",
    "tensorflow.keras.layers.Attention": "doc",
    "tensorflow.linalg.LinearOperatorDiag": "doc",
    "tensorflow.losses.BinaryCrossentropy": "doc",
    "tensorflow.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.raw_ops.BatchMatrixInverse": "doc",
    "tensorflow.raw_ops.BatchMatrixSetDiag": "doc",
    "tensorflow.raw_ops.BatchMatrixSolveLs": "doc",
    "tensorflow.raw_ops.ConjugateTranspose": "doc",
    "tensorflow.raw_ops.IsotonicRegression": "doc",
    "tensorflow.raw_ops.ResourceScatterDiv": "doc",
    "tensorflow.raw_ops.ResourceScatterMin": "doc",
    "tensorflow.raw_ops.ResourceScatterSub": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMin": "doc",
    "tensorflow.summary.create_file_writer": "doc",
    "tensorflow.summary.create_noop_writer": "doc",
    "tensorflow.experimental.numpy.complex64": "doc",
    "tensorflow.experimental.numpy.iscomplex": "doc",
    "tensorflow.experimental.numpy.ones_like": "doc",
    "tensorflow.experimental.numpy.tensordot": "doc",
    "tensorflow.keras.applications.resnet_v2": "doc",
    "tensorflow.keras.initializers.he_normal": "doc",
    "tensorflow.random.experimental.Algorithm": "doc",
    "tensorflow.random.experimental.Generator": "doc",
    "tensorflow.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.data.experimental.rejection_resample": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.nn.compute_accidental_hits": "doc",
    "tensorflow.errors.FailedPreconditionError": "doc",
    "tensorflow.losses.CategoricalCrossentropy": "doc",
    "tensorflow.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.space_to_batch": "doc",
    "tensorflow.vectorized_map": "doc",
    "tensorflow.io.matching_files": "doc",
    "tensorflow.nn.space_to_batch": "doc",
    "tensorflow.sparse.segment_sqrt_n": "doc",
    "tensorflow.raw_ops.ApplyPowerSign": "doc",
    "tensorflow.raw_ops.ReadVariableOp": "doc",
    "tensorflow.raw_ops.ReciprocalGrad": "doc",
    "tensorflow.raw_ops.SpaceToBatchND": "doc",
    "tensorflow.strings.unicode_encode": "doc",
    "tensorflow.debugging.assert_rank_in": "doc",
    "tensorflow.estimator.SessionRunArgs": "doc",
    "tensorflow.initializers.glorot_uniform": "doc",
    "tensorflow.keras.datasets.boston_housing": "doc",
    "tensorflow.keras.applications.EfficientNetB0": "doc",
    "tensorflow.keras.applications.EfficientNetB1": "doc",
    "tensorflow.keras.applications.EfficientNetB2": "doc",
    "tensorflow.keras.applications.EfficientNetB3": "doc",
    "tensorflow.keras.applications.EfficientNetB4": "doc",
    "tensorflow.keras.applications.EfficientNetB5": "doc",
    "tensorflow.keras.applications.EfficientNetB6": "doc",
    "tensorflow.keras.applications.EfficientNetB7": "doc",
    "tensorflow.keras.applications.imagenet_utils": "doc",
    "tensorflow.keras.initializers.glorot_uniform": "doc",
    "tensorflow.autograph.experimental.do_not_convert": "doc",
    "tensorflow.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.nn.batch_normalization": "doc",
    "tensorflow.nn.isotonic_regression": "doc",
    "tensorflow.image.non_max_suppression": "doc",
    "tensorflow.raw_ops.AnonymousIteratorV2": "doc",
    "tensorflow.raw_ops.AssignAddVariableOp": "doc",
    "tensorflow.raw_ops.AssignSubVariableOp": "doc",
    "tensorflow.raw_ops.BatchMatrixBandPart": "doc",
    "tensorflow.raw_ops.BatchMatrixDiagPart": "doc",
    "tensorflow.raw_ops.BoostedTreesPredict": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV3": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV4": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV5": "doc",
    "tensorflow.raw_ops.UnsortedSegmentJoin": "doc",
    "tensorflow.raw_ops.UnsortedSegmentProd": "doc",
    "tensorflow.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.losses.categorical_crossentropy": "doc",
    "tensorflow.raw_ops.DenseToDenseSetOperation": "doc",
    "tensorflow.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.io": "doc",
    "tensorflow.nn": "doc",
    "tensorflow.abs": "doc",
    "tensorflow.add": "doc",
    "tensorflow.eig": "doc",
    "tensorflow.exp": "doc",
    "tensorflow.eye": "doc",
    "tensorflow.pad": "doc",
    "tensorflow.pow": "doc",
    "tensorflow.sin": "doc",
    "tensorflow.tan": "doc",
    "tensorflow.tpu": "doc",
    "tensorflow.xla": "doc",
    "tensorflow.acos": "doc",
    "tensorflow.asin": "doc",
    "tensorflow.atan": "doc",
    "tensorflow.case": "doc",
    "tensorflow.data": "doc",
    "tensorflow.fill": "doc",
    "tensorflow.less": "doc",
    "tensorflow.lite": "doc",
    "tensorflow.math": "doc",
    "tensorflow.mlir": "doc",
    "tensorflow.nest": "doc",
    "tensorflow.rank": "doc",
    "tensorflow.roll": "doc",
    "tensorflow.scan": "doc",
    "tensorflow.sets": "doc",
    "tensorflow.sign": "doc",
    "tensorflow.sinh": "doc",
    "tensorflow.size": "doc",
    "tensorflow.sqrt": "doc",
    "tensorflow.tanh": "doc",
    "tensorflow.test": "doc",
    "tensorflow.tile": "doc",
    "tensorflow.DType": "doc",
    "tensorflow.Graph": "doc",
    "tensorflow.acosh": "doc",
    "tensorflow.add_n": "doc",
    "tensorflow.asinh": "doc",
    "tensorflow.atan2": "doc",
    "tensorflow.atanh": "doc",
    "tensorflow.audio": "doc",
    "tensorflow.equal": "doc",
    "tensorflow.floor": "doc",
    "tensorflow.foldl": "doc",
    "tensorflow.group": "doc",
    "tensorflow.image": "doc",
    "tensorflow.keras": "doc",
    "tensorflow.no_op": "doc",
    "tensorflow.print": "doc",
    "tensorflow.queue": "doc",
    "tensorflow.range": "doc",
    "tensorflow.round": "doc",
    "tensorflow.shape": "doc",
    "tensorflow.slice": "doc",
    "tensorflow.split": "doc",
    "tensorflow.stack": "doc",
    "tensorflow.tuple": "doc",
    "tensorflow.types": "doc",
    "tensorflow.where": "doc",
    "tensorflow.zeros": "doc",
    "tensorflow.Assert": "doc",
    "tensorflow.Module": "doc",
    "tensorflow.Tensor": "doc",
    "tensorflow.argmax": "doc",
    "tensorflow.argmin": "doc",
    "tensorflow.cumsum": "doc",
    "tensorflow.device": "doc",
    "tensorflow.divide": "doc",
    "tensorflow.dtypes": "doc",
    "tensorflow.einsum": "doc",
    "tensorflow.errors": "doc",
    "tensorflow.gather": "doc",
    "tensorflow.linalg": "doc",
    "tensorflow.lookup": "doc",
    "tensorflow.losses": "doc",
    "tensorflow.map_fn": "doc",
    "tensorflow.matmul": "doc",
    "tensorflow.nn.elu": "doc",
    "tensorflow.nn.lrn": "doc",
    "tensorflow.ragged": "doc",
    "tensorflow.random": "doc",
    "tensorflow.repeat": "doc",
    "tensorflow.signal": "doc",
    "tensorflow.sparse": "doc",
    "tensorflow.square": "doc",
    "tensorflow.unique": "doc",
    "tensorflow.argsort": "doc",
    "tensorflow.bitcast": "doc",
    "tensorflow.bitwise": "doc",
    "tensorflow.eigvals": "doc",
    "tensorflow.greater": "doc",
    "tensorflow.maximum": "doc",
    "tensorflow.minimum": "doc",
    "tensorflow.nn.gelu": "doc",
    "tensorflow.nn.pool": "doc",
    "tensorflow.nn.relu": "doc",
    "tensorflow.nn.selu": "doc",
    "tensorflow.nn.silu": "doc",
    "tensorflow.nn.tanh": "doc",
    "tensorflow.one_hot": "doc",
    "tensorflow.raw_ops": "doc",
    "tensorflow.realdiv": "doc",
    "tensorflow.reshape": "doc",
    "tensorflow.reverse": "doc",
    "tensorflow.shape_n": "doc",
    "tensorflow.sigmoid": "doc",
    "tensorflow.squeeze": "doc",
    "tensorflow.strings": "doc",
    "tensorflow.summary": "doc",
    "tensorflow.truediv": "doc",
    "tensorflow.unstack": "doc",
    "tensorflow.version": "doc",
    "tensorflow.TypeSpec": "doc",
    "tensorflow.Variable": "doc",
    "tensorflow.as_dtype": "doc",
    "tensorflow.autodiff": "doc",
    "tensorflow.hessians": "doc",
    "tensorflow.io.gfile": "doc",
    "tensorflow.linspace": "doc",
    "tensorflow.math.abs": "doc",
    "tensorflow.math.add": "doc",
    "tensorflow.math.erf": "doc",
    "tensorflow.math.exp": "doc",
    "tensorflow.math.log": "doc",
    "tensorflow.math.mod": "doc",
    "tensorflow.math.pow": "doc",
    "tensorflow.math.sin": "doc",
    "tensorflow.math.tan": "doc",
    "tensorflow.multiply": "doc",
    "tensorflow.negative": "doc",
    "tensorflow.nn.crelu": "doc",
    "tensorflow.nn.relu6": "doc",
    "tensorflow.nn.swish": "doc",
    "tensorflow.nn.top_k": "doc",
    "tensorflow.profiler": "doc",
    "tensorflow.autograph": "doc",
    "tensorflow.debugging": "doc",
    "tensorflow.estimator": "doc",
    "tensorflow.gather_nd": "doc",
    "tensorflow.gradients": "doc",
    "tensorflow.is_tensor": "doc",
    "tensorflow.linalg.lu": "doc",
    "tensorflow.linalg.qr": "doc",
    "tensorflow.math.acos": "doc",
    "tensorflow.math.asin": "doc",
    "tensorflow.math.atan": "doc",
    "tensorflow.math.erfc": "doc",
    "tensorflow.math.imag": "doc",
    "tensorflow.math.less": "doc",
    "tensorflow.math.real": "doc",
    "tensorflow.math.sign": "doc",
    "tensorflow.math.sinh": "doc",
    "tensorflow.math.sqrt": "doc",
    "tensorflow.math.tanh": "doc",
    "tensorflow.math.zeta": "doc",
    "tensorflow.not_equal": "doc",
    "tensorflow.sets.size": "doc",
    "tensorflow.test.main": "doc",
    "tensorflow.timestamp": "doc",
    "tensorflow.transpose": "doc",
    "tensorflow.DeviceSpec": "doc",
    "tensorflow.TensorSpec": "doc",
    "tensorflow.get_logger": "doc",
    "tensorflow.graph_util": "doc",
    "tensorflow.identity_n": "doc",
    "tensorflow.image.ssim": "doc",
    "tensorflow.init_scope": "doc",
    "tensorflow.io.is_jpeg": "doc",
    "tensorflow.less_equal": "doc",
    "tensorflow.linalg.det": "doc",
    "tensorflow.linalg.eig": "doc",
    "tensorflow.linalg.eye": "doc",
    "tensorflow.linalg.inv": "doc",
    "tensorflow.linalg.svd": "doc",
    "tensorflow.logical_or": "doc",
    "tensorflow.losses.KLD": "doc",
    "tensorflow.losses.MAE": "doc",
    "tensorflow.losses.MSE": "doc",
    "tensorflow.losses.get": "doc",
    "tensorflow.losses.kld": "doc",
    "tensorflow.losses.mae": "doc",
    "tensorflow.losses.mse": "doc",
    "tensorflow.math.acosh": "doc",
    "tensorflow.math.add_n": "doc",
    "tensorflow.math.angle": "doc",
    "tensorflow.math.asinh": "doc",
    "tensorflow.math.atan2": "doc",
    "tensorflow.math.atanh": "doc",
    "tensorflow.math.equal": "doc",
    "tensorflow.math.expm1": "doc",
    "tensorflow.math.floor": "doc",
    "tensorflow.math.lbeta": "doc",
    "tensorflow.math.log1p": "doc",
    "tensorflow.math.round": "doc",
    "tensorflow.math.rsqrt": "doc",
    "tensorflow.math.top_k": "doc",
    "tensorflow.math.xdivy": "doc",
    "tensorflow.math.xlogy": "doc",
    "tensorflow.name_scope": "doc",
    "tensorflow.nn.dropout": "doc",
    "tensorflow.nn.l2_loss": "doc",
    "tensorflow.nn.moments": "doc",
    "tensorflow.nn.sigmoid": "doc",
    "tensorflow.optimizers": "doc",
    "tensorflow.raw_ops.If": "doc",
    "tensorflow.raw_ops.Lu": "doc",
    "tensorflow.raw_ops.Qr": "doc",
    "tensorflow.reduce_all": "doc",
    "tensorflow.reduce_any": "doc",
    "tensorflow.reduce_max": "doc",
    "tensorflow.reduce_min": "doc",
    "tensorflow.reduce_sum": "doc",
    "tensorflow.scalar_mul": "doc",
    "tensorflow.sets.union": "doc",
    "tensorflow.signal.dct": "doc",
    "tensorflow.signal.fft": "doc",
    "tensorflow.sparse.add": "doc",
    "tensorflow.sparse.eye": "doc",
    "tensorflow.while_loop": "doc",
    "tensorflow.zeros_like": "doc",
    "tensorflow.TensorArray": "doc",
    "tensorflow.TensorShape": "doc",
    "tensorflow.assert_less": "doc",
    "tensorflow.assert_rank": "doc",
    "tensorflow.expand_dims": "doc",
    "tensorflow.keras.Input": "doc",
    "tensorflow.keras.Model": "doc",
    "tensorflow.keras.utils": "doc",
    "tensorflow.linalg.diag": "doc",
    "tensorflow.linalg.eigh": "doc",
    "tensorflow.linalg.expm": "doc",
    "tensorflow.linalg.logm": "doc",
    "tensorflow.linalg.pinv": "doc",
    "tensorflow.lite.OpsSet": "doc",
    "tensorflow.logical_and": "doc",
    "tensorflow.logical_not": "doc",
    "tensorflow.losses.Loss": "doc",
    "tensorflow.losses.MAPE": "doc",
    "tensorflow.losses.MSLE": "doc",
    "tensorflow.losses.mape": "doc",
    "tensorflow.losses.msle": "doc",
    "tensorflow.math.argmax": "doc",
    "tensorflow.math.argmin": "doc",
    "tensorflow.math.cumsum": "doc",
    "tensorflow.math.divide": "doc",
    "tensorflow.math.erfinv": "doc",
    "tensorflow.math.igamma": "doc",
    "tensorflow.math.is_inf": "doc",
    "tensorflow.math.is_nan": "doc",
    "tensorflow.math.lgamma": "doc",
    "tensorflow.math.square": "doc",
    "tensorflow.nn.avg_pool": "doc",
    "tensorflow.nn.bias_add": "doc",
    "tensorflow.nn.ctc_loss": "doc",
    "tensorflow.nn.in_top_k": "doc",
    "tensorflow.nn.max_pool": "doc",
    "tensorflow.nn.nce_loss": "doc",
    "tensorflow.py_function": "doc",
    "tensorflow.raw_ops.Abs": "doc",
    "tensorflow.raw_ops.Add": "doc",
    "tensorflow.raw_ops.All": "doc",
    "tensorflow.raw_ops.Any": "doc",
    "tensorflow.raw_ops.Cos": "doc",
    "tensorflow.raw_ops.Div": "doc",
    "tensorflow.raw_ops.Eig": "doc",
    "tensorflow.raw_ops.Elu": "doc",
    "tensorflow.raw_ops.Erf": "doc",
    "tensorflow.raw_ops.Exp": "doc",
    "tensorflow.raw_ops.FFT": "doc",
    "tensorflow.raw_ops.Inv": "doc",
    "tensorflow.raw_ops.LRN": "doc",
    "tensorflow.raw_ops.Log": "doc",
    "tensorflow.raw_ops.Max": "doc",
    "tensorflow.raw_ops.Min": "doc",
    "tensorflow.raw_ops.Mod": "doc",
    "tensorflow.raw_ops.Mul": "doc",
    "tensorflow.raw_ops.Neg": "doc",
    "tensorflow.raw_ops.Pad": "doc",
    "tensorflow.raw_ops.Pow": "doc",
    "tensorflow.raw_ops.Sin": "doc",
    "tensorflow.raw_ops.Sub": "doc",
    "tensorflow.raw_ops.Sum": "doc",
    "tensorflow.raw_ops.Svd": "doc",
    "tensorflow.raw_ops.Tan": "doc",
    "tensorflow.reduce_mean": "doc",
    "tensorflow.reduce_prod": "doc",
    "tensorflow.saved_model": "doc",
    "tensorflow.signal.idct": "doc",
    "tensorflow.signal.ifft": "doc",
    "tensorflow.signal.mdct": "doc",
    "tensorflow.signal.rfft": "doc",
    "tensorflow.signal.stft": "doc",
    "tensorflow.sparse.mask": "doc",
    "tensorflow.switch_case": "doc",
    "tensorflow.truncatemod": "doc",
    "tensorflow.GradientTape": "doc",
    "tensorflow.OptionalSpec": "doc",
    "tensorflow.RaggedTensor": "doc",
    "tensorflow.SparseTensor": "doc",
    "tensorflow.assert_equal": "doc",
    "tensorflow.boolean_mask": "doc",
    "tensorflow.broadcast_to": "doc",
    "tensorflow.clip_by_norm": "doc",
    "tensorflow.data.Dataset": "doc",
    "tensorflow.data.Options": "doc",
    "tensorflow.dtypes.DType": "doc",
    "tensorflow.ensure_shape": "doc",
    "tensorflow.experimental": "doc",
    "tensorflow.image.resize": "doc",
    "tensorflow.initializers": "doc",
    "tensorflow.io.read_file": "doc",
    "tensorflow.keras.layers": "doc",
    "tensorflow.keras.losses": "doc",
    "tensorflow.keras.models": "doc",
    "tensorflow.linalg.lstsq": "doc",
    "tensorflow.linalg.solve": "doc",
    "tensorflow.linalg.sqrtm": "doc",
    "tensorflow.linalg.trace": "doc",
    "tensorflow.losses.Hinge": "doc",
    "tensorflow.losses.Huber": "doc",
    "tensorflow.losses.hinge": "doc",
    "tensorflow.losses.huber": "doc",
    "tensorflow.make_ndarray": "doc",
    "tensorflow.math.betainc": "doc",
    "tensorflow.math.digamma": "doc",
    "tensorflow.math.erfcinv": "doc",
    "tensorflow.math.greater": "doc",
    "tensorflow.math.igammac": "doc",
    "tensorflow.math.maximum": "doc",
    "tensorflow.math.minimum": "doc",
    "tensorflow.math.polyval": "doc",
    "tensorflow.math.sigmoid": "doc",
    "tensorflow.math.special": "doc",
    "tensorflow.math.truediv": "doc",
    "tensorflow.math.xlog1py": "doc",
    "tensorflow.nest.flatten": "doc",
    "tensorflow.nn.erosion2d": "doc",
    "tensorflow.ragged.range": "doc",
    "tensorflow.ragged.stack": "doc",
    "tensorflow.random.gamma": "doc",
    "tensorflow.raw_ops.Acos": "doc",
    "tensorflow.raw_ops.AddN": "doc",
    "tensorflow.raw_ops.Asin": "doc",
    "tensorflow.raw_ops.Atan": "doc",
    "tensorflow.raw_ops.Case": "doc",
    "tensorflow.raw_ops.Cast": "doc",
    "tensorflow.raw_ops.Ceil": "doc",
    "tensorflow.raw_ops.Copy": "doc",
    "tensorflow.raw_ops.Cosh": "doc",
    "tensorflow.raw_ops.Diag": "doc",
    "tensorflow.raw_ops.Erfc": "doc",
    "tensorflow.raw_ops.Exit": "doc",
    "tensorflow.raw_ops.Fact": "doc",
    "tensorflow.raw_ops.Fill": "doc",
    "tensorflow.raw_ops.IFFT": "doc",
    "tensorflow.raw_ops.Imag": "doc",
    "tensorflow.raw_ops.Less": "doc",
    "tensorflow.raw_ops.Mean": "doc",
    "tensorflow.raw_ops.Mfcc": "doc",
    "tensorflow.raw_ops.NoOp": "doc",
    "tensorflow.raw_ops.Pack": "doc",
    "tensorflow.raw_ops.Prod": "doc",
    "tensorflow.raw_ops.RFFT": "doc",
    "tensorflow.raw_ops.Rank": "doc",
    "tensorflow.raw_ops.Real": "doc",
    "tensorflow.raw_ops.Recv": "doc",
    "tensorflow.raw_ops.Relu": "doc",
    "tensorflow.raw_ops.Roll": "doc",
    "tensorflow.raw_ops.Save": "doc",
    "tensorflow.raw_ops.Selu": "doc",
    "tensorflow.raw_ops.Send": "doc",
    "tensorflow.raw_ops.Sign": "doc",
    "tensorflow.raw_ops.Sinh": "doc",
    "tensorflow.raw_ops.Size": "doc",
    "tensorflow.raw_ops.Sqrt": "doc",
    "tensorflow.raw_ops.Tanh": "doc",
    "tensorflow.raw_ops.Tile": "doc",
    "tensorflow.raw_ops.TopK": "doc",
    "tensorflow.raw_ops.Zeta": "doc",
    "tensorflow.searchsorted": "doc",
    "tensorflow.signal.fft2d": "doc",
    "tensorflow.signal.fft3d": "doc",
    "tensorflow.signal.frame": "doc",
    "tensorflow.signal.irfft": "doc",
    "tensorflow.sparse.slice": "doc",
    "tensorflow.sparse.split": "doc",
    "tensorflow.summary.text": "doc",
    "tensorflow.IndexedSlices": "doc",
    "tensorflow.clip_by_value": "doc",
    "tensorflow.data.Iterator": "doc",
    "tensorflow.edit_distance": "doc",
    "tensorflow.greater_equal": "doc",
    "tensorflow.image.is_jpeg": "doc",
    "tensorflow.io.decode_bmp": "doc",
    "tensorflow.io.decode_csv": "doc",
    "tensorflow.io.decode_png": "doc",
    "tensorflow.io.encode_png": "doc",
    "tensorflow.io.gfile.glob": "doc",
    "tensorflow.io.gfile.stat": "doc",
    "tensorflow.io.gfile.walk": "doc",
    "tensorflow.io.write_file": "doc",
    "tensorflow.keras.backend": "doc",
    "tensorflow.linalg.einsum": "doc",
    "tensorflow.linalg.logdet": "doc",
    "tensorflow.linalg.matmul": "doc",
    "tensorflow.linalg.matvec": "doc",
    "tensorflow.lite.Optimize": "doc",
    "tensorflow.math.bincount": "doc",
    "tensorflow.math.floormod": "doc",
    "tensorflow.math.in_top_k": "doc",
    "tensorflow.math.multiply": "doc",
    "tensorflow.math.negative": "doc",
    "tensorflow.nn.avg_pool1d": "doc",
    "tensorflow.nn.avg_pool2d": "doc",
    "tensorflow.nn.avg_pool3d": "doc",
    "tensorflow.nn.dilation2d": "doc",
    "tensorflow.nn.leaky_relu": "doc",
    "tensorflow.nn.max_pool1d": "doc",
    "tensorflow.nn.max_pool2d": "doc",
    "tensorflow.nn.max_pool3d": "doc",
    "tensorflow.random.normal": "doc",
    "tensorflow.raw_ops.Abort": "doc",
    "tensorflow.raw_ops.Acosh": "doc",
    "tensorflow.raw_ops.AddV2": "doc",
    "tensorflow.raw_ops.Angle": "doc",
    "tensorflow.raw_ops.Asinh": "doc",
    "tensorflow.raw_ops.Atan2": "doc",
    "tensorflow.raw_ops.Atanh": "doc",
    "tensorflow.raw_ops.Batch": "doc",
    "tensorflow.raw_ops.Cross": "doc",
    "tensorflow.raw_ops.Dawsn": "doc",
    "tensorflow.raw_ops.Empty": "doc",
    "tensorflow.raw_ops.Equal": "doc",
    "tensorflow.raw_ops.Expm1": "doc",
    "tensorflow.raw_ops.FFT2D": "doc",
    "tensorflow.raw_ops.FFT3D": "doc",
    "tensorflow.raw_ops.Floor": "doc",
    "tensorflow.raw_ops.IRFFT": "doc",
    "tensorflow.raw_ops.IsInf": "doc",
    "tensorflow.raw_ops.IsNan": "doc",
    "tensorflow.raw_ops.Log1p": "doc",
    "tensorflow.raw_ops.Merge": "doc",
    "tensorflow.raw_ops.PadV2": "doc",
    "tensorflow.raw_ops.Print": "doc",
    "tensorflow.raw_ops.Range": "doc",
    "tensorflow.raw_ops.Relu6": "doc",
    "tensorflow.raw_ops.Round": "doc",
    "tensorflow.raw_ops.Rsqrt": "doc",
    "tensorflow.raw_ops.Shape": "doc",
    "tensorflow.raw_ops.Slice": "doc",
    "tensorflow.raw_ops.Split": "doc",
    "tensorflow.raw_ops.Stack": "doc",
    "tensorflow.raw_ops.Stage": "doc",
    "tensorflow.raw_ops.Where": "doc",
    "tensorflow.raw_ops.While": "doc",
    "tensorflow.raw_ops.Xdivy": "doc",
    "tensorflow.raw_ops.Xlogy": "doc",
    "tensorflow.saturate_cast": "doc",
    "tensorflow.sequence_mask": "doc",
    "tensorflow.signal.ifft2d": "doc",
    "tensorflow.signal.ifft3d": "doc",
    "tensorflow.signal.rfft2d": "doc",
    "tensorflow.signal.rfft3d": "doc",
    "tensorflow.strided_slice": "doc",
    "tensorflow.strings.split": "doc",
    "tensorflow.strings.upper": "doc",
    "tensorflow.summary.audio": "doc",
    "tensorflow.summary.flush": "doc",
    "tensorflow.summary.image": "doc",
    "tensorflow.summary.write": "doc",
    "tensorflow.test.TestCase": "doc",
    "tensorflow.unravel_index": "doc",
    "tensorflow.assert_greater": "doc",
    "tensorflow.batch_to_space": "doc",
    "tensorflow.bitwise.invert": "doc",
    "tensorflow.dynamic_stitch": "doc",
    "tensorflow.errors.OpError": "doc",
    "tensorflow.estimator.Head": "doc",
    "tensorflow.feature_column": "doc",
    "tensorflow.io.decode_jpeg": "doc",
    "tensorflow.io.encode_jpeg": "doc",
    "tensorflow.io.gfile.GFile": "doc",
    "tensorflow.io.gfile.isdir": "doc",
    "tensorflow.io.gfile.mkdir": "doc",
    "tensorflow.io.write_graph": "doc",
    "tensorflow.keras.datasets": "doc",
    "tensorflow.keras.wrappers": "doc",
    "tensorflow.linalg.adjoint": "doc",
    "tensorflow.linalg.eigvals": "doc",
    "tensorflow.linalg.slogdet": "doc",
    "tensorflow.losses.LogCosh": "doc",
    "tensorflow.losses.Poisson": "doc",
    "tensorflow.losses.logcosh": "doc",
    "tensorflow.losses.poisson": "doc",
    "tensorflow.math.bessel_i0": "doc",
    "tensorflow.math.bessel_i1": "doc",
    "tensorflow.math.is_finite": "doc",
    "tensorflow.math.nextafter": "doc",
    "tensorflow.math.not_equal": "doc",
    "tensorflow.math.polygamma": "doc",
    "tensorflow.nest.is_nested": "doc",
    "tensorflow.nn.log_softmax": "doc",
    "tensorflow.numpy_function": "doc",
    "tensorflow.optimizers.SGD": "doc",
    "tensorflow.optimizers.get": "doc",
    "tensorflow.parallel_stack": "doc",
    "tensorflow.random.poisson": "doc",
    "tensorflow.random.shuffle": "doc",
    "tensorflow.random.uniform": "doc",
    "tensorflow.raw_ops.ArgMax": "doc",
    "tensorflow.raw_ops.ArgMin": "doc",
    "tensorflow.raw_ops.Assert": "doc",
    "tensorflow.raw_ops.Assign": "doc",
    "tensorflow.raw_ops.Cumsum": "doc",
    "tensorflow.raw_ops.Einsum": "doc",
    "tensorflow.raw_ops.Erfinv": "doc",
    "tensorflow.raw_ops.Expint": "doc",
    "tensorflow.raw_ops.Gather": "doc",
    "tensorflow.raw_ops.IFFT2D": "doc",
    "tensorflow.raw_ops.IFFT3D": "doc",
    "tensorflow.raw_ops.Igamma": "doc",
    "tensorflow.raw_ops.InTopK": "doc",
    "tensorflow.raw_ops.Invert": "doc",
    "tensorflow.raw_ops.L2Loss": "doc",
    "tensorflow.raw_ops.Lgamma": "doc",
    "tensorflow.raw_ops.MatMul": "doc",
    "tensorflow.raw_ops.OneHot": "doc",
    "tensorflow.raw_ops.PyFunc": "doc",
    "tensorflow.raw_ops.RFFT2D": "doc",
    "tensorflow.raw_ops.RFFT3D": "doc",
    "tensorflow.raw_ops.SaveV2": "doc",
    "tensorflow.raw_ops.Select": "doc",
    "tensorflow.raw_ops.ShapeN": "doc",
    "tensorflow.raw_ops.Spence": "doc",
    "tensorflow.raw_ops.SplitV": "doc",
    "tensorflow.raw_ops.Square": "doc",
    "tensorflow.raw_ops.Substr": "doc",
    "tensorflow.raw_ops.Switch": "doc",
    "tensorflow.raw_ops.ToBool": "doc",
    "tensorflow.raw_ops.TopKV2": "doc",
    "tensorflow.raw_ops.Unique": "doc",
    "tensorflow.raw_ops.Unpack": "doc",
    "tensorflow.signal.irfft2d": "doc",
    "tensorflow.signal.irfft3d": "doc",
    "tensorflow.sparse.maximum": "doc",
    "tensorflow.sparse.minimum": "doc",
    "tensorflow.sparse.reorder": "doc",
    "tensorflow.sparse.reshape": "doc",
    "tensorflow.strings.format": "doc",
    "tensorflow.strings.length": "doc",
    "tensorflow.strings.ngrams": "doc",
    "tensorflow.strings.substr": "doc",
    "tensorflow.summary.scalar": "doc",
    "tensorflow.test.Benchmark": "doc",
    "tensorflow.CriticalSection": "doc",
    "tensorflow.TensorArraySpec": "doc",
    "tensorflow.autograph.trace": "doc",
    "tensorflow.dtypes.as_dtype": "doc",
    "tensorflow.guarantee_const": "doc",
    "tensorflow.image.transpose": "doc",
    "tensorflow.inside_function": "doc",
    "tensorflow.io.gfile.exists": "doc",
    "tensorflow.io.gfile.remove": "doc",
    "tensorflow.io.gfile.rename": "doc",
    "tensorflow.io.parse_tensor": "doc",
    "tensorflow.keras.callbacks": "doc",
    "tensorflow.keras.estimator": "doc",
    "tensorflow.linalg.eigvalsh": "doc",
    "tensorflow.linalg.lu_solve": "doc",
    "tensorflow.linalg.set_diag": "doc",
    "tensorflow.lite.TargetSpec": "doc",
    "tensorflow.load_op_library": "doc",
    "tensorflow.losses.log_cosh": "doc",
    "tensorflow.math.bessel_i0e": "doc",
    "tensorflow.math.bessel_i1e": "doc",
    "tensorflow.math.less_equal": "doc",
    "tensorflow.math.logical_or": "doc",
    "tensorflow.math.reciprocal": "doc",
    "tensorflow.math.reduce_all": "doc",
    "tensorflow.math.reduce_any": "doc",
    "tensorflow.math.reduce_max": "doc",
    "tensorflow.math.reduce_min": "doc",
    "tensorflow.math.reduce_std": "doc",
    "tensorflow.math.reduce_sum": "doc",
    "tensorflow.math.scalar_mul": "doc",
    "tensorflow.mixed_precision": "doc",
    "tensorflow.optimizers.Adam": "doc",
    "tensorflow.queue.FIFOQueue": "doc",
    "tensorflow.queue.QueueBase": "doc",
    "tensorflow.random.set_seed": "doc",
    "tensorflow.raw_ops.AvgPool": "doc",
    "tensorflow.raw_ops.Barrier": "doc",
    "tensorflow.raw_ops.Betainc": "doc",
    "tensorflow.raw_ops.BiasAdd": "doc",
    "tensorflow.raw_ops.Bitcast": "doc",
    "tensorflow.raw_ops.CTCLoss": "doc",
    "tensorflow.raw_ops.Complex": "doc",
    "tensorflow.raw_ops.Cumprod": "doc",
    "tensorflow.raw_ops.Digamma": "doc",
    "tensorflow.raw_ops.EluGrad": "doc",
    "tensorflow.raw_ops.Greater": "doc",
    "tensorflow.raw_ops.IRFFT2D": "doc",
    "tensorflow.raw_ops.IRFFT3D": "doc",
    "tensorflow.raw_ops.Igammac": "doc",
    "tensorflow.raw_ops.InvGrad": "doc",
    "tensorflow.raw_ops.LRNGrad": "doc",
    "tensorflow.raw_ops.MapPeek": "doc",
    "tensorflow.raw_ops.MapSize": "doc",
    "tensorflow.raw_ops.MaxPool": "doc",
    "tensorflow.raw_ops.Maximum": "doc",
    "tensorflow.raw_ops.Minimum": "doc",
    "tensorflow.raw_ops.MutexV2": "doc",
    "tensorflow.raw_ops.PrintV2": "doc",
    "tensorflow.raw_ops.RealDiv": "doc",
    "tensorflow.raw_ops.RefExit": "doc",
    "tensorflow.raw_ops.Reshape": "doc",
    "tensorflow.raw_ops.Restore": "doc",
    "tensorflow.raw_ops.Reverse": "doc",
    "tensorflow.raw_ops.RngSkip": "doc",
    "tensorflow.raw_ops.SetSize": "doc",
    "tensorflow.raw_ops.Sigmoid": "doc",
    "tensorflow.raw_ops.Squeeze": "doc",
    "tensorflow.raw_ops.StackV2": "doc",
    "tensorflow.raw_ops.Unbatch": "doc",
    "tensorflow.raw_ops.Unstage": "doc",
    "tensorflow.raw_ops.Xlog1py": "doc",
    "tensorflow.sets.difference": "doc",
    "tensorflow.signal.fftshift": "doc",
    "tensorflow.sparse.bincount": "doc",
    "tensorflow.sparse.to_dense": "doc",
    "tensorflow.RaggedTensorSpec": "doc",
    "tensorflow.RegisterGradient": "doc",
    "tensorflow.SparseTensorSpec": "doc",
    "tensorflow.audio.decode_wav": "doc",
    "tensorflow.audio.encode_wav": "doc",
    "tensorflow.data.DatasetSpec": "doc",
    "tensorflow.debugging.Assert": "doc",
    "tensorflow.estimator.export": "doc",
    "tensorflow.get_static_value": "doc",
    "tensorflow.image.adjust_hue": "doc",
    "tensorflow.image.decode_bmp": "doc",
    "tensorflow.image.decode_png": "doc",
    "tensorflow.image.encode_png": "doc",
    "tensorflow.image.random_hue": "doc",
    "tensorflow.image.rgb_to_hsv": "doc",
    "tensorflow.image.rgb_to_yiq": "doc",
    "tensorflow.image.rgb_to_yuv": "doc",
    "tensorflow.import_graph_def": "doc",
    "tensorflow.initializers.get": "doc",
    "tensorflow.io.RaggedFeature": "doc",
    "tensorflow.io.SparseFeature": "doc",
    "tensorflow.io.VarLenFeature": "doc",
    "tensorflow.io.decode_base64": "doc",
    "tensorflow.io.encode_base64": "doc",
    "tensorflow.io.parse_example": "doc",
    "tensorflow.keras.Sequential": "doc",
    "tensorflow.keras.layers.Add": "doc",
    "tensorflow.keras.layers.ELU": "doc",
    "tensorflow.keras.layers.GRU": "doc",
    "tensorflow.keras.layers.RNN": "doc",
    "tensorflow.keras.layers.add": "doc",
    "tensorflow.keras.losses.KLD": "doc",
    "tensorflow.keras.losses.MAE": "doc",
    "tensorflow.keras.losses.MSE": "doc",
    "tensorflow.keras.losses.get": "doc",
    "tensorflow.keras.losses.kld": "doc",
    "tensorflow.keras.losses.mae": "doc",
    "tensorflow.keras.losses.mse": "doc",
    "tensorflow.keras.optimizers": "doc",
    "tensorflow.linalg.band_part": "doc",
    "tensorflow.linalg.diag_part": "doc",
    "tensorflow.lite.Interpreter": "doc",
    "tensorflow.losses.Reduction": "doc",
    "tensorflow.losses.serialize": "doc",
    "tensorflow.math.log_sigmoid": "doc",
    "tensorflow.math.log_softmax": "doc",
    "tensorflow.math.logical_and": "doc",
    "tensorflow.math.logical_not": "doc",
    "tensorflow.math.logical_xor": "doc",
    "tensorflow.math.reduce_mean": "doc",
    "tensorflow.math.reduce_prod": "doc",
    "tensorflow.math.segment_max": "doc",
    "tensorflow.math.segment_sum": "doc",
    "tensorflow.nn.atrous_conv2d": "doc",
    "tensorflow.ones_initializer": "doc",
    "tensorflow.optimizers.Nadam": "doc",
    "tensorflow.raw_ops.AllToAll": "doc",
    "tensorflow.raw_ops.BatchFFT": "doc",
    "tensorflow.raw_ops.BatchSvd": "doc",
    "tensorflow.raw_ops.BesselI0": "doc",
    "tensorflow.raw_ops.BesselI1": "doc",
    "tensorflow.raw_ops.BesselJ0": "doc",
    "tensorflow.raw_ops.BesselJ1": "doc",
    "tensorflow.raw_ops.BesselK0": "doc",
    "tensorflow.raw_ops.BesselK1": "doc",
    "tensorflow.raw_ops.BesselY0": "doc",
    "tensorflow.raw_ops.BesselY1": "doc",
    "tensorflow.raw_ops.Bincount": "doc",
    "tensorflow.raw_ops.Cholesky": "doc",
    "tensorflow.raw_ops.CopyHost": "doc",
    "tensorflow.raw_ops.CudnnRNN": "doc",
    "tensorflow.raw_ops.DeepCopy": "doc",
    "tensorflow.raw_ops.DiagPart": "doc",
    "tensorflow.raw_ops.DivNoNan": "doc",
    "tensorflow.raw_ops.FloorMod": "doc",
    "tensorflow.raw_ops.GatherNd": "doc",
    "tensorflow.raw_ops.GatherV2": "doc",
    "tensorflow.raw_ops.HSVToRGB": "doc",
    "tensorflow.raw_ops.InTopKV2": "doc",
    "tensorflow.raw_ops.IsFinite": "doc",
    "tensorflow.raw_ops.Iterator": "doc",
    "tensorflow.raw_ops.LinSpace": "doc",
    "tensorflow.raw_ops.LoopCond": "doc",
    "tensorflow.raw_ops.MapClear": "doc",
    "tensorflow.raw_ops.MapDefun": "doc",
    "tensorflow.raw_ops.MapStage": "doc",
    "tensorflow.raw_ops.MulNoNan": "doc",
    "tensorflow.raw_ops.NotEqual": "doc",
    "tensorflow.raw_ops.OnesLike": "doc",
    "tensorflow.raw_ops.RGBToHSV": "doc",
    "tensorflow.raw_ops.ReadFile": "doc",
    "tensorflow.raw_ops.RefEnter": "doc",
    "tensorflow.raw_ops.RefMerge": "doc",
    "tensorflow.raw_ops.ReluGrad": "doc",
    "tensorflow.raw_ops.SelectV2": "doc",
    "tensorflow.raw_ops.SeluGrad": "doc",
    "tensorflow.raw_ops.Snapshot": "doc",
    "tensorflow.raw_ops.StackPop": "doc",
    "tensorflow.raw_ops.TileGrad": "doc",
    "tensorflow.raw_ops.UniqueV2": "doc",
    "tensorflow.raw_ops.Variable": "doc",
    "tensorflow.reduce_logsumexp": "doc",
    "tensorflow.reverse_sequence": "doc",
    "tensorflow.saved_model.load": "doc",
    "tensorflow.saved_model.save": "doc",
    "tensorflow.sparse.transpose": "doc",
    "tensorflow.summary.trace_on": "doc",
    "tensorflow.tpu.experimental": "doc",
    "tensorflow.xla.experimental": "doc",
    "tensorflow.AggregationMethod": "doc",
    "tensorflow.IndexedSlicesSpec": "doc",
    "tensorflow.autograph.to_code": "doc",
    "tensorflow.data.IteratorSpec": "doc",
    "tensorflow.data.experimental": "doc",
    "tensorflow.dynamic_partition": "doc",
    "tensorflow.executing_eagerly": "doc",
    "tensorflow.grad_pass_through": "doc",
    "tensorflow.image.decode_jpeg": "doc",
    "tensorflow.image.encode_jpeg": "doc",
    "tensorflow.image.random_crop": "doc",
    "tensorflow.image.sobel_edges": "doc",
    "tensorflow.initializers.Ones": "doc",
    "tensorflow.io.gfile.makedirs": "doc",
    "tensorflow.keras.activations": "doc",
    "tensorflow.keras.backend.rnn": "doc",
    "tensorflow.keras.layers.LSTM": "doc",
    "tensorflow.keras.layers.ReLU": "doc",
    "tensorflow.keras.losses.Loss": "doc",
    "tensorflow.keras.losses.MAPE": "doc",
    "tensorflow.keras.losses.MSLE": "doc",
    "tensorflow.keras.losses.mape": "doc",
    "tensorflow.keras.losses.msle": "doc",
    "tensorflow.lite.experimental": "doc",
    "tensorflow.make_tensor_proto": "doc",
    "tensorflow.math.accumulate_n": "doc",
    "tensorflow.math.segment_mean": "doc",
    "tensorflow.math.sobol_sample": "doc",
    "tensorflow.mlir.experimental": "doc",
    "tensorflow.nn.depth_to_space": "doc",
    "tensorflow.nn.space_to_depth": "doc",
    "tensorflow.optimizers.Adamax": "doc",
    "tensorflow.raw_ops.AdjustHue": "doc",
    "tensorflow.raw_ops.ApplyAdam": "doc",
    "tensorflow.raw_ops.ApplyFtrl": "doc",
    "tensorflow.raw_ops.AssignAdd": "doc",
    "tensorflow.raw_ops.AssignSub": "doc",
    "tensorflow.raw_ops.AvgPool3D": "doc",
    "tensorflow.raw_ops.BatchIFFT": "doc",
    "tensorflow.raw_ops.BesselI0e": "doc",
    "tensorflow.raw_ops.BesselI1e": "doc",
    "tensorflow.raw_ops.BesselK0e": "doc",
    "tensorflow.raw_ops.BesselK1e": "doc",
    "tensorflow.raw_ops.BiasAddV1": "doc",
    "tensorflow.raw_ops.BitwiseOr": "doc",
    "tensorflow.raw_ops.BlockLSTM": "doc",
    "tensorflow.raw_ops.CTCLossV2": "doc",
    "tensorflow.raw_ops.FIFOQueue": "doc",
    "tensorflow.raw_ops.FakeParam": "doc",
    "tensorflow.raw_ops.FakeQueue": "doc",
    "tensorflow.raw_ops.HashTable": "doc",
    "tensorflow.raw_ops.LeakyRelu": "doc",
    "tensorflow.raw_ops.LessEqual": "doc",
    "tensorflow.raw_ops.LogicalOr": "doc",
    "tensorflow.raw_ops.MaxPool3D": "doc",
    "tensorflow.raw_ops.MaxPoolV2": "doc",
    "tensorflow.raw_ops.MirrorPad": "doc",
    "tensorflow.raw_ops.MutexLock": "doc",
    "tensorflow.raw_ops.NextAfter": "doc",
    "tensorflow.raw_ops.Polygamma": "doc",
    "tensorflow.raw_ops.QueueSize": "doc",
    "tensorflow.raw_ops.RefSelect": "doc",
    "tensorflow.raw_ops.RefSwitch": "doc",
    "tensorflow.raw_ops.Relu6Grad": "doc",
    "tensorflow.raw_ops.ReverseV2": "doc",
    "tensorflow.raw_ops.SparseAdd": "doc",
    "tensorflow.raw_ops.StackPush": "doc",
    "tensorflow.raw_ops.StagePeek": "doc",
    "tensorflow.raw_ops.StageSize": "doc",
    "tensorflow.raw_ops.Timestamp": "doc",
    "tensorflow.raw_ops.Transpose": "doc",
    "tensorflow.raw_ops.ZerosLike": "doc",
    "tensorflow.saved_model.Asset": "doc",
    "tensorflow.space_to_batch_nd": "doc",
    "tensorflow.sparse.from_dense": "doc",
    "tensorflow.sparse.map_values": "doc",
    "tensorflow.sparse.reduce_max": "doc",
    "tensorflow.sparse.reduce_sum": "doc",
    "tensorflow.summary.trace_off": "doc",
    "tensorflow.bitwise.bitwise_or": "doc",
    "tensorflow.bitwise.left_shift": "doc",
    "tensorflow.estimator.EvalSpec": "doc",
    "tensorflow.estimator.Exporter": "doc",
    "tensorflow.estimator.ModeKeys": "doc",
    "tensorflow.experimental.numpy": "doc",
    "tensorflow.image.ResizeMethod": "doc",
    "tensorflow.image.adjust_gamma": "doc",
    "tensorflow.image.flip_up_down": "doc",
    "tensorflow.initializers.Zeros": "doc",
    "tensorflow.initializers.zeros": "doc",
    "tensorflow.io.FixedLenFeature": "doc",
    "tensorflow.io.TFRecordOptions": "doc",
    "tensorflow.keras.applications": "doc",
    "tensorflow.keras.experimental": "doc",
    "tensorflow.keras.initializers": "doc",
    "tensorflow.keras.layers.Dense": "doc",
    "tensorflow.keras.layers.Input": "doc",
    "tensorflow.keras.layers.Layer": "doc",
    "tensorflow.keras.layers.PReLU": "doc",
    "tensorflow.keras.losses.Hinge": "doc",
    "tensorflow.keras.losses.Huber": "doc",
    "tensorflow.keras.losses.hinge": "doc",
    "tensorflow.keras.losses.huber": "doc",
    "tensorflow.keras.models.Model": "doc",
    "tensorflow.keras.regularizers": "doc",
    "tensorflow.linalg.global_norm": "doc",
    "tensorflow.linalg.matrix_rank": "doc",
    "tensorflow.losses.deserialize": "doc",
    "tensorflow.math.divide_no_nan": "doc",
    "tensorflow.math.greater_equal": "doc",
    "tensorflow.math.special.dawsn": "doc",
    "tensorflow.matrix_square_root": "doc",
    "tensorflow.nest.map_structure": "doc",
    "tensorflow.optimizers.Adagrad": "doc",
    "tensorflow.optimizers.RMSprop": "doc",
    "tensorflow.raw_ops.BatchFFT2D": "doc",
    "tensorflow.raw_ops.BatchFFT3D": "doc",
    "tensorflow.raw_ops.BitwiseAnd": "doc",
    "tensorflow.raw_ops.BitwiseXor": "doc",
    "tensorflow.raw_ops.CSVDataset": "doc",
    "tensorflow.raw_ops.ComplexAbs": "doc",
    "tensorflow.raw_ops.CudnnRNNV2": "doc",
    "tensorflow.raw_ops.CudnnRNNV3": "doc",
    "tensorflow.raw_ops.DecodeJpeg": "doc",
    "tensorflow.raw_ops.Dequantize": "doc",
    "tensorflow.raw_ops.Dilation2D": "doc",
    "tensorflow.raw_ops.EncodeJpeg": "doc",
    "tensorflow.raw_ops.ExpandDims": "doc",
    "tensorflow.raw_ops.FresnelCos": "doc",
    "tensorflow.raw_ops.FresnelSin": "doc",
    "tensorflow.raw_ops.InplaceAdd": "doc",
    "tensorflow.raw_ops.InplaceSub": "doc",
    "tensorflow.raw_ops.IteratorV2": "doc",
    "tensorflow.raw_ops.LMDBReader": "doc",
    "tensorflow.raw_ops.LogSoftmax": "doc",
    "tensorflow.raw_ops.LogicalAnd": "doc",
    "tensorflow.raw_ops.LogicalNot": "doc",
    "tensorflow.raw_ops.LowerBound": "doc",
    "tensorflow.raw_ops.MapDataset": "doc",
    "tensorflow.raw_ops.MapUnstage": "doc",
    "tensorflow.raw_ops.MatrixDiag": "doc",
    "tensorflow.raw_ops.NcclReduce": "doc",
    "tensorflow.raw_ops.NthElement": "doc",
    "tensorflow.raw_ops.QuantizeV2": "doc",
    "tensorflow.raw_ops.QueueClose": "doc",
    "tensorflow.raw_ops.RandomCrop": "doc",
    "tensorflow.raw_ops.ReaderRead": "doc",
    "tensorflow.raw_ops.Reciprocal": "doc",
    "tensorflow.raw_ops.ReduceJoin": "doc",
    "tensorflow.raw_ops.RemoteCall": "doc",
    "tensorflow.raw_ops.Requantize": "doc",
    "tensorflow.raw_ops.ResizeArea": "doc",
    "tensorflow.raw_ops.RightShift": "doc",
    "tensorflow.raw_ops.SaveSlices": "doc",
    "tensorflow.raw_ops.SegmentMax": "doc",
    "tensorflow.raw_ops.SegmentSum": "doc",
    "tensorflow.raw_ops.SqlDataset": "doc",
    "tensorflow.raw_ops.StackClose": "doc",
    "tensorflow.raw_ops.StackPopV2": "doc",
    "tensorflow.raw_ops.StageClear": "doc",
    "tensorflow.raw_ops.StringJoin": "doc",
    "tensorflow.raw_ops.UpperBound": "doc",
    "tensorflow.raw_ops.VariableV2": "doc",
    "tensorflow.raw_ops.ZipDataset": "doc",
    "tensorflow.signal.hann_window": "doc",
    "tensorflow.sparse.expand_dims": "doc",
    "tensorflow.sparse.reset_shape": "doc",
    "tensorflow.sparse.segment_sum": "doc",
    "tensorflow.types.experimental": "doc",
    "tensorflow.unique_with_counts": "doc",
    "tensorflow.VariableAggregation": "doc",
    "tensorflow.bitwise.bitwise_and": "doc",
    "tensorflow.bitwise.bitwise_xor": "doc",
    "tensorflow.bitwise.right_shift": "doc",
    "tensorflow.clip_by_global_norm": "doc",
    "tensorflow.estimator.Estimator": "doc",
    "tensorflow.estimator.MultiHead": "doc",
    "tensorflow.estimator.TrainSpec": "doc",
    "tensorflow.estimator.VocabInfo": "doc",
    "tensorflow.experimental.dlpack": "doc",
    "tensorflow.io.serialize_sparse": "doc",
    "tensorflow.io.serialize_tensor": "doc",
    "tensorflow.keras.datasets.imdb": "doc",
    "tensorflow.keras.layers.Lambda": "doc",
    "tensorflow.keras.preprocessing": "doc",
    "tensorflow.keras.utils.Progbar": "doc",
    "tensorflow.linalg.experimental": "doc",
    "tensorflow.lookup.experimental": "doc",
    "tensorflow.losses.KLDivergence": "doc",
    "tensorflow.losses.SquaredHinge": "doc",
    "tensorflow.math.special.expint": "doc",
    "tensorflow.math.special.spence": "doc",
    "tensorflow.nn.depthwise_conv2d": "doc",
    "tensorflow.nn.embedding_lookup": "doc",
    "tensorflow.nn.log_poisson_loss": "doc",
    "tensorflow.nn.separable_conv2d": "doc",
    "tensorflow.nn.weighted_moments": "doc",
    "tensorflow.optimizers.Adadelta": "doc",
    "tensorflow.queue.PriorityQueue": "doc",
    "tensorflow.ragged.boolean_mask": "doc",
    "tensorflow.ragged.cross_hashed": "doc",
    "tensorflow.random.experimental": "doc",
    "tensorflow.raw_ops.ApplyAdaMax": "doc",
    "tensorflow.raw_ops.ApplyFtrlV2": "doc",
    "tensorflow.raw_ops.AvgPoolGrad": "doc",
    "tensorflow.raw_ops.BatchIFFT2D": "doc",
    "tensorflow.raw_ops.BatchIFFT3D": "doc",
    "tensorflow.raw_ops.BatchMatMul": "doc",
    "tensorflow.raw_ops.BiasAddGrad": "doc",
    "tensorflow.raw_ops.BlockLSTMV2": "doc",
    "tensorflow.raw_ops.BroadcastTo": "doc",
    "tensorflow.raw_ops.ClipByValue": "doc",
    "tensorflow.raw_ops.DecodeImage": "doc",
    "tensorflow.raw_ops.DeviceIndex": "doc",
    "tensorflow.raw_ops.EagerPyFunc": "doc",
    "tensorflow.raw_ops.EnsureShape": "doc",
    "tensorflow.raw_ops.FIFOQueueV2": "doc",
    "tensorflow.raw_ops.HashTableV2": "doc",
    "tensorflow.raw_ops.IgammaGradA": "doc",
    "tensorflow.raw_ops.ImportEvent": "doc",
    "tensorflow.raw_ops.LMDBDataset": "doc",
    "tensorflow.raw_ops.LoadDataset": "doc",
    "tensorflow.raw_ops.MatrixSolve": "doc",
    "tensorflow.raw_ops.MaxPoolGrad": "doc",
    "tensorflow.raw_ops.Multinomial": "doc",
    "tensorflow.raw_ops.ParseTensor": "doc",
    "tensorflow.raw_ops.Placeholder": "doc",
    "tensorflow.raw_ops.QueueSizeV2": "doc",
    "tensorflow.raw_ops.RaggedCross": "doc",
    "tensorflow.raw_ops.RaggedRange": "doc",
    "tensorflow.raw_ops.RandomGamma": "doc",
    "tensorflow.raw_ops.ReaderReset": "doc",
    "tensorflow.raw_ops.RecordInput": "doc",
    "tensorflow.raw_ops.RefIdentity": "doc",
    "tensorflow.raw_ops.SaveDataset": "doc",
    "tensorflow.raw_ops.SegmentMean": "doc",
    "tensorflow.raw_ops.SigmoidGrad": "doc",
    "tensorflow.raw_ops.SkipDataset": "doc",
    "tensorflow.raw_ops.SobolSample": "doc",
    "tensorflow.raw_ops.SparseCross": "doc",
    "tensorflow.raw_ops.SparseSlice": "doc",
    "tensorflow.raw_ops.SparseSplit": "doc",
    "tensorflow.raw_ops.StackPushV2": "doc",
    "tensorflow.raw_ops.StatelessIf": "doc",
    "tensorflow.raw_ops.StringLower": "doc",
    "tensorflow.raw_ops.StringSplit": "doc",
    "tensorflow.raw_ops.StringUpper": "doc",
    "tensorflow.raw_ops.TakeDataset": "doc",
    "tensorflow.raw_ops.TensorArray": "doc",
    "tensorflow.raw_ops.TruncateMod": "doc",
    "tensorflow.raw_ops.UnbatchGrad": "doc",
    "tensorflow.raw_ops.VarHandleOp": "doc",
    "tensorflow.signal.inverse_mdct": "doc",
    "tensorflow.signal.inverse_stft": "doc",
    "tensorflow.sparse.SparseTensor": "doc",
    "tensorflow.sparse.cross_hashed": "doc",
    "tensorflow.sparse.segment_mean": "doc",
    "tensorflow.sparse.to_indicator": "doc",
    "tensorflow.strings.bytes_split": "doc",
    "tensorflow.strings.reduce_join": "doc",
    "tensorflow.data.TFRecordDataset": "doc",
    "tensorflow.data.TextLineDataset": "doc",
    "tensorflow.dtypes.saturate_cast": "doc",
    "tensorflow.errors.DataLossError": "doc",
    "tensorflow.errors.InternalError": "doc",
    "tensorflow.estimator.FeedFnHook": "doc",
    "tensorflow.io.decode_compressed": "doc",
    "tensorflow.keras.backend.floatx": "doc",
    "tensorflow.keras.datasets.mnist": "doc",
    "tensorflow.keras.layers.Average": "doc",
    "tensorflow.keras.layers.Dropout": "doc",
    "tensorflow.keras.layers.Flatten": "doc",
    "tensorflow.keras.layers.GRUCell": "doc",
    "tensorflow.keras.layers.Masking": "doc",
    "tensorflow.keras.layers.Maximum": "doc",
    "tensorflow.keras.layers.Minimum": "doc",
    "tensorflow.keras.layers.Permute": "doc",
    "tensorflow.keras.layers.Reshape": "doc",
    "tensorflow.keras.layers.Wrapper": "doc",
    "tensorflow.keras.layers.average": "doc",
    "tensorflow.keras.layers.maximum": "doc",
    "tensorflow.keras.layers.minimum": "doc",
    "tensorflow.keras.losses.LogCosh": "doc",
    "tensorflow.keras.losses.Poisson": "doc",
    "tensorflow.keras.losses.logcosh": "doc",
    "tensorflow.keras.losses.poisson": "doc",
    "tensorflow.keras.optimizers.SGD": "doc",
    "tensorflow.keras.optimizers.get": "doc",
    "tensorflow.keras.utils.Sequence": "doc",
    "tensorflow.keras.utils.get_file": "doc",
    "tensorflow.lite.TFLiteConverter": "doc",
    "tensorflow.lookup.TextFileIndex": "doc",
    "tensorflow.losses.kl_divergence": "doc",
    "tensorflow.losses.squared_hinge": "doc",
    "tensorflow.math.multiply_no_nan": "doc",
    "tensorflow.math.reduce_variance": "doc",
    "tensorflow.nn.collapse_repeated": "doc",
    "tensorflow.nn.ctc_unique_labels": "doc",
    "tensorflow.nn.normalize_moments": "doc",
    "tensorflow.optimizers.Optimizer": "doc",
    "tensorflow.optimizers.schedules": "doc",
    "tensorflow.optimizers.serialize": "doc",
    "tensorflow.raw_ops.ApplyAdagrad": "doc",
    "tensorflow.raw_ops.ApplyAddSign": "doc",
    "tensorflow.raw_ops.ApplyRMSProp": "doc",
    "tensorflow.raw_ops.AudioSummary": "doc",
    "tensorflow.raw_ops.BarrierClose": "doc",
    "tensorflow.raw_ops.BatchDataset": "doc",
    "tensorflow.raw_ops.BatchToSpace": "doc",
    "tensorflow.raw_ops.CSVDatasetV2": "doc",
    "tensorflow.raw_ops.CacheDataset": "doc",
    "tensorflow.raw_ops.CholeskyGrad": "doc",
    "tensorflow.raw_ops.DecodeBase64": "doc",
    "tensorflow.raw_ops.DepthToSpace": "doc",
    "tensorflow.raw_ops.EditDistance": "doc",
    "tensorflow.raw_ops.EncodeBase64": "doc",
    "tensorflow.raw_ops.GRUBlockCell": "doc",
    "tensorflow.raw_ops.GreaterEqual": "doc",
    "tensorflow.raw_ops.ImageSummary": "doc",
    "tensorflow.raw_ops.MakeIterator": "doc",
    "tensorflow.raw_ops.MatrixDiagV2": "doc",
    "tensorflow.raw_ops.MatrixDiagV3": "doc",
    "tensorflow.raw_ops.MergeSummary": "doc",
    "tensorflow.raw_ops.ModelDataset": "doc",
    "tensorflow.raw_ops.OptionalNone": "doc",
    "tensorflow.raw_ops.ParseExample": "doc",
    "tensorflow.raw_ops.QuantizedAdd": "doc",
    "tensorflow.raw_ops.QuantizedMul": "doc",
    "tensorflow.raw_ops.QueueCloseV2": "doc",
    "tensorflow.raw_ops.QueueDequeue": "doc",
    "tensorflow.raw_ops.QueueEnqueue": "doc",
    "tensorflow.raw_ops.RaggedGather": "doc",
    "tensorflow.raw_ops.RangeDataset": "doc",
    "tensorflow.raw_ops.ReaderReadV2": "doc",
    "tensorflow.raw_ops.RegexReplace": "doc",
    "tensorflow.raw_ops.ShardDataset": "doc",
    "tensorflow.raw_ops.SleepDataset": "doc",
    "tensorflow.raw_ops.SpaceToBatch": "doc",
    "tensorflow.raw_ops.SpaceToDepth": "doc",
    "tensorflow.raw_ops.SparseConcat": "doc",
    "tensorflow.raw_ops.SparseMatMul": "doc",
    "tensorflow.raw_ops.StackCloseV2": "doc",
    "tensorflow.raw_ops.StridedSlice": "doc",
    "tensorflow.raw_ops.StringFormat": "doc",
    "tensorflow.raw_ops.StringLength": "doc",
    "tensorflow.raw_ops.StringNGrams": "doc",
    "tensorflow.raw_ops.UnravelIndex": "doc",
    "tensorflow.raw_ops.WriteSummary": "doc",
    "tensorflow.signal.kaiser_window": "doc",
    "tensorflow.signal.vorbis_window": "doc",
    "tensorflow.summary.experimental": "doc",
    "tensorflow.summary.trace_export": "doc",
    "tensorflow.test.gpu_device_name": "doc",
    "tensorflow.type_spec_from_value": "doc",
    "tensorflow.autodiff.GradientTape": "doc",
    "tensorflow.debugging.assert_less": "doc",
    "tensorflow.debugging.assert_near": "doc",
    "tensorflow.debugging.assert_rank": "doc",
    "tensorflow.debugging.assert_type": "doc",
    "tensorflow.errors.CancelledError": "doc",
    "tensorflow.experimental.Optional": "doc",
    "tensorflow.histogram_fixed_width": "doc",
    "tensorflow.image.extract_glimpse": "doc",
    "tensorflow.image.extract_patches": "doc",
    "tensorflow.image.flip_left_right": "doc",
    "tensorflow.image.image_gradients": "doc",
    "tensorflow.image.resize_with_pad": "doc",
    "tensorflow.image.ssim_multiscale": "doc",
    "tensorflow.image.total_variation": "doc",
    "tensorflow.initializers.HeNormal": "doc",
    "tensorflow.io.extract_jpeg_shape": "doc",
    "tensorflow.keras.activations.elu": "doc",
    "tensorflow.keras.activations.get": "doc",
    "tensorflow.keras.backend.epsilon": "doc",
    "tensorflow.keras.backend.get_uid": "doc",
    "tensorflow.keras.layers.LSTMCell": "doc",
    "tensorflow.keras.layers.Multiply": "doc",
    "tensorflow.keras.layers.multiply": "doc",
    "tensorflow.keras.losses.log_cosh": "doc",
    "tensorflow.keras.mixed_precision": "doc",
    "tensorflow.keras.optimizers.Adam": "doc",
    "tensorflow.keras.regularizers.L1": "doc",
    "tensorflow.keras.regularizers.L2": "doc",
    "tensorflow.keras.regularizers.l1": "doc",
    "tensorflow.keras.regularizers.l2": "doc",
    "tensorflow.linalg.LinearOperator": "doc",
    "tensorflow.linalg.cholesky_solve": "doc",
    "tensorflow.math.reduce_logsumexp": "doc",
    "tensorflow.nest.pack_sequence_as": "doc",
    "tensorflow.nn.ctc_greedy_decoder": "doc",
    "tensorflow.profiler.experimental": "doc",
    "tensorflow.raw_ops.AccumulateNV2": "doc",
    "tensorflow.raw_ops.ApplyAdadelta": "doc",
    "tensorflow.raw_ops.ApplyMomentum": "doc",
    "tensorflow.raw_ops.AvgPool3DGrad": "doc",
    "tensorflow.raw_ops.BatchCholesky": "doc",
    "tensorflow.raw_ops.BatchMatMulV2": "doc",
    "tensorflow.raw_ops.BlockLSTMGrad": "doc",
    "tensorflow.raw_ops.DebugIdentity": "doc",
    "tensorflow.raw_ops.DebugNanCount": "doc",
    "tensorflow.raw_ops.DenseBincount": "doc",
    "tensorflow.raw_ops.DynamicStitch": "doc",
    "tensorflow.raw_ops.EuclideanNorm": "doc",
    "tensorflow.raw_ops.FilterDataset": "doc",
    "tensorflow.raw_ops.InfeedDequeue": "doc",
    "tensorflow.raw_ops.InfeedEnqueue": "doc",
    "tensorflow.raw_ops.InplaceUpdate": "doc",
    "tensorflow.raw_ops.LSTMBlockCell": "doc",
    "tensorflow.raw_ops.LeakyReluGrad": "doc",
    "tensorflow.raw_ops.MatrixInverse": "doc",
    "tensorflow.raw_ops.MatrixSetDiag": "doc",
    "tensorflow.raw_ops.MatrixSolveLs": "doc",
    "tensorflow.raw_ops.MaxPool3DGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradV2": "doc",
    "tensorflow.raw_ops.MirrorPadGrad": "doc",
    "tensorflow.raw_ops.NcclAllReduce": "doc",
    "tensorflow.raw_ops.NcclBroadcast": "doc",
    "tensorflow.raw_ops.PriorityQueue": "doc",
    "tensorflow.raw_ops.QuantizedRelu": "doc",
    "tensorflow.raw_ops.QueueIsClosed": "doc",
    "tensorflow.raw_ops.RandomDataset": "doc",
    "tensorflow.raw_ops.RandomPoisson": "doc",
    "tensorflow.raw_ops.RandomShuffle": "doc",
    "tensorflow.raw_ops.RandomUniform": "doc",
    "tensorflow.raw_ops.ReaderResetV2": "doc",
    "tensorflow.raw_ops.ReduceDataset": "doc",
    "tensorflow.raw_ops.RepeatDataset": "doc",
    "tensorflow.raw_ops.ResizeBicubic": "doc",
    "tensorflow.raw_ops.ScalarSummary": "doc",
    "tensorflow.raw_ops.SparseAddGrad": "doc",
    "tensorflow.raw_ops.SparseCrossV2": "doc",
    "tensorflow.raw_ops.SparseReorder": "doc",
    "tensorflow.raw_ops.SparseReshape": "doc",
    "tensorflow.raw_ops.SparseSoftmax": "doc",
    "tensorflow.raw_ops.SparseToDense": "doc",
    "tensorflow.raw_ops.StatelessCase": "doc",
    "tensorflow.raw_ops.StringSplitV2": "doc",
    "tensorflow.raw_ops.SummaryWriter": "doc",
    "tensorflow.raw_ops.TensorArrayV2": "doc",
    "tensorflow.raw_ops.TensorArrayV3": "doc",
    "tensorflow.raw_ops.TensorDataset": "doc",
    "tensorflow.raw_ops.TensorSummary": "doc",
    "tensorflow.raw_ops.UnicodeDecode": "doc",
    "tensorflow.raw_ops.UniqueDataset": "doc",
    "tensorflow.raw_ops.VariableShape": "doc",
    "tensorflow.raw_ops.WindowDataset": "doc",
    "tensorflow.signal.hamming_window": "doc",
    "tensorflow.strings.regex_replace": "doc",
    "tensorflow.summary.SummaryWriter": "doc",
    "tensorflow.tensor_scatter_nd_add": "doc",
    "tensorflow.tensor_scatter_nd_max": "doc",
    "tensorflow.tensor_scatter_nd_min": "doc",
    "tensorflow.tensor_scatter_nd_sub": "doc",
    "tensorflow.test.benchmark_config": "doc",
    "tensorflow.test.is_gpu_available": "doc",
    "tensorflow.Variable.SaveSliceInfo": "doc",
    "tensorflow.autograph.experimental": "doc",
    "tensorflow.broadcast_static_shape": "doc",
    "tensorflow.data.experimental.load": "doc",
    "tensorflow.data.experimental.save": "doc",
    "tensorflow.data.experimental.scan": "doc",
    "tensorflow.debugging.assert_equal": "doc",
    "tensorflow.debugging.experimental": "doc",
    "tensorflow.errors.OutOfRangeError": "doc",
    "tensorflow.estimator.BestExporter": "doc",
    "tensorflow.estimator.DNNEstimator": "doc",
    "tensorflow.estimator.DNNRegressor": "doc",
    "tensorflow.estimator.FinalOpsHook": "doc",
    "tensorflow.estimator.ProfilerHook": "doc",
    "tensorflow.estimator.experimental": "doc",
    "tensorflow.experimental.numpy.abs": "doc",
    "tensorflow.experimental.numpy.add": "doc",
    "tensorflow.experimental.numpy.all": "doc",
    "tensorflow.experimental.numpy.any": "doc",
    "tensorflow.experimental.numpy.exp": "doc",
    "tensorflow.experimental.numpy.eye": "doc",
    "tensorflow.experimental.numpy.fix": "doc",
    "tensorflow.experimental.numpy.gcd": "doc",
    "tensorflow.experimental.numpy.ix_": "doc",
    "tensorflow.experimental.numpy.lcm": "doc",
    "tensorflow.experimental.numpy.log": "doc",
    "tensorflow.experimental.numpy.max": "doc",
    "tensorflow.experimental.numpy.min": "doc",
    "tensorflow.experimental.numpy.mod": "doc",
    "tensorflow.experimental.numpy.pad": "doc",
    "tensorflow.experimental.numpy.ptp": "doc",
    "tensorflow.experimental.numpy.sin": "doc",
    "tensorflow.experimental.numpy.std": "doc",
    "tensorflow.experimental.numpy.sum": "doc",
    "tensorflow.experimental.numpy.tan": "doc",
    "tensorflow.experimental.numpy.var": "doc",
    "tensorflow.extract_volume_patches": "doc",
    "tensorflow.image.rgb_to_grayscale": "doc",
    "tensorflow.initializers.HeUniform": "doc",
    "tensorflow.initializers.serialize": "doc",
    "tensorflow.io.decode_json_example": "doc",
    "tensorflow.keras.activations.gelu": "doc",
    "tensorflow.keras.activations.relu": "doc",
    "tensorflow.keras.activations.selu": "doc",
    "tensorflow.keras.activations.tanh": "doc",
    "tensorflow.keras.datasets.reuters": "doc",
    "tensorflow.keras.initializers.get": "doc",
    "tensorflow.keras.layers.AvgPool1D": "doc",
    "tensorflow.keras.layers.AvgPool2D": "doc",
    "tensorflow.keras.layers.AvgPool3D": "doc",
    "tensorflow.keras.layers.Embedding": "doc",
    "tensorflow.keras.layers.InputSpec": "doc",
    "tensorflow.keras.layers.LeakyReLU": "doc",
    "tensorflow.keras.layers.MaxPool1D": "doc",
    "tensorflow.keras.layers.MaxPool2D": "doc",
    "tensorflow.keras.layers.MaxPool3D": "doc",
    "tensorflow.keras.layers.SimpleRNN": "doc",
    "tensorflow.keras.layers.serialize": "doc",
    "tensorflow.keras.losses.Reduction": "doc",
    "tensorflow.keras.losses.serialize": "doc",
    "tensorflow.keras.optimizers.Nadam": "doc",
    "tensorflow.keras.regularizers.get": "doc",
    "tensorflow.keras.utils.plot_model": "doc",
    "tensorflow.lookup.StaticHashTable": "doc",
    "tensorflow.math.reciprocal_no_nan": "doc",
    "tensorflow.math.special.bessel_i0": "doc",
    "tensorflow.math.special.bessel_i1": "doc",
    "tensorflow.math.special.bessel_j0": "doc",
    "tensorflow.math.special.bessel_j1": "doc",
    "tensorflow.math.special.bessel_k0": "doc",
    "tensorflow.math.special.bessel_k1": "doc",
    "tensorflow.math.special.bessel_y0": "doc",
    "tensorflow.math.special.bessel_y1": "doc",
    "tensorflow.nn.fractional_avg_pool": "doc",
    "tensorflow.nn.fractional_max_pool": "doc",
    "tensorflow.nn.with_space_to_batch": "doc",
    "tensorflow.optimizers.deserialize": "doc",
    "tensorflow.queue.PaddingFIFOQueue": "doc",
    "tensorflow.ragged.map_flat_values": "doc",
    "tensorflow.random.stateless_gamma": "doc",
    "tensorflow.raw_ops.ApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ApplyAdagradV2": "doc",
    "tensorflow.raw_ops.AudioSummaryV2": "doc",
    "tensorflow.raw_ops.BatchDatasetV2": "doc",
    "tensorflow.raw_ops.BatchToSpaceND": "doc",
    "tensorflow.raw_ops.CacheDatasetV2": "doc",
    "tensorflow.raw_ops.DatasetToGraph": "doc",
    "tensorflow.raw_ops.DeleteIterator": "doc",
    "tensorflow.raw_ops.ExtractGlimpse": "doc",
    "tensorflow.raw_ops.FlatMapDataset": "doc",
    "tensorflow.raw_ops.FusedBatchNorm": "doc",
    "tensorflow.raw_ops.FusedPadConv2D": "doc",
    "tensorflow.raw_ops.GuaranteeConst": "doc",
    "tensorflow.raw_ops.IdentityReader": "doc",
    "tensorflow.raw_ops.ImmutableConst": "doc",
    "tensorflow.raw_ops.MatrixBandPart": "doc",
    "tensorflow.raw_ops.MatrixDiagPart": "doc",
    "tensorflow.raw_ops.OrderedMapPeek": "doc",
    "tensorflow.raw_ops.OrderedMapSize": "doc",
    "tensorflow.raw_ops.OutfeedDequeue": "doc",
    "tensorflow.raw_ops.OutfeedEnqueue": "doc",
    "tensorflow.raw_ops.ParallelConcat": "doc",
    "tensorflow.raw_ops.ParseExampleV2": "doc",
    "tensorflow.raw_ops.QuantizedRelu6": "doc",
    "tensorflow.raw_ops.QuantizedReluX": "doc",
    "tensorflow.raw_ops.QueueDequeueV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueV2": "doc",
    "tensorflow.raw_ops.RaggedBincount": "doc",
    "tensorflow.raw_ops.ReaderReadUpTo": "doc",
    "tensorflow.raw_ops.RebatchDataset": "doc",
    "tensorflow.raw_ops.RegexFullMatch": "doc",
    "tensorflow.raw_ops.ResizeBilinear": "doc",
    "tensorflow.raw_ops.ResourceGather": "doc",
    "tensorflow.raw_ops.RngReadAndSkip": "doc",
    "tensorflow.raw_ops.ShuffleDataset": "doc",
    "tensorflow.raw_ops.SparseBincount": "doc",
    "tensorflow.raw_ops.StatelessWhile": "doc",
    "tensorflow.raw_ops.StringToNumber": "doc",
    "tensorflow.raw_ops.TFRecordReader": "doc",
    "tensorflow.raw_ops.TextLineReader": "doc",
    "tensorflow.raw_ops.UnbatchDataset": "doc",
    "tensorflow.signal.overlap_and_add": "doc",
    "tensorflow.sparse.fill_empty_rows": "doc",
    "tensorflow.strings.to_hash_bucket": "doc",
    "tensorflow.strings.unicode_decode": "doc",
    "tensorflow.test.is_built_with_xla": "doc",
    "tensorflow.variable_creator_scope": "doc",
    "tensorflow.VariableSynchronization": "doc",
    "tensorflow.autograph.set_verbosity": "doc",
    "tensorflow.broadcast_dynamic_shape": "doc",
    "tensorflow.debugging.assert_scalar": "doc",
    "tensorflow.debugging.assert_shapes": "doc",
    "tensorflow.errors.UnavailableError": "doc",
    "tensorflow.estimator.DNNClassifier": "doc",
    "tensorflow.estimator.EstimatorSpec": "doc",
    "tensorflow.estimator.FinalExporter": "doc",
    "tensorflow.estimator.NanTensorHook": "doc",
    "tensorflow.experimental.numpy.amax": "doc",
    "tensorflow.experimental.numpy.amin": "doc",
    "tensorflow.experimental.numpy.diag": "doc",
    "tensorflow.experimental.numpy.diff": "doc",
    "tensorflow.experimental.numpy.exp2": "doc",
    "tensorflow.experimental.numpy.fabs": "doc",
    "tensorflow.experimental.numpy.flip": "doc",
    "tensorflow.experimental.numpy.full": "doc",
    "tensorflow.experimental.numpy.imag": "doc",
    "tensorflow.experimental.numpy.kron": "doc",
    "tensorflow.experimental.numpy.less": "doc",
    "tensorflow.experimental.numpy.log2": "doc",
    "tensorflow.experimental.numpy.mean": "doc",
    "tensorflow.experimental.numpy.prod": "doc",
    "tensorflow.experimental.numpy.real": "doc",
    "tensorflow.experimental.numpy.roll": "doc",
    "tensorflow.experimental.numpy.sign": "doc",
    "tensorflow.experimental.numpy.sinc": "doc",
    "tensorflow.experimental.numpy.sinh": "doc",
    "tensorflow.experimental.numpy.size": "doc",
    "tensorflow.experimental.numpy.sqrt": "doc",
    "tensorflow.experimental.numpy.take": "doc",
    "tensorflow.experimental.numpy.tanh": "doc",
    "tensorflow.experimental.numpy.tile": "doc",
    "tensorflow.experimental.numpy.vdot": "doc",
    "tensorflow.image.adjust_brightness": "doc",
    "tensorflow.image.adjust_saturation": "doc",
    "tensorflow.image.random_brightness": "doc",
    "tensorflow.initializers.Orthogonal": "doc",
    "tensorflow.initializers.he_uniform": "doc",
    "tensorflow.initializers.orthogonal": "doc",
    "tensorflow.io.decode_and_crop_jpeg": "doc",
    "tensorflow.io.match_filenames_once": "doc",
    "tensorflow.io.parse_single_example": "doc",
    "tensorflow.keras.activations.swish": "doc",
    "tensorflow.keras.callbacks.History": "doc",
    "tensorflow.keras.initializers.Ones": "doc",
    "tensorflow.keras.layers.Activation": "doc",
    "tensorflow.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.keras.layers.Cropping1D": "doc",
    "tensorflow.keras.layers.Cropping2D": "doc",
    "tensorflow.keras.layers.Cropping3D": "doc",
    "tensorflow.keras.layers.InputLayer": "doc",
    "tensorflow.keras.models.Sequential": "doc",
    "tensorflow.keras.models.load_model": "doc",
    "tensorflow.keras.models.save_model": "doc",
    "tensorflow.keras.optimizers.Adamax": "doc",
    "tensorflow.keras.regularizers.L1L2": "doc",
    "tensorflow.linalg.matrix_transpose": "doc",
    "tensorflow.linalg.tensor_diag_part": "doc",
    "tensorflow.linalg.triangular_solve": "doc",
    "tensorflow.losses.CategoricalHinge": "doc",
    "tensorflow.losses.MeanSquaredError": "doc",
    "tensorflow.math.invert_permutation": "doc",
    "tensorflow.math.special.bessel_i0e": "doc",
    "tensorflow.math.special.bessel_i1e": "doc",
    "tensorflow.math.special.bessel_k0e": "doc",
    "tensorflow.math.special.bessel_k1e": "doc",
    "tensorflow.math.squared_difference": "doc",
    "tensorflow.nn.RNNCellDeviceWrapper": "doc",
    "tensorflow.nn.compute_average_loss": "doc",
    "tensorflow.nn.max_pool_with_argmax": "doc",
    "tensorflow.nn.sampled_softmax_loss": "doc",
    "tensorflow.random.create_rng_state": "doc",
    "tensorflow.random.stateless_normal": "doc",
    "tensorflow.random.truncated_normal": "doc",
    "tensorflow.raw_ops.BarrierTakeMany": "doc",
    "tensorflow.raw_ops.BlockLSTMGradV2": "doc",
    "tensorflow.raw_ops.CheckNumericsV2": "doc",
    "tensorflow.raw_ops.CompressElement": "doc",
    "tensorflow.raw_ops.CrossReplicaSum": "doc",
    "tensorflow.raw_ops.DebugIdentityV2": "doc",
    "tensorflow.raw_ops.DecodePaddedRaw": "doc",
    "tensorflow.raw_ops.EmptyTensorList": "doc",
    "tensorflow.raw_ops.InitializeTable": "doc",
    "tensorflow.raw_ops.IteratorGetNext": "doc",
    "tensorflow.raw_ops.LookupTableFind": "doc",
    "tensorflow.raw_ops.LookupTableSize": "doc",
    "tensorflow.raw_ops.MapUnstageNoKey": "doc",
    "tensorflow.raw_ops.MatrixLogarithm": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV2": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV3": "doc",
    "tensorflow.raw_ops.MaxPoolGradGrad": "doc",
    "tensorflow.raw_ops.OneShotIterator": "doc",
    "tensorflow.raw_ops.OptimizeDataset": "doc",
    "tensorflow.raw_ops.OrderedMapClear": "doc",
    "tensorflow.raw_ops.OrderedMapStage": "doc",
    "tensorflow.raw_ops.PartitionedCall": "doc",
    "tensorflow.raw_ops.PopulationCount": "doc",
    "tensorflow.raw_ops.PrefetchDataset": "doc",
    "tensorflow.raw_ops.PriorityQueueV2": "doc",
    "tensorflow.raw_ops.PyFuncStateless": "doc",
    "tensorflow.raw_ops.QuantizedConcat": "doc",
    "tensorflow.raw_ops.QuantizedConv2D": "doc",
    "tensorflow.raw_ops.QuantizedMatMul": "doc",
    "tensorflow.raw_ops.QueueIsClosedV2": "doc",
    "tensorflow.raw_ops.RandomGammaGrad": "doc",
    "tensorflow.raw_ops.RandomPoissonV2": "doc",
    "tensorflow.raw_ops.RegisterDataset": "doc",
    "tensorflow.raw_ops.ReverseSequence": "doc",
    "tensorflow.raw_ops.SamplingDataset": "doc",
    "tensorflow.raw_ops.ScatterNdUpdate": "doc",
    "tensorflow.raw_ops.SdcaOptimizerV2": "doc",
    "tensorflow.raw_ops.SerializeSparse": "doc",
    "tensorflow.raw_ops.SerializeTensor": "doc",
    "tensorflow.raw_ops.ShardedFilename": "doc",
    "tensorflow.raw_ops.ShardedFilespec": "doc",
    "tensorflow.raw_ops.SnapshotDataset": "doc",
    "tensorflow.raw_ops.SparseApplyFtrl": "doc",
    "tensorflow.raw_ops.SparseMatrixAdd": "doc",
    "tensorflow.raw_ops.SparseMatrixMul": "doc",
    "tensorflow.raw_ops.SparseMatrixNNZ": "doc",
    "tensorflow.raw_ops.SparseReduceMax": "doc",
    "tensorflow.raw_ops.SparseReduceSum": "doc",
    "tensorflow.raw_ops.SparseSliceGrad": "doc",
    "tensorflow.raw_ops.StatefulUniform": "doc",
    "tensorflow.raw_ops.TFRecordDataset": "doc",
    "tensorflow.raw_ops.TensorArrayGrad": "doc",
    "tensorflow.raw_ops.TensorArrayPack": "doc",
    "tensorflow.raw_ops.TensorArrayRead": "doc",
    "tensorflow.raw_ops.TensorArraySize": "doc",
    "tensorflow.raw_ops.TensorListSplit": "doc",
    "tensorflow.raw_ops.TensorListStack": "doc",
    "tensorflow.raw_ops.TensorSummaryV2": "doc",
    "tensorflow.raw_ops.TextLineDataset": "doc",
    "tensorflow.raw_ops.TruncatedNormal": "doc",
    "tensorflow.raw_ops.WholeFileReader": "doc",
    "tensorflow.raw_ops.WorkerHeartbeat": "doc",
    "tensorflow.saved_model.LoadOptions": "doc",
    "tensorflow.saved_model.SaveOptions": "doc",
    "tensorflow.test.is_built_with_cuda": "doc",
    "tensorflow.test.is_built_with_rocm": "doc",
    "tensorflow.data.experimental.unique": "doc",
    "tensorflow.debugging.assert_greater": "doc",
    "tensorflow.debugging.assert_integer": "doc",
    "tensorflow.estimator.LatestExporter": "doc",
    "tensorflow.estimator.MultiClassHead": "doc",
    "tensorflow.estimator.MultiLabelHead": "doc",
    "tensorflow.estimator.RegressionHead": "doc",
    "tensorflow.estimator.SessionRunHook": "doc",
    "tensorflow.estimator.StopAtStepHook": "doc",
    "tensorflow.experimental.async_scope": "doc",
    "tensorflow.experimental.numpy.angle": "doc",
    "tensorflow.experimental.numpy.array": "doc",
    "tensorflow.experimental.numpy.bool_": "doc",
    "tensorflow.experimental.numpy.empty": "doc",
    "tensorflow.experimental.numpy.equal": "doc",
    "tensorflow.experimental.numpy.expm1": "doc",
    "tensorflow.experimental.numpy.finfo": "doc",
    "tensorflow.experimental.numpy.floor": "doc",
    "tensorflow.experimental.numpy.hypot": "doc",
    "tensorflow.experimental.numpy.iinfo": "doc",
    "tensorflow.experimental.numpy.isinf": "doc",
    "tensorflow.experimental.numpy.isnan": "doc",
    "tensorflow.experimental.numpy.log10": "doc",
    "tensorflow.experimental.numpy.log1p": "doc",
    "tensorflow.experimental.numpy.ravel": "doc",
    "tensorflow.experimental.numpy.round": "doc",
    "tensorflow.experimental.numpy.shape": "doc",
    "tensorflow.experimental.numpy.split": "doc",
    "tensorflow.experimental.numpy.stack": "doc",
    "tensorflow.experimental.numpy.trace": "doc",
    "tensorflow.experimental.numpy.where": "doc",
    "tensorflow.experimental.numpy.zeros": "doc",
    "tensorflow.image.extract_jpeg_shape": "doc",
    "tensorflow.initializers.Initializer": "doc",
    "tensorflow.initializers.deserialize": "doc",
    "tensorflow.io.serialize_many_sparse": "doc",
    "tensorflow.keras.activations.linear": "doc",
    "tensorflow.keras.applications.VGG16": "doc",
    "tensorflow.keras.applications.VGG19": "doc",
    "tensorflow.keras.applications.vgg16": "doc",
    "tensorflow.keras.applications.vgg19": "doc",
    "tensorflow.keras.backend.reset_uids": "doc",
    "tensorflow.keras.backend.set_floatx": "doc",
    "tensorflow.keras.callbacks.Callback": "doc",
    "tensorflow.keras.initializers.Zeros": "doc",
    "tensorflow.keras.initializers.zeros": "doc",
    "tensorflow.keras.layers.deserialize": "doc",
    "tensorflow.keras.losses.deserialize": "doc",
    "tensorflow.keras.optimizers.Adagrad": "doc",
    "tensorflow.keras.optimizers.RMSprop": "doc",
    "tensorflow.keras.preprocessing.text": "doc",
    "tensorflow.keras.regularizers.l1_l2": "doc",
    "tensorflow.keras.utils.model_to_dot": "doc",
    "tensorflow.linalg.lu_matrix_inverse": "doc",
    "tensorflow.linalg.tridiagonal_solve": "doc",
    "tensorflow.losses.MeanAbsoluteError": "doc",
    "tensorflow.losses.categorical_hinge": "doc",
    "tensorflow.math.special.fresnel_cos": "doc",
    "tensorflow.math.special.fresnel_sin": "doc",
    "tensorflow.nn.RNNCellDropoutWrapper": "doc",
    "tensorflow.nn.all_candidate_sampler": "doc",
    "tensorflow.nn.sufficient_statistics": "doc",
    "tensorflow.queue.RandomShuffleQueue": "doc",
    "tensorflow.random.stateless_poisson": "doc",
    "tensorflow.random.stateless_uniform": "doc",
    "tensorflow.raw_ops.AdjustSaturation": "doc",
    "tensorflow.raw_ops.ApproximateEqual": "doc",
    "tensorflow.raw_ops.AudioSpectrogram": "doc",
    "tensorflow.raw_ops.AutoShardDataset": "doc",
    "tensorflow.raw_ops.BarrierReadySize": "doc",
    "tensorflow.raw_ops.CTCGreedyDecoder": "doc",
    "tensorflow.raw_ops.CollectiveGather": "doc",
    "tensorflow.raw_ops.CollectiveReduce": "doc",
    "tensorflow.raw_ops.ComputeBatchSize": "doc",
    "tensorflow.raw_ops.ConsumeMutexLock": "doc",
    "tensorflow.raw_ops.CudnnRNNBackprop": "doc",
    "tensorflow.raw_ops.DataFormatDimMap": "doc",
    "tensorflow.raw_ops.DatasetFromGraph": "doc",
    "tensorflow.raw_ops.DatasetToGraphV2": "doc",
    "tensorflow.raw_ops.DecodeCompressed": "doc",
    "tensorflow.raw_ops.DummyMemoryCache": "doc",
    "tensorflow.raw_ops.DynamicPartition": "doc",
    "tensorflow.raw_ops.ExtractGlimpseV2": "doc",
    "tensorflow.raw_ops.ExtractJpegShape": "doc",
    "tensorflow.raw_ops.FusedBatchNormV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormV3": "doc",
    "tensorflow.raw_ops.GRUBlockCellGrad": "doc",
    "tensorflow.raw_ops.GeneratorDataset": "doc",
    "tensorflow.raw_ops.GetSessionHandle": "doc",
    "tensorflow.raw_ops.GetSessionTensor": "doc",
    "tensorflow.raw_ops.HistogramSummary": "doc",
    "tensorflow.raw_ops.IdentityReaderV2": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV2": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV3": "doc",
    "tensorflow.raw_ops.MatrixSquareRoot": "doc",
    "tensorflow.raw_ops.MutableHashTable": "doc",
    "tensorflow.raw_ops.OptionalGetValue": "doc",
    "tensorflow.raw_ops.OptionalHasValue": "doc",
    "tensorflow.raw_ops.OutfeedDequeueV2": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueue": "doc",
    "tensorflow.raw_ops.QuantizedAvgPool": "doc",
    "tensorflow.raw_ops.QuantizedBiasAdd": "doc",
    "tensorflow.raw_ops.QuantizedMaxPool": "doc",
    "tensorflow.raw_ops.QuantizedReshape": "doc",
    "tensorflow.raw_ops.QueueDequeueMany": "doc",
    "tensorflow.raw_ops.QueueDequeueUpTo": "doc",
    "tensorflow.raw_ops.QueueEnqueueMany": "doc",
    "tensorflow.raw_ops.RandomUniformInt": "doc",
    "tensorflow.raw_ops.ReaderReadUpToV2": "doc",
    "tensorflow.raw_ops.RebatchDatasetV2": "doc",
    "tensorflow.raw_ops.RefNextIteration": "doc",
    "tensorflow.raw_ops.ResourceGatherNd": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV2": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV3": "doc",
    "tensorflow.raw_ops.SparseSegmentSum": "doc",
    "tensorflow.raw_ops.StridedSliceGrad": "doc",
    "tensorflow.raw_ops.SymbolicGradient": "doc",
    "tensorflow.raw_ops.TFRecordReaderV2": "doc",
    "tensorflow.raw_ops.TakeWhileDataset": "doc",
    "tensorflow.raw_ops.TensorArrayClose": "doc",
    "tensorflow.raw_ops.TensorArraySplit": "doc",
    "tensorflow.raw_ops.TensorArrayWrite": "doc",
    "tensorflow.raw_ops.TensorListConcat": "doc",
    "tensorflow.raw_ops.TensorListGather": "doc",
    "tensorflow.raw_ops.TensorListLength": "doc",
    "tensorflow.raw_ops.TensorListResize": "doc",
    "tensorflow.raw_ops.TensorScatterAdd": "doc",
    "tensorflow.raw_ops.TensorScatterMax": "doc",
    "tensorflow.raw_ops.TextLineReaderV2": "doc",
    "tensorflow.raw_ops.ThreadPoolHandle": "doc",
    "tensorflow.raw_ops.TridiagonalSolve": "doc",
    "tensorflow.raw_ops.UnicodeTranscode": "doc",
    "tensorflow.raw_ops.UniqueWithCounts": "doc",
    "tensorflow.saved_model.experimental": "doc",
    "tensorflow.strings.regex_full_match": "doc",
    "tensorflow.tensor_scatter_nd_update": "doc",
    "tensorflow.data.experimental.Reducer": "doc",
    "tensorflow.data.experimental.service": "doc",
    "tensorflow.data.experimental.unbatch": "doc",
    "tensorflow.debugging.assert_negative": "doc",
    "tensorflow.debugging.assert_positive": "doc",
    "tensorflow.errors.AlreadyExistsError": "doc",
    "tensorflow.errors.UnimplementedError": "doc",
    "tensorflow.estimator.BinaryClassHead": "doc",
    "tensorflow.estimator.LinearEstimator": "doc",
    "tensorflow.estimator.LinearRegressor": "doc",
    "tensorflow.experimental.numpy.append": "doc",
    "tensorflow.experimental.numpy.arange": "doc",
    "tensorflow.experimental.numpy.arccos": "doc",
    "tensorflow.experimental.numpy.arcsin": "doc",
    "tensorflow.experimental.numpy.arctan": "doc",
    "tensorflow.experimental.numpy.argmax": "doc",
    "tensorflow.experimental.numpy.argmin": "doc",
    "tensorflow.experimental.numpy.around": "doc",
    "tensorflow.experimental.numpy.cumsum": "doc",
    "tensorflow.experimental.numpy.divide": "doc",
    "tensorflow.experimental.numpy.divmod": "doc",
    "tensorflow.experimental.numpy.dsplit": "doc",
    "tensorflow.experimental.numpy.dstack": "doc",
    "tensorflow.experimental.numpy.einsum": "doc",
    "tensorflow.experimental.numpy.fliplr": "doc",
    "tensorflow.experimental.numpy.flipud": "doc",
    "tensorflow.experimental.numpy.float_": "doc",
    "tensorflow.experimental.numpy.hsplit": "doc",
    "tensorflow.experimental.numpy.hstack": "doc",
    "tensorflow.experimental.numpy.isreal": "doc",
    "tensorflow.experimental.numpy.matmul": "doc",
    "tensorflow.experimental.numpy.nansum": "doc",
    "tensorflow.experimental.numpy.random": "doc",
    "tensorflow.experimental.numpy.repeat": "doc",
    "tensorflow.experimental.numpy.select": "doc",
    "tensorflow.experimental.numpy.square": "doc",
    "tensorflow.experimental.numpy.vander": "doc",
    "tensorflow.experimental.numpy.vsplit": "doc",
    "tensorflow.experimental.numpy.vstack": "doc",
    "tensorflow.image.adjust_jpeg_quality": "doc",
    "tensorflow.image.draw_bounding_boxes": "doc",
    "tensorflow.image.pad_to_bounding_box": "doc",
    "tensorflow.image.random_flip_up_down": "doc",
    "tensorflow.image.random_jpeg_quality": "doc",
    "tensorflow.initializers.RandomNormal": "doc",
    "tensorflow.io.parse_sequence_example": "doc",
    "tensorflow.keras.activations.sigmoid": "doc",
    "tensorflow.keras.applications.nasnet": "doc",
    "tensorflow.keras.applications.resnet": "doc",
    "tensorflow.keras.backend.set_epsilon": "doc",
    "tensorflow.keras.callbacks.CSVLogger": "doc",
    "tensorflow.keras.layers.AlphaDropout": "doc",
    "tensorflow.keras.layers.MaxPooling1D": "doc",
    "tensorflow.keras.layers.MaxPooling2D": "doc",
    "tensorflow.keras.layers.MaxPooling3D": "doc",
    "tensorflow.keras.layers.RepeatVector": "doc",
    "tensorflow.keras.layers.UpSampling1D": "doc",
    "tensorflow.keras.layers.UpSampling2D": "doc",
    "tensorflow.keras.layers.UpSampling3D": "doc",
    "tensorflow.keras.layers.experimental": "doc",
    "tensorflow.keras.losses.KLDivergence": "doc",
    "tensorflow.keras.losses.SquaredHinge": "doc",
    "tensorflow.keras.optimizers.Adadelta": "doc",
    "tensorflow.keras.preprocessing.image": "doc",
    "tensorflow.linalg.tridiagonal_matmul": "doc",
    "tensorflow.losses.mean_squared_error": "doc",
    "tensorflow.math.cumulative_logsumexp": "doc",
    "tensorflow.math.unsorted_segment_max": "doc",
    "tensorflow.math.unsorted_segment_min": "doc",
    "tensorflow.math.unsorted_segment_sum": "doc",
    "tensorflow.nn.RNNCellResidualWrapper": "doc",
    "tensorflow.random.stateless_binomial": "doc",
    "tensorflow.random_normal_initializer": "doc",
    "tensorflow.raw_ops.AssertNextDataset": "doc",
    "tensorflow.raw_ops.BarrierInsertMany": "doc",
    "tensorflow.raw_ops.BatchCholeskyGrad": "doc",
    "tensorflow.raw_ops.CollectivePermute": "doc",
    "tensorflow.raw_ops.CompareAndBitpack": "doc",
    "tensorflow.raw_ops.DatasetToTFRecord": "doc",
    "tensorflow.raw_ops.DecodeJSONExample": "doc",
    "tensorflow.raw_ops.DeleteMemoryCache": "doc",
    "tensorflow.raw_ops.DeserializeSparse": "doc",
    "tensorflow.raw_ops.DestroyResourceOp": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxes": "doc",
    "tensorflow.raw_ops.FractionalAvgPool": "doc",
    "tensorflow.raw_ops.FractionalMaxPool": "doc",
    "tensorflow.raw_ops.InitializeTableV2": "doc",
    "tensorflow.raw_ops.InterleaveDataset": "doc",
    "tensorflow.raw_ops.InvertPermutation": "doc",
    "tensorflow.raw_ops.IteratorGetDevice": "doc",
    "tensorflow.raw_ops.LSTMBlockCellGrad": "doc",
    "tensorflow.raw_ops.LookupTableExport": "doc",
    "tensorflow.raw_ops.LookupTableFindV2": "doc",
    "tensorflow.raw_ops.LookupTableImport": "doc",
    "tensorflow.raw_ops.LookupTableInsert": "doc",
    "tensorflow.raw_ops.LookupTableSizeV2": "doc",
    "tensorflow.raw_ops.MatrixDeterminant": "doc",
    "tensorflow.raw_ops.MatrixExponential": "doc",
    "tensorflow.raw_ops.MaxPool3DGradGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradV2": "doc",
    "tensorflow.raw_ops.MaxPoolWithArgmax": "doc",
    "tensorflow.raw_ops.OptimizeDatasetV2": "doc",
    "tensorflow.raw_ops.OptionalFromValue": "doc",
    "tensorflow.raw_ops.OrderedMapUnstage": "doc",
    "tensorflow.raw_ops.PrelinearizeTuple": "doc",
    "tensorflow.raw_ops.ResizeBicubicGrad": "doc",
    "tensorflow.raw_ops.ResourceApplyAdam": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrl": "doc",
    "tensorflow.raw_ops.ScaleAndTranslate": "doc",
    "tensorflow.raw_ops.SerializeIterator": "doc",
    "tensorflow.raw_ops.SnapshotDatasetV2": "doc",
    "tensorflow.raw_ops.SparseApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SparseCrossHashed": "doc",
    "tensorflow.raw_ops.SparseMatrixZeros": "doc",
    "tensorflow.raw_ops.SparseSegmentMean": "doc",
    "tensorflow.raw_ops.SquaredDifference": "doc",
    "tensorflow.raw_ops.TensorArrayConcat": "doc",
    "tensorflow.raw_ops.TensorArrayGather": "doc",
    "tensorflow.raw_ops.TensorArrayGradV2": "doc",
    "tensorflow.raw_ops.TensorArrayGradV3": "doc",
    "tensorflow.raw_ops.TensorArrayReadV2": "doc",
    "tensorflow.raw_ops.TensorArrayReadV3": "doc",
    "tensorflow.raw_ops.TensorArraySizeV2": "doc",
    "tensorflow.raw_ops.TensorArraySizeV3": "doc",
    "tensorflow.raw_ops.TensorArrayUnpack": "doc",
    "tensorflow.raw_ops.TensorListGetItem": "doc",
    "tensorflow.raw_ops.TensorListPopBack": "doc",
    "tensorflow.raw_ops.TensorListReserve": "doc",
    "tensorflow.raw_ops.TensorListScatter": "doc",
    "tensorflow.raw_ops.TensorListSetItem": "doc",
    "tensorflow.raw_ops.ThreadPoolDataset": "doc",
    "tensorflow.raw_ops.TridiagonalMatMul": "doc",
    "tensorflow.raw_ops.UncompressElement": "doc",
    "tensorflow.raw_ops.WholeFileReaderV2": "doc",
    "tensorflow.raw_ops.WriteAudioSummary": "doc",
    "tensorflow.raw_ops.WriteGraphSummary": "doc",
    "tensorflow.raw_ops.WriteImageSummary": "doc",
    "tensorflow.test.create_local_cluster": "doc",
    "tensorflow.tpu.experimental.Topology": "doc",
    "tensorflow.data.experimental.Optional": "doc",
    "tensorflow.data.experimental.snapshot": "doc",
    "tensorflow.estimator.LinearClassifier": "doc",
    "tensorflow.estimator.SessionRunValues": "doc",
    "tensorflow.estimator.SummarySaverHook": "doc",
    "tensorflow.experimental.numpy.arccosh": "doc",
    "tensorflow.experimental.numpy.arcsinh": "doc",
    "tensorflow.experimental.numpy.arctan2": "doc",
    "tensorflow.experimental.numpy.arctanh": "doc",
    "tensorflow.experimental.numpy.argsort": "doc",
    "tensorflow.experimental.numpy.asarray": "doc",
    "tensorflow.experimental.numpy.average": "doc",
    "tensorflow.experimental.numpy.deg2rad": "doc",
    "tensorflow.experimental.numpy.float16": "doc",
    "tensorflow.experimental.numpy.float32": "doc",
    "tensorflow.experimental.numpy.float64": "doc",
    "tensorflow.experimental.numpy.greater": "doc",
    "tensorflow.experimental.numpy.inexact": "doc",
    "tensorflow.experimental.numpy.isclose": "doc",
    "tensorflow.experimental.numpy.maximum": "doc",
    "tensorflow.experimental.numpy.minimum": "doc",
    "tensorflow.experimental.numpy.nanmean": "doc",
    "tensorflow.experimental.numpy.ndarray": "doc",
    "tensorflow.experimental.numpy.object_": "doc",
    "tensorflow.experimental.numpy.polyval": "doc",
    "tensorflow.experimental.numpy.rad2deg": "doc",
    "tensorflow.experimental.numpy.reshape": "doc",
    "tensorflow.experimental.numpy.signbit": "doc",
    "tensorflow.experimental.numpy.squeeze": "doc",
    "tensorflow.experimental.numpy.string_": "doc",
    "tensorflow.histogram_fixed_width_bins": "doc",
    "tensorflow.image.decode_and_crop_jpeg": "doc",
    "tensorflow.image.stateless_random_hue": "doc",
    "tensorflow.initializers.RandomUniform": "doc",
    "tensorflow.io.FixedLenSequenceFeature": "doc",
    "tensorflow.io.deserialize_many_sparse": "doc",
    "tensorflow.keras.callbacks.BaseLogger": "doc",
    "tensorflow.keras.layers.Bidirectional": "doc",
    "tensorflow.keras.layers.GaussianNoise": "doc",
    "tensorflow.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.keras.losses.kl_divergence": "doc",
    "tensorflow.keras.losses.squared_hinge": "doc",
    "tensorflow.keras.optimizers.Optimizer": "doc",
    "tensorflow.keras.optimizers.schedules": "doc",
    "tensorflow.keras.optimizers.serialize": "doc",
    "tensorflow.linalg.LinearOperatorZeros": "doc",
    "tensorflow.lite.RepresentativeDataset": "doc",
    "tensorflow.lookup.TextFileInitializer": "doc",
    "tensorflow.losses.mean_absolute_error": "doc",
    "tensorflow.math.reduce_euclidean_norm": "doc",
    "tensorflow.math.unsorted_segment_mean": "doc",
    "tensorflow.math.unsorted_segment_prod": "doc",
    "tensorflow.nest.assert_same_structure": "doc",
    "tensorflow.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.nn.embedding_lookup_sparse": "doc",
    "tensorflow.profiler.experimental.stop": "doc",
    "tensorflow.quantize_and_dequantize_v4": "doc",
    "tensorflow.random_uniform_initializer": "doc",
    "tensorflow.raw_ops.CloseSummaryWriter": "doc",
    "tensorflow.raw_ops.CollectiveGatherV2": "doc",
    "tensorflow.raw_ops.CollectiveReduceV2": "doc",
    "tensorflow.raw_ops.ConcatenateDataset": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV2": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV3": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsSize": "doc",
    "tensorflow.raw_ops.DataServiceDataset": "doc",
    "tensorflow.raw_ops.DatasetCardinality": "doc",
    "tensorflow.raw_ops.DummySeedGenerator": "doc",
    "tensorflow.raw_ops.FlushSummaryWriter": "doc",
    "tensorflow.raw_ops.FusedBatchNormGrad": "doc",
    "tensorflow.raw_ops.GetSessionHandleV2": "doc",
    "tensorflow.raw_ops.InfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.InfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.MapAndBatchDataset": "doc",
    "tensorflow.raw_ops.MergeV2Checkpoints": "doc",
    "tensorflow.raw_ops.MutableHashTableV2": "doc",
    "tensorflow.raw_ops.PaddedBatchDataset": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueueV2": "doc",
    "tensorflow.raw_ops.ParallelMapDataset": "doc",
    "tensorflow.raw_ops.ParseSingleExample": "doc",
    "tensorflow.raw_ops.QueueDequeueManyV2": "doc",
    "tensorflow.raw_ops.QueueDequeueUpToV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueManyV2": "doc",
    "tensorflow.raw_ops.RandomShuffleQueue": "doc",
    "tensorflow.raw_ops.ReaderRestoreState": "doc",
    "tensorflow.raw_ops.ResizeBilinearGrad": "doc",
    "tensorflow.raw_ops.ResourceScatterAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterMax": "doc",
    "tensorflow.raw_ops.ResourceScatterMul": "doc",
    "tensorflow.raw_ops.SparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.SparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.SparseMatrixMatMul": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtN": "doc",
    "tensorflow.raw_ops.StatefulUniformInt": "doc",
    "tensorflow.raw_ops.StaticRegexReplace": "doc",
    "tensorflow.raw_ops.StridedSliceAssign": "doc",
    "tensorflow.raw_ops.StringToHashBucket": "doc",
    "tensorflow.raw_ops.TPUOrdinalSelector": "doc",
    "tensorflow.raw_ops.TPUPartitionedCall": "doc",
    "tensorflow.raw_ops.TPUReplicatedInput": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV2": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV3": "doc",
    "tensorflow.raw_ops.TensorArrayScatter": "doc",
    "tensorflow.raw_ops.TensorArraySplitV2": "doc",
    "tensorflow.raw_ops.TensorArraySplitV3": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV2": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV3": "doc",
    "tensorflow.raw_ops.TensorListConcatV2": "doc",
    "tensorflow.raw_ops.TensorListPushBack": "doc",
    "tensorflow.raw_ops.TensorSliceDataset": "doc",
    "tensorflow.raw_ops.UniqueWithCountsV2": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMax": "doc",
    "tensorflow.raw_ops.UnsortedSegmentSum": "doc",
    "tensorflow.raw_ops.VarIsInitializedOp": "doc",
    "tensorflow.raw_ops.WrapDatasetVariant": "doc",
    "tensorflow.raw_ops.WriteScalarSummary": "doc",
    "tensorflow.sparse.sparse_dense_matmul": "doc",
    "tensorflow.tpu.experimental.embedding": "doc",
    "tensorflow.xla.experimental.jit_scope": "doc",
    "tensorflow.autodiff.ForwardAccumulator": "doc",
    "tensorflow.debugging.assert_all_finite": "doc",
    "tensorflow.debugging.assert_less_equal": "doc",
    "tensorflow.debugging.assert_none_equal": "doc",
    "tensorflow.debugging.is_numeric_tensor": "doc",
    "tensorflow.errors.InvalidArgumentError": "doc",
    "tensorflow.errors.UnauthenticatedError": "doc",
    "tensorflow.estimator.BaselineEstimator": "doc",
    "tensorflow.estimator.BaselineRegressor": "doc",
    "tensorflow.estimator.LoggingTensorHook": "doc",
    "tensorflow.estimator.SessionRunContext": "doc",
    "tensorflow.estimator.WarmStartSettings": "doc",
    "tensorflow.experimental.numpy.absolute": "doc",
    "tensorflow.experimental.numpy.allclose": "doc",
    "tensorflow.experimental.numpy.diagflat": "doc",
    "tensorflow.experimental.numpy.diagonal": "doc",
    "tensorflow.experimental.numpy.isfinite": "doc",
    "tensorflow.experimental.numpy.isposinf": "doc",
    "tensorflow.experimental.numpy.isscalar": "doc",
    "tensorflow.experimental.numpy.linspace": "doc",
    "tensorflow.experimental.numpy.logspace": "doc",
    "tensorflow.experimental.numpy.multiply": "doc",
    "tensorflow.experimental.numpy.negative": "doc",
    "tensorflow.experimental.numpy.swapaxes": "doc",
    "tensorflow.experimental.numpy.unicode_": "doc",
    "tensorflow.graph_util.import_graph_def": "doc",
    "tensorflow.image.stateless_random_crop": "doc",
    "tensorflow.initializers.random_uniform": "doc",
    "tensorflow.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.keras.activations.serialize": "doc",
    "tensorflow.keras.applications.ResNet50": "doc",
    "tensorflow.keras.applications.densenet": "doc",
    "tensorflow.keras.applications.resnet50": "doc",
    "tensorflow.keras.callbacks.TensorBoard": "doc",
    "tensorflow.keras.initializers.HeNormal": "doc",
    "tensorflow.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.keras.wrappers.scikit_learn": "doc",
    "tensorflow.math.is_strictly_increasing": "doc",
    "tensorflow.profiler.experimental.Trace": "doc",
    "tensorflow.profiler.experimental.start": "doc",
    "tensorflow.random.get_global_generator": "doc",
    "tensorflow.random.set_global_generator": "doc",
    "tensorflow.raw_ops.AllCandidateSampler": "doc",
    "tensorflow.raw_ops.CollectiveBcastRecv": "doc",
    "tensorflow.raw_ops.CollectiveBcastSend": "doc",
    "tensorflow.raw_ops.Conv2DBackpropInput": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInput": "doc",
    "tensorflow.raw_ops.CumulativeLogsumexp": "doc",
    "tensorflow.raw_ops.DebugNumericSummary": "doc",
    "tensorflow.raw_ops.DeleteSeedGenerator": "doc",
    "tensorflow.raw_ops.DeleteSessionTensor": "doc",
    "tensorflow.raw_ops.DeserializeIterator": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxesV2": "doc",
    "tensorflow.raw_ops.ExtractImagePatches": "doc",
    "tensorflow.raw_ops.HistogramFixedWidth": "doc",
    "tensorflow.raw_ops.IgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.IteratorGetNextSync": "doc",
    "tensorflow.raw_ops.LatencyStatsDataset": "doc",
    "tensorflow.raw_ops.LookupTableExportV2": "doc",
    "tensorflow.raw_ops.LookupTableImportV2": "doc",
    "tensorflow.raw_ops.LookupTableInsertV2": "doc",
    "tensorflow.raw_ops.LookupTableRemoveV2": "doc",
    "tensorflow.raw_ops.MultiDeviceIterator": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.OutfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.ParseExampleDataset": "doc",
    "tensorflow.raw_ops.RequantizationRange": "doc",
    "tensorflow.raw_ops.ResourceApplyAdaMax": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SerializeManySparse": "doc",
    "tensorflow.raw_ops.SparseApplyAdadelta": "doc",
    "tensorflow.raw_ops.SparseApplyMomentum": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseAdd": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseDiv": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseMul": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRows": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmax": "doc",
    "tensorflow.raw_ops.SparseSparseMaximum": "doc",
    "tensorflow.raw_ops.SparseSparseMinimum": "doc",
    "tensorflow.raw_ops.TPUReplicatedOutput": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV2": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV3": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV2": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV3": "doc",
    "tensorflow.raw_ops.TensorListScatterV2": "doc",
    "tensorflow.raw_ops.TensorScatterUpdate": "doc",
    "tensorflow.strings.to_hash_bucket_fast": "doc",
    "tensorflow.test.assert_equal_graph_def": "doc",
    "tensorflow.data.experimental.CsvDataset": "doc",
    "tensorflow.data.experimental.SqlDataset": "doc",
    "tensorflow.data.experimental.take_while": "doc",
    "tensorflow.errors.DeadlineExceededError": "doc",
    "tensorflow.errors.PermissionDeniedError": "doc",
    "tensorflow.estimator.BaselineClassifier": "doc",
    "tensorflow.estimator.train_and_evaluate": "doc",
    "tensorflow.experimental.numpy.full_like": "doc",
    "tensorflow.experimental.numpy.geomspace": "doc",
    "tensorflow.experimental.numpy.heaviside": "doc",
    "tensorflow.experimental.numpy.isrealobj": "doc",
    "tensorflow.experimental.numpy.logaddexp": "doc",
    "tensorflow.experimental.numpy.nextafter": "doc",
    "tensorflow.experimental.numpy.not_equal": "doc",
    "tensorflow.experimental.numpy.remainder": "doc",
    "tensorflow.experimental.numpy.transpose": "doc",
    "tensorflow.image.random_flip_left_right": "doc",
    "tensorflow.initializers.TruncatedNormal": "doc",
    "tensorflow.initializers.VarianceScaling": "doc",
    "tensorflow.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.keras.applications.MobileNet": "doc",
    "tensorflow.keras.applications.ResNet101": "doc",
    "tensorflow.keras.applications.ResNet152": "doc",
    "tensorflow.keras.applications.mobilenet": "doc",
    "tensorflow.keras.callbacks.CallbackList": "doc",
    "tensorflow.keras.callbacks.experimental": "doc",
    "tensorflow.keras.initializers.serialize": "doc",
    "tensorflow.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.keras.layers.GaussianDropout": "doc",
    "tensorflow.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.keras.layers.SeparableConv1D": "doc",
    "tensorflow.keras.layers.SeparableConv2D": "doc",
    "tensorflow.keras.layers.StackedRNNCells": "doc",
    "tensorflow.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.keras.mixed_precision.Policy": "doc",
    "tensorflow.keras.models.model_from_json": "doc",
    "tensorflow.keras.models.model_from_yaml": "doc",
    "tensorflow.keras.optimizers.deserialize": "doc",
    "tensorflow.keras.preprocessing.sequence": "doc",
    "tensorflow.keras.regularizers.serialize": "doc",
    "tensorflow.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.lookup.StaticVocabularyTable": "doc",
    "tensorflow.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.mixed_precision.experimental": "doc",
    "tensorflow.nn.scale_regularization_loss": "doc",
    "tensorflow.profiler.experimental.client": "doc",
    "tensorflow.profiler.experimental.server": "doc",
    "tensorflow.random.all_candidate_sampler": "doc",
    "tensorflow.random.stateless_categorical": "doc",
    "tensorflow.raw_ops.AnonymousMemoryCache": "doc",
    "tensorflow.raw_ops.ApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ApplyGradientDescent": "doc",
    "tensorflow.raw_ops.ApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.CTCBeamSearchDecoder": "doc",
    "tensorflow.raw_ops.ChooseFastestDataset": "doc",
    "tensorflow.raw_ops.Conv2DBackpropFilter": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilter": "doc",
    "tensorflow.raw_ops.DataFormatVecPermute": "doc",
    "tensorflow.raw_ops.ExtractVolumePatches": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV3": "doc",
    "tensorflow.raw_ops.GroupByWindowDataset": "doc",
    "tensorflow.raw_ops.LogMatrixDeterminant": "doc",
    "tensorflow.raw_ops.MatchingFilesDataset": "doc",
    "tensorflow.raw_ops.PaddedBatchDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelMapDatasetV2": "doc",
    "tensorflow.raw_ops.ParseSequenceExample": "doc",
    "tensorflow.raw_ops.RaggedTensorToSparse": "doc",
    "tensorflow.raw_ops.RaggedTensorToTensor": "doc",
    "tensorflow.raw_ops.RandomShuffleQueueV2": "doc",
    "tensorflow.raw_ops.RandomStandardNormal": "doc",
    "tensorflow.raw_ops.ReaderRestoreStateV2": "doc",
    "tensorflow.raw_ops.ReaderSerializeState": "doc",
    "tensorflow.raw_ops.RequantizePerChannel": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagrad": "doc",
    "tensorflow.raw_ops.ResourceApplyAddSign": "doc",
    "tensorflow.raw_ops.ResourceApplyRMSProp": "doc",
    "tensorflow.raw_ops.ResourceScatterNdAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMax": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMin": "doc",
    "tensorflow.raw_ops.ResourceScatterNdSub": "doc",
    "tensorflow.raw_ops.SlidingWindowDataset": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.SparseTensorDenseAdd": "doc",
    "tensorflow.raw_ops.StatelessMultinomial": "doc",
    "tensorflow.raw_ops.StaticRegexFullMatch": "doc",
    "tensorflow.raw_ops.TPUCompilationResult": "doc",
    "tensorflow.raw_ops.TPUReplicateMetadata": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV2": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV3": "doc",
    "tensorflow.raw_ops.TensorListFromTensor": "doc",
    "tensorflow.raw_ops.UnwrapDatasetVariant": "doc",
    "tensorflow.raw_ops.WriteRawProtoSummary": "doc",
    "tensorflow.data.FixedLengthRecordDataset": "doc",
    "tensorflow.debugging.assert_non_negative": "doc",
    "tensorflow.debugging.assert_non_positive": "doc",
    "tensorflow.errors.ResourceExhaustedError": "doc",
    "tensorflow.estimator.export.ExportOutput": "doc",
    "tensorflow.experimental.dlpack.to_dlpack": "doc",
    "tensorflow.experimental.numpy.asanyarray": "doc",
    "tensorflow.experimental.numpy.atleast_1d": "doc",
    "tensorflow.experimental.numpy.atleast_2d": "doc",
    "tensorflow.experimental.numpy.atleast_3d": "doc",
    "tensorflow.experimental.numpy.bitwise_or": "doc",
    "tensorflow.experimental.numpy.complex128": "doc",
    "tensorflow.experimental.numpy.empty_like": "doc",
    "tensorflow.experimental.numpy.issubdtype": "doc",
    "tensorflow.experimental.numpy.less_equal": "doc",
    "tensorflow.experimental.numpy.logaddexp2": "doc",
    "tensorflow.experimental.numpy.logical_or": "doc",
    "tensorflow.experimental.numpy.reciprocal": "doc",
    "tensorflow.experimental.numpy.zeros_like": "doc",
    "tensorflow.feature_column.crossed_column": "doc",
    "tensorflow.feature_column.numeric_column": "doc",
    "tensorflow.image.resize_with_crop_or_pad": "doc",
    "tensorflow.initializers.truncated_normal": "doc",
    "tensorflow.initializers.variance_scaling": "doc",
    "tensorflow.keras.activations.deserialize": "doc",
    "tensorflow.keras.applications.ResNet50V2": "doc",
    "tensorflow.keras.backend.is_keras_tensor": "doc",
    "tensorflow.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.keras.datasets.imdb.load_data": "doc",
    "tensorflow.keras.initializers.Orthogonal": "doc",
    "tensorflow.keras.initializers.he_uniform": "doc",
    "tensorflow.keras.initializers.orthogonal": "doc",
    "tensorflow.keras.layers.AveragePooling1D": "doc",
    "tensorflow.keras.layers.AveragePooling2D": "doc",
    "tensorflow.keras.layers.AveragePooling3D": "doc",
    "tensorflow.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.keras.losses.CategoricalHinge": "doc",
    "tensorflow.keras.losses.MeanSquaredError": "doc",
    "tensorflow.keras.utils.CustomObjectScope": "doc",
    "tensorflow.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.keras.utils.get_source_inputs": "doc",
    "tensorflow.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.profiler.experimental.Profile": "doc",
    "tensorflow.raw_ops.AddSparseToTensorsMap": "doc",
    "tensorflow.raw_ops.BandedTriangularSolve": "doc",
    "tensorflow.raw_ops.BarrierIncompleteSize": "doc",
    "tensorflow.raw_ops.BoostedTreesBucketize": "doc",
    "tensorflow.raw_ops.BroadcastGradientArgs": "doc",
    "tensorflow.raw_ops.ComputeAccidentalHits": "doc",
    "tensorflow.raw_ops.ConfigureTPUEmbedding": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInputV2": "doc",
    "tensorflow.raw_ops.CreateSummaryDbWriter": "doc",
    "tensorflow.raw_ops.DebugGradientIdentity": "doc",
    "tensorflow.raw_ops.DebugNumericSummaryV2": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNative": "doc",
    "tensorflow.raw_ops.DeserializeManySparse": "doc",
    "tensorflow.raw_ops.DummyIterationCounter": "doc",
    "tensorflow.raw_ops.FractionalAvgPoolGrad": "doc",
    "tensorflow.raw_ops.FractionalMaxPoolGrad": "doc",
    "tensorflow.raw_ops.GroupByReducerDataset": "doc",
    "tensorflow.raw_ops.IsVariableInitialized": "doc",
    "tensorflow.raw_ops.MatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.MaxPoolGradWithArgmax": "doc",
    "tensorflow.raw_ops.MutableDenseHashTable": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTupleV2": "doc",
    "tensorflow.raw_ops.ParallelDynamicStitch": "doc",
    "tensorflow.raw_ops.ParseExampleDatasetV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantize": "doc",
    "tensorflow.raw_ops.QuantizedInstanceNorm": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariant": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighbor": "doc",
    "tensorflow.raw_ops.ResourceApplyAdadelta": "doc",
    "tensorflow.raw_ops.ResourceApplyMomentum": "doc",
    "tensorflow.raw_ops.ResourceScatterUpdate": "doc",
    "tensorflow.raw_ops.ScaleAndTranslateGrad": "doc",
    "tensorflow.raw_ops.SparseMatrixTranspose": "doc",
    "tensorflow.raw_ops.SparseReduceMaxSparse": "doc",
    "tensorflow.raw_ops.SparseReduceSumSparse": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanGrad": "doc",
    "tensorflow.raw_ops.StatelessRandomNormal": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandle": "doc",
    "tensorflow.raw_ops.TensorListConcatLists": "doc",
    "tensorflow.raw_ops.WriteHistogramSummary": "doc",
    "tensorflow.signal.inverse_stft_window_fn": "doc",
    "tensorflow.strings.to_hash_bucket_strong": "doc",
    "tensorflow.strings.unsorted_segment_join": "doc",
    "tensorflow.summary.experimental.get_step": "doc",
    "tensorflow.summary.experimental.set_step": "doc",
    "tensorflow.autograph.experimental.Feature": "doc",
    "tensorflow.data.experimental.StatsOptions": "doc",
    "tensorflow.debugging.assert_greater_equal": "doc",
    "tensorflow.debugging.assert_rank_at_least": "doc",
    "tensorflow.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.estimator.export.PredictOutput": "doc",
    "tensorflow.experimental.async_clear_error": "doc",
    "tensorflow.experimental.numpy.array_equal": "doc",
    "tensorflow.experimental.numpy.bitwise_and": "doc",
    "tensorflow.experimental.numpy.bitwise_not": "doc",
    "tensorflow.experimental.numpy.bitwise_xor": "doc",
    "tensorflow.experimental.numpy.expand_dims": "doc",
    "tensorflow.experimental.numpy.float_power": "doc",
    "tensorflow.experimental.numpy.logical_and": "doc",
    "tensorflow.experimental.numpy.logical_not": "doc",
    "tensorflow.experimental.numpy.logical_xor": "doc",
    "tensorflow.experimental.numpy.random.rand": "doc",
    "tensorflow.experimental.numpy.random.seed": "doc",
    "tensorflow.experimental.numpy.result_type": "doc",
    "tensorflow.experimental.numpy.true_divide": "doc",
    "tensorflow.keras.activations.hard_sigmoid": "doc",
    "tensorflow.keras.applications.DenseNet121": "doc",
    "tensorflow.keras.applications.DenseNet169": "doc",
    "tensorflow.keras.applications.DenseNet201": "doc",
    "tensorflow.keras.applications.InceptionV3": "doc",
    "tensorflow.keras.applications.MobileNetV2": "doc",
    "tensorflow.keras.applications.NASNetLarge": "doc",
    "tensorflow.keras.applications.ResNet101V2": "doc",
    "tensorflow.keras.applications.ResNet152V2": "doc",
    "tensorflow.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.keras.datasets.mnist.load_data": "doc",
    "tensorflow.keras.experimental.CosineDecay": "doc",
    "tensorflow.keras.experimental.LinearModel": "doc",
    "tensorflow.keras.initializers.Initializer": "doc",
    "tensorflow.keras.initializers.deserialize": "doc",
    "tensorflow.keras.layers.AdditiveAttention": "doc",
    "tensorflow.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.keras.losses.categorical_hinge": "doc",
    "tensorflow.keras.models.model_from_config": "doc",
    "tensorflow.keras.regularizers.Regularizer": "doc",
    "tensorflow.keras.regularizers.deserialize": "doc",
    "tensorflow.keras.utils.get_custom_objects": "doc",
    "tensorflow.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.linalg.LinearOperatorInversion": "doc",
    "tensorflow.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.linalg.banded_triangular_solve": "doc",
    "tensorflow.optimizers.schedules.serialize": "doc",
    "tensorflow.raw_ops.AnonymousSeedGenerator": "doc",
    "tensorflow.raw_ops.BatchMatrixDeterminant": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToDense": "doc",
    "tensorflow.raw_ops.ConditionalAccumulator": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilterV2": "doc",
    "tensorflow.raw_ops.CropAndResizeGradBoxes": "doc",
    "tensorflow.raw_ops.CropAndResizeGradImage": "doc",
    "tensorflow.raw_ops.DatasetToSingleElement": "doc",
    "tensorflow.raw_ops.DenseCountSparseOutput": "doc",
    "tensorflow.raw_ops.DenseToCSRSparseMatrix": "doc",
    "tensorflow.raw_ops.ExperimentalCSVDataset": "doc",
    "tensorflow.raw_ops.ExperimentalMapDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSqlDataset": "doc",
    "tensorflow.raw_ops.GenerateVocabRemapping": "doc",
    "tensorflow.raw_ops.IteratorToStringHandle": "doc",
    "tensorflow.raw_ops.OrderedMapUnstageNoKey": "doc",
    "tensorflow.raw_ops.ParseSequenceExampleV2": "doc",
    "tensorflow.raw_ops.PlaceholderWithDefault": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRelu": "doc",
    "tensorflow.raw_ops.ReaderSerializeStateV2": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradV2": "doc",
    "tensorflow.raw_ops.ResourceApplyPowerSign": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNGrad": "doc",
    "tensorflow.raw_ops.StatefulRandomBinomial": "doc",
    "tensorflow.raw_ops.StatefulStandardNormal": "doc",
    "tensorflow.raw_ops.StatefulUniformFullInt": "doc",
    "tensorflow.raw_ops.StatelessRandomGammaV2": "doc",
    "tensorflow.raw_ops.StatelessRandomPoisson": "doc",
    "tensorflow.raw_ops.StatelessRandomUniform": "doc",
    "tensorflow.raw_ops.StatsAggregatorSummary": "doc",
    "tensorflow.raw_ops.StringToHashBucketFast": "doc",
    "tensorflow.raw_ops.TensorListElementShape": "doc",
    "tensorflow.test.TestCase.failureException": "doc",
    "tensorflow.test.is_built_with_gpu_support": "doc",
    "tensorflow.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.data.experimental.RandomDataset": "doc",
    "tensorflow.data.experimental.get_structure": "doc",
    "tensorflow.data.experimental.ignore_errors": "doc",
    "tensorflow.data.experimental.latency_stats": "doc",
    "tensorflow.data.experimental.map_and_batch": "doc",
    "tensorflow.debugging.enable_check_numerics": "doc",
    "tensorflow.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.estimator.PoissonRegressionHead": "doc",
    "tensorflow.experimental.dlpack.from_dlpack": "doc",
    "tensorflow.experimental.numpy.broadcast_to": "doc",
    "tensorflow.experimental.numpy.diag_indices": "doc",
    "tensorflow.experimental.numpy.floor_divide": "doc",
    "tensorflow.experimental.numpy.random.randn": "doc",
    "tensorflow.feature_column.embedding_column": "doc",
    "tensorflow.feature_column.indicator_column": "doc",
    "tensorflow.image.per_image_standardization": "doc",
    "tensorflow.image.stateless_random_contrast": "doc",
    "tensorflow.keras.applications.NASNetMobile": "doc",
    "tensorflow.keras.applications.inception_v3": "doc",
    "tensorflow.keras.backend.image_data_format": "doc",
    "tensorflow.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.keras.initializers.RandomNormal": "doc",
    "tensorflow.keras.layers.BatchNormalization": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.keras.layers.LayerNormalization": "doc",
    "tensorflow.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.keras.losses.mean_squared_error": "doc",
    "tensorflow.keras.utils.custom_object_scope": "doc",
    "tensorflow.keras.utils.get_registered_name": "doc",
    "tensorflow.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.lite.experimental.load_delegate": "doc",
    "tensorflow.nn.local_response_normalization": "doc",
    "tensorflow.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.raw_ops.AccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.CreateSummaryFileWriter": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropInput": "doc",
    "tensorflow.raw_ops.ExperimentalLMDBDataset": "doc",
    "tensorflow.raw_ops.ExperimentalScanDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgs": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVars": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReader": "doc",
    "tensorflow.raw_ops.FusedResizeAndPadConv2D": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorInit": "doc",
    "tensorflow.raw_ops.MutableDenseHashTableV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV3": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBias": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBias": "doc",
    "tensorflow.raw_ops.QuantizedResizeBilinear": "doc",
    "tensorflow.raw_ops.RaggedCountSparseOutput": "doc",
    "tensorflow.raw_ops.RaggedTensorFromVariant": "doc",
    "tensorflow.raw_ops.ResourceScatterNdUpdate": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrl": "doc",
    "tensorflow.raw_ops.ScatterNdNonAliasingAdd": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDataset": "doc",
    "tensorflow.raw_ops.SparseCountSparseOutput": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRowsGrad": "doc",
    "tensorflow.raw_ops.SparseMatrixOrderingAMD": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmaxGrad": "doc",
    "tensorflow.raw_ops.SparseTensorDenseMatMul": "doc",
    "tensorflow.raw_ops.StatefulPartitionedCall": "doc",
    "tensorflow.raw_ops.StatefulTruncatedNormal": "doc",
    "tensorflow.raw_ops.StatelessRandomBinomial": "doc",
    "tensorflow.raw_ops.StatelessRandomNormalV2": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandleV2": "doc",
    "tensorflow.raw_ops.TPUEmbeddingActivations": "doc",
    "tensorflow.raw_ops.TensorListPushBackBatch": "doc",
    "tensorflow.raw_ops.UniformCandidateSampler": "doc",
    "tensorflow.summary.should_record_summaries": "doc",
    "tensorflow.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.debugging.assert_proper_iterable": "doc",
    "tensorflow.debugging.disable_check_numerics": "doc",
    "tensorflow.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.estimator.LogisticRegressionHead": "doc",
    "tensorflow.experimental.numpy.greater_equal": "doc",
    "tensorflow.experimental.numpy.promote_types": "doc",
    "tensorflow.experimental.numpy.random.random": "doc",
    "tensorflow.feature_column.bucketized_column": "doc",
    "tensorflow.feature_column.shared_embeddings": "doc",
    "tensorflow.image.non_max_suppression_padded": "doc",
    "tensorflow.io.parse_single_sequence_example": "doc",
    "tensorflow.keras.datasets.reuters.load_data": "doc",
    "tensorflow.keras.experimental.WideDeepModel": "doc",
    "tensorflow.keras.initializers.RandomUniform": "doc",
    "tensorflow.keras.losses.mean_absolute_error": "doc",
    "tensorflow.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.linalg.LinearOperatorComposition": "doc",
    "tensorflow.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.nondifferentiable_batch_function": "doc",
    "tensorflow.optimizers.schedules.deserialize": "doc",
    "tensorflow.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.random.uniform_candidate_sampler": "doc",
    "tensorflow.raw_ops.AccumulatorApplyGradient": "doc",
    "tensorflow.raw_ops.AccumulatorSetGlobalStep": "doc",
    "tensorflow.raw_ops.AssertCardinalityDataset": "doc",
    "tensorflow.raw_ops.DebugGradientRefIdentity": "doc",
    "tensorflow.raw_ops.DestroyTemporaryVariable": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropFilter": "doc",
    "tensorflow.raw_ops.ExperimentalSleepDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDataset": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandle": "doc",
    "tensorflow.raw_ops.OrderedMapIncompleteSize": "doc",
    "tensorflow.raw_ops.PrivateThreadPoolDataset": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2D": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProduced": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseMatMul": "doc",
    "tensorflow.raw_ops.SparseTensorSliceDataset": "doc",
    "tensorflow.raw_ops.StatefulStandardNormalV2": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformV2": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormal": "doc",
    "tensorflow.raw_ops.StringToHashBucketStrong": "doc",
    "tensorflow.raw_ops.TensorArrayGradWithShape": "doc",
    "tensorflow.raw_ops.TensorStridedSliceUpdate": "doc",
    "tensorflow.raw_ops.UnicodeDecodeWithOffsets": "doc",
    "tensorflow.required_space_to_batch_paddings": "doc",
    "tensorflow.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.data.experimental.StatsAggregator": "doc",
    "tensorflow.data.experimental.group_by_window": "doc",
    "tensorflow.debugging.assert_same_float_dtype": "doc",
    "tensorflow.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.estimator.export.RegressionOutput": "doc",
    "tensorflow.experimental.numpy.random.randint": "doc",
    "tensorflow.experimental.numpy.random.uniform": "doc",
    "tensorflow.image.stateless_random_brightness": "doc",
    "tensorflow.image.stateless_random_saturation": "doc",
    "tensorflow.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.keras.initializers.random_uniform": "doc",
    "tensorflow.keras.utils.get_registered_object": "doc",
    "tensorflow.random.stateless_truncated_normal": "doc",
    "tensorflow.raw_ops.AccumulatorNumAccumulated": "doc",
    "tensorflow.raw_ops.AddManySparseToTensorsMap": "doc",
    "tensorflow.raw_ops.BytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixComponents": "doc",
    "tensorflow.raw_ops.CombinedNonMaxSuppression": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParams": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonical": "doc",
    "tensorflow.raw_ops.DeleteMultiDeviceIterator": "doc",
    "tensorflow.raw_ops.DeleteRandomSeedGenerator": "doc",
    "tensorflow.raw_ops.DenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.DenseToSparseSetOperation": "doc",
    "tensorflow.raw_ops.DirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.EncodeJpegVariableQuality": "doc",
    "tensorflow.raw_ops.ExperimentalRandomDataset": "doc",
    "tensorflow.raw_ops.ExperimentalUniqueDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReaderV2": "doc",
    "tensorflow.raw_ops.IteratorGetNextAsOptional": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradWithArgmax": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensors": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DPerChannel": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighborGrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SendTPUEmbeddingGradients": "doc",
    "tensorflow.raw_ops.SetStatsAggregatorDataset": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDatasetV2": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformInt": "doc",
    "tensorflow.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.data.experimental.ThreadingOptions": "doc",
    "tensorflow.data.experimental.group_by_reducer": "doc",
    "tensorflow.data.experimental.make_csv_dataset": "doc",
    "tensorflow.debugging.get_log_device_placement": "doc",
    "tensorflow.debugging.set_log_device_placement": "doc",
    "tensorflow.experimental.numpy.take_along_axis": "doc",
    "tensorflow.image.combined_non_max_suppression": "doc",
    "tensorflow.image.non_max_suppression_overlaps": "doc",
    "tensorflow.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.keras.estimator.model_to_estimator": "doc",
    "tensorflow.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.keras.initializers.VarianceScaling": "doc",
    "tensorflow.keras.mixed_precision.experimental": "doc",
    "tensorflow.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.keras.preprocessing.image.save_img": "doc",
    "tensorflow.keras.utils.pack_x_y_sample_weight": "doc",
    "tensorflow.keras.utils.serialize_keras_object": "doc",
    "tensorflow.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.losses.kullback_leibler_divergence": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.profiler.experimental.client.trace": "doc",
    "tensorflow.profiler.experimental.server.start": "doc",
    "tensorflow.raw_ops.BatchMatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.BoostedTreesAggregateStats": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateEnsemble": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsemble": "doc",
    "tensorflow.raw_ops.ChooseFastestBranchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalRebatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalUnbatchDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDatasetV2": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV2": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV3": "doc",
    "tensorflow.raw_ops.InitializeTableFromDataset": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandleV2": "doc",
    "tensorflow.raw_ops.LogUniformCandidateSampler": "doc",
    "tensorflow.raw_ops.ParseSingleSequenceExample": "doc",
    "tensorflow.raw_ops.QuantizeDownAndShrinkRange": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProducedV2": "doc",
    "tensorflow.raw_ops.ResourceApplyKerasMomentum": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.ResourceStridedSliceAssign": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBox": "doc",
    "tensorflow.raw_ops.SparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.SparseApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseCholesky": "doc",
    "tensorflow.raw_ops.SparseToSparseSetOperation": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormalV2": "doc",
    "tensorflow.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.strings.unicode_split_with_offsets": "doc",
    "tensorflow.summary.experimental.summary_scope": "doc",
    "tensorflow.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.data.experimental.enumerate_dataset": "doc",
    "tensorflow.estimator.experimental.RNNEstimator": "doc",
    "tensorflow.experimental.numpy.broadcast_arrays": "doc",
    "tensorflow.image.sample_distorted_bounding_box": "doc",
    "tensorflow.image.stateless_random_flip_up_down": "doc",
    "tensorflow.image.stateless_random_jpeg_quality": "doc",
    "tensorflow.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.keras.backend.set_image_data_format": "doc",
    "tensorflow.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.keras.initializers.truncated_normal": "doc",
    "tensorflow.keras.initializers.variance_scaling": "doc",
    "tensorflow.keras.layers.ActivityRegularization": "doc",
    "tensorflow.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.keras.mixed_precision.global_policy": "doc",
    "tensorflow.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.random.experimental.stateless_split": "doc",
    "tensorflow.raw_ops.BoostedTreesTrainingPredict": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParamsV2": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonicalV2": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFile": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensorsV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV3": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV4": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4Grad": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompleted": "doc",
    "tensorflow.raw_ops.RecvTPUEmbeddingActivations": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdadelta": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyMomentum": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformIntV2": "doc",
    "tensorflow.register_tensor_conversion_function": "doc",
    "tensorflow.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.data.experimental.assert_cardinality": "doc",
    "tensorflow.data.experimental.get_single_element": "doc",
    "tensorflow.data.experimental.prefetch_to_device": "doc",
    "tensorflow.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.estimator.experimental.RNNClassifier": "doc",
    "tensorflow.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.keras.utils.unpack_x_y_sample_weight": "doc",
    "tensorflow.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.random.experimental.create_rng_state": "doc",
    "tensorflow.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.raw_ops.AnonymousMultiDeviceIterator": "doc",
    "tensorflow.raw_ops.AnonymousRandomSeedGenerator": "doc",
    "tensorflow.raw_ops.ApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeStatsSummary": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsembleV2": "doc",
    "tensorflow.raw_ops.ExperimentalAutoShardDataset": "doc",
    "tensorflow.raw_ops.ExperimentalTakeWhileDataset": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolHandle": "doc",
    "tensorflow.raw_ops.FilterByLastComponentDataset": "doc",
    "tensorflow.raw_ops.FixedUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.GenerateBoundingBoxProposals": "doc",
    "tensorflow.raw_ops.MaxIntraOpParallelismDataset": "doc",
    "tensorflow.raw_ops.ParameterizedTruncatedNormal": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRequantize": "doc",
    "tensorflow.raw_ops.ResourceApplyAdamWithAmsgrad": "doc",
    "tensorflow.raw_ops.ResourceApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ResourceApplyGradientDescent": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBoxV2": "doc",
    "tensorflow.raw_ops.SparseConditionalAccumulator": "doc",
    "tensorflow.raw_ops.TakeManySparseFromTensorsMap": "doc",
    "tensorflow.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.data.experimental.OptimizationOptions": "doc",
    "tensorflow.data.experimental.parallel_interleave": "doc",
    "tensorflow.errors.OperatorNotAllowedInGraphError": "doc",
    "tensorflow.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.estimator.export.ClassificationOutput": "doc",
    "tensorflow.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.image.generate_bounding_box_proposals": "doc",
    "tensorflow.image.non_max_suppression_with_scores": "doc",
    "tensorflow.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.profiler.experimental.ProfilerOptions": "doc",
    "tensorflow.random.experimental.stateless_fold_in": "doc",
    "tensorflow.raw_ops.BoostedTreesGetEnsembleStates": "doc",
    "tensorflow.raw_ops.BoostedTreesSerializeEnsemble": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToSparseTensor": "doc",
    "tensorflow.raw_ops.ExperimentalAssertNextDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetToTFRecord": "doc",
    "tensorflow.raw_ops.ExperimentalIteratorGetDevice": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolDataset": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFileV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionWithOverlaps": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariantGradient": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompletedV2": "doc",
    "tensorflow.raw_ops.RequantizationRangePerChannel": "doc",
    "tensorflow.raw_ops.SoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.SparseAccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.SparseTensorToCSRSparseMatrix": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullInt": "doc",
    "tensorflow.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.data.experimental.choose_from_datasets": "doc",
    "tensorflow.data.experimental.get_next_as_optional": "doc",
    "tensorflow.data.experimental.sample_from_datasets": "doc",
    "tensorflow.data.experimental.service.WorkerServer": "doc",
    "tensorflow.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.feature_column.make_parse_example_spec": "doc",
    "tensorflow.feature_column.sequence_numeric_column": "doc",
    "tensorflow.image.stateless_random_flip_left_right": "doc",
    "tensorflow.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseBatch": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetCardinality": "doc",
    "tensorflow.raw_ops.ExperimentalMapAndBatchDataset": "doc",
    "tensorflow.raw_ops.LearnedUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRelu": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRelu": "doc",
    "tensorflow.raw_ops.ResourceConditionalAccumulator": "doc",
    "tensorflow.raw_ops.SparseAccumulatorApplyGradient": "doc",
    "tensorflow.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.autograph.experimental.set_loop_options": "doc",
    "tensorflow.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.data.experimental.parse_example_dataset": "doc",
    "tensorflow.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.experimental.register_filesystem_plugin": "doc",
    "tensorflow.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.keras.mixed_precision.set_global_policy": "doc",
    "tensorflow.keras.utils.register_keras_serializable": "doc",
    "tensorflow.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.raw_ops.BoostedTreesDeserializeEnsemble": "doc",
    "tensorflow.raw_ops.BoostedTreesExampleDebugOutputs": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingIntegerBatch": "doc",
    "tensorflow.raw_ops.ExperimentalIgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalLatencyStatsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalParseExampleDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgsGradient": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsGradient": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.SparseSegmentSumWithNumSegments": "doc",
    "tensorflow.raw_ops.StatelessRandomGetKeyCounterAlg": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullIntV2": "doc",
    "tensorflow.raw_ops.StatsAggregatorSetSummaryWriter": "doc",
    "tensorflow.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.data.experimental.service.DispatchServer": "doc",
    "tensorflow.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.random.experimental.get_global_generator": "doc",
    "tensorflow.random.experimental.set_global_generator": "doc",
    "tensorflow.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalization": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseAggregateStats": "doc",
    "tensorflow.raw_ops.ExperimentalChooseFastestDataset": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByWindowDataset": "doc",
    "tensorflow.raw_ops.ExperimentalMatchingFilesDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSlidingWindowDataset": "doc",
    "tensorflow.raw_ops.InfeedEnqueuePrelinearizedBuffer": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBias": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorApplyGradient": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorSetGlobalStep": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyKerasMomentum": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanWithNumSegments": "doc",
    "tensorflow.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.keras.mixed_precision.experimental.Policy": "doc",
    "tensorflow.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeQuantileSummaries": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByReducerDataset": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorHandle": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannel": "doc",
    "tensorflow.raw_ops.IsBoostedTreesEnsembleInitialized": "doc",
    "tensorflow.raw_ops.LegacyParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorToStringHandle": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndRelu": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorNumAccumulated": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNWithNumSegments": "doc",
    "tensorflow.raw_ops.TensorListScatterIntoExistingList": "doc",
    "tensorflow.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.data.experimental.service.register_dataset": "doc",
    "tensorflow.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.feature_column.weighted_categorical_column": "doc",
    "tensorflow.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.raw_ops.BoostedTreesFlushQuantileSummaries": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropInput": "doc",
    "tensorflow.raw_ops.ExperimentalNonSerializableDataset": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorSummary": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.raw_ops.SparseApplyProximalGradientDescent": "doc",
    "tensorflow.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropFilter": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorFromStringHandle": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorGetNextFromShard": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.SparseSoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.StatelessSampleDistortedBoundingBox": "doc",
    "tensorflow.raw_ops.ThreadUnsafeUnigramCandidateSampler": "doc",
    "tensorflow.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalizationGrad": "doc",
    "tensorflow.raw_ops.BoostedTreesEnsembleResourceHandleOp": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingRaggedTensorBatch": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseTensorBatch": "doc",
    "tensorflow.raw_ops.ExperimentalPrivateThreadPoolDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndDequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRequantize": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalGradientDescent": "doc",
    "tensorflow.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.image.stateless_sample_distorted_bounding_box": "doc",
    "tensorflow.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.keras.callbacks.experimental.BackupAndRestore": "doc",
    "tensorflow.keras.mixed_precision.experimental.set_policy": "doc",
    "tensorflow.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.ExperimentalBytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.ExperimentalParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSetStatsAggregatorDataset": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.raw_ops.StatelessParameterizedTruncatedNormal": "doc",
    "tensorflow.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.keras.preprocessing.text_dataset_from_directory": "doc",
    "tensorflow.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplitV2": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceFlush": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndRelu": "doc",
    "tensorflow.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.keras.layers.experimental.SyncBatchNormalization": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.keras.mixed_precision.experimental.global_policy": "doc",
    "tensorflow.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.keras.preprocessing.image_dataset_from_directory": "doc",
    "tensorflow.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestGainsPerFeature": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateQuantileStreamResource": "doc",
    "tensorflow.raw_ops.ExperimentalMaxIntraOpParallelismDataset": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.keras.preprocessing.timeseries_dataset_from_array": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannelGradient": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.raw_ops.QuantizedBatchNormWithGlobalNormalization": "doc",
    "tensorflow.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceHandleOp": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.keras.mixed_precision.experimental.get_layer_policy": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndReluAndRequantize": "doc",
    "tensorflow.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceDeserialize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceAddSummaries": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.IsBoostedTreesQuantileStreamResourceInitialized": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSignedSumAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceGetBucketBoundaries": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc"
  },
  "tensorflow.train.AdamOptimizer": {
    "tensorflow.compat.v1.train.AdamOptimizer": "doc",
    "tensorflow.compat.v1.train.AdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.sdca_optimizer": "doc",
    "tensorflow.compat.v1.train.AdadeltaOptimizer": "doc",
    "tensorflow.compat.v1.train.FtrlOptimizer": "doc",
    "tensorflow.compat.v1.train.Optimizer": "doc",
    "tensorflow.compat.v1.train.AdagradDAOptimizer": "doc",
    "tensorflow.compat.v1.train.MomentumOptimizer": "doc",
    "tensorflow.compat.v1.train.RMSPropOptimizer": "doc",
    "tensorflow.compat.v1.train.ProximalAdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.SyncReplicasOptimizer": "doc",
    "tensorflow.compat.v1.train.GradientDescentOptimizer": "doc",
    "tensorflow.compat.v1.train.experimental.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.compat.v1.train.ProximalGradientDescentOptimizer": "doc",
    "tensorflow.train.Example": "doc",
    "tensorflow.compat.v1.train.Example": "doc",
    "tensorflow.compat.v1.train.SecondOrStepTimer": "doc",
    "tensorflow.train.checkpoints_iterator": "doc",
    "tensorflow.compat.v1.train.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.train.checkpoints_iterator": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_mtimes": "doc",
    "tensorflow.train.CheckpointManager": "doc",
    "tensorflow.compat.v1.train.CheckpointManager": "doc",
    "tensorflow.train.Feature": "doc",
    "tensorflow.train.Features": "doc",
    "tensorflow.compat.v1.train.Saver": "doc",
    "tensorflow.compat.v1.train.Feature": "doc",
    "tensorflow.compat.v1.train.Features": "doc",
    "tensorflow.compat.v1.train.Supervisor": "doc",
    "tensorflow.train.Features.FeatureEntry": "doc",
    "tensorflow.compat.v1.train.sdca_fprint": "doc",
    "tensorflow.compat.v1.train.Features.FeatureEntry": "doc",
    "tensorflow.compat.v1.train.inverse_time_decay": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.train.input_producer": "doc",
    "tensorflow.compat.v1.train.sdca_shrink_l1": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.train.NewCheckpointReader": "doc",
    "tensorflow.train.ExponentialMovingAverage": "doc",
    "tensorflow.compat.v1.train.ExponentialMovingAverage": "doc",
    "tensorflow.compat.v1.train.range_input_producer": "doc",
    "tensorflow.compat.v1.train.slice_input_producer": "doc",
    "tensorflow.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.train.replica_device_setter": "doc",
    "tensorflow.compat.v1.train.string_input_producer": "doc",
    "tensorflow.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.train.add_queue_runner": "doc",
    "tensorflow.compat.v1.train.summary_iterator": "doc",
    "tensorflow.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.compat.v1.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.compat.v1.train.queue_runner.add_queue_runner": "doc",
    "tensorflow.train.CheckpointOptions": "doc",
    "tensorflow.compat.v1.train.CheckpointOptions": "doc",
    "tensorflow.compat.v1.train.checkpoint_exists": "doc",
    "tensorflow.compat.v1.train.exponential_decay": "doc",
    "tensorflow.compat.v1.train.update_checkpoint_state": "doc",
    "tensorflow.compat.v1.train.generate_checkpoint_state_proto": "doc",
    "tensorflow.compat.v1.train.ChiefSessionCreator": "doc",
    "tensorflow.compat.v1.train.linear_cosine_decay": "doc",
    "tensorflow.compat.v1.train.start_queue_runners": "doc",
    "tensorflow.compat.v1.train.queue_runner.start_queue_runners": "doc",
    "tensorflow.compat.v1.train.do_quantize_training_on_graphdef": "doc",
    "tensorflow.train": "doc",
    "tensorflow.train.JobDef": "doc",
    "tensorflow.train.BytesList": "doc",
    "tensorflow.train.FloatList": "doc",
    "tensorflow.train.Int64List": "doc",
    "tensorflow.train.ServerDef": "doc",
    "tensorflow.compat.v1.train": "doc",
    "tensorflow.train.Checkpoint": "doc",
    "tensorflow.train.ClusterDef": "doc",
    "tensorflow.train.ClusterSpec": "doc",
    "tensorflow.train.Coordinator": "doc",
    "tensorflow.train.FeatureList": "doc",
    "tensorflow.train.FeatureLists": "doc",
    "tensorflow.train.experimental": "doc",
    "tensorflow.train.load_variable": "doc",
    "tensorflow.train.list_variables": "doc",
    "tensorflow.train.SequenceExample": "doc",
    "tensorflow.train.load_checkpoint": "doc",
    "tensorflow.compat.v1.train.batch": "doc",
    "tensorflow.compat.v1.train.JobDef": "doc",
    "tensorflow.compat.v1.train.Server": "doc",
    "tensorflow.train.JobDef.TasksEntry": "doc",
    "tensorflow.train.latest_checkpoint": "doc",
    "tensorflow.compat.v1.train.SaverDef": "doc",
    "tensorflow.compat.v1.train.Scaffold": "doc",
    "tensorflow.compat.v1.train.BytesList": "doc",
    "tensorflow.compat.v1.train.FloatList": "doc",
    "tensorflow.compat.v1.train.Int64List": "doc",
    "tensorflow.compat.v1.train.ServerDef": "doc",
    "tensorflow.compat.v1.train.VocabInfo": "doc",
    "tensorflow.train.get_checkpoint_state": "doc",
    "tensorflow.compat.v1.train.Checkpoint": "doc",
    "tensorflow.compat.v1.train.ClusterDef": "doc",
    "tensorflow.compat.v1.train.FeedFnHook": "doc",
    "tensorflow.compat.v1.train.batch_join": "doc",
    "tensorflow.compat.v1.train.warm_start": "doc",
    "tensorflow.compat.v1.train.ClusterSpec": "doc",
    "tensorflow.compat.v1.train.Coordinator": "doc",
    "tensorflow.compat.v1.train.FeatureList": "doc",
    "tensorflow.compat.v1.train.QueueRunner": "doc",
    "tensorflow.compat.v1.train.global_step": "doc",
    "tensorflow.compat.v1.train.maybe_batch": "doc",
    "tensorflow.compat.v1.train.write_graph": "doc",
    "tensorflow.train.experimental.LossScale": "doc",
    "tensorflow.compat.v1.train.FeatureLists": "doc",
    "tensorflow.compat.v1.train.FinalOpsHook": "doc",
    "tensorflow.compat.v1.train.LooperThread": "doc",
    "tensorflow.compat.v1.train.ProfilerHook": "doc",
    "tensorflow.compat.v1.train.cosine_decay": "doc",
    "tensorflow.compat.v1.train.experimental": "doc",
    "tensorflow.compat.v1.train.limit_epochs": "doc",
    "tensorflow.compat.v1.train.queue_runner": "doc",
    "tensorflow.compat.v1.train.NanTensorHook": "doc",
    "tensorflow.compat.v1.train.load_variable": "doc",
    "tensorflow.compat.v1.train.shuffle_batch": "doc",
    "tensorflow.train.experimental.PythonState": "doc",
    "tensorflow.compat.v1.train.SessionCreator": "doc",
    "tensorflow.compat.v1.train.SessionManager": "doc",
    "tensorflow.compat.v1.train.SessionRunArgs": "doc",
    "tensorflow.compat.v1.train.SessionRunHook": "doc",
    "tensorflow.compat.v1.train.StopAtStepHook": "doc",
    "tensorflow.compat.v1.train.list_variables": "doc",
    "tensorflow.compat.v1.train.SequenceExample": "doc",
    "tensorflow.compat.v1.train.StepCounterHook": "doc",
    "tensorflow.compat.v1.train.get_global_step": "doc",
    "tensorflow.compat.v1.train.load_checkpoint": "doc",
    "tensorflow.compat.v1.train.MonitoredSession": "doc",
    "tensorflow.compat.v1.train.SessionRunValues": "doc",
    "tensorflow.compat.v1.train.SummarySaverHook": "doc",
    "tensorflow.compat.v1.train.basic_train_loop": "doc",
    "tensorflow.compat.v1.train.maybe_batch_join": "doc",
    "tensorflow.compat.v1.train.polynomial_decay": "doc",
    "tensorflow.train.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.train.JobDef.TasksEntry": "doc",
    "tensorflow.compat.v1.train.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.train.SessionRunContext": "doc",
    "tensorflow.compat.v1.train.export_meta_graph": "doc",
    "tensorflow.compat.v1.train.import_meta_graph": "doc",
    "tensorflow.compat.v1.train.latest_checkpoint": "doc",
    "tensorflow.compat.v1.train.natural_exp_decay": "doc",
    "tensorflow.compat.v1.train.remove_checkpoint": "doc",
    "tensorflow.compat.v1.train.assert_global_step": "doc",
    "tensorflow.compat.v1.train.create_global_step": "doc",
    "tensorflow.compat.v1.train.piecewise_constant": "doc",
    "tensorflow.compat.v1.train.shuffle_batch_join": "doc",
    "tensorflow.train.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch": "doc",
    "tensorflow.compat.v1.train.WorkerSessionCreator": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_state": "doc",
    "tensorflow.compat.v1.train.init_from_checkpoint": "doc",
    "tensorflow.compat.v1.train.match_filenames_once": "doc",
    "tensorflow.compat.v1.train.cosine_decay_restarts": "doc",
    "tensorflow.compat.v1.train.experimental.LossScale": "doc",
    "tensorflow.compat.v1.train.MonitoredTrainingSession": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession": "doc",
    "tensorflow.compat.v1.train.experimental.PythonState": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch_join": "doc",
    "tensorflow.compat.v1.train.piecewise_constant_decay": "doc",
    "tensorflow.compat.v1.train.queue_runner.QueueRunner": "doc",
    "tensorflow.compat.v1.train.get_or_create_global_step": "doc",
    "tensorflow.compat.v1.train.noisy_linear_cosine_decay": "doc",
    "tensorflow.compat.v1.train.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.train.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.train.MonitoredSession.StepContext": "doc",
    "tensorflow.compat.v1.train.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession.StepContext": "doc",
    "tensorflow.raw_ops.SdcaOptimizer": "doc",
    "tensorflow.optimizers.Optimizer": "doc",
    "tensorflow.keras.optimizers.Optimizer": "doc",
    "tensorflow.compat.v1.keras.optimizers.Optimizer": "doc",
    "tensorflow.profiler.experimental.client.trace": "doc",
    "tensorflow.config.optimizer.get_jit": "doc",
    "tensorflow.config.optimizer.set_jit": "doc",
    "tensorflow.compat.v1.config.optimizer.get_jit": "doc",
    "tensorflow.compat.v1.config.optimizer.set_jit": "doc",
    "tensorflow.optimizers.serialize": "doc",
    "tensorflow.keras.optimizers.serialize": "doc",
    "tensorflow.optimizers.schedules.serialize": "doc",
    "tensorflow.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.serialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.raw_ops.SdcaOptimizerV2": "doc",
    "tensorflow.lite.Optimize": "doc",
    "tensorflow.compat.v1.lite.Optimize": "doc",
    "tensorflow.config.optimizer": "doc",
    "tensorflow.compat.v1.config.optimizer": "doc",
    "tensorflow.config.optimizer.get_experimental_options": "doc",
    "tensorflow.config.optimizer.set_experimental_options": "doc",
    "tensorflow.compat.v1.config.optimizer.get_experimental_options": "doc",
    "tensorflow.compat.v1.config.optimizer.set_experimental_options": "doc",
    "tensorflow.sparse.retain": "doc",
    "tensorflow.compat.v1.sparse.retain": "doc",
    "tensorflow.optimizers.deserialize": "doc",
    "tensorflow.keras.optimizers.deserialize": "doc",
    "tensorflow.optimizers.schedules.deserialize": "doc",
    "tensorflow.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.deserialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.keras.constraints.deserialize": "doc",
    "tensorflow.compat.v1.keras.constraints.deserialize": "doc",
    "tensorflow.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.math.tan": "doc",
    "tensorflow.test.main": "doc",
    "tensorflow.linalg.trace": "doc",
    "tensorflow.compat.v1.tan": "doc",
    "tensorflow.autograph.trace": "doc",
    "tensorflow.compat.v1.trace": "doc",
    "tensorflow.compat.v1.math.tan": "doc",
    "tensorflow.compat.v1.test.main": "doc",
    "tensorflow.experimental.numpy.tan": "doc",
    "tensorflow.experimental.numpy.tri": "doc",
    "tensorflow.compat.v1.linalg.trace": "doc",
    "tensorflow.experimental.numpy.tril": "doc",
    "tensorflow.experimental.numpy.triu": "doc",
    "tensorflow.experimental.numpy.trace": "doc",
    "tensorflow.compat.v1.autograph.trace": "doc",
    "tensorflow.estimator.TrainSpec": "doc",
    "tensorflow.compat.v1.estimator.TrainSpec": "doc",
    "tensorflow.optimizers": "doc",
    "tensorflow.optimizers.SGD": "doc",
    "tensorflow.optimizers.get": "doc",
    "tensorflow.optimizers.Adam": "doc",
    "tensorflow.optimizers.Ftrl": "doc",
    "tensorflow.keras.optimizers": "doc",
    "tensorflow.optimizers.Nadam": "doc",
    "tensorflow.optimizers.Adamax": "doc",
    "tensorflow.optimizers.Adagrad": "doc",
    "tensorflow.optimizers.RMSprop": "doc",
    "tensorflow.optimizers.Adadelta": "doc",
    "tensorflow.keras.optimizers.SGD": "doc",
    "tensorflow.keras.optimizers.get": "doc",
    "tensorflow.optimizers.schedules": "doc",
    "tensorflow.keras.optimizers.Adam": "doc",
    "tensorflow.keras.optimizers.Ftrl": "doc",
    "tensorflow.keras.optimizers.Nadam": "doc",
    "tensorflow.keras.optimizers.Adamax": "doc",
    "tensorflow.keras.optimizers.Adagrad": "doc",
    "tensorflow.keras.optimizers.RMSprop": "doc",
    "tensorflow.keras.optimizers.Adadelta": "doc",
    "tensorflow.keras.optimizers.schedules": "doc",
    "tensorflow.compat.v1.keras.optimizers": "doc",
    "tensorflow.compat.v1.keras.optimizers.SGD": "doc",
    "tensorflow.compat.v1.keras.optimizers.get": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adam": "doc",
    "tensorflow.compat.v1.keras.optimizers.Ftrl": "doc",
    "tensorflow.compat.v1.keras.optimizers.Nadam": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adamax": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adagrad": "doc",
    "tensorflow.compat.v1.keras.optimizers.RMSprop": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adadelta": "doc",
    "tensorflow.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules": "doc",
    "tensorflow.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.argmin": "doc",
    "tensorflow.math.argmin": "doc",
    "tensorflow.compat.v1.argmin": "doc",
    "tensorflow.compat.v1.math.argmin": "doc",
    "tensorflow.experimental.numpy.argmin": "doc",
    "tensorflow.compat.v1.tpu.CrossShardOptimizer": "doc",
    "tensorflow.quantization.quantize": "doc",
    "tensorflow.compat.v1.quantization.quantize": "doc",
    "tensorflow.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading": "doc",
    "tensorflow.compat.v1.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.profiler.experimental.Trace": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdamParameters": "doc",
    "tensorflow.keras.constraints.serialize": "doc",
    "tensorflow.compat.v1.keras.constraints.serialize": "doc",
    "tensorflow.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.tan": "doc",
    "tensorflow.keras.activations.deserialize": "doc",
    "tensorflow.compat.v1.keras.activations.deserialize": "doc",
    "tensorflow.compat.v1.flags.ArgumentSerializer": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentSerializer": "doc",
    "tensorflow.strings.upper": "doc",
    "tensorflow.strings.as_string": "doc",
    "tensorflow.strings.to_number": "doc",
    "tensorflow.compat.v1.arg_min": "doc",
    "tensorflow.compat.v1.strings.upper": "doc",
    "tensorflow.compat.v1.strings.as_string": "doc",
    "tensorflow.compat.v1.strings.to_number": "doc",
    "tensorflow.saved_model.LoadOptions": "doc",
    "tensorflow.initializers.Initializer": "doc",
    "tensorflow.keras.initializers.Initializer": "doc",
    "tensorflow.compat.v1.keras.initializers.Initializer": "doc",
    "tensorflow.distribute.experimental.partitioners.Partitioner": "doc",
    "tensorflow.math.erfinv": "doc",
    "tensorflow.raw_ops.ArgMin": "doc",
    "tensorflow.summary.trace_on": "doc",
    "tensorflow.compat.v1.math.erfinv": "doc",
    "tensorflow.experimental.numpy.arcsin": "doc",
    "tensorflow.keras.constraints.Constraint": "doc",
    "tensorflow.compat.v1.keras.constraints.Constraint": "doc",
    "tensorflow.compat.v1.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.app.flags.ListSerializer": "doc",
    "tensorflow.keras.constraints.RadialConstraint": "doc",
    "tensorflow.compat.v1.keras.constraints.RadialConstraint": "doc",
    "tensorflow.linalg.normalize": "doc",
    "tensorflow.compat.v1.container": "doc",
    "tensorflow.keras.utils.normalize": "doc",
    "tensorflow.initializers.serialize": "doc",
    "tensorflow.compat.v1.GraphOptions": "doc",
    "tensorflow.quantization.dequantize": "doc",
    "tensorflow.compat.v1.linalg.normalize": "doc",
    "tensorflow.experimental.numpy.remainder": "doc",
    "tensorflow.keras.initializers.serialize": "doc",
    "tensorflow.compat.v1.keras.utils.normalize": "doc",
    "tensorflow.compat.v1.quantization.dequantize": "doc",
    "tensorflow.compat.v1.keras.initializers.serialize": "doc",
    "tensorflow.compat.v1.quantize": "doc",
    "tensorflow.config.threading": "doc",
    "tensorflow.keras.constraints.radial_constraint": "doc",
    "tensorflow.compat.v1.keras.constraints.radial_constraint": "doc",
    "tensorflow.metrics.Mean": "doc",
    "tensorflow.signal.frame": "doc",
    "tensorflow.keras.metrics.Mean": "doc",
    "tensorflow.data.experimental.scan": "doc",
    "tensorflow.compat.v1.metrics.mean": "doc",
    "tensorflow.compat.v1.signal.frame": "doc",
    "tensorflow.experimental.numpy.amin": "doc",
    "tensorflow.keras.layers.Activation": "doc",
    "tensorflow.data.experimental.to_variant": "doc",
    "tensorflow.compat.v1.keras.metrics.Mean": "doc",
    "tensorflow.compat.v1.data.experimental.scan": "doc",
    "tensorflow.compat.v1.keras.layers.Activation": "doc",
    "tensorflow.compat.v1.data.experimental.to_variant": "doc",
    "tensorflow.strings.unicode_split_with_offsets": "doc",
    "tensorflow.compat.v1.strings.unicode_split_with_offsets": "doc",
    "tensorflow.keras.constraints": "doc",
    "tensorflow.keras.constraints.get": "doc",
    "tensorflow.keras.constraints.NonNeg": "doc",
    "tensorflow.keras.constraints.MaxNorm": "doc",
    "tensorflow.keras.constraints.non_neg": "doc",
    "tensorflow.keras.constraints.UnitNorm": "doc",
    "tensorflow.keras.constraints.max_norm": "doc",
    "tensorflow.keras.constraints.unit_norm": "doc",
    "tensorflow.compat.v1.keras.constraints": "doc",
    "tensorflow.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.keras.constraints.min_max_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.get": "doc",
    "tensorflow.compat.v1.keras.constraints.NonNeg": "doc",
    "tensorflow.compat.v1.keras.constraints.MaxNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.non_neg": "doc",
    "tensorflow.compat.v1.keras.constraints.UnitNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.max_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.unit_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.min_max_norm": "doc",
    "tensorflow.compat.v1.summary.initialize": "doc",
    "tensorflow.data.Iterator": "doc",
    "tensorflow.raw_ops.AsString": "doc",
    "tensorflow.distribute.Strategy": "doc",
    "tensorflow.compat.v1.data.Iterator": "doc",
    "tensorflow.compat.v1.distribute.Strategy": "doc",
    "tensorflow.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.compat.v1.profiler.ProfileOptionBuilder": "doc",
    "tensorflow.Operation": "doc",
    "tensorflow.gradients": "doc",
    "tensorflow.compat.v1.Operation": "doc",
    "tensorflow.compat.v1.gradients": "doc",
    "tensorflow.compat.v1.scatter_min": "doc",
    "tensorflow.keras.activations.serialize": "doc",
    "tensorflow.compat.v1.keras.activations.serialize": "doc",
    "tensorflow.data.Options": "doc",
    "tensorflow.raw_ops.Barrier": "doc",
    "tensorflow.metrics.deserialize": "doc",
    "tensorflow.keras.layers.Wrapper": "doc",
    "tensorflow.compat.v1.data.Options": "doc",
    "tensorflow.keras.metrics.deserialize": "doc",
    "tensorflow.compat.v1.profiler.profile": "doc",
    "tensorflow.profiler.experimental.Profile": "doc",
    "tensorflow.compat.v1.keras.layers.Wrapper": "doc",
    "tensorflow.compat.v1.keras.metrics.deserialize": "doc",
    "tensorflow.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.compat.v1.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.compat.v1.flags.CsvListSerializer": "doc",
    "tensorflow.compat.v1.app.flags.CsvListSerializer": "doc",
    "tensorflow.estimator.train_and_evaluate": "doc",
    "tensorflow.compat.v1.estimator.train_and_evaluate": "doc",
    "tensorflow.raw_ops.MapSize": "doc",
    "tensorflow.compat.v1.initializers.tables_initializer": "doc",
    "tensorflow.strings": "doc",
    "tensorflow.math.betainc": "doc",
    "tensorflow.math.erfcinv": "doc",
    "tensorflow.math.truediv": "doc",
    "tensorflow.strings.join": "doc",
    "tensorflow.strings.lower": "doc",
    "tensorflow.strings.split": "doc",
    "tensorflow.strings.strip": "doc",
    "tensorflow.strings.format": "doc",
    "tensorflow.strings.length": "doc",
    "tensorflow.strings.ngrams": "doc",
    "tensorflow.strings.substr": "doc",
    "tensorflow.raw_ops.Betainc": "doc",
    "tensorflow.compat.v1.betainc": "doc",
    "tensorflow.compat.v1.strings": "doc",
    "tensorflow.compat.v1.truediv": "doc",
    "tensorflow.compat.v1.version": "doc",
    "tensorflow.strings.bytes_split": "doc",
    "tensorflow.strings.reduce_join": "doc",
    "tensorflow.strings.regex_replace": "doc",
    "tensorflow.strings.unicode_split": "doc",
    "tensorflow.strings.to_hash_bucket": "doc",
    "tensorflow.strings.unicode_decode": "doc",
    "tensorflow.strings.unicode_encode": "doc",
    "tensorflow.strings.unicode_script": "doc",
    "tensorflow.compat.v1.math.betainc": "doc",
    "tensorflow.compat.v1.math.erfcinv": "doc",
    "tensorflow.compat.v1.math.truediv": "doc",
    "tensorflow.compat.v1.strings.join": "doc",
    "tensorflow.compat.v1.strings.lower": "doc",
    "tensorflow.compat.v1.strings.split": "doc",
    "tensorflow.compat.v1.strings.strip": "doc",
    "tensorflow.strings.regex_full_match": "doc",
    "tensorflow.compat.v1.strings.format": "doc",
    "tensorflow.compat.v1.strings.length": "doc",
    "tensorflow.compat.v1.strings.ngrams": "doc",
    "tensorflow.compat.v1.strings.substr": "doc",
    "tensorflow.strings.unicode_transcode": "doc",
    "tensorflow.compat.v1.logging.warning": "doc",
    "tensorflow.experimental.numpy.arcsinh": "doc",
    "tensorflow.experimental.numpy.string_": "doc",
    "tensorflow.strings.to_hash_bucket_fast": "doc",
    "tensorflow.strings.to_hash_bucket_strong": "doc",
    "tensorflow.strings.unsorted_segment_join": "doc",
    "tensorflow.compat.v1.strings.bytes_split": "doc",
    "tensorflow.compat.v1.strings.reduce_join": "doc",
    "tensorflow.compat.v1.strings.regex_replace": "doc",
    "tensorflow.compat.v1.strings.unicode_split": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket": "doc",
    "tensorflow.compat.v1.strings.unicode_decode": "doc",
    "tensorflow.compat.v1.strings.unicode_encode": "doc",
    "tensorflow.compat.v1.strings.unicode_script": "doc",
    "tensorflow.experimental.numpy.random.randint": "doc",
    "tensorflow.compat.v1.strings.regex_full_match": "doc",
    "tensorflow.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.compat.v1.strings.unicode_transcode": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_strong": "doc",
    "tensorflow.compat.v1.strings.unsorted_segment_join": "doc",
    "tensorflow.compat.v1.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.math.segment_min": "doc",
    "tensorflow.losses.deserialize": "doc",
    "tensorflow.compat.v1.segment_min": "doc",
    "tensorflow.initializers.deserialize": "doc",
    "tensorflow.keras.layers.deserialize": "doc",
    "tensorflow.keras.losses.deserialize": "doc",
    "tensorflow.compat.v1.math.segment_min": "doc",
    "tensorflow.keras.initializers.deserialize": "doc",
    "tensorflow.keras.regularizers.deserialize": "doc",
    "tensorflow.compat.v1.keras.layers.deserialize": "doc",
    "tensorflow.compat.v1.keras.losses.deserialize": "doc",
    "tensorflow.compat.v1.keras.initializers.deserialize": "doc",
    "tensorflow.compat.v1.keras.regularizers.deserialize": "doc",
    "tensorflow.raw_ops.Erfinv": "doc",
    "tensorflow.ones_initializer": "doc",
    "tensorflow.compat.v1.ones_initializer": "doc",
    "tensorflow.initializers.VarianceScaling": "doc",
    "tensorflow.keras.initializers.VarianceScaling": "doc",
    "tensorflow.compat.v1.keras.initializers.VarianceScaling": "doc",
    "tensorflow.compat.v1.lite.OpHint.OpHintArgumentTracker": "doc",
    "tensorflow.compat.v1.metrics.true_positives": "doc",
    "tensorflow.distribute.experimental.partitioners.FixedShardsPartitioner": "doc",
    "tensorflow.as_string": "doc",
    "tensorflow.transpose": "doc",
    "tensorflow.metrics.Metric": "doc",
    "tensorflow.image.transpose": "doc",
    "tensorflow.losses.serialize": "doc",
    "tensorflow.sparse.transpose": "doc",
    "tensorflow.metrics.Precision": "doc",
    "tensorflow.metrics.serialize": "doc",
    "tensorflow.compat.v1.as_string": "doc",
    "tensorflow.compat.v1.transpose": "doc",
    "tensorflow.keras.metrics.Metric": "doc",
    "tensorflow.autodiff.GradientTape": "doc",
    "tensorflow.image.total_variation": "doc",
    "tensorflow.compat.v1.lite.OpHint": "doc",
    "tensorflow.keras.layers.Attention": "doc",
    "tensorflow.keras.layers.serialize": "doc",
    "tensorflow.keras.losses.serialize": "doc",
    "tensorflow.keras.metrics.Precision": "doc",
    "tensorflow.keras.metrics.serialize": "doc",
    "tensorflow.compat.v1.image.transpose": "doc",
    "tensorflow.compat.v1.dtypes.as_string": "doc",
    "tensorflow.compat.v1.linalg.transpose": "doc",
    "tensorflow.compat.v1.sparse.transpose": "doc",
    "tensorflow.compat.v1.metrics.precision": "doc",
    "tensorflow.experimental.numpy.transpose": "doc",
    "tensorflow.keras.regularizers.serialize": "doc",
    "tensorflow.autograph.experimental.Feature": "doc",
    "tensorflow.data.experimental.from_variant": "doc",
    "tensorflow.compat.v1.keras.metrics.Metric": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine": "doc",
    "tensorflow.compat.v1.image.total_variation": "doc",
    "tensorflow.compat.v1.keras.layers.Attention": "doc",
    "tensorflow.compat.v1.keras.layers.serialize": "doc",
    "tensorflow.compat.v1.keras.losses.serialize": "doc",
    "tensorflow.compat.v1.keras.metrics.Precision": "doc",
    "tensorflow.compat.v1.keras.metrics.serialize": "doc",
    "tensorflow.compat.v1.keras.regularizers.serialize": "doc",
    "tensorflow.compat.v1.autograph.experimental.Feature": "doc",
    "tensorflow.compat.v1.data.experimental.from_variant": "doc",
    "tensorflow.compat.v1.OptimizerOptions": "doc",
    "tensorflow.profiler": "doc",
    "tensorflow.initializers": "doc",
    "tensorflow.initializers.get": "doc",
    "tensorflow.initializers.Ones": "doc",
    "tensorflow.initializers.ones": "doc",
    "tensorflow.initializers.Zeros": "doc",
    "tensorflow.initializers.zeros": "doc",
    "tensorflow.keras.initializers": "doc",
    "tensorflow.compat.v1.profiler": "doc",
    "tensorflow.experimental.Optional": "doc",
    "tensorflow.initializers.Constant": "doc",
    "tensorflow.initializers.HeNormal": "doc",
    "tensorflow.initializers.Identity": "doc",
    "tensorflow.initializers.constant": "doc",
    "tensorflow.initializers.identity": "doc",
    "tensorflow.profiler.experimental": "doc",
    "tensorflow.initializers.HeUniform": "doc",
    "tensorflow.initializers.he_normal": "doc",
    "tensorflow.keras.initializers.get": "doc",
    "tensorflow.compat.v1.initializers": "doc",
    "tensorflow.initializers.Orthogonal": "doc",
    "tensorflow.initializers.he_uniform": "doc",
    "tensorflow.initializers.orthogonal": "doc",
    "tensorflow.keras.initializers.Ones": "doc",
    "tensorflow.keras.initializers.ones": "doc",
    "tensorflow.compat.v1.sets.set_size": "doc",
    "tensorflow.initializers.LecunNormal": "doc",
    "tensorflow.keras.initializers.Zeros": "doc",
    "tensorflow.keras.initializers.zeros": "doc",
    "tensorflow.initializers.GlorotNormal": "doc",
    "tensorflow.initializers.LecunUniform": "doc",
    "tensorflow.initializers.RandomNormal": "doc",
    "tensorflow.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.profiler.advise": "doc",
    "tensorflow.data.experimental.Optional": "doc",
    "tensorflow.initializers.GlorotUniform": "doc",
    "tensorflow.initializers.RandomUniform": "doc",
    "tensorflow.initializers.glorot_normal": "doc",
    "tensorflow.initializers.lecun_uniform": "doc",
    "tensorflow.initializers.random_normal": "doc",
    "tensorflow.profiler.experimental.stop": "doc",
    "tensorflow.initializers.glorot_uniform": "doc",
    "tensorflow.initializers.random_uniform": "doc",
    "tensorflow.keras.initializers.Constant": "doc",
    "tensorflow.keras.initializers.HeNormal": "doc",
    "tensorflow.keras.initializers.Identity": "doc",
    "tensorflow.keras.initializers.constant": "doc",
    "tensorflow.keras.initializers.identity": "doc",
    "tensorflow.profiler.experimental.start": "doc",
    "tensorflow.compat.v1.initializers.ones": "doc",
    "tensorflow.compat.v1.profiler.Profiler": "doc",
    "tensorflow.initializers.TruncatedNormal": "doc",
    "tensorflow.keras.initializers.he_normal": "doc",
    "tensorflow.profiler.experimental.client": "doc",
    "tensorflow.profiler.experimental.server": "doc",
    "tensorflow.compat.v1.initializers.zeros": "doc",
    "tensorflow.compat.v1.keras.initializers": "doc",
    "tensorflow.initializers.truncated_normal": "doc",
    "tensorflow.initializers.variance_scaling": "doc",
    "tensorflow.keras.initializers.Orthogonal": "doc",
    "tensorflow.keras.initializers.he_uniform": "doc",
    "tensorflow.keras.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto": "doc",
    "tensorflow.data.experimental.StatsOptions": "doc",
    "tensorflow.keras.initializers.LecunNormal": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto": "doc",
    "tensorflow.keras.initializers.GlorotNormal": "doc",
    "tensorflow.keras.initializers.LecunUniform": "doc",
    "tensorflow.keras.initializers.RandomNormal": "doc",
    "tensorflow.keras.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.experimental.Optional": "doc",
    "tensorflow.compat.v1.initializers.constant": "doc",
    "tensorflow.compat.v1.initializers.identity": "doc",
    "tensorflow.compat.v1.profiler.write_op_log": "doc",
    "tensorflow.keras.initializers.GlorotUniform": "doc",
    "tensorflow.keras.initializers.RandomUniform": "doc",
    "tensorflow.keras.initializers.glorot_normal": "doc",
    "tensorflow.keras.initializers.lecun_uniform": "doc",
    "tensorflow.keras.initializers.random_normal": "doc",
    "tensorflow.compat.v1.initializers.he_normal": "doc",
    "tensorflow.compat.v1.initializers.variables": "doc",
    "tensorflow.compat.v1.keras.initializers.get": "doc",
    "tensorflow.keras.initializers.glorot_uniform": "doc",
    "tensorflow.keras.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.keras.initializers.Ones": "doc",
    "tensorflow.compat.v1.keras.initializers.ones": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto": "doc",
    "tensorflow.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.profiler.experimental.server.start": "doc",
    "tensorflow.compat.v1.keras.initializers.Zeros": "doc",
    "tensorflow.compat.v1.keras.initializers.zeros": "doc",
    "tensorflow.keras.initializers.truncated_normal": "doc",
    "tensorflow.keras.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.normal": "doc",
    "tensorflow.distribute.experimental.partitioners": "doc",
    "tensorflow.profiler.experimental.client.monitor": "doc",
    "tensorflow.compat.v1.data.experimental.Optional": "doc",
    "tensorflow.compat.v1.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.initializers.random_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.uniform": "doc",
    "tensorflow.profiler.experimental.ProfilerOptions": "doc",
    "tensorflow.compat.v1.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.Constant": "doc",
    "tensorflow.compat.v1.keras.initializers.Identity": "doc",
    "tensorflow.compat.v1.keras.initializers.constant": "doc",
    "tensorflow.compat.v1.keras.initializers.identity": "doc",
    "tensorflow.keras.preprocessing.image.smart_resize": "doc",
    "tensorflow.compat.v1.initializers.local_variables": "doc",
    "tensorflow.compat.v1.keras.initializers.he_normal": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.Checker": "doc",
    "tensorflow.compat.v1.profiler.MultiGraphNodeProto": "doc",
    "tensorflow.compat.v1.initializers.global_variables": "doc",
    "tensorflow.compat.v1.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.keras.initializers.Orthogonal": "doc",
    "tensorflow.compat.v1.keras.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.data.experimental.StatsOptions": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomNormal": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomUniform": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.random_normal": "doc",
    "tensorflow.compat.v1.initializers.uniform_unit_scaling": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.CheckersEntry": "doc",
    "tensorflow.compat.v1.keras.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto.IdToStringEntry": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto.InputShapesEntry": "doc",
    "tensorflow.distribute.experimental.partitioners.MaxSizePartitioner": "doc",
    "tensorflow.distribute.experimental.partitioners.MinSizePartitioner": "doc",
    "tensorflow.compat.v1.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentParser": "doc",
    "tensorflow.estimator.LinearEstimator": "doc",
    "tensorflow.compat.v1.estimator.LinearEstimator": "doc",
    "tensorflow.asin": "doc",
    "tensorflow.atan": "doc",
    "tensorflow.Graph": "doc",
    "tensorflow.print": "doc",
    "tensorflow.math.sin": "doc",
    "tensorflow.math.asin": "doc",
    "tensorflow.math.atan": "doc",
    "tensorflow.math.rint": "doc",
    "tensorflow.math.tanh": "doc",
    "tensorflow.raw_ops.Asin": "doc",
    "tensorflow.raw_ops.Atan": "doc",
    "tensorflow.compat.v1.sin": "doc",
    "tensorflow.compat.v1.asin": "doc",
    "tensorflow.compat.v1.atan": "doc",
    "tensorflow.compat.v1.rank": "doc",
    "tensorflow.compat.v1.rint": "doc",
    "tensorflow.compat.v1.scan": "doc",
    "tensorflow.compat.v1.tanh": "doc",
    "tensorflow.compat.v1.Graph": "doc",
    "tensorflow.compat.v1.Print": "doc",
    "tensorflow.compat.v1.print": "doc",
    "tensorflow.compat.v1.nn.lrn": "doc",
    "tensorflow.compat.v1.app.run": "doc",
    "tensorflow.compat.v1.nn.tanh": "doc",
    "tensorflow.raw_ops.ScatterMin": "doc",
    "tensorflow.compat.v1.math.sin": "doc",
    "tensorflow.compat.v1.math.asin": "doc",
    "tensorflow.compat.v1.math.atan": "doc",
    "tensorflow.compat.v1.math.rint": "doc",
    "tensorflow.compat.v1.math.tanh": "doc",
    "tensorflow.compat.v1.NoGradient": "doc",
    "tensorflow.experimental.numpy.min": "doc",
    "tensorflow.experimental.numpy.sin": "doc",
    "tensorflow.keras.activations.tanh": "doc",
    "tensorflow.compat.v1.logging.warn": "doc",
    "tensorflow.experimental.numpy.kron": "doc",
    "tensorflow.experimental.numpy.mean": "doc",
    "tensorflow.experimental.numpy.take": "doc",
    "tensorflow.experimental.numpy.tanh": "doc",
    "tensorflow.compat.v1.keras.backend.rnn": "doc",
    "tensorflow.experimental.numpy.random.rand": "doc",
    "tensorflow.experimental.numpy.random.randn": "doc",
    "tensorflow.compat.v1.keras.activations.tanh": "doc",
    "tensorflow.zeros_initializer": "doc",
    "tensorflow.compat.v1.zeros_initializer": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdagradParameters": "doc",
    "tensorflow.compat.v1.metrics.false_positives": "doc",
    "tensorflow.constant_initializer": "doc",
    "tensorflow.compat.v1.constant_initializer": "doc",
    "tensorflow.compat.v1.metrics.mean_relative_error": "doc",
    "tensorflow.autograph.experimental.do_not_convert": "doc",
    "tensorflow.compat.v1.autograph.experimental.do_not_convert": "doc",
    "tensorflow.compat.v1.mixed_precision.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.metrics.CategoricalHinge": "doc",
    "tensorflow.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.estimator.WarmStartSettings": "doc",
    "tensorflow.compat.v1.estimator.WarmStartSettings": "doc",
    "tensorflow.compat.v1.stop_gradient": "doc",
    "tensorflow.compat.v1.distributions.Gamma": "doc",
    "tensorflow.compat.v1.distributions.Laplace": "doc",
    "tensorflow.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.metrics.CosineSimilarity": "doc",
    "tensorflow.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.compat.v1.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.compat.v1.tables_initializer": "doc",
    "tensorflow.compat.v1.image.transpose_image": "doc",
    "tensorflow.compat.v1.variables_initializer": "doc",
    "tensorflow.nn.dilation2d": "doc",
    "tensorflow.raw_ops.SdcaFprint": "doc",
    "tensorflow.compat.v1.nn.dilation2d": "doc",
    "tensorflow.compat.v1.nn.static_rnn": "doc",
    "tensorflow.estimator": "doc",
    "tensorflow.estimator.Head": "doc",
    "tensorflow.keras.estimator": "doc",
    "tensorflow.estimator.export": "doc",
    "tensorflow.raw_ops.StageSize": "doc",
    "tensorflow.estimator.EvalSpec": "doc",
    "tensorflow.estimator.Exporter": "doc",
    "tensorflow.estimator.ModeKeys": "doc",
    "tensorflow.estimator.Estimator": "doc",
    "tensorflow.estimator.MultiHead": "doc",
    "tensorflow.estimator.RunConfig": "doc",
    "tensorflow.estimator.VocabInfo": "doc",
    "tensorflow.compat.v1.estimator": "doc",
    "tensorflow.estimator.FeedFnHook": "doc",
    "tensorflow.estimator.add_metrics": "doc",
    "tensorflow.estimator.BestExporter": "doc",
    "tensorflow.estimator.DNNEstimator": "doc",
    "tensorflow.estimator.DNNRegressor": "doc",
    "tensorflow.estimator.FinalOpsHook": "doc",
    "tensorflow.estimator.ProfilerHook": "doc",
    "tensorflow.estimator.experimental": "doc",
    "tensorflow.estimator.DNNClassifier": "doc",
    "tensorflow.estimator.EstimatorSpec": "doc",
    "tensorflow.estimator.FinalExporter": "doc",
    "tensorflow.estimator.NanTensorHook": "doc",
    "tensorflow.compat.v1.estimator.tpu": "doc",
    "tensorflow.estimator.LatestExporter": "doc",
    "tensorflow.estimator.MultiClassHead": "doc",
    "tensorflow.estimator.MultiLabelHead": "doc",
    "tensorflow.estimator.RegressionHead": "doc",
    "tensorflow.estimator.SessionRunArgs": "doc",
    "tensorflow.estimator.SessionRunHook": "doc",
    "tensorflow.estimator.StopAtStepHook": "doc",
    "tensorflow.compat.v1.estimator.Head": "doc",
    "tensorflow.estimator.BinaryClassHead": "doc",
    "tensorflow.estimator.LinearRegressor": "doc",
    "tensorflow.estimator.StepCounterHook": "doc",
    "tensorflow.compat.v1.gfile.FastGFile": "doc",
    "tensorflow.compat.v1.keras.estimator": "doc",
    "tensorflow.estimator.LinearClassifier": "doc",
    "tensorflow.estimator.SessionRunValues": "doc",
    "tensorflow.estimator.SummarySaverHook": "doc",
    "tensorflow.compat.v1.estimator.export": "doc",
    "tensorflow.compat.v1.estimator.inputs": "doc",
    "tensorflow.estimator.BaselineEstimator": "doc",
    "tensorflow.estimator.BaselineRegressor": "doc",
    "tensorflow.estimator.LoggingTensorHook": "doc",
    "tensorflow.estimator.SecondOrStepTimer": "doc",
    "tensorflow.estimator.SessionRunContext": "doc",
    "tensorflow.estimator.BaselineClassifier": "doc",
    "tensorflow.experimental.numpy.heaviside": "doc",
    "tensorflow.compat.v1.estimator.EvalSpec": "doc",
    "tensorflow.compat.v1.estimator.Exporter": "doc",
    "tensorflow.compat.v1.estimator.ModeKeys": "doc",
    "tensorflow.estimator.CheckpointSaverHook": "doc",
    "tensorflow.estimator.export.ExportOutput": "doc",
    "tensorflow.compat.v1.estimator.Estimator": "doc",
    "tensorflow.compat.v1.estimator.MultiHead": "doc",
    "tensorflow.compat.v1.estimator.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.VocabInfo": "doc",
    "tensorflow.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.estimator.export.PredictOutput": "doc",
    "tensorflow.compat.v1.estimator.FeedFnHook": "doc",
    "tensorflow.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.estimator.PoissonRegressionHead": "doc",
    "tensorflow.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.compat.v1.estimator.add_metrics": "doc",
    "tensorflow.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.estimator.LogisticRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.BestExporter": "doc",
    "tensorflow.compat.v1.estimator.DNNEstimator": "doc",
    "tensorflow.compat.v1.estimator.DNNRegressor": "doc",
    "tensorflow.compat.v1.estimator.FinalOpsHook": "doc",
    "tensorflow.compat.v1.estimator.ProfilerHook": "doc",
    "tensorflow.compat.v1.estimator.experimental": "doc",
    "tensorflow.estimator.CheckpointSaverListener": "doc",
    "tensorflow.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.estimator.export.RegressionOutput": "doc",
    "tensorflow.compat.v1.estimator.DNNClassifier": "doc",
    "tensorflow.compat.v1.estimator.EstimatorSpec": "doc",
    "tensorflow.compat.v1.estimator.FinalExporter": "doc",
    "tensorflow.compat.v1.estimator.NanTensorHook": "doc",
    "tensorflow.compat.v1.estimator.tpu.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUConfig": "doc",
    "tensorflow.keras.estimator.model_to_estimator": "doc",
    "tensorflow.compat.v1.estimator.LatestExporter": "doc",
    "tensorflow.compat.v1.estimator.MultiClassHead": "doc",
    "tensorflow.compat.v1.estimator.MultiLabelHead": "doc",
    "tensorflow.compat.v1.estimator.RegressionHead": "doc",
    "tensorflow.compat.v1.estimator.SessionRunArgs": "doc",
    "tensorflow.compat.v1.estimator.SessionRunHook": "doc",
    "tensorflow.compat.v1.estimator.StopAtStepHook": "doc",
    "tensorflow.estimator.experimental.RNNEstimator": "doc",
    "tensorflow.compat.v1.estimator.BinaryClassHead": "doc",
    "tensorflow.compat.v1.estimator.LinearRegressor": "doc",
    "tensorflow.compat.v1.estimator.StepCounterHook": "doc",
    "tensorflow.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.estimator.experimental.RNNClassifier": "doc",
    "tensorflow.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.compat.v1.estimator.LinearClassifier": "doc",
    "tensorflow.compat.v1.estimator.SessionRunValues": "doc",
    "tensorflow.compat.v1.estimator.SummarySaverHook": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimator": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental": "doc",
    "tensorflow.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.estimator.export.ClassificationOutput": "doc",
    "tensorflow.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.compat.v1.estimator.BaselineEstimator": "doc",
    "tensorflow.compat.v1.estimator.BaselineRegressor": "doc",
    "tensorflow.compat.v1.estimator.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.estimator.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.estimator.SessionRunContext": "doc",
    "tensorflow.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.compat.v1.estimator.BaselineClassifier": "doc",
    "tensorflow.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.estimator.experimental.KMeans": "doc",
    "tensorflow.compat.v1.estimator.export.ExportOutput": "doc",
    "tensorflow.compat.v1.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.estimator.export.PredictOutput": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec": "doc",
    "tensorflow.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.compat.v1.estimator.PoissonRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.inputs.numpy_input_fn": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.compat.v1.estimator.LogisticRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.inputs.pandas_input_fn": "doc",
    "tensorflow.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.compat.v1.estimator.export.RegressionOutput": "doc",
    "tensorflow.compat.v1.estimator.tpu.InputPipelineConfig": "doc",
    "tensorflow.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.compat.v1.keras.estimator.model_to_estimator": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.compat.v1.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.compat.v1.estimator.export.ClassificationOutput": "doc",
    "tensorflow.compat.v1.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.compat.v1.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.compat.v1.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.dnn_logit_fn_builder": "doc",
    "tensorflow.compat.v1.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.compat.v1.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.experimental.linear_logit_fn_builder": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental.EmbeddingConfigSpec": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.compat.v1.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.linalg.lu_matrix_inverse": "doc",
    "tensorflow.compat.v1.linalg.lu_matrix_inverse": "doc",
    "tensorflow.math.subtract": "doc",
    "tensorflow.raw_ops.Iterator": "doc",
    "tensorflow.autograph.to_graph": "doc",
    "tensorflow.compat.v1.subtract": "doc",
    "tensorflow.compat.v1.to_int32": "doc",
    "tensorflow.compat.v1.to_int64": "doc",
    "tensorflow.keras.layers.Subtract": "doc",
    "tensorflow.keras.layers.subtract": "doc",
    "tensorflow.compat.v1.math.subtract": "doc",
    "tensorflow.experimental.numpy.subtract": "doc",
    "tensorflow.compat.v1.autograph.to_graph": "doc",
    "tensorflow.compat.v1.keras.layers.Subtract": "doc",
    "tensorflow.compat.v1.keras.layers.subtract": "doc",
    "tensorflow.image.adjust_saturation": "doc",
    "tensorflow.image.random_saturation": "doc",
    "tensorflow.compat.v1.image.adjust_saturation": "doc",
    "tensorflow.compat.v1.image.random_saturation": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental.VirtualDevices": "doc",
    "tensorflow.metrics.MeanRelativeError": "doc",
    "tensorflow.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.random_normal_initializer": "doc",
    "tensorflow.compat.v1.random_normal_initializer": "doc",
    "tensorflow.compat.v1.fixed_size_partitioner": "doc",
    "tensorflow.compat.v1.orthogonal_initializer": "doc",
    "tensorflow.truncatediv": "doc",
    "tensorflow.keras.activations": "doc",
    "tensorflow.keras.activations.elu": "doc",
    "tensorflow.keras.activations.get": "doc",
    "tensorflow.compat.v1.no_gradient": "doc",
    "tensorflow.compat.v1.string_join": "doc",
    "tensorflow.compat.v1.truncatediv": "doc",
    "tensorflow.keras.activations.gelu": "doc",
    "tensorflow.keras.activations.relu": "doc",
    "tensorflow.keras.activations.selu": "doc",
    "tensorflow.keras.activations.swish": "doc",
    "tensorflow.keras.activations.linear": "doc",
    "tensorflow.keras.activations.sigmoid": "doc",
    "tensorflow.keras.activations.softmax": "doc",
    "tensorflow.keras.activations.softplus": "doc",
    "tensorflow.keras.activations.softsign": "doc",
    "tensorflow.compat.v1.keras.activations": "doc",
    "tensorflow.compat.v1.linalg.matrix_rank": "doc",
    "tensorflow.keras.activations.exponential": "doc",
    "tensorflow.keras.activations.hard_sigmoid": "doc",
    "tensorflow.compat.v1.keras.activations.elu": "doc",
    "tensorflow.compat.v1.keras.activations.get": "doc",
    "tensorflow.compat.v1.keras.activations.relu": "doc",
    "tensorflow.compat.v1.keras.activations.selu": "doc",
    "tensorflow.compat.v1.keras.activations.swish": "doc",
    "tensorflow.compat.v1.keras.activations.linear": "doc",
    "tensorflow.compat.v1.keras.activations.sigmoid": "doc",
    "tensorflow.compat.v1.keras.activations.softmax": "doc",
    "tensorflow.compat.v1.keras.activations.softplus": "doc",
    "tensorflow.compat.v1.keras.activations.softsign": "doc",
    "tensorflow.compat.v1.keras.activations.exponential": "doc",
    "tensorflow.compat.v1.keras.activations.hard_sigmoid": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.greater": "doc",
    "tensorflow.metrics": "doc",
    "tensorflow.metrics.AUC": "doc",
    "tensorflow.metrics.KLD": "doc",
    "tensorflow.metrics.MAE": "doc",
    "tensorflow.metrics.MSE": "doc",
    "tensorflow.metrics.Sum": "doc",
    "tensorflow.metrics.get": "doc",
    "tensorflow.metrics.kld": "doc",
    "tensorflow.metrics.mae": "doc",
    "tensorflow.metrics.mse": "doc",
    "tensorflow.math.greater": "doc",
    "tensorflow.metrics.MAPE": "doc",
    "tensorflow.metrics.MSLE": "doc",
    "tensorflow.metrics.mape": "doc",
    "tensorflow.metrics.msle": "doc",
    "tensorflow.nest.flatten": "doc",
    "tensorflow.keras.metrics": "doc",
    "tensorflow.metrics.Hinge": "doc",
    "tensorflow.metrics.hinge": "doc",
    "tensorflow.metrics.Recall": "doc",
    "tensorflow.metrics.MeanIoU": "doc",
    "tensorflow.metrics.Poisson": "doc",
    "tensorflow.metrics.logcosh": "doc",
    "tensorflow.metrics.poisson": "doc",
    "tensorflow.raw_ops.Greater": "doc",
    "tensorflow.metrics.Accuracy": "doc",
    "tensorflow.metrics.log_cosh": "doc",
    "tensorflow.keras.metrics.AUC": "doc",
    "tensorflow.keras.metrics.KLD": "doc",
    "tensorflow.keras.metrics.MAE": "doc",
    "tensorflow.keras.metrics.MSE": "doc",
    "tensorflow.keras.metrics.Sum": "doc",
    "tensorflow.keras.metrics.get": "doc",
    "tensorflow.keras.metrics.kld": "doc",
    "tensorflow.keras.metrics.mae": "doc",
    "tensorflow.keras.metrics.mse": "doc",
    "tensorflow.compat.v1.greater": "doc",
    "tensorflow.compat.v1.metrics": "doc",
    "tensorflow.keras.metrics.MAPE": "doc",
    "tensorflow.keras.metrics.MSLE": "doc",
    "tensorflow.keras.metrics.mape": "doc",
    "tensorflow.keras.metrics.msle": "doc",
    "tensorflow.metrics.MeanTensor": "doc",
    "tensorflow.keras.metrics.Hinge": "doc",
    "tensorflow.keras.metrics.hinge": "doc",
    "tensorflow.keras.layers.Flatten": "doc",
    "tensorflow.keras.metrics.Recall": "doc",
    "tensorflow.metrics.KLDivergence": "doc",
    "tensorflow.metrics.LogCoshError": "doc",
    "tensorflow.metrics.SquaredHinge": "doc",
    "tensorflow.keras.metrics.MeanIoU": "doc",
    "tensorflow.keras.metrics.Poisson": "doc",
    "tensorflow.keras.metrics.logcosh": "doc",
    "tensorflow.keras.metrics.poisson": "doc",
    "tensorflow.metrics.TrueNegatives": "doc",
    "tensorflow.metrics.TruePositives": "doc",
    "tensorflow.metrics.kl_divergence": "doc",
    "tensorflow.metrics.squared_hinge": "doc",
    "tensorflow.compat.v1.metrics.auc": "doc",
    "tensorflow.keras.metrics.Accuracy": "doc",
    "tensorflow.keras.metrics.log_cosh": "doc",
    "tensorflow.metrics.BinaryAccuracy": "doc",
    "tensorflow.metrics.FalseNegatives": "doc",
    "tensorflow.metrics.FalsePositives": "doc",
    "tensorflow.compat.v1.math.greater": "doc",
    "tensorflow.compat.v1.nest.flatten": "doc",
    "tensorflow.metrics.binary_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics": "doc",
    "tensorflow.keras.metrics.MeanTensor": "doc",
    "tensorflow.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.layers.Flatten": "doc",
    "tensorflow.compat.v1.layers.flatten": "doc",
    "tensorflow.compat.v1.metrics.recall": "doc",
    "tensorflow.data.experimental.service": "doc",
    "tensorflow.metrics.MeanAbsoluteError": "doc",
    "tensorflow.metrics.PrecisionAtRecall": "doc",
    "tensorflow.metrics.RecallAtPrecision": "doc",
    "tensorflow.experimental.numpy.greater": "doc",
    "tensorflow.keras.metrics.KLDivergence": "doc",
    "tensorflow.keras.metrics.LogCoshError": "doc",
    "tensorflow.keras.metrics.SquaredHinge": "doc",
    "tensorflow.metrics.BinaryCrossentropy": "doc",
    "tensorflow.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.metrics.accuracy": "doc",
    "tensorflow.compat.v1.metrics.mean_iou": "doc",
    "tensorflow.keras.metrics.TrueNegatives": "doc",
    "tensorflow.keras.metrics.TruePositives": "doc",
    "tensorflow.keras.metrics.kl_divergence": "doc",
    "tensorflow.keras.metrics.squared_hinge": "doc",
    "tensorflow.metrics.CategoricalAccuracy": "doc",
    "tensorflow.metrics.binary_crossentropy": "doc",
    "tensorflow.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.keras.metrics.AUC": "doc",
    "tensorflow.compat.v1.keras.metrics.KLD": "doc",
    "tensorflow.compat.v1.keras.metrics.MAE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSE": "doc",
    "tensorflow.compat.v1.keras.metrics.Sum": "doc",
    "tensorflow.compat.v1.keras.metrics.get": "doc",
    "tensorflow.compat.v1.keras.metrics.kld": "doc",
    "tensorflow.compat.v1.keras.metrics.mae": "doc",
    "tensorflow.compat.v1.keras.metrics.mse": "doc",
    "tensorflow.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.keras.metrics.FalseNegatives": "doc",
    "tensorflow.keras.metrics.FalsePositives": "doc",
    "tensorflow.metrics.RootMeanSquaredError": "doc",
    "tensorflow.metrics.categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.MAPE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSLE": "doc",
    "tensorflow.compat.v1.keras.metrics.mape": "doc",
    "tensorflow.compat.v1.keras.metrics.msle": "doc",
    "tensorflow.keras.metrics.binary_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.Hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.hinge": "doc",
    "tensorflow.compat.v1.metrics.mean_tensor": "doc",
    "tensorflow.compat.v1.metrics.recall_at_k": "doc",
    "tensorflow.compat.v1.saved_model.main_op": "doc",
    "tensorflow.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.layers.Flatten": "doc",
    "tensorflow.compat.v1.keras.metrics.Recall": "doc",
    "tensorflow.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanIoU": "doc",
    "tensorflow.compat.v1.keras.metrics.Poisson": "doc",
    "tensorflow.compat.v1.keras.metrics.logcosh": "doc",
    "tensorflow.compat.v1.keras.metrics.poisson": "doc",
    "tensorflow.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.keras.metrics.mean_squared_error": "doc",
    "tensorflow.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.Accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.log_cosh": "doc",
    "tensorflow.compat.v1.metrics.precision_at_k": "doc",
    "tensorflow.compat.v1.metrics.true_negatives": "doc",
    "tensorflow.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.metrics.false_negatives": "doc",
    "tensorflow.compat.v1.metrics.recall_at_top_k": "doc",
    "tensorflow.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanTensor": "doc",
    "tensorflow.compat.v1.metrics.percentage_below": "doc",
    "tensorflow.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.compat.v1.data.experimental.service": "doc",
    "tensorflow.data.experimental.service.distribute": "doc",
    "tensorflow.compat.v1.keras.metrics.KLDivergence": "doc",
    "tensorflow.compat.v1.keras.metrics.LogCoshError": "doc",
    "tensorflow.compat.v1.keras.metrics.SquaredHinge": "doc",
    "tensorflow.compat.v1.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.metrics.precision_at_top_k": "doc",
    "tensorflow.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.TrueNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.TruePositives": "doc",
    "tensorflow.compat.v1.keras.metrics.kl_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.squared_hinge": "doc",
    "tensorflow.compat.v1.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op": "doc",
    "tensorflow.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.data.experimental.service.WorkerServer": "doc",
    "tensorflow.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.FalseNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.FalsePositives": "doc",
    "tensorflow.compat.v1.metrics.mean_cosine_distance": "doc",
    "tensorflow.compat.v1.metrics.recall_at_thresholds": "doc",
    "tensorflow.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_accuracy": "doc",
    "tensorflow.compat.v1.metrics.sparse_precision_at_k": "doc",
    "tensorflow.data.experimental.service.DispatchServer": "doc",
    "tensorflow.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine_proximity": "doc",
    "tensorflow.compat.v1.metrics.average_precision_at_k": "doc",
    "tensorflow.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.compat.v1.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.compat.v1.metrics.mean_per_class_accuracy": "doc",
    "tensorflow.compat.v1.metrics.precision_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.root_mean_squared_error": "doc",
    "tensorflow.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.data.experimental.service.register_dataset": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_error": "doc",
    "tensorflow.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.compat.v1.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.compat.v1.metrics.sensitivity_at_specificity": "doc",
    "tensorflow.compat.v1.metrics.specificity_at_sensitivity": "doc",
    "tensorflow.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.data.experimental.service.distribute": "doc",
    "tensorflow.compat.v1.metrics.true_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.true_positives_at_thresholds": "doc",
    "tensorflow.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.metrics.false_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.false_positives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.sparse_average_precision_at_k": "doc",
    "tensorflow.compat.v1.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.compat.v1.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.compat.v1.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op_with_restore": "doc",
    "tensorflow.compat.v1.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.compat.v1.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.compat.v1.data.experimental.service.register_dataset": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.lookup.TextFileInitializer": "doc",
    "tensorflow.raw_ops.AllCandidateSampler": "doc",
    "tensorflow.compat.v1.lookup.TextFileInitializer": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.debugging.assert_rank_in": "doc",
    "tensorflow.compat.v1.assert_rank_in": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_in": "doc",
    "tensorflow.divide": "doc",
    "tensorflow.gather": "doc",
    "tensorflow.math.divide": "doc",
    "tensorflow.raw_ops.Gather": "doc",
    "tensorflow.raw_ops.SetSize": "doc",
    "tensorflow.compat.v1.divide": "doc",
    "tensorflow.compat.v1.gather": "doc",
    "tensorflow.raw_ops.AdjustHue": "doc",
    "tensorflow.raw_ops.Bucketize": "doc",
    "tensorflow.raw_ops.Dequantize": "doc",
    "tensorflow.raw_ops.QuantizeV2": "doc",
    "tensorflow.raw_ops.Requantize": "doc",
    "tensorflow.compat.v1.GPUOptions": "doc",
    "tensorflow.compat.v1.RunOptions": "doc",
    "tensorflow.compat.v1.dequantize": "doc",
    "tensorflow.distribute.RunOptions": "doc",
    "tensorflow.raw_ops.SummaryWriter": "doc",
    "tensorflow.summary.SummaryWriter": "doc",
    "tensorflow.compat.v1.math.divide": "doc",
    "tensorflow.saved_model.SaveOptions": "doc",
    "tensorflow.xla.experimental.compile": "doc",
    "tensorflow.compat.v1.tpu.XLAOptions": "doc",
    "tensorflow.experimental.numpy.divide": "doc",
    "tensorflow.random_uniform_initializer": "doc",
    "tensorflow.experimental.numpy.empty_like": "doc",
    "tensorflow.keras.regularizers.Regularizer": "doc",
    "tensorflow.compat.v1.distribute.RunOptions": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental": "doc",
    "tensorflow.compat.v1.saved_model.SaveOptions": "doc",
    "tensorflow.compat.v1.xla.experimental.compile": "doc",
    "tensorflow.compat.v1.random_uniform_initializer": "doc",
    "tensorflow.compat.v1.keras.regularizers.Regularizer": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental.RunHandlerPoolOptions": "doc",
    "tensorflow.truediv": "doc",
    "tensorflow.version": "doc",
    "tensorflow.bitwise.bitwise_and": "doc",
    "tensorflow.distribute.TPUStrategy": "doc",
    "tensorflow.data.experimental.cardinality": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_and": "doc",
    "tensorflow.experimental.numpy.true_divide": "doc",
    "tensorflow.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.distribute.experimental.coordinator": "doc",
    "tensorflow.compat.v1.data.experimental.cardinality": "doc",
    "tensorflow.compat.v1.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.distribute.experimental.coordinator.RemoteValue": "doc",
    "tensorflow.distribute.experimental.coordinator.PerWorkerValues": "doc",
    "tensorflow.distribute.experimental.coordinator.ClusterCoordinator": "doc",
    "tensorflow.raw_ops.ExtractGlimpse": "doc",
    "tensorflow.raw_ops.AdjustSaturation": "doc",
    "tensorflow.raw_ops.ExtractGlimpseV2": "doc",
    "tensorflow.compat.v1.no_regularizer": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.image.extract_glimpse": "doc",
    "tensorflow.image.image_gradients": "doc",
    "tensorflow.compat.v1.image.extract_glimpse": "doc",
    "tensorflow.compat.v1.image.image_gradients": "doc",
    "tensorflow.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.dynamic_partition": "doc",
    "tensorflow.compat.v1.dynamic_partition": "doc",
    "tensorflow.raw_ops.StopGradient": "doc",
    "tensorflow.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.compat.v1.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.compat.v1.graph_util.remove_training_nodes": "doc",
    "tensorflow.keras.preprocessing.text_dataset_from_directory": "doc",
    "tensorflow.compat.v1.distributions.ReparameterizationType": "doc",
    "tensorflow.autograph": "doc",
    "tensorflow.math.is_inf": "doc",
    "tensorflow.GradientTape": "doc",
    "tensorflow.quantization": "doc",
    "tensorflow.raw_ops.Assign": "doc",
    "tensorflow.raw_ops.Expint": "doc",
    "tensorflow.compat.v1.assign": "doc",
    "tensorflow.compat.v1.is_inf": "doc",
    "tensorflow.autograph.to_code": "doc",
    "tensorflow.summary.trace_off": "doc",
    "tensorflow.math.special.expint": "doc",
    "tensorflow.compat.v1.AttrValue": "doc",
    "tensorflow.compat.v1.autograph": "doc",
    "tensorflow.compat.v1.math.is_inf": "doc",
    "tensorflow.autograph.experimental": "doc",
    "tensorflow.compat.v1.GradientTape": "doc",
    "tensorflow.compat.v1.nn.erosion2d": "doc",
    "tensorflow.compat.v1.quantization": "doc",
    "tensorflow.autograph.set_verbosity": "doc",
    "tensorflow.compat.v1.sets.set_union": "doc",
    "tensorflow.experimental.numpy.arange": "doc",
    "tensorflow.experimental.numpy.arctan": "doc",
    "tensorflow.experimental.numpy.around": "doc",
    "tensorflow.compat.v1.custom_gradient": "doc",
    "tensorflow.compat.v1.debugging.is_inf": "doc",
    "tensorflow.compat.v1.autograph.to_code": "doc",
    "tensorflow.compat.v1.sets.intersection": "doc",
    "tensorflow.quantization.quantized_concat": "doc",
    "tensorflow.compat.v1.AttrValue.ListValue": "doc",
    "tensorflow.compat.v1.keras.losses.cosine": "doc",
    "tensorflow.compat.v1.math.special.expint": "doc",
    "tensorflow.compat.v1.autograph.experimental": "doc",
    "tensorflow.compat.v1.autograph.set_verbosity": "doc",
    "tensorflow.quantization.quantize_and_dequantize": "doc",
    "tensorflow.compat.v1.distributions.Distribution": "doc",
    "tensorflow.autograph.experimental.set_loop_options": "doc",
    "tensorflow.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.compat.v1.quantization.quantized_concat": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.compat.v1.autograph.experimental.set_loop_options": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.raw_ops.IdentityReader": "doc",
    "tensorflow.raw_ops.ResizeBilinear": "doc",
    "tensorflow.compat.v1.IdentityReader": "doc",
    "tensorflow.raw_ops.IsVariableInitialized": "doc",
    "tensorflow.compat.v1.truncated_normal_initializer": "doc",
    "tensorflow.Variable": "doc",
    "tensorflow.autodiff": "doc",
    "tensorflow.negative": "doc",
    "tensorflow.math.negative": "doc",
    "tensorflow.keras.wrappers": "doc",
    "tensorflow.nn.l2_normalize": "doc",
    "tensorflow.raw_ops.IsFinite": "doc",
    "tensorflow.raw_ops.ReadFile": "doc",
    "tensorflow.raw_ops.Variable": "doc",
    "tensorflow.data.IteratorSpec": "doc",
    "tensorflow.math.l2_normalize": "doc",
    "tensorflow.image.central_crop": "doc",
    "tensorflow.compat.v1.GraphDef": "doc",
    "tensorflow.compat.v1.Variable": "doc",
    "tensorflow.compat.v1.negative": "doc",
    "tensorflow.linalg.l2_normalize": "doc",
    "tensorflow.keras.utils.get_file": "doc",
    "tensorflow.raw_ops.MakeIterator": "doc",
    "tensorflow.raw_ops.Prelinearize": "doc",
    "tensorflow.Variable.SaveSliceInfo": "doc",
    "tensorflow.compat.v1.NameAttrList": "doc",
    "tensorflow.distribute.InputOptions": "doc",
    "tensorflow.distribute.get_strategy": "doc",
    "tensorflow.distribute.has_strategy": "doc",
    "tensorflow.compat.v1.math.negative": "doc",
    "tensorflow.compat.v1.keras.wrappers": "doc",
    "tensorflow.keras.layers.UpSampling1D": "doc",
    "tensorflow.keras.layers.UpSampling2D": "doc",
    "tensorflow.keras.layers.UpSampling3D": "doc",
    "tensorflow.compat.v1.nn.l2_normalize": "doc",
    "tensorflow.autodiff.ForwardAccumulator": "doc",
    "tensorflow.distribute.StrategyExtended": "doc",
    "tensorflow.experimental.numpy.isfinite": "doc",
    "tensorflow.experimental.numpy.negative": "doc",
    "tensorflow.keras.applications.Xception": "doc",
    "tensorflow.keras.applications.xception": "doc",
    "tensorflow.keras.wrappers.scikit_learn": "doc",
    "tensorflow.compat.v1.math.l2_normalize": "doc",
    "tensorflow.keras.applications.mobilenet": "doc",
    "tensorflow.compat.v1.image.central_crop": "doc",
    "tensorflow.compat.v1.linalg.l2_normalize": "doc",
    "tensorflow.keras.applications.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.utils.get_file": "doc",
    "tensorflow.experimental.numpy.diag_indices": "doc",
    "tensorflow.keras.applications.inception_v3": "doc",
    "tensorflow.compat.v1.NameAttrList.AttrEntry": "doc",
    "tensorflow.compat.v1.Variable.SaveSliceInfo": "doc",
    "tensorflow.compat.v1.distribute.get_strategy": "doc",
    "tensorflow.compat.v1.distribute.has_strategy": "doc",
    "tensorflow.data.experimental.ThreadingOptions": "doc",
    "tensorflow.keras.preprocessing.image.load_img": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling1D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling2D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling3D": "doc",
    "tensorflow.keras.applications.xception.Xception": "doc",
    "tensorflow.compat.v1.distribute.StrategyExtended": "doc",
    "tensorflow.compat.v1.keras.applications.Xception": "doc",
    "tensorflow.compat.v1.keras.applications.xception": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn": "doc",
    "tensorflow.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.compat.v1.data.experimental.ThreadingOptions": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.load_img": "doc",
    "tensorflow.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.xception.Xception": "doc",
    "tensorflow.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.keras.preprocessing.image_dataset_from_directory": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.compat.v1.glorot_normal_initializer": "doc",
    "tensorflow.compat.v1.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.raw_ops.VarIsInitializedOp": "doc",
    "tensorflow.summary.create_file_writer": "doc",
    "tensorflow.summary.create_noop_writer": "doc",
    "tensorflow.sin": "doc",
    "tensorflow.rank": "doc",
    "tensorflow.scan": "doc",
    "tensorflow.tanh": "doc",
    "tensorflow.nn.tanh": "doc",
    "tensorflow.raw_ops.Min": "doc",
    "tensorflow.raw_ops.Sin": "doc",
    "tensorflow.raw_ops.Tan": "doc",
    "tensorflow.raw_ops.Mean": "doc",
    "tensorflow.raw_ops.Print": "doc",
    "tensorflow.keras.backend.rnn": "doc",
    "tensorflow.raw_ops.StringJoin": "doc",
    "tensorflow.raw_ops.DummyIterationCounter": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter": "doc",
    "tensorflow.compat.v1.MetaGraphDef.CollectionDefEntry": "doc",
    "tensorflow.AggregationMethod": "doc",
    "tensorflow.compat.v1.AggregationMethod": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.compat.v1.glorot_uniform_initializer": "doc",
    "tensorflow.custom_gradient": "doc",
    "tensorflow.raw_ops.OptimizeDataset": "doc",
    "tensorflow.raw_ops.PreventGradient": "doc",
    "tensorflow.compat.v1.image.resize_bilinear": "doc",
    "tensorflow.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.RegisterGradient": "doc",
    "tensorflow.compat.v1.test.compute_gradient": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalHinge": "doc",
    "tensorflow.data.experimental.DistributeOptions": "doc",
    "tensorflow.compat.v1.saved_model.build_tensor_info": "doc",
    "tensorflow.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.compat.v1.data.experimental.DistributeOptions": "doc",
    "tensorflow.compat.v1.saved_model.utils.build_tensor_info": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.linalg.LinearOperatorZeros": "doc",
    "tensorflow.compat.v1.sparse_to_indicator": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorZeros": "doc",
    "tensorflow.unravel_index": "doc",
    "tensorflow.math.zero_fraction": "doc",
    "tensorflow.compat.v1.distributions": "doc",
    "tensorflow.compat.v1.sparse_retain": "doc",
    "tensorflow.compat.v1.unravel_index": "doc",
    "tensorflow.compat.v1.wrap_function": "doc",
    "tensorflow.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.compat.v1.nn.zero_fraction": "doc",
    "tensorflow.compat.v1.distributions.Beta": "doc",
    "tensorflow.compat.v1.math.zero_fraction": "doc",
    "tensorflow.compat.v1.distributions.Normal": "doc",
    "tensorflow.compat.v1.distributions.Uniform": "doc",
    "tensorflow.compat.v1.distributions.StudentT": "doc",
    "tensorflow.compat.v1.distributions.Bernoulli": "doc",
    "tensorflow.compat.v1.distributions.Dirichlet": "doc",
    "tensorflow.compat.v1.distributions.RegisterKL": "doc",
    "tensorflow.compat.v1.distributions.Categorical": "doc",
    "tensorflow.compat.v1.distributions.Exponential": "doc",
    "tensorflow.compat.v1.distributions.Multinomial": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.compat.v1.distributions.kl_divergence": "doc",
    "tensorflow.compat.v1.distributions.DirichletMultinomial": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.stop_gradient": "doc",
    "tensorflow.dtypes.saturate_cast": "doc",
    "tensorflow.raw_ops.NextIteration": "doc",
    "tensorflow.keras.preprocessing.image": "doc",
    "tensorflow.compat.v1.dtypes.saturate_cast": "doc",
    "tensorflow.keras.preprocessing.image.save_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image": "doc",
    "tensorflow.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.save_img": "doc",
    "tensorflow.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.linalg.LinearOperatorInversion": "doc",
    "tensorflow.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.raw_ops.CreateSummaryFileWriter": "doc",
    "tensorflow.compat.v1.is_variable_initialized": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorInversion": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.compat.v1.local_variables_initializer": "doc",
    "tensorflow.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.graph_util": "doc",
    "tensorflow.compat.as_str_any": "doc",
    "tensorflow.raw_ops.Dilation2D": "doc",
    "tensorflow.raw_ops.MatrixDiag": "doc",
    "tensorflow.raw_ops.ScatterDiv": "doc",
    "tensorflow.compat.v1.graph_util": "doc",
    "tensorflow.keras.layers.Cropping1D": "doc",
    "tensorflow.keras.layers.Cropping2D": "doc",
    "tensorflow.keras.layers.Cropping3D": "doc",
    "tensorflow.graph_util.import_graph_def": "doc",
    "tensorflow.compat.v1.compat.as_str_any": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping1D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping2D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping3D": "doc",
    "tensorflow.compat.v1.graph_util.must_run_on_cpu": "doc",
    "tensorflow.compat.v1.graph_util.import_graph_def": "doc",
    "tensorflow.compat.v1.graph_util.extract_sub_graph": "doc",
    "tensorflow.compat.v1.graph_util.convert_variables_to_constants": "doc",
    "tensorflow.compat.v1.graph_util.tensor_shape_from_node_def_name": "doc",
    "tensorflow.timestamp": "doc",
    "tensorflow.io.read_file": "doc",
    "tensorflow.math.is_finite": "doc",
    "tensorflow.raw_ops.Transpose": "doc",
    "tensorflow.raw_ops.WriteFile": "doc",
    "tensorflow.compat.v1.is_finite": "doc",
    "tensorflow.compat.v1.read_file": "doc",
    "tensorflow.compat.v1.timestamp": "doc",
    "tensorflow.compat.v1.io.read_file": "doc",
    "tensorflow.compat.v1.math.is_finite": "doc",
    "tensorflow.compat.v1.debugging.is_finite": "doc",
    "tensorflow.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.data.experimental.assert_cardinality": "doc",
    "tensorflow.compat.v1.data.experimental.Structure": "doc",
    "tensorflow.compat.v1.distribute.get_loss_reduction": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.compat.v1.data.experimental.assert_cardinality": "doc",
    "tensorflow.subtract": "doc",
    "tensorflow.losses.CosineSimilarity": "doc",
    "tensorflow.raw_ops.AudioSpectrogram": "doc",
    "tensorflow.raw_ops.CollectiveGather": "doc",
    "tensorflow.raw_ops.DynamicPartition": "doc",
    "tensorflow.raw_ops.IdentityReaderV2": "doc",
    "tensorflow.errors.UnauthenticatedError": "doc",
    "tensorflow.raw_ops.Conv2DBackpropFilter": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilter": "doc",
    "tensorflow.raw_ops.ReaderSerializeState": "doc",
    "tensorflow.keras.losses.CosineSimilarity": "doc",
    "tensorflow.raw_ops.OrderedMapIncompleteSize": "doc",
    "tensorflow.raw_ops.AnonymousMultiDeviceIterator": "doc",
    "tensorflow.raw_ops.FixedUnigramCandidateSampler": "doc",
    "tensorflow.compat.v1.errors.UnauthenticatedError": "doc",
    "tensorflow.compat.v1.create_partitioned_variables": "doc",
    "tensorflow.compat.v1.global_variables_initializer": "doc",
    "tensorflow.compat.v1.min_max_variable_partitioner": "doc",
    "tensorflow.compat.v1.variance_scaling_initializer": "doc",
    "tensorflow.compat.v1.keras.losses.CosineSimilarity": "doc",
    "tensorflow.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_hinge": "doc",
    "tensorflow.keras.datasets.boston_housing": "doc",
    "tensorflow.compat.v1.feature_column.input_layer": "doc",
    "tensorflow.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.compat.v1.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.raw_ops.BatchMatrixInverse": "doc",
    "tensorflow.compat.v1.InteractiveSession": "doc",
    "tensorflow.keras.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.keras.layers.BatchNormalization": "doc",
    "tensorflow.image.draw_bounding_boxes": "doc",
    "tensorflow.distribute.get_replica_context": "doc",
    "tensorflow.compat.v1.image.draw_bounding_boxes": "doc",
    "tensorflow.data.experimental.OptimizationOptions": "doc",
    "tensorflow.data.experimental.parallel_interleave": "doc",
    "tensorflow.compat.v1.distribute.get_replica_context": "doc",
    "tensorflow.compat.v1.data.experimental.OptimizationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.parallel_interleave": "doc",
    "tensorflow.no_gradient": "doc",
    "tensorflow.linalg.matrix_rank": "doc",
    "tensorflow.linalg.LinearOperatorComposition": "doc",
    "tensorflow.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.raw_ops.AddManySparseToTensorsMap": "doc",
    "tensorflow.compat.v1.nn.bidirectional_dynamic_rnn": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter_v2": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorComposition": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.realdiv": "doc",
    "tensorflow.shape_n": "doc",
    "tensorflow.linalg.adjoint": "doc",
    "tensorflow.raw_ops.RealDiv": "doc",
    "tensorflow.sysconfig.get_lib": "doc",
    "tensorflow.compat.v1.Session": "doc",
    "tensorflow.compat.v1.bitcast": "doc",
    "tensorflow.compat.v1.logging": "doc",
    "tensorflow.compat.v1.realdiv": "doc",
    "tensorflow.compat.v1.shape_n": "doc",
    "tensorflow.keras.layers.Average": "doc",
    "tensorflow.keras.layers.Masking": "doc",
    "tensorflow.keras.layers.average": "doc",
    "tensorflow.compat.v1.nn.raw_rnn": "doc",
    "tensorflow.keras.backend.epsilon": "doc",
    "tensorflow.keras.backend.get_uid": "doc",
    "tensorflow.compat.v1.logging.log": "doc",
    "tensorflow.compat.v1.logging.info": "doc",
    "tensorflow.compat.v1.logging.vlog": "doc",
    "tensorflow.compat.v1.logging.debug": "doc",
    "tensorflow.compat.v1.logging.error": "doc",
    "tensorflow.compat.v1.logging.fatal": "doc",
    "tensorflow.compat.v1.logging.flush": "doc",
    "tensorflow.compat.v1.linalg.adjoint": "doc",
    "tensorflow.compat.v1.logging.log_if": "doc",
    "tensorflow.compat.v1.matrix_inverse": "doc",
    "tensorflow.experimental.numpy.arctan2": "doc",
    "tensorflow.experimental.numpy.arctanh": "doc",
    "tensorflow.experimental.numpy.average": "doc",
    "tensorflow.compat.v1.sysconfig.get_lib": "doc",
    "tensorflow.compat.v1.logging.log_every_n": "doc",
    "tensorflow.compat.v1.logging.log_first_n": "doc",
    "tensorflow.compat.v1.keras.layers.Average": "doc",
    "tensorflow.compat.v1.keras.layers.Masking": "doc",
    "tensorflow.compat.v1.keras.layers.average": "doc",
    "tensorflow.compat.v1.keras.backend.epsilon": "doc",
    "tensorflow.compat.v1.keras.backend.get_uid": "doc",
    "tensorflow.compat.v1.logging.get_verbosity": "doc",
    "tensorflow.compat.v1.logging.set_verbosity": "doc",
    "tensorflow.compat.v1.logging.TaskLevelStatusMessage": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.nn.all_candidate_sampler": "doc",
    "tensorflow.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.random.all_candidate_sampler": "doc",
    "tensorflow.raw_ops.CreateSummaryDbWriter": "doc",
    "tensorflow.compat.v1.nn.all_candidate_sampler": "doc",
    "tensorflow.compat.v1.flags.CantOpenFlagFileError": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.compat.v1.random.all_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.stateless_multinomial": "doc",
    "tensorflow.compat.v1.app.flags.CantOpenFlagFileError": "doc",
    "tensorflow.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.test.compute_gradient": "doc",
    "tensorflow.losses.CategoricalHinge": "doc",
    "tensorflow.raw_ops.DataFormatDimMap": "doc",
    "tensorflow.keras.layers.AveragePooling1D": "doc",
    "tensorflow.keras.layers.AveragePooling2D": "doc",
    "tensorflow.keras.layers.AveragePooling3D": "doc",
    "tensorflow.keras.losses.CategoricalHinge": "doc",
    "tensorflow.compat.v1.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling3D": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.debugging.assert_integer": "doc",
    "tensorflow.compat.v1.debugging.assert_integer": "doc",
    "tensorflow.compat.v1.python_io.TFRecordWriter": "doc",
    "tensorflow.image.random_brightness": "doc",
    "tensorflow.losses.cosine_similarity": "doc",
    "tensorflow.raw_ops.AnonymousIterator": "doc",
    "tensorflow.raw_ops.CollectivePermute": "doc",
    "tensorflow.raw_ops.LookupTableSizeV2": "doc",
    "tensorflow.raw_ops.MapIncompleteSize": "doc",
    "tensorflow.raw_ops.OptimizeDatasetV2": "doc",
    "tensorflow.raw_ops.SparseMatrixZeros": "doc",
    "tensorflow.keras.losses.cosine_similarity": "doc",
    "tensorflow.compat.v1.image.random_brightness": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_similarity": "doc",
    "tensorflow.compat.v1.saved_model.builder.SavedModelBuilder": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.MethodNameUpdater": "doc",
    "tensorflow.raw_ops.AccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.LearnedUnigramCandidateSampler": "doc",
    "tensorflow.compat.v1.variable_axis_size_partitioner": "doc",
    "tensorflow.math.invert_permutation": "doc",
    "tensorflow.compat.v1.invert_permutation": "doc",
    "tensorflow.compat.v1.math.invert_permutation": "doc",
    "tensorflow.compat.v1.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.data": "doc",
    "tensorflow.mlir": "doc",
    "tensorflow.size": "doc",
    "tensorflow.tile": "doc",
    "tensorflow.image": "doc",
    "tensorflow.shape": "doc",
    "tensorflow.device": "doc",
    "tensorflow.dtypes": "doc",
    "tensorflow.matmul": "doc",
    "tensorflow.bitwise": "doc",
    "tensorflow.complex": "doc",
    "tensorflow.maximum": "doc",
    "tensorflow.minimum": "doc",
    "tensorflow.as_dtype": "doc",
    "tensorflow.identity": "doc",
    "tensorflow.multiply": "doc",
    "tensorflow.sets.size": "doc",
    "tensorflow.distribute": "doc",
    "tensorflow.identity_n": "doc",
    "tensorflow.image.psnr": "doc",
    "tensorflow.image.ssim": "doc",
    "tensorflow.math.ndtri": "doc",
    "tensorflow.name_scope": "doc",
    "tensorflow.dtypes.cast": "doc",
    "tensorflow.image.rot90": "doc",
    "tensorflow.lite.OpsSet": "doc",
    "tensorflow.losses.mape": "doc",
    "tensorflow.math.igamma": "doc",
    "tensorflow.math.lgamma": "doc",
    "tensorflow.saved_model": "doc",
    "tensorflow.data.Dataset": "doc",
    "tensorflow.dtypes.DType": "doc",
    "tensorflow.image.resize": "doc",
    "tensorflow.math.igammac": "doc",
    "tensorflow.math.maximum": "doc",
    "tensorflow.math.minimum": "doc",
    "tensorflow.random.gamma": "doc",
    "tensorflow.raw_ops.Size": "doc",
    "tensorflow.compat.as_str": "doc",
    "tensorflow.image.is_jpeg": "doc",
    "tensorflow.linalg.matmul": "doc",
    "tensorflow.linalg.matvec": "doc",
    "tensorflow.math.multiply": "doc",
    "tensorflow.raw_ops.Empty": "doc",
    "tensorflow.raw_ops.Enter": "doc",
    "tensorflow.raw_ops.Ndtri": "doc",
    "tensorflow.raw_ops.Shape": "doc",
    "tensorflow.summary.image": "doc",
    "tensorflow.bitwise.invert": "doc",
    "tensorflow.dtypes.complex": "doc",
    "tensorflow.errors.OpError": "doc",
    "tensorflow.io.gfile.mkdir": "doc",
    "tensorflow.keras.datasets": "doc",
    "tensorflow.math.nextafter": "doc",
    "tensorflow.raw_ops.Igamma": "doc",
    "tensorflow.raw_ops.Lgamma": "doc",
    "tensorflow.raw_ops.ShapeN": "doc",
    "tensorflow.sparse.maximum": "doc",
    "tensorflow.sparse.minimum": "doc",
    "tensorflow.compat.v1.data": "doc",
    "tensorflow.compat.v1.mlir": "doc",
    "tensorflow.compat.v1.size": "doc",
    "tensorflow.compat.v1.tile": "doc",
    "tensorflow.dtypes.as_dtype": "doc",
    "tensorflow.io.decode_image": "doc",
    "tensorflow.io.gfile.rmtree": "doc",
    "tensorflow.lite.TargetSpec": "doc",
    "tensorflow.raw_ops.Complex": "doc",
    "tensorflow.raw_ops.Igammac": "doc",
    "tensorflow.raw_ops.MapPeek": "doc",
    "tensorflow.raw_ops.Maximum": "doc",
    "tensorflow.compat.v1.image": "doc",
    "tensorflow.compat.v1.shape": "doc",
    "tensorflow.data.DatasetSpec": "doc",
    "tensorflow.image.adjust_hue": "doc",
    "tensorflow.image.decode_bmp": "doc",
    "tensorflow.image.decode_gif": "doc",
    "tensorflow.image.decode_png": "doc",
    "tensorflow.image.encode_png": "doc",
    "tensorflow.image.hsv_to_rgb": "doc",
    "tensorflow.image.random_hue": "doc",
    "tensorflow.image.rgb_to_hsv": "doc",
    "tensorflow.image.rgb_to_yiq": "doc",
    "tensorflow.image.rgb_to_yuv": "doc",
    "tensorflow.image.yiq_to_rgb": "doc",
    "tensorflow.image.yuv_to_rgb": "doc",
    "tensorflow.io.gfile.listdir": "doc",
    "tensorflow.lite.Interpreter": "doc",
    "tensorflow.math.segment_max": "doc",
    "tensorflow.random.Algorithm": "doc",
    "tensorflow.raw_ops.Identity": "doc",
    "tensorflow.raw_ops.MapClear": "doc",
    "tensorflow.raw_ops.MapStage": "doc",
    "tensorflow.raw_ops.OnesLike": "doc",
    "tensorflow.raw_ops.RefEnter": "doc",
    "tensorflow.saved_model.load": "doc",
    "tensorflow.saved_model.save": "doc",
    "tensorflow.compat.v1.device": "doc",
    "tensorflow.compat.v1.dtypes": "doc",
    "tensorflow.compat.v1.igamma": "doc",
    "tensorflow.compat.v1.lgamma": "doc",
    "tensorflow.compat.v1.matmul": "doc",
    "tensorflow.data.experimental": "doc",
    "tensorflow.distribute.Server": "doc",
    "tensorflow.image.decode_jpeg": "doc",
    "tensorflow.image.encode_jpeg": "doc",
    "tensorflow.image.random_crop": "doc",
    "tensorflow.image.sobel_edges": "doc",
    "tensorflow.keras.losses.mape": "doc",
    "tensorflow.math.segment_mean": "doc",
    "tensorflow.mlir.experimental": "doc",
    "tensorflow.raw_ops.BitwiseOr": "doc",
    "tensorflow.raw_ops.IdentityN": "doc",
    "tensorflow.raw_ops.NextAfter": "doc",
    "tensorflow.raw_ops.QueueSize": "doc",
    "tensorflow.raw_ops.Timestamp": "doc",
    "tensorflow.saved_model.Asset": "doc",
    "tensorflow.sparse.map_values": "doc",
    "tensorflow.compat.v1.OpError": "doc",
    "tensorflow.compat.v1.bitwise": "doc",
    "tensorflow.compat.v1.complex": "doc",
    "tensorflow.compat.v1.igammac": "doc",
    "tensorflow.compat.v1.maximum": "doc",
    "tensorflow.compat.v1.minimum": "doc",
    "tensorflow.bitwise.bitwise_or": "doc",
    "tensorflow.bitwise.left_shift": "doc",
    "tensorflow.compat.path_to_str": "doc",
    "tensorflow.image.ResizeMethod": "doc",
    "tensorflow.image.adjust_gamma": "doc",
    "tensorflow.image.decode_image": "doc",
    "tensorflow.image.flip_up_down": "doc",
    "tensorflow.keras.layers.Layer": "doc",
    "tensorflow.keras.regularizers": "doc",
    "tensorflow.raw_ops.MapDataset": "doc",
    "tensorflow.raw_ops.SaveSlices": "doc",
    "tensorflow.raw_ops.SegmentMin": "doc",
    "tensorflow.compat.v1.as_dtype": "doc",
    "tensorflow.compat.v1.identity": "doc",
    "tensorflow.compat.v1.multiply": "doc",
    "tensorflow.bitwise.bitwise_xor": "doc",
    "tensorflow.bitwise.right_shift": "doc",
    "tensorflow.distribute.ReduceOp": "doc",
    "tensorflow.keras.datasets.imdb": "doc",
    "tensorflow.raw_ops.LoadDataset": "doc",
    "tensorflow.raw_ops.Placeholder": "doc",
    "tensorflow.raw_ops.ScanDataset": "doc",
    "tensorflow.raw_ops.SparseSlice": "doc",
    "tensorflow.sparse.segment_mean": "doc",
    "tensorflow.compat.v1.sets.size": "doc",
    "tensorflow.data.TFRecordDataset": "doc",
    "tensorflow.data.TextLineDataset": "doc",
    "tensorflow.keras.datasets.mnist": "doc",
    "tensorflow.keras.layers.Maximum": "doc",
    "tensorflow.keras.layers.Permute": "doc",
    "tensorflow.keras.layers.maximum": "doc",
    "tensorflow.keras.layers.minimum": "doc",
    "tensorflow.raw_ops.RaggedGather": "doc",
    "tensorflow.compat.v1.distribute": "doc",
    "tensorflow.compat.v1.gfile.Open": "doc",
    "tensorflow.compat.v1.identity_n": "doc",
    "tensorflow.compat.v1.image.psnr": "doc",
    "tensorflow.compat.v1.image.ssim": "doc",
    "tensorflow.compat.v1.manip.tile": "doc",
    "tensorflow.compat.v1.math.ndtri": "doc",
    "tensorflow.compat.v1.name_scope": "doc",
    "tensorflow.image.adjust_contrast": "doc",
    "tensorflow.image.crop_and_resize": "doc",
    "tensorflow.image.extract_patches": "doc",
    "tensorflow.image.flip_left_right": "doc",
    "tensorflow.image.random_contrast": "doc",
    "tensorflow.image.resize_with_pad": "doc",
    "tensorflow.image.ssim_multiscale": "doc",
    "tensorflow.keras.layers.multiply": "doc",
    "tensorflow.keras.regularizers.L1": "doc",
    "tensorflow.keras.regularizers.L2": "doc",
    "tensorflow.keras.regularizers.l1": "doc",
    "tensorflow.keras.regularizers.l2": "doc",
    "tensorflow.raw_ops.SparseReorder": "doc",
    "tensorflow.compat.v1.dtypes.cast": "doc",
    "tensorflow.compat.v1.image.rot90": "doc",
    "tensorflow.compat.v1.lite.OpsSet": "doc",
    "tensorflow.compat.v1.math.igamma": "doc",
    "tensorflow.compat.v1.math.lgamma": "doc",
    "tensorflow.compat.v1.multinomial": "doc",
    "tensorflow.compat.v1.placeholder": "doc",
    "tensorflow.compat.v1.quantize_v2": "doc",
    "tensorflow.compat.v1.saved_model": "doc",
    "tensorflow.compat.v1.segment_max": "doc",
    "tensorflow.data.experimental.load": "doc",
    "tensorflow.data.experimental.save": "doc",
    "tensorflow.image.grayscale_to_rgb": "doc",
    "tensorflow.image.rgb_to_grayscale": "doc",
    "tensorflow.keras.datasets.cifar10": "doc",
    "tensorflow.keras.datasets.reuters": "doc",
    "tensorflow.keras.regularizers.get": "doc",
    "tensorflow.keras.utils.plot_model": "doc",
    "tensorflow.compat.v1.batch_gather": "doc",
    "tensorflow.compat.v1.data.Dataset": "doc",
    "tensorflow.compat.v1.dtypes.DType": "doc",
    "tensorflow.compat.v1.image.resize": "doc",
    "tensorflow.compat.v1.layers.Layer": "doc",
    "tensorflow.compat.v1.math.igammac": "doc",
    "tensorflow.compat.v1.math.maximum": "doc",
    "tensorflow.compat.v1.math.minimum": "doc",
    "tensorflow.compat.v1.random.gamma": "doc",
    "tensorflow.compat.v1.segment_mean": "doc",
    "tensorflow.compat.v1.sparse_slice": "doc",
    "tensorflow.distribute.InputContext": "doc",
    "tensorflow.distribute.experimental": "doc",
    "tensorflow.experimental.numpy.ndim": "doc",
    "tensorflow.experimental.numpy.size": "doc",
    "tensorflow.experimental.numpy.tile": "doc",
    "tensorflow.image.adjust_brightness": "doc",
    "tensorflow.keras.datasets.cifar100": "doc",
    "tensorflow.keras.layers.InputLayer": "doc",
    "tensorflow.keras.models.load_model": "doc",
    "tensorflow.keras.models.save_model": "doc",
    "tensorflow.keras.regularizers.L1L2": "doc",
    "tensorflow.compat.v1.compat.as_str": "doc",
    "tensorflow.compat.v1.image.is_jpeg": "doc",
    "tensorflow.compat.v1.linalg.matmul": "doc",
    "tensorflow.compat.v1.linalg.matvec": "doc",
    "tensorflow.compat.v1.math.multiply": "doc",
    "tensorflow.compat.v1.sparse.matmul": "doc",
    "tensorflow.compat.v1.summary.image": "doc",
    "tensorflow.compat.v1.tpu.replicate": "doc",
    "tensorflow.data.experimental.unique": "doc",
    "tensorflow.distribute.NcclAllReduce": "doc",
    "tensorflow.experimental.numpy.empty": "doc",
    "tensorflow.experimental.numpy.inner": "doc",
    "tensorflow.experimental.numpy.outer": "doc",
    "tensorflow.experimental.numpy.power": "doc",
    "tensorflow.experimental.numpy.shape": "doc",
    "tensorflow.image.extract_jpeg_shape": "doc",
    "tensorflow.keras.regularizers.l1_l2": "doc",
    "tensorflow.saved_model.experimental": "doc",
    "tensorflow.compat.v1.bitwise.invert": "doc",
    "tensorflow.compat.v1.dtypes.complex": "doc",
    "tensorflow.compat.v1.errors.OpError": "doc",
    "tensorflow.compat.v1.io.gfile.mkdir": "doc",
    "tensorflow.compat.v1.keras.datasets": "doc",
    "tensorflow.compat.v1.math.nextafter": "doc",
    "tensorflow.compat.v1.sparse.maximum": "doc",
    "tensorflow.compat.v1.sparse.minimum": "doc",
    "tensorflow.data.experimental.Counter": "doc",
    "tensorflow.data.experimental.Reducer": "doc",
    "tensorflow.data.experimental.unbatch": "doc",
    "tensorflow.distribute.CrossDeviceOps": "doc",
    "tensorflow.distribute.ReplicaContext": "doc",
    "tensorflow.experimental.numpy.dsplit": "doc",
    "tensorflow.experimental.numpy.matmul": "doc",
    "tensorflow.experimental.numpy.vander": "doc",
    "tensorflow.image.adjust_jpeg_quality": "doc",
    "tensorflow.image.convert_image_dtype": "doc",
    "tensorflow.image.non_max_suppression": "doc",
    "tensorflow.image.pad_to_bounding_box": "doc",
    "tensorflow.image.random_flip_up_down": "doc",
    "tensorflow.image.random_jpeg_quality": "doc",
    "tensorflow.compat.v1.dtypes.as_dtype": "doc",
    "tensorflow.compat.v1.flags.validator": "doc",
    "tensorflow.compat.v1.io.decode_image": "doc",
    "tensorflow.compat.v1.io.gfile.rmtree": "doc",
    "tensorflow.compat.v1.lite.TargetSpec": "doc",
    "tensorflow.data.experimental.snapshot": "doc",
    "tensorflow.experimental.numpy.maximum": "doc",
    "tensorflow.experimental.numpy.minimum": "doc",
    "tensorflow.image.crop_to_bounding_box": "doc",
    "tensorflow.image.decode_and_crop_jpeg": "doc",
    "tensorflow.image.stateless_random_hue": "doc",
    "tensorflow.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.keras.callbacks.BaseLogger": "doc",
    "tensorflow.compat.v1.data.DatasetSpec": "doc",
    "tensorflow.compat.v1.flags.EnumParser": "doc",
    "tensorflow.compat.v1.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.flags.ListParser": "doc",
    "tensorflow.compat.v1.image.adjust_hue": "doc",
    "tensorflow.compat.v1.image.decode_bmp": "doc",
    "tensorflow.compat.v1.image.decode_gif": "doc",
    "tensorflow.compat.v1.image.decode_png": "doc",
    "tensorflow.compat.v1.image.encode_png": "doc",
    "tensorflow.compat.v1.image.hsv_to_rgb": "doc",
    "tensorflow.compat.v1.image.random_hue": "doc",
    "tensorflow.compat.v1.image.rgb_to_hsv": "doc",
    "tensorflow.compat.v1.image.rgb_to_yiq": "doc",
    "tensorflow.compat.v1.image.rgb_to_yuv": "doc",
    "tensorflow.compat.v1.image.yiq_to_rgb": "doc",
    "tensorflow.compat.v1.image.yuv_to_rgb": "doc",
    "tensorflow.compat.v1.io.gfile.listdir": "doc",
    "tensorflow.compat.v1.lite.Interpreter": "doc",
    "tensorflow.compat.v1.math.segment_max": "doc",
    "tensorflow.compat.v1.random.Algorithm": "doc",
    "tensorflow.compat.v1.saved_model.load": "doc",
    "tensorflow.compat.v1.saved_model.save": "doc",
    "tensorflow.distribute.MirroredStrategy": "doc",
    "tensorflow.distribute.cluster_resolver": "doc",
    "tensorflow.experimental.numpy.identity": "doc",
    "tensorflow.experimental.numpy.multiply": "doc",
    "tensorflow.experimental.numpy.positive": "doc",
    "tensorflow.experimental.numpy.swapaxes": "doc",
    "tensorflow.image.stateless_random_crop": "doc",
    "tensorflow.compat.v1.data.experimental": "doc",
    "tensorflow.compat.v1.distribute.Server": "doc",
    "tensorflow.compat.v1.flags.FloatParser": "doc",
    "tensorflow.compat.v1.image.decode_jpeg": "doc",
    "tensorflow.compat.v1.image.encode_jpeg": "doc",
    "tensorflow.compat.v1.image.random_crop": "doc",
    "tensorflow.compat.v1.image.resize_area": "doc",
    "tensorflow.compat.v1.image.sobel_edges": "doc",
    "tensorflow.compat.v1.keras.losses.mape": "doc",
    "tensorflow.compat.v1.math.segment_mean": "doc",
    "tensorflow.compat.v1.mlir.experimental": "doc",
    "tensorflow.compat.v1.saved_model.Asset": "doc",
    "tensorflow.compat.v1.saved_model.utils": "doc",
    "tensorflow.data.experimental.CsvDataset": "doc",
    "tensorflow.data.experimental.SqlDataset": "doc",
    "tensorflow.data.experimental.take_while": "doc",
    "tensorflow.distribute.DistributedValues": "doc",
    "tensorflow.distribute.OneDeviceStrategy": "doc",
    "tensorflow.experimental.numpy.geomspace": "doc",
    "tensorflow.experimental.numpy.nextafter": "doc",
    "tensorflow.image.random_flip_left_right": "doc",
    "tensorflow.keras.datasets.fashion_mnist": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_or": "doc",
    "tensorflow.compat.v1.bitwise.left_shift": "doc",
    "tensorflow.compat.v1.compat.path_to_str": "doc",
    "tensorflow.compat.v1.image.ResizeMethod": "doc",
    "tensorflow.compat.v1.image.adjust_gamma": "doc",
    "tensorflow.compat.v1.image.decode_image": "doc",
    "tensorflow.compat.v1.image.flip_up_down": "doc",
    "tensorflow.compat.v1.keras.layers.Layer": "doc",
    "tensorflow.compat.v1.keras.regularizers": "doc",
    "tensorflow.compat.v1.ragged.placeholder": "doc",
    "tensorflow.compat.v1.random.multinomial": "doc",
    "tensorflow.compat.v1.saved_model.loader": "doc",
    "tensorflow.compat.v1.sparse.placeholder": "doc",
    "tensorflow.compat.v1.summary.FileWriter": "doc",
    "tensorflow.data.FixedLengthRecordDataset": "doc",
    "tensorflow.distribute.DistributedDataset": "doc",
    "tensorflow.image.resize_with_crop_or_pad": "doc",
    "tensorflow.keras.datasets.imdb.load_data": "doc",
    "tensorflow.random.experimental.Algorithm": "doc",
    "tensorflow.compat.v1.app.flags.validator": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_xor": "doc",
    "tensorflow.compat.v1.bitwise.right_shift": "doc",
    "tensorflow.compat.v1.distribute.ReduceOp": "doc",
    "tensorflow.compat.v1.image.resize_images": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb": "doc",
    "tensorflow.compat.v1.saved_model.Builder": "doc",
    "tensorflow.compat.v1.saved_model.builder": "doc",
    "tensorflow.compat.v1.saved_model.load_v2": "doc",
    "tensorflow.compat.v1.sparse.segment_mean": "doc",
    "tensorflow.distribute.DistributedIterator": "doc",
    "tensorflow.experimental.numpy.float_power": "doc",
    "tensorflow.keras.datasets.mnist.load_data": "doc",
    "tensorflow.compat.v1.app.flags.EnumParser": "doc",
    "tensorflow.compat.v1.app.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.app.flags.ListParser": "doc",
    "tensorflow.compat.v1.data.TFRecordDataset": "doc",
    "tensorflow.compat.v1.data.TextLineDataset": "doc",
    "tensorflow.compat.v1.image.resize_bicubic": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist": "doc",
    "tensorflow.compat.v1.keras.layers.Maximum": "doc",
    "tensorflow.compat.v1.keras.layers.Permute": "doc",
    "tensorflow.compat.v1.keras.layers.maximum": "doc",
    "tensorflow.compat.v1.keras.layers.minimum": "doc",
    "tensorflow.data.experimental.RandomDataset": "doc",
    "tensorflow.data.experimental.get_structure": "doc",
    "tensorflow.data.experimental.ignore_errors": "doc",
    "tensorflow.data.experimental.latency_stats": "doc",
    "tensorflow.data.experimental.map_and_batch": "doc",
    "tensorflow.distribute.InputReplicationMode": "doc",
    "tensorflow.distribute.ReductionToOneDevice": "doc",
    "tensorflow.experimental.numpy.floor_divide": "doc",
    "tensorflow.experimental.tensorrt.Converter": "doc",
    "tensorflow.image.per_image_standardization": "doc",
    "tensorflow.image.stateless_random_contrast": "doc",
    "tensorflow.compat.v1.app.flags.FloatParser": "doc",
    "tensorflow.compat.v1.data.get_output_types": "doc",
    "tensorflow.compat.v1.image.adjust_contrast": "doc",
    "tensorflow.compat.v1.image.crop_and_resize": "doc",
    "tensorflow.compat.v1.image.extract_patches": "doc",
    "tensorflow.compat.v1.image.flip_left_right": "doc",
    "tensorflow.compat.v1.image.random_contrast": "doc",
    "tensorflow.compat.v1.image.ssim_multiscale": "doc",
    "tensorflow.compat.v1.keras.layers.multiply": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1": "doc",
    "tensorflow.compat.v1.keras.regularizers.L2": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1": "doc",
    "tensorflow.compat.v1.keras.regularizers.l2": "doc",
    "tensorflow.compat.v1.saved_model.constants": "doc",
    "tensorflow.data.experimental.TFRecordWriter": "doc",
    "tensorflow.data.experimental.copy_to_device": "doc",
    "tensorflow.image.non_max_suppression_padded": "doc",
    "tensorflow.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.keras.datasets.reuters.load_data": "doc",
    "tensorflow.saved_model.contains_saved_model": "doc",
    "tensorflow.compat.v1.data.get_output_shapes": "doc",
    "tensorflow.compat.v1.image.grayscale_to_rgb": "doc",
    "tensorflow.compat.v1.image.rgb_to_grayscale": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters": "doc",
    "tensorflow.compat.v1.keras.regularizers.get": "doc",
    "tensorflow.compat.v1.keras.utils.plot_model": "doc",
    "tensorflow.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.data.experimental.StatsAggregator": "doc",
    "tensorflow.data.experimental.group_by_window": "doc",
    "tensorflow.image.stateless_random_brightness": "doc",
    "tensorflow.image.stateless_random_saturation": "doc",
    "tensorflow.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.compat.v1.data.get_output_classes": "doc",
    "tensorflow.compat.v1.distribute.InputContext": "doc",
    "tensorflow.compat.v1.distribute.experimental": "doc",
    "tensorflow.compat.v1.image.adjust_brightness": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100": "doc",
    "tensorflow.compat.v1.keras.layers.InputLayer": "doc",
    "tensorflow.compat.v1.keras.models.load_model": "doc",
    "tensorflow.compat.v1.keras.models.save_model": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1L2": "doc",
    "tensorflow.compat.v1.saved_model.loader.load": "doc",
    "tensorflow.compat.v1.saved_model.simple_save": "doc",
    "tensorflow.data.experimental.group_by_reducer": "doc",
    "tensorflow.data.experimental.make_csv_dataset": "doc",
    "tensorflow.image.combined_non_max_suppression": "doc",
    "tensorflow.image.non_max_suppression_overlaps": "doc",
    "tensorflow.mlir.experimental.convert_function": "doc",
    "tensorflow.compat.v1.data.experimental.unique": "doc",
    "tensorflow.compat.v1.distribute.NcclAllReduce": "doc",
    "tensorflow.compat.v1.image.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.keras.backend.name_scope": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1_l2": "doc",
    "tensorflow.compat.v1.saved_model.experimental": "doc",
    "tensorflow.data.experimental.enumerate_dataset": "doc",
    "tensorflow.distribute.in_cross_replica_context": "doc",
    "tensorflow.image.sample_distorted_bounding_box": "doc",
    "tensorflow.image.stateless_random_flip_up_down": "doc",
    "tensorflow.image.stateless_random_jpeg_quality": "doc",
    "tensorflow.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.compat.v1.data.experimental.Counter": "doc",
    "tensorflow.compat.v1.data.experimental.Reducer": "doc",
    "tensorflow.compat.v1.data.experimental.unbatch": "doc",
    "tensorflow.compat.v1.distribute.CrossDeviceOps": "doc",
    "tensorflow.compat.v1.distribute.ReplicaContext": "doc",
    "tensorflow.compat.v1.image.adjust_jpeg_quality": "doc",
    "tensorflow.compat.v1.image.convert_image_dtype": "doc",
    "tensorflow.compat.v1.image.non_max_suppression": "doc",
    "tensorflow.compat.v1.image.pad_to_bounding_box": "doc",
    "tensorflow.compat.v1.image.random_flip_up_down": "doc",
    "tensorflow.compat.v1.image.random_jpeg_quality": "doc",
    "tensorflow.compat.v1.saved_model.tag_constants": "doc",
    "tensorflow.data.experimental.get_single_element": "doc",
    "tensorflow.data.experimental.prefetch_to_device": "doc",
    "tensorflow.data.experimental.rejection_resample": "doc",
    "tensorflow.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.distribute.experimental.ValueContext": "doc",
    "tensorflow.distribute.experimental_set_strategy": "doc",
    "tensorflow.compat.v1.data.experimental.snapshot": "doc",
    "tensorflow.compat.v1.image.crop_to_bounding_box": "doc",
    "tensorflow.compat.v1.image.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.compat.v1.keras.callbacks.BaseLogger": "doc",
    "tensorflow.image.generate_bounding_box_proposals": "doc",
    "tensorflow.image.non_max_suppression_with_scores": "doc",
    "tensorflow.compat.v1.data.make_one_shot_iterator": "doc",
    "tensorflow.compat.v1.distribute.MirroredStrategy": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver": "doc",
    "tensorflow.compat.v1.image.extract_image_patches": "doc",
    "tensorflow.compat.v1.image.resize_image_with_pad": "doc",
    "tensorflow.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.data.experimental.choose_from_datasets": "doc",
    "tensorflow.data.experimental.get_next_as_optional": "doc",
    "tensorflow.data.experimental.sample_from_datasets": "doc",
    "tensorflow.distribute.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.image.stateless_random_flip_left_right": "doc",
    "tensorflow.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.compat.v1.data.experimental.CsvDataset": "doc",
    "tensorflow.compat.v1.data.experimental.SqlDataset": "doc",
    "tensorflow.compat.v1.data.experimental.take_while": "doc",
    "tensorflow.compat.v1.distribute.OneDeviceStrategy": "doc",
    "tensorflow.compat.v1.image.random_flip_left_right": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist": "doc",
    "tensorflow.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.data.experimental.parse_example_dataset": "doc",
    "tensorflow.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.compat.v1.data.FixedLengthRecordDataset": "doc",
    "tensorflow.compat.v1.image.resize_nearest_neighbor": "doc",
    "tensorflow.compat.v1.image.resize_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.load_data": "doc",
    "tensorflow.compat.v1.random.experimental.Algorithm": "doc",
    "tensorflow.compat.v1.saved_model.experimental.save": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist.load_data": "doc",
    "tensorflow.compat.v1.saved_model.is_valid_signature": "doc",
    "tensorflow.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.compat.v1.data.experimental.RandomDataset": "doc",
    "tensorflow.compat.v1.data.experimental.get_structure": "doc",
    "tensorflow.compat.v1.data.experimental.ignore_errors": "doc",
    "tensorflow.compat.v1.data.experimental.latency_stats": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch": "doc",
    "tensorflow.compat.v1.distribute.InputReplicationMode": "doc",
    "tensorflow.compat.v1.distribute.ReductionToOneDevice": "doc",
    "tensorflow.compat.v1.image.per_image_standardization": "doc",
    "tensorflow.compat.v1.saved_model.build_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.signature_constants": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils": "doc",
    "tensorflow.compat.v1.data.experimental.TFRecordWriter": "doc",
    "tensorflow.compat.v1.data.experimental.copy_to_device": "doc",
    "tensorflow.compat.v1.data.make_initializable_iterator": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_padded": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.load_data": "doc",
    "tensorflow.compat.v1.saved_model.contains_saved_model": "doc",
    "tensorflow.compat.v1.saved_model.main_op_with_restore": "doc",
    "tensorflow.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.compat.v1.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.compat.v1.data.experimental.StatsAggregator": "doc",
    "tensorflow.compat.v1.data.experimental.TensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_window": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.compat.v1.saved_model.predict_signature_def": "doc",
    "tensorflow.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.DatasetStructure": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_reducer": "doc",
    "tensorflow.compat.v1.data.experimental.make_csv_dataset": "doc",
    "tensorflow.compat.v1.image.combined_non_max_suppression": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_overlaps": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_function": "doc",
    "tensorflow.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.image.stateless_sample_distorted_bounding_box": "doc",
    "tensorflow.compat.v1.data.experimental.OptionalStructure": "doc",
    "tensorflow.compat.v1.data.experimental.enumerate_dataset": "doc",
    "tensorflow.compat.v1.distribute.in_cross_replica_context": "doc",
    "tensorflow.compat.v1.image.resize_image_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.image.sample_distorted_bounding_box": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.compat.v1.data.experimental.get_single_element": "doc",
    "tensorflow.compat.v1.data.experimental.prefetch_to_device": "doc",
    "tensorflow.compat.v1.data.experimental.rejection_resample": "doc",
    "tensorflow.compat.v1.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.compat.v1.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.compat.v1.distribute.experimental_set_strategy": "doc",
    "tensorflow.compat.v1.saved_model.regression_signature_def": "doc",
    "tensorflow.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.compat.v1.image.generate_bounding_box_proposals": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_with_scores": "doc",
    "tensorflow.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.compat.v1.data.experimental.TensorArrayStructure": "doc",
    "tensorflow.compat.v1.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.compat.v1.data.experimental.choose_from_datasets": "doc",
    "tensorflow.compat.v1.data.experimental.get_next_as_optional": "doc",
    "tensorflow.compat.v1.data.experimental.sample_from_datasets": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.compat.v1.data.experimental.RaggedTensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.SparseTensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.compat.v1.data.experimental.parse_example_dataset": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.compat.v1.saved_model.get_tensor_from_tensor_info": "doc",
    "tensorflow.compat.v1.saved_model.maybe_saved_model_directory": "doc",
    "tensorflow.compat.v1.saved_model.classification_signature_def": "doc",
    "tensorflow.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.compat.v1.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.compat.v1.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.compat.v1.saved_model.utils.get_tensor_from_tensor_info": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.compat.v1.saved_model.loader.maybe_saved_model_directory": "doc",
    "tensorflow.compat.v1.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.compat.v1.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.is_valid_signature": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.compat.v1.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.build_signature_def": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch_with_legacy_function": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.predict_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.regression_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.classification_signature_def": "doc",
    "tensorflow.raw_ops.ControlTrigger": "doc",
    "tensorflow.raw_ops.OrderedMapSize": "doc",
    "tensorflow.compat.v1.assert_integer": "doc",
    "tensorflow.compat.v1.random_poisson": "doc",
    "tensorflow.compat.v1.sparse_minimum": "doc",
    "tensorflow.raw_ops.BroadcastGradientArgs": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DropoutWrapper": "doc",
    "tensorflow.compat.v1.tpu.experimental.FtrlParameters": "doc",
    "tensorflow.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilterV2": "doc",
    "tensorflow.raw_ops.ReaderSerializeStateV2": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.truncatemod": "doc",
    "tensorflow.random.categorical": "doc",
    "tensorflow.raw_ops.StringLower": "doc",
    "tensorflow.raw_ops.StringUpper": "doc",
    "tensorflow.raw_ops.TruncateDiv": "doc",
    "tensorflow.debugging.assert_rank": "doc",
    "tensorflow.compat.v1.assert_rank": "doc",
    "tensorflow.compat.v1.fingerprint": "doc",
    "tensorflow.compat.v1.matrix_diag": "doc",
    "tensorflow.compat.v1.scatter_add": "doc",
    "tensorflow.compat.v1.scatter_div": "doc",
    "tensorflow.compat.v1.truncatemod": "doc",
    "tensorflow.math.special.fresnel_sin": "doc",
    "tensorflow.compat.v1.io.write_graph": "doc",
    "tensorflow.compat.v1.nn.dynamic_rnn": "doc",
    "tensorflow.keras.backend.set_epsilon": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag": "doc",
    "tensorflow.compat.v1.random.categorical": "doc",
    "tensorflow.experimental.numpy.bitwise_and": "doc",
    "tensorflow.compat.v1.debugging.assert_rank": "doc",
    "tensorflow.compat.v1.math.special.fresnel_sin": "doc",
    "tensorflow.compat.v1.keras.backend.get_session": "doc",
    "tensorflow.compat.v1.keras.backend.set_epsilon": "doc",
    "tensorflow.compat.v1.keras.backend.set_session": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.dynamic_rnn": "doc",
    "tensorflow.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.raw_ops.StatsAggregatorSetSummaryWriter": "doc",
    "tensorflow.compat.v1.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.dimension_at_index": "doc",
    "tensorflow.debugging.assert_positive": "doc",
    "tensorflow.errors.AlreadyExistsError": "doc",
    "tensorflow.errors.UnimplementedError": "doc",
    "tensorflow.linalg.LinearOperatorDiag": "doc",
    "tensorflow.raw_ops.CloseSummaryWriter": "doc",
    "tensorflow.raw_ops.CollectiveGatherV2": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsSize": "doc",
    "tensorflow.raw_ops.FlushSummaryWriter": "doc",
    "tensorflow.raw_ops.MapAndBatchDataset": "doc",
    "tensorflow.raw_ops.ResizeBilinearGrad": "doc",
    "tensorflow.raw_ops.TPUPartitionedCall": "doc",
    "tensorflow.compat.v1.dimension_at_index": "doc",
    "tensorflow.compat.v1.sparse_placeholder": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4Grad": "doc",
    "tensorflow.compat.v1.compat.dimension_at_index": "doc",
    "tensorflow.compat.v1.debugging.assert_positive": "doc",
    "tensorflow.compat.v1.errors.AlreadyExistsError": "doc",
    "tensorflow.compat.v1.errors.UnimplementedError": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorDiag": "doc",
    "tensorflow.compat.v1.losses.mean_pairwise_squared_error": "doc",
    "tensorflow.nn.batch_normalization": "doc",
    "tensorflow.raw_ops.SparseSparseMinimum": "doc",
    "tensorflow.compat.v1.trainable_variables": "doc",
    "tensorflow.compat.v1.nn.batch_normalization": "doc",
    "tensorflow.compat.v1.layers.batch_normalization": "doc",
    "tensorflow.compat.v1.CriticalSection": "doc",
    "tensorflow.compat.v1.uniform_unit_scaling_initializer": "doc",
    "tensorflow.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV3": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4": "doc",
    "tensorflow.raw_ops.QuantizedResizeBilinear": "doc",
    "tensorflow.raw_ops.SparseMatrixOrderingAMD": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmaxGrad": "doc",
    "tensorflow.raw_ops.StatefulPartitionedCall": "doc",
    "tensorflow.raw_ops.UniformCandidateSampler": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.dynamic_stitch": "doc",
    "tensorflow.io.TFRecordWriter": "doc",
    "tensorflow.linalg.LinearOperator": "doc",
    "tensorflow.raw_ops.FlatMapDataset": "doc",
    "tensorflow.raw_ops.ReadVariableOp": "doc",
    "tensorflow.compat.v1.dynamic_stitch": "doc",
    "tensorflow.compat.v1.sparse_reorder": "doc",
    "tensorflow.compat.v1.io.TFRecordWriter": "doc",
    "tensorflow.compat.v1.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.linalg.LinearOperator": "doc",
    "tensorflow.compat.v1.app.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_integer": "doc",
    "tensorflow.raw_ops.ParameterizedTruncatedNormal": "doc",
    "tensorflow.raw_ops.ResourceApplyAdamWithAmsgrad": "doc",
    "tensorflow.compat.v1.assert_variables_initialized": "doc",
    "tensorflow.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.raw_ops.IsBoostedTreesEnsembleInitialized": "doc",
    "tensorflow.compat.v1.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.nn.normalize_moments": "doc",
    "tensorflow.losses.categorical_hinge": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxes": "doc",
    "tensorflow.raw_ops.IteratorGetDevice": "doc",
    "tensorflow.raw_ops.MatrixDeterminant": "doc",
    "tensorflow.debugging.assert_all_finite": "doc",
    "tensorflow.keras.losses.categorical_hinge": "doc",
    "tensorflow.compat.v1.nn.normalize_moments": "doc",
    "tensorflow.compat.v1.test.StubOutForTesting": "doc",
    "tensorflow.compat.v1.layers.average_pooling1d": "doc",
    "tensorflow.compat.v1.layers.average_pooling2d": "doc",
    "tensorflow.compat.v1.layers.average_pooling3d": "doc",
    "tensorflow.compat.v1.debugging.assert_all_finite": "doc",
    "tensorflow.raw_ops.AnonymousIteratorV2": "doc",
    "tensorflow.raw_ops.BatchMatrixDiagPart": "doc",
    "tensorflow.compat.v1.losses.absolute_difference": "doc",
    "tensorflow.compat.v1.resource_loader.readahead_file_path": "doc",
    "tensorflow.nn.erosion2d": "doc",
    "tensorflow.sets.intersection": "doc",
    "tensorflow.raw_ops.ScatterNdMin": "doc",
    "tensorflow.keras.layers.ActivityRegularization": "doc",
    "tensorflow.compat.v1.test.compute_gradient_error": "doc",
    "tensorflow.compat.v1.keras.layers.ActivityRegularization": "doc",
    "tensorflow.keras.layers.experimental.SyncBatchNormalization": "doc",
    "tensorflow.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropFilter": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2D": "doc",
    "tensorflow.compat.v1.load_file_system_library": "doc",
    "tensorflow.compat.v1.nn.static_bidirectional_rnn": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.compat.v1.experimental.output_all_intermediates": "doc",
    "tensorflow.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.forward_compatibility_horizon": "doc",
    "tensorflow.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionWithOverlaps": "doc",
    "tensorflow.compat.v1.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.compat.v1.compat.forward_compatibility_horizon": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.compat.v1.app.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.debugging.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.debugging.assert_proper_iterable": "doc",
    "tensorflow.function": "doc",
    "tensorflow.nn.softsign": "doc",
    "tensorflow.math.floordiv": "doc",
    "tensorflow.math.softsign": "doc",
    "tensorflow.test.TestCase": "doc",
    "tensorflow.linalg.set_diag": "doc",
    "tensorflow.signal.fftshift": "doc",
    "tensorflow.sparse.to_dense": "doc",
    "tensorflow.raw_ops.Softsign": "doc",
    "tensorflow.keras.applications": "doc",
    "tensorflow.compat.v1.floordiv": "doc",
    "tensorflow.compat.v1.function": "doc",
    "tensorflow.compat.v1.hessians": "doc",
    "tensorflow.compat.v1.spectral": "doc",
    "tensorflow.losses.SquaredHinge": "doc",
    "tensorflow.sparse.to_indicator": "doc",
    "tensorflow.raw_ops.EditDistance": "doc",
    "tensorflow.raw_ops.RestoreSlice": "doc",
    "tensorflow.raw_ops.SdcaShrinkL1": "doc",
    "tensorflow.raw_ops.StridedSlice": "doc",
    "tensorflow.summary.trace_export": "doc",
    "tensorflow.compat.v1.nn.softsign": "doc",
    "tensorflow.compat.v1.MetaGraphDef": "doc",
    "tensorflow.compat.v1.get_variable": "doc",
    "tensorflow.compat.v1.spectral.dct": "doc",
    "tensorflow.compat.v1.spectral.fft": "doc",
    "tensorflow.compat.v1.string_split": "doc",
    "tensorflow.compat.v1.string_strip": "doc",
    "tensorflow.random.truncated_normal": "doc",
    "tensorflow.compat.v1.math.floordiv": "doc",
    "tensorflow.compat.v1.math.softsign": "doc",
    "tensorflow.compat.v1.spectral.idct": "doc",
    "tensorflow.compat.v1.spectral.ifft": "doc",
    "tensorflow.compat.v1.spectral.rfft": "doc",
    "tensorflow.compat.v1.test.TestCase": "doc",
    "tensorflow.keras.applications.VGG16": "doc",
    "tensorflow.keras.applications.VGG19": "doc",
    "tensorflow.keras.applications.vgg16": "doc",
    "tensorflow.keras.applications.vgg19": "doc",
    "tensorflow.compat.v1.spectral.fft2d": "doc",
    "tensorflow.compat.v1.spectral.fft3d": "doc",
    "tensorflow.compat.v1.spectral.irfft": "doc",
    "tensorflow.keras.applications.nasnet": "doc",
    "tensorflow.keras.applications.resnet": "doc",
    "tensorflow.keras.losses.SquaredHinge": "doc",
    "tensorflow.compat.v1.linalg.set_diag": "doc",
    "tensorflow.compat.v1.signal.fftshift": "doc",
    "tensorflow.compat.v1.sparse.to_dense": "doc",
    "tensorflow.compat.v1.spectral.ifft2d": "doc",
    "tensorflow.compat.v1.spectral.ifft3d": "doc",
    "tensorflow.compat.v1.spectral.rfft2d": "doc",
    "tensorflow.compat.v1.spectral.rfft3d": "doc",
    "tensorflow.compat.v1.matrix_band_part": "doc",
    "tensorflow.compat.v1.matrix_transpose": "doc",
    "tensorflow.compat.v1.serialize_tensor": "doc",
    "tensorflow.compat.v1.spectral.irfft2d": "doc",
    "tensorflow.compat.v1.spectral.irfft3d": "doc",
    "tensorflow.compat.v1.truncated_normal": "doc",
    "tensorflow.experimental.numpy.diagonal": "doc",
    "tensorflow.experimental.numpy.isneginf": "doc",
    "tensorflow.experimental.numpy.isposinf": "doc",
    "tensorflow.experimental.numpy.moveaxis": "doc",
    "tensorflow.keras.applications.ResNet50": "doc",
    "tensorflow.keras.applications.densenet": "doc",
    "tensorflow.keras.applications.resnet50": "doc",
    "tensorflow.keras.applications.MobileNet": "doc",
    "tensorflow.keras.applications.ResNet101": "doc",
    "tensorflow.keras.applications.ResNet152": "doc",
    "tensorflow.keras.applications.resnet_v2": "doc",
    "tensorflow.compat.v1.flags.tf_decorator": "doc",
    "tensorflow.compat.v1.keras.applications": "doc",
    "tensorflow.keras.applications.ResNet50V2": "doc",
    "tensorflow.compat.v1.io.serialize_tensor": "doc",
    "tensorflow.compat.v1.sparse.to_indicator": "doc",
    "tensorflow.keras.applications.DenseNet121": "doc",
    "tensorflow.keras.applications.DenseNet169": "doc",
    "tensorflow.keras.applications.DenseNet201": "doc",
    "tensorflow.keras.applications.MobileNetV2": "doc",
    "tensorflow.keras.applications.NASNetLarge": "doc",
    "tensorflow.keras.applications.ResNet101V2": "doc",
    "tensorflow.keras.applications.ResNet152V2": "doc",
    "tensorflow.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.test.TestCase.failureException": "doc",
    "tensorflow.compat.v1.UnconnectedGradients": "doc",
    "tensorflow.keras.applications.NASNetMobile": "doc",
    "tensorflow.keras.applications.efficientnet": "doc",
    "tensorflow.keras.applications.mobilenet_v2": "doc",
    "tensorflow.keras.applications.mobilenet_v3": "doc",
    "tensorflow.compat.v1.sets.set_intersection": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator": "doc",
    "tensorflow.keras.applications.EfficientNetB0": "doc",
    "tensorflow.keras.applications.EfficientNetB1": "doc",
    "tensorflow.keras.applications.EfficientNetB2": "doc",
    "tensorflow.keras.applications.EfficientNetB3": "doc",
    "tensorflow.keras.applications.EfficientNetB4": "doc",
    "tensorflow.keras.applications.EfficientNetB5": "doc",
    "tensorflow.keras.applications.EfficientNetB6": "doc",
    "tensorflow.keras.applications.EfficientNetB7": "doc",
    "tensorflow.keras.applications.imagenet_utils": "doc",
    "tensorflow.summary.experimental.write_raw_pb": "doc",
    "tensorflow.compat.v1.linalg.matrix_transpose": "doc",
    "tensorflow.compat.v1.linalg.triangular_solve": "doc",
    "tensorflow.compat.v1.random.truncated_normal": "doc",
    "tensorflow.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef": "doc",
    "tensorflow.compat.v1.keras.applications.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.VGG19": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19": "doc",
    "tensorflow.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet": "doc",
    "tensorflow.compat.v1.keras.losses.SquaredHinge": "doc",
    "tensorflow.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.densenet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50": "doc",
    "tensorflow.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNet": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2": "doc",
    "tensorflow.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50V2": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.compat.v1.MetaGraphDef.SignatureDefEntry": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetLarge": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152V2": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.compat.v1.test.TestCase.failureException": "doc",
    "tensorflow.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3": "doc",
    "tensorflow.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils": "doc",
    "tensorflow.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.keras.preprocessing.timeseries_dataset_from_array": "doc",
    "tensorflow.nn.lrn": "doc",
    "tensorflow.load_op_library": "doc",
    "tensorflow.raw_ops.LookupTableSize": "doc",
    "tensorflow.raw_ops.OrderedMapClear": "doc",
    "tensorflow.raw_ops.SamplingDataset": "doc",
    "tensorflow.raw_ops.SerializeTensor": "doc",
    "tensorflow.raw_ops.ShardedFilespec": "doc",
    "tensorflow.raw_ops.SnapshotDataset": "doc",
    "tensorflow.raw_ops.SparseSliceGrad": "doc",
    "tensorflow.raw_ops.StatefulUniform": "doc",
    "tensorflow.compat.v1.assert_positive": "doc",
    "tensorflow.compat.v1.load_op_library": "doc",
    "tensorflow.compat.v1.local_variables": "doc",
    "tensorflow.compat.v1.model_variables": "doc",
    "tensorflow.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.keras.layers.TimeDistributed": "doc",
    "tensorflow.raw_ops.ApplyGradientDescent": "doc",
    "tensorflow.raw_ops.ApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.CTCBeamSearchDecoder": "doc",
    "tensorflow.raw_ops.DataFormatVecPermute": "doc",
    "tensorflow.raw_ops.LogMatrixDeterminant": "doc",
    "tensorflow.raw_ops.RequantizePerChannel": "doc",
    "tensorflow.raw_ops.StatelessMultinomial": "doc",
    "tensorflow.raw_ops.TPUCompilationResult": "doc",
    "tensorflow.compat.v1.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.flags.ValidationError": "doc",
    "tensorflow.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.random.uniform_candidate_sampler": "doc",
    "tensorflow.raw_ops.AccumulatorNumAccumulated": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixComponents": "doc",
    "tensorflow.raw_ops.DeleteMultiDeviceIterator": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.app.flags.ValidationError": "doc",
    "tensorflow.compat.v1.TensorInfo.CompositeTensor": "doc",
    "tensorflow.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.compat.v1.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.compat.v1.keras.layers.TimeDistributed": "doc",
    "tensorflow.compat.v1.nn.uniform_candidate_sampler": "doc",
    "tensorflow.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.compat.v1.report_uninitialized_variables": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.compat.v1.random.uniform_candidate_sampler": "doc",
    "tensorflow.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.raw_ops.ThreadUnsafeUnigramCandidateSampler": "doc",
    "tensorflow.compat.v1.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.debugging.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.debugging.is_numeric_tensor": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.compat.v1.mixed_precision.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.raw_ops.SparseSegmentSumWithNumSegments": "doc",
    "tensorflow.raw_ops.LogUniformCandidateSampler": "doc",
    "tensorflow.raw_ops.SparseApplyProximalAdagrad": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_min": "doc",
    "tensorflow.feature_column.shared_embeddings": "doc",
    "tensorflow.nn.RNNCellDropoutWrapper": "doc",
    "tensorflow.math.reduce_euclidean_norm": "doc",
    "tensorflow.nest.assert_same_structure": "doc",
    "tensorflow.config.list_physical_devices": "doc",
    "tensorflow.config.run_functions_eagerly": "doc",
    "tensorflow.errors.PermissionDeniedError": "doc",
    "tensorflow.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.raw_ops.AddSparseToTensorsMap": "doc",
    "tensorflow.raw_ops.BarrierIncompleteSize": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantize": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighbor": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanGrad": "doc",
    "tensorflow.compat.v1.extract_image_patches": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.math.reduce_euclidean_norm": "doc",
    "tensorflow.compat.v1.nest.assert_same_structure": "doc",
    "tensorflow.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.compat.v1.config.list_physical_devices": "doc",
    "tensorflow.compat.v1.config.run_functions_eagerly": "doc",
    "tensorflow.compat.v1.errors.PermissionDeniedError": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.config.experimental.list_physical_devices": "doc",
    "tensorflow.compat.v1.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.compat.v1.keras.experimental.load_from_saved_model": "doc",
    "tensorflow.compat.v1.config.experimental.list_physical_devices": "doc",
    "tensorflow.raw_ops.RefNextIteration": "doc",
    "tensorflow.compat.v1.mixed_precision.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.math.is_non_decreasing": "doc",
    "tensorflow.compat.v1.is_non_decreasing": "doc",
    "tensorflow.keras.utils.get_source_inputs": "doc",
    "tensorflow.compat.v1.math.is_non_decreasing": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_solve": "doc",
    "tensorflow.compat.v1.debugging.is_non_decreasing": "doc",
    "tensorflow.compat.v1.keras.utils.get_source_inputs": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.linalg.tridiagonal_matmul": "doc",
    "tensorflow.raw_ops.WrapDatasetVariant": "doc",
    "tensorflow.compat.v1.matrix_determinant": "doc",
    "tensorflow.keras.layers.LayerNormalization": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_matmul": "doc",
    "tensorflow.compat.v1.python_io.tf_record_iterator": "doc",
    "tensorflow.compat.v1.keras.layers.LayerNormalization": "doc",
    "tensorflow.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.raw_ops.AdjustContrastv2": "doc",
    "tensorflow.raw_ops.ApproximateEqual": "doc",
    "tensorflow.raw_ops.AssignVariableOp": "doc",
    "tensorflow.raw_ops.CollectiveReduce": "doc",
    "tensorflow.raw_ops.ComputeBatchSize": "doc",
    "tensorflow.raw_ops.GetSessionTensor": "doc",
    "tensorflow.raw_ops.SelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.StridedSliceGrad": "doc",
    "tensorflow.raw_ops.TensorListGather": "doc",
    "tensorflow.raw_ops.TensorListResize": "doc",
    "tensorflow.compat.v1.global_variables": "doc",
    "tensorflow.compat.v1.string_to_number": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_proximity": "doc",
    "tensorflow.raw_ops.InfeedEnqueuePrelinearizedBuffer": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanWithNumSegments": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.compat.v1.app.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.losses.kullback_leibler_divergence": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompleted": "doc",
    "tensorflow.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.edit_distance": "doc",
    "tensorflow.raw_ops.MatchingFiles": "doc",
    "tensorflow.compat.v1.edit_distance": "doc",
    "tensorflow.compat.v1.saturate_cast": "doc",
    "tensorflow.compat.v1.strided_slice": "doc",
    "tensorflow.keras.layers.Bidirectional": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d": "doc",
    "tensorflow.compat.v1.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.keras.preprocessing": "doc",
    "tensorflow.compat.v1.errors.InternalError": "doc",
    "tensorflow.compat.v1.signal.kaiser_window": "doc",
    "tensorflow.compat.v1.signal.vorbis_window": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.app.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text": "doc",
    "tensorflow.compat.v1.keras.layers.Bidirectional": "doc",
    "tensorflow.compat.v1.keras.losses.squared_hinge": "doc",
    "tensorflow.compat.v1.keras.backend.clear_session": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence": "doc",
    "tensorflow.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.compat.v1.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.broadcast_static_shape": "doc",
    "tensorflow.raw_ops.AnonymousSeedGenerator": "doc",
    "tensorflow.raw_ops.BatchMatrixDeterminant": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToDense": "doc",
    "tensorflow.raw_ops.ConditionalAccumulator": "doc",
    "tensorflow.raw_ops.CropAndResizeGradBoxes": "doc",
    "tensorflow.raw_ops.CropAndResizeGradImage": "doc",
    "tensorflow.raw_ops.OrderedMapUnstageNoKey": "doc",
    "tensorflow.raw_ops.ShutdownDistributedTPU": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNGrad": "doc",
    "tensorflow.raw_ops.StatelessRandomUniform": "doc",
    "tensorflow.compat.v1.ConditionalAccumulator": "doc",
    "tensorflow.compat.v1.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.broadcast_static_shape": "doc",
    "tensorflow.compat.v1.sparse_fill_empty_rows": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeQuantileSummaries": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNWithNumSegments": "doc",
    "tensorflow.math.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.math.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.debugging.is_strictly_increasing": "doc",
    "tensorflow.debugging.assert_non_positive": "doc",
    "tensorflow.compat.v1.debugging.assert_non_positive": "doc",
    "tensorflow.nn.local_response_normalization": "doc",
    "tensorflow.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.raw_ops.AnonymousRandomSeedGenerator": "doc",
    "tensorflow.raw_ops.ApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsembleV2": "doc",
    "tensorflow.raw_ops.MaxIntraOpParallelismDataset": "doc",
    "tensorflow.raw_ops.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.nn.local_response_normalization": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.compat.v1.sparse.SparseConditionalAccumulator": "doc",
    "tensorflow.raw_ops.FresnelSin": "doc",
    "tensorflow.raw_ops.IteratorV2": "doc",
    "tensorflow.IndexedSlicesSpec": "doc",
    "tensorflow.convert_to_tensor": "doc",
    "tensorflow.executing_eagerly": "doc",
    "tensorflow.grad_pass_through": "doc",
    "tensorflow.losses.MeanAbsoluteError": "doc",
    "tensorflow.random.stateless_uniform": "doc",
    "tensorflow.raw_ops.AssertNextDataset": "doc",
    "tensorflow.raw_ops.DatasetToTFRecord": "doc",
    "tensorflow.raw_ops.DecodeJSONExample": "doc",
    "tensorflow.raw_ops.DeserializeSparse": "doc",
    "tensorflow.raw_ops.LookupTableInsert": "doc",
    "tensorflow.raw_ops.PrelinearizeTuple": "doc",
    "tensorflow.raw_ops.ResizeBicubicGrad": "doc",
    "tensorflow.raw_ops.SerializeIterator": "doc",
    "tensorflow.raw_ops.SnapshotDatasetV2": "doc",
    "tensorflow.raw_ops.SparseSegmentMean": "doc",
    "tensorflow.raw_ops.SquaredDifference": "doc",
    "tensorflow.raw_ops.TensorArraySizeV2": "doc",
    "tensorflow.raw_ops.TensorArraySizeV3": "doc",
    "tensorflow.raw_ops.TensorListReserve": "doc",
    "tensorflow.raw_ops.TensorListScatter": "doc",
    "tensorflow.compat.v1.IndexedSlicesSpec": "doc",
    "tensorflow.compat.v1.convert_to_tensor": "doc",
    "tensorflow.compat.v1.executing_eagerly": "doc",
    "tensorflow.compat.v1.grad_pass_through": "doc",
    "tensorflow.compat.v1.is_numeric_tensor": "doc",
    "tensorflow.keras.utils.CustomObjectScope": "doc",
    "tensorflow.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.keras.layers.AdditiveAttention": "doc",
    "tensorflow.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.random.stateless_uniform": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum_sparse": "doc",
    "tensorflow.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.app.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.keras.utils.CustomObjectScope": "doc",
    "tensorflow.compat.v1.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.compat.v1.keras.layers.AdditiveAttention": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.raw_ops.ExperimentalNonSerializableDataset": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.raw_ops.SparseApplyProximalGradientDescent": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.debugging": "doc",
    "tensorflow.gather_nd": "doc",
    "tensorflow.debugging.Assert": "doc",
    "tensorflow.losses.Reduction": "doc",
    "tensorflow.random.Generator": "doc",
    "tensorflow.signal.ifftshift": "doc",
    "tensorflow.raw_ops.AssignAdd": "doc",
    "tensorflow.raw_ops.AssignSub": "doc",
    "tensorflow.raw_ops.LeftShift": "doc",
    "tensorflow.raw_ops.ZerosLike": "doc",
    "tensorflow.summary.histogram": "doc",
    "tensorflow.summary.record_if": "doc",
    "tensorflow.compat.v1.Dimension": "doc",
    "tensorflow.compat.v1.GraphKeys": "doc",
    "tensorflow.compat.v1.debugging": "doc",
    "tensorflow.compat.v1.floor_div": "doc",
    "tensorflow.compat.v1.gather_nd": "doc",
    "tensorflow.compat.v1.python_io": "doc",
    "tensorflow.compat.v1.tensordot": "doc",
    "tensorflow.debugging.assert_less": "doc",
    "tensorflow.debugging.assert_near": "doc",
    "tensorflow.debugging.assert_type": "doc",
    "tensorflow.debugging.assert_equal": "doc",
    "tensorflow.debugging.experimental": "doc",
    "tensorflow.keras.layers.Embedding": "doc",
    "tensorflow.keras.losses.Reduction": "doc",
    "tensorflow.debugging.assert_scalar": "doc",
    "tensorflow.debugging.assert_shapes": "doc",
    "tensorflow.debugging.assert_greater": "doc",
    "tensorflow.debugging.check_numerics": "doc",
    "tensorflow.debugging.assert_negative": "doc",
    "tensorflow.compat.v1.flags.text_wrap": "doc",
    "tensorflow.compat.v1.manip.gather_nd": "doc",
    "tensorflow.tpu.experimental.embedding": "doc",
    "tensorflow.compat.v1.debugging.Assert": "doc",
    "tensorflow.compat.v1.debugging.is_nan": "doc",
    "tensorflow.compat.v1.linalg.tensordot": "doc",
    "tensorflow.compat.v1.losses.Reduction": "doc",
    "tensorflow.compat.v1.random.Generator": "doc",
    "tensorflow.compat.v1.signal.ifftshift": "doc",
    "tensorflow.debugging.assert_less_equal": "doc",
    "tensorflow.debugging.assert_none_equal": "doc",
    "tensorflow.compat.v1.NodeDef.AttrEntry": "doc",
    "tensorflow.compat.v1.summary.histogram": "doc",
    "tensorflow.compat.v1.summary.merge_all": "doc",
    "tensorflow.experimental.numpy.isrealobj": "doc",
    "tensorflow.experimental.numpy.tensordot": "doc",
    "tensorflow.debugging.assert_non_negative": "doc",
    "tensorflow.experimental.dlpack.to_dlpack": "doc",
    "tensorflow.random.experimental.Generator": "doc",
    "tensorflow.compat.v1.app.flags.text_wrap": "doc",
    "tensorflow.debugging.assert_greater_equal": "doc",
    "tensorflow.debugging.assert_rank_at_least": "doc",
    "tensorflow.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.debugging.enable_check_numerics": "doc",
    "tensorflow.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.compat.v1.debugging.assert_less": "doc",
    "tensorflow.compat.v1.debugging.assert_near": "doc",
    "tensorflow.compat.v1.debugging.assert_type": "doc",
    "tensorflow.debugging.disable_check_numerics": "doc",
    "tensorflow.compat.v1.debugging.assert_equal": "doc",
    "tensorflow.compat.v1.debugging.experimental": "doc",
    "tensorflow.compat.v1.keras.layers.Embedding": "doc",
    "tensorflow.debugging.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.debugging.assert_scalar": "doc",
    "tensorflow.compat.v1.debugging.assert_shapes": "doc",
    "tensorflow.debugging.get_log_device_placement": "doc",
    "tensorflow.debugging.set_log_device_placement": "doc",
    "tensorflow.compat.v1.debugging.assert_greater": "doc",
    "tensorflow.compat.v1.debugging.check_numerics": "doc",
    "tensorflow.compat.v1.flags.register_validator": "doc",
    "tensorflow.compat.v1.debugging.assert_negative": "doc",
    "tensorflow.compat.v1.python_io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding": "doc",
    "tensorflow.compat.v1.debugging.assert_less_equal": "doc",
    "tensorflow.compat.v1.debugging.assert_none_equal": "doc",
    "tensorflow.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.compat.v1.app.flags.register_validator": "doc",
    "tensorflow.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.compat.v1.debugging.assert_non_negative": "doc",
    "tensorflow.compat.v1.random.experimental.Generator": "doc",
    "tensorflow.compat.v1.debugging.assert_greater_equal": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.compat.v1.debugging.enable_check_numerics": "doc",
    "tensorflow.compat.v1.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.compat.v1.debugging.disable_check_numerics": "doc",
    "tensorflow.compat.v1.debugging.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.python_io.TFRecordCompressionType": "doc",
    "tensorflow.compat.v1.debugging.get_log_device_placement": "doc",
    "tensorflow.compat.v1.debugging.set_log_device_placement": "doc",
    "tensorflow.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.compat.v1.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.compat.v1.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.RegisterGradient": "doc",
    "tensorflow.io.serialize_tensor": "doc",
    "tensorflow.raw_ops.SymbolicGradient": "doc",
    "tensorflow.raw_ops.TensorScatterMin": "doc",
    "tensorflow.raw_ops.AccumulatorApplyGradient": "doc",
    "tensorflow.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.compat.v1.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.broadcast_dynamic_shape": "doc",
    "tensorflow.io.deserialize_many_sparse": "doc",
    "tensorflow.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.errors.FailedPreconditionError": "doc",
    "tensorflow.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.linalg.banded_triangular_solve": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgs": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVars": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReader": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDataset": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRowsGrad": "doc",
    "tensorflow.raw_ops.TPUEmbeddingActivations": "doc",
    "tensorflow.compat.v1.FixedLengthRecordReader": "doc",
    "tensorflow.compat.v1.broadcast_dynamic_shape": "doc",
    "tensorflow.compat.v1.deserialize_many_sparse": "doc",
    "tensorflow.compat.v1.io.deserialize_many_sparse": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.compat.v1.nn.static_state_saving_rnn": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.errors.FailedPreconditionError": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.raw_ops.BoostedTreesSerializeEnsemble": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToSparseTensor": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompletedV2": "doc",
    "tensorflow.raw_ops.RequantizationRangePerChannel": "doc",
    "tensorflow.raw_ops.SparseAccumulatorTakeGradient": "doc",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.nn.log_uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropFilter": "doc",
    "tensorflow.compat.v1.losses.get_regularization_loss": "doc",
    "tensorflow.raw_ops.InvertPermutation": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.QuantizedBatchNormWithGlobalNormalization": "doc",
    "tensorflow.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.raw_ops.IsBoostedTreesQuantileStreamResourceInitialized": "doc",
    "tensorflow.raw_ops.BatchMatrixBandPart": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxesV2": "doc",
    "tensorflow.raw_ops.HistogramFixedWidth": "doc",
    "tensorflow.raw_ops.RequantizationRange": "doc",
    "tensorflow.sparse.segment_sqrt_n": "doc",
    "tensorflow.compat.v1.HistogramProto": "doc",
    "tensorflow.compat.v1.assert_greater": "doc",
    "tensorflow.compat.v1.feature_column": "doc",
    "tensorflow.compat.v1.get_collection": "doc",
    "tensorflow.compat.v1.matching_files": "doc",
    "tensorflow.compat.v1.scatter_nd_add": "doc",
    "tensorflow.compat.v1.scatter_update": "doc",
    "tensorflow.compat.v1.sparse_maximum": "doc",
    "tensorflow.compat.v1.vectorized_map": "doc",
    "tensorflow.keras.utils.to_categorical": "doc",
    "tensorflow.compat.v1.io.matching_files": "doc",
    "tensorflow.compat.v1.nn.conv_transpose": "doc",
    "tensorflow.compat.v1.tpu.batch_parallel": "doc",
    "tensorflow.compat.v1.sets.set_difference": "doc",
    "tensorflow.compat.v1.sparse.segment_sqrt_n": "doc",
    "tensorflow.compat.v1.summary.tensor_summary": "doc",
    "tensorflow.compat.v1.sysconfig.get_build_info": "doc",
    "tensorflow.compat.v1.sysconfig.get_link_flags": "doc",
    "tensorflow.compat.v1.RunMetadata.FunctionGraphs": "doc",
    "tensorflow.compat.v1.keras.utils.to_categorical": "doc",
    "tensorflow.compat.v1.feature_column.linear_model": "doc",
    "tensorflow.compat.v1.feature_column.crossed_column": "doc",
    "tensorflow.compat.v1.feature_column.numeric_column": "doc",
    "tensorflow.compat.v1.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.compat.v1.feature_column.embedding_column": "doc",
    "tensorflow.compat.v1.feature_column.indicator_column": "doc",
    "tensorflow.compat.v1.feature_column.bucketized_column": "doc",
    "tensorflow.compat.v1.feature_column.make_parse_example_spec": "doc",
    "tensorflow.compat.v1.feature_column.sequence_numeric_column": "doc",
    "tensorflow.compat.v1.feature_column.shared_embedding_columns": "doc",
    "tensorflow.compat.v1.feature_column.weighted_categorical_column": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.math.squared_difference": "doc",
    "tensorflow.test.is_built_with_rocm": "doc",
    "tensorflow.queue.RandomShuffleQueue": "doc",
    "tensorflow.compat.forward_compatible": "doc",
    "tensorflow.losses.mean_squared_error": "doc",
    "tensorflow.random.stateless_binomial": "doc",
    "tensorflow.raw_ops.BatchMatrixSolveLs": "doc",
    "tensorflow.raw_ops.CollectiveReduceV2": "doc",
    "tensorflow.raw_ops.ConcatenateDataset": "doc",
    "tensorflow.raw_ops.DataServiceDataset": "doc",
    "tensorflow.raw_ops.DummySeedGenerator": "doc",
    "tensorflow.raw_ops.FusedBatchNormGrad": "doc",
    "tensorflow.raw_ops.LoadAndRemapMatrix": "doc",
    "tensorflow.raw_ops.PaddedBatchDataset": "doc",
    "tensorflow.raw_ops.ParallelMapDataset": "doc",
    "tensorflow.raw_ops.RandomShuffleQueue": "doc",
    "tensorflow.raw_ops.SparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.SparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.SparseMatrixMatMul": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtN": "doc",
    "tensorflow.raw_ops.StatefulUniformInt": "doc",
    "tensorflow.raw_ops.TPUOrdinalSelector": "doc",
    "tensorflow.raw_ops.TPUReplicatedInput": "doc",
    "tensorflow.compat.v1.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.enable_v2_behavior": "doc",
    "tensorflow.compat.v1.get_collection_ref": "doc",
    "tensorflow.compat.v1.get_session_tensor": "doc",
    "tensorflow.compat.v1.squared_difference": "doc",
    "tensorflow.keras.utils.get_custom_objects": "doc",
    "tensorflow.keras.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.io.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.io.tf_record_iterator": "doc",
    "tensorflow.raw_ops.AccumulatorSetGlobalStep": "doc",
    "tensorflow.raw_ops.AssertCardinalityDataset": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseMatMul": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformV2": "doc",
    "tensorflow.raw_ops.TensorStridedSliceUpdate": "doc",
    "tensorflow.compat.v1.math.squared_difference": "doc",
    "tensorflow.compat.v1.test.is_built_with_rocm": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.queue.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.compat.forward_compatible": "doc",
    "tensorflow.compat.v1.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.random.stateless_binomial": "doc",
    "tensorflow.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRelu": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.app.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.keras.utils.get_custom_objects": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_error": "doc",
    "tensorflow.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalizationGrad": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndDequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRequantize": "doc",
    "tensorflow.compat.v1.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.compat.v1.errors.error_code_from_exception_type": "doc",
    "tensorflow.compat.v1.keras.layers.enable_v2_dtype_behavior": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.compat.v1.app.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.VariableAggregation": "doc",
    "tensorflow.compat.v1.get_default_session": "doc",
    "tensorflow.keras.utils.get_registered_name": "doc",
    "tensorflow.compat.v1.nn.fractional_avg_pool": "doc",
    "tensorflow.compat.v1.nn.fractional_max_pool": "doc",
    "tensorflow.compat.v1.tpu.outside_compilation": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_name": "doc",
    "tensorflow.raw_ops.IteratorToStringHandle": "doc",
    "tensorflow.bitcast": "doc",
    "tensorflow.raw_ops.Bitcast": "doc",
    "tensorflow.raw_ops.PrintV2": "doc",
    "tensorflow.raw_ops.MatrixBandPart": "doc",
    "tensorflow.compat.v1.verify_tensor_all_finite": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.StatelessParameterizedTruncatedNormal": "doc",
    "tensorflow.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.raw_ops.BoostedTreesDeserializeEnsemble": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.StatelessRandomGetKeyCounterAlg": "doc",
    "tensorflow.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.resource_loader.get_root_dir_with_all_resources": "doc",
    "tensorflow.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonical": "doc",
    "tensorflow.raw_ops.DeleteRandomSeedGenerator": "doc",
    "tensorflow.raw_ops.ExperimentalRandomDataset": "doc",
    "tensorflow.raw_ops.ExperimentalUniqueDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReaderV2": "doc",
    "tensorflow.raw_ops.IteratorGetNextAsOptional": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighborGrad": "doc",
    "tensorflow.raw_ops.SendTPUEmbeddingGradients": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDatasetV2": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformInt": "doc",
    "tensorflow.compat.v1.losses.get_regularization_losses": "doc",
    "tensorflow.compat.v1.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.compat.v1.keras.layers.disable_v2_dtype_behavior": "doc",
    "tensorflow.config.get_visible_devices": "doc",
    "tensorflow.config.set_visible_devices": "doc",
    "tensorflow.losses.binary_crossentropy": "doc",
    "tensorflow.losses.mean_absolute_error": "doc",
    "tensorflow.raw_ops.AssignAddVariableOp": "doc",
    "tensorflow.raw_ops.AssignSubVariableOp": "doc",
    "tensorflow.raw_ops.CollectiveBcastRecv": "doc",
    "tensorflow.raw_ops.CollectiveBcastSend": "doc",
    "tensorflow.raw_ops.CumulativeLogsumexp": "doc",
    "tensorflow.raw_ops.DeleteSessionTensor": "doc",
    "tensorflow.raw_ops.DeserializeIterator": "doc",
    "tensorflow.raw_ops.ExtractImagePatches": "doc",
    "tensorflow.raw_ops.LookupTableInsertV2": "doc",
    "tensorflow.raw_ops.LookupTableRemoveV2": "doc",
    "tensorflow.raw_ops.MultiDeviceIterator": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV3": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV4": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV5": "doc",
    "tensorflow.raw_ops.ParseExampleDataset": "doc",
    "tensorflow.raw_ops.SparseApplyAdadelta": "doc",
    "tensorflow.raw_ops.SparseApplyMomentum": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseAdd": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseDiv": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseMul": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRows": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmax": "doc",
    "tensorflow.raw_ops.SparseSparseMaximum": "doc",
    "tensorflow.raw_ops.TPUReplicatedOutput": "doc",
    "tensorflow.raw_ops.TensorListScatterV2": "doc",
    "tensorflow.compat.v1.assert_non_positive": "doc",
    "tensorflow.compat.v1.disable_v2_behavior": "doc",
    "tensorflow.compat.v1.sparse_segment_mean": "doc",
    "tensorflow.keras.losses.binary_crossentropy": "doc",
    "tensorflow.keras.losses.mean_absolute_error": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_string": "doc",
    "tensorflow.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.compat.v1.config.get_visible_devices": "doc",
    "tensorflow.compat.v1.config.set_visible_devices": "doc",
    "tensorflow.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.config.experimental.get_visible_devices": "doc",
    "tensorflow.config.experimental.set_visible_devices": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_string": "doc",
    "tensorflow.compat.v1.keras.losses.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_error": "doc",
    "tensorflow.compat.v1.resource_loader.get_data_files_path": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.compat.v1.config.experimental.get_visible_devices": "doc",
    "tensorflow.compat.v1.config.experimental.set_visible_devices": "doc",
    "tensorflow.assert_greater": "doc",
    "tensorflow.io.matching_files": "doc",
    "tensorflow.raw_ops.AdjustContrast": "doc",
    "tensorflow.raw_ops.DeleteIterator": "doc",
    "tensorflow.raw_ops.GuaranteeConst": "doc",
    "tensorflow.raw_ops.MatrixDiagPart": "doc",
    "tensorflow.raw_ops.SparseBincount": "doc",
    "tensorflow.raw_ops.StringToNumber": "doc",
    "tensorflow.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalization": "doc",
    "tensorflow.raw_ops.ExperimentalMatchingFilesDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSlidingWindowDataset": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBias": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.case": "doc",
    "tensorflow.cast": "doc",
    "tensorflow.lite": "doc",
    "tensorflow.math": "doc",
    "tensorflow.DType": "doc",
    "tensorflow.asinh": "doc",
    "tensorflow.atan2": "doc",
    "tensorflow.atanh": "doc",
    "tensorflow.audio": "doc",
    "tensorflow.range": "doc",
    "tensorflow.slice": "doc",
    "tensorflow.split": "doc",
    "tensorflow.tuple": "doc",
    "tensorflow.types": "doc",
    "tensorflow.Assert": "doc",
    "tensorflow.argmax": "doc",
    "tensorflow.compat": "doc",
    "tensorflow.cumsum": "doc",
    "tensorflow.map_fn": "doc",
    "tensorflow.ragged": "doc",
    "tensorflow.random": "doc",
    "tensorflow.sparse": "doc",
    "tensorflow.unique": "doc",
    "tensorflow.reshape": "doc",
    "tensorflow.sigmoid": "doc",
    "tensorflow.squeeze": "doc",
    "tensorflow.summary": "doc",
    "tensorflow.TypeSpec": "doc",
    "tensorflow.io.gfile": "doc",
    "tensorflow.linspace": "doc",
    "tensorflow.math.abs": "doc",
    "tensorflow.math.add": "doc",
    "tensorflow.math.cos": "doc",
    "tensorflow.math.erf": "doc",
    "tensorflow.math.exp": "doc",
    "tensorflow.math.log": "doc",
    "tensorflow.math.mod": "doc",
    "tensorflow.math.pow": "doc",
    "tensorflow.meshgrid": "doc",
    "tensorflow.is_tensor": "doc",
    "tensorflow.math.acos": "doc",
    "tensorflow.math.ceil": "doc",
    "tensorflow.math.conj": "doc",
    "tensorflow.math.cosh": "doc",
    "tensorflow.math.erfc": "doc",
    "tensorflow.math.imag": "doc",
    "tensorflow.math.less": "doc",
    "tensorflow.math.real": "doc",
    "tensorflow.math.sign": "doc",
    "tensorflow.math.sinh": "doc",
    "tensorflow.math.sqrt": "doc",
    "tensorflow.math.zeta": "doc",
    "tensorflow.ones_like": "doc",
    "tensorflow.compat.v1": "doc",
    "tensorflow.get_logger": "doc",
    "tensorflow.io.is_jpeg": "doc",
    "tensorflow.linalg.det": "doc",
    "tensorflow.losses.mae": "doc",
    "tensorflow.losses.mse": "doc",
    "tensorflow.math.acosh": "doc",
    "tensorflow.math.add_n": "doc",
    "tensorflow.math.angle": "doc",
    "tensorflow.math.asinh": "doc",
    "tensorflow.math.atan2": "doc",
    "tensorflow.math.atanh": "doc",
    "tensorflow.math.equal": "doc",
    "tensorflow.math.expm1": "doc",
    "tensorflow.math.floor": "doc",
    "tensorflow.math.lbeta": "doc",
    "tensorflow.math.log1p": "doc",
    "tensorflow.math.round": "doc",
    "tensorflow.math.rsqrt": "doc",
    "tensorflow.math.top_k": "doc",
    "tensorflow.math.xdivy": "doc",
    "tensorflow.math.xlogy": "doc",
    "tensorflow.nn.dropout": "doc",
    "tensorflow.nn.moments": "doc",
    "tensorflow.nn.sigmoid": "doc",
    "tensorflow.nn.softmax": "doc",
    "tensorflow.reduce_min": "doc",
    "tensorflow.scalar_mul": "doc",
    "tensorflow.scatter_nd": "doc",
    "tensorflow.signal.dct": "doc",
    "tensorflow.sparse.add": "doc",
    "tensorflow.sparse.eye": "doc",
    "tensorflow.zeros_like": "doc",
    "tensorflow.expand_dims": "doc",
    "tensorflow.keras.utils": "doc",
    "tensorflow.linalg.diag": "doc",
    "tensorflow.linalg.expm": "doc",
    "tensorflow.linalg.pinv": "doc",
    "tensorflow.losses.msle": "doc",
    "tensorflow.math.argmax": "doc",
    "tensorflow.math.cumsum": "doc",
    "tensorflow.math.is_nan": "doc",
    "tensorflow.math.square": "doc",
    "tensorflow.nn.max_pool": "doc",
    "tensorflow.raw_ops.Add": "doc",
    "tensorflow.signal.idct": "doc",
    "tensorflow.signal.mdct": "doc",
    "tensorflow.sparse.mask": "doc",
    "tensorflow.OptionalSpec": "doc",
    "tensorflow.RaggedTensor": "doc",
    "tensorflow.SparseTensor": "doc",
    "tensorflow.keras.layers": "doc",
    "tensorflow.linalg.sqrtm": "doc",
    "tensorflow.load_library": "doc",
    "tensorflow.losses.Hinge": "doc",
    "tensorflow.losses.Huber": "doc",
    "tensorflow.losses.hinge": "doc",
    "tensorflow.losses.huber": "doc",
    "tensorflow.math.cumprod": "doc",
    "tensorflow.math.digamma": "doc",
    "tensorflow.math.polyval": "doc",
    "tensorflow.math.sigmoid": "doc",
    "tensorflow.math.softmax": "doc",
    "tensorflow.math.special": "doc",
    "tensorflow.math.xlog1py": "doc",
    "tensorflow.ragged.cross": "doc",
    "tensorflow.ragged.range": "doc",
    "tensorflow.ragged.stack": "doc",
    "tensorflow.raw_ops.AddN": "doc",
    "tensorflow.raw_ops.Case": "doc",
    "tensorflow.raw_ops.Cast": "doc",
    "tensorflow.raw_ops.Fact": "doc",
    "tensorflow.raw_ops.NoOp": "doc",
    "tensorflow.raw_ops.Save": "doc",
    "tensorflow.raw_ops.Tile": "doc",
    "tensorflow.searchsorted": "doc",
    "tensorflow.sparse.cross": "doc",
    "tensorflow.sparse.slice": "doc",
    "tensorflow.sparse.split": "doc",
    "tensorflow.summary.text": "doc",
    "tensorflow.compat.v1.io": "doc",
    "tensorflow.compat.v1.nn": "doc",
    "tensorflow.compat.v1.qr": "doc",
    "tensorflow.IndexedSlices": "doc",
    "tensorflow.io.decode_gif": "doc",
    "tensorflow.io.gfile.copy": "doc",
    "tensorflow.io.gfile.glob": "doc",
    "tensorflow.io.gfile.stat": "doc",
    "tensorflow.io.gfile.walk": "doc",
    "tensorflow.io.write_file": "doc",
    "tensorflow.math.bincount": "doc",
    "tensorflow.math.floormod": "doc",
    "tensorflow.math.in_top_k": "doc",
    "tensorflow.math.softplus": "doc",
    "tensorflow.nn.max_pool1d": "doc",
    "tensorflow.nn.max_pool2d": "doc",
    "tensorflow.nn.max_pool3d": "doc",
    "tensorflow.random.normal": "doc",
    "tensorflow.raw_ops.Abort": "doc",
    "tensorflow.raw_ops.AddV2": "doc",
    "tensorflow.raw_ops.Angle": "doc",
    "tensorflow.raw_ops.Asinh": "doc",
    "tensorflow.raw_ops.Atan2": "doc",
    "tensorflow.raw_ops.Atanh": "doc",
    "tensorflow.raw_ops.Batch": "doc",
    "tensorflow.raw_ops.Expm1": "doc",
    "tensorflow.raw_ops.Range": "doc",
    "tensorflow.raw_ops.Slice": "doc",
    "tensorflow.raw_ops.Split": "doc",
    "tensorflow.raw_ops.Stage": "doc",
    "tensorflow.raw_ops.While": "doc",
    "tensorflow.raw_ops.Xdivy": "doc",
    "tensorflow.sparse.concat": "doc",
    "tensorflow.summary.audio": "doc",
    "tensorflow.summary.flush": "doc",
    "tensorflow.summary.write": "doc",
    "tensorflow.compat.v1.abs": "doc",
    "tensorflow.compat.v1.add": "doc",
    "tensorflow.compat.v1.app": "doc",
    "tensorflow.compat.v1.cos": "doc",
    "tensorflow.compat.v1.div": "doc",
    "tensorflow.compat.v1.erf": "doc",
    "tensorflow.compat.v1.exp": "doc",
    "tensorflow.compat.v1.eye": "doc",
    "tensorflow.compat.v1.fft": "doc",
    "tensorflow.compat.v1.log": "doc",
    "tensorflow.compat.v1.mod": "doc",
    "tensorflow.compat.v1.pad": "doc",
    "tensorflow.compat.v1.pow": "doc",
    "tensorflow.compat.v1.svd": "doc",
    "tensorflow.compat.v1.tpu": "doc",
    "tensorflow.compat.v1.xla": "doc",
    "tensorflow.compat.as_text": "doc",
    "tensorflow.io.decode_jpeg": "doc",
    "tensorflow.io.gfile.GFile": "doc",
    "tensorflow.io.gfile.isdir": "doc",
    "tensorflow.losses.poisson": "doc",
    "tensorflow.math.bessel_i0": "doc",
    "tensorflow.math.bessel_i1": "doc",
    "tensorflow.math.not_equal": "doc",
    "tensorflow.math.polygamma": "doc",
    "tensorflow.nest.is_nested": "doc",
    "tensorflow.random.poisson": "doc",
    "tensorflow.random.shuffle": "doc",
    "tensorflow.random.uniform": "doc",
    "tensorflow.raw_ops.Assert": "doc",
    "tensorflow.raw_ops.Cumsum": "doc",
    "tensorflow.raw_ops.MatMul": "doc",
    "tensorflow.raw_ops.Spence": "doc",
    "tensorflow.raw_ops.SplitV": "doc",
    "tensorflow.raw_ops.Substr": "doc",
    "tensorflow.raw_ops.Unique": "doc",
    "tensorflow.sparse.reorder": "doc",
    "tensorflow.sparse.reshape": "doc",
    "tensorflow.sparse.softmax": "doc",
    "tensorflow.summary.scalar": "doc",
    "tensorflow.compat.v1.acos": "doc",
    "tensorflow.compat.v1.case": "doc",
    "tensorflow.compat.v1.cast": "doc",
    "tensorflow.compat.v1.ceil": "doc",
    "tensorflow.compat.v1.cond": "doc",
    "tensorflow.compat.v1.conj": "doc",
    "tensorflow.compat.v1.cosh": "doc",
    "tensorflow.compat.v1.diag": "doc",
    "tensorflow.compat.v1.erfc": "doc",
    "tensorflow.compat.v1.fill": "doc",
    "tensorflow.compat.v1.ifft": "doc",
    "tensorflow.compat.v1.imag": "doc",
    "tensorflow.compat.v1.less": "doc",
    "tensorflow.compat.v1.lite": "doc",
    "tensorflow.compat.v1.math": "doc",
    "tensorflow.compat.v1.nest": "doc",
    "tensorflow.compat.v1.norm": "doc",
    "tensorflow.compat.v1.ones": "doc",
    "tensorflow.compat.v1.real": "doc",
    "tensorflow.compat.v1.roll": "doc",
    "tensorflow.compat.v1.sets": "doc",
    "tensorflow.compat.v1.sign": "doc",
    "tensorflow.compat.v1.sinh": "doc",
    "tensorflow.compat.v1.sort": "doc",
    "tensorflow.compat.v1.sqrt": "doc",
    "tensorflow.compat.v1.test": "doc",
    "tensorflow.compat.v1.zeta": "doc",
    "tensorflow.compat.as_bytes": "doc",
    "tensorflow.io.gfile.exists": "doc",
    "tensorflow.io.gfile.remove": "doc",
    "tensorflow.io.gfile.rename": "doc",
    "tensorflow.io.parse_tensor": "doc",
    "tensorflow.math.bessel_i0e": "doc",
    "tensorflow.math.bessel_i1e": "doc",
    "tensorflow.math.less_equal": "doc",
    "tensorflow.math.logical_or": "doc",
    "tensorflow.math.reciprocal": "doc",
    "tensorflow.math.reduce_all": "doc",
    "tensorflow.math.reduce_any": "doc",
    "tensorflow.math.reduce_max": "doc",
    "tensorflow.math.reduce_min": "doc",
    "tensorflow.math.reduce_std": "doc",
    "tensorflow.math.reduce_sum": "doc",
    "tensorflow.math.scalar_mul": "doc",
    "tensorflow.queue.FIFOQueue": "doc",
    "tensorflow.ragged.constant": "doc",
    "tensorflow.random.set_seed": "doc",
    "tensorflow.raw_ops.Cumprod": "doc",
    "tensorflow.raw_ops.Digamma": "doc",
    "tensorflow.raw_ops.Minimum": "doc",
    "tensorflow.raw_ops.Reshape": "doc",
    "tensorflow.raw_ops.Restore": "doc",
    "tensorflow.raw_ops.Sigmoid": "doc",
    "tensorflow.raw_ops.Softmax": "doc",
    "tensorflow.raw_ops.Squeeze": "doc",
    "tensorflow.raw_ops.Unstage": "doc",
    "tensorflow.sets.difference": "doc",
    "tensorflow.sparse.bincount": "doc",
    "tensorflow.compat.v1.DType": "doc",
    "tensorflow.compat.v1.Event": "doc",
    "tensorflow.compat.v1.acosh": "doc",
    "tensorflow.compat.v1.add_n": "doc",
    "tensorflow.compat.v1.angle": "doc",
    "tensorflow.compat.v1.asinh": "doc",
    "tensorflow.compat.v1.atan2": "doc",
    "tensorflow.compat.v1.atanh": "doc",
    "tensorflow.compat.v1.audio": "doc",
    "tensorflow.compat.v1.cross": "doc",
    "tensorflow.compat.v1.equal": "doc",
    "tensorflow.compat.v1.expm1": "doc",
    "tensorflow.compat.v1.fft2d": "doc",
    "tensorflow.compat.v1.fft3d": "doc",
    "tensorflow.compat.v1.flags": "doc",
    "tensorflow.compat.v1.floor": "doc",
    "tensorflow.compat.v1.foldl": "doc",
    "tensorflow.compat.v1.foldr": "doc",
    "tensorflow.compat.v1.gfile": "doc",
    "tensorflow.compat.v1.group": "doc",
    "tensorflow.compat.v1.keras": "doc",
    "tensorflow.compat.v1.lbeta": "doc",
    "tensorflow.compat.v1.log1p": "doc",
    "tensorflow.compat.v1.manip": "doc",
    "tensorflow.compat.v1.no_op": "doc",
    "tensorflow.compat.v1.queue": "doc",
    "tensorflow.compat.v1.range": "doc",
    "tensorflow.compat.v1.round": "doc",
    "tensorflow.compat.v1.rsqrt": "doc",
    "tensorflow.compat.v1.slice": "doc",
    "tensorflow.compat.v1.split": "doc",
    "tensorflow.compat.v1.stack": "doc",
    "tensorflow.compat.v1.tuple": "doc",
    "tensorflow.compat.v1.types": "doc",
    "tensorflow.compat.v1.where": "doc",
    "tensorflow.compat.v1.zeros": "doc",
    "tensorflow.audio.decode_wav": "doc",
    "tensorflow.audio.encode_wav": "doc",
    "tensorflow.io.SparseFeature": "doc",
    "tensorflow.keras.Sequential": "doc",
    "tensorflow.keras.layers.Add": "doc",
    "tensorflow.keras.layers.Dot": "doc",
    "tensorflow.keras.layers.ELU": "doc",
    "tensorflow.keras.layers.GRU": "doc",
    "tensorflow.keras.layers.RNN": "doc",
    "tensorflow.keras.layers.add": "doc",
    "tensorflow.keras.layers.dot": "doc",
    "tensorflow.keras.losses.mae": "doc",
    "tensorflow.keras.losses.mse": "doc",
    "tensorflow.linalg.diag_part": "doc",
    "tensorflow.math.log_sigmoid": "doc",
    "tensorflow.math.log_softmax": "doc",
    "tensorflow.math.logical_and": "doc",
    "tensorflow.math.logical_not": "doc",
    "tensorflow.math.logical_xor": "doc",
    "tensorflow.math.reduce_mean": "doc",
    "tensorflow.math.reduce_prod": "doc",
    "tensorflow.math.segment_sum": "doc",
    "tensorflow.raw_ops.BatchFFT": "doc",
    "tensorflow.raw_ops.BatchSvd": "doc",
    "tensorflow.raw_ops.DiagPart": "doc",
    "tensorflow.raw_ops.GatherNd": "doc",
    "tensorflow.raw_ops.GatherV2": "doc",
    "tensorflow.raw_ops.LinSpace": "doc",
    "tensorflow.raw_ops.ListDiff": "doc",
    "tensorflow.raw_ops.MapDefun": "doc",
    "tensorflow.raw_ops.Snapshot": "doc",
    "tensorflow.compat.v1.Assert": "doc",
    "tensorflow.compat.v1.Module": "doc",
    "tensorflow.compat.v1.Tensor": "doc",
    "tensorflow.compat.v1.argmax": "doc",
    "tensorflow.compat.v1.compat": "doc",
    "tensorflow.compat.v1.concat": "doc",
    "tensorflow.compat.v1.config": "doc",
    "tensorflow.compat.v1.cumsum": "doc",
    "tensorflow.compat.v1.einsum": "doc",
    "tensorflow.compat.v1.errors": "doc",
    "tensorflow.compat.v1.ifft2d": "doc",
    "tensorflow.compat.v1.ifft3d": "doc",
    "tensorflow.compat.v1.is_nan": "doc",
    "tensorflow.compat.v1.layers": "doc",
    "tensorflow.compat.v1.linalg": "doc",
    "tensorflow.compat.v1.lookup": "doc",
    "tensorflow.compat.v1.losses": "doc",
    "tensorflow.compat.v1.map_fn": "doc",
    "tensorflow.compat.v1.nn.elu": "doc",
    "tensorflow.compat.v1.ragged": "doc",
    "tensorflow.compat.v1.random": "doc",
    "tensorflow.compat.v1.repeat": "doc",
    "tensorflow.compat.v1.signal": "doc",
    "tensorflow.compat.v1.sparse": "doc",
    "tensorflow.compat.v1.square": "doc",
    "tensorflow.compat.v1.substr": "doc",
    "tensorflow.compat.v1.unique": "doc",
    "tensorflow.io.gfile.makedirs": "doc",
    "tensorflow.keras.layers.LSTM": "doc",
    "tensorflow.keras.layers.ReLU": "doc",
    "tensorflow.keras.losses.msle": "doc",
    "tensorflow.lite.experimental": "doc",
    "tensorflow.math.accumulate_n": "doc",
    "tensorflow.math.segment_prod": "doc",
    "tensorflow.math.sobol_sample": "doc",
    "tensorflow.raw_ops.ApplyAdam": "doc",
    "tensorflow.raw_ops.ApplyFtrl": "doc",
    "tensorflow.raw_ops.BatchIFFT": "doc",
    "tensorflow.raw_ops.FIFOQueue": "doc",
    "tensorflow.raw_ops.FakeQueue": "doc",
    "tensorflow.raw_ops.HashTable": "doc",
    "tensorflow.raw_ops.LogicalOr": "doc",
    "tensorflow.raw_ops.ScatterNd": "doc",
    "tensorflow.raw_ops.StagePeek": "doc",
    "tensorflow.sparse.from_dense": "doc",
    "tensorflow.sparse.reduce_max": "doc",
    "tensorflow.sparse.reduce_sum": "doc",
    "tensorflow.compat.v1.NodeDef": "doc",
    "tensorflow.compat.v1.Summary": "doc",
    "tensorflow.compat.v1.arg_max": "doc",
    "tensorflow.compat.v1.argsort": "doc",
    "tensorflow.compat.v1.cumprod": "doc",
    "tensorflow.compat.v1.digamma": "doc",
    "tensorflow.compat.v1.nn.pool": "doc",
    "tensorflow.compat.v1.nn.relu": "doc",
    "tensorflow.compat.v1.nn.selu": "doc",
    "tensorflow.compat.v1.nn.silu": "doc",
    "tensorflow.compat.v1.one_hot": "doc",
    "tensorflow.compat.v1.py_func": "doc",
    "tensorflow.compat.v1.reshape": "doc",
    "tensorflow.compat.v1.reverse": "doc",
    "tensorflow.compat.v1.sigmoid": "doc",
    "tensorflow.compat.v1.squeeze": "doc",
    "tensorflow.compat.v1.summary": "doc",
    "tensorflow.compat.v1.unstack": "doc",
    "tensorflow.experimental.numpy": "doc",
    "tensorflow.keras.layers.Dense": "doc",
    "tensorflow.keras.layers.Input": "doc",
    "tensorflow.keras.layers.PReLU": "doc",
    "tensorflow.keras.losses.Hinge": "doc",
    "tensorflow.keras.losses.Huber": "doc",
    "tensorflow.keras.losses.hinge": "doc",
    "tensorflow.keras.losses.huber": "doc",
    "tensorflow.math.count_nonzero": "doc",
    "tensorflow.math.divide_no_nan": "doc",
    "tensorflow.math.greater_equal": "doc",
    "tensorflow.math.special.dawsn": "doc",
    "tensorflow.nest.map_structure": "doc",
    "tensorflow.raw_ops.BitwiseXor": "doc",
    "tensorflow.raw_ops.CSVDataset": "doc",
    "tensorflow.raw_ops.ComplexAbs": "doc",
    "tensorflow.raw_ops.ExpandDims": "doc",
    "tensorflow.raw_ops.LMDBReader": "doc",
    "tensorflow.raw_ops.LogSoftmax": "doc",
    "tensorflow.raw_ops.MapUnstage": "doc",
    "tensorflow.raw_ops.RandomCrop": "doc",
    "tensorflow.raw_ops.RemoteCall": "doc",
    "tensorflow.raw_ops.RightShift": "doc",
    "tensorflow.raw_ops.ScatterAdd": "doc",
    "tensorflow.raw_ops.ScatterMax": "doc",
    "tensorflow.raw_ops.ScatterMul": "doc",
    "tensorflow.raw_ops.ScatterSub": "doc",
    "tensorflow.raw_ops.SegmentMax": "doc",
    "tensorflow.raw_ops.SegmentSum": "doc",
    "tensorflow.raw_ops.SqlDataset": "doc",
    "tensorflow.raw_ops.StackClose": "doc",
    "tensorflow.raw_ops.StageClear": "doc",
    "tensorflow.raw_ops.VariableV2": "doc",
    "tensorflow.raw_ops.ZipDataset": "doc",
    "tensorflow.signal.hann_window": "doc",
    "tensorflow.sparse.expand_dims": "doc",
    "tensorflow.sparse.reset_shape": "doc",
    "tensorflow.sparse.segment_sum": "doc",
    "tensorflow.types.experimental": "doc",
    "tensorflow.compat.v1.TypeSpec": "doc",
    "tensorflow.compat.v1.bincount": "doc",
    "tensorflow.compat.v1.cholesky": "doc",
    "tensorflow.compat.v1.constant": "doc",
    "tensorflow.compat.v1.floormod": "doc",
    "tensorflow.compat.v1.get_seed": "doc",
    "tensorflow.compat.v1.io.gfile": "doc",
    "tensorflow.compat.v1.linspace": "doc",
    "tensorflow.compat.v1.math.abs": "doc",
    "tensorflow.compat.v1.math.add": "doc",
    "tensorflow.compat.v1.math.cos": "doc",
    "tensorflow.compat.v1.math.erf": "doc",
    "tensorflow.compat.v1.math.exp": "doc",
    "tensorflow.compat.v1.math.log": "doc",
    "tensorflow.compat.v1.math.mod": "doc",
    "tensorflow.compat.v1.math.pow": "doc",
    "tensorflow.compat.v1.meshgrid": "doc",
    "tensorflow.compat.v1.nn.crelu": "doc",
    "tensorflow.compat.v1.nn.relu6": "doc",
    "tensorflow.compat.v1.nn.swish": "doc",
    "tensorflow.compat.v1.nn.top_k": "doc",
    "tensorflow.compat.v1.op_scope": "doc",
    "tensorflow.compat.v1.to_float": "doc",
    "tensorflow.compat.v1.tpu.core": "doc",
    "tensorflow.compat.v1.user_ops": "doc",
    "tensorflow.compat.v1.where_v2": "doc",
    "tensorflow.errors.AbortedError": "doc",
    "tensorflow.experimental.dlpack": "doc",
    "tensorflow.keras.layers.Conv1D": "doc",
    "tensorflow.keras.layers.Conv2D": "doc",
    "tensorflow.keras.layers.Conv3D": "doc",
    "tensorflow.keras.layers.Lambda": "doc",
    "tensorflow.keras.utils.Progbar": "doc",
    "tensorflow.math.special.spence": "doc",
    "tensorflow.ragged.boolean_mask": "doc",
    "tensorflow.ragged.cross_hashed": "doc",
    "tensorflow.random.experimental": "doc",
    "tensorflow.raw_ops.ApplyFtrlV2": "doc",
    "tensorflow.raw_ops.DecodeImage": "doc",
    "tensorflow.raw_ops.IgammaGradA": "doc",
    "tensorflow.raw_ops.ImportEvent": "doc",
    "tensorflow.raw_ops.LMDBDataset": "doc",
    "tensorflow.raw_ops.MatrixSolve": "doc",
    "tensorflow.raw_ops.Multinomial": "doc",
    "tensorflow.raw_ops.ParseTensor": "doc",
    "tensorflow.raw_ops.QueueSizeV2": "doc",
    "tensorflow.raw_ops.RaggedRange": "doc",
    "tensorflow.raw_ops.ReaderReset": "doc",
    "tensorflow.raw_ops.SaveDataset": "doc",
    "tensorflow.raw_ops.SegmentMean": "doc",
    "tensorflow.raw_ops.SegmentProd": "doc",
    "tensorflow.raw_ops.SigmoidGrad": "doc",
    "tensorflow.raw_ops.SkipDataset": "doc",
    "tensorflow.raw_ops.SobolSample": "doc",
    "tensorflow.raw_ops.SparseSplit": "doc",
    "tensorflow.raw_ops.TakeDataset": "doc",
    "tensorflow.sparse.SparseTensor": "doc",
    "tensorflow.sparse.cross_hashed": "doc",
    "tensorflow.compat.v1.FIFOQueue": "doc",
    "tensorflow.compat.v1.QueueBase": "doc",
    "tensorflow.compat.v1.app.flags": "doc",
    "tensorflow.compat.v1.diag_part": "doc",
    "tensorflow.compat.v1.is_tensor": "doc",
    "tensorflow.compat.v1.lin_space": "doc",
    "tensorflow.compat.v1.linalg.lu": "doc",
    "tensorflow.compat.v1.linalg.qr": "doc",
    "tensorflow.compat.v1.math.acos": "doc",
    "tensorflow.compat.v1.math.ceil": "doc",
    "tensorflow.compat.v1.math.conj": "doc",
    "tensorflow.compat.v1.math.cosh": "doc",
    "tensorflow.compat.v1.math.erfc": "doc",
    "tensorflow.compat.v1.math.imag": "doc",
    "tensorflow.compat.v1.math.less": "doc",
    "tensorflow.compat.v1.math.real": "doc",
    "tensorflow.compat.v1.math.sign": "doc",
    "tensorflow.compat.v1.math.sinh": "doc",
    "tensorflow.compat.v1.math.sqrt": "doc",
    "tensorflow.compat.v1.math.zeta": "doc",
    "tensorflow.compat.v1.nn.conv1d": "doc",
    "tensorflow.compat.v1.nn.conv2d": "doc",
    "tensorflow.compat.v1.nn.conv3d": "doc",
    "tensorflow.compat.v1.not_equal": "doc",
    "tensorflow.compat.v1.ones_like": "doc",
    "tensorflow.compat.v1.polygamma": "doc",
    "tensorflow.compat.v1.setdiff1d": "doc",
    "tensorflow.compat.v1.sysconfig": "doc",
    "tensorflow.compat.v1.to_double": "doc",
    "tensorflow.compat.v1.tpu.shard": "doc",
    "tensorflow.keras.layers.Dropout": "doc",
    "tensorflow.keras.layers.GRUCell": "doc",
    "tensorflow.keras.layers.Minimum": "doc",
    "tensorflow.keras.layers.Reshape": "doc",
    "tensorflow.keras.layers.Softmax": "doc",
    "tensorflow.keras.losses.poisson": "doc",
    "tensorflow.keras.utils.Sequence": "doc",
    "tensorflow.lite.TFLiteConverter": "doc",
    "tensorflow.math.multiply_no_nan": "doc",
    "tensorflow.math.reduce_variance": "doc",
    "tensorflow.raw_ops.ApplyAddSign": "doc",
    "tensorflow.raw_ops.AudioSummary": "doc",
    "tensorflow.raw_ops.BatchDataset": "doc",
    "tensorflow.raw_ops.CacheDataset": "doc",
    "tensorflow.raw_ops.ConcatOffset": "doc",
    "tensorflow.raw_ops.ImageSummary": "doc",
    "tensorflow.raw_ops.ModelDataset": "doc",
    "tensorflow.raw_ops.ParseExample": "doc",
    "tensorflow.raw_ops.QuantizedAdd": "doc",
    "tensorflow.raw_ops.QuantizedMul": "doc",
    "tensorflow.raw_ops.RangeDataset": "doc",
    "tensorflow.raw_ops.ShardDataset": "doc",
    "tensorflow.raw_ops.SleepDataset": "doc",
    "tensorflow.summary.experimental": "doc",
    "tensorflow.compat.v1.DeviceSpec": "doc",
    "tensorflow.compat.v1.LMDBReader": "doc",
    "tensorflow.compat.v1.LogMessage": "doc",
    "tensorflow.compat.v1.ReaderBase": "doc",
    "tensorflow.compat.v1.SessionLog": "doc",
    "tensorflow.compat.v1.TensorInfo": "doc",
    "tensorflow.compat.v1.TensorSpec": "doc",
    "tensorflow.compat.v1.assign_add": "doc",
    "tensorflow.compat.v1.assign_sub": "doc",
    "tensorflow.compat.v1.decode_csv": "doc",
    "tensorflow.compat.v1.decode_raw": "doc",
    "tensorflow.compat.v1.div_no_nan": "doc",
    "tensorflow.compat.v1.flags.Flag": "doc",
    "tensorflow.compat.v1.get_logger": "doc",
    "tensorflow.compat.v1.gfile.Copy": "doc",
    "tensorflow.compat.v1.gfile.Glob": "doc",
    "tensorflow.compat.v1.gfile.Stat": "doc",
    "tensorflow.compat.v1.gfile.Walk": "doc",
    "tensorflow.compat.v1.init_scope": "doc",
    "tensorflow.compat.v1.io.is_jpeg": "doc",
    "tensorflow.compat.v1.less_equal": "doc",
    "tensorflow.compat.v1.linalg.det": "doc",
    "tensorflow.compat.v1.linalg.eye": "doc",
    "tensorflow.compat.v1.linalg.inv": "doc",
    "tensorflow.compat.v1.linalg.svd": "doc",
    "tensorflow.compat.v1.logical_or": "doc",
    "tensorflow.compat.v1.manip.roll": "doc",
    "tensorflow.compat.v1.math.acosh": "doc",
    "tensorflow.compat.v1.math.add_n": "doc",
    "tensorflow.compat.v1.math.angle": "doc",
    "tensorflow.compat.v1.math.asinh": "doc",
    "tensorflow.compat.v1.math.atan2": "doc",
    "tensorflow.compat.v1.math.atanh": "doc",
    "tensorflow.compat.v1.math.equal": "doc",
    "tensorflow.compat.v1.math.expm1": "doc",
    "tensorflow.compat.v1.math.floor": "doc",
    "tensorflow.compat.v1.math.lbeta": "doc",
    "tensorflow.compat.v1.math.log1p": "doc",
    "tensorflow.compat.v1.math.round": "doc",
    "tensorflow.compat.v1.math.rsqrt": "doc",
    "tensorflow.compat.v1.math.top_k": "doc",
    "tensorflow.compat.v1.math.xdivy": "doc",
    "tensorflow.compat.v1.math.xlogy": "doc",
    "tensorflow.compat.v1.nn.dropout": "doc",
    "tensorflow.compat.v1.nn.l2_loss": "doc",
    "tensorflow.compat.v1.nn.moments": "doc",
    "tensorflow.compat.v1.nn.sigmoid": "doc",
    "tensorflow.compat.v1.nn.softmax": "doc",
    "tensorflow.compat.v1.reciprocal": "doc",
    "tensorflow.compat.v1.reduce_all": "doc",
    "tensorflow.compat.v1.reduce_any": "doc",
    "tensorflow.compat.v1.reduce_max": "doc",
    "tensorflow.compat.v1.reduce_min": "doc",
    "tensorflow.compat.v1.reduce_sum": "doc",
    "tensorflow.compat.v1.reverse_v2": "doc",
    "tensorflow.compat.v1.scalar_mul": "doc",
    "tensorflow.compat.v1.scatter_nd": "doc",
    "tensorflow.compat.v1.sets.union": "doc",
    "tensorflow.compat.v1.signal.dct": "doc",
    "tensorflow.compat.v1.signal.fft": "doc",
    "tensorflow.compat.v1.sparse.add": "doc",
    "tensorflow.compat.v1.sparse.eye": "doc",
    "tensorflow.compat.v1.sparse_add": "doc",
    "tensorflow.compat.v1.while_loop": "doc",
    "tensorflow.compat.v1.write_file": "doc",
    "tensorflow.compat.v1.zeros_like": "doc",
    "tensorflow.keras.layers.LSTMCell": "doc",
    "tensorflow.keras.layers.Multiply": "doc",
    "tensorflow.math.confusion_matrix": "doc",
    "tensorflow.math.reduce_logsumexp": "doc",
    "tensorflow.raw_ops.CropAndResize": "doc",
    "tensorflow.raw_ops.DynamicStitch": "doc",
    "tensorflow.raw_ops.QuantizedRelu": "doc",
    "tensorflow.raw_ops.RandomDataset": "doc",
    "tensorflow.raw_ops.RandomUniform": "doc",
    "tensorflow.raw_ops.ScalarSummary": "doc",
    "tensorflow.compat.v1.ConfigProto": "doc",
    "tensorflow.compat.v1.RunMetadata": "doc",
    "tensorflow.compat.v1.TensorArray": "doc",
    "tensorflow.compat.v1.TensorShape": "doc",
    "tensorflow.compat.v1.assert_less": "doc",
    "tensorflow.compat.v1.assert_near": "doc",
    "tensorflow.compat.v1.assert_type": "doc",
    "tensorflow.compat.v1.count_up_to": "doc",
    "tensorflow.compat.v1.expand_dims": "doc",
    "tensorflow.compat.v1.flags.Error": "doc",
    "tensorflow.compat.v1.flags.FLAGS": "doc",
    "tensorflow.compat.v1.gfile.GFile": "doc",
    "tensorflow.compat.v1.gfile.MkDir": "doc",
    "tensorflow.compat.v1.global_norm": "doc",
    "tensorflow.compat.v1.keras.Input": "doc",
    "tensorflow.compat.v1.keras.Model": "doc",
    "tensorflow.compat.v1.keras.utils": "doc",
    "tensorflow.compat.v1.linalg.diag": "doc",
    "tensorflow.compat.v1.linalg.eigh": "doc",
    "tensorflow.compat.v1.linalg.expm": "doc",
    "tensorflow.compat.v1.linalg.logm": "doc",
    "tensorflow.compat.v1.linalg.norm": "doc",
    "tensorflow.compat.v1.linalg.pinv": "doc",
    "tensorflow.compat.v1.log_sigmoid": "doc",
    "tensorflow.compat.v1.logical_and": "doc",
    "tensorflow.compat.v1.logical_not": "doc",
    "tensorflow.compat.v1.logical_xor": "doc",
    "tensorflow.compat.v1.math.argmax": "doc",
    "tensorflow.compat.v1.math.cumsum": "doc",
    "tensorflow.compat.v1.math.is_nan": "doc",
    "tensorflow.compat.v1.math.square": "doc",
    "tensorflow.compat.v1.nn.avg_pool": "doc",
    "tensorflow.compat.v1.nn.bias_add": "doc",
    "tensorflow.compat.v1.nn.ctc_loss": "doc",
    "tensorflow.compat.v1.nn.in_top_k": "doc",
    "tensorflow.compat.v1.nn.max_pool": "doc",
    "tensorflow.compat.v1.nn.nce_loss": "doc",
    "tensorflow.compat.v1.nn.rnn_cell": "doc",
    "tensorflow.compat.v1.nn.softplus": "doc",
    "tensorflow.compat.v1.py_function": "doc",
    "tensorflow.compat.v1.random_crop": "doc",
    "tensorflow.compat.v1.reduce_join": "doc",
    "tensorflow.compat.v1.reduce_mean": "doc",
    "tensorflow.compat.v1.reduce_prod": "doc",
    "tensorflow.compat.v1.scatter_max": "doc",
    "tensorflow.compat.v1.scatter_mul": "doc",
    "tensorflow.compat.v1.scatter_sub": "doc",
    "tensorflow.compat.v1.segment_sum": "doc",
    "tensorflow.compat.v1.signal.idct": "doc",
    "tensorflow.compat.v1.signal.ifft": "doc",
    "tensorflow.compat.v1.signal.mdct": "doc",
    "tensorflow.compat.v1.signal.rfft": "doc",
    "tensorflow.compat.v1.signal.stft": "doc",
    "tensorflow.compat.v1.sparse.mask": "doc",
    "tensorflow.compat.v1.sparse_mask": "doc",
    "tensorflow.compat.v1.switch_case": "doc",
    "tensorflow.compat.v1.to_bfloat16": "doc",
    "tensorflow.compat.v1.tpu.rewrite": "doc",
    "tensorflow.compat.dimension_value": "doc",
    "tensorflow.experimental.numpy.abs": "doc",
    "tensorflow.experimental.numpy.add": "doc",
    "tensorflow.experimental.numpy.all": "doc",
    "tensorflow.experimental.numpy.any": "doc",
    "tensorflow.experimental.numpy.cos": "doc",
    "tensorflow.experimental.numpy.dot": "doc",
    "tensorflow.experimental.numpy.exp": "doc",
    "tensorflow.experimental.numpy.eye": "doc",
    "tensorflow.experimental.numpy.fix": "doc",
    "tensorflow.experimental.numpy.gcd": "doc",
    "tensorflow.experimental.numpy.ix_": "doc",
    "tensorflow.experimental.numpy.lcm": "doc",
    "tensorflow.experimental.numpy.log": "doc",
    "tensorflow.experimental.numpy.max": "doc",
    "tensorflow.experimental.numpy.mod": "doc",
    "tensorflow.experimental.numpy.pad": "doc",
    "tensorflow.experimental.numpy.ptp": "doc",
    "tensorflow.experimental.numpy.std": "doc",
    "tensorflow.experimental.numpy.sum": "doc",
    "tensorflow.experimental.numpy.var": "doc",
    "tensorflow.keras.layers.AvgPool1D": "doc",
    "tensorflow.keras.layers.AvgPool2D": "doc",
    "tensorflow.keras.layers.AvgPool3D": "doc",
    "tensorflow.keras.layers.InputSpec": "doc",
    "tensorflow.keras.layers.LeakyReLU": "doc",
    "tensorflow.keras.layers.MaxPool1D": "doc",
    "tensorflow.keras.layers.MaxPool2D": "doc",
    "tensorflow.keras.layers.MaxPool3D": "doc",
    "tensorflow.keras.layers.SimpleRNN": "doc",
    "tensorflow.math.reciprocal_no_nan": "doc",
    "tensorflow.math.special.bessel_i0": "doc",
    "tensorflow.math.special.bessel_i1": "doc",
    "tensorflow.math.special.bessel_j0": "doc",
    "tensorflow.math.special.bessel_j1": "doc",
    "tensorflow.math.special.bessel_k0": "doc",
    "tensorflow.math.special.bessel_k1": "doc",
    "tensorflow.math.special.bessel_y0": "doc",
    "tensorflow.math.special.bessel_y1": "doc",
    "tensorflow.ragged.map_flat_values": "doc",
    "tensorflow.random.stateless_gamma": "doc",
    "tensorflow.sparse.fill_empty_rows": "doc",
    "tensorflow.compat.v1.OptionalSpec": "doc",
    "tensorflow.compat.v1.RaggedTensor": "doc",
    "tensorflow.compat.v1.SparseTensor": "doc",
    "tensorflow.compat.v1.accumulate_n": "doc",
    "tensorflow.compat.v1.assert_equal": "doc",
    "tensorflow.compat.v1.boolean_mask": "doc",
    "tensorflow.compat.v1.broadcast_to": "doc",
    "tensorflow.compat.v1.clip_by_norm": "doc",
    "tensorflow.compat.v1.ensure_shape": "doc",
    "tensorflow.compat.v1.experimental": "doc",
    "tensorflow.compat.v1.flags.DEFINE": "doc",
    "tensorflow.compat.v1.gfile.Exists": "doc",
    "tensorflow.compat.v1.gfile.Remove": "doc",
    "tensorflow.compat.v1.gfile.Rename": "doc",
    "tensorflow.compat.v1.io.QueueBase": "doc",
    "tensorflow.compat.v1.keras.layers": "doc",
    "tensorflow.compat.v1.keras.losses": "doc",
    "tensorflow.compat.v1.keras.models": "doc",
    "tensorflow.compat.v1.layers.Dense": "doc",
    "tensorflow.compat.v1.layers.dense": "doc",
    "tensorflow.compat.v1.linalg.cross": "doc",
    "tensorflow.compat.v1.linalg.lstsq": "doc",
    "tensorflow.compat.v1.linalg.solve": "doc",
    "tensorflow.compat.v1.linalg.sqrtm": "doc",
    "tensorflow.compat.v1.load_library": "doc",
    "tensorflow.compat.v1.make_ndarray": "doc",
    "tensorflow.compat.v1.math.cumprod": "doc",
    "tensorflow.compat.v1.math.digamma": "doc",
    "tensorflow.compat.v1.math.polyval": "doc",
    "tensorflow.compat.v1.math.sigmoid": "doc",
    "tensorflow.compat.v1.math.softmax": "doc",
    "tensorflow.compat.v1.math.special": "doc",
    "tensorflow.compat.v1.math.xlog1py": "doc",
    "tensorflow.compat.v1.matrix_solve": "doc",
    "tensorflow.compat.v1.nn.xw_plus_b": "doc",
    "tensorflow.compat.v1.parse_tensor": "doc",
    "tensorflow.compat.v1.ragged.cross": "doc",
    "tensorflow.compat.v1.ragged.range": "doc",
    "tensorflow.compat.v1.ragged.stack": "doc",
    "tensorflow.compat.v1.random_gamma": "doc",
    "tensorflow.compat.v1.searchsorted": "doc",
    "tensorflow.compat.v1.segment_prod": "doc",
    "tensorflow.compat.v1.signal.fft2d": "doc",
    "tensorflow.compat.v1.signal.fft3d": "doc",
    "tensorflow.compat.v1.signal.irfft": "doc",
    "tensorflow.compat.v1.sparse.cross": "doc",
    "tensorflow.compat.v1.sparse.merge": "doc",
    "tensorflow.compat.v1.sparse.slice": "doc",
    "tensorflow.compat.v1.sparse.split": "doc",
    "tensorflow.compat.v1.sparse_merge": "doc",
    "tensorflow.compat.v1.sparse_split": "doc",
    "tensorflow.compat.v1.summary.text": "doc",
    "tensorflow.compat.v1.to_complex64": "doc",
    "tensorflow.experimental.numpy.amax": "doc",
    "tensorflow.experimental.numpy.cbrt": "doc",
    "tensorflow.experimental.numpy.ceil": "doc",
    "tensorflow.experimental.numpy.clip": "doc",
    "tensorflow.experimental.numpy.conj": "doc",
    "tensorflow.experimental.numpy.copy": "doc",
    "tensorflow.experimental.numpy.cosh": "doc",
    "tensorflow.experimental.numpy.diag": "doc",
    "tensorflow.experimental.numpy.diff": "doc",
    "tensorflow.experimental.numpy.exp2": "doc",
    "tensorflow.experimental.numpy.fabs": "doc",
    "tensorflow.experimental.numpy.flip": "doc",
    "tensorflow.experimental.numpy.full": "doc",
    "tensorflow.experimental.numpy.imag": "doc",
    "tensorflow.experimental.numpy.int8": "doc",
    "tensorflow.experimental.numpy.int_": "doc",
    "tensorflow.experimental.numpy.less": "doc",
    "tensorflow.experimental.numpy.log2": "doc",
    "tensorflow.experimental.numpy.ones": "doc",
    "tensorflow.experimental.numpy.prod": "doc",
    "tensorflow.experimental.numpy.real": "doc",
    "tensorflow.experimental.numpy.roll": "doc",
    "tensorflow.experimental.numpy.sign": "doc",
    "tensorflow.experimental.numpy.sinc": "doc",
    "tensorflow.experimental.numpy.sinh": "doc",
    "tensorflow.experimental.numpy.sort": "doc",
    "tensorflow.experimental.numpy.sqrt": "doc",
    "tensorflow.experimental.numpy.vdot": "doc",
    "tensorflow.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.keras.models.Sequential": "doc",
    "tensorflow.math.special.bessel_i0e": "doc",
    "tensorflow.math.special.bessel_i1e": "doc",
    "tensorflow.math.special.bessel_k0e": "doc",
    "tensorflow.math.special.bessel_k1e": "doc",
    "tensorflow.random.create_rng_state": "doc",
    "tensorflow.random.stateless_normal": "doc",
    "tensorflow.compat.v1.IndexedSlices": "doc",
    "tensorflow.compat.v1.PriorityQueue": "doc",
    "tensorflow.compat.v1.SparseFeature": "doc",
    "tensorflow.compat.v1.Summary.Audio": "doc",
    "tensorflow.compat.v1.Summary.Image": "doc",
    "tensorflow.compat.v1.Summary.Value": "doc",
    "tensorflow.compat.v1.VarLenFeature": "doc",
    "tensorflow.compat.v1.VariableScope": "doc",
    "tensorflow.compat.v1.all_variables": "doc",
    "tensorflow.compat.v1.assert_scalar": "doc",
    "tensorflow.compat.v1.clip_by_value": "doc",
    "tensorflow.compat.v1.colocate_with": "doc",
    "tensorflow.compat.v1.count_nonzero": "doc",
    "tensorflow.compat.v1.decode_base64": "doc",
    "tensorflow.compat.v1.encode_base64": "doc",
    "tensorflow.compat.v1.greater_equal": "doc",
    "tensorflow.compat.v1.io.decode_bmp": "doc",
    "tensorflow.compat.v1.io.decode_csv": "doc",
    "tensorflow.compat.v1.io.decode_gif": "doc",
    "tensorflow.compat.v1.io.decode_png": "doc",
    "tensorflow.compat.v1.io.decode_raw": "doc",
    "tensorflow.compat.v1.io.encode_png": "doc",
    "tensorflow.compat.v1.io.gfile.copy": "doc",
    "tensorflow.compat.v1.io.gfile.glob": "doc",
    "tensorflow.compat.v1.io.gfile.stat": "doc",
    "tensorflow.compat.v1.io.gfile.walk": "doc",
    "tensorflow.compat.v1.io.write_file": "doc",
    "tensorflow.compat.v1.keras.backend": "doc",
    "tensorflow.compat.v1.layers.Conv1D": "doc",
    "tensorflow.compat.v1.layers.Conv2D": "doc",
    "tensorflow.compat.v1.layers.Conv3D": "doc",
    "tensorflow.compat.v1.layers.conv1d": "doc",
    "tensorflow.compat.v1.layers.conv2d": "doc",
    "tensorflow.compat.v1.layers.conv3d": "doc",
    "tensorflow.compat.v1.linalg.einsum": "doc",
    "tensorflow.compat.v1.linalg.logdet": "doc",
    "tensorflow.compat.v1.make_template": "doc",
    "tensorflow.compat.v1.manip.reshape": "doc",
    "tensorflow.compat.v1.manip.reverse": "doc",
    "tensorflow.compat.v1.math.bincount": "doc",
    "tensorflow.compat.v1.math.floormod": "doc",
    "tensorflow.compat.v1.math.in_top_k": "doc",
    "tensorflow.compat.v1.math.softplus": "doc",
    "tensorflow.compat.v1.nn.avg_pool1d": "doc",
    "tensorflow.compat.v1.nn.avg_pool2d": "doc",
    "tensorflow.compat.v1.nn.avg_pool3d": "doc",
    "tensorflow.compat.v1.nn.leaky_relu": "doc",
    "tensorflow.compat.v1.nn.max_pool1d": "doc",
    "tensorflow.compat.v1.nn.max_pool2d": "doc",
    "tensorflow.compat.v1.nn.max_pool3d": "doc",
    "tensorflow.compat.v1.nn.relu_layer": "doc",
    "tensorflow.compat.v1.parse_example": "doc",
    "tensorflow.compat.v1.random.normal": "doc",
    "tensorflow.compat.v1.random_normal": "doc",
    "tensorflow.compat.v1.regex_replace": "doc",
    "tensorflow.compat.v1.sequence_mask": "doc",
    "tensorflow.compat.v1.signal.ifft2d": "doc",
    "tensorflow.compat.v1.signal.ifft3d": "doc",
    "tensorflow.compat.v1.signal.rfft2d": "doc",
    "tensorflow.compat.v1.signal.rfft3d": "doc",
    "tensorflow.compat.v1.sparse.concat": "doc",
    "tensorflow.compat.v1.sparse_concat": "doc",
    "tensorflow.compat.v1.sparse_matmul": "doc",
    "tensorflow.compat.v1.summary.Event": "doc",
    "tensorflow.compat.v1.summary.audio": "doc",
    "tensorflow.compat.v1.summary.merge": "doc",
    "tensorflow.compat.v1.to_complex128": "doc",
    "tensorflow.experimental.numpy.angle": "doc",
    "tensorflow.experimental.numpy.array": "doc",
    "tensorflow.experimental.numpy.bool_": "doc",
    "tensorflow.experimental.numpy.cross": "doc",
    "tensorflow.experimental.numpy.equal": "doc",
    "tensorflow.experimental.numpy.expm1": "doc",
    "tensorflow.experimental.numpy.finfo": "doc",
    "tensorflow.experimental.numpy.floor": "doc",
    "tensorflow.experimental.numpy.hypot": "doc",
    "tensorflow.experimental.numpy.iinfo": "doc",
    "tensorflow.experimental.numpy.int16": "doc",
    "tensorflow.experimental.numpy.int32": "doc",
    "tensorflow.experimental.numpy.int64": "doc",
    "tensorflow.experimental.numpy.isinf": "doc",
    "tensorflow.experimental.numpy.isnan": "doc",
    "tensorflow.experimental.numpy.log10": "doc",
    "tensorflow.experimental.numpy.log1p": "doc",
    "tensorflow.experimental.numpy.ravel": "doc",
    "tensorflow.experimental.numpy.rot90": "doc",
    "tensorflow.experimental.numpy.round": "doc",
    "tensorflow.experimental.numpy.split": "doc",
    "tensorflow.experimental.numpy.stack": "doc",
    "tensorflow.experimental.numpy.uint8": "doc",
    "tensorflow.experimental.numpy.where": "doc",
    "tensorflow.experimental.numpy.zeros": "doc",
    "tensorflow.keras.backend.reset_uids": "doc",
    "tensorflow.keras.layers.Concatenate": "doc",
    "tensorflow.keras.layers.concatenate": "doc",
    "tensorflow.keras.models.clone_model": "doc",
    "tensorflow.keras.utils.model_to_dot": "doc",
    "tensorflow.math.special.fresnel_cos": "doc",
    "tensorflow.random.stateless_poisson": "doc",
    "tensorflow.compat.v1.TFRecordReader": "doc",
    "tensorflow.compat.v1.TextLineReader": "doc",
    "tensorflow.compat.v1.app.flags.Flag": "doc",
    "tensorflow.compat.v1.batch_to_space": "doc",
    "tensorflow.compat.v1.check_numerics": "doc",
    "tensorflow.compat.v1.cholesky_solve": "doc",
    "tensorflow.compat.v1.compat.as_text": "doc",
    "tensorflow.compat.v1.depth_to_space": "doc",
    "tensorflow.compat.v1.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.gfile.MakeDirs": "doc",
    "tensorflow.compat.v1.io.decode_jpeg": "doc",
    "tensorflow.compat.v1.io.encode_jpeg": "doc",
    "tensorflow.compat.v1.io.gfile.GFile": "doc",
    "tensorflow.compat.v1.io.gfile.isdir": "doc",
    "tensorflow.compat.v1.layers.Dropout": "doc",
    "tensorflow.compat.v1.layers.dropout": "doc",
    "tensorflow.compat.v1.linalg.slogdet": "doc",
    "tensorflow.compat.v1.lite.constants": "doc",
    "tensorflow.compat.v1.math.bessel_i0": "doc",
    "tensorflow.compat.v1.math.bessel_i1": "doc",
    "tensorflow.compat.v1.math.not_equal": "doc",
    "tensorflow.compat.v1.math.polygamma": "doc",
    "tensorflow.compat.v1.nest.is_nested": "doc",
    "tensorflow.compat.v1.nn.avg_pool_v2": "doc",
    "tensorflow.compat.v1.nn.convolution": "doc",
    "tensorflow.compat.v1.nn.ctc_loss_v2": "doc",
    "tensorflow.compat.v1.nn.log_softmax": "doc",
    "tensorflow.compat.v1.nn.max_pool_v2": "doc",
    "tensorflow.compat.v1.numpy_function": "doc",
    "tensorflow.compat.v1.parallel_stack": "doc",
    "tensorflow.compat.v1.random.poisson": "doc",
    "tensorflow.compat.v1.random.shuffle": "doc",
    "tensorflow.compat.v1.random.uniform": "doc",
    "tensorflow.compat.v1.random_shuffle": "doc",
    "tensorflow.compat.v1.random_uniform": "doc",
    "tensorflow.compat.v1.recompute_grad": "doc",
    "tensorflow.compat.v1.scatter_nd_sub": "doc",
    "tensorflow.compat.v1.signal.irfft2d": "doc",
    "tensorflow.compat.v1.signal.irfft3d": "doc",
    "tensorflow.compat.v1.space_to_batch": "doc",
    "tensorflow.compat.v1.space_to_depth": "doc",
    "tensorflow.compat.v1.sparse.reorder": "doc",
    "tensorflow.compat.v1.sparse.reshape": "doc",
    "tensorflow.compat.v1.sparse.softmax": "doc",
    "tensorflow.compat.v1.sparse_reshape": "doc",
    "tensorflow.compat.v1.sparse_softmax": "doc",
    "tensorflow.compat.v1.summary.scalar": "doc",
    "tensorflow.compat.v1.test.Benchmark": "doc",
    "tensorflow.compat.v1.variable_scope": "doc",
    "tensorflow.experimental.numpy.append": "doc",
    "tensorflow.experimental.numpy.arccos": "doc",
    "tensorflow.experimental.numpy.argmax": "doc",
    "tensorflow.experimental.numpy.cumsum": "doc",
    "tensorflow.experimental.numpy.divmod": "doc",
    "tensorflow.experimental.numpy.dstack": "doc",
    "tensorflow.experimental.numpy.einsum": "doc",
    "tensorflow.experimental.numpy.fliplr": "doc",
    "tensorflow.experimental.numpy.flipud": "doc",
    "tensorflow.experimental.numpy.float_": "doc",
    "tensorflow.experimental.numpy.hsplit": "doc",
    "tensorflow.experimental.numpy.hstack": "doc",
    "tensorflow.experimental.numpy.isreal": "doc",
    "tensorflow.experimental.numpy.nansum": "doc",
    "tensorflow.experimental.numpy.random": "doc",
    "tensorflow.experimental.numpy.repeat": "doc",
    "tensorflow.experimental.numpy.select": "doc",
    "tensorflow.experimental.numpy.square": "doc",
    "tensorflow.experimental.numpy.uint16": "doc",
    "tensorflow.experimental.numpy.uint32": "doc",
    "tensorflow.experimental.numpy.uint64": "doc",
    "tensorflow.experimental.numpy.vsplit": "doc",
    "tensorflow.experimental.numpy.vstack": "doc",
    "tensorflow.keras.callbacks.CSVLogger": "doc",
    "tensorflow.keras.layers.AlphaDropout": "doc",
    "tensorflow.keras.layers.MaxPooling1D": "doc",
    "tensorflow.keras.layers.MaxPooling2D": "doc",
    "tensorflow.keras.layers.MaxPooling3D": "doc",
    "tensorflow.keras.layers.RepeatVector": "doc",
    "tensorflow.keras.layers.experimental": "doc",
    "tensorflow.math.cumulative_logsumexp": "doc",
    "tensorflow.math.unsorted_segment_max": "doc",
    "tensorflow.math.unsorted_segment_min": "doc",
    "tensorflow.math.unsorted_segment_sum": "doc",
    "tensorflow.compat.v1.FixedLenFeature": "doc",
    "tensorflow.compat.v1.SummaryMetadata": "doc",
    "tensorflow.compat.v1.TensorArraySpec": "doc",
    "tensorflow.compat.v1.WholeFileReader": "doc",
    "tensorflow.compat.v1.app.flags.Error": "doc",
    "tensorflow.compat.v1.app.flags.FLAGS": "doc",
    "tensorflow.compat.v1.assert_negative": "doc",
    "tensorflow.compat.v1.compat.as_bytes": "doc",
    "tensorflow.compat.v1.dimension_value": "doc",
    "tensorflow.compat.v1.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.guarantee_const": "doc",
    "tensorflow.compat.v1.io.decode_proto": "doc",
    "tensorflow.compat.v1.io.encode_proto": "doc",
    "tensorflow.compat.v1.io.gfile.exists": "doc",
    "tensorflow.compat.v1.io.gfile.remove": "doc",
    "tensorflow.compat.v1.io.gfile.rename": "doc",
    "tensorflow.compat.v1.io.parse_tensor": "doc",
    "tensorflow.compat.v1.keras.callbacks": "doc",
    "tensorflow.compat.v1.linalg.cholesky": "doc",
    "tensorflow.compat.v1.linalg.eigvalsh": "doc",
    "tensorflow.compat.v1.linalg.lu_solve": "doc",
    "tensorflow.compat.v1.losses.add_loss": "doc",
    "tensorflow.compat.v1.losses.log_loss": "doc",
    "tensorflow.compat.v1.math.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.less_equal": "doc",
    "tensorflow.compat.v1.math.logical_or": "doc",
    "tensorflow.compat.v1.math.reciprocal": "doc",
    "tensorflow.compat.v1.math.reduce_all": "doc",
    "tensorflow.compat.v1.math.reduce_any": "doc",
    "tensorflow.compat.v1.math.reduce_max": "doc",
    "tensorflow.compat.v1.math.reduce_min": "doc",
    "tensorflow.compat.v1.math.reduce_std": "doc",
    "tensorflow.compat.v1.math.reduce_sum": "doc",
    "tensorflow.compat.v1.math.scalar_mul": "doc",
    "tensorflow.compat.v1.matrix_set_diag": "doc",
    "tensorflow.compat.v1.matrix_solve_ls": "doc",
    "tensorflow.compat.v1.mixed_precision": "doc",
    "tensorflow.compat.v1.queue.FIFOQueue": "doc",
    "tensorflow.compat.v1.queue.QueueBase": "doc",
    "tensorflow.compat.v1.ragged.constant": "doc",
    "tensorflow.compat.v1.random.get_seed": "doc",
    "tensorflow.compat.v1.resource_loader": "doc",
    "tensorflow.compat.v1.set_random_seed": "doc",
    "tensorflow.compat.v1.sets.difference": "doc",
    "tensorflow.compat.v1.sparse.bincount": "doc",
    "tensorflow.compat.v1.sparse_to_dense": "doc",
    "tensorflow.compat.v1.summary.Summary": "doc",
    "tensorflow.compat.v1.tpu.PaddingSpec": "doc",
    "tensorflow.experimental.numpy.arccosh": "doc",
    "tensorflow.experimental.numpy.argsort": "doc",
    "tensorflow.experimental.numpy.asarray": "doc",
    "tensorflow.experimental.numpy.cumprod": "doc",
    "tensorflow.experimental.numpy.deg2rad": "doc",
    "tensorflow.experimental.numpy.float16": "doc",
    "tensorflow.experimental.numpy.float32": "doc",
    "tensorflow.experimental.numpy.float64": "doc",
    "tensorflow.experimental.numpy.inexact": "doc",
    "tensorflow.experimental.numpy.isclose": "doc",
    "tensorflow.experimental.numpy.nanmean": "doc",
    "tensorflow.experimental.numpy.nanprod": "doc",
    "tensorflow.experimental.numpy.ndarray": "doc",
    "tensorflow.experimental.numpy.nonzero": "doc",
    "tensorflow.experimental.numpy.object_": "doc",
    "tensorflow.experimental.numpy.polyval": "doc",
    "tensorflow.experimental.numpy.rad2deg": "doc",
    "tensorflow.experimental.numpy.reshape": "doc",
    "tensorflow.experimental.numpy.signbit": "doc",
    "tensorflow.experimental.numpy.squeeze": "doc",
    "tensorflow.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.keras.layers.Convolution1D": "doc",
    "tensorflow.keras.layers.Convolution2D": "doc",
    "tensorflow.keras.layers.Convolution3D": "doc",
    "tensorflow.keras.layers.DenseFeatures": "doc",
    "tensorflow.keras.layers.GaussianNoise": "doc",
    "tensorflow.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.lite.RepresentativeDataset": "doc",
    "tensorflow.math.unsorted_segment_mean": "doc",
    "tensorflow.math.unsorted_segment_prod": "doc",
    "tensorflow.quantize_and_dequantize_v4": "doc",
    "tensorflow.sparse.sparse_dense_matmul": "doc",
    "tensorflow.compat.v1.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.RaggedTensorSpec": "doc",
    "tensorflow.compat.v1.SparseTensorSpec": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE": "doc",
    "tensorflow.compat.v1.audio.decode_wav": "doc",
    "tensorflow.compat.v1.audio.encode_wav": "doc",
    "tensorflow.compat.v1.confusion_matrix": "doc",
    "tensorflow.compat.v1.flags.FlagValues": "doc",
    "tensorflow.compat.v1.get_static_value": "doc",
    "tensorflow.compat.v1.import_graph_def": "doc",
    "tensorflow.compat.v1.io.PriorityQueue": "doc",
    "tensorflow.compat.v1.io.RaggedFeature": "doc",
    "tensorflow.compat.v1.io.SparseFeature": "doc",
    "tensorflow.compat.v1.io.VarLenFeature": "doc",
    "tensorflow.compat.v1.io.decode_base64": "doc",
    "tensorflow.compat.v1.io.encode_base64": "doc",
    "tensorflow.compat.v1.io.parse_example": "doc",
    "tensorflow.compat.v1.keras.Sequential": "doc",
    "tensorflow.compat.v1.keras.layers.Add": "doc",
    "tensorflow.compat.v1.keras.layers.Dot": "doc",
    "tensorflow.compat.v1.keras.layers.ELU": "doc",
    "tensorflow.compat.v1.keras.layers.GRU": "doc",
    "tensorflow.compat.v1.keras.layers.RNN": "doc",
    "tensorflow.compat.v1.keras.layers.add": "doc",
    "tensorflow.compat.v1.keras.layers.dot": "doc",
    "tensorflow.compat.v1.keras.losses.KLD": "doc",
    "tensorflow.compat.v1.keras.losses.MAE": "doc",
    "tensorflow.compat.v1.keras.losses.MSE": "doc",
    "tensorflow.compat.v1.keras.losses.get": "doc",
    "tensorflow.compat.v1.keras.losses.kld": "doc",
    "tensorflow.compat.v1.keras.losses.mae": "doc",
    "tensorflow.compat.v1.keras.losses.mse": "doc",
    "tensorflow.compat.v1.layers.InputSpec": "doc",
    "tensorflow.compat.v1.linalg.band_part": "doc",
    "tensorflow.compat.v1.linalg.diag_part": "doc",
    "tensorflow.compat.v1.manip.scatter_nd": "doc",
    "tensorflow.compat.v1.math.log_sigmoid": "doc",
    "tensorflow.compat.v1.math.log_softmax": "doc",
    "tensorflow.compat.v1.math.logical_and": "doc",
    "tensorflow.compat.v1.math.logical_not": "doc",
    "tensorflow.compat.v1.math.logical_xor": "doc",
    "tensorflow.compat.v1.math.reduce_mean": "doc",
    "tensorflow.compat.v1.math.reduce_prod": "doc",
    "tensorflow.compat.v1.math.segment_sum": "doc",
    "tensorflow.compat.v1.matrix_diag_part": "doc",
    "tensorflow.compat.v1.quantized_concat": "doc",
    "tensorflow.compat.v1.reduce_logsumexp": "doc",
    "tensorflow.compat.v1.reverse_sequence": "doc",
    "tensorflow.compat.v1.self_adjoint_eig": "doc",
    "tensorflow.compat.v1.serialize_sparse": "doc",
    "tensorflow.compat.v1.sparse_transpose": "doc",
    "tensorflow.compat.v1.tpu.experimental": "doc",
    "tensorflow.compat.v1.user_ops.my_fact": "doc",
    "tensorflow.compat.v1.xla.experimental": "doc",
    "tensorflow.experimental.numpy.absolute": "doc",
    "tensorflow.experimental.numpy.allclose": "doc",
    "tensorflow.experimental.numpy.complex_": "doc",
    "tensorflow.experimental.numpy.compress": "doc",
    "tensorflow.experimental.numpy.diagflat": "doc",
    "tensorflow.experimental.numpy.isscalar": "doc",
    "tensorflow.experimental.numpy.linspace": "doc",
    "tensorflow.experimental.numpy.logspace": "doc",
    "tensorflow.experimental.numpy.meshgrid": "doc",
    "tensorflow.experimental.numpy.unicode_": "doc",
    "tensorflow.random.get_global_generator": "doc",
    "tensorflow.random.set_global_generator": "doc",
    "tensorflow.compat.v1.NotDifferentiable": "doc",
    "tensorflow.compat.v1.SparseTensorValue": "doc",
    "tensorflow.compat.v1.add_to_collection": "doc",
    "tensorflow.compat.v1.assert_less_equal": "doc",
    "tensorflow.compat.v1.assert_none_equal": "doc",
    "tensorflow.compat.v1.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.decode_compressed": "doc",
    "tensorflow.compat.v1.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.get_default_graph": "doc",
    "tensorflow.compat.v1.gfile.IsDirectory": "doc",
    "tensorflow.compat.v1.io.gfile.makedirs": "doc",
    "tensorflow.compat.v1.keras.layers.LSTM": "doc",
    "tensorflow.compat.v1.keras.layers.ReLU": "doc",
    "tensorflow.compat.v1.keras.losses.Loss": "doc",
    "tensorflow.compat.v1.keras.losses.MAPE": "doc",
    "tensorflow.compat.v1.keras.losses.MSLE": "doc",
    "tensorflow.compat.v1.keras.losses.msle": "doc",
    "tensorflow.compat.v1.lite.experimental": "doc",
    "tensorflow.compat.v1.lite.toco_convert": "doc",
    "tensorflow.compat.v1.losses.get_losses": "doc",
    "tensorflow.compat.v1.losses.hinge_loss": "doc",
    "tensorflow.compat.v1.losses.huber_loss": "doc",
    "tensorflow.compat.v1.make_tensor_proto": "doc",
    "tensorflow.compat.v1.math.accumulate_n": "doc",
    "tensorflow.compat.v1.math.segment_prod": "doc",
    "tensorflow.compat.v1.math.sobol_sample": "doc",
    "tensorflow.compat.v1.nn.depth_to_space": "doc",
    "tensorflow.compat.v1.nn.space_to_batch": "doc",
    "tensorflow.compat.v1.nn.space_to_depth": "doc",
    "tensorflow.compat.v1.scatter_nd_update": "doc",
    "tensorflow.compat.v1.space_to_batch_nd": "doc",
    "tensorflow.compat.v1.sparse.from_dense": "doc",
    "tensorflow.compat.v1.sparse.reduce_max": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum": "doc",
    "tensorflow.compat.v1.sparse_reduce_max": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum": "doc",
    "tensorflow.compat.v1.test.get_temp_dir": "doc",
    "tensorflow.compat.v1.variable_op_scope": "doc",
    "tensorflow.experimental.numpy.complex64": "doc",
    "tensorflow.experimental.numpy.conjugate": "doc",
    "tensorflow.experimental.numpy.full_like": "doc",
    "tensorflow.experimental.numpy.iscomplex": "doc",
    "tensorflow.experimental.numpy.logaddexp": "doc",
    "tensorflow.experimental.numpy.not_equal": "doc",
    "tensorflow.experimental.numpy.ones_like": "doc",
    "tensorflow.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.keras.layers.GaussianDropout": "doc",
    "tensorflow.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.keras.layers.SeparableConv1D": "doc",
    "tensorflow.keras.layers.SeparableConv2D": "doc",
    "tensorflow.keras.layers.StackedRNNCells": "doc",
    "tensorflow.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.random.stateless_categorical": "doc",
    "tensorflow.compat.v1.add_to_collections": "doc",
    "tensorflow.compat.v1.app.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.get_local_variable": "doc",
    "tensorflow.compat.v1.get_session_handle": "doc",
    "tensorflow.compat.v1.get_variable_scope": "doc",
    "tensorflow.compat.v1.io.FixedLenFeature": "doc",
    "tensorflow.compat.v1.io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.keras.experimental": "doc",
    "tensorflow.compat.v1.keras.layers.Dense": "doc",
    "tensorflow.compat.v1.keras.layers.Input": "doc",
    "tensorflow.compat.v1.keras.layers.PReLU": "doc",
    "tensorflow.compat.v1.keras.losses.Hinge": "doc",
    "tensorflow.compat.v1.keras.losses.Huber": "doc",
    "tensorflow.compat.v1.keras.losses.hinge": "doc",
    "tensorflow.compat.v1.keras.models.Model": "doc",
    "tensorflow.compat.v1.linalg.global_norm": "doc",
    "tensorflow.compat.v1.lite.TocoConverter": "doc",
    "tensorflow.compat.v1.math.count_nonzero": "doc",
    "tensorflow.compat.v1.math.divide_no_nan": "doc",
    "tensorflow.compat.v1.math.greater_equal": "doc",
    "tensorflow.compat.v1.math.special.dawsn": "doc",
    "tensorflow.compat.v1.matrix_square_root": "doc",
    "tensorflow.compat.v1.nest.map_structure": "doc",
    "tensorflow.compat.v1.signal.hann_window": "doc",
    "tensorflow.compat.v1.sparse.expand_dims": "doc",
    "tensorflow.compat.v1.sparse.reset_shape": "doc",
    "tensorflow.compat.v1.sparse.segment_sum": "doc",
    "tensorflow.compat.v1.sparse_reset_shape": "doc",
    "tensorflow.compat.v1.sparse_segment_sum": "doc",
    "tensorflow.compat.v1.summary.SessionLog": "doc",
    "tensorflow.compat.v1.tensor_scatter_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_sub": "doc",
    "tensorflow.compat.v1.tpu.bfloat16_scope": "doc",
    "tensorflow.compat.v1.types.experimental": "doc",
    "tensorflow.compat.v1.unique_with_counts": "doc",
    "tensorflow.experimental.numpy.asanyarray": "doc",
    "tensorflow.experimental.numpy.atleast_1d": "doc",
    "tensorflow.experimental.numpy.atleast_2d": "doc",
    "tensorflow.experimental.numpy.atleast_3d": "doc",
    "tensorflow.experimental.numpy.bitwise_or": "doc",
    "tensorflow.experimental.numpy.complex128": "doc",
    "tensorflow.experimental.numpy.issubdtype": "doc",
    "tensorflow.experimental.numpy.less_equal": "doc",
    "tensorflow.experimental.numpy.logaddexp2": "doc",
    "tensorflow.experimental.numpy.logical_or": "doc",
    "tensorflow.experimental.numpy.reciprocal": "doc",
    "tensorflow.experimental.numpy.zeros_like": "doc",
    "tensorflow.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.summary.experimental.get_step": "doc",
    "tensorflow.summary.experimental.set_step": "doc",
    "tensorflow.types.experimental.TensorLike": "doc",
    "tensorflow.compat.v1.app.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.assert_non_negative": "doc",
    "tensorflow.compat.v1.clip_by_global_norm": "doc",
    "tensorflow.compat.v1.config.experimental": "doc",
    "tensorflow.compat.v1.decode_json_example": "doc",
    "tensorflow.compat.v1.errors.AbortedError": "doc",
    "tensorflow.compat.v1.errors.UnknownError": "doc",
    "tensorflow.compat.v1.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.gfile.ListDirectory": "doc",
    "tensorflow.compat.v1.io.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.io.serialize_sparse": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3D": "doc",
    "tensorflow.compat.v1.keras.layers.Lambda": "doc",
    "tensorflow.compat.v1.keras.utils.Progbar": "doc",
    "tensorflow.compat.v1.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.layers.experimental": "doc",
    "tensorflow.compat.v1.linalg.experimental": "doc",
    "tensorflow.compat.v1.lookup.experimental": "doc",
    "tensorflow.compat.v1.math.special.spence": "doc",
    "tensorflow.compat.v1.nn.conv1d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv3d_transpose": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup": "doc",
    "tensorflow.compat.v1.nn.fused_batch_norm": "doc",
    "tensorflow.compat.v1.nn.log_poisson_loss": "doc",
    "tensorflow.compat.v1.nn.quantized_conv2d": "doc",
    "tensorflow.compat.v1.nn.quantized_relu_x": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.GRUCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.RNNCell": "doc",
    "tensorflow.compat.v1.nn.separable_conv2d": "doc",
    "tensorflow.compat.v1.nn.weighted_moments": "doc",
    "tensorflow.compat.v1.queue.PriorityQueue": "doc",
    "tensorflow.compat.v1.ragged.boolean_mask": "doc",
    "tensorflow.compat.v1.ragged.cross_hashed": "doc",
    "tensorflow.compat.v1.random.experimental": "doc",
    "tensorflow.compat.v1.reset_default_graph": "doc",
    "tensorflow.compat.v1.signal.inverse_mdct": "doc",
    "tensorflow.compat.v1.signal.inverse_stft": "doc",
    "tensorflow.compat.v1.sparse.SparseTensor": "doc",
    "tensorflow.compat.v1.sparse.cross_hashed": "doc",
    "tensorflow.compat.v1.tpu.shutdown_system": "doc",
    "tensorflow.experimental.numpy.array_equal": "doc",
    "tensorflow.experimental.numpy.bitwise_not": "doc",
    "tensorflow.experimental.numpy.bitwise_xor": "doc",
    "tensorflow.experimental.numpy.concatenate": "doc",
    "tensorflow.experimental.numpy.expand_dims": "doc",
    "tensorflow.experimental.numpy.logical_and": "doc",
    "tensorflow.experimental.numpy.logical_not": "doc",
    "tensorflow.experimental.numpy.logical_xor": "doc",
    "tensorflow.experimental.numpy.random.seed": "doc",
    "tensorflow.experimental.numpy.result_type": "doc",
    "tensorflow.compat.v1.TensorInfo.CooSparse": "doc",
    "tensorflow.compat.v1.app.flags.FlagValues": "doc",
    "tensorflow.compat.v1.assert_greater_equal": "doc",
    "tensorflow.compat.v1.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.batch_scatter_update": "doc",
    "tensorflow.compat.v1.clip_by_average_norm": "doc",
    "tensorflow.compat.v1.config.LogicalDevice": "doc",
    "tensorflow.compat.v1.control_dependencies": "doc",
    "tensorflow.compat.v1.errors.DataLossError": "doc",
    "tensorflow.compat.v1.errors.NotFoundError": "doc",
    "tensorflow.compat.v1.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.flags.get_help_width": "doc",
    "tensorflow.compat.v1.initialize_variables": "doc",
    "tensorflow.compat.v1.io.decode_compressed": "doc",
    "tensorflow.compat.v1.keras.backend.floatx": "doc",
    "tensorflow.compat.v1.keras.layers.Dropout": "doc",
    "tensorflow.compat.v1.keras.layers.GRUCell": "doc",
    "tensorflow.compat.v1.keras.layers.Minimum": "doc",
    "tensorflow.compat.v1.keras.layers.Reshape": "doc",
    "tensorflow.compat.v1.keras.layers.Softmax": "doc",
    "tensorflow.compat.v1.keras.losses.LogCosh": "doc",
    "tensorflow.compat.v1.keras.losses.Poisson": "doc",
    "tensorflow.compat.v1.keras.losses.logcosh": "doc",
    "tensorflow.compat.v1.keras.losses.poisson": "doc",
    "tensorflow.compat.v1.keras.utils.Sequence": "doc",
    "tensorflow.compat.v1.layers.max_pooling1d": "doc",
    "tensorflow.compat.v1.layers.max_pooling2d": "doc",
    "tensorflow.compat.v1.layers.max_pooling3d": "doc",
    "tensorflow.compat.v1.lite.TFLiteConverter": "doc",
    "tensorflow.compat.v1.lite.experimental.nn": "doc",
    "tensorflow.compat.v1.lookup.TextFileIndex": "doc",
    "tensorflow.compat.v1.math.multiply_no_nan": "doc",
    "tensorflow.compat.v1.math.reduce_variance": "doc",
    "tensorflow.compat.v1.nn.collapse_repeated": "doc",
    "tensorflow.compat.v1.nn.ctc_unique_labels": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMCell": "doc",
    "tensorflow.compat.v1.parse_single_example": "doc",
    "tensorflow.compat.v1.self_adjoint_eigvals": "doc",
    "tensorflow.compat.v1.test.gpu_device_name": "doc",
    "tensorflow.compat.v1.type_spec_from_value": "doc",
    "tensorflow.compat.v1.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.unsorted_segment_sum": "doc",
    "tensorflow.experimental.dlpack.from_dlpack": "doc",
    "tensorflow.experimental.numpy.broadcast_to": "doc",
    "tensorflow.experimental.numpy.iscomplexobj": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.keras.utils.custom_object_scope": "doc",
    "tensorflow.lite.experimental.load_delegate": "doc",
    "tensorflow.summary.should_record_summaries": "doc",
    "tensorflow.compat.v1.app.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.app.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.config.PhysicalDevice": "doc",
    "tensorflow.compat.v1.delete_session_tensor": "doc",
    "tensorflow.compat.v1.enable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.errors.CancelledError": "doc",
    "tensorflow.compat.v1.histogram_fixed_width": "doc",
    "tensorflow.compat.v1.initialize_all_tables": "doc",
    "tensorflow.compat.v1.io.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNGRU": "doc",
    "tensorflow.compat.v1.keras.layers.LSTMCell": "doc",
    "tensorflow.compat.v1.keras.layers.Multiply": "doc",
    "tensorflow.compat.v1.keras.losses.log_cosh": "doc",
    "tensorflow.compat.v1.keras.mixed_precision": "doc",
    "tensorflow.compat.v1.linalg.cholesky_solve": "doc",
    "tensorflow.compat.v1.linalg.lu_reconstruct": "doc",
    "tensorflow.compat.v1.losses.get_total_loss": "doc",
    "tensorflow.compat.v1.math.confusion_matrix": "doc",
    "tensorflow.compat.v1.math.reduce_logsumexp": "doc",
    "tensorflow.compat.v1.nest.pack_sequence_as": "doc",
    "tensorflow.compat.v1.nn.ctc_greedy_decoder": "doc",
    "tensorflow.compat.v1.nn.quantized_avg_pool": "doc",
    "tensorflow.compat.v1.nn.quantized_max_pool": "doc",
    "tensorflow.compat.v1.ragged.constant_value": "doc",
    "tensorflow.compat.v1.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.signal.hamming_window": "doc",
    "tensorflow.compat.v1.sparse_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket": "doc",
    "tensorflow.compat.v1.summary.Summary.Audio": "doc",
    "tensorflow.compat.v1.summary.Summary.Image": "doc",
    "tensorflow.compat.v1.summary.Summary.Value": "doc",
    "tensorflow.compat.v1.sysconfig.get_include": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_max": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_sub": "doc",
    "tensorflow.compat.v1.tensor_scatter_update": "doc",
    "tensorflow.compat.v1.test.benchmark_config": "doc",
    "tensorflow.compat.v1.test.is_gpu_available": "doc",
    "tensorflow.compat.v1.tpu.cross_replica_sum": "doc",
    "tensorflow.compat.v1.tpu.initialize_system": "doc",
    "tensorflow.compat.v1.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.unsorted_segment_prod": "doc",
    "tensorflow.experimental.numpy.count_nonzero": "doc",
    "tensorflow.experimental.numpy.greater_equal": "doc",
    "tensorflow.experimental.numpy.promote_types": "doc",
    "tensorflow.experimental.numpy.random.random": "doc",
    "tensorflow.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.compat.v1.add_check_numerics_ops": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.compat.dimension_value": "doc",
    "tensorflow.compat.v1.disable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.enable_control_flow_v2": "doc",
    "tensorflow.compat.v1.enable_eager_execution": "doc",
    "tensorflow.compat.v1.enable_tensor_equality": "doc",
    "tensorflow.compat.v1.errors.OutOfRangeError": "doc",
    "tensorflow.compat.v1.extract_volume_patches": "doc",
    "tensorflow.compat.v1.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.io.decode_json_example": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNLSTM": "doc",
    "tensorflow.compat.v1.keras.layers.InputSpec": "doc",
    "tensorflow.compat.v1.keras.layers.LeakyReLU": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNN": "doc",
    "tensorflow.compat.v1.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.lookup.StaticHashTable": "doc",
    "tensorflow.compat.v1.losses.cosine_distance": "doc",
    "tensorflow.compat.v1.math.reciprocal_no_nan": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1": "doc",
    "tensorflow.compat.v1.math.special.bessel_j0": "doc",
    "tensorflow.compat.v1.math.special.bessel_j1": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1": "doc",
    "tensorflow.compat.v1.math.special.bessel_y0": "doc",
    "tensorflow.compat.v1.math.special.bessel_y1": "doc",
    "tensorflow.compat.v1.nn.with_space_to_batch": "doc",
    "tensorflow.compat.v1.queue.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.ragged.map_flat_values": "doc",
    "tensorflow.compat.v1.random.set_random_seed": "doc",
    "tensorflow.compat.v1.random.stateless_gamma": "doc",
    "tensorflow.compat.v1.signal.overlap_and_add": "doc",
    "tensorflow.compat.v1.sparse.fill_empty_rows": "doc",
    "tensorflow.compat.v1.sparse_tensor_to_dense": "doc",
    "tensorflow.compat.v1.test.is_built_with_xla": "doc",
    "tensorflow.compat.v1.test.test_src_dir_path": "doc",
    "tensorflow.compat.v1.variable_creator_scope": "doc",
    "tensorflow.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.experimental.numpy.random.uniform": "doc",
    "tensorflow.keras.utils.get_registered_object": "doc",
    "tensorflow.random.stateless_truncated_normal": "doc",
    "tensorflow.compat.v1.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.VariableSynchronization": "doc",
    "tensorflow.compat.v1.app.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.control_flow_v2_enabled": "doc",
    "tensorflow.compat.v1.disable_control_flow_v2": "doc",
    "tensorflow.compat.v1.disable_eager_execution": "doc",
    "tensorflow.compat.v1.disable_tensor_equality": "doc",
    "tensorflow.compat.v1.errors.UnavailableError": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.gfile.DeleteRecursively": "doc",
    "tensorflow.compat.v1.io.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.io.match_filenames_once": "doc",
    "tensorflow.compat.v1.io.parse_single_example": "doc",
    "tensorflow.compat.v1.keras.callbacks.History": "doc",
    "tensorflow.compat.v1.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.compat.v1.keras.models.Sequential": "doc",
    "tensorflow.compat.v1.layers.conv2d_transpose": "doc",
    "tensorflow.compat.v1.layers.conv3d_transpose": "doc",
    "tensorflow.compat.v1.layers.separable_conv1d": "doc",
    "tensorflow.compat.v1.layers.separable_conv2d": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag_part": "doc",
    "tensorflow.compat.v1.manip.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.manip.space_to_batch_nd": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1e": "doc",
    "tensorflow.compat.v1.matrix_triangular_solve": "doc",
    "tensorflow.compat.v1.nn.compute_average_loss": "doc",
    "tensorflow.compat.v1.nn.max_pool_with_argmax": "doc",
    "tensorflow.compat.v1.nn.sampled_softmax_loss": "doc",
    "tensorflow.compat.v1.random.create_rng_state": "doc",
    "tensorflow.compat.v1.random.stateless_normal": "doc",
    "tensorflow.compat.v1.summary.FileWriterCache": "doc",
    "tensorflow.compat.v1.test.is_built_with_cuda": "doc",
    "tensorflow.compat.v1.unsorted_segment_sqrt_n": "doc",
    "tensorflow.experimental.numpy.take_along_axis": "doc",
    "tensorflow.keras.utils.pack_x_y_sample_weight": "doc",
    "tensorflow.keras.utils.serialize_keras_object": "doc",
    "tensorflow.raw_ops.BatchMatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsemble": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV2": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV3": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandleV2": "doc",
    "tensorflow.raw_ops.ResourceStridedSliceAssign": "doc",
    "tensorflow.raw_ops.SparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseCholesky": "doc",
    "tensorflow.raw_ops.SparseToSparseSetOperation": "doc",
    "tensorflow.summary.experimental.summary_scope": "doc",
    "tensorflow.compat.v1.ConfigProto.Experimental": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.app.flags.get_help_width": "doc",
    "tensorflow.compat.v1.experimental.async_scope": "doc",
    "tensorflow.compat.v1.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.initialize_all_variables": "doc",
    "tensorflow.compat.v1.io.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.keras.backend.reset_uids": "doc",
    "tensorflow.compat.v1.keras.backend.set_floatx": "doc",
    "tensorflow.compat.v1.keras.callbacks.Callback": "doc",
    "tensorflow.compat.v1.keras.layers.Concatenate": "doc",
    "tensorflow.compat.v1.keras.layers.concatenate": "doc",
    "tensorflow.compat.v1.keras.models.clone_model": "doc",
    "tensorflow.compat.v1.keras.utils.model_to_dot": "doc",
    "tensorflow.compat.v1.math.special.fresnel_cos": "doc",
    "tensorflow.compat.v1.moving_average_variables": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicRNNCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.MultiRNNCell": "doc",
    "tensorflow.compat.v1.nn.sufficient_statistics": "doc",
    "tensorflow.compat.v1.placeholder_with_default": "doc",
    "tensorflow.compat.v1.ragged.RaggedTensorValue": "doc",
    "tensorflow.compat.v1.random.stateless_poisson": "doc",
    "tensorflow.compat.v1.sparse.reduce_max_sparse": "doc",
    "tensorflow.compat.v1.sparse_reduce_max_sparse": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum_sparse": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_update": "doc",
    "tensorflow.experimental.numpy.broadcast_arrays": "doc",
    "tensorflow.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.random.experimental.stateless_split": "doc",
    "tensorflow.compat.v1.enable_resource_variables": "doc",
    "tensorflow.compat.v1.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.io.parse_sequence_example": "doc",
    "tensorflow.compat.v1.keras.callbacks.CSVLogger": "doc",
    "tensorflow.compat.v1.keras.layers.AlphaDropout": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.RepeatVector": "doc",
    "tensorflow.compat.v1.keras.layers.experimental": "doc",
    "tensorflow.compat.v1.keras.losses.KLDivergence": "doc",
    "tensorflow.compat.v1.math.cumulative_logsumexp": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sum": "doc",
    "tensorflow.compat.v1.mixed_precision.LossScale": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicLSTMCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DeviceWrapper": "doc",
    "tensorflow.compat.v1.summary.TaggedRunMetadata": "doc",
    "tensorflow.compat.v1.test.create_local_cluster": "doc",
    "tensorflow.compat.v1.tpu.experimental.Topology": "doc",
    "tensorflow.experimental.numpy.ascontiguousarray": "doc",
    "tensorflow.keras.utils.unpack_x_y_sample_weight": "doc",
    "tensorflow.random.experimental.create_rng_state": "doc",
    "tensorflow.compat.v1.ConditionalAccumulatorBase": "doc",
    "tensorflow.compat.v1.SummaryMetadata.PluginData": "doc",
    "tensorflow.compat.v1.app.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.disable_resource_variables": "doc",
    "tensorflow.compat.v1.histogram_fixed_width_bins": "doc",
    "tensorflow.compat.v1.initialize_local_variables": "doc",
    "tensorflow.compat.v1.io.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.compat.v1.io.TFRecordCompressionType": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3D": "doc",
    "tensorflow.compat.v1.keras.layers.DenseFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianNoise": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.compat.v1.keras.losses.kl_divergence": "doc",
    "tensorflow.compat.v1.lite.RepresentativeDataset": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_prod": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.compute_accidental_hits": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMStateTuple": "doc",
    "tensorflow.compat.v1.quantize_and_dequantize_v4": "doc",
    "tensorflow.compat.v1.resource_variables_enabled": "doc",
    "tensorflow.compat.v1.sparse.sparse_dense_matmul": "doc",
    "tensorflow.compat.v1.sparse_tensor_dense_matmul": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.summary.SummaryDescription": "doc",
    "tensorflow.compat.v1.summary.all_v2_summary_ops": "doc",
    "tensorflow.compat.v1.xla.experimental.jit_scope": "doc",
    "tensorflow.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.random.experimental.stateless_fold_in": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.config.list_logical_devices": "doc",
    "tensorflow.compat.v1.errors.InvalidArgumentError": "doc",
    "tensorflow.compat.v1.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.compat.v1.keras.callbacks.TensorBoard": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.ResidualWrapper": "doc",
    "tensorflow.compat.v1.random.get_global_generator": "doc",
    "tensorflow.compat.v1.random.set_global_generator": "doc",
    "tensorflow.compat.v1.sysconfig.get_compile_flags": "doc",
    "tensorflow.compat.v1.test.assert_equal_graph_def": "doc",
    "tensorflow.compat.v1.ConfigProto.DeviceCountEntry": "doc",
    "tensorflow.compat.v1.app.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.app.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.config.functions_run_eagerly": "doc",
    "tensorflow.compat.v1.errors.DeadlineExceededError": "doc",
    "tensorflow.compat.v1.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.compat.v1.keras.callbacks.CallbackList": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianDropout": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.StackedRNNCells": "doc",
    "tensorflow.compat.v1.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.compat.v1.keras.models.model_from_json": "doc",
    "tensorflow.compat.v1.keras.models.model_from_yaml": "doc",
    "tensorflow.compat.v1.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.compat.v1.lookup.StaticVocabularyTable": "doc",
    "tensorflow.compat.v1.losses.compute_weighted_loss": "doc",
    "tensorflow.compat.v1.losses.sigmoid_cross_entropy": "doc",
    "tensorflow.compat.v1.losses.softmax_cross_entropy": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.nn.scale_regularization_loss": "doc",
    "tensorflow.compat.v1.random.stateless_categorical": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_strong": "doc",
    "tensorflow.keras.utils.register_keras_serializable": "doc",
    "tensorflow.compat.v1.NodeDef.ExperimentalDebugInfo": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.errors.ResourceExhaustedError": "doc",
    "tensorflow.compat.v1.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.keras.backend.is_keras_tensor": "doc",
    "tensorflow.compat.v1.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.compat.v1.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredError": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder_v2": "doc",
    "tensorflow.compat.v1.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.resource_loader.load_resource": "doc",
    "tensorflow.compat.v1.signal.inverse_stft_window_fn": "doc",
    "tensorflow.compat.v1.types.experimental.TensorLike": "doc",
    "tensorflow.random.experimental.get_global_generator": "doc",
    "tensorflow.random.experimental.set_global_generator": "doc",
    "tensorflow.compat.v1.experimental.async_clear_error": "doc",
    "tensorflow.compat.v1.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecay": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearModel": "doc",
    "tensorflow.compat.v1.keras.models.model_from_config": "doc",
    "tensorflow.compat.v1.mixed_precision.FixedLossScale": "doc",
    "tensorflow.compat.v1.test.is_built_with_gpu_support": "doc",
    "tensorflow.compat.v1.app.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.app.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.app.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.app.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.keras.backend.image_data_format": "doc",
    "tensorflow.compat.v1.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.compat.v1.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.utils.custom_object_scope": "doc",
    "tensorflow.compat.v1.lite.experimental.load_delegate": "doc",
    "tensorflow.compat.v1.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.summary.get_summary_description": "doc",
    "tensorflow.compat.v1.app.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.config.get_soft_device_placement": "doc",
    "tensorflow.compat.v1.config.set_soft_device_placement": "doc",
    "tensorflow.compat.v1.io.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.keras.experimental.WideDeepModel": "doc",
    "tensorflow.compat.v1.mixed_precision.DynamicLossScale": "doc",
    "tensorflow.compat.v1.nondifferentiable_batch_function": "doc",
    "tensorflow.compat.v1.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.compat.v1.required_space_to_batch_paddings": "doc",
    "tensorflow.compat.v1.app.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.compat.v1.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_object": "doc",
    "tensorflow.compat.v1.random.stateless_truncated_normal": "doc",
    "tensorflow.compat.v1.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding_column": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_sparse_tensor": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.keras.utils.serialize_keras_object": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TfLiteRNNCell": "doc",
    "tensorflow.compat.v1.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.compat.v1.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.keras.mixed_precision.experimental.set_policy": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_host": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_indexed_slices": "doc",
    "tensorflow.compat.v1.executing_eagerly_outside_functions": "doc",
    "tensorflow.compat.v1.experimental.function_executor_type": "doc",
    "tensorflow.compat.v1.keras.backend.set_image_data_format": "doc",
    "tensorflow.compat.v1.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.compat.v1.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.compat.v1.layers.experimental.set_keras_style": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TFLiteLSTMCell": "doc",
    "tensorflow.compat.v1.losses.sparse_softmax_cross_entropy": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_split": "doc",
    "tensorflow.compat.v1.register_tensor_conversion_function": "doc",
    "tensorflow.compat.v1.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_usage": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.random.experimental.create_rng_state": "doc",
    "tensorflow.compat.v1.resource_loader.get_path_to_datafile": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndRelu": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_growth": "doc",
    "tensorflow.compat.v1.config.experimental.set_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.set_memory_growth": "doc",
    "tensorflow.compat.v1.errors.exception_type_from_error_code": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.compat.v1.keras.experimental.export_saved_model": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.layers.experimental.keras_style_scope": "doc",
    "tensorflow.compat.v1.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_fold_in": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_details": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_cluster": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.compat.v1.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.compat.v1.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.compat.v1.config.get_logical_device_configuration": "doc",
    "tensorflow.compat.v1.config.set_logical_device_configuration": "doc",
    "tensorflow.compat.v1.errors.raise_exception_on_not_ok_status": "doc",
    "tensorflow.compat.v1.experimental.register_filesystem_plugin": "doc",
    "tensorflow.compat.v1.keras.utils.register_keras_serializable": "doc",
    "tensorflow.compat.v1.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits_v2": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.config.experimental.list_logical_devices": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.random.experimental.get_global_generator": "doc",
    "tensorflow.compat.v1.random.experimental.set_global_generator": "doc",
    "tensorflow.compat.v1.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.compat.v1.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.compat.v1.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_input": "doc",
    "tensorflow.compat.v1.tpu.experimental.shared_embedding_columns": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_filter": "doc",
    "tensorflow.compat.v1.lite.experimental.convert_op_hints_to_stubs": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.app.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.compat.v1.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.compat.v1.lite.experimental.get_potentially_supported_ops": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.compat.v1.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.compat.v1.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.tpu.experimental.StochasticGradientDescentParameters": "doc",
    "tensorflow.compat.v1.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.linalg.tridiagonal_solve": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannel": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndRelu": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorNumAccumulated": "doc",
    "tensorflow.UnconnectedGradients": "doc",
    "tensorflow.io.decode_and_crop_jpeg": "doc",
    "tensorflow.nn.RNNCellDeviceWrapper": "doc",
    "tensorflow.nn.compute_average_loss": "doc",
    "tensorflow.nn.max_pool_with_argmax": "doc",
    "tensorflow.test.create_local_cluster": "doc",
    "tensorflow.config.list_logical_devices": "doc",
    "tensorflow.errors.InvalidArgumentError": "doc",
    "tensorflow.raw_ops.AnonymousMemoryCache": "doc",
    "tensorflow.raw_ops.ApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ChooseFastestDataset": "doc",
    "tensorflow.raw_ops.ExtractVolumePatches": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV3": "doc",
    "tensorflow.raw_ops.NonDeterministicInts": "doc",
    "tensorflow.raw_ops.PaddedBatchDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelMapDatasetV2": "doc",
    "tensorflow.raw_ops.RaggedTensorToTensor": "doc",
    "tensorflow.raw_ops.RandomShuffleQueueV2": "doc",
    "tensorflow.raw_ops.RandomStandardNormal": "doc",
    "tensorflow.raw_ops.ReaderRestoreStateV2": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.TPUReplicateMetadata": "doc",
    "tensorflow.raw_ops.TensorListFromTensor": "doc",
    "tensorflow.raw_ops.UnwrapDatasetVariant": "doc",
    "tensorflow.raw_ops.WriteRawProtoSummary": "doc",
    "tensorflow.config.experimental.list_logical_devices": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestGainsPerFeature": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateQuantileStreamResource": "doc",
    "tensorflow.raw_ops.ExperimentalMaxIntraOpParallelismDataset": "doc",
    "tensorflow.assert_rank": "doc",
    "tensorflow.fingerprint": "doc",
    "tensorflow.io.write_graph": "doc",
    "tensorflow.linalg.tensor_diag": "doc",
    "tensorflow.raw_ops.Fingerprint": "doc",
    "tensorflow.raw_ops.StringSplit": "doc",
    "tensorflow.raw_ops.StringStrip": "doc",
    "tensorflow.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.raw_ops.BoostedTreesTrainingPredict": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonicalV2": "doc",
    "tensorflow.raw_ops.RecvTPUEmbeddingActivations": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformIntV2": "doc",
    "tensorflow.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.raw_ops.ScatterNdNonAliasingAdd": "doc",
    "tensorflow.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.raw_ops.BoostedTreesFlushQuantileSummaries": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.feature_column.make_parse_example_spec": "doc",
    "tensorflow.raw_ops.MatrixLogarithm": "doc",
    "tensorflow.recompute_grad": "doc",
    "tensorflow.space_to_batch": "doc",
    "tensorflow.nn.space_to_batch": "doc",
    "tensorflow.nn.space_to_depth": "doc",
    "tensorflow.histogram_fixed_width": "doc",
    "tensorflow.signal.hamming_window": "doc",
    "tensorflow.raw_ops.AudioSummaryV2": "doc",
    "tensorflow.raw_ops.OrderedMapPeek": "doc",
    "tensorflow.raw_ops.ParseExampleV2": "doc",
    "tensorflow.raw_ops.QuantizedRelu6": "doc",
    "tensorflow.raw_ops.QuantizedReluX": "doc",
    "tensorflow.raw_ops.RebatchDataset": "doc",
    "tensorflow.raw_ops.ResourceGather": "doc",
    "tensorflow.raw_ops.StatelessWhile": "doc",
    "tensorflow.raw_ops.TFRecordReader": "doc",
    "tensorflow.raw_ops.TextLineReader": "doc",
    "tensorflow.raw_ops.UnbatchDataset": "doc",
    "tensorflow.io.serialize_many_sparse": "doc",
    "tensorflow.errors.DeadlineExceededError": "doc",
    "tensorflow.raw_ops.BandedTriangularSolve": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.BoostedTreesBucketize": "doc",
    "tensorflow.raw_ops.ComputeAccidentalHits": "doc",
    "tensorflow.raw_ops.DeserializeManySparse": "doc",
    "tensorflow.raw_ops.ParallelDynamicStitch": "doc",
    "tensorflow.raw_ops.ParseExampleDatasetV2": "doc",
    "tensorflow.raw_ops.QuantizedInstanceNorm": "doc",
    "tensorflow.raw_ops.ScaleAndTranslateGrad": "doc",
    "tensorflow.raw_ops.SparseMatrixTranspose": "doc",
    "tensorflow.raw_ops.SparseReduceMaxSparse": "doc",
    "tensorflow.raw_ops.SparseReduceSumSparse": "doc",
    "tensorflow.raw_ops.WriteHistogramSummary": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeStatsSummary": "doc",
    "tensorflow.raw_ops.ExperimentalTakeWhileDataset": "doc",
    "tensorflow.raw_ops.FilterByLastComponentDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRequantize": "doc",
    "tensorflow.raw_ops.ResourceApplyGradientDescent": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.TakeManySparseFromTensorsMap": "doc",
    "tensorflow.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndReluAndRequantize": "doc",
    "tensorflow.feature_column.indicator_column": "doc",
    "tensorflow.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.raw_ops.ExperimentalPrivateThreadPoolDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRequantize": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.BoostedTreesGetEnsembleStates": "doc",
    "tensorflow.raw_ops.ExperimentalAssertNextDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetToTFRecord": "doc",
    "tensorflow.raw_ops.ExperimentalIteratorGetDevice": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFileV2": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariantGradient": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullInt": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.extract_volume_patches": "doc",
    "tensorflow.nn.RNNCellResidualWrapper": "doc",
    "tensorflow.raw_ops.BoostedTreesCenterBias": "doc",
    "tensorflow.raw_ops.DatasetToSingleElement": "doc",
    "tensorflow.raw_ops.ExperimentalCSVDataset": "doc",
    "tensorflow.raw_ops.ExperimentalMapDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSqlDataset": "doc",
    "tensorflow.raw_ops.NonSerializableDataset": "doc",
    "tensorflow.raw_ops.PlaceholderWithDefault": "doc",
    "tensorflow.raw_ops.ResourceApplyPowerSign": "doc",
    "tensorflow.raw_ops.StatefulRandomBinomial": "doc",
    "tensorflow.raw_ops.StatefulStandardNormal": "doc",
    "tensorflow.raw_ops.StatefulUniformFullInt": "doc",
    "tensorflow.raw_ops.StatelessRandomPoisson": "doc",
    "tensorflow.raw_ops.StatsAggregatorSummary": "doc",
    "tensorflow.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.ExperimentalDirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.guarantee_const": "doc",
    "tensorflow.mixed_precision": "doc",
    "tensorflow.io.TFRecordOptions": "doc",
    "tensorflow.keras.mixed_precision": "doc",
    "tensorflow.tensor_scatter_nd_min": "doc",
    "tensorflow.raw_ops.BatchMatrixDiag": "doc",
    "tensorflow.raw_ops.CrossReplicaSum": "doc",
    "tensorflow.raw_ops.InitializeTable": "doc",
    "tensorflow.raw_ops.MapUnstageNoKey": "doc",
    "tensorflow.raw_ops.OneShotIterator": "doc",
    "tensorflow.raw_ops.PartitionedCall": "doc",
    "tensorflow.raw_ops.PopulationCount": "doc",
    "tensorflow.raw_ops.PriorityQueueV2": "doc",
    "tensorflow.raw_ops.PyFuncStateless": "doc",
    "tensorflow.raw_ops.RandomGammaGrad": "doc",
    "tensorflow.raw_ops.RandomPoissonV2": "doc",
    "tensorflow.raw_ops.ShardedFilename": "doc",
    "tensorflow.raw_ops.SparseApplyFtrl": "doc",
    "tensorflow.raw_ops.SparseMatrixAdd": "doc",
    "tensorflow.raw_ops.SparseMatrixMul": "doc",
    "tensorflow.raw_ops.SparseMatrixNNZ": "doc",
    "tensorflow.raw_ops.SparseReduceMax": "doc",
    "tensorflow.raw_ops.SparseReduceSum": "doc",
    "tensorflow.raw_ops.TensorArraySize": "doc",
    "tensorflow.raw_ops.WholeFileReader": "doc",
    "tensorflow.raw_ops.DatasetCardinality": "doc",
    "tensorflow.raw_ops.ResourceScatterMin": "doc",
    "tensorflow.raw_ops.StridedSliceAssign": "doc",
    "tensorflow.keras.mixed_precision.Policy": "doc",
    "tensorflow.keras.models.model_from_json": "doc",
    "tensorflow.keras.models.model_from_yaml": "doc",
    "tensorflow.mixed_precision.experimental": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandle": "doc",
    "tensorflow.keras.mixed_precision.experimental": "doc",
    "tensorflow.keras.mixed_precision.global_policy": "doc",
    "tensorflow.errors.OperatorNotAllowedInGraphError": "doc",
    "tensorflow.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetCardinality": "doc",
    "tensorflow.raw_ops.ExperimentalMapAndBatchDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRelu": "doc",
    "tensorflow.raw_ops.ResourceConditionalAccumulator": "doc",
    "tensorflow.raw_ops.SparseAccumulatorApplyGradient": "doc",
    "tensorflow.keras.mixed_precision.set_global_policy": "doc",
    "tensorflow.keras.mixed_precision.experimental.Policy": "doc",
    "tensorflow.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.keras.mixed_precision.experimental.global_policy": "doc",
    "tensorflow.keras.mixed_precision.experimental.get_layer_policy": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceDeserialize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.VariableSynchronization": "doc",
    "tensorflow.io.FixedLenSequenceFeature": "doc",
    "tensorflow.nn.compute_accidental_hits": "doc",
    "tensorflow.losses.CategoricalCrossentropy": "doc",
    "tensorflow.raw_ops.ConfigureDistributedTPU": "doc",
    "tensorflow.raw_ops.ExperimentalLMDBDataset": "doc",
    "tensorflow.raw_ops.ExperimentalScanDataset": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorInit": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBias": "doc",
    "tensorflow.raw_ops.RaggedCountSparseOutput": "doc",
    "tensorflow.raw_ops.RaggedTensorFromVariant": "doc",
    "tensorflow.raw_ops.SparseCountSparseOutput": "doc",
    "tensorflow.raw_ops.StatefulTruncatedNormal": "doc",
    "tensorflow.raw_ops.StatelessRandomBinomial": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandleV2": "doc",
    "tensorflow.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceAddSummaries": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndReluAndRequantize": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.config.experimental_connect_to_cluster": "doc",
    "tensorflow.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingIntegerBatch": "doc",
    "tensorflow.raw_ops.ExperimentalIgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalParseExampleDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgsGradient": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsGradient": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullIntV2": "doc",
    "tensorflow.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplitV2": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceFlush": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.hessians": "doc",
    "tensorflow.raw_ops.FloorDiv": "doc",
    "tensorflow.raw_ops.SqrtGrad": "doc",
    "tensorflow.raw_ops.MatrixDiagV2": "doc",
    "tensorflow.raw_ops.MatrixDiagV3": "doc",
    "tensorflow.raw_ops.OptionalNone": "doc",
    "tensorflow.raw_ops.StringFormat": "doc",
    "tensorflow.raw_ops.StringLength": "doc",
    "tensorflow.raw_ops.StringNGrams": "doc",
    "tensorflow.raw_ops.UnravelIndex": "doc",
    "tensorflow.linalg.matrix_transpose": "doc",
    "tensorflow.linalg.triangular_solve": "doc",
    "tensorflow.feature_column.weighted_categorical_column": "doc",
    "tensorflow.RaggedTensorSpec": "doc",
    "tensorflow.SparseTensorSpec": "doc",
    "tensorflow.get_static_value": "doc",
    "tensorflow.reduce_logsumexp": "doc",
    "tensorflow.io.serialize_sparse": "doc",
    "tensorflow.nn.depthwise_conv2d": "doc",
    "tensorflow.nn.weighted_moments": "doc",
    "tensorflow.queue.PaddingFIFOQueue": "doc",
    "tensorflow.errors.UnavailableError": "doc",
    "tensorflow.linalg.tensor_diag_part": "doc",
    "tensorflow.losses.MeanSquaredError": "doc",
    "tensorflow.raw_ops.AutoShardDataset": "doc",
    "tensorflow.raw_ops.BarrierReadySize": "doc",
    "tensorflow.raw_ops.BatchMatrixSolve": "doc",
    "tensorflow.raw_ops.CTCGreedyDecoder": "doc",
    "tensorflow.raw_ops.ConsumeMutexLock": "doc",
    "tensorflow.raw_ops.CudnnRNNBackprop": "doc",
    "tensorflow.raw_ops.DatasetFromGraph": "doc",
    "tensorflow.raw_ops.DecodeCompressed": "doc",
    "tensorflow.raw_ops.ExtractJpegShape": "doc",
    "tensorflow.raw_ops.GeneratorDataset": "doc",
    "tensorflow.raw_ops.HistogramSummary": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV2": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV3": "doc",
    "tensorflow.raw_ops.OptionalGetValue": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueue": "doc",
    "tensorflow.raw_ops.QuantizedBiasAdd": "doc",
    "tensorflow.raw_ops.QuantizedReshape": "doc",
    "tensorflow.raw_ops.RandomUniformInt": "doc",
    "tensorflow.raw_ops.RebatchDatasetV2": "doc",
    "tensorflow.raw_ops.ResourceGatherNd": "doc",
    "tensorflow.raw_ops.SparseSegmentSum": "doc",
    "tensorflow.raw_ops.TFRecordReaderV2": "doc",
    "tensorflow.raw_ops.TakeWhileDataset": "doc",
    "tensorflow.raw_ops.TensorListLength": "doc",
    "tensorflow.raw_ops.TensorScatterAdd": "doc",
    "tensorflow.raw_ops.TensorScatterMax": "doc",
    "tensorflow.raw_ops.TensorScatterSub": "doc",
    "tensorflow.raw_ops.TextLineReaderV2": "doc",
    "tensorflow.raw_ops.TridiagonalSolve": "doc",
    "tensorflow.keras.losses.MeanSquaredError": "doc",
    "tensorflow.losses.categorical_crossentropy": "doc",
    "tensorflow.nondifferentiable_batch_function": "doc",
    "tensorflow.raw_ops.DebugGradientRefIdentity": "doc",
    "tensorflow.raw_ops.ExperimentalSleepDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDataset": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProduced": "doc",
    "tensorflow.raw_ops.SparseTensorSliceDataset": "doc",
    "tensorflow.raw_ops.StatefulStandardNormalV2": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormal": "doc",
    "tensorflow.raw_ops.TensorArrayGradWithShape": "doc",
    "tensorflow.raw_ops.UnicodeDecodeWithOffsets": "doc",
    "tensorflow.required_space_to_batch_paddings": "doc",
    "tensorflow.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.experimental.tensorrt.ConversionParams": "doc",
    "tensorflow.config.get_logical_device_configuration": "doc",
    "tensorflow.config.set_logical_device_configuration": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByWindowDataset": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorApplyGradient": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorSetGlobalStep": "doc",
    "tensorflow.keras.callbacks.experimental.BackupAndRestore": "doc",
    "tensorflow.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannelGradient": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByReducerDataset": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorHandle": "doc",
    "tensorflow.raw_ops.TensorListScatterIntoExistingList": "doc",
    "tensorflow.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.nn.scale_regularization_loss": "doc",
    "tensorflow.test.is_built_with_gpu_support": "doc",
    "tensorflow.config.get_soft_device_placement": "doc",
    "tensorflow.config.set_soft_device_placement": "doc",
    "tensorflow.raw_ops.BytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.CombinedNonMaxSuppression": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParams": "doc",
    "tensorflow.raw_ops.DenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.DenseToSparseSetOperation": "doc",
    "tensorflow.raw_ops.EncodeJpegVariableQuality": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradWithArgmax": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensors": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DPerChannel": "doc",
    "tensorflow.raw_ops.SetStatsAggregatorDataset": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceHandleOp": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.make_tensor_proto": "doc",
    "tensorflow.space_to_batch_nd": "doc",
    "tensorflow.io.decode_compressed": "doc",
    "tensorflow.nn.collapse_repeated": "doc",
    "tensorflow.test.is_built_with_xla": "doc",
    "tensorflow.raw_ops.BarrierInsertMany": "doc",
    "tensorflow.raw_ops.CompareAndBitpack": "doc",
    "tensorflow.raw_ops.DecodeAndCropJpeg": "doc",
    "tensorflow.raw_ops.InitializeTableV2": "doc",
    "tensorflow.raw_ops.LookupTableExport": "doc",
    "tensorflow.raw_ops.LookupTableFindV2": "doc",
    "tensorflow.raw_ops.LookupTableImport": "doc",
    "tensorflow.raw_ops.MaxPoolWithArgmax": "doc",
    "tensorflow.raw_ops.NonMaxSuppression": "doc",
    "tensorflow.raw_ops.OrderedMapUnstage": "doc",
    "tensorflow.raw_ops.SparseApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SparseCrossHashed": "doc",
    "tensorflow.raw_ops.TemporaryVariable": "doc",
    "tensorflow.raw_ops.TensorArrayGather": "doc",
    "tensorflow.raw_ops.TensorListGetItem": "doc",
    "tensorflow.raw_ops.TensorListSetItem": "doc",
    "tensorflow.raw_ops.ThreadPoolDataset": "doc",
    "tensorflow.raw_ops.TridiagonalMatMul": "doc",
    "tensorflow.raw_ops.UncompressElement": "doc",
    "tensorflow.raw_ops.WholeFileReaderV2": "doc",
    "tensorflow.raw_ops.WriteAudioSummary": "doc",
    "tensorflow.raw_ops.WriteGraphSummary": "doc",
    "tensorflow.raw_ops.WriteImageSummary": "doc",
    "tensorflow.experimental.async_clear_error": "doc",
    "tensorflow.keras.models.model_from_config": "doc",
    "tensorflow.keras.backend.image_data_format": "doc",
    "tensorflow.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorSummary": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.nn.fractional_max_pool": "doc",
    "tensorflow.nn.isotonic_regression": "doc",
    "tensorflow.raw_ops.IteratorGetNextSync": "doc",
    "tensorflow.raw_ops.SerializeManySparse": "doc",
    "tensorflow.histogram_fixed_width_bins": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateEnsemble": "doc",
    "tensorflow.raw_ops.ChooseFastestBranchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalRebatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalUnbatchDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDatasetV2": "doc",
    "tensorflow.raw_ops.InitializeTableFromDataset": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProducedV2": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBox": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormalV2": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSignedSumAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorGetNextFromShard": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.SparseSoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.StatelessSampleDistortedBoundingBox": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceGetBucketBoundaries": "doc",
    "tensorflow.raw_ops.FractionalAvgPool": "doc",
    "tensorflow.raw_ops.FractionalMaxPool": "doc",
    "tensorflow.matrix_square_root": "doc",
    "tensorflow.io.extract_jpeg_shape": "doc",
    "tensorflow.nn.ctc_greedy_decoder": "doc",
    "tensorflow.test.is_built_with_cuda": "doc",
    "tensorflow.losses.BinaryCrossentropy": "doc",
    "tensorflow.raw_ops.BatchMatrixSetDiag": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV2": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV3": "doc",
    "tensorflow.raw_ops.GetSessionHandleV2": "doc",
    "tensorflow.raw_ops.MutableHashTableV2": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueueV2": "doc",
    "tensorflow.raw_ops.ParseSingleExample": "doc",
    "tensorflow.raw_ops.ReaderRestoreState": "doc",
    "tensorflow.raw_ops.ResourceScatterAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterDiv": "doc",
    "tensorflow.raw_ops.ResourceScatterMax": "doc",
    "tensorflow.raw_ops.ResourceScatterMul": "doc",
    "tensorflow.raw_ops.ResourceScatterSub": "doc",
    "tensorflow.raw_ops.StaticRegexReplace": "doc",
    "tensorflow.raw_ops.TensorArrayScatter": "doc",
    "tensorflow.raw_ops.TensorArraySplitV2": "doc",
    "tensorflow.raw_ops.TensorArraySplitV3": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV2": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV3": "doc",
    "tensorflow.raw_ops.TensorSliceDataset": "doc",
    "tensorflow.raw_ops.WriteScalarSummary": "doc",
    "tensorflow.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParamsV2": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFile": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensorsV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV3": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV4": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdadelta": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyMomentum": "doc",
    "tensorflow.config.experimental.get_device_details": "doc",
    "tensorflow.raw_ops.BoostedTreesEnsembleResourceHandleOp": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingRaggedTensorBatch": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseTensorBatch": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.raw_ops.ExperimentalBytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSetStatsAggregatorDataset": "doc",
    "tensorflow.saturate_cast": "doc",
    "tensorflow.strided_slice": "doc",
    "tensorflow.nn.zero_fraction": "doc",
    "tensorflow.errors.InternalError": "doc",
    "tensorflow.losses.squared_hinge": "doc",
    "tensorflow.signal.kaiser_window": "doc",
    "tensorflow.signal.vorbis_window": "doc",
    "tensorflow.raw_ops.BatchFunction": "doc",
    "tensorflow.raw_ops.FilterDataset": "doc",
    "tensorflow.raw_ops.MatrixInverse": "doc",
    "tensorflow.raw_ops.MatrixSetDiag": "doc",
    "tensorflow.raw_ops.ScatterUpdate": "doc",
    "tensorflow.raw_ops.StringSplitV2": "doc",
    "tensorflow.keras.preprocessing.text": "doc",
    "tensorflow.keras.losses.squared_hinge": "doc",
    "tensorflow.keras.backend.clear_session": "doc",
    "tensorflow.keras.preprocessing.sequence": "doc",
    "tensorflow.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc",
    "tensorflow.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.config.experimental_connect_to_host": "doc",
    "tensorflow.raw_ops.ExperimentalAutoShardDataset": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolHandle": "doc",
    "tensorflow.raw_ops.GenerateBoundingBoxProposals": "doc",
    "tensorflow.raw_ops.ResourceApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBoxV2": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.io.decode_json_example": "doc",
    "tensorflow.nn.with_space_to_batch": "doc",
    "tensorflow.raw_ops.Conv2DBackpropInput": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInput": "doc",
    "tensorflow.raw_ops.DebugNumericSummary": "doc",
    "tensorflow.raw_ops.DeleteSeedGenerator": "doc",
    "tensorflow.raw_ops.LatencyStatsDataset": "doc",
    "tensorflow.raw_ops.LookupTableExportV2": "doc",
    "tensorflow.raw_ops.LookupTableImportV2": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV2": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV3": "doc",
    "tensorflow.raw_ops.TensorScatterUpdate": "doc",
    "tensorflow.raw_ops.UnsortedSegmentJoin": "doc",
    "tensorflow.raw_ops.UnsortedSegmentProd": "doc",
    "tensorflow.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolDataset": "doc",
    "tensorflow.raw_ops.SoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.SparseTensorToCSRSparseMatrix": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.feature_column.sequence_numeric_column": "doc",
    "tensorflow.control_dependencies": "doc",
    "tensorflow.type_spec_from_value": "doc",
    "tensorflow.io.match_filenames_once": "doc",
    "tensorflow.io.parse_single_example": "doc",
    "tensorflow.nn.sampled_softmax_loss": "doc",
    "tensorflow.raw_ops.GroupByWindowDataset": "doc",
    "tensorflow.raw_ops.MatchingFilesDataset": "doc",
    "tensorflow.raw_ops.RaggedTensorToSparse": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagrad": "doc",
    "tensorflow.raw_ops.ResourceApplyRMSProp": "doc",
    "tensorflow.raw_ops.ResourceScatterNdAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMax": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMin": "doc",
    "tensorflow.raw_ops.ResourceScatterNdSub": "doc",
    "tensorflow.raw_ops.SlidingWindowDataset": "doc",
    "tensorflow.raw_ops.SparseTensorDenseAdd": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV2": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV3": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseBatch": "doc",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.linalg.tensordot": "doc",
    "tensorflow.raw_ops.RestoreV2": "doc",
    "tensorflow.raw_ops.RsqrtGrad": "doc",
    "tensorflow.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.raw_ops.IsotonicRegression": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.BoostedTreesExampleDebugOutputs": "doc",
    "tensorflow.raw_ops.ExperimentalLatencyStatsDataset": "doc",
    "tensorflow.tensor_scatter_nd_add": "doc",
    "tensorflow.tensor_scatter_nd_max": "doc",
    "tensorflow.tensor_scatter_nd_sub": "doc",
    "tensorflow.nn.sufficient_statistics": "doc",
    "tensorflow.config.functions_run_eagerly": "doc",
    "tensorflow.lookup.StaticVocabularyTable": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInputV2": "doc",
    "tensorflow.raw_ops.DebugGradientIdentity": "doc",
    "tensorflow.raw_ops.DebugNumericSummaryV2": "doc",
    "tensorflow.raw_ops.FractionalAvgPoolGrad": "doc",
    "tensorflow.raw_ops.FractionalMaxPoolGrad": "doc",
    "tensorflow.raw_ops.GroupByReducerDataset": "doc",
    "tensorflow.raw_ops.MatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.MaxPoolGradWithArgmax": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTupleV2": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariant": "doc",
    "tensorflow.raw_ops.ResourceApplyAdadelta": "doc",
    "tensorflow.raw_ops.ResourceApplyMomentum": "doc",
    "tensorflow.raw_ops.ResourceScatterUpdate": "doc",
    "tensorflow.raw_ops.StatelessRandomNormal": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandle": "doc",
    "tensorflow.raw_ops.TensorListConcatLists": "doc",
    "tensorflow.keras.backend.set_image_data_format": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseAggregateStats": "doc",
    "tensorflow.raw_ops.ExperimentalChooseFastestDataset": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyKerasMomentum": "doc",
    "tensorflow.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.raw_ops.DenseToDenseSetOperation": "doc",
    "tensorflow.raw_ops.ApplyPowerSign": "doc",
    "tensorflow.raw_ops.DatasetToGraph": "doc",
    "tensorflow.raw_ops.ParallelConcat": "doc",
    "tensorflow.sysconfig.get_build_info": "doc",
    "tensorflow.sysconfig.get_link_flags": "doc",
    "tensorflow.variable_creator_scope": "doc",
    "tensorflow.test.assert_equal_graph_def": "doc",
    "tensorflow.errors.ResourceExhaustedError": "doc",
    "tensorflow.signal.inverse_stft_window_fn": "doc",
    "tensorflow.raw_ops.DenseCountSparseOutput": "doc",
    "tensorflow.raw_ops.DenseToCSRSparseMatrix": "doc",
    "tensorflow.raw_ops.GenerateVocabRemapping": "doc",
    "tensorflow.raw_ops.ParseSequenceExampleV2": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRelu": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradV2": "doc",
    "tensorflow.raw_ops.StatelessRandomGammaV2": "doc",
    "tensorflow.raw_ops.TensorListElementShape": "doc",
    "tensorflow.experimental.function_executor_type": "doc",
    "tensorflow.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.raw_ops.LegacyParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorToStringHandle": "doc",
    "tensorflow.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropInput": "doc",
    "tensorflow.nn.embedding_lookup_sparse": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropInput": "doc",
    "tensorflow.raw_ops.FusedResizeAndPadConv2D": "doc",
    "tensorflow.raw_ops.MutableDenseHashTableV2": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBias": "doc",
    "tensorflow.raw_ops.ResourceScatterNdUpdate": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrl": "doc",
    "tensorflow.raw_ops.SparseTensorDenseMatMul": "doc",
    "tensorflow.raw_ops.StatelessRandomNormalV2": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc",
    "tensorflow.feature_column": "doc",
    "tensorflow.vectorized_map": "doc",
    "tensorflow.feature_column.crossed_column": "doc",
    "tensorflow.feature_column.numeric_column": "doc",
    "tensorflow.feature_column.embedding_column": "doc",
    "tensorflow.feature_column.bucketized_column": "doc",
    "tensorflow.register_tensor_conversion_function": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorFromStringHandle": "doc",
    "tensorflow.tensor_scatter_nd_update": "doc",
    "tensorflow.raw_ops.DestroyTemporaryVariable": "doc",
    "tensorflow.raw_ops.PrivateThreadPoolDataset": "doc",
    "tensorflow.raw_ops.StringToHashBucketStrong": "doc",
    "tensorflow.raw_ops.DirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrlV2": "doc",
    "tensorflow.io": "doc",
    "tensorflow.abs": "doc",
    "tensorflow.add": "doc",
    "tensorflow.eig": "doc",
    "tensorflow.exp": "doc",
    "tensorflow.eye": "doc",
    "tensorflow.pad": "doc",
    "tensorflow.pow": "doc",
    "tensorflow.tpu": "doc",
    "tensorflow.xla": "doc",
    "tensorflow.acos": "doc",
    "tensorflow.fill": "doc",
    "tensorflow.nest": "doc",
    "tensorflow.norm": "doc",
    "tensorflow.ones": "doc",
    "tensorflow.sets": "doc",
    "tensorflow.sign": "doc",
    "tensorflow.sinh": "doc",
    "tensorflow.sort": "doc",
    "tensorflow.sqrt": "doc",
    "tensorflow.test": "doc",
    "tensorflow.acosh": "doc",
    "tensorflow.add_n": "doc",
    "tensorflow.floor": "doc",
    "tensorflow.foldr": "doc",
    "tensorflow.group": "doc",
    "tensorflow.no_op": "doc",
    "tensorflow.queue": "doc",
    "tensorflow.stack": "doc",
    "tensorflow.where": "doc",
    "tensorflow.zeros": "doc",
    "tensorflow.Module": "doc",
    "tensorflow.Tensor": "doc",
    "tensorflow.concat": "doc",
    "tensorflow.config": "doc",
    "tensorflow.einsum": "doc",
    "tensorflow.linalg": "doc",
    "tensorflow.lookup": "doc",
    "tensorflow.losses": "doc",
    "tensorflow.repeat": "doc",
    "tensorflow.signal": "doc",
    "tensorflow.square": "doc",
    "tensorflow.argsort": "doc",
    "tensorflow.eigvals": "doc",
    "tensorflow.nn.pool": "doc",
    "tensorflow.nn.silu": "doc",
    "tensorflow.one_hot": "doc",
    "tensorflow.raw_ops": "doc",
    "tensorflow.reverse": "doc",
    "tensorflow.unstack": "doc",
    "tensorflow.constant": "doc",
    "tensorflow.nn.swish": "doc",
    "tensorflow.nn.top_k": "doc",
    "tensorflow.linalg.lu": "doc",
    "tensorflow.linalg.qr": "doc",
    "tensorflow.not_equal": "doc",
    "tensorflow.sysconfig": "doc",
    "tensorflow.DeviceSpec": "doc",
    "tensorflow.TensorSpec": "doc",
    "tensorflow.init_scope": "doc",
    "tensorflow.linalg.eig": "doc",
    "tensorflow.linalg.eye": "doc",
    "tensorflow.linalg.inv": "doc",
    "tensorflow.linalg.svd": "doc",
    "tensorflow.logical_or": "doc",
    "tensorflow.losses.KLD": "doc",
    "tensorflow.losses.MAE": "doc",
    "tensorflow.losses.MSE": "doc",
    "tensorflow.losses.get": "doc",
    "tensorflow.losses.kld": "doc",
    "tensorflow.raw_ops.If": "doc",
    "tensorflow.raw_ops.Lu": "doc",
    "tensorflow.raw_ops.Qr": "doc",
    "tensorflow.reduce_max": "doc",
    "tensorflow.reduce_sum": "doc",
    "tensorflow.sets.union": "doc",
    "tensorflow.signal.fft": "doc",
    "tensorflow.TensorShape": "doc",
    "tensorflow.assert_less": "doc",
    "tensorflow.keras.Input": "doc",
    "tensorflow.keras.Model": "doc",
    "tensorflow.linalg.eigh": "doc",
    "tensorflow.linalg.logm": "doc",
    "tensorflow.linalg.norm": "doc",
    "tensorflow.losses.Loss": "doc",
    "tensorflow.losses.MAPE": "doc",
    "tensorflow.losses.MSLE": "doc",
    "tensorflow.nn.avg_pool": "doc",
    "tensorflow.nn.bias_add": "doc",
    "tensorflow.nn.ctc_loss": "doc",
    "tensorflow.nn.in_top_k": "doc",
    "tensorflow.nn.softplus": "doc",
    "tensorflow.py_function": "doc",
    "tensorflow.raw_ops.Abs": "doc",
    "tensorflow.raw_ops.All": "doc",
    "tensorflow.raw_ops.Any": "doc",
    "tensorflow.raw_ops.Cos": "doc",
    "tensorflow.raw_ops.Div": "doc",
    "tensorflow.raw_ops.Eig": "doc",
    "tensorflow.raw_ops.Elu": "doc",
    "tensorflow.raw_ops.Erf": "doc",
    "tensorflow.raw_ops.Exp": "doc",
    "tensorflow.raw_ops.FFT": "doc",
    "tensorflow.raw_ops.For": "doc",
    "tensorflow.raw_ops.Inv": "doc",
    "tensorflow.raw_ops.LRN": "doc",
    "tensorflow.raw_ops.Log": "doc",
    "tensorflow.raw_ops.Max": "doc",
    "tensorflow.raw_ops.Mod": "doc",
    "tensorflow.raw_ops.Mul": "doc",
    "tensorflow.raw_ops.Neg": "doc",
    "tensorflow.raw_ops.Pad": "doc",
    "tensorflow.raw_ops.Pow": "doc",
    "tensorflow.raw_ops.Sub": "doc",
    "tensorflow.raw_ops.Sum": "doc",
    "tensorflow.raw_ops.Svd": "doc",
    "tensorflow.reduce_mean": "doc",
    "tensorflow.signal.ifft": "doc",
    "tensorflow.signal.rfft": "doc",
    "tensorflow.signal.stft": "doc",
    "tensorflow.switch_case": "doc",
    "tensorflow.assert_equal": "doc",
    "tensorflow.boolean_mask": "doc",
    "tensorflow.clip_by_norm": "doc",
    "tensorflow.ensure_shape": "doc",
    "tensorflow.experimental": "doc",
    "tensorflow.keras.losses": "doc",
    "tensorflow.keras.models": "doc",
    "tensorflow.linalg.cross": "doc",
    "tensorflow.linalg.lstsq": "doc",
    "tensorflow.linalg.solve": "doc",
    "tensorflow.make_ndarray": "doc",
    "tensorflow.raw_ops.Acos": "doc",
    "tensorflow.raw_ops.Ceil": "doc",
    "tensorflow.raw_ops.Conj": "doc",
    "tensorflow.raw_ops.Copy": "doc",
    "tensorflow.raw_ops.Cosh": "doc",
    "tensorflow.raw_ops.Diag": "doc",
    "tensorflow.raw_ops.Erfc": "doc",
    "tensorflow.raw_ops.Exit": "doc",
    "tensorflow.raw_ops.Fill": "doc",
    "tensorflow.raw_ops.IFFT": "doc",
    "tensorflow.raw_ops.Imag": "doc",
    "tensorflow.raw_ops.Less": "doc",
    "tensorflow.raw_ops.Mfcc": "doc",
    "tensorflow.raw_ops.Pack": "doc",
    "tensorflow.raw_ops.Prod": "doc",
    "tensorflow.raw_ops.RFFT": "doc",
    "tensorflow.raw_ops.Rank": "doc",
    "tensorflow.raw_ops.Real": "doc",
    "tensorflow.raw_ops.Recv": "doc",
    "tensorflow.raw_ops.Relu": "doc",
    "tensorflow.raw_ops.Rint": "doc",
    "tensorflow.raw_ops.Roll": "doc",
    "tensorflow.raw_ops.Selu": "doc",
    "tensorflow.raw_ops.Send": "doc",
    "tensorflow.raw_ops.Sign": "doc",
    "tensorflow.raw_ops.Sinh": "doc",
    "tensorflow.raw_ops.Sqrt": "doc",
    "tensorflow.raw_ops.Tanh": "doc",
    "tensorflow.raw_ops.TopK": "doc",
    "tensorflow.raw_ops.Zeta": "doc",
    "tensorflow.signal.fft2d": "doc",
    "tensorflow.signal.fft3d": "doc",
    "tensorflow.signal.irfft": "doc",
    "tensorflow.io.decode_bmp": "doc",
    "tensorflow.io.decode_csv": "doc",
    "tensorflow.io.decode_png": "doc",
    "tensorflow.io.decode_raw": "doc",
    "tensorflow.io.encode_png": "doc",
    "tensorflow.keras.backend": "doc",
    "tensorflow.linalg.einsum": "doc",
    "tensorflow.linalg.logdet": "doc",
    "tensorflow.nn.avg_pool1d": "doc",
    "tensorflow.nn.avg_pool2d": "doc",
    "tensorflow.nn.avg_pool3d": "doc",
    "tensorflow.nn.leaky_relu": "doc",
    "tensorflow.raw_ops.Acosh": "doc",
    "tensorflow.raw_ops.Const": "doc",
    "tensorflow.raw_ops.Cross": "doc",
    "tensorflow.raw_ops.Dawsn": "doc",
    "tensorflow.raw_ops.Equal": "doc",
    "tensorflow.raw_ops.FFT2D": "doc",
    "tensorflow.raw_ops.FFT3D": "doc",
    "tensorflow.raw_ops.Floor": "doc",
    "tensorflow.raw_ops.IRFFT": "doc",
    "tensorflow.raw_ops.IsInf": "doc",
    "tensorflow.raw_ops.IsNan": "doc",
    "tensorflow.raw_ops.Log1p": "doc",
    "tensorflow.raw_ops.Merge": "doc",
    "tensorflow.raw_ops.PadV2": "doc",
    "tensorflow.raw_ops.Relu6": "doc",
    "tensorflow.raw_ops.Round": "doc",
    "tensorflow.raw_ops.Rsqrt": "doc",
    "tensorflow.raw_ops.Stack": "doc",
    "tensorflow.raw_ops.Where": "doc",
    "tensorflow.raw_ops.Xlogy": "doc",
    "tensorflow.signal.ifft2d": "doc",
    "tensorflow.signal.ifft3d": "doc",
    "tensorflow.signal.rfft2d": "doc",
    "tensorflow.signal.rfft3d": "doc",
    "tensorflow.io.encode_jpeg": "doc",
    "tensorflow.linalg.eigvals": "doc",
    "tensorflow.linalg.slogdet": "doc",
    "tensorflow.losses.LogCosh": "doc",
    "tensorflow.losses.Poisson": "doc",
    "tensorflow.losses.logcosh": "doc",
    "tensorflow.nn.convolution": "doc",
    "tensorflow.nn.log_softmax": "doc",
    "tensorflow.raw_ops.ArgMax": "doc",
    "tensorflow.raw_ops.Concat": "doc",
    "tensorflow.raw_ops.Conv2D": "doc",
    "tensorflow.raw_ops.Conv3D": "doc",
    "tensorflow.raw_ops.Einsum": "doc",
    "tensorflow.raw_ops.IFFT2D": "doc",
    "tensorflow.raw_ops.IFFT3D": "doc",
    "tensorflow.raw_ops.InTopK": "doc",
    "tensorflow.raw_ops.Invert": "doc",
    "tensorflow.raw_ops.L2Loss": "doc",
    "tensorflow.raw_ops.OneHot": "doc",
    "tensorflow.raw_ops.PyFunc": "doc",
    "tensorflow.raw_ops.RFFT2D": "doc",
    "tensorflow.raw_ops.RFFT3D": "doc",
    "tensorflow.raw_ops.SaveV2": "doc",
    "tensorflow.raw_ops.Select": "doc",
    "tensorflow.raw_ops.Square": "doc",
    "tensorflow.raw_ops.Switch": "doc",
    "tensorflow.raw_ops.ToBool": "doc",
    "tensorflow.raw_ops.TopKV2": "doc",
    "tensorflow.raw_ops.Unpack": "doc",
    "tensorflow.signal.irfft2d": "doc",
    "tensorflow.signal.irfft3d": "doc",
    "tensorflow.test.Benchmark": "doc",
    "tensorflow.io.decode_proto": "doc",
    "tensorflow.io.encode_proto": "doc",
    "tensorflow.keras.callbacks": "doc",
    "tensorflow.linalg.cholesky": "doc",
    "tensorflow.linalg.eigvalsh": "doc",
    "tensorflow.linalg.lu_solve": "doc",
    "tensorflow.losses.log_cosh": "doc",
    "tensorflow.queue.QueueBase": "doc",
    "tensorflow.raw_ops.AvgPool": "doc",
    "tensorflow.raw_ops.BiasAdd": "doc",
    "tensorflow.raw_ops.CTCLoss": "doc",
    "tensorflow.raw_ops.EluGrad": "doc",
    "tensorflow.raw_ops.IRFFT2D": "doc",
    "tensorflow.raw_ops.IRFFT3D": "doc",
    "tensorflow.raw_ops.InvGrad": "doc",
    "tensorflow.raw_ops.LRNGrad": "doc",
    "tensorflow.raw_ops.MaxPool": "doc",
    "tensorflow.raw_ops.MutexV2": "doc",
    "tensorflow.raw_ops.RefExit": "doc",
    "tensorflow.raw_ops.Reverse": "doc",
    "tensorflow.raw_ops.RngSkip": "doc",
    "tensorflow.raw_ops.StackV2": "doc",
    "tensorflow.raw_ops.Unbatch": "doc",
    "tensorflow.raw_ops.Xlog1py": "doc",
    "tensorflow.io.RaggedFeature": "doc",
    "tensorflow.io.VarLenFeature": "doc",
    "tensorflow.io.decode_base64": "doc",
    "tensorflow.io.encode_base64": "doc",
    "tensorflow.io.parse_example": "doc",
    "tensorflow.keras.losses.KLD": "doc",
    "tensorflow.keras.losses.MAE": "doc",
    "tensorflow.keras.losses.MSE": "doc",
    "tensorflow.keras.losses.get": "doc",
    "tensorflow.keras.losses.kld": "doc",
    "tensorflow.linalg.band_part": "doc",
    "tensorflow.raw_ops.AllToAll": "doc",
    "tensorflow.raw_ops.BesselI0": "doc",
    "tensorflow.raw_ops.BesselI1": "doc",
    "tensorflow.raw_ops.BesselJ0": "doc",
    "tensorflow.raw_ops.BesselJ1": "doc",
    "tensorflow.raw_ops.BesselK0": "doc",
    "tensorflow.raw_ops.BesselK1": "doc",
    "tensorflow.raw_ops.BesselY0": "doc",
    "tensorflow.raw_ops.BesselY1": "doc",
    "tensorflow.raw_ops.Bincount": "doc",
    "tensorflow.raw_ops.Cholesky": "doc",
    "tensorflow.raw_ops.ConcatV2": "doc",
    "tensorflow.raw_ops.CopyHost": "doc",
    "tensorflow.raw_ops.CudnnRNN": "doc",
    "tensorflow.raw_ops.DeepCopy": "doc",
    "tensorflow.raw_ops.DivNoNan": "doc",
    "tensorflow.raw_ops.FloorMod": "doc",
    "tensorflow.raw_ops.HSVToRGB": "doc",
    "tensorflow.raw_ops.InTopKV2": "doc",
    "tensorflow.raw_ops.LoopCond": "doc",
    "tensorflow.raw_ops.MulNoNan": "doc",
    "tensorflow.raw_ops.NotEqual": "doc",
    "tensorflow.raw_ops.RGBToHSV": "doc",
    "tensorflow.raw_ops.RefMerge": "doc",
    "tensorflow.raw_ops.ReluGrad": "doc",
    "tensorflow.raw_ops.SelectV2": "doc",
    "tensorflow.raw_ops.SeluGrad": "doc",
    "tensorflow.raw_ops.Softplus": "doc",
    "tensorflow.raw_ops.StackPop": "doc",
    "tensorflow.raw_ops.TanhGrad": "doc",
    "tensorflow.raw_ops.TileGrad": "doc",
    "tensorflow.raw_ops.UniqueV2": "doc",
    "tensorflow.tpu.experimental": "doc",
    "tensorflow.xla.experimental": "doc",
    "tensorflow.keras.losses.Loss": "doc",
    "tensorflow.keras.losses.MAPE": "doc",
    "tensorflow.keras.losses.MSLE": "doc",
    "tensorflow.raw_ops.AvgPool3D": "doc",
    "tensorflow.raw_ops.BesselI0e": "doc",
    "tensorflow.raw_ops.BesselI1e": "doc",
    "tensorflow.raw_ops.BesselK0e": "doc",
    "tensorflow.raw_ops.BesselK1e": "doc",
    "tensorflow.raw_ops.BiasAddV1": "doc",
    "tensorflow.raw_ops.BlockLSTM": "doc",
    "tensorflow.raw_ops.CTCLossV2": "doc",
    "tensorflow.raw_ops.CountUpTo": "doc",
    "tensorflow.raw_ops.DecodeBmp": "doc",
    "tensorflow.raw_ops.DecodeCSV": "doc",
    "tensorflow.raw_ops.DecodeGif": "doc",
    "tensorflow.raw_ops.DecodePng": "doc",
    "tensorflow.raw_ops.DecodeRaw": "doc",
    "tensorflow.raw_ops.DecodeWav": "doc",
    "tensorflow.raw_ops.EncodePng": "doc",
    "tensorflow.raw_ops.EncodeWav": "doc",
    "tensorflow.raw_ops.FakeParam": "doc",
    "tensorflow.raw_ops.LeakyRelu": "doc",
    "tensorflow.raw_ops.LessEqual": "doc",
    "tensorflow.raw_ops.MaxPool3D": "doc",
    "tensorflow.raw_ops.MaxPoolV2": "doc",
    "tensorflow.raw_ops.MirrorPad": "doc",
    "tensorflow.raw_ops.MutexLock": "doc",
    "tensorflow.raw_ops.Polygamma": "doc",
    "tensorflow.raw_ops.RefSelect": "doc",
    "tensorflow.raw_ops.RefSwitch": "doc",
    "tensorflow.raw_ops.Relu6Grad": "doc",
    "tensorflow.raw_ops.ReverseV2": "doc",
    "tensorflow.raw_ops.SparseAdd": "doc",
    "tensorflow.raw_ops.StackPush": "doc",
    "tensorflow.io.FixedLenFeature": "doc",
    "tensorflow.keras.experimental": "doc",
    "tensorflow.keras.models.Model": "doc",
    "tensorflow.linalg.global_norm": "doc",
    "tensorflow.raw_ops.BatchFFT2D": "doc",
    "tensorflow.raw_ops.BatchFFT3D": "doc",
    "tensorflow.raw_ops.BitwiseAnd": "doc",
    "tensorflow.raw_ops.CudnnRNNV2": "doc",
    "tensorflow.raw_ops.CudnnRNNV3": "doc",
    "tensorflow.raw_ops.DecodeJpeg": "doc",
    "tensorflow.raw_ops.EncodeJpeg": "doc",
    "tensorflow.raw_ops.FresnelCos": "doc",
    "tensorflow.raw_ops.InplaceAdd": "doc",
    "tensorflow.raw_ops.InplaceSub": "doc",
    "tensorflow.raw_ops.LogicalAnd": "doc",
    "tensorflow.raw_ops.LogicalNot": "doc",
    "tensorflow.raw_ops.LowerBound": "doc",
    "tensorflow.raw_ops.NcclReduce": "doc",
    "tensorflow.raw_ops.NthElement": "doc",
    "tensorflow.raw_ops.QueueClose": "doc",
    "tensorflow.raw_ops.ReaderRead": "doc",
    "tensorflow.raw_ops.Reciprocal": "doc",
    "tensorflow.raw_ops.ReduceJoin": "doc",
    "tensorflow.raw_ops.ResizeArea": "doc",
    "tensorflow.raw_ops.StackPopV2": "doc",
    "tensorflow.raw_ops.UpperBound": "doc",
    "tensorflow.config.experimental": "doc",
    "tensorflow.errors.UnknownError": "doc",
    "tensorflow.linalg.experimental": "doc",
    "tensorflow.lookup.experimental": "doc",
    "tensorflow.losses.KLDivergence": "doc",
    "tensorflow.queue.PriorityQueue": "doc",
    "tensorflow.raw_ops.ApplyAdaMax": "doc",
    "tensorflow.raw_ops.AvgPoolGrad": "doc",
    "tensorflow.raw_ops.BatchIFFT2D": "doc",
    "tensorflow.raw_ops.BatchIFFT3D": "doc",
    "tensorflow.raw_ops.BatchMatMul": "doc",
    "tensorflow.raw_ops.BiasAddGrad": "doc",
    "tensorflow.raw_ops.BlockLSTMV2": "doc",
    "tensorflow.raw_ops.BroadcastTo": "doc",
    "tensorflow.raw_ops.ClipByValue": "doc",
    "tensorflow.raw_ops.DeviceIndex": "doc",
    "tensorflow.raw_ops.EagerPyFunc": "doc",
    "tensorflow.raw_ops.EncodeProto": "doc",
    "tensorflow.raw_ops.EnsureShape": "doc",
    "tensorflow.raw_ops.FIFOQueueV2": "doc",
    "tensorflow.raw_ops.HashTableV2": "doc",
    "tensorflow.raw_ops.MaxPoolGrad": "doc",
    "tensorflow.raw_ops.RaggedCross": "doc",
    "tensorflow.raw_ops.RandomGamma": "doc",
    "tensorflow.raw_ops.RecordInput": "doc",
    "tensorflow.raw_ops.RefIdentity": "doc",
    "tensorflow.raw_ops.SparseCross": "doc",
    "tensorflow.raw_ops.StackPushV2": "doc",
    "tensorflow.raw_ops.StatelessIf": "doc",
    "tensorflow.raw_ops.TensorArray": "doc",
    "tensorflow.raw_ops.TruncateMod": "doc",
    "tensorflow.raw_ops.UnbatchGrad": "doc",
    "tensorflow.raw_ops.VarHandleOp": "doc",
    "tensorflow.signal.inverse_mdct": "doc",
    "tensorflow.signal.inverse_stft": "doc",
    "tensorflow.config.LogicalDevice": "doc",
    "tensorflow.errors.DataLossError": "doc",
    "tensorflow.errors.NotFoundError": "doc",
    "tensorflow.keras.backend.floatx": "doc",
    "tensorflow.keras.losses.LogCosh": "doc",
    "tensorflow.keras.losses.Poisson": "doc",
    "tensorflow.keras.losses.logcosh": "doc",
    "tensorflow.lookup.TextFileIndex": "doc",
    "tensorflow.losses.kl_divergence": "doc",
    "tensorflow.raw_ops.ApplyAdagrad": "doc",
    "tensorflow.raw_ops.ApplyRMSProp": "doc",
    "tensorflow.raw_ops.BarrierClose": "doc",
    "tensorflow.raw_ops.BatchToSpace": "doc",
    "tensorflow.raw_ops.CSVDatasetV2": "doc",
    "tensorflow.raw_ops.CholeskyGrad": "doc",
    "tensorflow.raw_ops.DecodeBase64": "doc",
    "tensorflow.raw_ops.DepthToSpace": "doc",
    "tensorflow.raw_ops.EncodeBase64": "doc",
    "tensorflow.raw_ops.GRUBlockCell": "doc",
    "tensorflow.raw_ops.GreaterEqual": "doc",
    "tensorflow.raw_ops.MergeSummary": "doc",
    "tensorflow.raw_ops.QueueCloseV2": "doc",
    "tensorflow.raw_ops.QueueDequeue": "doc",
    "tensorflow.raw_ops.QueueEnqueue": "doc",
    "tensorflow.raw_ops.ReaderReadV2": "doc",
    "tensorflow.raw_ops.RegexReplace": "doc",
    "tensorflow.raw_ops.ScatterNdAdd": "doc",
    "tensorflow.raw_ops.ScatterNdMax": "doc",
    "tensorflow.raw_ops.ScatterNdSub": "doc",
    "tensorflow.raw_ops.SoftplusGrad": "doc",
    "tensorflow.raw_ops.SoftsignGrad": "doc",
    "tensorflow.raw_ops.SpaceToBatch": "doc",
    "tensorflow.raw_ops.SpaceToDepth": "doc",
    "tensorflow.raw_ops.SparseConcat": "doc",
    "tensorflow.raw_ops.SparseMatMul": "doc",
    "tensorflow.raw_ops.StackCloseV2": "doc",
    "tensorflow.raw_ops.WriteSummary": "doc",
    "tensorflow.test.gpu_device_name": "doc",
    "tensorflow.config.PhysicalDevice": "doc",
    "tensorflow.experimental.tensorrt": "doc",
    "tensorflow.keras.losses.log_cosh": "doc",
    "tensorflow.linalg.cholesky_solve": "doc",
    "tensorflow.linalg.lu_reconstruct": "doc",
    "tensorflow.nest.pack_sequence_as": "doc",
    "tensorflow.raw_ops.AccumulateNV2": "doc",
    "tensorflow.raw_ops.ApplyAdadelta": "doc",
    "tensorflow.raw_ops.ApplyMomentum": "doc",
    "tensorflow.raw_ops.AvgPool3DGrad": "doc",
    "tensorflow.raw_ops.BatchCholesky": "doc",
    "tensorflow.raw_ops.BatchMatMulV2": "doc",
    "tensorflow.raw_ops.BlockLSTMGrad": "doc",
    "tensorflow.raw_ops.BroadcastArgs": "doc",
    "tensorflow.raw_ops.CheckNumerics": "doc",
    "tensorflow.raw_ops.DebugIdentity": "doc",
    "tensorflow.raw_ops.DebugNanCount": "doc",
    "tensorflow.raw_ops.DecodeProtoV2": "doc",
    "tensorflow.raw_ops.DenseBincount": "doc",
    "tensorflow.raw_ops.EuclideanNorm": "doc",
    "tensorflow.raw_ops.InfeedDequeue": "doc",
    "tensorflow.raw_ops.InfeedEnqueue": "doc",
    "tensorflow.raw_ops.InplaceUpdate": "doc",
    "tensorflow.raw_ops.LSTMBlockCell": "doc",
    "tensorflow.raw_ops.LeakyReluGrad": "doc",
    "tensorflow.raw_ops.MatrixSolveLs": "doc",
    "tensorflow.raw_ops.MaxPool3DGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradV2": "doc",
    "tensorflow.raw_ops.MirrorPadGrad": "doc",
    "tensorflow.raw_ops.NcclAllReduce": "doc",
    "tensorflow.raw_ops.NcclBroadcast": "doc",
    "tensorflow.raw_ops.PlaceholderV2": "doc",
    "tensorflow.raw_ops.PriorityQueue": "doc",
    "tensorflow.raw_ops.QueueIsClosed": "doc",
    "tensorflow.raw_ops.RandomPoisson": "doc",
    "tensorflow.raw_ops.RandomShuffle": "doc",
    "tensorflow.raw_ops.ReaderResetV2": "doc",
    "tensorflow.raw_ops.ReduceDataset": "doc",
    "tensorflow.raw_ops.RepeatDataset": "doc",
    "tensorflow.raw_ops.ResizeBicubic": "doc",
    "tensorflow.raw_ops.SparseAddGrad": "doc",
    "tensorflow.raw_ops.SparseCrossV2": "doc",
    "tensorflow.raw_ops.SparseReshape": "doc",
    "tensorflow.raw_ops.SparseSoftmax": "doc",
    "tensorflow.raw_ops.SparseToDense": "doc",
    "tensorflow.raw_ops.StatelessCase": "doc",
    "tensorflow.raw_ops.TensorArrayV2": "doc",
    "tensorflow.raw_ops.TensorArrayV3": "doc",
    "tensorflow.raw_ops.TensorDataset": "doc",
    "tensorflow.raw_ops.TensorSummary": "doc",
    "tensorflow.raw_ops.UnicodeDecode": "doc",
    "tensorflow.raw_ops.UnicodeEncode": "doc",
    "tensorflow.raw_ops.UnicodeScript": "doc",
    "tensorflow.raw_ops.UniqueDataset": "doc",
    "tensorflow.raw_ops.VariableShape": "doc",
    "tensorflow.raw_ops.WindowDataset": "doc",
    "tensorflow.sysconfig.get_include": "doc",
    "tensorflow.test.benchmark_config": "doc",
    "tensorflow.test.is_gpu_available": "doc",
    "tensorflow.lookup.StaticHashTable": "doc",
    "tensorflow.raw_ops.ApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ApplyAdagradV2": "doc",
    "tensorflow.raw_ops.BatchDatasetV2": "doc",
    "tensorflow.raw_ops.BatchToSpaceND": "doc",
    "tensorflow.raw_ops.CacheDatasetV2": "doc",
    "tensorflow.raw_ops.FusedBatchNorm": "doc",
    "tensorflow.raw_ops.FusedPadConv2D": "doc",
    "tensorflow.raw_ops.ImmutableConst": "doc",
    "tensorflow.raw_ops.OutfeedDequeue": "doc",
    "tensorflow.raw_ops.OutfeedEnqueue": "doc",
    "tensorflow.raw_ops.QueueDequeueV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueV2": "doc",
    "tensorflow.raw_ops.RaggedBincount": "doc",
    "tensorflow.raw_ops.ReaderReadUpTo": "doc",
    "tensorflow.raw_ops.ReciprocalGrad": "doc",
    "tensorflow.raw_ops.RegexFullMatch": "doc",
    "tensorflow.raw_ops.RngReadAndSkip": "doc",
    "tensorflow.raw_ops.SelfAdjointEig": "doc",
    "tensorflow.raw_ops.ShuffleDataset": "doc",
    "tensorflow.raw_ops.SpaceToBatchND": "doc",
    "tensorflow.signal.overlap_and_add": "doc",
    "tensorflow.keras.callbacks.History": "doc",
    "tensorflow.raw_ops.BarrierTakeMany": "doc",
    "tensorflow.raw_ops.BlockLSTMGradV2": "doc",
    "tensorflow.raw_ops.CheckNumericsV2": "doc",
    "tensorflow.raw_ops.CompressElement": "doc",
    "tensorflow.raw_ops.DebugIdentityV2": "doc",
    "tensorflow.raw_ops.DecodePaddedRaw": "doc",
    "tensorflow.raw_ops.EmptyTensorList": "doc",
    "tensorflow.raw_ops.IteratorGetNext": "doc",
    "tensorflow.raw_ops.LookupTableFind": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV2": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV3": "doc",
    "tensorflow.raw_ops.MaxPoolGradGrad": "doc",
    "tensorflow.raw_ops.OrderedMapStage": "doc",
    "tensorflow.raw_ops.PrefetchDataset": "doc",
    "tensorflow.raw_ops.QuantizedConcat": "doc",
    "tensorflow.raw_ops.QuantizedConv2D": "doc",
    "tensorflow.raw_ops.QuantizedMatMul": "doc",
    "tensorflow.raw_ops.QueueIsClosedV2": "doc",
    "tensorflow.raw_ops.RegisterDataset": "doc",
    "tensorflow.raw_ops.ReverseSequence": "doc",
    "tensorflow.raw_ops.ScatterNdUpdate": "doc",
    "tensorflow.raw_ops.SerializeSparse": "doc",
    "tensorflow.raw_ops.TFRecordDataset": "doc",
    "tensorflow.raw_ops.TensorArrayGrad": "doc",
    "tensorflow.raw_ops.TensorArrayPack": "doc",
    "tensorflow.raw_ops.TensorArrayRead": "doc",
    "tensorflow.raw_ops.TensorListSplit": "doc",
    "tensorflow.raw_ops.TensorListStack": "doc",
    "tensorflow.raw_ops.TensorSummaryV2": "doc",
    "tensorflow.raw_ops.TextLineDataset": "doc",
    "tensorflow.raw_ops.TruncatedNormal": "doc",
    "tensorflow.raw_ops.WorkerHeartbeat": "doc",
    "tensorflow.experimental.async_scope": "doc",
    "tensorflow.keras.backend.set_floatx": "doc",
    "tensorflow.keras.callbacks.Callback": "doc",
    "tensorflow.raw_ops.DatasetToGraphV2": "doc",
    "tensorflow.raw_ops.DummyMemoryCache": "doc",
    "tensorflow.raw_ops.FusedBatchNormV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormV3": "doc",
    "tensorflow.raw_ops.GRUBlockCellGrad": "doc",
    "tensorflow.raw_ops.GetSessionHandle": "doc",
    "tensorflow.raw_ops.MatrixSquareRoot": "doc",
    "tensorflow.raw_ops.MutableHashTable": "doc",
    "tensorflow.raw_ops.OptionalHasValue": "doc",
    "tensorflow.raw_ops.OutfeedDequeueV2": "doc",
    "tensorflow.raw_ops.QuantizedAvgPool": "doc",
    "tensorflow.raw_ops.QuantizedMaxPool": "doc",
    "tensorflow.raw_ops.QueueDequeueMany": "doc",
    "tensorflow.raw_ops.QueueDequeueUpTo": "doc",
    "tensorflow.raw_ops.QueueEnqueueMany": "doc",
    "tensorflow.raw_ops.ReaderReadUpToV2": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV2": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV3": "doc",
    "tensorflow.raw_ops.TensorArrayClose": "doc",
    "tensorflow.raw_ops.TensorArraySplit": "doc",
    "tensorflow.raw_ops.TensorArrayWrite": "doc",
    "tensorflow.raw_ops.TensorListConcat": "doc",
    "tensorflow.raw_ops.ThreadPoolHandle": "doc",
    "tensorflow.raw_ops.UnicodeTranscode": "doc",
    "tensorflow.raw_ops.UniqueWithCounts": "doc",
    "tensorflow.io.parse_sequence_example": "doc",
    "tensorflow.keras.losses.KLDivergence": "doc",
    "tensorflow.raw_ops.BatchCholeskyGrad": "doc",
    "tensorflow.raw_ops.DeleteMemoryCache": "doc",
    "tensorflow.raw_ops.DestroyResourceOp": "doc",
    "tensorflow.raw_ops.InterleaveDataset": "doc",
    "tensorflow.raw_ops.LSTMBlockCellGrad": "doc",
    "tensorflow.raw_ops.MatrixExponential": "doc",
    "tensorflow.raw_ops.MaxPool3DGradGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradV2": "doc",
    "tensorflow.raw_ops.OptionalFromValue": "doc",
    "tensorflow.raw_ops.ResourceApplyAdam": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrl": "doc",
    "tensorflow.raw_ops.ResourceCountUpTo": "doc",
    "tensorflow.raw_ops.ScaleAndTranslate": "doc",
    "tensorflow.raw_ops.TensorArrayConcat": "doc",
    "tensorflow.raw_ops.TensorArrayGradV2": "doc",
    "tensorflow.raw_ops.TensorArrayGradV3": "doc",
    "tensorflow.raw_ops.TensorArrayReadV2": "doc",
    "tensorflow.raw_ops.TensorArrayReadV3": "doc",
    "tensorflow.raw_ops.TensorArrayUnpack": "doc",
    "tensorflow.raw_ops.TensorListPopBack": "doc",
    "tensorflow.tpu.experimental.Topology": "doc",
    "tensorflow.keras.losses.kl_divergence": "doc",
    "tensorflow.raw_ops.ConjugateTranspose": "doc",
    "tensorflow.raw_ops.InfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.InfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.MergeV2Checkpoints": "doc",
    "tensorflow.raw_ops.QueueDequeueManyV2": "doc",
    "tensorflow.raw_ops.QueueDequeueUpToV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueManyV2": "doc",
    "tensorflow.raw_ops.StringToHashBucket": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV2": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV3": "doc",
    "tensorflow.raw_ops.TensorListConcatV2": "doc",
    "tensorflow.raw_ops.TensorListPushBack": "doc",
    "tensorflow.raw_ops.UniqueWithCountsV2": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMax": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMin": "doc",
    "tensorflow.raw_ops.UnsortedSegmentSum": "doc",
    "tensorflow.xla.experimental.jit_scope": "doc",
    "tensorflow.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.keras.callbacks.TensorBoard": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEig": "doc",
    "tensorflow.raw_ops.BoostedTreesPredict": "doc",
    "tensorflow.raw_ops.IgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.OutfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.ResourceApplyAdaMax": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrlV2": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV2": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV3": "doc",
    "tensorflow.sysconfig.get_compile_flags": "doc",
    "tensorflow.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.keras.callbacks.CallbackList": "doc",
    "tensorflow.keras.callbacks.experimental": "doc",
    "tensorflow.raw_ops.ParseSequenceExample": "doc",
    "tensorflow.raw_ops.ResourceApplyAddSign": "doc",
    "tensorflow.raw_ops.StaticRegexFullMatch": "doc",
    "tensorflow.keras.backend.is_keras_tensor": "doc",
    "tensorflow.raw_ops.ConfigureTPUEmbedding": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNative": "doc",
    "tensorflow.raw_ops.MutableDenseHashTable": "doc",
    "tensorflow.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.keras.experimental.CosineDecay": "doc",
    "tensorflow.keras.experimental.LinearModel": "doc",
    "tensorflow.raw_ops.StringToHashBucketFast": "doc",
    "tensorflow.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.raw_ops.TensorListPushBackBatch": "doc",
    "tensorflow.io.parse_single_sequence_example": "doc",
    "tensorflow.keras.experimental.WideDeepModel": "doc",
    "tensorflow.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.raw_ops.BoostedTreesAggregateStats": "doc",
    "tensorflow.raw_ops.ParseSingleSequenceExample": "doc",
    "tensorflow.raw_ops.QuantizeDownAndShrinkRange": "doc",
    "tensorflow.raw_ops.ResourceApplyKerasMomentum": "doc",
    "tensorflow.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.config.experimental.get_memory_usage": "doc",
    "tensorflow.config.experimental.get_device_policy": "doc",
    "tensorflow.config.experimental.get_memory_growth": "doc",
    "tensorflow.config.experimental.set_device_policy": "doc",
    "tensorflow.config.experimental.set_memory_growth": "doc",
    "tensorflow.experimental.register_filesystem_plugin": "doc",
    "tensorflow.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.batch_to_space": "doc",
    "tensorflow.parallel_stack": "doc",
    "tensorflow.nn.depth_to_space": "doc",
    "tensorflow.errors.CancelledError": "doc",
    "tensorflow.CriticalSection": "doc",
    "tensorflow.TensorArraySpec": "doc",
    "tensorflow.inside_function": "doc",
    "tensorflow.errors.OutOfRangeError": "doc",
    "tensorflow.VariableAggregation": "doc",
    "tensorflow.nn.fractional_avg_pool": "doc",
    "tensorflow.import_graph_def": "doc",
    "tensorflow.reverse_sequence": "doc",
    "tensorflow.nn.conv1d_transpose": "doc",
    "tensorflow.nn.conv2d_transpose": "doc",
    "tensorflow.nn.conv3d_transpose": "doc",
    "tensorflow.nn.embedding_lookup": "doc",
    "tensorflow.nn.log_poisson_loss": "doc",
    "tensorflow.nn.separable_conv2d": "doc",
    "tensorflow.nn.ctc_unique_labels": "doc",
    "tensorflow.unique_with_counts": "doc",
    "tensorflow.clip_by_global_norm": "doc",
    "tensorflow.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.nn.atrous_conv2d": "doc",
    "tensorflow.keras.preprocessing": "doc",
    "tensorflow.tensordot": "doc",
    "tensorflow.nn.conv_transpose": "doc",
    "tensorflow.nn": "doc",
    "tensorflow.cos": "doc",
    "tensorflow.cond": "doc",
    "tensorflow.cosh": "doc",
    "tensorflow.less": "doc",
    "tensorflow.roll": "doc",
    "tensorflow.equal": "doc",
    "tensorflow.foldl": "doc",
    "tensorflow.keras": "doc",
    "tensorflow.round": "doc",
    "tensorflow.errors": "doc",
    "tensorflow.nn.elu": "doc",
    "tensorflow.nn.gelu": "doc",
    "tensorflow.nn.relu": "doc",
    "tensorflow.nn.selu": "doc",
    "tensorflow.nn.crelu": "doc",
    "tensorflow.nn.relu6": "doc",
    "tensorflow.nn.conv1d": "doc",
    "tensorflow.nn.conv2d": "doc",
    "tensorflow.nn.conv3d": "doc",
    "tensorflow.less_equal": "doc",
    "tensorflow.nn.l2_loss": "doc",
    "tensorflow.reduce_all": "doc",
    "tensorflow.reduce_any": "doc",
    "tensorflow.while_loop": "doc",
    "tensorflow.TensorArray": "doc",
    "tensorflow.logical_and": "doc",
    "tensorflow.logical_not": "doc",
    "tensorflow.nn.nce_loss": "doc",
    "tensorflow.reduce_prod": "doc",
    "tensorflow.broadcast_to": "doc",
    "tensorflow.clip_by_value": "doc",
    "tensorflow.greater_equal": "doc",
    "tensorflow.sequence_mask": "doc",
    "tensorflow.numpy_function": "doc"
  },
  "tensorflow.train.RMSPropOptimizer": {
    "tensorflow.compat.v1.train.RMSPropOptimizer": "doc",
    "tensorflow.compat.v1.train.AdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.FtrlOptimizer": "doc",
    "tensorflow.compat.v1.train.AdamOptimizer": "doc",
    "tensorflow.compat.v1.train.Optimizer": "doc",
    "tensorflow.compat.v1.train.sdca_optimizer": "doc",
    "tensorflow.compat.v1.train.AdagradDAOptimizer": "doc",
    "tensorflow.compat.v1.train.AdadeltaOptimizer": "doc",
    "tensorflow.compat.v1.train.MomentumOptimizer": "doc",
    "tensorflow.compat.v1.train.SyncReplicasOptimizer": "doc",
    "tensorflow.compat.v1.train.ProximalAdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.GradientDescentOptimizer": "doc",
    "tensorflow.compat.v1.train.experimental.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.compat.v1.train.ProximalGradientDescentOptimizer": "doc",
    "tensorflow.compat.v1.train.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.train.Server": "doc",
    "tensorflow.train.checkpoints_iterator": "doc",
    "tensorflow.compat.v1.train.Supervisor": "doc",
    "tensorflow.compat.v1.train.checkpoints_iterator": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_mtimes": "doc",
    "tensorflow.train.CheckpointManager": "doc",
    "tensorflow.compat.v1.train.CheckpointManager": "doc",
    "tensorflow.compat.v1.train.inverse_time_decay": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.train.NewCheckpointReader": "doc",
    "tensorflow.compat.v1.train.range_input_producer": "doc",
    "tensorflow.compat.v1.train.slice_input_producer": "doc",
    "tensorflow.compat.v1.train.string_input_producer": "doc",
    "tensorflow.train.FloatList": "doc",
    "tensorflow.train.ServerDef": "doc",
    "tensorflow.train.Coordinator": "doc",
    "tensorflow.compat.v1.train.Saver": "doc",
    "tensorflow.compat.v1.train.FloatList": "doc",
    "tensorflow.compat.v1.train.ServerDef": "doc",
    "tensorflow.compat.v1.train.Coordinator": "doc",
    "tensorflow.compat.v1.train.ProfilerHook": "doc",
    "tensorflow.train.experimental.PythonState": "doc",
    "tensorflow.compat.v1.train.SessionManager": "doc",
    "tensorflow.compat.v1.train.StopAtStepHook": "doc",
    "tensorflow.compat.v1.train.input_producer": "doc",
    "tensorflow.compat.v1.train.experimental.PythonState": "doc",
    "tensorflow.train.CheckpointOptions": "doc",
    "tensorflow.compat.v1.train.CheckpointOptions": "doc",
    "tensorflow.compat.v1.train.checkpoint_exists": "doc",
    "tensorflow.train.ExponentialMovingAverage": "doc",
    "tensorflow.compat.v1.train.ExponentialMovingAverage": "doc",
    "tensorflow.compat.v1.train.MonitoredTrainingSession": "doc",
    "tensorflow.compat.v1.train.generate_checkpoint_state_proto": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.train.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.train.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.train.WorkerSessionCreator": "doc",
    "tensorflow.compat.v1.train.replica_device_setter": "doc",
    "tensorflow.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.train": "doc",
    "tensorflow.train.JobDef": "doc",
    "tensorflow.train.Example": "doc",
    "tensorflow.train.Feature": "doc",
    "tensorflow.train.Features": "doc",
    "tensorflow.train.BytesList": "doc",
    "tensorflow.train.Int64List": "doc",
    "tensorflow.compat.v1.train": "doc",
    "tensorflow.train.Checkpoint": "doc",
    "tensorflow.train.ClusterDef": "doc",
    "tensorflow.train.ClusterSpec": "doc",
    "tensorflow.train.FeatureList": "doc",
    "tensorflow.train.FeatureLists": "doc",
    "tensorflow.train.experimental": "doc",
    "tensorflow.train.load_variable": "doc",
    "tensorflow.train.list_variables": "doc",
    "tensorflow.train.SequenceExample": "doc",
    "tensorflow.train.load_checkpoint": "doc",
    "tensorflow.compat.v1.train.batch": "doc",
    "tensorflow.compat.v1.train.JobDef": "doc",
    "tensorflow.train.JobDef.TasksEntry": "doc",
    "tensorflow.train.latest_checkpoint": "doc",
    "tensorflow.compat.v1.train.Example": "doc",
    "tensorflow.compat.v1.train.Feature": "doc",
    "tensorflow.compat.v1.train.Features": "doc",
    "tensorflow.compat.v1.train.SaverDef": "doc",
    "tensorflow.compat.v1.train.Scaffold": "doc",
    "tensorflow.compat.v1.train.BytesList": "doc",
    "tensorflow.compat.v1.train.Int64List": "doc",
    "tensorflow.compat.v1.train.VocabInfo": "doc",
    "tensorflow.train.get_checkpoint_state": "doc",
    "tensorflow.compat.v1.train.Checkpoint": "doc",
    "tensorflow.compat.v1.train.ClusterDef": "doc",
    "tensorflow.compat.v1.train.FeedFnHook": "doc",
    "tensorflow.compat.v1.train.batch_join": "doc",
    "tensorflow.compat.v1.train.warm_start": "doc",
    "tensorflow.train.Features.FeatureEntry": "doc",
    "tensorflow.compat.v1.train.ClusterSpec": "doc",
    "tensorflow.compat.v1.train.FeatureList": "doc",
    "tensorflow.compat.v1.train.QueueRunner": "doc",
    "tensorflow.compat.v1.train.global_step": "doc",
    "tensorflow.compat.v1.train.maybe_batch": "doc",
    "tensorflow.compat.v1.train.sdca_fprint": "doc",
    "tensorflow.compat.v1.train.write_graph": "doc",
    "tensorflow.train.experimental.LossScale": "doc",
    "tensorflow.compat.v1.train.FeatureLists": "doc",
    "tensorflow.compat.v1.train.FinalOpsHook": "doc",
    "tensorflow.compat.v1.train.LooperThread": "doc",
    "tensorflow.compat.v1.train.cosine_decay": "doc",
    "tensorflow.compat.v1.train.experimental": "doc",
    "tensorflow.compat.v1.train.limit_epochs": "doc",
    "tensorflow.compat.v1.train.queue_runner": "doc",
    "tensorflow.compat.v1.train.NanTensorHook": "doc",
    "tensorflow.compat.v1.train.load_variable": "doc",
    "tensorflow.compat.v1.train.shuffle_batch": "doc",
    "tensorflow.compat.v1.train.SessionCreator": "doc",
    "tensorflow.compat.v1.train.SessionRunArgs": "doc",
    "tensorflow.compat.v1.train.SessionRunHook": "doc",
    "tensorflow.compat.v1.train.list_variables": "doc",
    "tensorflow.compat.v1.train.sdca_shrink_l1": "doc",
    "tensorflow.compat.v1.train.SequenceExample": "doc",
    "tensorflow.compat.v1.train.StepCounterHook": "doc",
    "tensorflow.compat.v1.train.get_global_step": "doc",
    "tensorflow.compat.v1.train.load_checkpoint": "doc",
    "tensorflow.compat.v1.train.MonitoredSession": "doc",
    "tensorflow.compat.v1.train.SessionRunValues": "doc",
    "tensorflow.compat.v1.train.SummarySaverHook": "doc",
    "tensorflow.compat.v1.train.add_queue_runner": "doc",
    "tensorflow.compat.v1.train.basic_train_loop": "doc",
    "tensorflow.compat.v1.train.maybe_batch_join": "doc",
    "tensorflow.compat.v1.train.polynomial_decay": "doc",
    "tensorflow.compat.v1.train.summary_iterator": "doc",
    "tensorflow.train.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.train.JobDef.TasksEntry": "doc",
    "tensorflow.compat.v1.train.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.train.SessionRunContext": "doc",
    "tensorflow.compat.v1.train.exponential_decay": "doc",
    "tensorflow.compat.v1.train.export_meta_graph": "doc",
    "tensorflow.compat.v1.train.import_meta_graph": "doc",
    "tensorflow.compat.v1.train.latest_checkpoint": "doc",
    "tensorflow.compat.v1.train.natural_exp_decay": "doc",
    "tensorflow.compat.v1.train.remove_checkpoint": "doc",
    "tensorflow.compat.v1.train.assert_global_step": "doc",
    "tensorflow.compat.v1.train.create_global_step": "doc",
    "tensorflow.compat.v1.train.piecewise_constant": "doc",
    "tensorflow.compat.v1.train.shuffle_batch_join": "doc",
    "tensorflow.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.train.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.train.ChiefSessionCreator": "doc",
    "tensorflow.compat.v1.train.linear_cosine_decay": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch": "doc",
    "tensorflow.compat.v1.train.start_queue_runners": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_state": "doc",
    "tensorflow.compat.v1.train.init_from_checkpoint": "doc",
    "tensorflow.compat.v1.train.match_filenames_once": "doc",
    "tensorflow.compat.v1.train.Features.FeatureEntry": "doc",
    "tensorflow.compat.v1.train.cosine_decay_restarts": "doc",
    "tensorflow.compat.v1.train.experimental.LossScale": "doc",
    "tensorflow.compat.v1.train.update_checkpoint_state": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch_join": "doc",
    "tensorflow.compat.v1.train.piecewise_constant_decay": "doc",
    "tensorflow.compat.v1.train.queue_runner.QueueRunner": "doc",
    "tensorflow.compat.v1.train.get_or_create_global_step": "doc",
    "tensorflow.compat.v1.train.noisy_linear_cosine_decay": "doc",
    "tensorflow.compat.v1.train.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.train.MonitoredSession.StepContext": "doc",
    "tensorflow.compat.v1.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.compat.v1.train.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.train.queue_runner.add_queue_runner": "doc",
    "tensorflow.compat.v1.train.do_quantize_training_on_graphdef": "doc",
    "tensorflow.compat.v1.train.queue_runner.start_queue_runners": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession.StepContext": "doc",
    "tensorflow.profiler.experimental.client.trace": "doc",
    "tensorflow.sparse.retain": "doc",
    "tensorflow.compat.v1.sparse.retain": "doc",
    "tensorflow.config.optimizer.get_jit": "doc",
    "tensorflow.config.optimizer.set_jit": "doc",
    "tensorflow.compat.v1.config.optimizer.get_jit": "doc",
    "tensorflow.compat.v1.config.optimizer.set_jit": "doc",
    "tensorflow.optimizers.serialize": "doc",
    "tensorflow.keras.optimizers.serialize": "doc",
    "tensorflow.optimizers.schedules.serialize": "doc",
    "tensorflow.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.serialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.raw_ops.SdcaOptimizer": "doc",
    "tensorflow.config.optimizer": "doc",
    "tensorflow.optimizers.Optimizer": "doc",
    "tensorflow.keras.optimizers.Optimizer": "doc",
    "tensorflow.compat.v1.config.optimizer": "doc",
    "tensorflow.compat.v1.keras.optimizers.Optimizer": "doc",
    "tensorflow.config.optimizer.get_experimental_options": "doc",
    "tensorflow.config.optimizer.set_experimental_options": "doc",
    "tensorflow.compat.v1.config.optimizer.get_experimental_options": "doc",
    "tensorflow.compat.v1.config.optimizer.set_experimental_options": "doc",
    "tensorflow.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.optimizers.deserialize": "doc",
    "tensorflow.keras.optimizers.deserialize": "doc",
    "tensorflow.optimizers.schedules.deserialize": "doc",
    "tensorflow.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.deserialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.lite.Optimize": "doc",
    "tensorflow.compat.v1.lite.Optimize": "doc",
    "tensorflow.compat.v1.tpu.CrossShardOptimizer": "doc",
    "tensorflow.linalg.trace": "doc",
    "tensorflow.compat.v1.tan": "doc",
    "tensorflow.autograph.trace": "doc",
    "tensorflow.compat.v1.trace": "doc",
    "tensorflow.compat.v1.math.tan": "doc",
    "tensorflow.compat.v1.test.main": "doc",
    "tensorflow.experimental.numpy.tan": "doc",
    "tensorflow.experimental.numpy.tri": "doc",
    "tensorflow.compat.v1.linalg.trace": "doc",
    "tensorflow.experimental.numpy.tril": "doc",
    "tensorflow.experimental.numpy.triu": "doc",
    "tensorflow.experimental.numpy.trace": "doc",
    "tensorflow.compat.v1.autograph.trace": "doc",
    "tensorflow.profiler.experimental.Trace": "doc",
    "tensorflow.keras.constraints.serialize": "doc",
    "tensorflow.keras.constraints.deserialize": "doc",
    "tensorflow.compat.v1.keras.constraints.serialize": "doc",
    "tensorflow.compat.v1.keras.constraints.deserialize": "doc",
    "tensorflow.optimizers": "doc",
    "tensorflow.optimizers.SGD": "doc",
    "tensorflow.optimizers.get": "doc",
    "tensorflow.optimizers.Adam": "doc",
    "tensorflow.optimizers.Ftrl": "doc",
    "tensorflow.keras.optimizers": "doc",
    "tensorflow.optimizers.Nadam": "doc",
    "tensorflow.optimizers.Adamax": "doc",
    "tensorflow.optimizers.Adagrad": "doc",
    "tensorflow.optimizers.RMSprop": "doc",
    "tensorflow.optimizers.Adadelta": "doc",
    "tensorflow.keras.optimizers.SGD": "doc",
    "tensorflow.keras.optimizers.get": "doc",
    "tensorflow.optimizers.schedules": "doc",
    "tensorflow.keras.optimizers.Adam": "doc",
    "tensorflow.keras.optimizers.Ftrl": "doc",
    "tensorflow.keras.optimizers.Nadam": "doc",
    "tensorflow.keras.optimizers.Adamax": "doc",
    "tensorflow.raw_ops.SdcaOptimizerV2": "doc",
    "tensorflow.keras.optimizers.Adagrad": "doc",
    "tensorflow.keras.optimizers.RMSprop": "doc",
    "tensorflow.keras.optimizers.Adadelta": "doc",
    "tensorflow.keras.optimizers.schedules": "doc",
    "tensorflow.compat.v1.keras.optimizers": "doc",
    "tensorflow.compat.v1.keras.optimizers.SGD": "doc",
    "tensorflow.compat.v1.keras.optimizers.get": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adam": "doc",
    "tensorflow.compat.v1.keras.optimizers.Ftrl": "doc",
    "tensorflow.compat.v1.keras.optimizers.Nadam": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adamax": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adagrad": "doc",
    "tensorflow.compat.v1.keras.optimizers.RMSprop": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adadelta": "doc",
    "tensorflow.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules": "doc",
    "tensorflow.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.estimator.TrainSpec": "doc",
    "tensorflow.compat.v1.estimator.TrainSpec": "doc",
    "tensorflow.argmin": "doc",
    "tensorflow.math.argmin": "doc",
    "tensorflow.compat.v1.argmin": "doc",
    "tensorflow.compat.v1.math.argmin": "doc",
    "tensorflow.experimental.numpy.argmin": "doc",
    "tensorflow.keras.constraints.Constraint": "doc",
    "tensorflow.compat.v1.keras.constraints.Constraint": "doc",
    "tensorflow.config.threading": "doc",
    "tensorflow.compat.v1.config.threading": "doc",
    "tensorflow.strings.upper": "doc",
    "tensorflow.strings.to_number": "doc",
    "tensorflow.compat.v1.strings.upper": "doc",
    "tensorflow.compat.v1.strings.to_number": "doc",
    "tensorflow.raw_ops.StopGradient": "doc",
    "tensorflow.tan": "doc",
    "tensorflow.math.tan": "doc",
    "tensorflow.test.main": "doc",
    "tensorflow.compat.v1.container": "doc",
    "tensorflow.compat.v1.GraphOptions": "doc",
    "tensorflow.keras.constraints": "doc",
    "tensorflow.keras.constraints.get": "doc",
    "tensorflow.keras.constraints.NonNeg": "doc",
    "tensorflow.keras.constraints.MaxNorm": "doc",
    "tensorflow.keras.constraints.non_neg": "doc",
    "tensorflow.keras.constraints.UnitNorm": "doc",
    "tensorflow.keras.constraints.max_norm": "doc",
    "tensorflow.keras.constraints.unit_norm": "doc",
    "tensorflow.compat.v1.keras.constraints": "doc",
    "tensorflow.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.keras.constraints.min_max_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.get": "doc",
    "tensorflow.keras.constraints.RadialConstraint": "doc",
    "tensorflow.compat.v1.keras.constraints.NonNeg": "doc",
    "tensorflow.keras.constraints.radial_constraint": "doc",
    "tensorflow.compat.v1.keras.constraints.MaxNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.non_neg": "doc",
    "tensorflow.compat.v1.keras.constraints.UnitNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.max_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.unit_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.min_max_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.RadialConstraint": "doc",
    "tensorflow.compat.v1.keras.constraints.radial_constraint": "doc",
    "tensorflow.Operation": "doc",
    "tensorflow.compat.v1.Operation": "doc",
    "tensorflow.math.erfinv": "doc",
    "tensorflow.raw_ops.ArgMin": "doc",
    "tensorflow.raw_ops.Erfinv": "doc",
    "tensorflow.compat.v1.math.erfinv": "doc",
    "tensorflow.experimental.numpy.arcsin": "doc",
    "tensorflow.compat.v1.profiler.Profiler": "doc",
    "tensorflow.strings.lower": "doc",
    "tensorflow.compat.v1.arg_min": "doc",
    "tensorflow.compat.v1.strings.lower": "doc",
    "tensorflow.keras.activations.serialize": "doc",
    "tensorflow.keras.activations.deserialize": "doc",
    "tensorflow.compat.v1.keras.activations.serialize": "doc",
    "tensorflow.compat.v1.keras.activations.deserialize": "doc",
    "tensorflow.keras.layers.Cropping1D": "doc",
    "tensorflow.keras.layers.Cropping2D": "doc",
    "tensorflow.keras.layers.Cropping3D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping1D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping2D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping3D": "doc",
    "tensorflow.compat.v1.profiler.ProfileOptionBuilder": "doc",
    "tensorflow.keras.layers.Wrapper": "doc",
    "tensorflow.compat.v1.profiler.profile": "doc",
    "tensorflow.profiler.experimental.Profile": "doc",
    "tensorflow.compat.v1.keras.layers.Wrapper": "doc",
    "tensorflow.signal.frame": "doc",
    "tensorflow.raw_ops.Print": "doc",
    "tensorflow.compat.v1.Print": "doc",
    "tensorflow.raw_ops.StringJoin": "doc",
    "tensorflow.compat.v1.signal.frame": "doc",
    "tensorflow.initializers.Initializer": "doc",
    "tensorflow.keras.initializers.Initializer": "doc",
    "tensorflow.compat.v1.keras.initializers.Initializer": "doc",
    "tensorflow.distribute.experimental.partitioners.Partitioner": "doc",
    "tensorflow.linalg.normalize": "doc",
    "tensorflow.losses.serialize": "doc",
    "tensorflow.metrics.Precision": "doc",
    "tensorflow.metrics.serialize": "doc",
    "tensorflow.keras.utils.normalize": "doc",
    "tensorflow.quantization.quantize": "doc",
    "tensorflow.initializers.serialize": "doc",
    "tensorflow.keras.layers.serialize": "doc",
    "tensorflow.keras.losses.serialize": "doc",
    "tensorflow.keras.metrics.Precision": "doc",
    "tensorflow.keras.metrics.serialize": "doc",
    "tensorflow.quantization.dequantize": "doc",
    "tensorflow.compat.v1.linalg.normalize": "doc",
    "tensorflow.experimental.numpy.remainder": "doc",
    "tensorflow.keras.initializers.serialize": "doc",
    "tensorflow.keras.regularizers.serialize": "doc",
    "tensorflow.compat.v1.keras.utils.normalize": "doc",
    "tensorflow.compat.v1.quantization.quantize": "doc",
    "tensorflow.compat.v1.keras.layers.serialize": "doc",
    "tensorflow.compat.v1.keras.losses.serialize": "doc",
    "tensorflow.compat.v1.keras.metrics.Precision": "doc",
    "tensorflow.compat.v1.keras.metrics.serialize": "doc",
    "tensorflow.compat.v1.quantization.dequantize": "doc",
    "tensorflow.compat.v1.keras.initializers.serialize": "doc",
    "tensorflow.compat.v1.keras.regularizers.serialize": "doc",
    "tensorflow.compat.v1.initializers.tables_initializer": "doc",
    "tensorflow.distribute.experimental.partitioners.MaxSizePartitioner": "doc",
    "tensorflow.distribute.experimental.partitioners.MinSizePartitioner": "doc",
    "tensorflow.strings.unicode_split_with_offsets": "doc",
    "tensorflow.compat.v1.strings.unicode_split_with_offsets": "doc",
    "tensorflow.compat.v1.mixed_precision.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.stop_gradient": "doc",
    "tensorflow.compat.v1.stop_gradient": "doc",
    "tensorflow.gradients": "doc",
    "tensorflow.compat.v1.gradients": "doc",
    "tensorflow.distribute.experimental.partitioners.FixedShardsPartitioner": "doc",
    "tensorflow.profiler": "doc",
    "tensorflow.data.Iterator": "doc",
    "tensorflow.raw_ops.AsString": "doc",
    "tensorflow.raw_ops.Iterator": "doc",
    "tensorflow.summary.trace_on": "doc",
    "tensorflow.compat.v1.profiler": "doc",
    "tensorflow.distribute.Strategy": "doc",
    "tensorflow.raw_ops.Prelinearize": "doc",
    "tensorflow.profiler.experimental": "doc",
    "tensorflow.compat.v1.data.Iterator": "doc",
    "tensorflow.compat.v1.profiler.advise": "doc",
    "tensorflow.profiler.experimental.stop": "doc",
    "tensorflow.profiler.experimental.start": "doc",
    "tensorflow.profiler.experimental.client": "doc",
    "tensorflow.profiler.experimental.server": "doc",
    "tensorflow.compat.v1.distribute.Strategy": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto": "doc",
    "tensorflow.data.experimental.StatsOptions": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto": "doc",
    "tensorflow.compat.v1.profiler.write_op_log": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto": "doc",
    "tensorflow.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.profiler.experimental.server.start": "doc",
    "tensorflow.profiler.experimental.client.monitor": "doc",
    "tensorflow.profiler.experimental.ProfilerOptions": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.Checker": "doc",
    "tensorflow.compat.v1.profiler.MultiGraphNodeProto": "doc",
    "tensorflow.compat.v1.data.experimental.StatsOptions": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.CheckersEntry": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto.IdToStringEntry": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto.InputShapesEntry": "doc",
    "tensorflow.strings": "doc",
    "tensorflow.truediv": "doc",
    "tensorflow.version": "doc",
    "tensorflow.math.betainc": "doc",
    "tensorflow.math.erfcinv": "doc",
    "tensorflow.math.truediv": "doc",
    "tensorflow.strings.join": "doc",
    "tensorflow.strings.split": "doc",
    "tensorflow.strings.strip": "doc",
    "tensorflow.strings.format": "doc",
    "tensorflow.strings.length": "doc",
    "tensorflow.strings.ngrams": "doc",
    "tensorflow.strings.substr": "doc",
    "tensorflow.raw_ops.Betainc": "doc",
    "tensorflow.strings.as_string": "doc",
    "tensorflow.compat.v1.betainc": "doc",
    "tensorflow.compat.v1.strings": "doc",
    "tensorflow.compat.v1.truediv": "doc",
    "tensorflow.compat.v1.version": "doc",
    "tensorflow.strings.bytes_split": "doc",
    "tensorflow.strings.reduce_join": "doc",
    "tensorflow.strings.regex_replace": "doc",
    "tensorflow.strings.unicode_split": "doc",
    "tensorflow.strings.to_hash_bucket": "doc",
    "tensorflow.strings.unicode_decode": "doc",
    "tensorflow.strings.unicode_encode": "doc",
    "tensorflow.strings.unicode_script": "doc",
    "tensorflow.compat.v1.math.betainc": "doc",
    "tensorflow.compat.v1.math.erfcinv": "doc",
    "tensorflow.compat.v1.math.truediv": "doc",
    "tensorflow.compat.v1.strings.join": "doc",
    "tensorflow.compat.v1.strings.split": "doc",
    "tensorflow.compat.v1.strings.strip": "doc",
    "tensorflow.strings.regex_full_match": "doc",
    "tensorflow.compat.v1.strings.format": "doc",
    "tensorflow.compat.v1.strings.length": "doc",
    "tensorflow.compat.v1.strings.ngrams": "doc",
    "tensorflow.compat.v1.strings.substr": "doc",
    "tensorflow.strings.unicode_transcode": "doc",
    "tensorflow.compat.v1.logging.warning": "doc",
    "tensorflow.experimental.numpy.arcsinh": "doc",
    "tensorflow.experimental.numpy.string_": "doc",
    "tensorflow.strings.to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.strings.as_string": "doc",
    "tensorflow.strings.to_hash_bucket_strong": "doc",
    "tensorflow.strings.unsorted_segment_join": "doc",
    "tensorflow.compat.v1.strings.bytes_split": "doc",
    "tensorflow.compat.v1.strings.reduce_join": "doc",
    "tensorflow.compat.v1.strings.regex_replace": "doc",
    "tensorflow.compat.v1.strings.unicode_split": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket": "doc",
    "tensorflow.compat.v1.strings.unicode_decode": "doc",
    "tensorflow.compat.v1.strings.unicode_encode": "doc",
    "tensorflow.compat.v1.strings.unicode_script": "doc",
    "tensorflow.experimental.numpy.random.randint": "doc",
    "tensorflow.compat.v1.strings.regex_full_match": "doc",
    "tensorflow.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.compat.v1.strings.unicode_transcode": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_strong": "doc",
    "tensorflow.compat.v1.strings.unsorted_segment_join": "doc",
    "tensorflow.compat.v1.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.zeros_initializer": "doc",
    "tensorflow.compat.v1.zeros_initializer": "doc",
    "tensorflow.truncatediv": "doc",
    "tensorflow.compat.v1.truncatediv": "doc",
    "tensorflow.keras.activations.softmax": "doc",
    "tensorflow.keras.activations.softsign": "doc",
    "tensorflow.keras.activations.exponential": "doc",
    "tensorflow.compat.v1.keras.activations.softmax": "doc",
    "tensorflow.compat.v1.keras.activations.softsign": "doc",
    "tensorflow.compat.v1.keras.activations.exponential": "doc",
    "tensorflow.compat.v1.summary.initialize": "doc",
    "tensorflow.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.greater": "doc",
    "tensorflow.data.Options": "doc",
    "tensorflow.math.greater": "doc",
    "tensorflow.raw_ops.Barrier": "doc",
    "tensorflow.raw_ops.Greater": "doc",
    "tensorflow.compat.v1.greater": "doc",
    "tensorflow.metrics.deserialize": "doc",
    "tensorflow.metrics.TruePositives": "doc",
    "tensorflow.raw_ops.ExtractGlimpse": "doc",
    "tensorflow.compat.v1.data.Options": "doc",
    "tensorflow.compat.v1.math.greater": "doc",
    "tensorflow.keras.metrics.deserialize": "doc",
    "tensorflow.experimental.numpy.greater": "doc",
    "tensorflow.keras.metrics.TruePositives": "doc",
    "tensorflow.compat.v1.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.metrics.true_positives": "doc",
    "tensorflow.compat.v1.metrics.false_positives": "doc",
    "tensorflow.compat.v1.app.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.keras.metrics.deserialize": "doc",
    "tensorflow.compat.v1.keras.metrics.TruePositives": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op_with_restore": "doc",
    "tensorflow.estimator.experimental.RNNEstimator": "doc",
    "tensorflow.estimator.experimental.RNNClassifier": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimator": "doc",
    "tensorflow.nn.RNNCellDropoutWrapper": "doc",
    "tensorflow.compat.v1.tables_initializer": "doc",
    "tensorflow.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.compat.v1.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.compat.v1.flags.CsvListSerializer": "doc",
    "tensorflow.compat.v1.app.flags.CsvListSerializer": "doc",
    "tensorflow.estimator.train_and_evaluate": "doc",
    "tensorflow.compat.v1.estimator.train_and_evaluate": "doc",
    "tensorflow.raw_ops.ControlTrigger": "doc",
    "tensorflow.compat.v1.no_regularizer": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DropoutWrapper": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental.VirtualDevices": "doc",
    "tensorflow.Graph": "doc",
    "tensorflow.print": "doc",
    "tensorflow.math.rint": "doc",
    "tensorflow.raw_ops.Min": "doc",
    "tensorflow.raw_ops.Sin": "doc",
    "tensorflow.raw_ops.Tan": "doc",
    "tensorflow.metrics.Mean": "doc",
    "tensorflow.raw_ops.Asin": "doc",
    "tensorflow.raw_ops.Atan": "doc",
    "tensorflow.raw_ops.Mean": "doc",
    "tensorflow.compat.v1.sin": "doc",
    "tensorflow.compat.v1.asin": "doc",
    "tensorflow.compat.v1.atan": "doc",
    "tensorflow.compat.v1.rank": "doc",
    "tensorflow.compat.v1.rint": "doc",
    "tensorflow.compat.v1.scan": "doc",
    "tensorflow.compat.v1.tanh": "doc",
    "tensorflow.compat.v1.Graph": "doc",
    "tensorflow.compat.v1.print": "doc",
    "tensorflow.compat.v1.nn.lrn": "doc",
    "tensorflow.compat.v1.app.run": "doc",
    "tensorflow.compat.v1.nn.tanh": "doc",
    "tensorflow.keras.metrics.Mean": "doc",
    "tensorflow.raw_ops.ScatterMin": "doc",
    "tensorflow.compat.v1.math.sin": "doc",
    "tensorflow.compat.v1.math.asin": "doc",
    "tensorflow.compat.v1.math.atan": "doc",
    "tensorflow.compat.v1.math.rint": "doc",
    "tensorflow.compat.v1.math.tanh": "doc",
    "tensorflow.compat.v1.NoGradient": "doc",
    "tensorflow.data.experimental.scan": "doc",
    "tensorflow.experimental.numpy.min": "doc",
    "tensorflow.experimental.numpy.sin": "doc",
    "tensorflow.keras.activations.tanh": "doc",
    "tensorflow.compat.v1.logging.warn": "doc",
    "tensorflow.compat.v1.metrics.mean": "doc",
    "tensorflow.experimental.numpy.amin": "doc",
    "tensorflow.experimental.numpy.kron": "doc",
    "tensorflow.experimental.numpy.mean": "doc",
    "tensorflow.experimental.numpy.take": "doc",
    "tensorflow.experimental.numpy.tanh": "doc",
    "tensorflow.keras.layers.Activation": "doc",
    "tensorflow.compat.v1.keras.backend.rnn": "doc",
    "tensorflow.data.experimental.to_variant": "doc",
    "tensorflow.compat.v1.keras.metrics.Mean": "doc",
    "tensorflow.experimental.numpy.random.rand": "doc",
    "tensorflow.experimental.numpy.random.randn": "doc",
    "tensorflow.compat.v1.data.experimental.scan": "doc",
    "tensorflow.compat.v1.keras.activations.tanh": "doc",
    "tensorflow.compat.v1.keras.layers.Activation": "doc",
    "tensorflow.compat.v1.data.experimental.to_variant": "doc",
    "tensorflow.compat.v1.lite.OpHint.OpHintArgumentTracker": "doc",
    "tensorflow.losses.deserialize": "doc",
    "tensorflow.raw_ops.StringLower": "doc",
    "tensorflow.raw_ops.StringStrip": "doc",
    "tensorflow.raw_ops.StringUpper": "doc",
    "tensorflow.saved_model.LoadOptions": "doc",
    "tensorflow.initializers.deserialize": "doc",
    "tensorflow.keras.layers.deserialize": "doc",
    "tensorflow.keras.losses.deserialize": "doc",
    "tensorflow.experimental.numpy.true_divide": "doc",
    "tensorflow.keras.initializers.deserialize": "doc",
    "tensorflow.keras.regularizers.deserialize": "doc",
    "tensorflow.compat.v1.keras.layers.deserialize": "doc",
    "tensorflow.compat.v1.keras.losses.deserialize": "doc",
    "tensorflow.compat.v1.keras.initializers.deserialize": "doc",
    "tensorflow.compat.v1.keras.regularizers.deserialize": "doc",
    "tensorflow.transpose": "doc",
    "tensorflow.nn.erosion2d": "doc",
    "tensorflow.metrics.Metric": "doc",
    "tensorflow.image.transpose": "doc",
    "tensorflow.sparse.transpose": "doc",
    "tensorflow.sets.intersection": "doc",
    "tensorflow.compat.v1.transpose": "doc",
    "tensorflow.keras.metrics.Metric": "doc",
    "tensorflow.image.total_variation": "doc",
    "tensorflow.compat.v1.lite.OpHint": "doc",
    "tensorflow.compat.v1.nn.erosion2d": "doc",
    "tensorflow.compat.v1.image.transpose": "doc",
    "tensorflow.compat.v1.linalg.transpose": "doc",
    "tensorflow.compat.v1.sparse.transpose": "doc",
    "tensorflow.compat.v1.metrics.precision": "doc",
    "tensorflow.compat.v1.sets.intersection": "doc",
    "tensorflow.experimental.numpy.transpose": "doc",
    "tensorflow.compat.v1.keras.losses.cosine": "doc",
    "tensorflow.data.experimental.from_variant": "doc",
    "tensorflow.compat.v1.keras.metrics.Metric": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine": "doc",
    "tensorflow.compat.v1.image.total_variation": "doc",
    "tensorflow.compat.v1.distributions.Distribution": "doc",
    "tensorflow.autograph.experimental.set_loop_options": "doc",
    "tensorflow.compat.v1.data.experimental.from_variant": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.compat.v1.autograph.experimental.set_loop_options": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.orthogonal_initializer": "doc",
    "tensorflow.initializers.VarianceScaling": "doc",
    "tensorflow.compat.v1.image.transpose_image": "doc",
    "tensorflow.keras.initializers.VarianceScaling": "doc",
    "tensorflow.compat.v1.keras.initializers.VarianceScaling": "doc",
    "tensorflow.estimator.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.estimator.SecondOrStepTimer": "doc",
    "tensorflow.lookup.TextFileInitializer": "doc",
    "tensorflow.compat.v1.lookup.TextFileInitializer": "doc",
    "tensorflow.raw_ops.MapSize": "doc",
    "tensorflow.raw_ops.SetSize": "doc",
    "tensorflow.lite.Interpreter": "doc",
    "tensorflow.ones_initializer": "doc",
    "tensorflow.raw_ops.Requantize": "doc",
    "tensorflow.compat.v1.GPUOptions": "doc",
    "tensorflow.compat.v1.RunOptions": "doc",
    "tensorflow.distribute.RunOptions": "doc",
    "tensorflow.raw_ops.CropAndResize": "doc",
    "tensorflow.saved_model.SaveOptions": "doc",
    "tensorflow.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.compat.v1.lite.Interpreter": "doc",
    "tensorflow.compat.v1.ones_initializer": "doc",
    "tensorflow.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.keras.regularizers.Regularizer": "doc",
    "tensorflow.compat.v1.distribute.RunOptions": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental": "doc",
    "tensorflow.compat.v1.saved_model.SaveOptions": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.compat.v1.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.compat.v1.keras.regularizers.Regularizer": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental.RunHandlerPoolOptions": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.raw_ops.NextIteration": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.subtract": "doc",
    "tensorflow.initializers": "doc",
    "tensorflow.math.subtract": "doc",
    "tensorflow.keras.wrappers": "doc",
    "tensorflow.nn.l2_normalize": "doc",
    "tensorflow.initializers.get": "doc",
    "tensorflow.raw_ops.Softsign": "doc",
    "tensorflow.initializers.Ones": "doc",
    "tensorflow.initializers.ones": "doc",
    "tensorflow.math.l2_normalize": "doc",
    "tensorflow.autograph.to_graph": "doc",
    "tensorflow.initializers.Zeros": "doc",
    "tensorflow.initializers.zeros": "doc",
    "tensorflow.keras.initializers": "doc",
    "tensorflow.compat.v1.quantize": "doc",
    "tensorflow.compat.v1.subtract": "doc",
    "tensorflow.compat.v1.to_int32": "doc",
    "tensorflow.compat.v1.to_int64": "doc",
    "tensorflow.linalg.l2_normalize": "doc",
    "tensorflow.constant_initializer": "doc",
    "tensorflow.raw_ops.RestoreSlice": "doc",
    "tensorflow.raw_ops.StridedSlice": "doc",
    "tensorflow.experimental.Optional": "doc",
    "tensorflow.initializers.Constant": "doc",
    "tensorflow.initializers.HeNormal": "doc",
    "tensorflow.initializers.Identity": "doc",
    "tensorflow.initializers.constant": "doc",
    "tensorflow.initializers.identity": "doc",
    "tensorflow.keras.layers.Subtract": "doc",
    "tensorflow.keras.layers.subtract": "doc",
    "tensorflow.initializers.HeUniform": "doc",
    "tensorflow.initializers.he_normal": "doc",
    "tensorflow.keras.initializers.get": "doc",
    "tensorflow.compat.v1.initializers": "doc",
    "tensorflow.distribute.InputOptions": "doc",
    "tensorflow.initializers.Orthogonal": "doc",
    "tensorflow.initializers.he_uniform": "doc",
    "tensorflow.initializers.orthogonal": "doc",
    "tensorflow.keras.initializers.Ones": "doc",
    "tensorflow.keras.initializers.ones": "doc",
    "tensorflow.compat.v1.math.subtract": "doc",
    "tensorflow.compat.v1.sets.set_size": "doc",
    "tensorflow.initializers.LecunNormal": "doc",
    "tensorflow.keras.initializers.Zeros": "doc",
    "tensorflow.keras.initializers.zeros": "doc",
    "tensorflow.compat.v1.keras.wrappers": "doc",
    "tensorflow.initializers.GlorotNormal": "doc",
    "tensorflow.initializers.LecunUniform": "doc",
    "tensorflow.initializers.RandomNormal": "doc",
    "tensorflow.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.nn.l2_normalize": "doc",
    "tensorflow.data.experimental.Optional": "doc",
    "tensorflow.initializers.GlorotUniform": "doc",
    "tensorflow.initializers.RandomUniform": "doc",
    "tensorflow.initializers.glorot_normal": "doc",
    "tensorflow.initializers.lecun_uniform": "doc",
    "tensorflow.initializers.random_normal": "doc",
    "tensorflow.experimental.numpy.subtract": "doc",
    "tensorflow.initializers.glorot_uniform": "doc",
    "tensorflow.initializers.random_uniform": "doc",
    "tensorflow.keras.initializers.Constant": "doc",
    "tensorflow.keras.initializers.HeNormal": "doc",
    "tensorflow.keras.initializers.Identity": "doc",
    "tensorflow.keras.initializers.constant": "doc",
    "tensorflow.keras.initializers.identity": "doc",
    "tensorflow.keras.wrappers.scikit_learn": "doc",
    "tensorflow.compat.v1.initializers.ones": "doc",
    "tensorflow.compat.v1.math.l2_normalize": "doc",
    "tensorflow.initializers.TruncatedNormal": "doc",
    "tensorflow.keras.applications.MobileNet": "doc",
    "tensorflow.keras.initializers.he_normal": "doc",
    "tensorflow.compat.v1.autograph.to_graph": "doc",
    "tensorflow.compat.v1.initializers.zeros": "doc",
    "tensorflow.compat.v1.keras.initializers": "doc",
    "tensorflow.initializers.truncated_normal": "doc",
    "tensorflow.initializers.variance_scaling": "doc",
    "tensorflow.keras.initializers.Orthogonal": "doc",
    "tensorflow.keras.initializers.he_uniform": "doc",
    "tensorflow.keras.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.linalg.l2_normalize": "doc",
    "tensorflow.keras.initializers.LecunNormal": "doc",
    "tensorflow.compat.v1.constant_initializer": "doc",
    "tensorflow.keras.initializers.GlorotNormal": "doc",
    "tensorflow.keras.initializers.LecunUniform": "doc",
    "tensorflow.keras.initializers.RandomNormal": "doc",
    "tensorflow.keras.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.experimental.Optional": "doc",
    "tensorflow.compat.v1.initializers.constant": "doc",
    "tensorflow.compat.v1.initializers.identity": "doc",
    "tensorflow.compat.v1.keras.layers.Subtract": "doc",
    "tensorflow.compat.v1.keras.layers.subtract": "doc",
    "tensorflow.keras.initializers.GlorotUniform": "doc",
    "tensorflow.keras.initializers.RandomUniform": "doc",
    "tensorflow.keras.initializers.glorot_normal": "doc",
    "tensorflow.keras.initializers.lecun_uniform": "doc",
    "tensorflow.keras.initializers.random_normal": "doc",
    "tensorflow.compat.v1.initializers.he_normal": "doc",
    "tensorflow.compat.v1.initializers.variables": "doc",
    "tensorflow.compat.v1.keras.initializers.get": "doc",
    "tensorflow.keras.initializers.glorot_uniform": "doc",
    "tensorflow.keras.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.keras.initializers.Ones": "doc",
    "tensorflow.compat.v1.keras.initializers.ones": "doc",
    "tensorflow.keras.estimator.model_to_estimator": "doc",
    "tensorflow.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.compat.v1.flags.ArgumentSerializer": "doc",
    "tensorflow.compat.v1.keras.initializers.Zeros": "doc",
    "tensorflow.compat.v1.keras.initializers.zeros": "doc",
    "tensorflow.keras.initializers.truncated_normal": "doc",
    "tensorflow.keras.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.normal": "doc",
    "tensorflow.distribute.experimental.partitioners": "doc",
    "tensorflow.compat.v1.data.experimental.Optional": "doc",
    "tensorflow.compat.v1.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.initializers.random_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.uniform": "doc",
    "tensorflow.compat.v1.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.Constant": "doc",
    "tensorflow.compat.v1.keras.initializers.Identity": "doc",
    "tensorflow.compat.v1.keras.initializers.constant": "doc",
    "tensorflow.compat.v1.keras.initializers.identity": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn": "doc",
    "tensorflow.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.keras.preprocessing.image.smart_resize": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentSerializer": "doc",
    "tensorflow.compat.v1.initializers.local_variables": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNet": "doc",
    "tensorflow.compat.v1.keras.initializers.he_normal": "doc",
    "tensorflow.compat.v1.initializers.global_variables": "doc",
    "tensorflow.compat.v1.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.keras.initializers.Orthogonal": "doc",
    "tensorflow.compat.v1.keras.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomNormal": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_normal": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomUniform": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.random_normal": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.compat.v1.initializers.uniform_unit_scaling": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.keras.estimator.model_to_estimator": "doc",
    "tensorflow.compat.v1.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.compat.v1.keras.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.compat.v1.metrics.mean_relative_error": "doc",
    "tensorflow.unravel_index": "doc",
    "tensorflow.nn.zero_fraction": "doc",
    "tensorflow.math.zero_fraction": "doc",
    "tensorflow.compat.v1.distributions": "doc",
    "tensorflow.compat.v1.unravel_index": "doc",
    "tensorflow.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.compat.v1.nn.zero_fraction": "doc",
    "tensorflow.compat.v1.distributions.Beta": "doc",
    "tensorflow.compat.v1.math.zero_fraction": "doc",
    "tensorflow.compat.v1.distributions.Gamma": "doc",
    "tensorflow.compat.v1.distributions.Normal": "doc",
    "tensorflow.compat.v1.distributions.Laplace": "doc",
    "tensorflow.compat.v1.distributions.Uniform": "doc",
    "tensorflow.compat.v1.distributions.StudentT": "doc",
    "tensorflow.compat.v1.distributions.Bernoulli": "doc",
    "tensorflow.compat.v1.distributions.Dirichlet": "doc",
    "tensorflow.compat.v1.distributions.RegisterKL": "doc",
    "tensorflow.compat.v1.distributions.Categorical": "doc",
    "tensorflow.compat.v1.distributions.Exponential": "doc",
    "tensorflow.compat.v1.distributions.Multinomial": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.compat.v1.distributions.kl_divergence": "doc",
    "tensorflow.compat.v1.distributions.DirichletMultinomial": "doc",
    "tensorflow.compat.v1.distributions.ReparameterizationType": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.debugging.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.debugging.assert_proper_iterable": "doc",
    "tensorflow.raw_ops.MapIncompleteSize": "doc",
    "tensorflow.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.compat.v1.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.no_gradient": "doc",
    "tensorflow.keras.activations": "doc",
    "tensorflow.keras.activations.elu": "doc",
    "tensorflow.keras.activations.get": "doc",
    "tensorflow.compat.v1.no_gradient": "doc",
    "tensorflow.compat.v1.scatter_min": "doc",
    "tensorflow.compat.v1.string_join": "doc",
    "tensorflow.keras.activations.gelu": "doc",
    "tensorflow.keras.activations.relu": "doc",
    "tensorflow.keras.activations.selu": "doc",
    "tensorflow.keras.activations.swish": "doc",
    "tensorflow.keras.activations.linear": "doc",
    "tensorflow.keras.activations.sigmoid": "doc",
    "tensorflow.keras.activations.softplus": "doc",
    "tensorflow.compat.v1.keras.activations": "doc",
    "tensorflow.compat.v1.linalg.matrix_rank": "doc",
    "tensorflow.keras.activations.hard_sigmoid": "doc",
    "tensorflow.compat.v1.keras.activations.elu": "doc",
    "tensorflow.compat.v1.keras.activations.get": "doc",
    "tensorflow.compat.v1.keras.activations.relu": "doc",
    "tensorflow.compat.v1.keras.activations.selu": "doc",
    "tensorflow.compat.v1.keras.activations.swish": "doc",
    "tensorflow.compat.v1.keras.activations.linear": "doc",
    "tensorflow.compat.v1.keras.activations.sigmoid": "doc",
    "tensorflow.compat.v1.keras.activations.softplus": "doc",
    "tensorflow.compat.v1.keras.activations.hard_sigmoid": "doc",
    "tensorflow.graph_util": "doc",
    "tensorflow.raw_ops.MatrixDiag": "doc",
    "tensorflow.raw_ops.SdcaFprint": "doc",
    "tensorflow.compat.v1.graph_util": "doc",
    "tensorflow.graph_util.import_graph_def": "doc",
    "tensorflow.compat.v1.graph_util.must_run_on_cpu": "doc",
    "tensorflow.compat.v1.graph_util.import_graph_def": "doc",
    "tensorflow.compat.v1.graph_util.extract_sub_graph": "doc",
    "tensorflow.compat.v1.graph_util.remove_training_nodes": "doc",
    "tensorflow.compat.v1.graph_util.convert_variables_to_constants": "doc",
    "tensorflow.compat.v1.graph_util.tensor_shape_from_node_def_name": "doc",
    "tensorflow.raw_ops.BarrierIncompleteSize": "doc",
    "tensorflow.raw_ops.IsVariableInitialized": "doc",
    "tensorflow.compat.v1.variables_initializer": "doc",
    "tensorflow.debugging.assert_non_positive": "doc",
    "tensorflow.compat.v1.debugging.assert_non_positive": "doc",
    "tensorflow.estimator.WarmStartSettings": "doc",
    "tensorflow.compat.v1.estimator.WarmStartSettings": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.debugging.assert_rank_in": "doc",
    "tensorflow.compat.v1.assert_rank_in": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_in": "doc",
    "tensorflow.image.adjust_saturation": "doc",
    "tensorflow.image.random_saturation": "doc",
    "tensorflow.compat.v1.image.adjust_saturation": "doc",
    "tensorflow.compat.v1.image.random_saturation": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.raw_ops.MatrixSetDiag": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.random_normal_initializer": "doc",
    "tensorflow.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.compat.v1.glorot_normal_initializer": "doc",
    "tensorflow.compat.v1.random_normal_initializer": "doc",
    "tensorflow.compat.v1.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.metrics.Poisson": "doc",
    "tensorflow.raw_ops.PrintV2": "doc",
    "tensorflow.metrics.SquaredHinge": "doc",
    "tensorflow.keras.metrics.Poisson": "doc",
    "tensorflow.metrics.TrueNegatives": "doc",
    "tensorflow.metrics.squared_hinge": "doc",
    "tensorflow.metrics.FalseNegatives": "doc",
    "tensorflow.metrics.FalsePositives": "doc",
    "tensorflow.compat.v1.logging.error": "doc",
    "tensorflow.data.experimental.service": "doc",
    "tensorflow.keras.metrics.SquaredHinge": "doc",
    "tensorflow.keras.metrics.TrueNegatives": "doc",
    "tensorflow.keras.metrics.squared_hinge": "doc",
    "tensorflow.keras.metrics.FalseNegatives": "doc",
    "tensorflow.keras.metrics.FalsePositives": "doc",
    "tensorflow.compat.v1.keras.metrics.Poisson": "doc",
    "tensorflow.compat.v1.metrics.true_negatives": "doc",
    "tensorflow.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.compat.v1.data.experimental.service": "doc",
    "tensorflow.data.experimental.service.distribute": "doc",
    "tensorflow.compat.v1.keras.metrics.SquaredHinge": "doc",
    "tensorflow.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.compat.v1.keras.metrics.TrueNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.squared_hinge": "doc",
    "tensorflow.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.data.experimental.service.WorkerServer": "doc",
    "tensorflow.compat.v1.keras.metrics.FalseNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.FalsePositives": "doc",
    "tensorflow.data.experimental.service.DispatchServer": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine_proximity": "doc",
    "tensorflow.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.data.experimental.service.register_dataset": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.compat.v1.data.experimental.service.distribute": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.compat.v1.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.compat.v1.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.compat.v1.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.compat.v1.data.experimental.service.register_dataset": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.compat.v1.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.fixed_size_partitioner": "doc",
    "tensorflow.estimator": "doc",
    "tensorflow.estimator.Head": "doc",
    "tensorflow.keras.estimator": "doc",
    "tensorflow.estimator.export": "doc",
    "tensorflow.raw_ops.StageSize": "doc",
    "tensorflow.raw_ops.WriteFile": "doc",
    "tensorflow.raw_ops.ZerosLike": "doc",
    "tensorflow.estimator.EvalSpec": "doc",
    "tensorflow.estimator.Exporter": "doc",
    "tensorflow.estimator.ModeKeys": "doc",
    "tensorflow.estimator.Estimator": "doc",
    "tensorflow.estimator.MultiHead": "doc",
    "tensorflow.estimator.RunConfig": "doc",
    "tensorflow.estimator.VocabInfo": "doc",
    "tensorflow.compat.v1.estimator": "doc",
    "tensorflow.estimator.FeedFnHook": "doc",
    "tensorflow.estimator.add_metrics": "doc",
    "tensorflow.estimator.BestExporter": "doc",
    "tensorflow.estimator.DNNEstimator": "doc",
    "tensorflow.estimator.DNNRegressor": "doc",
    "tensorflow.estimator.FinalOpsHook": "doc",
    "tensorflow.estimator.ProfilerHook": "doc",
    "tensorflow.estimator.experimental": "doc",
    "tensorflow.estimator.DNNClassifier": "doc",
    "tensorflow.estimator.EstimatorSpec": "doc",
    "tensorflow.estimator.FinalExporter": "doc",
    "tensorflow.estimator.NanTensorHook": "doc",
    "tensorflow.compat.v1.estimator.tpu": "doc",
    "tensorflow.debugging.assert_integer": "doc",
    "tensorflow.estimator.LatestExporter": "doc",
    "tensorflow.estimator.MultiClassHead": "doc",
    "tensorflow.estimator.MultiLabelHead": "doc",
    "tensorflow.estimator.RegressionHead": "doc",
    "tensorflow.estimator.SessionRunArgs": "doc",
    "tensorflow.estimator.SessionRunHook": "doc",
    "tensorflow.estimator.StopAtStepHook": "doc",
    "tensorflow.compat.v1.estimator.Head": "doc",
    "tensorflow.debugging.assert_positive": "doc",
    "tensorflow.estimator.BinaryClassHead": "doc",
    "tensorflow.estimator.LinearEstimator": "doc",
    "tensorflow.estimator.LinearRegressor": "doc",
    "tensorflow.estimator.StepCounterHook": "doc",
    "tensorflow.compat.v1.keras.estimator": "doc",
    "tensorflow.estimator.LinearClassifier": "doc",
    "tensorflow.estimator.SessionRunValues": "doc",
    "tensorflow.estimator.SummarySaverHook": "doc",
    "tensorflow.compat.v1.estimator.export": "doc",
    "tensorflow.compat.v1.estimator.inputs": "doc",
    "tensorflow.estimator.BaselineEstimator": "doc",
    "tensorflow.estimator.BaselineRegressor": "doc",
    "tensorflow.estimator.LoggingTensorHook": "doc",
    "tensorflow.estimator.SessionRunContext": "doc",
    "tensorflow.estimator.BaselineClassifier": "doc",
    "tensorflow.compat.v1.estimator.EvalSpec": "doc",
    "tensorflow.compat.v1.estimator.Exporter": "doc",
    "tensorflow.compat.v1.estimator.ModeKeys": "doc",
    "tensorflow.estimator.CheckpointSaverHook": "doc",
    "tensorflow.estimator.export.ExportOutput": "doc",
    "tensorflow.compat.v1.estimator.Estimator": "doc",
    "tensorflow.compat.v1.estimator.MultiHead": "doc",
    "tensorflow.compat.v1.estimator.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.VocabInfo": "doc",
    "tensorflow.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.estimator.export.PredictOutput": "doc",
    "tensorflow.compat.v1.estimator.FeedFnHook": "doc",
    "tensorflow.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.estimator.PoissonRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.add_metrics": "doc",
    "tensorflow.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.estimator.LogisticRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.BestExporter": "doc",
    "tensorflow.compat.v1.estimator.DNNEstimator": "doc",
    "tensorflow.compat.v1.estimator.DNNRegressor": "doc",
    "tensorflow.compat.v1.estimator.FinalOpsHook": "doc",
    "tensorflow.compat.v1.estimator.ProfilerHook": "doc",
    "tensorflow.compat.v1.estimator.experimental": "doc",
    "tensorflow.estimator.CheckpointSaverListener": "doc",
    "tensorflow.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.estimator.export.RegressionOutput": "doc",
    "tensorflow.compat.v1.estimator.DNNClassifier": "doc",
    "tensorflow.compat.v1.estimator.EstimatorSpec": "doc",
    "tensorflow.compat.v1.estimator.FinalExporter": "doc",
    "tensorflow.compat.v1.estimator.NanTensorHook": "doc",
    "tensorflow.compat.v1.estimator.tpu.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUConfig": "doc",
    "tensorflow.compat.v1.debugging.assert_integer": "doc",
    "tensorflow.compat.v1.estimator.LatestExporter": "doc",
    "tensorflow.compat.v1.estimator.MultiClassHead": "doc",
    "tensorflow.compat.v1.estimator.MultiLabelHead": "doc",
    "tensorflow.compat.v1.estimator.RegressionHead": "doc",
    "tensorflow.compat.v1.estimator.SessionRunArgs": "doc",
    "tensorflow.compat.v1.estimator.SessionRunHook": "doc",
    "tensorflow.compat.v1.estimator.StopAtStepHook": "doc",
    "tensorflow.compat.v1.python_io.TFRecordWriter": "doc",
    "tensorflow.compat.v1.debugging.assert_positive": "doc",
    "tensorflow.compat.v1.estimator.BinaryClassHead": "doc",
    "tensorflow.compat.v1.estimator.LinearEstimator": "doc",
    "tensorflow.compat.v1.estimator.LinearRegressor": "doc",
    "tensorflow.compat.v1.estimator.StepCounterHook": "doc",
    "tensorflow.compat.v1.python_io.TFRecordOptions": "doc",
    "tensorflow.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.compat.v1.estimator.LinearClassifier": "doc",
    "tensorflow.compat.v1.estimator.SessionRunValues": "doc",
    "tensorflow.compat.v1.estimator.SummarySaverHook": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental": "doc",
    "tensorflow.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.estimator.export.ClassificationOutput": "doc",
    "tensorflow.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.compat.v1.data.experimental.Structure": "doc",
    "tensorflow.compat.v1.estimator.BaselineEstimator": "doc",
    "tensorflow.compat.v1.estimator.BaselineRegressor": "doc",
    "tensorflow.compat.v1.estimator.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.estimator.SessionRunContext": "doc",
    "tensorflow.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.compat.v1.estimator.BaselineClassifier": "doc",
    "tensorflow.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.estimator.experimental.KMeans": "doc",
    "tensorflow.compat.v1.estimator.export.ExportOutput": "doc",
    "tensorflow.compat.v1.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.estimator.export.PredictOutput": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec": "doc",
    "tensorflow.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.compat.v1.estimator.PoissonRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.inputs.numpy_input_fn": "doc",
    "tensorflow.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.compat.v1.estimator.LogisticRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.inputs.pandas_input_fn": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.compat.v1.estimator.export.RegressionOutput": "doc",
    "tensorflow.compat.v1.estimator.tpu.InputPipelineConfig": "doc",
    "tensorflow.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.compat.v1.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.compat.v1.estimator.export.ClassificationOutput": "doc",
    "tensorflow.compat.v1.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.compat.v1.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.compat.v1.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.dnn_logit_fn_builder": "doc",
    "tensorflow.compat.v1.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.experimental.linear_logit_fn_builder": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental.EmbeddingConfigSpec": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.compat.v1.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.raw_ops.MatrixDeterminant": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.random_uniform_initializer": "doc",
    "tensorflow.compat.v1.glorot_uniform_initializer": "doc",
    "tensorflow.compat.v1.random_uniform_initializer": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.raw_ops.OrderedMapSize": "doc",
    "tensorflow.raw_ops.StringToNumber": "doc",
    "tensorflow.compat.v1.assert_integer": "doc",
    "tensorflow.compat.v1.feature_column.input_layer": "doc",
    "tensorflow.compat.v1.assert_non_positive": "doc",
    "tensorflow.sin": "doc",
    "tensorflow.asin": "doc",
    "tensorflow.atan": "doc",
    "tensorflow.rank": "doc",
    "tensorflow.scan": "doc",
    "tensorflow.tanh": "doc",
    "tensorflow.nn.lrn": "doc",
    "tensorflow.nn.tanh": "doc",
    "tensorflow.math.sin": "doc",
    "tensorflow.math.asin": "doc",
    "tensorflow.math.atan": "doc",
    "tensorflow.math.tanh": "doc",
    "tensorflow.keras.backend.rnn": "doc",
    "tensorflow.metrics.MeanRelativeError": "doc",
    "tensorflow.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.errors.FailedPreconditionError": "doc",
    "tensorflow.compat.v1.is_variable_initialized": "doc",
    "tensorflow.compat.v1.errors.FailedPreconditionError": "doc",
    "tensorflow.truncatemod": "doc",
    "tensorflow.math.segment_min": "doc",
    "tensorflow.bitwise.bitwise_and": "doc",
    "tensorflow.raw_ops.StringSplit": "doc",
    "tensorflow.raw_ops.TruncateDiv": "doc",
    "tensorflow.compat.v1.segment_min": "doc",
    "tensorflow.compat.v1.truncatemod": "doc",
    "tensorflow.distribute.TPUStrategy": "doc",
    "tensorflow.compat.v1.math.segment_min": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_and": "doc",
    "tensorflow.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.distribute.experimental.coordinator": "doc",
    "tensorflow.compat.v1.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.distribute.experimental.coordinator.RemoteValue": "doc",
    "tensorflow.distribute.experimental.coordinator.PerWorkerValues": "doc",
    "tensorflow.distribute.experimental.coordinator.ClusterCoordinator": "doc",
    "tensorflow.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.local_variables_initializer": "doc",
    "tensorflow.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.as_string": "doc",
    "tensorflow.GradientTape": "doc",
    "tensorflow.quantization": "doc",
    "tensorflow.raw_ops.Assign": "doc",
    "tensorflow.raw_ops.Expint": "doc",
    "tensorflow.custom_gradient": "doc",
    "tensorflow.compat.v1.assign": "doc",
    "tensorflow.compat.v1.is_inf": "doc",
    "tensorflow.autograph.to_code": "doc",
    "tensorflow.math.special.expint": "doc",
    "tensorflow.compat.v1.AttrValue": "doc",
    "tensorflow.compat.v1.as_string": "doc",
    "tensorflow.compat.v1.autograph": "doc",
    "tensorflow.raw_ops.ScatterNdMin": "doc",
    "tensorflow.autodiff.GradientTape": "doc",
    "tensorflow.compat.v1.math.is_inf": "doc",
    "tensorflow.autograph.experimental": "doc",
    "tensorflow.keras.layers.Attention": "doc",
    "tensorflow.compat.v1.GradientTape": "doc",
    "tensorflow.compat.v1.quantization": "doc",
    "tensorflow.raw_ops.PreventGradient": "doc",
    "tensorflow.compat.v1.sets.set_union": "doc",
    "tensorflow.experimental.numpy.arange": "doc",
    "tensorflow.experimental.numpy.arctan": "doc",
    "tensorflow.experimental.numpy.around": "doc",
    "tensorflow.compat.v1.custom_gradient": "doc",
    "tensorflow.compat.v1.debugging.is_inf": "doc",
    "tensorflow.compat.v1.dtypes.as_string": "doc",
    "tensorflow.compat.v1.autograph.to_code": "doc",
    "tensorflow.quantization.quantized_concat": "doc",
    "tensorflow.compat.v1.AttrValue.ListValue": "doc",
    "tensorflow.compat.v1.math.special.expint": "doc",
    "tensorflow.autograph.experimental.Feature": "doc",
    "tensorflow.compat.v1.autograph.experimental": "doc",
    "tensorflow.compat.v1.keras.layers.Attention": "doc",
    "tensorflow.compat.v1.autograph.set_verbosity": "doc",
    "tensorflow.quantization.quantize_and_dequantize": "doc",
    "tensorflow.autograph.experimental.do_not_convert": "doc",
    "tensorflow.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.compat.v1.quantization.quantized_concat": "doc",
    "tensorflow.compat.v1.autograph.experimental.Feature": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize": "doc",
    "tensorflow.compat.v1.autograph.experimental.do_not_convert": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.image.extract_glimpse": "doc",
    "tensorflow.image.image_gradients": "doc",
    "tensorflow.raw_ops.MatrixLogarithm": "doc",
    "tensorflow.compat.v1.image.extract_glimpse": "doc",
    "tensorflow.compat.v1.image.image_gradients": "doc",
    "tensorflow.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.nn.dropout": "doc",
    "tensorflow.zeros_like": "doc",
    "tensorflow.image.resize": "doc",
    "tensorflow.raw_ops.Size": "doc",
    "tensorflow.io.decode_image": "doc",
    "tensorflow.raw_ops.Softmax": "doc",
    "tensorflow.raw_ops.MapStage": "doc",
    "tensorflow.raw_ops.RefEnter": "doc",
    "tensorflow.distribute.Server": "doc",
    "tensorflow.io.TFRecordWriter": "doc",
    "tensorflow.raw_ops.Bucketize": "doc",
    "tensorflow.image.decode_image": "doc",
    "tensorflow.io.TFRecordOptions": "doc",
    "tensorflow.keras.regularizers": "doc",
    "tensorflow.raw_ops.Dequantize": "doc",
    "tensorflow.raw_ops.MapDataset": "doc",
    "tensorflow.keras.utils.Progbar": "doc",
    "tensorflow.raw_ops.SkipDataset": "doc",
    "tensorflow.raw_ops.SobolSample": "doc",
    "tensorflow.keras.layers.Dropout": "doc",
    "tensorflow.keras.layers.Softmax": "doc",
    "tensorflow.raw_ops.RaggedGather": "doc",
    "tensorflow.raw_ops.SleepDataset": "doc",
    "tensorflow.compat.v1.dequantize": "doc",
    "tensorflow.compat.v1.nn.dropout": "doc",
    "tensorflow.compat.v1.zeros_like": "doc",
    "tensorflow.keras.regularizers.L1": "doc",
    "tensorflow.keras.regularizers.L2": "doc",
    "tensorflow.keras.regularizers.l1": "doc",
    "tensorflow.keras.regularizers.l2": "doc",
    "tensorflow.raw_ops.RandomDataset": "doc",
    "tensorflow.raw_ops.SummaryWriter": "doc",
    "tensorflow.summary.SummaryWriter": "doc",
    "tensorflow.keras.regularizers.get": "doc",
    "tensorflow.keras.utils.plot_model": "doc",
    "tensorflow.raw_ops.ResizeBilinear": "doc",
    "tensorflow.raw_ops.ResourceGather": "doc",
    "tensorflow.compat.v1.image.resize": "doc",
    "tensorflow.keras.layers.InputLayer": "doc",
    "tensorflow.keras.regularizers.L1L2": "doc",
    "tensorflow.raw_ops.TensorArraySize": "doc",
    "tensorflow.compat.v1.tpu.replicate": "doc",
    "tensorflow.experimental.numpy.outer": "doc",
    "tensorflow.keras.regularizers.l1_l2": "doc",
    "tensorflow.raw_ops.TensorListGather": "doc",
    "tensorflow.raw_ops.TensorListResize": "doc",
    "tensorflow.xla.experimental.compile": "doc",
    "tensorflow.compat.v1.layers.Dropout": "doc",
    "tensorflow.compat.v1.layers.dropout": "doc",
    "tensorflow.compat.v1.tpu.XLAOptions": "doc",
    "tensorflow.data.experimental.Counter": "doc",
    "tensorflow.keras.callbacks.CSVLogger": "doc",
    "tensorflow.keras.layers.RepeatVector": "doc",
    "tensorflow.compat.v1.assert_positive": "doc",
    "tensorflow.compat.v1.io.decode_image": "doc",
    "tensorflow.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.experimental.numpy.positive": "doc",
    "tensorflow.compat.v1.distribute.Server": "doc",
    "tensorflow.compat.v1.flags.FloatParser": "doc",
    "tensorflow.compat.v1.io.TFRecordWriter": "doc",
    "tensorflow.raw_ops.LogMatrixDeterminant": "doc",
    "tensorflow.compat.v1.image.decode_image": "doc",
    "tensorflow.compat.v1.io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.keras.regularizers": "doc",
    "tensorflow.experimental.numpy.zeros_like": "doc",
    "tensorflow.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.compat.v1.keras.utils.Progbar": "doc",
    "tensorflow.experimental.numpy.float_power": "doc",
    "tensorflow.compat.v1.keras.layers.Dropout": "doc",
    "tensorflow.compat.v1.keras.layers.Softmax": "doc",
    "tensorflow.data.experimental.RandomDataset": "doc",
    "tensorflow.experimental.numpy.floor_divide": "doc",
    "tensorflow.compat.v1.app.flags.FloatParser": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1": "doc",
    "tensorflow.compat.v1.keras.regularizers.L2": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1": "doc",
    "tensorflow.compat.v1.keras.regularizers.l2": "doc",
    "tensorflow.data.experimental.TFRecordWriter": "doc",
    "tensorflow.raw_ops.OrderedMapIncompleteSize": "doc",
    "tensorflow.compat.v1.keras.regularizers.get": "doc",
    "tensorflow.compat.v1.keras.utils.plot_model": "doc",
    "tensorflow.compat.v1.keras.layers.InputLayer": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1L2": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1_l2": "doc",
    "tensorflow.compat.v1.xla.experimental.compile": "doc",
    "tensorflow.compat.v1.data.experimental.Counter": "doc",
    "tensorflow.compat.v1.keras.callbacks.CSVLogger": "doc",
    "tensorflow.compat.v1.keras.layers.RepeatVector": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.compat.v1.global_variables_initializer": "doc",
    "tensorflow.compat.v1.min_max_variable_partitioner": "doc",
    "tensorflow.compat.v1.truncated_normal_initializer": "doc",
    "tensorflow.compat.v1.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.data.experimental.RandomDataset": "doc",
    "tensorflow.compat.v1.data.experimental.TFRecordWriter": "doc",
    "tensorflow.compat.v1.saved_model.main_op_with_restore": "doc",
    "tensorflow.math.invert_permutation": "doc",
    "tensorflow.compat.v1.invert_permutation": "doc",
    "tensorflow.compat.v1.math.invert_permutation": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixComponents": "doc",
    "tensorflow.compat.v1.python_io.TFRecordCompressionType": "doc",
    "tensorflow.Variable": "doc",
    "tensorflow.negative": "doc",
    "tensorflow.nn.softsign": "doc",
    "tensorflow.math.negative": "doc",
    "tensorflow.math.softsign": "doc",
    "tensorflow.RegisterGradient": "doc",
    "tensorflow.raw_ops.IsFinite": "doc",
    "tensorflow.raw_ops.ReadFile": "doc",
    "tensorflow.raw_ops.SqrtGrad": "doc",
    "tensorflow.raw_ops.Variable": "doc",
    "tensorflow.data.IteratorSpec": "doc",
    "tensorflow.image.central_crop": "doc",
    "tensorflow.compat.v1.GraphDef": "doc",
    "tensorflow.compat.v1.Variable": "doc",
    "tensorflow.compat.v1.negative": "doc",
    "tensorflow.losses.SquaredHinge": "doc",
    "tensorflow.sparse.to_indicator": "doc",
    "tensorflow.keras.utils.get_file": "doc",
    "tensorflow.raw_ops.MakeIterator": "doc",
    "tensorflow.raw_ops.MatrixDiagV2": "doc",
    "tensorflow.raw_ops.MatrixDiagV3": "doc",
    "tensorflow.raw_ops.StringFormat": "doc",
    "tensorflow.compat.v1.nn.softsign": "doc",
    "tensorflow.Variable.SaveSliceInfo": "doc",
    "tensorflow.compat.v1.MetaGraphDef": "doc",
    "tensorflow.distribute.get_strategy": "doc",
    "tensorflow.distribute.has_strategy": "doc",
    "tensorflow.losses.CategoricalHinge": "doc",
    "tensorflow.compat.v1.math.negative": "doc",
    "tensorflow.compat.v1.math.softsign": "doc",
    "tensorflow.metrics.CategoricalHinge": "doc",
    "tensorflow.raw_ops.AdjustSaturation": "doc",
    "tensorflow.raw_ops.DataFormatDimMap": "doc",
    "tensorflow.raw_ops.ExtractGlimpseV2": "doc",
    "tensorflow.raw_ops.RefNextIteration": "doc",
    "tensorflow.keras.layers.UpSampling1D": "doc",
    "tensorflow.keras.layers.UpSampling2D": "doc",
    "tensorflow.keras.layers.UpSampling3D": "doc",
    "tensorflow.keras.losses.SquaredHinge": "doc",
    "tensorflow.compat.v1.RegisterGradient": "doc",
    "tensorflow.distribute.StrategyExtended": "doc",
    "tensorflow.experimental.numpy.isfinite": "doc",
    "tensorflow.experimental.numpy.negative": "doc",
    "tensorflow.keras.applications.Xception": "doc",
    "tensorflow.keras.applications.xception": "doc",
    "tensorflow.keras.applications.mobilenet": "doc",
    "tensorflow.compat.v1.image.central_crop": "doc",
    "tensorflow.keras.losses.CategoricalHinge": "doc",
    "tensorflow.compat.v1.sparse.to_indicator": "doc",
    "tensorflow.keras.applications.InceptionV3": "doc",
    "tensorflow.keras.applications.NASNetLarge": "doc",
    "tensorflow.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.compat.v1.keras.utils.get_file": "doc",
    "tensorflow.keras.applications.NASNetMobile": "doc",
    "tensorflow.keras.applications.inception_v3": "doc",
    "tensorflow.compat.v1.test.compute_gradient": "doc",
    "tensorflow.compat.v1.Variable.SaveSliceInfo": "doc",
    "tensorflow.compat.v1.distribute.get_strategy": "doc",
    "tensorflow.compat.v1.distribute.has_strategy": "doc",
    "tensorflow.keras.preprocessing.image.load_img": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling1D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling2D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling3D": "doc",
    "tensorflow.compat.v1.keras.losses.SquaredHinge": "doc",
    "tensorflow.keras.applications.xception.Xception": "doc",
    "tensorflow.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.compat.v1.distribute.StrategyExtended": "doc",
    "tensorflow.compat.v1.keras.applications.Xception": "doc",
    "tensorflow.compat.v1.keras.applications.xception": "doc",
    "tensorflow.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalHinge": "doc",
    "tensorflow.compat.v1.MetaGraphDef.SignatureDefEntry": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetLarge": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.compat.v1.MetaGraphDef.CollectionDefEntry": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3": "doc",
    "tensorflow.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.load_img": "doc",
    "tensorflow.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.xception.Xception": "doc",
    "tensorflow.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.compat.v1.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.metrics.RootMeanSquaredError": "doc",
    "tensorflow.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.raw_ops.TensorArraySizeV2": "doc",
    "tensorflow.raw_ops.TensorArraySizeV3": "doc",
    "tensorflow.raw_ops.TensorListScatter": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdagradParameters": "doc",
    "tensorflow.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.raw_ops.ResourceConditionalAccumulator": "doc",
    "tensorflow.compat.v1.report_uninitialized_variables": "doc",
    "tensorflow.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.sparse_retain": "doc",
    "tensorflow.compat.v1.wrap_function": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV2": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV3": "doc",
    "tensorflow.raw_ops.DummyIterationCounter": "doc",
    "tensorflow.compat.v1.metrics.sparse_precision_at_k": "doc",
    "tensorflow.compat.v1.metrics.true_positives_at_thresholds": "doc",
    "tensorflow.raw_ops.BatchMatrixDeterminant": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToDense": "doc",
    "tensorflow.raw_ops.ResourceApplyPowerSign": "doc",
    "tensorflow.linalg.matrix_rank": "doc",
    "tensorflow.raw_ops.StatsAggregatorSetSummaryWriter": "doc",
    "tensorflow.nn.dilation2d": "doc",
    "tensorflow.compat.as_str_any": "doc",
    "tensorflow.raw_ops.Dilation2D": "doc",
    "tensorflow.raw_ops.FresnelSin": "doc",
    "tensorflow.raw_ops.IteratorV2": "doc",
    "tensorflow.raw_ops.ScatterDiv": "doc",
    "tensorflow.compat.v1.nn.dilation2d": "doc",
    "tensorflow.compat.v1.nn.static_rnn": "doc",
    "tensorflow.compat.v1.compat.as_str_any": "doc",
    "tensorflow.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.metrics.false_positives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.sparse_average_precision_at_k": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.raw_ops.VarIsInitializedOp": "doc",
    "tensorflow.summary.create_noop_writer": "doc",
    "tensorflow.compat.v1.get_collection_ref": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompleted": "doc",
    "tensorflow.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.compat.v1.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.compat.v1.metrics.average_precision_at_k": "doc",
    "tensorflow.losses.categorical_hinge": "doc",
    "tensorflow.raw_ops.InvertPermutation": "doc",
    "tensorflow.keras.losses.categorical_hinge": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_hinge": "doc",
    "tensorflow.compat.v1.uniform_unit_scaling_initializer": "doc",
    "tensorflow.strided_slice": "doc",
    "tensorflow.keras.preprocessing": "doc",
    "tensorflow.losses.squared_hinge": "doc",
    "tensorflow.raw_ops.MatchingFiles": "doc",
    "tensorflow.raw_ops.MatrixInverse": "doc",
    "tensorflow.raw_ops.StringSplitV2": "doc",
    "tensorflow.compat.v1.strided_slice": "doc",
    "tensorflow.keras.preprocessing.text": "doc",
    "tensorflow.keras.preprocessing.image": "doc",
    "tensorflow.keras.layers.Bidirectional": "doc",
    "tensorflow.keras.losses.squared_hinge": "doc",
    "tensorflow.keras.preprocessing.sequence": "doc",
    "tensorflow.compat.v1.keras.preprocessing": "doc",
    "tensorflow.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.keras.preprocessing.image.save_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image": "doc",
    "tensorflow.compat.v1.keras.layers.Bidirectional": "doc",
    "tensorflow.compat.v1.keras.losses.squared_hinge": "doc",
    "tensorflow.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence": "doc",
    "tensorflow.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.save_img": "doc",
    "tensorflow.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.keras.preprocessing.text_dataset_from_directory": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.keras.preprocessing.image_dataset_from_directory": "doc",
    "tensorflow.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.keras.preprocessing.timeseries_dataset_from_array": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.linalg.LinearOperatorInversion": "doc",
    "tensorflow.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.raw_ops.CreateSummaryFileWriter": "doc",
    "tensorflow.raw_ops.UniformCandidateSampler": "doc",
    "tensorflow.compat.v1.io.TFRecordCompressionType": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorInversion": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.metrics.precision_at_thresholds": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.raw_ops.AnonymousMultiDeviceIterator": "doc",
    "tensorflow.raw_ops.ResourceApplyAdamWithAmsgrad": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalAdagrad": "doc",
    "tensorflow.compat.v1.assert_variables_initialized": "doc",
    "tensorflow.compat.v1.create_partitioned_variables": "doc",
    "tensorflow.compat.v1.variance_scaling_initializer": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.IteratorGetDevice": "doc",
    "tensorflow.debugging.assert_all_finite": "doc",
    "tensorflow.data.experimental.DistributeOptions": "doc",
    "tensorflow.compat.v1.debugging.assert_all_finite": "doc",
    "tensorflow.compat.v1.data.experimental.DistributeOptions": "doc",
    "tensorflow.metrics": "doc",
    "tensorflow.realdiv": "doc",
    "tensorflow.metrics.AUC": "doc",
    "tensorflow.metrics.KLD": "doc",
    "tensorflow.metrics.MAE": "doc",
    "tensorflow.metrics.MSE": "doc",
    "tensorflow.metrics.Sum": "doc",
    "tensorflow.metrics.get": "doc",
    "tensorflow.metrics.kld": "doc",
    "tensorflow.metrics.mae": "doc",
    "tensorflow.metrics.mse": "doc",
    "tensorflow.metrics.MAPE": "doc",
    "tensorflow.metrics.MSLE": "doc",
    "tensorflow.metrics.mape": "doc",
    "tensorflow.metrics.msle": "doc",
    "tensorflow.nest.flatten": "doc",
    "tensorflow.keras.metrics": "doc",
    "tensorflow.metrics.Hinge": "doc",
    "tensorflow.metrics.hinge": "doc",
    "tensorflow.linalg.adjoint": "doc",
    "tensorflow.metrics.Recall": "doc",
    "tensorflow.metrics.MeanIoU": "doc",
    "tensorflow.metrics.logcosh": "doc",
    "tensorflow.metrics.poisson": "doc",
    "tensorflow.raw_ops.Bitcast": "doc",
    "tensorflow.raw_ops.RealDiv": "doc",
    "tensorflow.metrics.Accuracy": "doc",
    "tensorflow.metrics.log_cosh": "doc",
    "tensorflow.keras.metrics.AUC": "doc",
    "tensorflow.keras.metrics.KLD": "doc",
    "tensorflow.keras.metrics.MAE": "doc",
    "tensorflow.keras.metrics.MSE": "doc",
    "tensorflow.keras.metrics.Sum": "doc",
    "tensorflow.keras.metrics.get": "doc",
    "tensorflow.keras.metrics.kld": "doc",
    "tensorflow.keras.metrics.mae": "doc",
    "tensorflow.keras.metrics.mse": "doc",
    "tensorflow.sysconfig.get_lib": "doc",
    "tensorflow.compat.v1.Session": "doc",
    "tensorflow.compat.v1.bitcast": "doc",
    "tensorflow.compat.v1.logging": "doc",
    "tensorflow.compat.v1.metrics": "doc",
    "tensorflow.compat.v1.realdiv": "doc",
    "tensorflow.compat.v1.shape_n": "doc",
    "tensorflow.keras.metrics.MAPE": "doc",
    "tensorflow.keras.metrics.MSLE": "doc",
    "tensorflow.keras.metrics.mape": "doc",
    "tensorflow.keras.metrics.msle": "doc",
    "tensorflow.metrics.MeanTensor": "doc",
    "tensorflow.keras.metrics.Hinge": "doc",
    "tensorflow.keras.metrics.hinge": "doc",
    "tensorflow.keras.layers.Average": "doc",
    "tensorflow.keras.layers.Flatten": "doc",
    "tensorflow.keras.layers.Masking": "doc",
    "tensorflow.keras.layers.average": "doc",
    "tensorflow.keras.metrics.Recall": "doc",
    "tensorflow.metrics.KLDivergence": "doc",
    "tensorflow.metrics.LogCoshError": "doc",
    "tensorflow.compat.v1.nn.raw_rnn": "doc",
    "tensorflow.keras.backend.epsilon": "doc",
    "tensorflow.keras.backend.get_uid": "doc",
    "tensorflow.keras.metrics.MeanIoU": "doc",
    "tensorflow.keras.metrics.logcosh": "doc",
    "tensorflow.keras.metrics.poisson": "doc",
    "tensorflow.metrics.kl_divergence": "doc",
    "tensorflow.compat.v1.logging.log": "doc",
    "tensorflow.compat.v1.metrics.auc": "doc",
    "tensorflow.keras.metrics.Accuracy": "doc",
    "tensorflow.keras.metrics.log_cosh": "doc",
    "tensorflow.metrics.BinaryAccuracy": "doc",
    "tensorflow.raw_ops.MatrixBandPart": "doc",
    "tensorflow.compat.v1.logging.info": "doc",
    "tensorflow.compat.v1.logging.vlog": "doc",
    "tensorflow.compat.v1.nest.flatten": "doc",
    "tensorflow.metrics.binary_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics": "doc",
    "tensorflow.compat.v1.logging.debug": "doc",
    "tensorflow.compat.v1.logging.fatal": "doc",
    "tensorflow.compat.v1.logging.flush": "doc",
    "tensorflow.keras.metrics.MeanTensor": "doc",
    "tensorflow.metrics.CosineSimilarity": "doc",
    "tensorflow.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.layers.Flatten": "doc",
    "tensorflow.compat.v1.layers.flatten": "doc",
    "tensorflow.compat.v1.linalg.adjoint": "doc",
    "tensorflow.compat.v1.logging.log_if": "doc",
    "tensorflow.compat.v1.matrix_inverse": "doc",
    "tensorflow.compat.v1.metrics.recall": "doc",
    "tensorflow.metrics.MeanAbsoluteError": "doc",
    "tensorflow.metrics.PrecisionAtRecall": "doc",
    "tensorflow.metrics.RecallAtPrecision": "doc",
    "tensorflow.experimental.numpy.arctan2": "doc",
    "tensorflow.experimental.numpy.arctanh": "doc",
    "tensorflow.experimental.numpy.average": "doc",
    "tensorflow.keras.metrics.KLDivergence": "doc",
    "tensorflow.keras.metrics.LogCoshError": "doc",
    "tensorflow.metrics.BinaryCrossentropy": "doc",
    "tensorflow.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.metrics.accuracy": "doc",
    "tensorflow.compat.v1.metrics.mean_iou": "doc",
    "tensorflow.keras.metrics.kl_divergence": "doc",
    "tensorflow.metrics.CategoricalAccuracy": "doc",
    "tensorflow.metrics.binary_crossentropy": "doc",
    "tensorflow.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.keras.metrics.AUC": "doc",
    "tensorflow.compat.v1.keras.metrics.KLD": "doc",
    "tensorflow.compat.v1.keras.metrics.MAE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSE": "doc",
    "tensorflow.compat.v1.keras.metrics.Sum": "doc",
    "tensorflow.compat.v1.keras.metrics.get": "doc",
    "tensorflow.compat.v1.keras.metrics.kld": "doc",
    "tensorflow.compat.v1.keras.metrics.mae": "doc",
    "tensorflow.compat.v1.keras.metrics.mse": "doc",
    "tensorflow.compat.v1.sysconfig.get_lib": "doc",
    "tensorflow.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.metrics.categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.MAPE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSLE": "doc",
    "tensorflow.compat.v1.keras.metrics.mape": "doc",
    "tensorflow.compat.v1.keras.metrics.msle": "doc",
    "tensorflow.keras.metrics.binary_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.Hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.hinge": "doc",
    "tensorflow.compat.v1.logging.log_every_n": "doc",
    "tensorflow.compat.v1.logging.log_first_n": "doc",
    "tensorflow.compat.v1.metrics.mean_tensor": "doc",
    "tensorflow.compat.v1.metrics.recall_at_k": "doc",
    "tensorflow.compat.v1.saved_model.main_op": "doc",
    "tensorflow.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.layers.Average": "doc",
    "tensorflow.compat.v1.keras.layers.Flatten": "doc",
    "tensorflow.compat.v1.keras.layers.Masking": "doc",
    "tensorflow.compat.v1.keras.layers.average": "doc",
    "tensorflow.compat.v1.keras.metrics.Recall": "doc",
    "tensorflow.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.backend.epsilon": "doc",
    "tensorflow.compat.v1.keras.backend.get_uid": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanIoU": "doc",
    "tensorflow.compat.v1.keras.metrics.logcosh": "doc",
    "tensorflow.compat.v1.keras.metrics.poisson": "doc",
    "tensorflow.compat.v1.logging.get_verbosity": "doc",
    "tensorflow.compat.v1.logging.set_verbosity": "doc",
    "tensorflow.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.keras.metrics.mean_squared_error": "doc",
    "tensorflow.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.Accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.log_cosh": "doc",
    "tensorflow.compat.v1.metrics.precision_at_k": "doc",
    "tensorflow.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.metrics.false_negatives": "doc",
    "tensorflow.compat.v1.metrics.recall_at_top_k": "doc",
    "tensorflow.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanTensor": "doc",
    "tensorflow.compat.v1.metrics.percentage_below": "doc",
    "tensorflow.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.KLDivergence": "doc",
    "tensorflow.compat.v1.keras.metrics.LogCoshError": "doc",
    "tensorflow.compat.v1.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.metrics.precision_at_top_k": "doc",
    "tensorflow.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.kl_divergence": "doc",
    "tensorflow.compat.v1.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op": "doc",
    "tensorflow.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.compat.v1.metrics.mean_cosine_distance": "doc",
    "tensorflow.compat.v1.metrics.recall_at_thresholds": "doc",
    "tensorflow.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_accuracy": "doc",
    "tensorflow.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.logging.TaskLevelStatusMessage": "doc",
    "tensorflow.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.compat.v1.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.compat.v1.metrics.mean_per_class_accuracy": "doc",
    "tensorflow.compat.v1.metrics.root_mean_squared_error": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.compat.v1.metrics.sensitivity_at_specificity": "doc",
    "tensorflow.compat.v1.metrics.specificity_at_sensitivity": "doc",
    "tensorflow.compat.v1.metrics.true_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.metrics.false_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.compat.v1.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.linalg.LinearOperatorZeros": "doc",
    "tensorflow.raw_ops.AllCandidateSampler": "doc",
    "tensorflow.raw_ops.TensorListScatterV2": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorZeros": "doc",
    "tensorflow.io.read_file": "doc",
    "tensorflow.math.is_finite": "doc",
    "tensorflow.losses.Reduction": "doc",
    "tensorflow.random.Generator": "doc",
    "tensorflow.raw_ops.RsqrtGrad": "doc",
    "tensorflow.raw_ops.Transpose": "doc",
    "tensorflow.compat.v1.is_finite": "doc",
    "tensorflow.compat.v1.read_file": "doc",
    "tensorflow.debugging.assert_near": "doc",
    "tensorflow.debugging.assert_type": "doc",
    "tensorflow.keras.losses.Reduction": "doc",
    "tensorflow.compat.v1.io.read_file": "doc",
    "tensorflow.debugging.assert_greater": "doc",
    "tensorflow.compat.v1.math.is_finite": "doc",
    "tensorflow.debugging.assert_negative": "doc",
    "tensorflow.compat.v1.gfile.FastGFile": "doc",
    "tensorflow.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.compat.v1.losses.Reduction": "doc",
    "tensorflow.compat.v1.random.Generator": "doc",
    "tensorflow.experimental.numpy.heaviside": "doc",
    "tensorflow.random.experimental.Generator": "doc",
    "tensorflow.compat.v1.debugging.is_finite": "doc",
    "tensorflow.compat.v1.debugging.assert_near": "doc",
    "tensorflow.compat.v1.debugging.assert_type": "doc",
    "tensorflow.compat.v1.debugging.assert_greater": "doc",
    "tensorflow.compat.v1.debugging.assert_negative": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.compat.v1.distribute.get_loss_reduction": "doc",
    "tensorflow.compat.v1.random.experimental.Generator": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropFilter": "doc",
    "tensorflow.distribute.in_cross_replica_context": "doc",
    "tensorflow.compat.v1.distribute.in_cross_replica_context": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.compat.forward_compatibility_horizon": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToSparseTensor": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionWithOverlaps": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompletedV2": "doc",
    "tensorflow.compat.v1.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.compat.v1.compat.forward_compatibility_horizon": "doc",
    "tensorflow.compat.v1.app.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalAdagrad": "doc",
    "tensorflow.compat.v1.InteractiveSession": "doc",
    "tensorflow.compat.v1.layers.BatchNormalization": "doc",
    "tensorflow.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.compat.v1.keras.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.assert_greater": "doc",
    "tensorflow.raw_ops.MatrixDiagPart": "doc",
    "tensorflow.compat.v1.assert_greater": "doc",
    "tensorflow.compat.v1.random_poisson": "doc",
    "tensorflow.compat.v1.sparse_minimum": "doc",
    "tensorflow.compat.v1.tpu.experimental.FtrlParameters": "doc",
    "tensorflow.control_dependencies": "doc",
    "tensorflow.nn.RNNCellDeviceWrapper": "doc",
    "tensorflow.raw_ops.ApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.Conv2DBackpropFilter": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilter": "doc",
    "tensorflow.raw_ops.DataFormatVecPermute": "doc",
    "tensorflow.raw_ops.ReaderSerializeState": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagrad": "doc",
    "tensorflow.raw_ops.ResourceApplyRMSProp": "doc",
    "tensorflow.raw_ops.TPUCompilationResult": "doc",
    "tensorflow.raw_ops.TensorListFromTensor": "doc",
    "tensorflow.raw_ops.WriteRawProtoSummary": "doc",
    "tensorflow.compat.v1.control_dependencies": "doc",
    "tensorflow.distribute.ReductionToOneDevice": "doc",
    "tensorflow.linalg.LinearOperatorComposition": "doc",
    "tensorflow.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.random.uniform_candidate_sampler": "doc",
    "tensorflow.raw_ops.BytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.DeleteMultiDeviceIterator": "doc",
    "tensorflow.compat.v1.nn.bidirectional_dynamic_rnn": "doc",
    "tensorflow.compat.v1.nn.uniform_candidate_sampler": "doc",
    "tensorflow.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.compat.v1.variable_axis_size_partitioner": "doc",
    "tensorflow.compat.v1.distribute.ReductionToOneDevice": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorComposition": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.compat.v1.random.uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.image.draw_bounding_boxes": "doc",
    "tensorflow.distribute.get_replica_context": "doc",
    "tensorflow.compat.v1.image.draw_bounding_boxes": "doc",
    "tensorflow.compat.v1.distribute.get_replica_context": "doc",
    "tensorflow.assert_rank": "doc",
    "tensorflow.fingerprint": "doc",
    "tensorflow.linalg.tensor_diag": "doc",
    "tensorflow.random.categorical": "doc",
    "tensorflow.raw_ops.Fingerprint": "doc",
    "tensorflow.debugging.assert_rank": "doc",
    "tensorflow.compat.v1.assert_rank": "doc",
    "tensorflow.compat.v1.fingerprint": "doc",
    "tensorflow.compat.v1.matrix_diag": "doc",
    "tensorflow.compat.v1.scatter_add": "doc",
    "tensorflow.compat.v1.scatter_div": "doc",
    "tensorflow.math.special.fresnel_sin": "doc",
    "tensorflow.compat.v1.io.write_graph": "doc",
    "tensorflow.compat.v1.nn.dynamic_rnn": "doc",
    "tensorflow.keras.backend.set_epsilon": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag": "doc",
    "tensorflow.compat.v1.random.categorical": "doc",
    "tensorflow.data.experimental.cardinality": "doc",
    "tensorflow.experimental.numpy.bitwise_and": "doc",
    "tensorflow.compat.v1.debugging.assert_rank": "doc",
    "tensorflow.compat.v1.math.special.fresnel_sin": "doc",
    "tensorflow.compat.v1.keras.backend.get_session": "doc",
    "tensorflow.compat.v1.keras.backend.set_epsilon": "doc",
    "tensorflow.compat.v1.keras.backend.set_session": "doc",
    "tensorflow.compat.v1.data.experimental.cardinality": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.dynamic_rnn": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.autograph": "doc",
    "tensorflow.math.is_inf": "doc",
    "tensorflow.summary.trace_off": "doc",
    "tensorflow.autograph.set_verbosity": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalGradientDescent": "doc",
    "tensorflow.compat.v1.resource_loader.get_root_dir_with_all_resources": "doc",
    "tensorflow.raw_ops.LogUniformCandidateSampler": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.ResourceStridedSliceAssign": "doc",
    "tensorflow.raw_ops.SerializeTensor": "doc",
    "tensorflow.compat.v1.CriticalSection": "doc",
    "tensorflow.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.nn.all_candidate_sampler": "doc",
    "tensorflow.lite.RepresentativeDataset": "doc",
    "tensorflow.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.random.all_candidate_sampler": "doc",
    "tensorflow.raw_ops.CreateSummaryDbWriter": "doc",
    "tensorflow.raw_ops.MaxPoolGradWithArgmax": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighbor": "doc",
    "tensorflow.raw_ops.ResourceApplyAdadelta": "doc",
    "tensorflow.raw_ops.ResourceApplyMomentum": "doc",
    "tensorflow.compat.v1.nn.all_candidate_sampler": "doc",
    "tensorflow.compat.v1.lite.RepresentativeDataset": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.compat.v1.random.all_candidate_sampler": "doc",
    "tensorflow.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.compat.v1.keras.experimental.load_from_saved_model": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.keras.layers.BatchNormalization": "doc",
    "tensorflow.raw_ops.ResourceScatterMin": "doc",
    "tensorflow.compat.v1.matrix_determinant": "doc",
    "tensorflow.keras.layers.LayerNormalization": "doc",
    "tensorflow.compat.v1.python_io.tf_record_iterator": "doc",
    "tensorflow.compat.v1.keras.layers.LayerNormalization": "doc",
    "tensorflow.compat.v1.trainable_variables": "doc",
    "tensorflow.compat.v1.nn.batch_normalization": "doc",
    "tensorflow.compat.v1.layers.batch_normalization": "doc",
    "tensorflow.size": "doc",
    "tensorflow.tile": "doc",
    "tensorflow.group": "doc",
    "tensorflow.image": "doc",
    "tensorflow.Module": "doc",
    "tensorflow.divide": "doc",
    "tensorflow.gather": "doc",
    "tensorflow.repeat": "doc",
    "tensorflow.bitwise": "doc",
    "tensorflow.complex": "doc",
    "tensorflow.ones_like": "doc",
    "tensorflow.sets.size": "doc",
    "tensorflow.TensorSpec": "doc",
    "tensorflow.distribute": "doc",
    "tensorflow.get_logger": "doc",
    "tensorflow.image.psnr": "doc",
    "tensorflow.image.ssim": "doc",
    "tensorflow.nn.softmax": "doc",
    "tensorflow.reduce_min": "doc",
    "tensorflow.image.rot90": "doc",
    "tensorflow.keras.Model": "doc",
    "tensorflow.lite.OpsSet": "doc",
    "tensorflow.math.divide": "doc",
    "tensorflow.linalg.sqrtm": "doc",
    "tensorflow.math.softmax": "doc",
    "tensorflow.raw_ops.NoOp": "doc",
    "tensorflow.raw_ops.Prod": "doc",
    "tensorflow.raw_ops.Sqrt": "doc",
    "tensorflow.image.is_jpeg": "doc",
    "tensorflow.io.write_file": "doc",
    "tensorflow.raw_ops.Enter": "doc",
    "tensorflow.raw_ops.Merge": "doc",
    "tensorflow.raw_ops.Rsqrt": "doc",
    "tensorflow.raw_ops.Shape": "doc",
    "tensorflow.raw_ops.Slice": "doc",
    "tensorflow.raw_ops.Split": "doc",
    "tensorflow.raw_ops.Stage": "doc",
    "tensorflow.summary.image": "doc",
    "tensorflow.summary.write": "doc",
    "tensorflow.bitwise.invert": "doc",
    "tensorflow.dtypes.complex": "doc",
    "tensorflow.errors.OpError": "doc",
    "tensorflow.losses.Poisson": "doc",
    "tensorflow.math.nextafter": "doc",
    "tensorflow.nn.convolution": "doc",
    "tensorflow.nn.log_softmax": "doc",
    "tensorflow.raw_ops.Gather": "doc",
    "tensorflow.raw_ops.ShapeN": "doc",
    "tensorflow.raw_ops.Spence": "doc",
    "tensorflow.raw_ops.SplitV": "doc",
    "tensorflow.raw_ops.Substr": "doc",
    "tensorflow.sparse.reorder": "doc",
    "tensorflow.sparse.softmax": "doc",
    "tensorflow.compat.v1.size": "doc",
    "tensorflow.compat.v1.tile": "doc",
    "tensorflow.io.gfile.remove": "doc",
    "tensorflow.io.gfile.rename": "doc",
    "tensorflow.io.gfile.rmtree": "doc",
    "tensorflow.io.parse_tensor": "doc",
    "tensorflow.lite.TargetSpec": "doc",
    "tensorflow.load_op_library": "doc",
    "tensorflow.math.reduce_min": "doc",
    "tensorflow.mixed_precision": "doc",
    "tensorflow.raw_ops.Complex": "doc",
    "tensorflow.raw_ops.MapPeek": "doc",
    "tensorflow.raw_ops.Maximum": "doc",
    "tensorflow.raw_ops.Minimum": "doc",
    "tensorflow.raw_ops.Reshape": "doc",
    "tensorflow.raw_ops.Restore": "doc",
    "tensorflow.raw_ops.Reverse": "doc",
    "tensorflow.raw_ops.Sigmoid": "doc",
    "tensorflow.raw_ops.Squeeze": "doc",
    "tensorflow.compat.v1.group": "doc",
    "tensorflow.compat.v1.image": "doc",
    "tensorflow.image.adjust_hue": "doc",
    "tensorflow.image.decode_bmp": "doc",
    "tensorflow.image.decode_gif": "doc",
    "tensorflow.image.decode_png": "doc",
    "tensorflow.image.encode_png": "doc",
    "tensorflow.image.hsv_to_rgb": "doc",
    "tensorflow.image.random_hue": "doc",
    "tensorflow.image.rgb_to_hsv": "doc",
    "tensorflow.image.rgb_to_yiq": "doc",
    "tensorflow.image.rgb_to_yuv": "doc",
    "tensorflow.image.yiq_to_rgb": "doc",
    "tensorflow.image.yuv_to_rgb": "doc",
    "tensorflow.io.RaggedFeature": "doc",
    "tensorflow.io.gfile.listdir": "doc",
    "tensorflow.io.parse_example": "doc",
    "tensorflow.keras.Sequential": "doc",
    "tensorflow.math.log_softmax": "doc",
    "tensorflow.random.Algorithm": "doc",
    "tensorflow.raw_ops.MapClear": "doc",
    "tensorflow.raw_ops.OnesLike": "doc",
    "tensorflow.raw_ops.Softplus": "doc",
    "tensorflow.compat.v1.Module": "doc",
    "tensorflow.compat.v1.divide": "doc",
    "tensorflow.compat.v1.gather": "doc",
    "tensorflow.compat.v1.repeat": "doc",
    "tensorflow.image.decode_jpeg": "doc",
    "tensorflow.image.encode_jpeg": "doc",
    "tensorflow.image.random_crop": "doc",
    "tensorflow.image.sobel_edges": "doc",
    "tensorflow.math.sobol_sample": "doc",
    "tensorflow.raw_ops.BitwiseOr": "doc",
    "tensorflow.raw_ops.LogicalOr": "doc",
    "tensorflow.raw_ops.MirrorPad": "doc",
    "tensorflow.raw_ops.NextAfter": "doc",
    "tensorflow.raw_ops.Polygamma": "doc",
    "tensorflow.raw_ops.QueueSize": "doc",
    "tensorflow.sparse.from_dense": "doc",
    "tensorflow.compat.v1.OpError": "doc",
    "tensorflow.compat.v1.bitwise": "doc",
    "tensorflow.compat.v1.complex": "doc",
    "tensorflow.bitwise.bitwise_or": "doc",
    "tensorflow.bitwise.left_shift": "doc",
    "tensorflow.image.ResizeMethod": "doc",
    "tensorflow.image.adjust_gamma": "doc",
    "tensorflow.image.flip_up_down": "doc",
    "tensorflow.keras.models.Model": "doc",
    "tensorflow.math.count_nonzero": "doc",
    "tensorflow.raw_ops.CSVDataset": "doc",
    "tensorflow.raw_ops.LMDBReader": "doc",
    "tensorflow.raw_ops.LogSoftmax": "doc",
    "tensorflow.raw_ops.MapUnstage": "doc",
    "tensorflow.raw_ops.QuantizeV2": "doc",
    "tensorflow.raw_ops.RandomCrop": "doc",
    "tensorflow.raw_ops.RemoteCall": "doc",
    "tensorflow.raw_ops.RightShift": "doc",
    "tensorflow.raw_ops.SaveSlices": "doc",
    "tensorflow.raw_ops.SegmentMin": "doc",
    "tensorflow.raw_ops.SqlDataset": "doc",
    "tensorflow.raw_ops.ZipDataset": "doc",
    "tensorflow.compat.v1.op_scope": "doc",
    "tensorflow.bitwise.bitwise_xor": "doc",
    "tensorflow.bitwise.right_shift": "doc",
    "tensorflow.distribute.ReduceOp": "doc",
    "tensorflow.queue.PriorityQueue": "doc",
    "tensorflow.ragged.cross_hashed": "doc",
    "tensorflow.raw_ops.DecodeImage": "doc",
    "tensorflow.raw_ops.LMDBDataset": "doc",
    "tensorflow.raw_ops.MatrixSolve": "doc",
    "tensorflow.raw_ops.Multinomial": "doc",
    "tensorflow.raw_ops.Placeholder": "doc",
    "tensorflow.raw_ops.RandomGamma": "doc",
    "tensorflow.raw_ops.RecordInput": "doc",
    "tensorflow.raw_ops.RefIdentity": "doc",
    "tensorflow.raw_ops.SaveDataset": "doc",
    "tensorflow.raw_ops.ScanDataset": "doc",
    "tensorflow.raw_ops.SparseSlice": "doc",
    "tensorflow.raw_ops.SparseSplit": "doc",
    "tensorflow.sparse.cross_hashed": "doc",
    "tensorflow.compat.v1.ones_like": "doc",
    "tensorflow.compat.v1.sets.size": "doc",
    "tensorflow.keras.layers.Maximum": "doc",
    "tensorflow.keras.layers.Minimum": "doc",
    "tensorflow.keras.layers.Permute": "doc",
    "tensorflow.keras.layers.Reshape": "doc",
    "tensorflow.keras.losses.Poisson": "doc",
    "tensorflow.raw_ops.ConcatOffset": "doc",
    "tensorflow.raw_ops.MergeSummary": "doc",
    "tensorflow.raw_ops.ModelDataset": "doc",
    "tensorflow.raw_ops.ParseExample": "doc",
    "tensorflow.raw_ops.RangeDataset": "doc",
    "tensorflow.raw_ops.RegexReplace": "doc",
    "tensorflow.raw_ops.ShardDataset": "doc",
    "tensorflow.raw_ops.SoftplusGrad": "doc",
    "tensorflow.compat.v1.LMDBReader": "doc",
    "tensorflow.compat.v1.TensorSpec": "doc",
    "tensorflow.compat.v1.distribute": "doc",
    "tensorflow.compat.v1.get_logger": "doc",
    "tensorflow.compat.v1.gfile.Open": "doc",
    "tensorflow.compat.v1.image.psnr": "doc",
    "tensorflow.compat.v1.image.ssim": "doc",
    "tensorflow.compat.v1.manip.tile": "doc",
    "tensorflow.compat.v1.nn.softmax": "doc",
    "tensorflow.compat.v1.reduce_min": "doc",
    "tensorflow.compat.v1.write_file": "doc",
    "tensorflow.image.adjust_contrast": "doc",
    "tensorflow.image.crop_and_resize": "doc",
    "tensorflow.image.extract_patches": "doc",
    "tensorflow.image.flip_left_right": "doc",
    "tensorflow.image.random_contrast": "doc",
    "tensorflow.image.resize_with_pad": "doc",
    "tensorflow.image.ssim_multiscale": "doc",
    "tensorflow.keras.layers.Multiply": "doc",
    "tensorflow.keras.mixed_precision": "doc",
    "tensorflow.linalg.LinearOperator": "doc",
    "tensorflow.raw_ops.MirrorPadGrad": "doc",
    "tensorflow.raw_ops.PriorityQueue": "doc",
    "tensorflow.raw_ops.RandomPoisson": "doc",
    "tensorflow.raw_ops.RandomShuffle": "doc",
    "tensorflow.raw_ops.RandomUniform": "doc",
    "tensorflow.raw_ops.ReduceDataset": "doc",
    "tensorflow.raw_ops.RepeatDataset": "doc",
    "tensorflow.raw_ops.SparseReorder": "doc",
    "tensorflow.raw_ops.TensorDataset": "doc",
    "tensorflow.raw_ops.WindowDataset": "doc",
    "tensorflow.compat.v1.assert_near": "doc",
    "tensorflow.compat.v1.assert_type": "doc",
    "tensorflow.compat.v1.flags.Error": "doc",
    "tensorflow.compat.v1.gfile.MkDir": "doc",
    "tensorflow.compat.v1.image.rot90": "doc",
    "tensorflow.compat.v1.keras.Model": "doc",
    "tensorflow.compat.v1.lite.OpsSet": "doc",
    "tensorflow.compat.v1.math.divide": "doc",
    "tensorflow.compat.v1.tpu.rewrite": "doc",
    "tensorflow.image.grayscale_to_rgb": "doc",
    "tensorflow.image.rgb_to_grayscale": "doc",
    "tensorflow.keras.datasets.reuters": "doc",
    "tensorflow.keras.layers.InputSpec": "doc",
    "tensorflow.raw_ops.FlatMapDataset": "doc",
    "tensorflow.raw_ops.RebatchDataset": "doc",
    "tensorflow.raw_ops.TFRecordReader": "doc",
    "tensorflow.compat.v1.batch_gather": "doc",
    "tensorflow.compat.v1.gfile.Remove": "doc",
    "tensorflow.compat.v1.gfile.Rename": "doc",
    "tensorflow.compat.v1.linalg.sqrtm": "doc",
    "tensorflow.compat.v1.math.softmax": "doc",
    "tensorflow.compat.v1.parse_tensor": "doc",
    "tensorflow.compat.v1.sparse_slice": "doc",
    "tensorflow.distribute.InputContext": "doc",
    "tensorflow.distribute.experimental": "doc",
    "tensorflow.experimental.numpy.size": "doc",
    "tensorflow.experimental.numpy.tile": "doc",
    "tensorflow.image.adjust_brightness": "doc",
    "tensorflow.image.random_brightness": "doc",
    "tensorflow.keras.models.Sequential": "doc",
    "tensorflow.keras.models.load_model": "doc",
    "tensorflow.raw_ops.LookupTableSize": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV2": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV3": "doc",
    "tensorflow.raw_ops.OneShotIterator": "doc",
    "tensorflow.raw_ops.ReverseSequence": "doc",
    "tensorflow.compat.v1.PriorityQueue": "doc",
    "tensorflow.compat.v1.count_nonzero": "doc",
    "tensorflow.compat.v1.image.is_jpeg": "doc",
    "tensorflow.compat.v1.io.write_file": "doc",
    "tensorflow.compat.v1.nn.relu_layer": "doc",
    "tensorflow.compat.v1.parse_example": "doc",
    "tensorflow.compat.v1.summary.image": "doc",
    "tensorflow.distribute.NcclAllReduce": "doc",
    "tensorflow.experimental.numpy.inner": "doc",
    "tensorflow.experimental.numpy.power": "doc",
    "tensorflow.experimental.numpy.rot90": "doc",
    "tensorflow.image.extract_jpeg_shape": "doc",
    "tensorflow.keras.backend.reset_uids": "doc",
    "tensorflow.keras.layers.Concatenate": "doc",
    "tensorflow.keras.layers.concatenate": "doc",
    "tensorflow.keras.models.clone_model": "doc",
    "tensorflow.raw_ops.CTCGreedyDecoder": "doc",
    "tensorflow.raw_ops.ComputeBatchSize": "doc",
    "tensorflow.compat.v1.TFRecordReader": "doc",
    "tensorflow.compat.v1.bitwise.invert": "doc",
    "tensorflow.compat.v1.dtypes.complex": "doc",
    "tensorflow.compat.v1.errors.OpError": "doc",
    "tensorflow.compat.v1.math.nextafter": "doc",
    "tensorflow.compat.v1.nn.convolution": "doc",
    "tensorflow.compat.v1.nn.log_softmax": "doc",
    "tensorflow.compat.v1.sparse.reorder": "doc",
    "tensorflow.compat.v1.sparse.softmax": "doc",
    "tensorflow.compat.v1.sparse_reorder": "doc",
    "tensorflow.data.experimental.Reducer": "doc",
    "tensorflow.distribute.CrossDeviceOps": "doc",
    "tensorflow.distribute.ReplicaContext": "doc",
    "tensorflow.experimental.numpy.divide": "doc",
    "tensorflow.experimental.numpy.repeat": "doc",
    "tensorflow.image.adjust_jpeg_quality": "doc",
    "tensorflow.image.convert_image_dtype": "doc",
    "tensorflow.image.non_max_suppression": "doc",
    "tensorflow.image.pad_to_bounding_box": "doc",
    "tensorflow.image.random_flip_up_down": "doc",
    "tensorflow.image.random_jpeg_quality": "doc",
    "tensorflow.keras.layers.MaxPooling1D": "doc",
    "tensorflow.keras.layers.MaxPooling2D": "doc",
    "tensorflow.keras.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.app.flags.Error": "doc",
    "tensorflow.compat.v1.assert_negative": "doc",
    "tensorflow.compat.v1.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.io.gfile.remove": "doc",
    "tensorflow.compat.v1.io.gfile.rename": "doc",
    "tensorflow.compat.v1.io.gfile.rmtree": "doc",
    "tensorflow.compat.v1.io.parse_tensor": "doc",
    "tensorflow.compat.v1.lite.TargetSpec": "doc",
    "tensorflow.compat.v1.load_op_library": "doc",
    "tensorflow.compat.v1.math.reduce_min": "doc",
    "tensorflow.compat.v1.mixed_precision": "doc",
    "tensorflow.experimental.numpy.nonzero": "doc",
    "tensorflow.image.crop_to_bounding_box": "doc",
    "tensorflow.image.decode_and_crop_jpeg": "doc",
    "tensorflow.image.stateless_random_hue": "doc",
    "tensorflow.keras.callbacks.BaseLogger": "doc",
    "tensorflow.keras.layers.Convolution1D": "doc",
    "tensorflow.keras.layers.Convolution2D": "doc",
    "tensorflow.keras.layers.Convolution3D": "doc",
    "tensorflow.compat.v1.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.flags.ListParser": "doc",
    "tensorflow.compat.v1.image.adjust_hue": "doc",
    "tensorflow.compat.v1.image.decode_bmp": "doc",
    "tensorflow.compat.v1.image.decode_gif": "doc",
    "tensorflow.compat.v1.image.decode_png": "doc",
    "tensorflow.compat.v1.image.encode_png": "doc",
    "tensorflow.compat.v1.image.hsv_to_rgb": "doc",
    "tensorflow.compat.v1.image.random_hue": "doc",
    "tensorflow.compat.v1.image.rgb_to_hsv": "doc",
    "tensorflow.compat.v1.image.rgb_to_yiq": "doc",
    "tensorflow.compat.v1.image.rgb_to_yuv": "doc",
    "tensorflow.compat.v1.image.yiq_to_rgb": "doc",
    "tensorflow.compat.v1.image.yuv_to_rgb": "doc",
    "tensorflow.compat.v1.io.PriorityQueue": "doc",
    "tensorflow.compat.v1.io.RaggedFeature": "doc",
    "tensorflow.compat.v1.io.gfile.listdir": "doc",
    "tensorflow.compat.v1.io.parse_example": "doc",
    "tensorflow.compat.v1.keras.Sequential": "doc",
    "tensorflow.compat.v1.layers.InputSpec": "doc",
    "tensorflow.compat.v1.math.log_softmax": "doc",
    "tensorflow.compat.v1.random.Algorithm": "doc",
    "tensorflow.distribute.MirroredStrategy": "doc",
    "tensorflow.distribute.cluster_resolver": "doc",
    "tensorflow.experimental.numpy.absolute": "doc",
    "tensorflow.experimental.numpy.logspace": "doc",
    "tensorflow.image.stateless_random_crop": "doc",
    "tensorflow.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.compat.v1.image.decode_jpeg": "doc",
    "tensorflow.compat.v1.image.encode_jpeg": "doc",
    "tensorflow.compat.v1.image.random_crop": "doc",
    "tensorflow.compat.v1.image.resize_area": "doc",
    "tensorflow.compat.v1.image.sobel_edges": "doc",
    "tensorflow.compat.v1.math.sobol_sample": "doc",
    "tensorflow.compat.v1.sparse.from_dense": "doc",
    "tensorflow.compat.v1.test.get_temp_dir": "doc",
    "tensorflow.data.experimental.SqlDataset": "doc",
    "tensorflow.distribute.DistributedValues": "doc",
    "tensorflow.distribute.OneDeviceStrategy": "doc",
    "tensorflow.experimental.numpy.geomspace": "doc",
    "tensorflow.experimental.numpy.iscomplex": "doc",
    "tensorflow.experimental.numpy.nextafter": "doc",
    "tensorflow.experimental.numpy.ones_like": "doc",
    "tensorflow.image.random_flip_left_right": "doc",
    "tensorflow.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.keras.mixed_precision.Policy": "doc",
    "tensorflow.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_or": "doc",
    "tensorflow.compat.v1.bitwise.left_shift": "doc",
    "tensorflow.compat.v1.image.ResizeMethod": "doc",
    "tensorflow.compat.v1.image.adjust_gamma": "doc",
    "tensorflow.compat.v1.image.flip_up_down": "doc",
    "tensorflow.compat.v1.keras.models.Model": "doc",
    "tensorflow.compat.v1.lite.TocoConverter": "doc",
    "tensorflow.compat.v1.math.count_nonzero": "doc",
    "tensorflow.compat.v1.saved_model.loader": "doc",
    "tensorflow.compat.v1.summary.FileWriter": "doc",
    "tensorflow.distribute.DistributedDataset": "doc",
    "tensorflow.experimental.numpy.empty_like": "doc",
    "tensorflow.image.resize_with_crop_or_pad": "doc",
    "tensorflow.random.experimental.Algorithm": "doc",
    "tensorflow.types.experimental.TensorLike": "doc",
    "tensorflow.compat.v1.app.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_xor": "doc",
    "tensorflow.compat.v1.bitwise.right_shift": "doc",
    "tensorflow.compat.v1.distribute.ReduceOp": "doc",
    "tensorflow.compat.v1.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.image.resize_images": "doc",
    "tensorflow.compat.v1.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.queue.PriorityQueue": "doc",
    "tensorflow.compat.v1.ragged.cross_hashed": "doc",
    "tensorflow.compat.v1.saved_model.Builder": "doc",
    "tensorflow.compat.v1.saved_model.builder": "doc",
    "tensorflow.compat.v1.sparse.cross_hashed": "doc",
    "tensorflow.distribute.DistributedIterator": "doc",
    "tensorflow.experimental.numpy.concatenate": "doc",
    "tensorflow.experimental.numpy.result_type": "doc",
    "tensorflow.compat.v1.TensorInfo.CooSparse": "doc",
    "tensorflow.compat.v1.app.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.app.flags.ListParser": "doc",
    "tensorflow.compat.v1.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.image.resize_bicubic": "doc",
    "tensorflow.compat.v1.keras.layers.Maximum": "doc",
    "tensorflow.compat.v1.keras.layers.Minimum": "doc",
    "tensorflow.compat.v1.keras.layers.Permute": "doc",
    "tensorflow.compat.v1.keras.layers.Reshape": "doc",
    "tensorflow.compat.v1.keras.losses.Poisson": "doc",
    "tensorflow.distribute.InputReplicationMode": "doc",
    "tensorflow.experimental.tensorrt.Converter": "doc",
    "tensorflow.image.per_image_standardization": "doc",
    "tensorflow.image.stateless_random_contrast": "doc",
    "tensorflow.compat.v1.data.get_output_types": "doc",
    "tensorflow.compat.v1.image.adjust_contrast": "doc",
    "tensorflow.compat.v1.image.crop_and_resize": "doc",
    "tensorflow.compat.v1.image.extract_patches": "doc",
    "tensorflow.compat.v1.image.flip_left_right": "doc",
    "tensorflow.compat.v1.image.random_contrast": "doc",
    "tensorflow.compat.v1.image.resize_bilinear": "doc",
    "tensorflow.compat.v1.image.ssim_multiscale": "doc",
    "tensorflow.compat.v1.keras.layers.Multiply": "doc",
    "tensorflow.compat.v1.keras.mixed_precision": "doc",
    "tensorflow.compat.v1.linalg.LinearOperator": "doc",
    "tensorflow.experimental.numpy.count_nonzero": "doc",
    "tensorflow.experimental.numpy.promote_types": "doc",
    "tensorflow.image.non_max_suppression_padded": "doc",
    "tensorflow.keras.datasets.reuters.load_data": "doc",
    "tensorflow.compat.v1.image.grayscale_to_rgb": "doc",
    "tensorflow.compat.v1.image.rgb_to_grayscale": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters": "doc",
    "tensorflow.compat.v1.keras.layers.InputSpec": "doc",
    "tensorflow.image.stateless_random_brightness": "doc",
    "tensorflow.image.stateless_random_saturation": "doc",
    "tensorflow.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.compat.v1.app.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.distribute.InputContext": "doc",
    "tensorflow.compat.v1.distribute.experimental": "doc",
    "tensorflow.compat.v1.image.adjust_brightness": "doc",
    "tensorflow.compat.v1.image.random_brightness": "doc",
    "tensorflow.compat.v1.keras.models.Sequential": "doc",
    "tensorflow.compat.v1.keras.models.load_model": "doc",
    "tensorflow.compat.v1.saved_model.loader.load": "doc",
    "tensorflow.image.combined_non_max_suppression": "doc",
    "tensorflow.image.non_max_suppression_overlaps": "doc",
    "tensorflow.keras.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.app.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.distribute.NcclAllReduce": "doc",
    "tensorflow.compat.v1.image.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.keras.backend.reset_uids": "doc",
    "tensorflow.compat.v1.keras.layers.Concatenate": "doc",
    "tensorflow.compat.v1.keras.layers.concatenate": "doc",
    "tensorflow.compat.v1.keras.models.clone_model": "doc",
    "tensorflow.image.sample_distorted_bounding_box": "doc",
    "tensorflow.image.stateless_random_flip_up_down": "doc",
    "tensorflow.image.stateless_random_jpeg_quality": "doc",
    "tensorflow.keras.mixed_precision.global_policy": "doc",
    "tensorflow.compat.v1.data.experimental.Reducer": "doc",
    "tensorflow.compat.v1.distribute.CrossDeviceOps": "doc",
    "tensorflow.compat.v1.distribute.ReplicaContext": "doc",
    "tensorflow.compat.v1.image.adjust_jpeg_quality": "doc",
    "tensorflow.compat.v1.image.convert_image_dtype": "doc",
    "tensorflow.compat.v1.image.non_max_suppression": "doc",
    "tensorflow.compat.v1.image.pad_to_bounding_box": "doc",
    "tensorflow.compat.v1.image.random_flip_up_down": "doc",
    "tensorflow.compat.v1.image.random_jpeg_quality": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.mixed_precision.LossScale": "doc",
    "tensorflow.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.distribute.experimental.ValueContext": "doc",
    "tensorflow.distribute.experimental_set_strategy": "doc",
    "tensorflow.compat.v1.image.crop_to_bounding_box": "doc",
    "tensorflow.compat.v1.image.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.keras.callbacks.BaseLogger": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3D": "doc",
    "tensorflow.image.generate_bounding_box_proposals": "doc",
    "tensorflow.image.non_max_suppression_with_scores": "doc",
    "tensorflow.compat.v1.distribute.MirroredStrategy": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver": "doc",
    "tensorflow.compat.v1.image.extract_image_patches": "doc",
    "tensorflow.compat.v1.image.resize_image_with_pad": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.compat.v1.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.ResidualWrapper": "doc",
    "tensorflow.distribute.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.image.stateless_random_flip_left_right": "doc",
    "tensorflow.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.compat.v1.data.experimental.SqlDataset": "doc",
    "tensorflow.compat.v1.distribute.OneDeviceStrategy": "doc",
    "tensorflow.compat.v1.image.random_flip_left_right": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental": "doc",
    "tensorflow.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.keras.mixed_precision.set_global_policy": "doc",
    "tensorflow.compat.v1.image.resize_nearest_neighbor": "doc",
    "tensorflow.compat.v1.image.resize_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_proximity": "doc",
    "tensorflow.compat.v1.random.experimental.Algorithm": "doc",
    "tensorflow.compat.v1.types.experimental.TensorLike": "doc",
    "tensorflow.raw_ops.InfeedEnqueuePrelinearizedBuffer": "doc",
    "tensorflow.compat.v1.mixed_precision.FixedLossScale": "doc",
    "tensorflow.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.keras.mixed_precision.experimental.Policy": "doc",
    "tensorflow.compat.v1.distribute.InputReplicationMode": "doc",
    "tensorflow.compat.v1.image.per_image_standardization": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_padded": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.load_data": "doc",
    "tensorflow.compat.v1.mixed_precision.DynamicLossScale": "doc",
    "tensorflow.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.compat.v1.image.combined_non_max_suppression": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_overlaps": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental": "doc",
    "tensorflow.image.stateless_sample_distorted_bounding_box": "doc",
    "tensorflow.keras.mixed_precision.experimental.set_policy": "doc",
    "tensorflow.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.image.resize_image_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.image.sample_distorted_bounding_box": "doc",
    "tensorflow.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.compat.v1.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.compat.v1.distribute.experimental_set_strategy": "doc",
    "tensorflow.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.compat.v1.image.generate_bounding_box_proposals": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_with_scores": "doc",
    "tensorflow.compat.v1.saved_model.builder.SavedModelBuilder": "doc",
    "tensorflow.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.keras.mixed_precision.experimental.global_policy": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.keras.mixed_precision.experimental.get_layer_policy": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.compat.v1.saved_model.loader.maybe_saved_model_directory": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.compat.v1.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.compat.v1.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.compat.v1.mixed_precision.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.compat.v1.mixed_precision.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonicalV2": "doc",
    "tensorflow.raw_ops.RecvTPUEmbeddingActivations": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdadelta": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyMomentum": "doc",
    "tensorflow.compat.v1.data.make_initializable_iterator": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.nn.RNNCellResidualWrapper": "doc",
    "tensorflow.errors.ResourceExhaustedError": "doc",
    "tensorflow.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilterV2": "doc",
    "tensorflow.raw_ops.CropAndResizeGradBoxes": "doc",
    "tensorflow.raw_ops.CropAndResizeGradImage": "doc",
    "tensorflow.raw_ops.OrderedMapUnstageNoKey": "doc",
    "tensorflow.raw_ops.ReaderSerializeStateV2": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradV2": "doc",
    "tensorflow.raw_ops.ShutdownDistributedTPU": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter": "doc",
    "tensorflow.compat.v1.data.make_one_shot_iterator": "doc",
    "tensorflow.compat.v1.errors.ResourceExhaustedError": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.raw_ops.IsBoostedTreesEnsembleInitialized": "doc",
    "tensorflow.debugging.assert_non_negative": "doc",
    "tensorflow.compat.v1.debugging.assert_non_negative": "doc",
    "tensorflow.nn.local_response_normalization": "doc",
    "tensorflow.raw_ops.ApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsembleV2": "doc",
    "tensorflow.raw_ops.FilterByLastComponentDataset": "doc",
    "tensorflow.raw_ops.FixedUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.MaxIntraOpParallelismDataset": "doc",
    "tensorflow.raw_ops.ResourceApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ResourceApplyGradientDescent": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.nn.local_response_normalization": "doc",
    "tensorflow.compat.v1.sparse.SparseConditionalAccumulator": "doc",
    "tensorflow.dynamic_partition": "doc",
    "tensorflow.raw_ops.AnonymousIterator": "doc",
    "tensorflow.raw_ops.AssertNextDataset": "doc",
    "tensorflow.raw_ops.DestroyResourceOp": "doc",
    "tensorflow.raw_ops.LookupTableSizeV2": "doc",
    "tensorflow.raw_ops.MaxPoolWithArgmax": "doc",
    "tensorflow.raw_ops.ResourceApplyAdam": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrl": "doc",
    "tensorflow.raw_ops.SparseMatrixZeros": "doc",
    "tensorflow.raw_ops.TensorArrayGather": "doc",
    "tensorflow.raw_ops.TensorListGetItem": "doc",
    "tensorflow.raw_ops.TensorListReserve": "doc",
    "tensorflow.raw_ops.TensorListSetItem": "doc",
    "tensorflow.compat.v1.dynamic_partition": "doc",
    "tensorflow.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.compat.v1.data.get_output_shapes": "doc",
    "tensorflow.compat.v1.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.raw_ops.ExperimentalNonSerializableDataset": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.MethodNameUpdater": "doc",
    "tensorflow.autodiff": "doc",
    "tensorflow.function": "doc",
    "tensorflow.math.floordiv": "doc",
    "tensorflow.test.TestCase": "doc",
    "tensorflow.linalg.set_diag": "doc",
    "tensorflow.signal.fftshift": "doc",
    "tensorflow.sparse.to_dense": "doc",
    "tensorflow.raw_ops.FloorDiv": "doc",
    "tensorflow.keras.applications": "doc",
    "tensorflow.compat.v1.floordiv": "doc",
    "tensorflow.compat.v1.function": "doc",
    "tensorflow.compat.v1.hessians": "doc",
    "tensorflow.compat.v1.spectral": "doc",
    "tensorflow.raw_ops.EditDistance": "doc",
    "tensorflow.raw_ops.OptionalNone": "doc",
    "tensorflow.raw_ops.SdcaShrinkL1": "doc",
    "tensorflow.raw_ops.StringLength": "doc",
    "tensorflow.raw_ops.StringNGrams": "doc",
    "tensorflow.raw_ops.UnravelIndex": "doc",
    "tensorflow.test.compute_gradient": "doc",
    "tensorflow.compat.v1.NameAttrList": "doc",
    "tensorflow.compat.v1.get_variable": "doc",
    "tensorflow.compat.v1.spectral.dct": "doc",
    "tensorflow.compat.v1.spectral.fft": "doc",
    "tensorflow.compat.v1.string_split": "doc",
    "tensorflow.compat.v1.string_strip": "doc",
    "tensorflow.random.truncated_normal": "doc",
    "tensorflow.compat.v1.math.floordiv": "doc",
    "tensorflow.compat.v1.spectral.idct": "doc",
    "tensorflow.compat.v1.spectral.ifft": "doc",
    "tensorflow.compat.v1.spectral.rfft": "doc",
    "tensorflow.compat.v1.test.TestCase": "doc",
    "tensorflow.keras.applications.VGG16": "doc",
    "tensorflow.keras.applications.VGG19": "doc",
    "tensorflow.keras.applications.vgg16": "doc",
    "tensorflow.keras.applications.vgg19": "doc",
    "tensorflow.raw_ops.SymbolicGradient": "doc",
    "tensorflow.raw_ops.TensorScatterMin": "doc",
    "tensorflow.compat.v1.spectral.fft2d": "doc",
    "tensorflow.compat.v1.spectral.fft3d": "doc",
    "tensorflow.compat.v1.spectral.irfft": "doc",
    "tensorflow.keras.applications.nasnet": "doc",
    "tensorflow.keras.applications.resnet": "doc",
    "tensorflow.compat.v1.linalg.set_diag": "doc",
    "tensorflow.compat.v1.signal.fftshift": "doc",
    "tensorflow.compat.v1.sparse.to_dense": "doc",
    "tensorflow.compat.v1.spectral.ifft2d": "doc",
    "tensorflow.compat.v1.spectral.ifft3d": "doc",
    "tensorflow.compat.v1.spectral.rfft2d": "doc",
    "tensorflow.compat.v1.spectral.rfft3d": "doc",
    "tensorflow.compat.v1.OptimizerOptions": "doc",
    "tensorflow.compat.v1.matrix_band_part": "doc",
    "tensorflow.compat.v1.matrix_transpose": "doc",
    "tensorflow.compat.v1.serialize_tensor": "doc",
    "tensorflow.compat.v1.spectral.irfft2d": "doc",
    "tensorflow.compat.v1.spectral.irfft3d": "doc",
    "tensorflow.compat.v1.truncated_normal": "doc",
    "tensorflow.autodiff.ForwardAccumulator": "doc",
    "tensorflow.experimental.numpy.diagonal": "doc",
    "tensorflow.experimental.numpy.isneginf": "doc",
    "tensorflow.experimental.numpy.isposinf": "doc",
    "tensorflow.experimental.numpy.moveaxis": "doc",
    "tensorflow.keras.applications.ResNet50": "doc",
    "tensorflow.keras.applications.densenet": "doc",
    "tensorflow.keras.applications.resnet50": "doc",
    "tensorflow.keras.applications.ResNet101": "doc",
    "tensorflow.keras.applications.ResNet152": "doc",
    "tensorflow.keras.applications.resnet_v2": "doc",
    "tensorflow.compat.v1.flags.tf_decorator": "doc",
    "tensorflow.compat.v1.keras.applications": "doc",
    "tensorflow.keras.applications.ResNet50V2": "doc",
    "tensorflow.compat.v1.io.serialize_tensor": "doc",
    "tensorflow.keras.applications.DenseNet121": "doc",
    "tensorflow.keras.applications.DenseNet169": "doc",
    "tensorflow.keras.applications.DenseNet201": "doc",
    "tensorflow.keras.applications.MobileNetV2": "doc",
    "tensorflow.keras.applications.ResNet101V2": "doc",
    "tensorflow.keras.applications.ResNet152V2": "doc",
    "tensorflow.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.test.TestCase.failureException": "doc",
    "tensorflow.compat.v1.UnconnectedGradients": "doc",
    "tensorflow.experimental.numpy.diag_indices": "doc",
    "tensorflow.keras.applications.efficientnet": "doc",
    "tensorflow.keras.applications.mobilenet_v2": "doc",
    "tensorflow.keras.applications.mobilenet_v3": "doc",
    "tensorflow.compat.v1.sets.set_intersection": "doc",
    "tensorflow.compat.v1.NameAttrList.AttrEntry": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator": "doc",
    "tensorflow.keras.applications.EfficientNetB0": "doc",
    "tensorflow.keras.applications.EfficientNetB1": "doc",
    "tensorflow.keras.applications.EfficientNetB2": "doc",
    "tensorflow.keras.applications.EfficientNetB3": "doc",
    "tensorflow.keras.applications.EfficientNetB4": "doc",
    "tensorflow.keras.applications.EfficientNetB5": "doc",
    "tensorflow.keras.applications.EfficientNetB6": "doc",
    "tensorflow.keras.applications.EfficientNetB7": "doc",
    "tensorflow.keras.applications.imagenet_utils": "doc",
    "tensorflow.summary.experimental.write_raw_pb": "doc",
    "tensorflow.compat.v1.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling3D": "doc",
    "tensorflow.compat.v1.linalg.matrix_transpose": "doc",
    "tensorflow.compat.v1.linalg.triangular_solve": "doc",
    "tensorflow.compat.v1.random.truncated_normal": "doc",
    "tensorflow.data.experimental.ThreadingOptions": "doc",
    "tensorflow.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.VGG19": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19": "doc",
    "tensorflow.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet": "doc",
    "tensorflow.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.densenet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50": "doc",
    "tensorflow.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2": "doc",
    "tensorflow.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50V2": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling3D": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152V2": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.compat.v1.test.TestCase.failureException": "doc",
    "tensorflow.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3": "doc",
    "tensorflow.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils": "doc",
    "tensorflow.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.compat.v1.data.experimental.ThreadingOptions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.raw_ops.ConfigureDistributedTPU": "doc",
    "tensorflow.raw_ops.QuantizedResizeBilinear": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrl": "doc",
    "tensorflow.raw_ops.SparseMatrixOrderingAMD": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmaxGrad": "doc",
    "tensorflow.raw_ops.StatefulPartitionedCall": "doc",
    "tensorflow.summary.should_record_summaries": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.raw_ops.BoostedTreesSerializeEnsemble": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariantGradient": "doc",
    "tensorflow.raw_ops.RequantizationRangePerChannel": "doc",
    "tensorflow.compat.v1.nn.log_uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.compat.v1.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropFilter": "doc",
    "tensorflow.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.raw_ops.IsBoostedTreesQuantileStreamResourceInitialized": "doc",
    "tensorflow.nn.batch_normalization": "doc",
    "tensorflow.raw_ops.RequantizationRange": "doc",
    "tensorflow.raw_ops.SparseSparseMinimum": "doc",
    "tensorflow.data.experimental.OptimizationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.OptimizationOptions": "doc",
    "tensorflow.nn.ctc_greedy_decoder": "doc",
    "tensorflow.compat.dimension_at_index": "doc",
    "tensorflow.compat.forward_compatible": "doc",
    "tensorflow.linalg.LinearOperatorDiag": "doc",
    "tensorflow.raw_ops.CloseSummaryWriter": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsSize": "doc",
    "tensorflow.raw_ops.DataServiceDataset": "doc",
    "tensorflow.raw_ops.FlushSummaryWriter": "doc",
    "tensorflow.raw_ops.ResourceScatterAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterDiv": "doc",
    "tensorflow.raw_ops.ResourceScatterMax": "doc",
    "tensorflow.raw_ops.ResourceScatterMul": "doc",
    "tensorflow.raw_ops.ResourceScatterSub": "doc",
    "tensorflow.raw_ops.TensorArrayScatter": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV2": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV3": "doc",
    "tensorflow.summary.create_file_writer": "doc",
    "tensorflow.compat.v1.dimension_at_index": "doc",
    "tensorflow.compat.v1.sparse_placeholder": "doc",
    "tensorflow.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.compat.v1.io.tf_record_iterator": "doc",
    "tensorflow.compat.v1.nn.ctc_greedy_decoder": "doc",
    "tensorflow.raw_ops.AssertCardinalityDataset": "doc",
    "tensorflow.raw_ops.DestroyTemporaryVariable": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2D": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProduced": "doc",
    "tensorflow.compat.v1.data.get_output_classes": "doc",
    "tensorflow.compat.v1.load_file_system_library": "doc",
    "tensorflow.compat.v1.compat.dimension_at_index": "doc",
    "tensorflow.compat.v1.compat.forward_compatible": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorDiag": "doc",
    "tensorflow.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.raw_ops.LearnedUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.compat.v1.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalizationGrad": "doc",
    "tensorflow.compat.v1.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.errors.error_code_from_exception_type": "doc",
    "tensorflow.compat.v1.experimental.output_all_intermediates": "doc",
    "tensorflow.compat.v1.keras.experimental.export_saved_model": "doc",
    "tensorflow.compat.v1.app.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.math.is_strictly_increasing": "doc",
    "tensorflow.raw_ops.IteratorToStringHandle": "doc",
    "tensorflow.compat.v1.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.math.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.test.compute_gradient_error": "doc",
    "tensorflow.compat.v1.debugging.is_strictly_increasing": "doc",
    "tensorflow.keras.layers.experimental.SyncBatchNormalization": "doc",
    "tensorflow.raw_ops.BroadcastGradientArgs": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_min": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.StatelessParameterizedTruncatedNormal": "doc",
    "tensorflow.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.config.experimental_connect_to_cluster": "doc",
    "tensorflow.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.raw_ops.BoostedTreesDeserializeEnsemble": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorTakeGradient": "doc",
    "tensorflow.compat.v1.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_cluster": "doc",
    "tensorflow.compat.v1.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxes": "doc",
    "tensorflow.raw_ops.FractionalAvgPool": "doc",
    "tensorflow.raw_ops.FractionalMaxPool": "doc",
    "tensorflow.compat.v1.AggregationMethod": "doc",
    "tensorflow.compat.v1.is_non_decreasing": "doc",
    "tensorflow.keras.utils.get_source_inputs": "doc",
    "tensorflow.compat.v1.nn.normalize_moments": "doc",
    "tensorflow.compat.v1.math.is_non_decreasing": "doc",
    "tensorflow.compat.v1.test.StubOutForTesting": "doc",
    "tensorflow.compat.v1.layers.average_pooling1d": "doc",
    "tensorflow.compat.v1.layers.average_pooling2d": "doc",
    "tensorflow.compat.v1.layers.average_pooling3d": "doc",
    "tensorflow.compat.v1.linalg.lu_matrix_inverse": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_solve": "doc",
    "tensorflow.compat.v1.debugging.is_non_decreasing": "doc",
    "tensorflow.compat.v1.keras.utils.get_source_inputs": "doc",
    "tensorflow.compat.v1.saved_model.build_tensor_info": "doc",
    "tensorflow.compat.v1.saved_model.utils.build_tensor_info": "doc",
    "tensorflow.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.raw_ops.AddManySparseToTensorsMap": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonical": "doc",
    "tensorflow.raw_ops.DenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.DenseToSparseSetOperation": "doc",
    "tensorflow.raw_ops.ExperimentalRandomDataset": "doc",
    "tensorflow.raw_ops.ExperimentalUniqueDataset": "doc",
    "tensorflow.raw_ops.IteratorGetNextAsOptional": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradWithArgmax": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighborGrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrlV2": "doc",
    "tensorflow.compat.v1.enable_resource_variables": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter_v2": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.compat.v1.losses.get_regularization_losses": "doc",
    "tensorflow.compat.v1.lite.experimental.convert_op_hints_to_stubs": "doc",
    "tensorflow.raw_ops.AnonymousIteratorV2": "doc",
    "tensorflow.raw_ops.DeleteSessionTensor": "doc",
    "tensorflow.raw_ops.DeserializeIterator": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV3": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV4": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV5": "doc",
    "tensorflow.raw_ops.ResourceApplyAdaMax": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrlV2": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV2": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV3": "doc",
    "tensorflow.raw_ops.UnsortedSegmentProd": "doc",
    "tensorflow.compat.v1.assert_non_negative": "doc",
    "tensorflow.compat.v1.sparse_to_indicator": "doc",
    "tensorflow.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalization": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByWindowDataset": "doc",
    "tensorflow.raw_ops.ExperimentalMatchingFilesDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSlidingWindowDataset": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorApplyGradient": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorSetGlobalStep": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyKerasMomentum": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.compat.v1.app.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.edit_distance": "doc",
    "tensorflow.saturate_cast": "doc",
    "tensorflow.nn.atrous_conv2d": "doc",
    "tensorflow.dtypes.saturate_cast": "doc",
    "tensorflow.errors.InternalError": "doc",
    "tensorflow.signal.vorbis_window": "doc",
    "tensorflow.raw_ops.BatchFunction": "doc",
    "tensorflow.raw_ops.FilterDataset": "doc",
    "tensorflow.raw_ops.ScatterUpdate": "doc",
    "tensorflow.compat.v1.edit_distance": "doc",
    "tensorflow.compat.v1.saturate_cast": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d": "doc",
    "tensorflow.keras.backend.clear_session": "doc",
    "tensorflow.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.compat.v1.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.dtypes.saturate_cast": "doc",
    "tensorflow.compat.v1.errors.InternalError": "doc",
    "tensorflow.compat.v1.signal.kaiser_window": "doc",
    "tensorflow.compat.v1.signal.vorbis_window": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.app.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.keras.backend.clear_session": "doc",
    "tensorflow.compat.v1.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsemble": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandleV2": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProducedV2": "doc",
    "tensorflow.raw_ops.ResourceApplyKerasMomentum": "doc",
    "tensorflow.raw_ops.SparseApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseCholesky": "doc",
    "tensorflow.raw_ops.SparseToSparseSetOperation": "doc",
    "tensorflow.compat.v1.disable_resource_variables": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_filter": "doc",
    "tensorflow.AggregationMethod": "doc",
    "tensorflow.linalg.lu_matrix_inverse": "doc",
    "tensorflow.compat.v1.keras.layers.ActivityRegularization": "doc",
    "tensorflow.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeQuantileSummaries": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByReducerDataset": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndRelu": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorNumAccumulated": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNWithNumSegments": "doc",
    "tensorflow.raw_ops.TensorListScatterIntoExistingList": "doc",
    "tensorflow.compat.v1.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.compat.v1.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.nn.max_pool_with_argmax": "doc",
    "tensorflow.test.create_local_cluster": "doc",
    "tensorflow.config.list_logical_devices": "doc",
    "tensorflow.errors.UnauthenticatedError": "doc",
    "tensorflow.raw_ops.ApplyGradientDescent": "doc",
    "tensorflow.raw_ops.NonDeterministicInts": "doc",
    "tensorflow.raw_ops.RaggedTensorToTensor": "doc",
    "tensorflow.raw_ops.ReaderRestoreStateV2": "doc",
    "tensorflow.raw_ops.ResourceApplyAddSign": "doc",
    "tensorflow.raw_ops.ResourceScatterNdAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMax": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMin": "doc",
    "tensorflow.raw_ops.ResourceScatterNdSub": "doc",
    "tensorflow.raw_ops.StatelessMultinomial": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV2": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV3": "doc",
    "tensorflow.raw_ops.UnwrapDatasetVariant": "doc",
    "tensorflow.compat.v1.nn.max_pool_with_argmax": "doc",
    "tensorflow.compat.v1.test.create_local_cluster": "doc",
    "tensorflow.compat.v1.config.list_logical_devices": "doc",
    "tensorflow.compat.v1.errors.UnauthenticatedError": "doc",
    "tensorflow.config.experimental.list_logical_devices": "doc",
    "tensorflow.compat.v1.resource_loader.get_path_to_datafile": "doc",
    "tensorflow.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.raw_ops.ExperimentalMaxIntraOpParallelismDataset": "doc",
    "tensorflow.compat.v1.data.experimental.TensorArrayStructure": "doc",
    "tensorflow.compat.v1.config.experimental.list_logical_devices": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.bitcast": "doc",
    "tensorflow.shape_n": "doc",
    "tensorflow.losses.kullback_leibler_divergence": "doc",
    "tensorflow.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.raw_ops.BoostedTreesTrainingPredict": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4Grad": "doc",
    "tensorflow.keras.utils.register_keras_serializable": "doc",
    "tensorflow.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.compat.v1.keras.utils.register_keras_serializable": "doc",
    "tensorflow.compat.v1.saved_model.get_tensor_from_tensor_info": "doc",
    "tensorflow.compat.v1.saved_model.maybe_saved_model_directory": "doc",
    "tensorflow.compat.v1.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.compat.v1.saved_model.utils.get_tensor_from_tensor_info": "doc",
    "tensorflow.raw_ops.ScatterNdNonAliasingAdd": "doc",
    "tensorflow.compat.v1.losses.get_regularization_loss": "doc",
    "tensorflow.tensordot": "doc",
    "tensorflow.timestamp": "doc",
    "tensorflow.debugging.Assert": "doc",
    "tensorflow.linalg.tensordot": "doc",
    "tensorflow.signal.ifftshift": "doc",
    "tensorflow.raw_ops.AssignAdd": "doc",
    "tensorflow.raw_ops.AssignSub": "doc",
    "tensorflow.raw_ops.LeftShift": "doc",
    "tensorflow.raw_ops.RestoreV2": "doc",
    "tensorflow.summary.histogram": "doc",
    "tensorflow.summary.record_if": "doc",
    "tensorflow.compat.v1.Dimension": "doc",
    "tensorflow.compat.v1.GraphKeys": "doc",
    "tensorflow.compat.v1.debugging": "doc",
    "tensorflow.compat.v1.floor_div": "doc",
    "tensorflow.compat.v1.gather_nd": "doc",
    "tensorflow.compat.v1.python_io": "doc",
    "tensorflow.compat.v1.tensordot": "doc",
    "tensorflow.compat.v1.timestamp": "doc",
    "tensorflow.debugging.assert_less": "doc",
    "tensorflow.debugging.assert_equal": "doc",
    "tensorflow.debugging.experimental": "doc",
    "tensorflow.debugging.assert_scalar": "doc",
    "tensorflow.debugging.assert_shapes": "doc",
    "tensorflow.compat.v1.flags.text_wrap": "doc",
    "tensorflow.compat.v1.manip.gather_nd": "doc",
    "tensorflow.raw_ops.BatchMatrixInverse": "doc",
    "tensorflow.raw_ops.DatasetCardinality": "doc",
    "tensorflow.raw_ops.IsotonicRegression": "doc",
    "tensorflow.raw_ops.StridedSliceAssign": "doc",
    "tensorflow.raw_ops.WrapDatasetVariant": "doc",
    "tensorflow.tpu.experimental.embedding": "doc",
    "tensorflow.compat.v1.debugging.Assert": "doc",
    "tensorflow.compat.v1.debugging.is_nan": "doc",
    "tensorflow.compat.v1.linalg.tensordot": "doc",
    "tensorflow.compat.v1.signal.ifftshift": "doc",
    "tensorflow.compat.v1.NodeDef.AttrEntry": "doc",
    "tensorflow.compat.v1.summary.histogram": "doc",
    "tensorflow.compat.v1.summary.merge_all": "doc",
    "tensorflow.experimental.numpy.isrealobj": "doc",
    "tensorflow.experimental.numpy.tensordot": "doc",
    "tensorflow.experimental.dlpack.to_dlpack": "doc",
    "tensorflow.compat.v1.app.flags.text_wrap": "doc",
    "tensorflow.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.compat.v1.debugging.assert_less": "doc",
    "tensorflow.compat.v1.debugging.assert_equal": "doc",
    "tensorflow.compat.v1.debugging.experimental": "doc",
    "tensorflow.compat.v1.keras.layers.Embedding": "doc",
    "tensorflow.compat.v1.debugging.assert_scalar": "doc",
    "tensorflow.compat.v1.debugging.assert_shapes": "doc",
    "tensorflow.debugging.get_log_device_placement": "doc",
    "tensorflow.debugging.set_log_device_placement": "doc",
    "tensorflow.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.compat.v1.debugging.check_numerics": "doc",
    "tensorflow.compat.v1.flags.register_validator": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_matmul": "doc",
    "tensorflow.data.experimental.assert_cardinality": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding": "doc",
    "tensorflow.compat.v1.debugging.assert_less_equal": "doc",
    "tensorflow.compat.v1.debugging.assert_none_equal": "doc",
    "tensorflow.compat.v1.debugging.is_numeric_tensor": "doc",
    "tensorflow.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.compat.v1.app.flags.register_validator": "doc",
    "tensorflow.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.compat.v1.debugging.assert_greater_equal": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.compat.v1.debugging.enable_check_numerics": "doc",
    "tensorflow.compat.v1.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.compat.v1.debugging.disable_check_numerics": "doc",
    "tensorflow.compat.v1.debugging.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.debugging.get_log_device_placement": "doc",
    "tensorflow.compat.v1.debugging.set_log_device_placement": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.compat.v1.data.experimental.assert_cardinality": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.compat.v1.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.compat.v1.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.raw_ops.BoostedTreesFlushQuantileSummaries": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.raw_ops.SparseApplyProximalGradientDescent": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_sparse_tensor": "doc",
    "tensorflow.compat.v1.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.compat.v1.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.feature_column.make_parse_example_spec": "doc",
    "tensorflow.compat.v1.feature_column.make_parse_example_spec": "doc",
    "tensorflow.histogram_fixed_width": "doc",
    "tensorflow.math.unsorted_segment_mean": "doc",
    "tensorflow.math.unsorted_segment_prod": "doc",
    "tensorflow.nest.assert_same_structure": "doc",
    "tensorflow.config.functions_run_eagerly": "doc",
    "tensorflow.config.list_physical_devices": "doc",
    "tensorflow.config.run_functions_eagerly": "doc",
    "tensorflow.errors.PermissionDeniedError": "doc",
    "tensorflow.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.raw_ops.AddSparseToTensorsMap": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.BoostedTreesBucketize": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariant": "doc",
    "tensorflow.raw_ops.ResourceScatterUpdate": "doc",
    "tensorflow.raw_ops.TensorListConcatLists": "doc",
    "tensorflow.compat.v1.delete_session_tensor": "doc",
    "tensorflow.compat.v1.histogram_fixed_width": "doc",
    "tensorflow.compat.v1.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.unsorted_segment_prod": "doc",
    "tensorflow.keras.utils.get_registered_object": "doc",
    "tensorflow.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.raw_ops.AnonymousRandomSeedGenerator": "doc",
    "tensorflow.raw_ops.ExperimentalTakeWhileDataset": "doc",
    "tensorflow.raw_ops.TakeManySparseFromTensorsMap": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_prod": "doc",
    "tensorflow.compat.v1.nest.assert_same_structure": "doc",
    "tensorflow.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.compat.v1.flags.CantOpenFlagFileError": "doc",
    "tensorflow.compat.v1.config.functions_run_eagerly": "doc",
    "tensorflow.compat.v1.config.list_physical_devices": "doc",
    "tensorflow.compat.v1.config.run_functions_eagerly": "doc",
    "tensorflow.compat.v1.errors.PermissionDeniedError": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.compat.v1.random.stateless_multinomial": "doc",
    "tensorflow.config.experimental.list_physical_devices": "doc",
    "tensorflow.compat.v1.app.flags.CantOpenFlagFileError": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorGetNextFromShard": "doc",
    "tensorflow.raw_ops.SparseSoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.ThreadUnsafeUnigramCandidateSampler": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_object": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_indexed_slices": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.compat.v1.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.compat.v1.data.experimental.RaggedTensorStructure": "doc",
    "tensorflow.compat.v1.saved_model.classification_signature_def": "doc",
    "tensorflow.compat.v1.config.experimental.list_physical_devices": "doc",
    "tensorflow.compat.v1.tpu.experimental.StochasticGradientDescentParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.classification_signature_def": "doc",
    "tensorflow.raw_ops.AccumulatorTakeGradient": "doc",
    "tensorflow.vectorized_map": "doc",
    "tensorflow.io.matching_files": "doc",
    "tensorflow.sparse.segment_sqrt_n": "doc",
    "tensorflow.raw_ops.AdjustContrast": "doc",
    "tensorflow.raw_ops.ApplyPowerSign": "doc",
    "tensorflow.raw_ops.DatasetToGraph": "doc",
    "tensorflow.raw_ops.DeleteIterator": "doc",
    "tensorflow.raw_ops.GuaranteeConst": "doc",
    "tensorflow.raw_ops.ParallelConcat": "doc",
    "tensorflow.raw_ops.SparseBincount": "doc",
    "tensorflow.sysconfig.get_build_info": "doc",
    "tensorflow.sysconfig.get_link_flags": "doc",
    "tensorflow.compat.v1.HistogramProto": "doc",
    "tensorflow.compat.v1.feature_column": "doc",
    "tensorflow.compat.v1.get_collection": "doc",
    "tensorflow.compat.v1.matching_files": "doc",
    "tensorflow.compat.v1.scatter_nd_add": "doc",
    "tensorflow.compat.v1.scatter_update": "doc",
    "tensorflow.compat.v1.sparse_maximum": "doc",
    "tensorflow.compat.v1.vectorized_map": "doc",
    "tensorflow.keras.utils.to_categorical": "doc",
    "tensorflow.compat.v1.io.matching_files": "doc",
    "tensorflow.compat.v1.nn.conv_transpose": "doc",
    "tensorflow.compat.v1.tpu.batch_parallel": "doc",
    "tensorflow.keras.datasets.boston_housing": "doc",
    "tensorflow.compat.v1.sets.set_difference": "doc",
    "tensorflow.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.compat.v1.sparse.segment_sqrt_n": "doc",
    "tensorflow.compat.v1.summary.tensor_summary": "doc",
    "tensorflow.compat.v1.sysconfig.get_build_info": "doc",
    "tensorflow.compat.v1.sysconfig.get_link_flags": "doc",
    "tensorflow.compat.v1.RunMetadata.FunctionGraphs": "doc",
    "tensorflow.compat.v1.keras.utils.to_categorical": "doc",
    "tensorflow.compat.v1.feature_column.linear_model": "doc",
    "tensorflow.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.compat.v1.feature_column.crossed_column": "doc",
    "tensorflow.compat.v1.feature_column.numeric_column": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing": "doc",
    "tensorflow.compat.v1.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.compat.v1.feature_column.embedding_column": "doc",
    "tensorflow.compat.v1.feature_column.indicator_column": "doc",
    "tensorflow.compat.v1.feature_column.bucketized_column": "doc",
    "tensorflow.compat.v1.feature_column.sequence_numeric_column": "doc",
    "tensorflow.compat.v1.feature_column.shared_embedding_columns": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.compat.v1.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.compat.v1.feature_column.weighted_categorical_column": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.raw_ops.ExperimentalPrivateThreadPoolDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndDequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRequantize": "doc",
    "tensorflow.compat.v1.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits_v2": "doc",
    "tensorflow.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.raw_ops.BoostedTreesGetEnsembleStates": "doc",
    "tensorflow.raw_ops.ExperimentalAssertNextDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetToTFRecord": "doc",
    "tensorflow.raw_ops.ExperimentalIteratorGetDevice": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFileV2": "doc",
    "tensorflow.raw_ops.SoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.SparseTensorToCSRSparseMatrix": "doc",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.lite.experimental.get_potentially_supported_ops": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.signal.inverse_stft_window_fn": "doc",
    "tensorflow.raw_ops.AnonymousSeedGenerator": "doc",
    "tensorflow.raw_ops.ConditionalAccumulator": "doc",
    "tensorflow.raw_ops.DenseToCSRSparseMatrix": "doc",
    "tensorflow.raw_ops.ExperimentalCSVDataset": "doc",
    "tensorflow.raw_ops.ExperimentalMapDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSqlDataset": "doc",
    "tensorflow.raw_ops.GenerateVocabRemapping": "doc",
    "tensorflow.raw_ops.NonSerializableDataset": "doc",
    "tensorflow.raw_ops.ParseSequenceExampleV2": "doc",
    "tensorflow.raw_ops.PlaceholderWithDefault": "doc",
    "tensorflow.raw_ops.StatelessRandomUniform": "doc",
    "tensorflow.raw_ops.TensorListElementShape": "doc",
    "tensorflow.compat.v1.ConditionalAccumulator": "doc",
    "tensorflow.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.compat.v1.signal.inverse_stft_window_fn": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.raw_ops.BatchMatrixBandPart": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxesV2": "doc",
    "tensorflow.raw_ops.HistogramFixedWidth": "doc",
    "tensorflow.raw_ops.IteratorGetNextSync": "doc",
    "tensorflow.raw_ops.SerializeManySparse": "doc",
    "tensorflow.compat.v1.VariableAggregation": "doc",
    "tensorflow.compat.v1.get_default_session": "doc",
    "tensorflow.keras.utils.get_registered_name": "doc",
    "tensorflow.compat.v1.nn.fractional_avg_pool": "doc",
    "tensorflow.compat.v1.nn.fractional_max_pool": "doc",
    "tensorflow.compat.v1.tpu.outside_compilation": "doc",
    "tensorflow.data.experimental.parallel_interleave": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_name": "doc",
    "tensorflow.compat.v1.data.experimental.parallel_interleave": "doc",
    "tensorflow.io.write_graph": "doc",
    "tensorflow.raw_ops.ExperimentalBytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDirectedInterleaveDataset": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.tensor_scatter_nd_min": "doc",
    "tensorflow.raw_ops.AccumulatorApplyGradient": "doc",
    "tensorflow.raw_ops.DenseToDenseSetOperation": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandle": "doc",
    "tensorflow.compat.v1.verify_tensor_all_finite": "doc",
    "tensorflow.errors.OperatorNotAllowedInGraphError": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetCardinality": "doc",
    "tensorflow.raw_ops.ExperimentalMapAndBatchDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRelu": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRelu": "doc",
    "tensorflow.compat.v1.errors.exception_type_from_error_code": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceDeserialize": "doc",
    "tensorflow.io.deserialize_many_sparse": "doc",
    "tensorflow.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.losses.CategoricalCrossentropy": "doc",
    "tensorflow.raw_ops.ExperimentalLMDBDataset": "doc",
    "tensorflow.raw_ops.ExperimentalScanDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgs": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVars": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReader": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV3": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4": "doc",
    "tensorflow.raw_ops.RaggedCountSparseOutput": "doc",
    "tensorflow.raw_ops.RaggedTensorFromVariant": "doc",
    "tensorflow.raw_ops.ResourceScatterNdUpdate": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDataset": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRowsGrad": "doc",
    "tensorflow.raw_ops.TPUEmbeddingActivations": "doc",
    "tensorflow.compat.v1.FixedLengthRecordReader": "doc",
    "tensorflow.compat.v1.control_flow_v2_enabled": "doc",
    "tensorflow.compat.v1.deserialize_many_sparse": "doc",
    "tensorflow.compat.v1.unsorted_segment_sqrt_n": "doc",
    "tensorflow.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.io.deserialize_many_sparse": "doc",
    "tensorflow.compat.v1.nn.static_state_saving_rnn": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.app.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceAddSummaries": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndReluAndRequantize": "doc",
    "tensorflow.CriticalSection": "doc",
    "tensorflow.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingIntegerBatch": "doc",
    "tensorflow.raw_ops.ExperimentalIgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalParseExampleDataset": "doc",
    "tensorflow.raw_ops.SparseSegmentSumWithNumSegments": "doc",
    "tensorflow.raw_ops.StatelessRandomGetKeyCounterAlg": "doc",
    "tensorflow.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceFlush": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndRelu": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.lite": "doc",
    "tensorflow.mlir": "doc",
    "tensorflow.norm": "doc",
    "tensorflow.ones": "doc",
    "tensorflow.roll": "doc",
    "tensorflow.sort": "doc",
    "tensorflow.sqrt": "doc",
    "tensorflow.DType": "doc",
    "tensorflow.floor": "doc",
    "tensorflow.foldr": "doc",
    "tensorflow.no_op": "doc",
    "tensorflow.range": "doc",
    "tensorflow.round": "doc",
    "tensorflow.shape": "doc",
    "tensorflow.slice": "doc",
    "tensorflow.split": "doc",
    "tensorflow.tuple": "doc",
    "tensorflow.types": "doc",
    "tensorflow.where": "doc",
    "tensorflow.zeros": "doc",
    "tensorflow.Assert": "doc",
    "tensorflow.Tensor": "doc",
    "tensorflow.argmax": "doc",
    "tensorflow.compat": "doc",
    "tensorflow.concat": "doc",
    "tensorflow.config": "doc",
    "tensorflow.device": "doc",
    "tensorflow.dtypes": "doc",
    "tensorflow.errors": "doc",
    "tensorflow.lookup": "doc",
    "tensorflow.losses": "doc",
    "tensorflow.matmul": "doc",
    "tensorflow.ragged": "doc",
    "tensorflow.random": "doc",
    "tensorflow.sparse": "doc",
    "tensorflow.square": "doc",
    "tensorflow.unique": "doc",
    "tensorflow.argsort": "doc",
    "tensorflow.maximum": "doc",
    "tensorflow.minimum": "doc",
    "tensorflow.one_hot": "doc",
    "tensorflow.raw_ops": "doc",
    "tensorflow.reshape": "doc",
    "tensorflow.reverse": "doc",
    "tensorflow.sigmoid": "doc",
    "tensorflow.squeeze": "doc",
    "tensorflow.TypeSpec": "doc",
    "tensorflow.as_dtype": "doc",
    "tensorflow.constant": "doc",
    "tensorflow.identity": "doc",
    "tensorflow.io.gfile": "doc",
    "tensorflow.linspace": "doc",
    "tensorflow.multiply": "doc",
    "tensorflow.nn.top_k": "doc",
    "tensorflow.is_tensor": "doc",
    "tensorflow.math.imag": "doc",
    "tensorflow.math.sqrt": "doc",
    "tensorflow.not_equal": "doc",
    "tensorflow.sysconfig": "doc",
    "tensorflow.compat.v1": "doc",
    "tensorflow.DeviceSpec": "doc",
    "tensorflow.identity_n": "doc",
    "tensorflow.init_scope": "doc",
    "tensorflow.io.is_jpeg": "doc",
    "tensorflow.logical_or": "doc",
    "tensorflow.losses.KLD": "doc",
    "tensorflow.losses.MAE": "doc",
    "tensorflow.losses.MSE": "doc",
    "tensorflow.losses.get": "doc",
    "tensorflow.losses.kld": "doc",
    "tensorflow.losses.mae": "doc",
    "tensorflow.losses.mse": "doc",
    "tensorflow.math.expm1": "doc",
    "tensorflow.math.floor": "doc",
    "tensorflow.math.log1p": "doc",
    "tensorflow.math.ndtri": "doc",
    "tensorflow.math.round": "doc",
    "tensorflow.math.rsqrt": "doc",
    "tensorflow.math.top_k": "doc",
    "tensorflow.name_scope": "doc",
    "tensorflow.nn.moments": "doc",
    "tensorflow.nn.sigmoid": "doc",
    "tensorflow.raw_ops.If": "doc",
    "tensorflow.raw_ops.Lu": "doc",
    "tensorflow.raw_ops.Qr": "doc",
    "tensorflow.reduce_max": "doc",
    "tensorflow.sparse.add": "doc",
    "tensorflow.sparse.eye": "doc",
    "tensorflow.TensorShape": "doc",
    "tensorflow.assert_less": "doc",
    "tensorflow.dtypes.cast": "doc",
    "tensorflow.expand_dims": "doc",
    "tensorflow.keras.Input": "doc",
    "tensorflow.keras.utils": "doc",
    "tensorflow.linalg.expm": "doc",
    "tensorflow.linalg.logm": "doc",
    "tensorflow.linalg.norm": "doc",
    "tensorflow.linalg.pinv": "doc",
    "tensorflow.losses.Loss": "doc",
    "tensorflow.losses.MAPE": "doc",
    "tensorflow.losses.MSLE": "doc",
    "tensorflow.losses.mape": "doc",
    "tensorflow.losses.msle": "doc",
    "tensorflow.math.argmax": "doc",
    "tensorflow.math.square": "doc",
    "tensorflow.nn.in_top_k": "doc",
    "tensorflow.nn.softplus": "doc",
    "tensorflow.py_function": "doc",
    "tensorflow.raw_ops.Abs": "doc",
    "tensorflow.raw_ops.Add": "doc",
    "tensorflow.raw_ops.All": "doc",
    "tensorflow.raw_ops.Any": "doc",
    "tensorflow.raw_ops.Cos": "doc",
    "tensorflow.raw_ops.Div": "doc",
    "tensorflow.raw_ops.Eig": "doc",
    "tensorflow.raw_ops.Elu": "doc",
    "tensorflow.raw_ops.Erf": "doc",
    "tensorflow.raw_ops.Exp": "doc",
    "tensorflow.raw_ops.FFT": "doc",
    "tensorflow.raw_ops.For": "doc",
    "tensorflow.raw_ops.Inv": "doc",
    "tensorflow.raw_ops.LRN": "doc",
    "tensorflow.raw_ops.Log": "doc",
    "tensorflow.raw_ops.Max": "doc",
    "tensorflow.raw_ops.Mod": "doc",
    "tensorflow.raw_ops.Mul": "doc",
    "tensorflow.raw_ops.Neg": "doc",
    "tensorflow.raw_ops.Pad": "doc",
    "tensorflow.raw_ops.Pow": "doc",
    "tensorflow.raw_ops.Sub": "doc",
    "tensorflow.raw_ops.Sum": "doc",
    "tensorflow.raw_ops.Svd": "doc",
    "tensorflow.reduce_mean": "doc",
    "tensorflow.saved_model": "doc",
    "tensorflow.signal.rfft": "doc",
    "tensorflow.sparse.mask": "doc",
    "tensorflow.OptionalSpec": "doc",
    "tensorflow.RaggedTensor": "doc",
    "tensorflow.SparseTensor": "doc",
    "tensorflow.assert_equal": "doc",
    "tensorflow.boolean_mask": "doc",
    "tensorflow.broadcast_to": "doc",
    "tensorflow.data.Dataset": "doc",
    "tensorflow.dtypes.DType": "doc",
    "tensorflow.ensure_shape": "doc",
    "tensorflow.experimental": "doc",
    "tensorflow.keras.losses": "doc",
    "tensorflow.linalg.cross": "doc",
    "tensorflow.linalg.solve": "doc",
    "tensorflow.load_library": "doc",
    "tensorflow.losses.Hinge": "doc",
    "tensorflow.losses.Huber": "doc",
    "tensorflow.losses.hinge": "doc",
    "tensorflow.losses.huber": "doc",
    "tensorflow.math.cumprod": "doc",
    "tensorflow.math.maximum": "doc",
    "tensorflow.math.minimum": "doc",
    "tensorflow.math.sigmoid": "doc",
    "tensorflow.math.special": "doc",
    "tensorflow.math.xlog1py": "doc",
    "tensorflow.ragged.cross": "doc",
    "tensorflow.ragged.range": "doc",
    "tensorflow.ragged.stack": "doc",
    "tensorflow.random.gamma": "doc",
    "tensorflow.raw_ops.Acos": "doc",
    "tensorflow.raw_ops.AddN": "doc",
    "tensorflow.raw_ops.Case": "doc",
    "tensorflow.raw_ops.Cast": "doc",
    "tensorflow.raw_ops.Ceil": "doc",
    "tensorflow.raw_ops.Conj": "doc",
    "tensorflow.raw_ops.Copy": "doc",
    "tensorflow.raw_ops.Cosh": "doc",
    "tensorflow.raw_ops.Diag": "doc",
    "tensorflow.raw_ops.Erfc": "doc",
    "tensorflow.raw_ops.Exit": "doc",
    "tensorflow.raw_ops.Fact": "doc",
    "tensorflow.raw_ops.Fill": "doc",
    "tensorflow.raw_ops.IFFT": "doc",
    "tensorflow.raw_ops.Imag": "doc",
    "tensorflow.raw_ops.Less": "doc",
    "tensorflow.raw_ops.Mfcc": "doc",
    "tensorflow.raw_ops.Pack": "doc",
    "tensorflow.raw_ops.RFFT": "doc",
    "tensorflow.raw_ops.Rank": "doc",
    "tensorflow.raw_ops.Real": "doc",
    "tensorflow.raw_ops.Recv": "doc",
    "tensorflow.raw_ops.Relu": "doc",
    "tensorflow.raw_ops.Rint": "doc",
    "tensorflow.raw_ops.Roll": "doc",
    "tensorflow.raw_ops.Save": "doc",
    "tensorflow.raw_ops.Selu": "doc",
    "tensorflow.raw_ops.Send": "doc",
    "tensorflow.raw_ops.Sign": "doc",
    "tensorflow.raw_ops.Sinh": "doc",
    "tensorflow.raw_ops.Tanh": "doc",
    "tensorflow.raw_ops.Tile": "doc",
    "tensorflow.raw_ops.TopK": "doc",
    "tensorflow.raw_ops.Zeta": "doc",
    "tensorflow.searchsorted": "doc",
    "tensorflow.signal.irfft": "doc",
    "tensorflow.sparse.cross": "doc",
    "tensorflow.sparse.slice": "doc",
    "tensorflow.sparse.split": "doc",
    "tensorflow.compat.v1.io": "doc",
    "tensorflow.compat.v1.nn": "doc",
    "tensorflow.compat.v1.qr": "doc",
    "tensorflow.IndexedSlices": "doc",
    "tensorflow.compat.as_str": "doc",
    "tensorflow.io.decode_bmp": "doc",
    "tensorflow.io.decode_gif": "doc",
    "tensorflow.io.gfile.copy": "doc",
    "tensorflow.io.gfile.glob": "doc",
    "tensorflow.io.gfile.stat": "doc",
    "tensorflow.io.gfile.walk": "doc",
    "tensorflow.linalg.logdet": "doc",
    "tensorflow.linalg.matmul": "doc",
    "tensorflow.linalg.matvec": "doc",
    "tensorflow.math.bincount": "doc",
    "tensorflow.math.floormod": "doc",
    "tensorflow.math.in_top_k": "doc",
    "tensorflow.math.multiply": "doc",
    "tensorflow.math.softplus": "doc",
    "tensorflow.random.normal": "doc",
    "tensorflow.raw_ops.Abort": "doc",
    "tensorflow.raw_ops.Acosh": "doc",
    "tensorflow.raw_ops.AddV2": "doc",
    "tensorflow.raw_ops.Angle": "doc",
    "tensorflow.raw_ops.Asinh": "doc",
    "tensorflow.raw_ops.Atan2": "doc",
    "tensorflow.raw_ops.Atanh": "doc",
    "tensorflow.raw_ops.Batch": "doc",
    "tensorflow.raw_ops.Const": "doc",
    "tensorflow.raw_ops.Cross": "doc",
    "tensorflow.raw_ops.Dawsn": "doc",
    "tensorflow.raw_ops.Empty": "doc",
    "tensorflow.raw_ops.Equal": "doc",
    "tensorflow.raw_ops.Expm1": "doc",
    "tensorflow.raw_ops.FFT2D": "doc",
    "tensorflow.raw_ops.FFT3D": "doc",
    "tensorflow.raw_ops.Floor": "doc",
    "tensorflow.raw_ops.IRFFT": "doc",
    "tensorflow.raw_ops.IsInf": "doc",
    "tensorflow.raw_ops.IsNan": "doc",
    "tensorflow.raw_ops.Log1p": "doc",
    "tensorflow.raw_ops.Ndtri": "doc",
    "tensorflow.raw_ops.PadV2": "doc",
    "tensorflow.raw_ops.Range": "doc",
    "tensorflow.raw_ops.Relu6": "doc",
    "tensorflow.raw_ops.Round": "doc",
    "tensorflow.raw_ops.Stack": "doc",
    "tensorflow.raw_ops.Where": "doc",
    "tensorflow.raw_ops.While": "doc",
    "tensorflow.raw_ops.Xdivy": "doc",
    "tensorflow.raw_ops.Xlogy": "doc",
    "tensorflow.signal.rfft2d": "doc",
    "tensorflow.signal.rfft3d": "doc",
    "tensorflow.sparse.concat": "doc",
    "tensorflow.compat.v1.abs": "doc",
    "tensorflow.compat.v1.add": "doc",
    "tensorflow.compat.v1.app": "doc",
    "tensorflow.compat.v1.cos": "doc",
    "tensorflow.compat.v1.div": "doc",
    "tensorflow.compat.v1.erf": "doc",
    "tensorflow.compat.v1.exp": "doc",
    "tensorflow.compat.v1.eye": "doc",
    "tensorflow.compat.v1.fft": "doc",
    "tensorflow.compat.v1.log": "doc",
    "tensorflow.compat.v1.mod": "doc",
    "tensorflow.compat.v1.pad": "doc",
    "tensorflow.compat.v1.pow": "doc",
    "tensorflow.compat.v1.svd": "doc",
    "tensorflow.compat.v1.tpu": "doc",
    "tensorflow.compat.v1.xla": "doc",
    "tensorflow.compat.as_text": "doc",
    "tensorflow.dynamic_stitch": "doc",
    "tensorflow.io.decode_jpeg": "doc",
    "tensorflow.io.encode_jpeg": "doc",
    "tensorflow.io.gfile.GFile": "doc",
    "tensorflow.io.gfile.isdir": "doc",
    "tensorflow.io.gfile.mkdir": "doc",
    "tensorflow.linalg.slogdet": "doc",
    "tensorflow.losses.LogCosh": "doc",
    "tensorflow.losses.logcosh": "doc",
    "tensorflow.losses.poisson": "doc",
    "tensorflow.math.not_equal": "doc",
    "tensorflow.math.polygamma": "doc",
    "tensorflow.nest.is_nested": "doc",
    "tensorflow.random.poisson": "doc",
    "tensorflow.random.shuffle": "doc",
    "tensorflow.random.uniform": "doc",
    "tensorflow.raw_ops.ArgMax": "doc",
    "tensorflow.raw_ops.Assert": "doc",
    "tensorflow.raw_ops.Concat": "doc",
    "tensorflow.raw_ops.Conv2D": "doc",
    "tensorflow.raw_ops.Conv3D": "doc",
    "tensorflow.raw_ops.Cumsum": "doc",
    "tensorflow.raw_ops.Einsum": "doc",
    "tensorflow.raw_ops.IFFT2D": "doc",
    "tensorflow.raw_ops.IFFT3D": "doc",
    "tensorflow.raw_ops.Igamma": "doc",
    "tensorflow.raw_ops.InTopK": "doc",
    "tensorflow.raw_ops.Invert": "doc",
    "tensorflow.raw_ops.L2Loss": "doc",
    "tensorflow.raw_ops.Lgamma": "doc",
    "tensorflow.raw_ops.MatMul": "doc",
    "tensorflow.raw_ops.OneHot": "doc",
    "tensorflow.raw_ops.PyFunc": "doc",
    "tensorflow.raw_ops.RFFT2D": "doc",
    "tensorflow.raw_ops.RFFT3D": "doc",
    "tensorflow.raw_ops.SaveV2": "doc",
    "tensorflow.raw_ops.Select": "doc",
    "tensorflow.raw_ops.Square": "doc",
    "tensorflow.raw_ops.Switch": "doc",
    "tensorflow.raw_ops.ToBool": "doc",
    "tensorflow.raw_ops.TopKV2": "doc",
    "tensorflow.raw_ops.Unique": "doc",
    "tensorflow.raw_ops.Unpack": "doc",
    "tensorflow.recompute_grad": "doc",
    "tensorflow.signal.irfft2d": "doc",
    "tensorflow.signal.irfft3d": "doc",
    "tensorflow.sparse.maximum": "doc",
    "tensorflow.sparse.minimum": "doc",
    "tensorflow.sparse.reshape": "doc",
    "tensorflow.compat.v1.acos": "doc",
    "tensorflow.compat.v1.case": "doc",
    "tensorflow.compat.v1.cast": "doc",
    "tensorflow.compat.v1.ceil": "doc",
    "tensorflow.compat.v1.cond": "doc",
    "tensorflow.compat.v1.conj": "doc",
    "tensorflow.compat.v1.cosh": "doc",
    "tensorflow.compat.v1.data": "doc",
    "tensorflow.compat.v1.diag": "doc",
    "tensorflow.compat.v1.erfc": "doc",
    "tensorflow.compat.v1.fill": "doc",
    "tensorflow.compat.v1.ifft": "doc",
    "tensorflow.compat.v1.imag": "doc",
    "tensorflow.compat.v1.less": "doc",
    "tensorflow.compat.v1.lite": "doc",
    "tensorflow.compat.v1.math": "doc",
    "tensorflow.compat.v1.mlir": "doc",
    "tensorflow.compat.v1.nest": "doc",
    "tensorflow.compat.v1.norm": "doc",
    "tensorflow.compat.v1.ones": "doc",
    "tensorflow.compat.v1.real": "doc",
    "tensorflow.compat.v1.roll": "doc",
    "tensorflow.compat.v1.sets": "doc",
    "tensorflow.compat.v1.sign": "doc",
    "tensorflow.compat.v1.sinh": "doc",
    "tensorflow.compat.v1.sort": "doc",
    "tensorflow.compat.v1.sqrt": "doc",
    "tensorflow.compat.v1.test": "doc",
    "tensorflow.compat.v1.zeta": "doc",
    "tensorflow.TensorArraySpec": "doc",
    "tensorflow.compat.as_bytes": "doc",
    "tensorflow.dtypes.as_dtype": "doc",
    "tensorflow.io.gfile.exists": "doc",
    "tensorflow.linalg.lu_solve": "doc",
    "tensorflow.losses.log_cosh": "doc",
    "tensorflow.math.bessel_i0e": "doc",
    "tensorflow.math.bessel_i1e": "doc",
    "tensorflow.math.logical_or": "doc",
    "tensorflow.math.reciprocal": "doc",
    "tensorflow.math.reduce_max": "doc",
    "tensorflow.queue.FIFOQueue": "doc",
    "tensorflow.ragged.constant": "doc",
    "tensorflow.random.set_seed": "doc",
    "tensorflow.raw_ops.AvgPool": "doc",
    "tensorflow.raw_ops.BiasAdd": "doc",
    "tensorflow.raw_ops.CTCLoss": "doc",
    "tensorflow.raw_ops.Cumprod": "doc",
    "tensorflow.raw_ops.Digamma": "doc",
    "tensorflow.raw_ops.EluGrad": "doc",
    "tensorflow.raw_ops.IRFFT2D": "doc",
    "tensorflow.raw_ops.IRFFT3D": "doc",
    "tensorflow.raw_ops.Igammac": "doc",
    "tensorflow.raw_ops.InvGrad": "doc",
    "tensorflow.raw_ops.LRNGrad": "doc",
    "tensorflow.raw_ops.MaxPool": "doc",
    "tensorflow.raw_ops.MutexV2": "doc",
    "tensorflow.raw_ops.RefExit": "doc",
    "tensorflow.raw_ops.RngSkip": "doc",
    "tensorflow.raw_ops.StackV2": "doc",
    "tensorflow.raw_ops.Unbatch": "doc",
    "tensorflow.raw_ops.Unstage": "doc",
    "tensorflow.raw_ops.Xlog1py": "doc",
    "tensorflow.sparse.bincount": "doc",
    "tensorflow.compat.v1.DType": "doc",
    "tensorflow.compat.v1.Event": "doc",
    "tensorflow.compat.v1.acosh": "doc",
    "tensorflow.compat.v1.add_n": "doc",
    "tensorflow.compat.v1.angle": "doc",
    "tensorflow.compat.v1.asinh": "doc",
    "tensorflow.compat.v1.atan2": "doc",
    "tensorflow.compat.v1.atanh": "doc",
    "tensorflow.compat.v1.audio": "doc",
    "tensorflow.compat.v1.cross": "doc",
    "tensorflow.compat.v1.equal": "doc",
    "tensorflow.compat.v1.expm1": "doc",
    "tensorflow.compat.v1.fft2d": "doc",
    "tensorflow.compat.v1.fft3d": "doc",
    "tensorflow.compat.v1.flags": "doc",
    "tensorflow.compat.v1.floor": "doc",
    "tensorflow.compat.v1.foldl": "doc",
    "tensorflow.compat.v1.foldr": "doc",
    "tensorflow.compat.v1.gfile": "doc",
    "tensorflow.compat.v1.keras": "doc",
    "tensorflow.compat.v1.lbeta": "doc",
    "tensorflow.compat.v1.log1p": "doc",
    "tensorflow.compat.v1.manip": "doc",
    "tensorflow.compat.v1.no_op": "doc",
    "tensorflow.compat.v1.queue": "doc",
    "tensorflow.compat.v1.range": "doc",
    "tensorflow.compat.v1.round": "doc",
    "tensorflow.compat.v1.rsqrt": "doc",
    "tensorflow.compat.v1.shape": "doc",
    "tensorflow.compat.v1.slice": "doc",
    "tensorflow.compat.v1.split": "doc",
    "tensorflow.compat.v1.stack": "doc",
    "tensorflow.compat.v1.tuple": "doc",
    "tensorflow.compat.v1.types": "doc",
    "tensorflow.compat.v1.where": "doc",
    "tensorflow.compat.v1.zeros": "doc",
    "tensorflow.RaggedTensorSpec": "doc",
    "tensorflow.data.DatasetSpec": "doc",
    "tensorflow.import_graph_def": "doc",
    "tensorflow.io.SparseFeature": "doc",
    "tensorflow.io.VarLenFeature": "doc",
    "tensorflow.keras.layers.Dot": "doc",
    "tensorflow.keras.layers.dot": "doc",
    "tensorflow.keras.losses.KLD": "doc",
    "tensorflow.keras.losses.MAE": "doc",
    "tensorflow.keras.losses.MSE": "doc",
    "tensorflow.keras.losses.get": "doc",
    "tensorflow.keras.losses.kld": "doc",
    "tensorflow.keras.losses.mae": "doc",
    "tensorflow.keras.losses.mse": "doc",
    "tensorflow.linalg.band_part": "doc",
    "tensorflow.linalg.diag_part": "doc",
    "tensorflow.math.log_sigmoid": "doc",
    "tensorflow.math.logical_xor": "doc",
    "tensorflow.math.reduce_mean": "doc",
    "tensorflow.math.segment_max": "doc",
    "tensorflow.raw_ops.AllToAll": "doc",
    "tensorflow.raw_ops.BatchFFT": "doc",
    "tensorflow.raw_ops.BatchSvd": "doc",
    "tensorflow.raw_ops.BesselI0": "doc",
    "tensorflow.raw_ops.BesselI1": "doc",
    "tensorflow.raw_ops.BesselJ0": "doc",
    "tensorflow.raw_ops.BesselJ1": "doc",
    "tensorflow.raw_ops.BesselK0": "doc",
    "tensorflow.raw_ops.BesselK1": "doc",
    "tensorflow.raw_ops.BesselY0": "doc",
    "tensorflow.raw_ops.BesselY1": "doc",
    "tensorflow.raw_ops.Bincount": "doc",
    "tensorflow.raw_ops.Cholesky": "doc",
    "tensorflow.raw_ops.ConcatV2": "doc",
    "tensorflow.raw_ops.CopyHost": "doc",
    "tensorflow.raw_ops.CudnnRNN": "doc",
    "tensorflow.raw_ops.DeepCopy": "doc",
    "tensorflow.raw_ops.DiagPart": "doc",
    "tensorflow.raw_ops.DivNoNan": "doc",
    "tensorflow.raw_ops.FloorMod": "doc",
    "tensorflow.raw_ops.GatherNd": "doc",
    "tensorflow.raw_ops.GatherV2": "doc",
    "tensorflow.raw_ops.HSVToRGB": "doc",
    "tensorflow.raw_ops.Identity": "doc",
    "tensorflow.raw_ops.InTopKV2": "doc",
    "tensorflow.raw_ops.LinSpace": "doc",
    "tensorflow.raw_ops.ListDiff": "doc",
    "tensorflow.raw_ops.LoopCond": "doc",
    "tensorflow.raw_ops.MapDefun": "doc",
    "tensorflow.raw_ops.MulNoNan": "doc",
    "tensorflow.raw_ops.NotEqual": "doc",
    "tensorflow.raw_ops.RGBToHSV": "doc",
    "tensorflow.raw_ops.RefMerge": "doc",
    "tensorflow.raw_ops.ReluGrad": "doc",
    "tensorflow.raw_ops.SelectV2": "doc",
    "tensorflow.raw_ops.SeluGrad": "doc",
    "tensorflow.raw_ops.Snapshot": "doc",
    "tensorflow.raw_ops.StackPop": "doc",
    "tensorflow.raw_ops.TanhGrad": "doc",
    "tensorflow.raw_ops.TileGrad": "doc",
    "tensorflow.raw_ops.UniqueV2": "doc",
    "tensorflow.saved_model.load": "doc",
    "tensorflow.saved_model.save": "doc",
    "tensorflow.tpu.experimental": "doc",
    "tensorflow.xla.experimental": "doc",
    "tensorflow.compat.v1.Assert": "doc",
    "tensorflow.compat.v1.Tensor": "doc",
    "tensorflow.compat.v1.argmax": "doc",
    "tensorflow.compat.v1.compat": "doc",
    "tensorflow.compat.v1.concat": "doc",
    "tensorflow.compat.v1.config": "doc",
    "tensorflow.compat.v1.cumsum": "doc",
    "tensorflow.compat.v1.device": "doc",
    "tensorflow.compat.v1.dtypes": "doc",
    "tensorflow.compat.v1.einsum": "doc",
    "tensorflow.compat.v1.errors": "doc",
    "tensorflow.compat.v1.ifft2d": "doc",
    "tensorflow.compat.v1.ifft3d": "doc",
    "tensorflow.compat.v1.igamma": "doc",
    "tensorflow.compat.v1.is_nan": "doc",
    "tensorflow.compat.v1.layers": "doc",
    "tensorflow.compat.v1.lgamma": "doc",
    "tensorflow.compat.v1.linalg": "doc",
    "tensorflow.compat.v1.lookup": "doc",
    "tensorflow.compat.v1.losses": "doc",
    "tensorflow.compat.v1.map_fn": "doc",
    "tensorflow.compat.v1.matmul": "doc",
    "tensorflow.compat.v1.nn.elu": "doc",
    "tensorflow.compat.v1.ragged": "doc",
    "tensorflow.compat.v1.random": "doc",
    "tensorflow.compat.v1.signal": "doc",
    "tensorflow.compat.v1.sparse": "doc",
    "tensorflow.compat.v1.square": "doc",
    "tensorflow.compat.v1.substr": "doc",
    "tensorflow.compat.v1.unique": "doc",
    "tensorflow.data.experimental": "doc",
    "tensorflow.io.gfile.makedirs": "doc",
    "tensorflow.keras.losses.Loss": "doc",
    "tensorflow.keras.losses.MAPE": "doc",
    "tensorflow.keras.losses.MSLE": "doc",
    "tensorflow.keras.losses.mape": "doc",
    "tensorflow.keras.losses.msle": "doc",
    "tensorflow.lite.experimental": "doc",
    "tensorflow.math.segment_mean": "doc",
    "tensorflow.mlir.experimental": "doc",
    "tensorflow.raw_ops.AdjustHue": "doc",
    "tensorflow.raw_ops.ApplyAdam": "doc",
    "tensorflow.raw_ops.ApplyFtrl": "doc",
    "tensorflow.raw_ops.AvgPool3D": "doc",
    "tensorflow.raw_ops.BatchIFFT": "doc",
    "tensorflow.raw_ops.BesselI0e": "doc",
    "tensorflow.raw_ops.BesselI1e": "doc",
    "tensorflow.raw_ops.BesselK0e": "doc",
    "tensorflow.raw_ops.BesselK1e": "doc",
    "tensorflow.raw_ops.BiasAddV1": "doc",
    "tensorflow.raw_ops.BlockLSTM": "doc",
    "tensorflow.raw_ops.CTCLossV2": "doc",
    "tensorflow.raw_ops.CountUpTo": "doc",
    "tensorflow.raw_ops.DecodeBmp": "doc",
    "tensorflow.raw_ops.DecodeCSV": "doc",
    "tensorflow.raw_ops.DecodeGif": "doc",
    "tensorflow.raw_ops.DecodePng": "doc",
    "tensorflow.raw_ops.DecodeRaw": "doc",
    "tensorflow.raw_ops.DecodeWav": "doc",
    "tensorflow.raw_ops.EncodePng": "doc",
    "tensorflow.raw_ops.EncodeWav": "doc",
    "tensorflow.raw_ops.FIFOQueue": "doc",
    "tensorflow.raw_ops.FakeParam": "doc",
    "tensorflow.raw_ops.FakeQueue": "doc",
    "tensorflow.raw_ops.HashTable": "doc",
    "tensorflow.raw_ops.IdentityN": "doc",
    "tensorflow.raw_ops.LeakyRelu": "doc",
    "tensorflow.raw_ops.LessEqual": "doc",
    "tensorflow.raw_ops.MaxPool3D": "doc",
    "tensorflow.raw_ops.MaxPoolV2": "doc",
    "tensorflow.raw_ops.MutexLock": "doc",
    "tensorflow.raw_ops.RefSelect": "doc",
    "tensorflow.raw_ops.RefSwitch": "doc",
    "tensorflow.raw_ops.Relu6Grad": "doc",
    "tensorflow.raw_ops.ReverseV2": "doc",
    "tensorflow.raw_ops.ScatterNd": "doc",
    "tensorflow.raw_ops.SparseAdd": "doc",
    "tensorflow.raw_ops.StackPush": "doc",
    "tensorflow.raw_ops.StagePeek": "doc",
    "tensorflow.raw_ops.Timestamp": "doc",
    "tensorflow.saved_model.Asset": "doc",
    "tensorflow.sparse.map_values": "doc",
    "tensorflow.sparse.reduce_max": "doc",
    "tensorflow.sparse.reduce_sum": "doc",
    "tensorflow.compat.v1.NodeDef": "doc",
    "tensorflow.compat.v1.Summary": "doc",
    "tensorflow.compat.v1.arg_max": "doc",
    "tensorflow.compat.v1.argsort": "doc",
    "tensorflow.compat.v1.cumprod": "doc",
    "tensorflow.compat.v1.digamma": "doc",
    "tensorflow.compat.v1.igammac": "doc",
    "tensorflow.compat.v1.maximum": "doc",
    "tensorflow.compat.v1.minimum": "doc",
    "tensorflow.compat.v1.nn.pool": "doc",
    "tensorflow.compat.v1.nn.relu": "doc",
    "tensorflow.compat.v1.nn.selu": "doc",
    "tensorflow.compat.v1.nn.silu": "doc",
    "tensorflow.compat.v1.one_hot": "doc",
    "tensorflow.compat.v1.py_func": "doc",
    "tensorflow.compat.v1.reshape": "doc",
    "tensorflow.compat.v1.reverse": "doc",
    "tensorflow.compat.v1.sigmoid": "doc",
    "tensorflow.compat.v1.squeeze": "doc",
    "tensorflow.compat.v1.summary": "doc",
    "tensorflow.compat.v1.unstack": "doc",
    "tensorflow.compat.path_to_str": "doc",
    "tensorflow.experimental.numpy": "doc",
    "tensorflow.keras.experimental": "doc",
    "tensorflow.keras.layers.Input": "doc",
    "tensorflow.keras.layers.Layer": "doc",
    "tensorflow.keras.losses.Hinge": "doc",
    "tensorflow.keras.losses.Huber": "doc",
    "tensorflow.keras.losses.hinge": "doc",
    "tensorflow.keras.losses.huber": "doc",
    "tensorflow.math.special.dawsn": "doc",
    "tensorflow.nest.map_structure": "doc",
    "tensorflow.raw_ops.BatchFFT2D": "doc",
    "tensorflow.raw_ops.BatchFFT3D": "doc",
    "tensorflow.raw_ops.BitwiseAnd": "doc",
    "tensorflow.raw_ops.BitwiseXor": "doc",
    "tensorflow.raw_ops.ComplexAbs": "doc",
    "tensorflow.raw_ops.CudnnRNNV2": "doc",
    "tensorflow.raw_ops.CudnnRNNV3": "doc",
    "tensorflow.raw_ops.DecodeJpeg": "doc",
    "tensorflow.raw_ops.EncodeJpeg": "doc",
    "tensorflow.raw_ops.ExpandDims": "doc",
    "tensorflow.raw_ops.FresnelCos": "doc",
    "tensorflow.raw_ops.InplaceAdd": "doc",
    "tensorflow.raw_ops.InplaceSub": "doc",
    "tensorflow.raw_ops.LogicalAnd": "doc",
    "tensorflow.raw_ops.LogicalNot": "doc",
    "tensorflow.raw_ops.LowerBound": "doc",
    "tensorflow.raw_ops.NcclReduce": "doc",
    "tensorflow.raw_ops.NthElement": "doc",
    "tensorflow.raw_ops.QueueClose": "doc",
    "tensorflow.raw_ops.ReaderRead": "doc",
    "tensorflow.raw_ops.Reciprocal": "doc",
    "tensorflow.raw_ops.ReduceJoin": "doc",
    "tensorflow.raw_ops.ResizeArea": "doc",
    "tensorflow.raw_ops.ScatterAdd": "doc",
    "tensorflow.raw_ops.ScatterMax": "doc",
    "tensorflow.raw_ops.ScatterMul": "doc",
    "tensorflow.raw_ops.ScatterSub": "doc",
    "tensorflow.raw_ops.SegmentMax": "doc",
    "tensorflow.raw_ops.SegmentSum": "doc",
    "tensorflow.raw_ops.StackClose": "doc",
    "tensorflow.raw_ops.StackPopV2": "doc",
    "tensorflow.raw_ops.StageClear": "doc",
    "tensorflow.raw_ops.UpperBound": "doc",
    "tensorflow.raw_ops.VariableV2": "doc",
    "tensorflow.sparse.expand_dims": "doc",
    "tensorflow.sparse.reset_shape": "doc",
    "tensorflow.sparse.segment_sum": "doc",
    "tensorflow.types.experimental": "doc",
    "tensorflow.compat.v1.TypeSpec": "doc",
    "tensorflow.compat.v1.as_dtype": "doc",
    "tensorflow.compat.v1.bincount": "doc",
    "tensorflow.compat.v1.cholesky": "doc",
    "tensorflow.compat.v1.constant": "doc",
    "tensorflow.compat.v1.floormod": "doc",
    "tensorflow.compat.v1.get_seed": "doc",
    "tensorflow.compat.v1.identity": "doc",
    "tensorflow.compat.v1.io.gfile": "doc",
    "tensorflow.compat.v1.linspace": "doc",
    "tensorflow.compat.v1.math.abs": "doc",
    "tensorflow.compat.v1.math.add": "doc",
    "tensorflow.compat.v1.math.cos": "doc",
    "tensorflow.compat.v1.math.erf": "doc",
    "tensorflow.compat.v1.math.exp": "doc",
    "tensorflow.compat.v1.math.log": "doc",
    "tensorflow.compat.v1.math.mod": "doc",
    "tensorflow.compat.v1.math.pow": "doc",
    "tensorflow.compat.v1.meshgrid": "doc",
    "tensorflow.compat.v1.multiply": "doc",
    "tensorflow.compat.v1.nn.crelu": "doc",
    "tensorflow.compat.v1.nn.relu6": "doc",
    "tensorflow.compat.v1.nn.swish": "doc",
    "tensorflow.compat.v1.nn.top_k": "doc",
    "tensorflow.compat.v1.to_float": "doc",
    "tensorflow.compat.v1.tpu.core": "doc",
    "tensorflow.compat.v1.user_ops": "doc",
    "tensorflow.compat.v1.where_v2": "doc",
    "tensorflow.config.experimental": "doc",
    "tensorflow.errors.AbortedError": "doc",
    "tensorflow.errors.UnknownError": "doc",
    "tensorflow.experimental.dlpack": "doc",
    "tensorflow.keras.datasets.imdb": "doc",
    "tensorflow.linalg.experimental": "doc",
    "tensorflow.lookup.experimental": "doc",
    "tensorflow.losses.KLDivergence": "doc",
    "tensorflow.math.special.spence": "doc",
    "tensorflow.ragged.boolean_mask": "doc",
    "tensorflow.random.experimental": "doc",
    "tensorflow.raw_ops.ApplyAdaMax": "doc",
    "tensorflow.raw_ops.ApplyFtrlV2": "doc",
    "tensorflow.raw_ops.AvgPoolGrad": "doc",
    "tensorflow.raw_ops.BatchIFFT2D": "doc",
    "tensorflow.raw_ops.BatchIFFT3D": "doc",
    "tensorflow.raw_ops.BatchMatMul": "doc",
    "tensorflow.raw_ops.BiasAddGrad": "doc",
    "tensorflow.raw_ops.BlockLSTMV2": "doc",
    "tensorflow.raw_ops.BroadcastTo": "doc",
    "tensorflow.raw_ops.ClipByValue": "doc",
    "tensorflow.raw_ops.DeviceIndex": "doc",
    "tensorflow.raw_ops.EagerPyFunc": "doc",
    "tensorflow.raw_ops.EncodeProto": "doc",
    "tensorflow.raw_ops.EnsureShape": "doc",
    "tensorflow.raw_ops.FIFOQueueV2": "doc",
    "tensorflow.raw_ops.HashTableV2": "doc",
    "tensorflow.raw_ops.IgammaGradA": "doc",
    "tensorflow.raw_ops.ImportEvent": "doc",
    "tensorflow.raw_ops.LoadDataset": "doc",
    "tensorflow.raw_ops.MaxPoolGrad": "doc",
    "tensorflow.raw_ops.ParseTensor": "doc",
    "tensorflow.raw_ops.QueueSizeV2": "doc",
    "tensorflow.raw_ops.RaggedCross": "doc",
    "tensorflow.raw_ops.RaggedRange": "doc",
    "tensorflow.raw_ops.ReaderReset": "doc",
    "tensorflow.raw_ops.SegmentMean": "doc",
    "tensorflow.raw_ops.SegmentProd": "doc",
    "tensorflow.raw_ops.SigmoidGrad": "doc",
    "tensorflow.raw_ops.SparseCross": "doc",
    "tensorflow.raw_ops.StackPushV2": "doc",
    "tensorflow.raw_ops.StatelessIf": "doc",
    "tensorflow.raw_ops.TakeDataset": "doc",
    "tensorflow.raw_ops.TensorArray": "doc",
    "tensorflow.raw_ops.TruncateMod": "doc",
    "tensorflow.raw_ops.UnbatchGrad": "doc",
    "tensorflow.raw_ops.VarHandleOp": "doc",
    "tensorflow.signal.inverse_mdct": "doc",
    "tensorflow.signal.inverse_stft": "doc",
    "tensorflow.sparse.SparseTensor": "doc",
    "tensorflow.sparse.segment_mean": "doc",
    "tensorflow.compat.v1.FIFOQueue": "doc",
    "tensorflow.compat.v1.QueueBase": "doc",
    "tensorflow.compat.v1.app.flags": "doc",
    "tensorflow.compat.v1.diag_part": "doc",
    "tensorflow.compat.v1.is_tensor": "doc",
    "tensorflow.compat.v1.lin_space": "doc",
    "tensorflow.compat.v1.linalg.lu": "doc",
    "tensorflow.compat.v1.linalg.qr": "doc",
    "tensorflow.compat.v1.math.acos": "doc",
    "tensorflow.compat.v1.math.ceil": "doc",
    "tensorflow.compat.v1.math.conj": "doc",
    "tensorflow.compat.v1.math.cosh": "doc",
    "tensorflow.compat.v1.math.erfc": "doc",
    "tensorflow.compat.v1.math.imag": "doc",
    "tensorflow.compat.v1.math.less": "doc",
    "tensorflow.compat.v1.math.real": "doc",
    "tensorflow.compat.v1.math.sign": "doc",
    "tensorflow.compat.v1.math.sinh": "doc",
    "tensorflow.compat.v1.math.sqrt": "doc",
    "tensorflow.compat.v1.math.zeta": "doc",
    "tensorflow.compat.v1.nn.conv1d": "doc",
    "tensorflow.compat.v1.nn.conv2d": "doc",
    "tensorflow.compat.v1.nn.conv3d": "doc",
    "tensorflow.compat.v1.not_equal": "doc",
    "tensorflow.compat.v1.polygamma": "doc",
    "tensorflow.compat.v1.setdiff1d": "doc",
    "tensorflow.compat.v1.sysconfig": "doc",
    "tensorflow.compat.v1.to_double": "doc",
    "tensorflow.compat.v1.tpu.shard": "doc",
    "tensorflow.config.LogicalDevice": "doc",
    "tensorflow.data.TFRecordDataset": "doc",
    "tensorflow.errors.DataLossError": "doc",
    "tensorflow.errors.NotFoundError": "doc",
    "tensorflow.keras.backend.floatx": "doc",
    "tensorflow.keras.layers.maximum": "doc",
    "tensorflow.keras.layers.minimum": "doc",
    "tensorflow.keras.losses.LogCosh": "doc",
    "tensorflow.keras.losses.logcosh": "doc",
    "tensorflow.keras.losses.poisson": "doc",
    "tensorflow.keras.utils.Sequence": "doc",
    "tensorflow.lite.TFLiteConverter": "doc",
    "tensorflow.lookup.TextFileIndex": "doc",
    "tensorflow.losses.kl_divergence": "doc",
    "tensorflow.math.reduce_variance": "doc",
    "tensorflow.raw_ops.ApplyAdagrad": "doc",
    "tensorflow.raw_ops.ApplyAddSign": "doc",
    "tensorflow.raw_ops.ApplyRMSProp": "doc",
    "tensorflow.raw_ops.AudioSummary": "doc",
    "tensorflow.raw_ops.BarrierClose": "doc",
    "tensorflow.raw_ops.BatchDataset": "doc",
    "tensorflow.raw_ops.BatchToSpace": "doc",
    "tensorflow.raw_ops.CSVDatasetV2": "doc",
    "tensorflow.raw_ops.CacheDataset": "doc",
    "tensorflow.raw_ops.CholeskyGrad": "doc",
    "tensorflow.raw_ops.DecodeBase64": "doc",
    "tensorflow.raw_ops.DepthToSpace": "doc",
    "tensorflow.raw_ops.EncodeBase64": "doc",
    "tensorflow.raw_ops.GRUBlockCell": "doc",
    "tensorflow.raw_ops.GreaterEqual": "doc",
    "tensorflow.raw_ops.ImageSummary": "doc",
    "tensorflow.raw_ops.QuantizedAdd": "doc",
    "tensorflow.raw_ops.QuantizedMul": "doc",
    "tensorflow.raw_ops.QueueCloseV2": "doc",
    "tensorflow.raw_ops.QueueDequeue": "doc",
    "tensorflow.raw_ops.QueueEnqueue": "doc",
    "tensorflow.raw_ops.ReaderReadV2": "doc",
    "tensorflow.raw_ops.ScatterNdAdd": "doc",
    "tensorflow.raw_ops.ScatterNdMax": "doc",
    "tensorflow.raw_ops.ScatterNdSub": "doc",
    "tensorflow.raw_ops.SoftsignGrad": "doc",
    "tensorflow.raw_ops.SpaceToBatch": "doc",
    "tensorflow.raw_ops.SpaceToDepth": "doc",
    "tensorflow.raw_ops.SparseConcat": "doc",
    "tensorflow.raw_ops.SparseMatMul": "doc",
    "tensorflow.raw_ops.StackCloseV2": "doc",
    "tensorflow.raw_ops.WriteSummary": "doc",
    "tensorflow.summary.experimental": "doc",
    "tensorflow.compat.v1.DeviceSpec": "doc",
    "tensorflow.compat.v1.LogMessage": "doc",
    "tensorflow.compat.v1.ReaderBase": "doc",
    "tensorflow.compat.v1.SessionLog": "doc",
    "tensorflow.compat.v1.TensorInfo": "doc",
    "tensorflow.compat.v1.assign_add": "doc",
    "tensorflow.compat.v1.assign_sub": "doc",
    "tensorflow.compat.v1.decode_csv": "doc",
    "tensorflow.compat.v1.decode_raw": "doc",
    "tensorflow.compat.v1.div_no_nan": "doc",
    "tensorflow.compat.v1.flags.Flag": "doc",
    "tensorflow.compat.v1.gfile.Copy": "doc",
    "tensorflow.compat.v1.gfile.Glob": "doc",
    "tensorflow.compat.v1.gfile.Stat": "doc",
    "tensorflow.compat.v1.gfile.Walk": "doc",
    "tensorflow.compat.v1.identity_n": "doc",
    "tensorflow.compat.v1.init_scope": "doc",
    "tensorflow.compat.v1.io.is_jpeg": "doc",
    "tensorflow.compat.v1.less_equal": "doc",
    "tensorflow.compat.v1.linalg.det": "doc",
    "tensorflow.compat.v1.linalg.eye": "doc",
    "tensorflow.compat.v1.linalg.inv": "doc",
    "tensorflow.compat.v1.linalg.svd": "doc",
    "tensorflow.compat.v1.logical_or": "doc",
    "tensorflow.compat.v1.manip.roll": "doc",
    "tensorflow.compat.v1.math.acosh": "doc",
    "tensorflow.compat.v1.math.add_n": "doc",
    "tensorflow.compat.v1.math.angle": "doc",
    "tensorflow.compat.v1.math.asinh": "doc",
    "tensorflow.compat.v1.math.atan2": "doc",
    "tensorflow.compat.v1.math.atanh": "doc",
    "tensorflow.compat.v1.math.equal": "doc",
    "tensorflow.compat.v1.math.expm1": "doc",
    "tensorflow.compat.v1.math.floor": "doc",
    "tensorflow.compat.v1.math.lbeta": "doc",
    "tensorflow.compat.v1.math.log1p": "doc",
    "tensorflow.compat.v1.math.ndtri": "doc",
    "tensorflow.compat.v1.math.round": "doc",
    "tensorflow.compat.v1.math.rsqrt": "doc",
    "tensorflow.compat.v1.math.top_k": "doc",
    "tensorflow.compat.v1.math.xdivy": "doc",
    "tensorflow.compat.v1.math.xlogy": "doc",
    "tensorflow.compat.v1.name_scope": "doc",
    "tensorflow.compat.v1.nn.l2_loss": "doc",
    "tensorflow.compat.v1.nn.moments": "doc",
    "tensorflow.compat.v1.nn.sigmoid": "doc",
    "tensorflow.compat.v1.reciprocal": "doc",
    "tensorflow.compat.v1.reduce_all": "doc",
    "tensorflow.compat.v1.reduce_any": "doc",
    "tensorflow.compat.v1.reduce_max": "doc",
    "tensorflow.compat.v1.reduce_sum": "doc",
    "tensorflow.compat.v1.reverse_v2": "doc",
    "tensorflow.compat.v1.scalar_mul": "doc",
    "tensorflow.compat.v1.scatter_nd": "doc",
    "tensorflow.compat.v1.sets.union": "doc",
    "tensorflow.compat.v1.signal.dct": "doc",
    "tensorflow.compat.v1.signal.fft": "doc",
    "tensorflow.compat.v1.sparse.add": "doc",
    "tensorflow.compat.v1.sparse.eye": "doc",
    "tensorflow.compat.v1.sparse_add": "doc",
    "tensorflow.compat.v1.while_loop": "doc",
    "tensorflow.config.PhysicalDevice": "doc",
    "tensorflow.errors.CancelledError": "doc",
    "tensorflow.experimental.tensorrt": "doc",
    "tensorflow.keras.layers.multiply": "doc",
    "tensorflow.keras.losses.log_cosh": "doc",
    "tensorflow.raw_ops.AccumulateNV2": "doc",
    "tensorflow.raw_ops.ApplyAdadelta": "doc",
    "tensorflow.raw_ops.ApplyMomentum": "doc",
    "tensorflow.raw_ops.AvgPool3DGrad": "doc",
    "tensorflow.raw_ops.BatchCholesky": "doc",
    "tensorflow.raw_ops.BatchMatMulV2": "doc",
    "tensorflow.raw_ops.BlockLSTMGrad": "doc",
    "tensorflow.raw_ops.BroadcastArgs": "doc",
    "tensorflow.raw_ops.CheckNumerics": "doc",
    "tensorflow.raw_ops.DebugIdentity": "doc",
    "tensorflow.raw_ops.DebugNanCount": "doc",
    "tensorflow.raw_ops.DecodeProtoV2": "doc",
    "tensorflow.raw_ops.DenseBincount": "doc",
    "tensorflow.raw_ops.DynamicStitch": "doc",
    "tensorflow.raw_ops.EuclideanNorm": "doc",
    "tensorflow.raw_ops.InfeedDequeue": "doc",
    "tensorflow.raw_ops.InfeedEnqueue": "doc",
    "tensorflow.raw_ops.InplaceUpdate": "doc",
    "tensorflow.raw_ops.LSTMBlockCell": "doc",
    "tensorflow.raw_ops.LeakyReluGrad": "doc",
    "tensorflow.raw_ops.MatrixSolveLs": "doc",
    "tensorflow.raw_ops.MaxPool3DGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradV2": "doc",
    "tensorflow.raw_ops.NcclAllReduce": "doc",
    "tensorflow.raw_ops.NcclBroadcast": "doc",
    "tensorflow.raw_ops.PlaceholderV2": "doc",
    "tensorflow.raw_ops.QuantizedRelu": "doc",
    "tensorflow.raw_ops.QueueIsClosed": "doc",
    "tensorflow.raw_ops.ReaderResetV2": "doc",
    "tensorflow.raw_ops.ResizeBicubic": "doc",
    "tensorflow.raw_ops.ScalarSummary": "doc",
    "tensorflow.raw_ops.SparseAddGrad": "doc",
    "tensorflow.raw_ops.SparseCrossV2": "doc",
    "tensorflow.raw_ops.SparseReshape": "doc",
    "tensorflow.raw_ops.SparseSoftmax": "doc",
    "tensorflow.raw_ops.SparseToDense": "doc",
    "tensorflow.raw_ops.StatelessCase": "doc",
    "tensorflow.raw_ops.TensorArrayV2": "doc",
    "tensorflow.raw_ops.TensorArrayV3": "doc",
    "tensorflow.raw_ops.TensorSummary": "doc",
    "tensorflow.raw_ops.UnicodeDecode": "doc",
    "tensorflow.raw_ops.UnicodeEncode": "doc",
    "tensorflow.raw_ops.UnicodeScript": "doc",
    "tensorflow.raw_ops.UniqueDataset": "doc",
    "tensorflow.raw_ops.VariableShape": "doc",
    "tensorflow.sysconfig.get_include": "doc",
    "tensorflow.compat.v1.ConfigProto": "doc",
    "tensorflow.compat.v1.RunMetadata": "doc",
    "tensorflow.compat.v1.TensorArray": "doc",
    "tensorflow.compat.v1.TensorShape": "doc",
    "tensorflow.compat.v1.assert_less": "doc",
    "tensorflow.compat.v1.count_up_to": "doc",
    "tensorflow.compat.v1.dtypes.cast": "doc",
    "tensorflow.compat.v1.expand_dims": "doc",
    "tensorflow.compat.v1.flags.FLAGS": "doc",
    "tensorflow.compat.v1.gfile.GFile": "doc",
    "tensorflow.compat.v1.global_norm": "doc",
    "tensorflow.compat.v1.keras.Input": "doc",
    "tensorflow.compat.v1.keras.utils": "doc",
    "tensorflow.compat.v1.linalg.diag": "doc",
    "tensorflow.compat.v1.linalg.eigh": "doc",
    "tensorflow.compat.v1.linalg.expm": "doc",
    "tensorflow.compat.v1.linalg.logm": "doc",
    "tensorflow.compat.v1.linalg.norm": "doc",
    "tensorflow.compat.v1.linalg.pinv": "doc",
    "tensorflow.compat.v1.log_sigmoid": "doc",
    "tensorflow.compat.v1.logical_and": "doc",
    "tensorflow.compat.v1.logical_not": "doc",
    "tensorflow.compat.v1.logical_xor": "doc",
    "tensorflow.compat.v1.math.argmax": "doc",
    "tensorflow.compat.v1.math.cumsum": "doc",
    "tensorflow.compat.v1.math.igamma": "doc",
    "tensorflow.compat.v1.math.is_nan": "doc",
    "tensorflow.compat.v1.math.lgamma": "doc",
    "tensorflow.compat.v1.math.square": "doc",
    "tensorflow.compat.v1.multinomial": "doc",
    "tensorflow.compat.v1.nn.avg_pool": "doc",
    "tensorflow.compat.v1.nn.bias_add": "doc",
    "tensorflow.compat.v1.nn.ctc_loss": "doc",
    "tensorflow.compat.v1.nn.in_top_k": "doc",
    "tensorflow.compat.v1.nn.max_pool": "doc",
    "tensorflow.compat.v1.nn.nce_loss": "doc",
    "tensorflow.compat.v1.nn.rnn_cell": "doc",
    "tensorflow.compat.v1.nn.softplus": "doc",
    "tensorflow.compat.v1.placeholder": "doc",
    "tensorflow.compat.v1.py_function": "doc",
    "tensorflow.compat.v1.quantize_v2": "doc",
    "tensorflow.compat.v1.random_crop": "doc",
    "tensorflow.compat.v1.reduce_join": "doc",
    "tensorflow.compat.v1.reduce_mean": "doc",
    "tensorflow.compat.v1.reduce_prod": "doc",
    "tensorflow.compat.v1.saved_model": "doc",
    "tensorflow.compat.v1.scatter_max": "doc",
    "tensorflow.compat.v1.scatter_mul": "doc",
    "tensorflow.compat.v1.scatter_sub": "doc",
    "tensorflow.compat.v1.segment_max": "doc",
    "tensorflow.compat.v1.segment_sum": "doc",
    "tensorflow.compat.v1.signal.idct": "doc",
    "tensorflow.compat.v1.signal.ifft": "doc",
    "tensorflow.compat.v1.signal.mdct": "doc",
    "tensorflow.compat.v1.signal.rfft": "doc",
    "tensorflow.compat.v1.signal.stft": "doc",
    "tensorflow.compat.v1.sparse.mask": "doc",
    "tensorflow.compat.v1.sparse_mask": "doc",
    "tensorflow.compat.v1.switch_case": "doc",
    "tensorflow.compat.v1.to_bfloat16": "doc",
    "tensorflow.compat.dimension_value": "doc",
    "tensorflow.data.experimental.load": "doc",
    "tensorflow.data.experimental.save": "doc",
    "tensorflow.errors.OutOfRangeError": "doc",
    "tensorflow.experimental.numpy.abs": "doc",
    "tensorflow.experimental.numpy.add": "doc",
    "tensorflow.experimental.numpy.all": "doc",
    "tensorflow.experimental.numpy.any": "doc",
    "tensorflow.experimental.numpy.cos": "doc",
    "tensorflow.experimental.numpy.dot": "doc",
    "tensorflow.experimental.numpy.exp": "doc",
    "tensorflow.experimental.numpy.eye": "doc",
    "tensorflow.experimental.numpy.fix": "doc",
    "tensorflow.experimental.numpy.gcd": "doc",
    "tensorflow.experimental.numpy.ix_": "doc",
    "tensorflow.experimental.numpy.lcm": "doc",
    "tensorflow.experimental.numpy.log": "doc",
    "tensorflow.experimental.numpy.max": "doc",
    "tensorflow.experimental.numpy.mod": "doc",
    "tensorflow.experimental.numpy.pad": "doc",
    "tensorflow.experimental.numpy.ptp": "doc",
    "tensorflow.experimental.numpy.std": "doc",
    "tensorflow.experimental.numpy.sum": "doc",
    "tensorflow.experimental.numpy.var": "doc",
    "tensorflow.keras.layers.AvgPool1D": "doc",
    "tensorflow.keras.layers.AvgPool2D": "doc",
    "tensorflow.keras.layers.AvgPool3D": "doc",
    "tensorflow.keras.layers.MaxPool1D": "doc",
    "tensorflow.keras.layers.MaxPool2D": "doc",
    "tensorflow.keras.layers.MaxPool3D": "doc",
    "tensorflow.keras.layers.SimpleRNN": "doc",
    "tensorflow.lookup.StaticHashTable": "doc",
    "tensorflow.math.special.bessel_i0": "doc",
    "tensorflow.math.special.bessel_i1": "doc",
    "tensorflow.math.special.bessel_j0": "doc",
    "tensorflow.math.special.bessel_j1": "doc",
    "tensorflow.math.special.bessel_k0": "doc",
    "tensorflow.math.special.bessel_k1": "doc",
    "tensorflow.math.special.bessel_y0": "doc",
    "tensorflow.math.special.bessel_y1": "doc",
    "tensorflow.ragged.map_flat_values": "doc",
    "tensorflow.random.stateless_gamma": "doc",
    "tensorflow.raw_ops.ApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ApplyAdagradV2": "doc",
    "tensorflow.raw_ops.AudioSummaryV2": "doc",
    "tensorflow.raw_ops.BatchDatasetV2": "doc",
    "tensorflow.raw_ops.BatchToSpaceND": "doc",
    "tensorflow.raw_ops.CacheDatasetV2": "doc",
    "tensorflow.raw_ops.FusedBatchNorm": "doc",
    "tensorflow.raw_ops.FusedPadConv2D": "doc",
    "tensorflow.raw_ops.IdentityReader": "doc",
    "tensorflow.raw_ops.ImmutableConst": "doc",
    "tensorflow.raw_ops.OrderedMapPeek": "doc",
    "tensorflow.raw_ops.OutfeedDequeue": "doc",
    "tensorflow.raw_ops.OutfeedEnqueue": "doc",
    "tensorflow.raw_ops.ParseExampleV2": "doc",
    "tensorflow.raw_ops.QuantizedRelu6": "doc",
    "tensorflow.raw_ops.QuantizedReluX": "doc",
    "tensorflow.raw_ops.QueueDequeueV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueV2": "doc",
    "tensorflow.raw_ops.RaggedBincount": "doc",
    "tensorflow.raw_ops.ReadVariableOp": "doc",
    "tensorflow.raw_ops.ReaderReadUpTo": "doc",
    "tensorflow.raw_ops.ReciprocalGrad": "doc",
    "tensorflow.raw_ops.RegexFullMatch": "doc",
    "tensorflow.raw_ops.RngReadAndSkip": "doc",
    "tensorflow.raw_ops.SelfAdjointEig": "doc",
    "tensorflow.raw_ops.ShuffleDataset": "doc",
    "tensorflow.raw_ops.SpaceToBatchND": "doc",
    "tensorflow.raw_ops.StatelessWhile": "doc",
    "tensorflow.raw_ops.TextLineReader": "doc",
    "tensorflow.raw_ops.UnbatchDataset": "doc",
    "tensorflow.sparse.fill_empty_rows": "doc",
    "tensorflow.compat.v1.OptionalSpec": "doc",
    "tensorflow.compat.v1.RaggedTensor": "doc",
    "tensorflow.compat.v1.SparseTensor": "doc",
    "tensorflow.compat.v1.accumulate_n": "doc",
    "tensorflow.compat.v1.assert_equal": "doc",
    "tensorflow.compat.v1.boolean_mask": "doc",
    "tensorflow.compat.v1.broadcast_to": "doc",
    "tensorflow.compat.v1.clip_by_norm": "doc",
    "tensorflow.compat.v1.data.Dataset": "doc",
    "tensorflow.compat.v1.dtypes.DType": "doc",
    "tensorflow.compat.v1.ensure_shape": "doc",
    "tensorflow.compat.v1.experimental": "doc",
    "tensorflow.compat.v1.flags.DEFINE": "doc",
    "tensorflow.compat.v1.gfile.Exists": "doc",
    "tensorflow.compat.v1.io.QueueBase": "doc",
    "tensorflow.compat.v1.keras.layers": "doc",
    "tensorflow.compat.v1.keras.losses": "doc",
    "tensorflow.compat.v1.keras.models": "doc",
    "tensorflow.compat.v1.layers.Dense": "doc",
    "tensorflow.compat.v1.layers.Layer": "doc",
    "tensorflow.compat.v1.layers.dense": "doc",
    "tensorflow.compat.v1.linalg.cross": "doc",
    "tensorflow.compat.v1.linalg.lstsq": "doc",
    "tensorflow.compat.v1.linalg.solve": "doc",
    "tensorflow.compat.v1.load_library": "doc",
    "tensorflow.compat.v1.make_ndarray": "doc",
    "tensorflow.compat.v1.math.cumprod": "doc",
    "tensorflow.compat.v1.math.digamma": "doc",
    "tensorflow.compat.v1.math.igammac": "doc",
    "tensorflow.compat.v1.math.maximum": "doc",
    "tensorflow.compat.v1.math.minimum": "doc",
    "tensorflow.compat.v1.math.polyval": "doc",
    "tensorflow.compat.v1.math.sigmoid": "doc",
    "tensorflow.compat.v1.math.special": "doc",
    "tensorflow.compat.v1.math.xlog1py": "doc",
    "tensorflow.compat.v1.matrix_solve": "doc",
    "tensorflow.compat.v1.nn.xw_plus_b": "doc",
    "tensorflow.compat.v1.ragged.cross": "doc",
    "tensorflow.compat.v1.ragged.range": "doc",
    "tensorflow.compat.v1.ragged.stack": "doc",
    "tensorflow.compat.v1.random.gamma": "doc",
    "tensorflow.compat.v1.random_gamma": "doc",
    "tensorflow.compat.v1.searchsorted": "doc",
    "tensorflow.compat.v1.segment_mean": "doc",
    "tensorflow.compat.v1.segment_prod": "doc",
    "tensorflow.compat.v1.signal.fft2d": "doc",
    "tensorflow.compat.v1.signal.fft3d": "doc",
    "tensorflow.compat.v1.signal.irfft": "doc",
    "tensorflow.compat.v1.sparse.cross": "doc",
    "tensorflow.compat.v1.sparse.merge": "doc",
    "tensorflow.compat.v1.sparse.slice": "doc",
    "tensorflow.compat.v1.sparse.split": "doc",
    "tensorflow.compat.v1.sparse_merge": "doc",
    "tensorflow.compat.v1.sparse_split": "doc",
    "tensorflow.compat.v1.summary.text": "doc",
    "tensorflow.compat.v1.to_complex64": "doc",
    "tensorflow.errors.UnavailableError": "doc",
    "tensorflow.experimental.numpy.amax": "doc",
    "tensorflow.experimental.numpy.cbrt": "doc",
    "tensorflow.experimental.numpy.ceil": "doc",
    "tensorflow.experimental.numpy.clip": "doc",
    "tensorflow.experimental.numpy.conj": "doc",
    "tensorflow.experimental.numpy.copy": "doc",
    "tensorflow.experimental.numpy.cosh": "doc",
    "tensorflow.experimental.numpy.diag": "doc",
    "tensorflow.experimental.numpy.diff": "doc",
    "tensorflow.experimental.numpy.exp2": "doc",
    "tensorflow.experimental.numpy.fabs": "doc",
    "tensorflow.experimental.numpy.flip": "doc",
    "tensorflow.experimental.numpy.full": "doc",
    "tensorflow.experimental.numpy.imag": "doc",
    "tensorflow.experimental.numpy.int8": "doc",
    "tensorflow.experimental.numpy.int_": "doc",
    "tensorflow.experimental.numpy.less": "doc",
    "tensorflow.experimental.numpy.log2": "doc",
    "tensorflow.experimental.numpy.ndim": "doc",
    "tensorflow.experimental.numpy.ones": "doc",
    "tensorflow.experimental.numpy.prod": "doc",
    "tensorflow.experimental.numpy.real": "doc",
    "tensorflow.experimental.numpy.roll": "doc",
    "tensorflow.experimental.numpy.sign": "doc",
    "tensorflow.experimental.numpy.sinc": "doc",
    "tensorflow.experimental.numpy.sinh": "doc",
    "tensorflow.experimental.numpy.sort": "doc",
    "tensorflow.experimental.numpy.sqrt": "doc",
    "tensorflow.experimental.numpy.vdot": "doc",
    "tensorflow.keras.models.save_model": "doc",
    "tensorflow.losses.CosineSimilarity": "doc",
    "tensorflow.losses.MeanSquaredError": "doc",
    "tensorflow.math.special.bessel_i0e": "doc",
    "tensorflow.math.special.bessel_i1e": "doc",
    "tensorflow.math.special.bessel_k0e": "doc",
    "tensorflow.math.special.bessel_k1e": "doc",
    "tensorflow.random.create_rng_state": "doc",
    "tensorflow.random.stateless_normal": "doc",
    "tensorflow.raw_ops.BarrierTakeMany": "doc",
    "tensorflow.raw_ops.BatchMatrixDiag": "doc",
    "tensorflow.raw_ops.BlockLSTMGradV2": "doc",
    "tensorflow.raw_ops.CheckNumericsV2": "doc",
    "tensorflow.raw_ops.CompressElement": "doc",
    "tensorflow.raw_ops.CrossReplicaSum": "doc",
    "tensorflow.raw_ops.DebugIdentityV2": "doc",
    "tensorflow.raw_ops.DecodePaddedRaw": "doc",
    "tensorflow.raw_ops.EmptyTensorList": "doc",
    "tensorflow.raw_ops.InitializeTable": "doc",
    "tensorflow.raw_ops.IteratorGetNext": "doc",
    "tensorflow.raw_ops.LookupTableFind": "doc",
    "tensorflow.raw_ops.MapUnstageNoKey": "doc",
    "tensorflow.raw_ops.MaxPoolGradGrad": "doc",
    "tensorflow.raw_ops.OptimizeDataset": "doc",
    "tensorflow.raw_ops.OrderedMapClear": "doc",
    "tensorflow.raw_ops.OrderedMapStage": "doc",
    "tensorflow.raw_ops.PartitionedCall": "doc",
    "tensorflow.raw_ops.PopulationCount": "doc",
    "tensorflow.raw_ops.PrefetchDataset": "doc",
    "tensorflow.raw_ops.PriorityQueueV2": "doc",
    "tensorflow.raw_ops.PyFuncStateless": "doc",
    "tensorflow.raw_ops.QuantizedConcat": "doc",
    "tensorflow.raw_ops.QuantizedConv2D": "doc",
    "tensorflow.raw_ops.QuantizedMatMul": "doc",
    "tensorflow.raw_ops.QueueIsClosedV2": "doc",
    "tensorflow.raw_ops.RandomGammaGrad": "doc",
    "tensorflow.raw_ops.RandomPoissonV2": "doc",
    "tensorflow.raw_ops.RegisterDataset": "doc",
    "tensorflow.raw_ops.SamplingDataset": "doc",
    "tensorflow.raw_ops.ScatterNdUpdate": "doc",
    "tensorflow.raw_ops.SerializeSparse": "doc",
    "tensorflow.raw_ops.ShardedFilename": "doc",
    "tensorflow.raw_ops.ShardedFilespec": "doc",
    "tensorflow.raw_ops.SnapshotDataset": "doc",
    "tensorflow.raw_ops.SparseApplyFtrl": "doc",
    "tensorflow.raw_ops.SparseMatrixAdd": "doc",
    "tensorflow.raw_ops.SparseMatrixMul": "doc",
    "tensorflow.raw_ops.SparseMatrixNNZ": "doc",
    "tensorflow.raw_ops.SparseReduceMax": "doc",
    "tensorflow.raw_ops.SparseReduceSum": "doc",
    "tensorflow.raw_ops.SparseSliceGrad": "doc",
    "tensorflow.raw_ops.StatefulUniform": "doc",
    "tensorflow.raw_ops.TFRecordDataset": "doc",
    "tensorflow.raw_ops.TensorArrayGrad": "doc",
    "tensorflow.raw_ops.TensorArrayPack": "doc",
    "tensorflow.raw_ops.TensorArrayRead": "doc",
    "tensorflow.raw_ops.TensorListSplit": "doc",
    "tensorflow.raw_ops.TensorListStack": "doc",
    "tensorflow.raw_ops.TensorSummaryV2": "doc",
    "tensorflow.raw_ops.TextLineDataset": "doc",
    "tensorflow.raw_ops.TruncatedNormal": "doc",
    "tensorflow.raw_ops.WholeFileReader": "doc",
    "tensorflow.raw_ops.WorkerHeartbeat": "doc",
    "tensorflow.compat.v1.IndexedSlices": "doc",
    "tensorflow.compat.v1.SparseFeature": "doc",
    "tensorflow.compat.v1.Summary.Audio": "doc",
    "tensorflow.compat.v1.Summary.Image": "doc",
    "tensorflow.compat.v1.Summary.Value": "doc",
    "tensorflow.compat.v1.VarLenFeature": "doc",
    "tensorflow.compat.v1.VariableScope": "doc",
    "tensorflow.compat.v1.all_variables": "doc",
    "tensorflow.compat.v1.assert_scalar": "doc",
    "tensorflow.compat.v1.clip_by_value": "doc",
    "tensorflow.compat.v1.colocate_with": "doc",
    "tensorflow.compat.v1.compat.as_str": "doc",
    "tensorflow.compat.v1.decode_base64": "doc",
    "tensorflow.compat.v1.encode_base64": "doc",
    "tensorflow.compat.v1.greater_equal": "doc",
    "tensorflow.compat.v1.io.decode_bmp": "doc",
    "tensorflow.compat.v1.io.decode_csv": "doc",
    "tensorflow.compat.v1.io.decode_gif": "doc",
    "tensorflow.compat.v1.io.decode_png": "doc",
    "tensorflow.compat.v1.io.decode_raw": "doc",
    "tensorflow.compat.v1.io.encode_png": "doc",
    "tensorflow.compat.v1.io.gfile.copy": "doc",
    "tensorflow.compat.v1.io.gfile.glob": "doc",
    "tensorflow.compat.v1.io.gfile.stat": "doc",
    "tensorflow.compat.v1.io.gfile.walk": "doc",
    "tensorflow.compat.v1.keras.backend": "doc",
    "tensorflow.compat.v1.layers.Conv1D": "doc",
    "tensorflow.compat.v1.layers.Conv2D": "doc",
    "tensorflow.compat.v1.layers.Conv3D": "doc",
    "tensorflow.compat.v1.layers.conv1d": "doc",
    "tensorflow.compat.v1.layers.conv2d": "doc",
    "tensorflow.compat.v1.layers.conv3d": "doc",
    "tensorflow.compat.v1.linalg.einsum": "doc",
    "tensorflow.compat.v1.linalg.logdet": "doc",
    "tensorflow.compat.v1.linalg.matmul": "doc",
    "tensorflow.compat.v1.linalg.matvec": "doc",
    "tensorflow.compat.v1.make_template": "doc",
    "tensorflow.compat.v1.manip.reshape": "doc",
    "tensorflow.compat.v1.manip.reverse": "doc",
    "tensorflow.compat.v1.math.bincount": "doc",
    "tensorflow.compat.v1.math.floormod": "doc",
    "tensorflow.compat.v1.math.in_top_k": "doc",
    "tensorflow.compat.v1.math.multiply": "doc",
    "tensorflow.compat.v1.math.softplus": "doc",
    "tensorflow.compat.v1.nn.avg_pool1d": "doc",
    "tensorflow.compat.v1.nn.avg_pool2d": "doc",
    "tensorflow.compat.v1.nn.avg_pool3d": "doc",
    "tensorflow.compat.v1.nn.leaky_relu": "doc",
    "tensorflow.compat.v1.nn.max_pool1d": "doc",
    "tensorflow.compat.v1.nn.max_pool2d": "doc",
    "tensorflow.compat.v1.nn.max_pool3d": "doc",
    "tensorflow.compat.v1.random.normal": "doc",
    "tensorflow.compat.v1.random_normal": "doc",
    "tensorflow.compat.v1.regex_replace": "doc",
    "tensorflow.compat.v1.sequence_mask": "doc",
    "tensorflow.compat.v1.signal.ifft2d": "doc",
    "tensorflow.compat.v1.signal.ifft3d": "doc",
    "tensorflow.compat.v1.signal.rfft2d": "doc",
    "tensorflow.compat.v1.signal.rfft3d": "doc",
    "tensorflow.compat.v1.sparse.concat": "doc",
    "tensorflow.compat.v1.sparse.matmul": "doc",
    "tensorflow.compat.v1.sparse_concat": "doc",
    "tensorflow.compat.v1.sparse_matmul": "doc",
    "tensorflow.compat.v1.summary.Event": "doc",
    "tensorflow.compat.v1.summary.audio": "doc",
    "tensorflow.compat.v1.summary.merge": "doc",
    "tensorflow.compat.v1.to_complex128": "doc",
    "tensorflow.data.experimental.unique": "doc",
    "tensorflow.experimental.async_scope": "doc",
    "tensorflow.experimental.numpy.angle": "doc",
    "tensorflow.experimental.numpy.array": "doc",
    "tensorflow.experimental.numpy.bool_": "doc",
    "tensorflow.experimental.numpy.cross": "doc",
    "tensorflow.experimental.numpy.empty": "doc",
    "tensorflow.experimental.numpy.equal": "doc",
    "tensorflow.experimental.numpy.expm1": "doc",
    "tensorflow.experimental.numpy.finfo": "doc",
    "tensorflow.experimental.numpy.floor": "doc",
    "tensorflow.experimental.numpy.hypot": "doc",
    "tensorflow.experimental.numpy.iinfo": "doc",
    "tensorflow.experimental.numpy.int16": "doc",
    "tensorflow.experimental.numpy.int32": "doc",
    "tensorflow.experimental.numpy.int64": "doc",
    "tensorflow.experimental.numpy.isinf": "doc",
    "tensorflow.experimental.numpy.isnan": "doc",
    "tensorflow.experimental.numpy.log10": "doc",
    "tensorflow.experimental.numpy.log1p": "doc",
    "tensorflow.experimental.numpy.ravel": "doc",
    "tensorflow.experimental.numpy.round": "doc",
    "tensorflow.experimental.numpy.shape": "doc",
    "tensorflow.experimental.numpy.split": "doc",
    "tensorflow.experimental.numpy.stack": "doc",
    "tensorflow.experimental.numpy.uint8": "doc",
    "tensorflow.experimental.numpy.where": "doc",
    "tensorflow.experimental.numpy.zeros": "doc",
    "tensorflow.keras.utils.model_to_dot": "doc",
    "tensorflow.losses.MeanAbsoluteError": "doc",
    "tensorflow.losses.cosine_similarity": "doc",
    "tensorflow.math.special.fresnel_cos": "doc",
    "tensorflow.random.stateless_poisson": "doc",
    "tensorflow.random.stateless_uniform": "doc",
    "tensorflow.raw_ops.AdjustContrastv2": "doc",
    "tensorflow.raw_ops.ApproximateEqual": "doc",
    "tensorflow.raw_ops.AssignVariableOp": "doc",
    "tensorflow.raw_ops.AudioSpectrogram": "doc",
    "tensorflow.raw_ops.AutoShardDataset": "doc",
    "tensorflow.raw_ops.BarrierReadySize": "doc",
    "tensorflow.raw_ops.BatchMatrixSolve": "doc",
    "tensorflow.raw_ops.CollectiveGather": "doc",
    "tensorflow.raw_ops.CollectiveReduce": "doc",
    "tensorflow.raw_ops.ConsumeMutexLock": "doc",
    "tensorflow.raw_ops.CudnnRNNBackprop": "doc",
    "tensorflow.raw_ops.DatasetFromGraph": "doc",
    "tensorflow.raw_ops.DatasetToGraphV2": "doc",
    "tensorflow.raw_ops.DecodeCompressed": "doc",
    "tensorflow.raw_ops.DummyMemoryCache": "doc",
    "tensorflow.raw_ops.DynamicPartition": "doc",
    "tensorflow.raw_ops.ExtractJpegShape": "doc",
    "tensorflow.raw_ops.FusedBatchNormV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormV3": "doc",
    "tensorflow.raw_ops.GRUBlockCellGrad": "doc",
    "tensorflow.raw_ops.GeneratorDataset": "doc",
    "tensorflow.raw_ops.GetSessionHandle": "doc",
    "tensorflow.raw_ops.GetSessionTensor": "doc",
    "tensorflow.raw_ops.HistogramSummary": "doc",
    "tensorflow.raw_ops.IdentityReaderV2": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV2": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV3": "doc",
    "tensorflow.raw_ops.MatrixSquareRoot": "doc",
    "tensorflow.raw_ops.MutableHashTable": "doc",
    "tensorflow.raw_ops.OptionalGetValue": "doc",
    "tensorflow.raw_ops.OptionalHasValue": "doc",
    "tensorflow.raw_ops.OutfeedDequeueV2": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueue": "doc",
    "tensorflow.raw_ops.QuantizedAvgPool": "doc",
    "tensorflow.raw_ops.QuantizedBiasAdd": "doc",
    "tensorflow.raw_ops.QuantizedMaxPool": "doc",
    "tensorflow.raw_ops.QuantizedReshape": "doc",
    "tensorflow.raw_ops.QueueDequeueMany": "doc",
    "tensorflow.raw_ops.QueueDequeueUpTo": "doc",
    "tensorflow.raw_ops.QueueEnqueueMany": "doc",
    "tensorflow.raw_ops.RandomUniformInt": "doc",
    "tensorflow.raw_ops.ReaderReadUpToV2": "doc",
    "tensorflow.raw_ops.RebatchDatasetV2": "doc",
    "tensorflow.raw_ops.ResourceGatherNd": "doc",
    "tensorflow.raw_ops.SelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV2": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV3": "doc",
    "tensorflow.raw_ops.SparseSegmentSum": "doc",
    "tensorflow.raw_ops.StridedSliceGrad": "doc",
    "tensorflow.raw_ops.TFRecordReaderV2": "doc",
    "tensorflow.raw_ops.TakeWhileDataset": "doc",
    "tensorflow.raw_ops.TensorArrayClose": "doc",
    "tensorflow.raw_ops.TensorArraySplit": "doc",
    "tensorflow.raw_ops.TensorArrayWrite": "doc",
    "tensorflow.raw_ops.TensorListConcat": "doc",
    "tensorflow.raw_ops.TensorListLength": "doc",
    "tensorflow.raw_ops.TensorScatterAdd": "doc",
    "tensorflow.raw_ops.TensorScatterMax": "doc",
    "tensorflow.raw_ops.TensorScatterSub": "doc",
    "tensorflow.raw_ops.TextLineReaderV2": "doc",
    "tensorflow.raw_ops.ThreadPoolHandle": "doc",
    "tensorflow.raw_ops.TridiagonalSolve": "doc",
    "tensorflow.raw_ops.UnicodeTranscode": "doc",
    "tensorflow.raw_ops.UniqueWithCounts": "doc",
    "tensorflow.saved_model.experimental": "doc",
    "tensorflow.compat.v1.IdentityReader": "doc",
    "tensorflow.compat.v1.TextLineReader": "doc",
    "tensorflow.compat.v1.app.flags.Flag": "doc",
    "tensorflow.compat.v1.batch_to_space": "doc",
    "tensorflow.compat.v1.check_numerics": "doc",
    "tensorflow.compat.v1.cholesky_solve": "doc",
    "tensorflow.compat.v1.compat.as_text": "doc",
    "tensorflow.compat.v1.depth_to_space": "doc",
    "tensorflow.compat.v1.dynamic_stitch": "doc",
    "tensorflow.compat.v1.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.gfile.MakeDirs": "doc",
    "tensorflow.compat.v1.io.decode_jpeg": "doc",
    "tensorflow.compat.v1.io.encode_jpeg": "doc",
    "tensorflow.compat.v1.io.gfile.GFile": "doc",
    "tensorflow.compat.v1.io.gfile.isdir": "doc",
    "tensorflow.compat.v1.io.gfile.mkdir": "doc",
    "tensorflow.compat.v1.keras.datasets": "doc",
    "tensorflow.compat.v1.linalg.slogdet": "doc",
    "tensorflow.compat.v1.lite.constants": "doc",
    "tensorflow.compat.v1.math.bessel_i0": "doc",
    "tensorflow.compat.v1.math.bessel_i1": "doc",
    "tensorflow.compat.v1.math.not_equal": "doc",
    "tensorflow.compat.v1.math.polygamma": "doc",
    "tensorflow.compat.v1.nest.is_nested": "doc",
    "tensorflow.compat.v1.nn.avg_pool_v2": "doc",
    "tensorflow.compat.v1.nn.ctc_loss_v2": "doc",
    "tensorflow.compat.v1.nn.max_pool_v2": "doc",
    "tensorflow.compat.v1.numpy_function": "doc",
    "tensorflow.compat.v1.parallel_stack": "doc",
    "tensorflow.compat.v1.random.poisson": "doc",
    "tensorflow.compat.v1.random.shuffle": "doc",
    "tensorflow.compat.v1.random.uniform": "doc",
    "tensorflow.compat.v1.random_shuffle": "doc",
    "tensorflow.compat.v1.random_uniform": "doc",
    "tensorflow.compat.v1.recompute_grad": "doc",
    "tensorflow.compat.v1.scatter_nd_sub": "doc",
    "tensorflow.compat.v1.signal.irfft2d": "doc",
    "tensorflow.compat.v1.signal.irfft3d": "doc",
    "tensorflow.compat.v1.space_to_batch": "doc",
    "tensorflow.compat.v1.space_to_depth": "doc",
    "tensorflow.compat.v1.sparse.maximum": "doc",
    "tensorflow.compat.v1.sparse.minimum": "doc",
    "tensorflow.compat.v1.sparse.reshape": "doc",
    "tensorflow.compat.v1.sparse_reshape": "doc",
    "tensorflow.compat.v1.sparse_softmax": "doc",
    "tensorflow.compat.v1.summary.scalar": "doc",
    "tensorflow.compat.v1.test.Benchmark": "doc",
    "tensorflow.compat.v1.variable_scope": "doc",
    "tensorflow.data.experimental.unbatch": "doc",
    "tensorflow.errors.AlreadyExistsError": "doc",
    "tensorflow.errors.UnimplementedError": "doc",
    "tensorflow.experimental.numpy.append": "doc",
    "tensorflow.experimental.numpy.arccos": "doc",
    "tensorflow.experimental.numpy.argmax": "doc",
    "tensorflow.experimental.numpy.cumsum": "doc",
    "tensorflow.experimental.numpy.divmod": "doc",
    "tensorflow.experimental.numpy.dsplit": "doc",
    "tensorflow.experimental.numpy.dstack": "doc",
    "tensorflow.experimental.numpy.einsum": "doc",
    "tensorflow.experimental.numpy.fliplr": "doc",
    "tensorflow.experimental.numpy.flipud": "doc",
    "tensorflow.experimental.numpy.float_": "doc",
    "tensorflow.experimental.numpy.hsplit": "doc",
    "tensorflow.experimental.numpy.hstack": "doc",
    "tensorflow.experimental.numpy.isreal": "doc",
    "tensorflow.experimental.numpy.matmul": "doc",
    "tensorflow.experimental.numpy.nansum": "doc",
    "tensorflow.experimental.numpy.random": "doc",
    "tensorflow.experimental.numpy.select": "doc",
    "tensorflow.experimental.numpy.square": "doc",
    "tensorflow.experimental.numpy.uint16": "doc",
    "tensorflow.experimental.numpy.uint32": "doc",
    "tensorflow.experimental.numpy.uint64": "doc",
    "tensorflow.experimental.numpy.vander": "doc",
    "tensorflow.experimental.numpy.vsplit": "doc",
    "tensorflow.experimental.numpy.vstack": "doc",
    "tensorflow.keras.layers.AlphaDropout": "doc",
    "tensorflow.keras.layers.experimental": "doc",
    "tensorflow.keras.losses.KLDivergence": "doc",
    "tensorflow.losses.BinaryCrossentropy": "doc",
    "tensorflow.losses.mean_squared_error": "doc",
    "tensorflow.random.stateless_binomial": "doc",
    "tensorflow.raw_ops.BarrierInsertMany": "doc",
    "tensorflow.raw_ops.BatchCholeskyGrad": "doc",
    "tensorflow.raw_ops.CollectivePermute": "doc",
    "tensorflow.raw_ops.CompareAndBitpack": "doc",
    "tensorflow.raw_ops.DatasetToTFRecord": "doc",
    "tensorflow.raw_ops.DecodeAndCropJpeg": "doc",
    "tensorflow.raw_ops.DecodeJSONExample": "doc",
    "tensorflow.raw_ops.DeleteMemoryCache": "doc",
    "tensorflow.raw_ops.DeserializeSparse": "doc",
    "tensorflow.raw_ops.InitializeTableV2": "doc",
    "tensorflow.raw_ops.InterleaveDataset": "doc",
    "tensorflow.raw_ops.LSTMBlockCellGrad": "doc",
    "tensorflow.raw_ops.LookupTableExport": "doc",
    "tensorflow.raw_ops.LookupTableFindV2": "doc",
    "tensorflow.raw_ops.LookupTableImport": "doc",
    "tensorflow.raw_ops.LookupTableInsert": "doc",
    "tensorflow.raw_ops.MatrixExponential": "doc",
    "tensorflow.raw_ops.MaxPool3DGradGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppression": "doc",
    "tensorflow.raw_ops.OptimizeDatasetV2": "doc",
    "tensorflow.raw_ops.OptionalFromValue": "doc",
    "tensorflow.raw_ops.OrderedMapUnstage": "doc",
    "tensorflow.raw_ops.PrelinearizeTuple": "doc",
    "tensorflow.raw_ops.ResizeBicubicGrad": "doc",
    "tensorflow.raw_ops.ResourceCountUpTo": "doc",
    "tensorflow.raw_ops.ScaleAndTranslate": "doc",
    "tensorflow.raw_ops.SerializeIterator": "doc",
    "tensorflow.raw_ops.SnapshotDatasetV2": "doc",
    "tensorflow.raw_ops.SparseApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SparseCrossHashed": "doc",
    "tensorflow.raw_ops.SparseSegmentMean": "doc",
    "tensorflow.raw_ops.SquaredDifference": "doc",
    "tensorflow.raw_ops.TemporaryVariable": "doc",
    "tensorflow.raw_ops.TensorArrayConcat": "doc",
    "tensorflow.raw_ops.TensorArrayGradV2": "doc",
    "tensorflow.raw_ops.TensorArrayGradV3": "doc",
    "tensorflow.raw_ops.TensorArrayReadV2": "doc",
    "tensorflow.raw_ops.TensorArrayReadV3": "doc",
    "tensorflow.raw_ops.TensorArrayUnpack": "doc",
    "tensorflow.raw_ops.TensorListPopBack": "doc",
    "tensorflow.raw_ops.ThreadPoolDataset": "doc",
    "tensorflow.raw_ops.TridiagonalMatMul": "doc",
    "tensorflow.raw_ops.UncompressElement": "doc",
    "tensorflow.raw_ops.WholeFileReaderV2": "doc",
    "tensorflow.raw_ops.WriteAudioSummary": "doc",
    "tensorflow.raw_ops.WriteGraphSummary": "doc",
    "tensorflow.raw_ops.WriteImageSummary": "doc",
    "tensorflow.tpu.experimental.Topology": "doc",
    "tensorflow.compat.v1.FixedLenFeature": "doc",
    "tensorflow.compat.v1.SummaryMetadata": "doc",
    "tensorflow.compat.v1.TensorArraySpec": "doc",
    "tensorflow.compat.v1.WholeFileReader": "doc",
    "tensorflow.compat.v1.app.flags.FLAGS": "doc",
    "tensorflow.compat.v1.compat.as_bytes": "doc",
    "tensorflow.compat.v1.dimension_value": "doc",
    "tensorflow.compat.v1.dtypes.as_dtype": "doc",
    "tensorflow.compat.v1.flags.validator": "doc",
    "tensorflow.compat.v1.guarantee_const": "doc",
    "tensorflow.compat.v1.io.decode_proto": "doc",
    "tensorflow.compat.v1.io.encode_proto": "doc",
    "tensorflow.compat.v1.io.gfile.exists": "doc",
    "tensorflow.compat.v1.keras.callbacks": "doc",
    "tensorflow.compat.v1.linalg.cholesky": "doc",
    "tensorflow.compat.v1.linalg.eigvalsh": "doc",
    "tensorflow.compat.v1.linalg.lu_solve": "doc",
    "tensorflow.compat.v1.local_variables": "doc",
    "tensorflow.compat.v1.losses.add_loss": "doc",
    "tensorflow.compat.v1.losses.log_loss": "doc",
    "tensorflow.compat.v1.math.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.less_equal": "doc",
    "tensorflow.compat.v1.math.logical_or": "doc",
    "tensorflow.compat.v1.math.reciprocal": "doc",
    "tensorflow.compat.v1.math.reduce_all": "doc",
    "tensorflow.compat.v1.math.reduce_any": "doc",
    "tensorflow.compat.v1.math.reduce_max": "doc",
    "tensorflow.compat.v1.math.reduce_std": "doc",
    "tensorflow.compat.v1.math.reduce_sum": "doc",
    "tensorflow.compat.v1.math.scalar_mul": "doc",
    "tensorflow.compat.v1.matrix_set_diag": "doc",
    "tensorflow.compat.v1.matrix_solve_ls": "doc",
    "tensorflow.compat.v1.model_variables": "doc",
    "tensorflow.compat.v1.queue.FIFOQueue": "doc",
    "tensorflow.compat.v1.queue.QueueBase": "doc",
    "tensorflow.compat.v1.ragged.constant": "doc",
    "tensorflow.compat.v1.random.get_seed": "doc",
    "tensorflow.compat.v1.resource_loader": "doc",
    "tensorflow.compat.v1.set_random_seed": "doc",
    "tensorflow.compat.v1.sets.difference": "doc",
    "tensorflow.compat.v1.sparse.bincount": "doc",
    "tensorflow.compat.v1.sparse_to_dense": "doc",
    "tensorflow.compat.v1.summary.Summary": "doc",
    "tensorflow.compat.v1.tpu.PaddingSpec": "doc",
    "tensorflow.config.get_visible_devices": "doc",
    "tensorflow.config.set_visible_devices": "doc",
    "tensorflow.data.experimental.snapshot": "doc",
    "tensorflow.experimental.numpy.arccosh": "doc",
    "tensorflow.experimental.numpy.argsort": "doc",
    "tensorflow.experimental.numpy.asarray": "doc",
    "tensorflow.experimental.numpy.cumprod": "doc",
    "tensorflow.experimental.numpy.deg2rad": "doc",
    "tensorflow.experimental.numpy.float16": "doc",
    "tensorflow.experimental.numpy.float32": "doc",
    "tensorflow.experimental.numpy.float64": "doc",
    "tensorflow.experimental.numpy.inexact": "doc",
    "tensorflow.experimental.numpy.isclose": "doc",
    "tensorflow.experimental.numpy.maximum": "doc",
    "tensorflow.experimental.numpy.minimum": "doc",
    "tensorflow.experimental.numpy.nanmean": "doc",
    "tensorflow.experimental.numpy.nanprod": "doc",
    "tensorflow.experimental.numpy.ndarray": "doc",
    "tensorflow.experimental.numpy.object_": "doc",
    "tensorflow.experimental.numpy.polyval": "doc",
    "tensorflow.experimental.numpy.rad2deg": "doc",
    "tensorflow.experimental.numpy.reshape": "doc",
    "tensorflow.experimental.numpy.signbit": "doc",
    "tensorflow.experimental.numpy.squeeze": "doc",
    "tensorflow.keras.layers.DenseFeatures": "doc",
    "tensorflow.keras.layers.GaussianNoise": "doc",
    "tensorflow.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.keras.losses.kl_divergence": "doc",
    "tensorflow.losses.binary_crossentropy": "doc",
    "tensorflow.losses.mean_absolute_error": "doc",
    "tensorflow.raw_ops.BatchMatrixSetDiag": "doc",
    "tensorflow.raw_ops.BatchMatrixSolveLs": "doc",
    "tensorflow.raw_ops.CollectiveGatherV2": "doc",
    "tensorflow.raw_ops.CollectiveReduceV2": "doc",
    "tensorflow.raw_ops.ConcatenateDataset": "doc",
    "tensorflow.raw_ops.ConjugateTranspose": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV2": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV3": "doc",
    "tensorflow.raw_ops.DummySeedGenerator": "doc",
    "tensorflow.raw_ops.FusedBatchNormGrad": "doc",
    "tensorflow.raw_ops.GetSessionHandleV2": "doc",
    "tensorflow.raw_ops.InfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.InfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.LoadAndRemapMatrix": "doc",
    "tensorflow.raw_ops.MapAndBatchDataset": "doc",
    "tensorflow.raw_ops.MergeV2Checkpoints": "doc",
    "tensorflow.raw_ops.MutableHashTableV2": "doc",
    "tensorflow.raw_ops.PaddedBatchDataset": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueueV2": "doc",
    "tensorflow.raw_ops.ParallelMapDataset": "doc",
    "tensorflow.raw_ops.ParseSingleExample": "doc",
    "tensorflow.raw_ops.QueueDequeueManyV2": "doc",
    "tensorflow.raw_ops.QueueDequeueUpToV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueManyV2": "doc",
    "tensorflow.raw_ops.RandomShuffleQueue": "doc",
    "tensorflow.raw_ops.ReaderRestoreState": "doc",
    "tensorflow.raw_ops.ResizeBilinearGrad": "doc",
    "tensorflow.raw_ops.SparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.SparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.SparseMatrixMatMul": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtN": "doc",
    "tensorflow.raw_ops.StatefulUniformInt": "doc",
    "tensorflow.raw_ops.StaticRegexReplace": "doc",
    "tensorflow.raw_ops.StringToHashBucket": "doc",
    "tensorflow.raw_ops.TPUOrdinalSelector": "doc",
    "tensorflow.raw_ops.TPUPartitionedCall": "doc",
    "tensorflow.raw_ops.TPUReplicatedInput": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV2": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV3": "doc",
    "tensorflow.raw_ops.TensorArraySplitV2": "doc",
    "tensorflow.raw_ops.TensorArraySplitV3": "doc",
    "tensorflow.raw_ops.TensorListConcatV2": "doc",
    "tensorflow.raw_ops.TensorListPushBack": "doc",
    "tensorflow.raw_ops.TensorSliceDataset": "doc",
    "tensorflow.raw_ops.UniqueWithCountsV2": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMax": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMin": "doc",
    "tensorflow.raw_ops.UnsortedSegmentSum": "doc",
    "tensorflow.raw_ops.WriteScalarSummary": "doc",
    "tensorflow.sparse.sparse_dense_matmul": "doc",
    "tensorflow.xla.experimental.jit_scope": "doc",
    "tensorflow.compat.v1.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.RaggedTensorSpec": "doc",
    "tensorflow.compat.v1.SparseTensorSpec": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE": "doc",
    "tensorflow.compat.v1.audio.decode_wav": "doc",
    "tensorflow.compat.v1.audio.encode_wav": "doc",
    "tensorflow.compat.v1.confusion_matrix": "doc",
    "tensorflow.compat.v1.data.DatasetSpec": "doc",
    "tensorflow.compat.v1.flags.EnumParser": "doc",
    "tensorflow.compat.v1.flags.FlagValues": "doc",
    "tensorflow.compat.v1.get_static_value": "doc",
    "tensorflow.compat.v1.global_variables": "doc",
    "tensorflow.compat.v1.import_graph_def": "doc",
    "tensorflow.compat.v1.io.SparseFeature": "doc",
    "tensorflow.compat.v1.io.VarLenFeature": "doc",
    "tensorflow.compat.v1.io.decode_base64": "doc",
    "tensorflow.compat.v1.io.encode_base64": "doc",
    "tensorflow.compat.v1.keras.layers.Add": "doc",
    "tensorflow.compat.v1.keras.layers.Dot": "doc",
    "tensorflow.compat.v1.keras.layers.ELU": "doc",
    "tensorflow.compat.v1.keras.layers.GRU": "doc",
    "tensorflow.compat.v1.keras.layers.RNN": "doc",
    "tensorflow.compat.v1.keras.layers.add": "doc",
    "tensorflow.compat.v1.keras.layers.dot": "doc",
    "tensorflow.compat.v1.keras.losses.KLD": "doc",
    "tensorflow.compat.v1.keras.losses.MAE": "doc",
    "tensorflow.compat.v1.keras.losses.MSE": "doc",
    "tensorflow.compat.v1.keras.losses.get": "doc",
    "tensorflow.compat.v1.keras.losses.kld": "doc",
    "tensorflow.compat.v1.keras.losses.mae": "doc",
    "tensorflow.compat.v1.keras.losses.mse": "doc",
    "tensorflow.compat.v1.linalg.band_part": "doc",
    "tensorflow.compat.v1.linalg.diag_part": "doc",
    "tensorflow.compat.v1.manip.scatter_nd": "doc",
    "tensorflow.compat.v1.math.log_sigmoid": "doc",
    "tensorflow.compat.v1.math.logical_and": "doc",
    "tensorflow.compat.v1.math.logical_not": "doc",
    "tensorflow.compat.v1.math.logical_xor": "doc",
    "tensorflow.compat.v1.math.reduce_mean": "doc",
    "tensorflow.compat.v1.math.reduce_prod": "doc",
    "tensorflow.compat.v1.math.segment_max": "doc",
    "tensorflow.compat.v1.math.segment_sum": "doc",
    "tensorflow.compat.v1.matrix_diag_part": "doc",
    "tensorflow.compat.v1.quantized_concat": "doc",
    "tensorflow.compat.v1.reduce_logsumexp": "doc",
    "tensorflow.compat.v1.reverse_sequence": "doc",
    "tensorflow.compat.v1.saved_model.load": "doc",
    "tensorflow.compat.v1.saved_model.save": "doc",
    "tensorflow.compat.v1.self_adjoint_eig": "doc",
    "tensorflow.compat.v1.serialize_sparse": "doc",
    "tensorflow.compat.v1.sparse_transpose": "doc",
    "tensorflow.compat.v1.string_to_number": "doc",
    "tensorflow.compat.v1.tpu.experimental": "doc",
    "tensorflow.compat.v1.user_ops.my_fact": "doc",
    "tensorflow.compat.v1.xla.experimental": "doc",
    "tensorflow.errors.InvalidArgumentError": "doc",
    "tensorflow.experimental.numpy.allclose": "doc",
    "tensorflow.experimental.numpy.complex_": "doc",
    "tensorflow.experimental.numpy.compress": "doc",
    "tensorflow.experimental.numpy.diagflat": "doc",
    "tensorflow.experimental.numpy.identity": "doc",
    "tensorflow.experimental.numpy.isscalar": "doc",
    "tensorflow.experimental.numpy.linspace": "doc",
    "tensorflow.experimental.numpy.meshgrid": "doc",
    "tensorflow.experimental.numpy.multiply": "doc",
    "tensorflow.experimental.numpy.swapaxes": "doc",
    "tensorflow.experimental.numpy.unicode_": "doc",
    "tensorflow.random.get_global_generator": "doc",
    "tensorflow.random.set_global_generator": "doc",
    "tensorflow.raw_ops.AssignAddVariableOp": "doc",
    "tensorflow.raw_ops.AssignSubVariableOp": "doc",
    "tensorflow.raw_ops.BatchMatrixDiagPart": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEig": "doc",
    "tensorflow.raw_ops.BoostedTreesPredict": "doc",
    "tensorflow.raw_ops.CollectiveBcastRecv": "doc",
    "tensorflow.raw_ops.CollectiveBcastSend": "doc",
    "tensorflow.raw_ops.Conv2DBackpropInput": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInput": "doc",
    "tensorflow.raw_ops.CumulativeLogsumexp": "doc",
    "tensorflow.raw_ops.DebugNumericSummary": "doc",
    "tensorflow.raw_ops.DeleteSeedGenerator": "doc",
    "tensorflow.raw_ops.ExtractImagePatches": "doc",
    "tensorflow.raw_ops.IgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.LatencyStatsDataset": "doc",
    "tensorflow.raw_ops.LookupTableExportV2": "doc",
    "tensorflow.raw_ops.LookupTableImportV2": "doc",
    "tensorflow.raw_ops.LookupTableInsertV2": "doc",
    "tensorflow.raw_ops.LookupTableRemoveV2": "doc",
    "tensorflow.raw_ops.MultiDeviceIterator": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.OutfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.ParseExampleDataset": "doc",
    "tensorflow.raw_ops.SparseApplyAdadelta": "doc",
    "tensorflow.raw_ops.SparseApplyMomentum": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseAdd": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseDiv": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseMul": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRows": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmax": "doc",
    "tensorflow.raw_ops.SparseSparseMaximum": "doc",
    "tensorflow.raw_ops.TPUReplicatedOutput": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV2": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV3": "doc",
    "tensorflow.raw_ops.TensorScatterUpdate": "doc",
    "tensorflow.raw_ops.UnsortedSegmentJoin": "doc",
    "tensorflow.sysconfig.get_compile_flags": "doc",
    "tensorflow.compat.v1.IndexedSlicesSpec": "doc",
    "tensorflow.compat.v1.NotDifferentiable": "doc",
    "tensorflow.compat.v1.SparseTensorValue": "doc",
    "tensorflow.compat.v1.add_to_collection": "doc",
    "tensorflow.compat.v1.assert_less_equal": "doc",
    "tensorflow.compat.v1.assert_none_equal": "doc",
    "tensorflow.compat.v1.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.convert_to_tensor": "doc",
    "tensorflow.compat.v1.data.experimental": "doc",
    "tensorflow.compat.v1.decode_compressed": "doc",
    "tensorflow.compat.v1.executing_eagerly": "doc",
    "tensorflow.compat.v1.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.get_default_graph": "doc",
    "tensorflow.compat.v1.gfile.IsDirectory": "doc",
    "tensorflow.compat.v1.grad_pass_through": "doc",
    "tensorflow.compat.v1.io.gfile.makedirs": "doc",
    "tensorflow.compat.v1.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.keras.layers.LSTM": "doc",
    "tensorflow.compat.v1.keras.layers.ReLU": "doc",
    "tensorflow.compat.v1.keras.losses.Loss": "doc",
    "tensorflow.compat.v1.keras.losses.MAPE": "doc",
    "tensorflow.compat.v1.keras.losses.MSLE": "doc",
    "tensorflow.compat.v1.keras.losses.mape": "doc",
    "tensorflow.compat.v1.keras.losses.msle": "doc",
    "tensorflow.compat.v1.lite.experimental": "doc",
    "tensorflow.compat.v1.lite.toco_convert": "doc",
    "tensorflow.compat.v1.losses.get_losses": "doc",
    "tensorflow.compat.v1.losses.hinge_loss": "doc",
    "tensorflow.compat.v1.losses.huber_loss": "doc",
    "tensorflow.compat.v1.make_tensor_proto": "doc",
    "tensorflow.compat.v1.math.accumulate_n": "doc",
    "tensorflow.compat.v1.math.segment_mean": "doc",
    "tensorflow.compat.v1.math.segment_prod": "doc",
    "tensorflow.compat.v1.mlir.experimental": "doc",
    "tensorflow.compat.v1.nn.depth_to_space": "doc",
    "tensorflow.compat.v1.nn.space_to_batch": "doc",
    "tensorflow.compat.v1.nn.space_to_depth": "doc",
    "tensorflow.compat.v1.saved_model.Asset": "doc",
    "tensorflow.compat.v1.saved_model.utils": "doc",
    "tensorflow.compat.v1.scatter_nd_update": "doc",
    "tensorflow.compat.v1.space_to_batch_nd": "doc",
    "tensorflow.compat.v1.sparse.reduce_max": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum": "doc",
    "tensorflow.compat.v1.sparse_reduce_max": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum": "doc",
    "tensorflow.compat.v1.variable_op_scope": "doc",
    "tensorflow.data.experimental.CsvDataset": "doc",
    "tensorflow.data.experimental.take_while": "doc",
    "tensorflow.errors.DeadlineExceededError": "doc",
    "tensorflow.experimental.numpy.complex64": "doc",
    "tensorflow.experimental.numpy.conjugate": "doc",
    "tensorflow.experimental.numpy.full_like": "doc",
    "tensorflow.experimental.numpy.logaddexp": "doc",
    "tensorflow.experimental.numpy.not_equal": "doc",
    "tensorflow.keras.callbacks.experimental": "doc",
    "tensorflow.keras.datasets.fashion_mnist": "doc",
    "tensorflow.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.keras.layers.TimeDistributed": "doc",
    "tensorflow.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.lookup.StaticVocabularyTable": "doc",
    "tensorflow.random.stateless_categorical": "doc",
    "tensorflow.raw_ops.AnonymousMemoryCache": "doc",
    "tensorflow.raw_ops.ApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.CTCBeamSearchDecoder": "doc",
    "tensorflow.raw_ops.ChooseFastestDataset": "doc",
    "tensorflow.raw_ops.ExtractVolumePatches": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV3": "doc",
    "tensorflow.raw_ops.GroupByWindowDataset": "doc",
    "tensorflow.raw_ops.MatchingFilesDataset": "doc",
    "tensorflow.raw_ops.PaddedBatchDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelMapDatasetV2": "doc",
    "tensorflow.raw_ops.ParseSequenceExample": "doc",
    "tensorflow.raw_ops.RaggedTensorToSparse": "doc",
    "tensorflow.raw_ops.RandomShuffleQueueV2": "doc",
    "tensorflow.raw_ops.RandomStandardNormal": "doc",
    "tensorflow.raw_ops.RequantizePerChannel": "doc",
    "tensorflow.raw_ops.SlidingWindowDataset": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.SparseTensorDenseAdd": "doc",
    "tensorflow.raw_ops.StaticRegexFullMatch": "doc",
    "tensorflow.raw_ops.TPUReplicateMetadata": "doc",
    "tensorflow.compat.v1.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.add_to_collections": "doc",
    "tensorflow.compat.v1.app.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.compat.path_to_str": "doc",
    "tensorflow.compat.v1.enable_v2_behavior": "doc",
    "tensorflow.compat.v1.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.get_local_variable": "doc",
    "tensorflow.compat.v1.get_session_handle": "doc",
    "tensorflow.compat.v1.get_session_tensor": "doc",
    "tensorflow.compat.v1.get_variable_scope": "doc",
    "tensorflow.compat.v1.io.FixedLenFeature": "doc",
    "tensorflow.compat.v1.keras.experimental": "doc",
    "tensorflow.compat.v1.keras.layers.Dense": "doc",
    "tensorflow.compat.v1.keras.layers.Input": "doc",
    "tensorflow.compat.v1.keras.layers.Layer": "doc",
    "tensorflow.compat.v1.keras.layers.PReLU": "doc",
    "tensorflow.compat.v1.keras.losses.Hinge": "doc",
    "tensorflow.compat.v1.keras.losses.Huber": "doc",
    "tensorflow.compat.v1.keras.losses.hinge": "doc",
    "tensorflow.compat.v1.linalg.global_norm": "doc",
    "tensorflow.compat.v1.math.divide_no_nan": "doc",
    "tensorflow.compat.v1.math.greater_equal": "doc",
    "tensorflow.compat.v1.math.special.dawsn": "doc",
    "tensorflow.compat.v1.matrix_square_root": "doc",
    "tensorflow.compat.v1.nest.map_structure": "doc",
    "tensorflow.compat.v1.ragged.placeholder": "doc",
    "tensorflow.compat.v1.random.multinomial": "doc",
    "tensorflow.compat.v1.signal.hann_window": "doc",
    "tensorflow.compat.v1.sparse.expand_dims": "doc",
    "tensorflow.compat.v1.sparse.placeholder": "doc",
    "tensorflow.compat.v1.sparse.reset_shape": "doc",
    "tensorflow.compat.v1.sparse.segment_sum": "doc",
    "tensorflow.compat.v1.sparse_reset_shape": "doc",
    "tensorflow.compat.v1.sparse_segment_sum": "doc",
    "tensorflow.compat.v1.squared_difference": "doc",
    "tensorflow.compat.v1.summary.SessionLog": "doc",
    "tensorflow.compat.v1.tensor_scatter_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_sub": "doc",
    "tensorflow.compat.v1.tpu.bfloat16_scope": "doc",
    "tensorflow.compat.v1.types.experimental": "doc",
    "tensorflow.compat.v1.unique_with_counts": "doc",
    "tensorflow.experimental.numpy.asanyarray": "doc",
    "tensorflow.experimental.numpy.atleast_1d": "doc",
    "tensorflow.experimental.numpy.atleast_2d": "doc",
    "tensorflow.experimental.numpy.atleast_3d": "doc",
    "tensorflow.experimental.numpy.bitwise_or": "doc",
    "tensorflow.experimental.numpy.complex128": "doc",
    "tensorflow.experimental.numpy.issubdtype": "doc",
    "tensorflow.experimental.numpy.less_equal": "doc",
    "tensorflow.experimental.numpy.logaddexp2": "doc",
    "tensorflow.experimental.numpy.logical_or": "doc",
    "tensorflow.experimental.numpy.reciprocal": "doc",
    "tensorflow.keras.backend.is_keras_tensor": "doc",
    "tensorflow.keras.datasets.imdb.load_data": "doc",
    "tensorflow.keras.losses.CosineSimilarity": "doc",
    "tensorflow.keras.losses.MeanSquaredError": "doc",
    "tensorflow.keras.utils.CustomObjectScope": "doc",
    "tensorflow.raw_ops.BandedTriangularSolve": "doc",
    "tensorflow.raw_ops.ComputeAccidentalHits": "doc",
    "tensorflow.raw_ops.ConfigureTPUEmbedding": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInputV2": "doc",
    "tensorflow.raw_ops.DebugGradientIdentity": "doc",
    "tensorflow.raw_ops.DebugNumericSummaryV2": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNative": "doc",
    "tensorflow.raw_ops.DeserializeManySparse": "doc",
    "tensorflow.raw_ops.FractionalAvgPoolGrad": "doc",
    "tensorflow.raw_ops.FractionalMaxPoolGrad": "doc",
    "tensorflow.raw_ops.GroupByReducerDataset": "doc",
    "tensorflow.raw_ops.MatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.MutableDenseHashTable": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTupleV2": "doc",
    "tensorflow.raw_ops.ParallelDynamicStitch": "doc",
    "tensorflow.raw_ops.ParseExampleDatasetV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantize": "doc",
    "tensorflow.raw_ops.QuantizedInstanceNorm": "doc",
    "tensorflow.raw_ops.ScaleAndTranslateGrad": "doc",
    "tensorflow.raw_ops.SparseMatrixTranspose": "doc",
    "tensorflow.raw_ops.SparseReduceMaxSparse": "doc",
    "tensorflow.raw_ops.SparseReduceSumSparse": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanGrad": "doc",
    "tensorflow.raw_ops.StatelessRandomNormal": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandle": "doc",
    "tensorflow.raw_ops.WriteHistogramSummary": "doc",
    "tensorflow.summary.experimental.get_step": "doc",
    "tensorflow.summary.experimental.set_step": "doc",
    "tensorflow.compat.v1.app.flags.validator": "doc",
    "tensorflow.compat.v1.clip_by_global_norm": "doc",
    "tensorflow.compat.v1.config.experimental": "doc",
    "tensorflow.compat.v1.decode_json_example": "doc",
    "tensorflow.compat.v1.disable_v2_behavior": "doc",
    "tensorflow.compat.v1.errors.AbortedError": "doc",
    "tensorflow.compat.v1.errors.UnknownError": "doc",
    "tensorflow.compat.v1.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.gfile.ListDirectory": "doc",
    "tensorflow.compat.v1.io.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.io.serialize_sparse": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3D": "doc",
    "tensorflow.compat.v1.keras.layers.Lambda": "doc",
    "tensorflow.compat.v1.layers.experimental": "doc",
    "tensorflow.compat.v1.linalg.experimental": "doc",
    "tensorflow.compat.v1.lookup.experimental": "doc",
    "tensorflow.compat.v1.math.special.spence": "doc",
    "tensorflow.compat.v1.nn.conv1d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv3d_transpose": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup": "doc",
    "tensorflow.compat.v1.nn.fused_batch_norm": "doc",
    "tensorflow.compat.v1.nn.log_poisson_loss": "doc",
    "tensorflow.compat.v1.nn.quantized_conv2d": "doc",
    "tensorflow.compat.v1.nn.quantized_relu_x": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.GRUCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.RNNCell": "doc",
    "tensorflow.compat.v1.nn.separable_conv2d": "doc",
    "tensorflow.compat.v1.nn.weighted_moments": "doc",
    "tensorflow.compat.v1.ragged.boolean_mask": "doc",
    "tensorflow.compat.v1.random.experimental": "doc",
    "tensorflow.compat.v1.reset_default_graph": "doc",
    "tensorflow.compat.v1.saved_model.load_v2": "doc",
    "tensorflow.compat.v1.signal.inverse_mdct": "doc",
    "tensorflow.compat.v1.signal.inverse_stft": "doc",
    "tensorflow.compat.v1.sparse.SparseTensor": "doc",
    "tensorflow.compat.v1.sparse.segment_mean": "doc",
    "tensorflow.compat.v1.sparse_segment_mean": "doc",
    "tensorflow.compat.v1.tpu.shutdown_system": "doc",
    "tensorflow.experimental.async_clear_error": "doc",
    "tensorflow.experimental.numpy.array_equal": "doc",
    "tensorflow.experimental.numpy.bitwise_not": "doc",
    "tensorflow.experimental.numpy.bitwise_xor": "doc",
    "tensorflow.experimental.numpy.expand_dims": "doc",
    "tensorflow.experimental.numpy.logical_and": "doc",
    "tensorflow.experimental.numpy.logical_not": "doc",
    "tensorflow.experimental.numpy.logical_xor": "doc",
    "tensorflow.experimental.numpy.random.seed": "doc",
    "tensorflow.keras.experimental.CosineDecay": "doc",
    "tensorflow.keras.experimental.LinearModel": "doc",
    "tensorflow.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.keras.losses.cosine_similarity": "doc",
    "tensorflow.keras.utils.get_custom_objects": "doc",
    "tensorflow.raw_ops.BoostedTreesCenterBias": "doc",
    "tensorflow.raw_ops.DatasetToSingleElement": "doc",
    "tensorflow.raw_ops.DenseCountSparseOutput": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRelu": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNGrad": "doc",
    "tensorflow.raw_ops.StatefulRandomBinomial": "doc",
    "tensorflow.raw_ops.StatefulStandardNormal": "doc",
    "tensorflow.raw_ops.StatefulUniformFullInt": "doc",
    "tensorflow.raw_ops.StatelessRandomGammaV2": "doc",
    "tensorflow.raw_ops.StatelessRandomPoisson": "doc",
    "tensorflow.raw_ops.StatsAggregatorSummary": "doc",
    "tensorflow.raw_ops.StringToHashBucketFast": "doc",
    "tensorflow.compat.v1.app.flags.EnumParser": "doc",
    "tensorflow.compat.v1.app.flags.FlagValues": "doc",
    "tensorflow.compat.v1.assert_greater_equal": "doc",
    "tensorflow.compat.v1.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.batch_scatter_update": "doc",
    "tensorflow.compat.v1.clip_by_average_norm": "doc",
    "tensorflow.compat.v1.config.LogicalDevice": "doc",
    "tensorflow.compat.v1.data.TFRecordDataset": "doc",
    "tensorflow.compat.v1.data.TextLineDataset": "doc",
    "tensorflow.compat.v1.errors.DataLossError": "doc",
    "tensorflow.compat.v1.errors.NotFoundError": "doc",
    "tensorflow.compat.v1.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.flags.get_help_width": "doc",
    "tensorflow.compat.v1.initialize_variables": "doc",
    "tensorflow.compat.v1.io.decode_compressed": "doc",
    "tensorflow.compat.v1.keras.backend.floatx": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist": "doc",
    "tensorflow.compat.v1.keras.layers.GRUCell": "doc",
    "tensorflow.compat.v1.keras.layers.maximum": "doc",
    "tensorflow.compat.v1.keras.layers.minimum": "doc",
    "tensorflow.compat.v1.keras.losses.LogCosh": "doc",
    "tensorflow.compat.v1.keras.losses.logcosh": "doc",
    "tensorflow.compat.v1.keras.losses.poisson": "doc",
    "tensorflow.compat.v1.keras.utils.Sequence": "doc",
    "tensorflow.compat.v1.layers.max_pooling1d": "doc",
    "tensorflow.compat.v1.layers.max_pooling2d": "doc",
    "tensorflow.compat.v1.layers.max_pooling3d": "doc",
    "tensorflow.compat.v1.lite.TFLiteConverter": "doc",
    "tensorflow.compat.v1.lite.experimental.nn": "doc",
    "tensorflow.compat.v1.lookup.TextFileIndex": "doc",
    "tensorflow.compat.v1.math.multiply_no_nan": "doc",
    "tensorflow.compat.v1.math.reduce_variance": "doc",
    "tensorflow.compat.v1.nn.collapse_repeated": "doc",
    "tensorflow.compat.v1.nn.ctc_unique_labels": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMCell": "doc",
    "tensorflow.compat.v1.parse_single_example": "doc",
    "tensorflow.compat.v1.self_adjoint_eigvals": "doc",
    "tensorflow.compat.v1.test.gpu_device_name": "doc",
    "tensorflow.compat.v1.type_spec_from_value": "doc",
    "tensorflow.compat.v1.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.unsorted_segment_sum": "doc",
    "tensorflow.data.experimental.get_structure": "doc",
    "tensorflow.data.experimental.ignore_errors": "doc",
    "tensorflow.data.experimental.latency_stats": "doc",
    "tensorflow.data.experimental.map_and_batch": "doc",
    "tensorflow.experimental.dlpack.from_dlpack": "doc",
    "tensorflow.experimental.numpy.broadcast_to": "doc",
    "tensorflow.experimental.numpy.iscomplexobj": "doc",
    "tensorflow.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.keras.losses.mean_squared_error": "doc",
    "tensorflow.keras.utils.custom_object_scope": "doc",
    "tensorflow.lite.experimental.load_delegate": "doc",
    "tensorflow.losses.categorical_crossentropy": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropInput": "doc",
    "tensorflow.raw_ops.FusedResizeAndPadConv2D": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorInit": "doc",
    "tensorflow.raw_ops.MutableDenseHashTableV2": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBias": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBias": "doc",
    "tensorflow.raw_ops.SparseCountSparseOutput": "doc",
    "tensorflow.raw_ops.SparseTensorDenseMatMul": "doc",
    "tensorflow.raw_ops.StatefulTruncatedNormal": "doc",
    "tensorflow.raw_ops.StatelessRandomBinomial": "doc",
    "tensorflow.raw_ops.StatelessRandomNormalV2": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandleV2": "doc",
    "tensorflow.raw_ops.TensorListPushBackBatch": "doc",
    "tensorflow.compat.v1.app.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.app.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.config.PhysicalDevice": "doc",
    "tensorflow.compat.v1.enable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.errors.CancelledError": "doc",
    "tensorflow.compat.v1.extract_image_patches": "doc",
    "tensorflow.compat.v1.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.flags.ValidationError": "doc",
    "tensorflow.compat.v1.initialize_all_tables": "doc",
    "tensorflow.compat.v1.io.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.io.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNGRU": "doc",
    "tensorflow.compat.v1.keras.layers.LSTMCell": "doc",
    "tensorflow.compat.v1.keras.layers.multiply": "doc",
    "tensorflow.compat.v1.keras.losses.log_cosh": "doc",
    "tensorflow.compat.v1.linalg.cholesky_solve": "doc",
    "tensorflow.compat.v1.linalg.lu_reconstruct": "doc",
    "tensorflow.compat.v1.losses.get_total_loss": "doc",
    "tensorflow.compat.v1.math.confusion_matrix": "doc",
    "tensorflow.compat.v1.math.reduce_logsumexp": "doc",
    "tensorflow.compat.v1.nest.pack_sequence_as": "doc",
    "tensorflow.compat.v1.nn.quantized_avg_pool": "doc",
    "tensorflow.compat.v1.nn.quantized_max_pool": "doc",
    "tensorflow.compat.v1.ragged.constant_value": "doc",
    "tensorflow.compat.v1.saved_model.constants": "doc",
    "tensorflow.compat.v1.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.signal.hamming_window": "doc",
    "tensorflow.compat.v1.sparse_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket": "doc",
    "tensorflow.compat.v1.summary.Summary.Audio": "doc",
    "tensorflow.compat.v1.summary.Summary.Image": "doc",
    "tensorflow.compat.v1.summary.Summary.Value": "doc",
    "tensorflow.compat.v1.sysconfig.get_include": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_max": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_sub": "doc",
    "tensorflow.compat.v1.tensor_scatter_update": "doc",
    "tensorflow.compat.v1.test.benchmark_config": "doc",
    "tensorflow.compat.v1.test.is_gpu_available": "doc",
    "tensorflow.compat.v1.tpu.cross_replica_sum": "doc",
    "tensorflow.compat.v1.tpu.initialize_system": "doc",
    "tensorflow.config.get_soft_device_placement": "doc",
    "tensorflow.config.set_soft_device_placement": "doc",
    "tensorflow.data.experimental.copy_to_device": "doc",
    "tensorflow.experimental.numpy.greater_equal": "doc",
    "tensorflow.experimental.numpy.random.random": "doc",
    "tensorflow.keras.experimental.WideDeepModel": "doc",
    "tensorflow.keras.losses.binary_crossentropy": "doc",
    "tensorflow.keras.losses.mean_absolute_error": "doc",
    "tensorflow.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.raw_ops.AccumulatorSetGlobalStep": "doc",
    "tensorflow.raw_ops.DebugGradientRefIdentity": "doc",
    "tensorflow.raw_ops.ExperimentalSleepDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDataset": "doc",
    "tensorflow.raw_ops.PrivateThreadPoolDataset": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseMatMul": "doc",
    "tensorflow.raw_ops.SparseTensorSliceDataset": "doc",
    "tensorflow.raw_ops.StatefulStandardNormalV2": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformV2": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormal": "doc",
    "tensorflow.raw_ops.StringToHashBucketStrong": "doc",
    "tensorflow.raw_ops.TensorArrayGradWithShape": "doc",
    "tensorflow.raw_ops.TensorStridedSliceUpdate": "doc",
    "tensorflow.raw_ops.UnicodeDecodeWithOffsets": "doc",
    "tensorflow.required_space_to_batch_paddings": "doc",
    "tensorflow.saved_model.contains_saved_model": "doc",
    "tensorflow.compat.v1.add_check_numerics_ops": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.broadcast_static_shape": "doc",
    "tensorflow.compat.v1.compat.dimension_value": "doc",
    "tensorflow.compat.v1.disable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.enable_control_flow_v2": "doc",
    "tensorflow.compat.v1.enable_eager_execution": "doc",
    "tensorflow.compat.v1.enable_tensor_equality": "doc",
    "tensorflow.compat.v1.errors.OutOfRangeError": "doc",
    "tensorflow.compat.v1.extract_volume_patches": "doc",
    "tensorflow.compat.v1.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.io.decode_json_example": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNLSTM": "doc",
    "tensorflow.compat.v1.keras.layers.LeakyReLU": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNN": "doc",
    "tensorflow.compat.v1.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.lookup.StaticHashTable": "doc",
    "tensorflow.compat.v1.losses.cosine_distance": "doc",
    "tensorflow.compat.v1.math.reciprocal_no_nan": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1": "doc",
    "tensorflow.compat.v1.math.special.bessel_j0": "doc",
    "tensorflow.compat.v1.math.special.bessel_j1": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1": "doc",
    "tensorflow.compat.v1.math.special.bessel_y0": "doc",
    "tensorflow.compat.v1.math.special.bessel_y1": "doc",
    "tensorflow.compat.v1.nn.with_space_to_batch": "doc",
    "tensorflow.compat.v1.queue.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.ragged.map_flat_values": "doc",
    "tensorflow.compat.v1.random.set_random_seed": "doc",
    "tensorflow.compat.v1.random.stateless_gamma": "doc",
    "tensorflow.compat.v1.signal.overlap_and_add": "doc",
    "tensorflow.compat.v1.sparse.fill_empty_rows": "doc",
    "tensorflow.compat.v1.sparse_fill_empty_rows": "doc",
    "tensorflow.compat.v1.sparse_tensor_to_dense": "doc",
    "tensorflow.compat.v1.test.is_built_with_xla": "doc",
    "tensorflow.compat.v1.test.test_src_dir_path": "doc",
    "tensorflow.compat.v1.variable_creator_scope": "doc",
    "tensorflow.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.data.experimental.StatsAggregator": "doc",
    "tensorflow.data.experimental.group_by_window": "doc",
    "tensorflow.experimental.numpy.random.uniform": "doc",
    "tensorflow.random.stateless_truncated_normal": "doc",
    "tensorflow.raw_ops.AccumulatorNumAccumulated": "doc",
    "tensorflow.raw_ops.CombinedNonMaxSuppression": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParams": "doc",
    "tensorflow.raw_ops.DeleteRandomSeedGenerator": "doc",
    "tensorflow.raw_ops.DirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.EncodeJpegVariableQuality": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReaderV2": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensors": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DPerChannel": "doc",
    "tensorflow.raw_ops.SendTPUEmbeddingGradients": "doc",
    "tensorflow.raw_ops.SetStatsAggregatorDataset": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDatasetV2": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformInt": "doc",
    "tensorflow.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.compat.v1.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.VariableSynchronization": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.broadcast_dynamic_shape": "doc",
    "tensorflow.compat.v1.disable_control_flow_v2": "doc",
    "tensorflow.compat.v1.disable_eager_execution": "doc",
    "tensorflow.compat.v1.disable_tensor_equality": "doc",
    "tensorflow.compat.v1.errors.UnavailableError": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.gfile.DeleteRecursively": "doc",
    "tensorflow.compat.v1.io.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.io.match_filenames_once": "doc",
    "tensorflow.compat.v1.io.parse_single_example": "doc",
    "tensorflow.compat.v1.keras.callbacks.History": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100": "doc",
    "tensorflow.compat.v1.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.compat.v1.keras.models.save_model": "doc",
    "tensorflow.compat.v1.layers.conv2d_transpose": "doc",
    "tensorflow.compat.v1.layers.conv3d_transpose": "doc",
    "tensorflow.compat.v1.layers.separable_conv1d": "doc",
    "tensorflow.compat.v1.layers.separable_conv2d": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag_part": "doc",
    "tensorflow.compat.v1.manip.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.manip.space_to_batch_nd": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1e": "doc",
    "tensorflow.compat.v1.math.squared_difference": "doc",
    "tensorflow.compat.v1.matrix_triangular_solve": "doc",
    "tensorflow.compat.v1.nn.compute_average_loss": "doc",
    "tensorflow.compat.v1.nn.sampled_softmax_loss": "doc",
    "tensorflow.compat.v1.random.create_rng_state": "doc",
    "tensorflow.compat.v1.random.stateless_normal": "doc",
    "tensorflow.compat.v1.saved_model.simple_save": "doc",
    "tensorflow.compat.v1.summary.FileWriterCache": "doc",
    "tensorflow.compat.v1.test.is_built_with_cuda": "doc",
    "tensorflow.compat.v1.test.is_built_with_rocm": "doc",
    "tensorflow.data.experimental.group_by_reducer": "doc",
    "tensorflow.data.experimental.make_csv_dataset": "doc",
    "tensorflow.experimental.numpy.take_along_axis": "doc",
    "tensorflow.keras.utils.pack_x_y_sample_weight": "doc",
    "tensorflow.keras.utils.serialize_keras_object": "doc",
    "tensorflow.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.mlir.experimental.convert_function": "doc",
    "tensorflow.raw_ops.BatchMatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.BoostedTreesAggregateStats": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateEnsemble": "doc",
    "tensorflow.raw_ops.ChooseFastestBranchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalRebatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalUnbatchDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDatasetV2": "doc",
    "tensorflow.raw_ops.InitializeTableFromDataset": "doc",
    "tensorflow.raw_ops.ParseSingleSequenceExample": "doc",
    "tensorflow.raw_ops.QuantizeDownAndShrinkRange": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBox": "doc",
    "tensorflow.raw_ops.SparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormalV2": "doc",
    "tensorflow.summary.experimental.summary_scope": "doc",
    "tensorflow.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.compat.v1.ConfigProto.Experimental": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.app.flags.get_help_width": "doc",
    "tensorflow.compat.v1.data.experimental.unique": "doc",
    "tensorflow.compat.v1.experimental.async_scope": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.initialize_all_variables": "doc",
    "tensorflow.compat.v1.io.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.keras.backend.name_scope": "doc",
    "tensorflow.compat.v1.keras.backend.set_floatx": "doc",
    "tensorflow.compat.v1.keras.callbacks.Callback": "doc",
    "tensorflow.compat.v1.keras.utils.model_to_dot": "doc",
    "tensorflow.compat.v1.math.special.fresnel_cos": "doc",
    "tensorflow.compat.v1.moving_average_variables": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicRNNCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.MultiRNNCell": "doc",
    "tensorflow.compat.v1.nn.sufficient_statistics": "doc",
    "tensorflow.compat.v1.placeholder_with_default": "doc",
    "tensorflow.compat.v1.queue.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.ragged.RaggedTensorValue": "doc",
    "tensorflow.compat.v1.random.stateless_poisson": "doc",
    "tensorflow.compat.v1.random.stateless_uniform": "doc",
    "tensorflow.compat.v1.saved_model.experimental": "doc",
    "tensorflow.compat.v1.sparse.reduce_max_sparse": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum_sparse": "doc",
    "tensorflow.compat.v1.sparse_reduce_max_sparse": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum_sparse": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_update": "doc",
    "tensorflow.config.experimental_connect_to_host": "doc",
    "tensorflow.data.experimental.enumerate_dataset": "doc",
    "tensorflow.experimental.function_executor_type": "doc",
    "tensorflow.experimental.numpy.broadcast_arrays": "doc",
    "tensorflow.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.random.experimental.stateless_split": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParamsV2": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFile": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensorsV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV3": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV4": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformIntV2": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.app.flags.ValidationError": "doc",
    "tensorflow.compat.v1.data.experimental.unbatch": "doc",
    "tensorflow.compat.v1.errors.AlreadyExistsError": "doc",
    "tensorflow.compat.v1.errors.UnimplementedError": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_string": "doc",
    "tensorflow.compat.v1.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.io.parse_sequence_example": "doc",
    "tensorflow.compat.v1.keras.layers.AlphaDropout": "doc",
    "tensorflow.compat.v1.keras.layers.experimental": "doc",
    "tensorflow.compat.v1.keras.losses.KLDivergence": "doc",
    "tensorflow.compat.v1.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.math.cumulative_logsumexp": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sum": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicLSTMCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DeviceWrapper": "doc",
    "tensorflow.compat.v1.random.stateless_binomial": "doc",
    "tensorflow.compat.v1.saved_model.tag_constants": "doc",
    "tensorflow.compat.v1.summary.TaggedRunMetadata": "doc",
    "tensorflow.compat.v1.tpu.experimental.Topology": "doc",
    "tensorflow.config.experimental.get_memory_usage": "doc",
    "tensorflow.data.experimental.get_single_element": "doc",
    "tensorflow.data.experimental.prefetch_to_device": "doc",
    "tensorflow.data.experimental.rejection_resample": "doc",
    "tensorflow.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.experimental.numpy.ascontiguousarray": "doc",
    "tensorflow.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.keras.utils.unpack_x_y_sample_weight": "doc",
    "tensorflow.random.experimental.create_rng_state": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeStatsSummary": "doc",
    "tensorflow.raw_ops.ExperimentalAutoShardDataset": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolHandle": "doc",
    "tensorflow.raw_ops.GenerateBoundingBoxProposals": "doc",
    "tensorflow.raw_ops.ParameterizedTruncatedNormal": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRequantize": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBoxV2": "doc",
    "tensorflow.compat.v1.ConditionalAccumulatorBase": "doc",
    "tensorflow.compat.v1.SummaryMetadata.PluginData": "doc",
    "tensorflow.compat.v1.TensorInfo.CompositeTensor": "doc",
    "tensorflow.compat.v1.app.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.config.get_visible_devices": "doc",
    "tensorflow.compat.v1.config.set_visible_devices": "doc",
    "tensorflow.compat.v1.data.experimental.snapshot": "doc",
    "tensorflow.compat.v1.histogram_fixed_width_bins": "doc",
    "tensorflow.compat.v1.initialize_local_variables": "doc",
    "tensorflow.compat.v1.io.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.keras.layers.DenseFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianNoise": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.compat.v1.keras.losses.kl_divergence": "doc",
    "tensorflow.compat.v1.losses.absolute_difference": "doc",
    "tensorflow.compat.v1.math.reduce_euclidean_norm": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.compute_accidental_hits": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMStateTuple": "doc",
    "tensorflow.compat.v1.quantize_and_dequantize_v4": "doc",
    "tensorflow.compat.v1.resource_variables_enabled": "doc",
    "tensorflow.compat.v1.sparse.sparse_dense_matmul": "doc",
    "tensorflow.compat.v1.sparse_tensor_dense_matmul": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.summary.SummaryDescription": "doc",
    "tensorflow.compat.v1.summary.all_v2_summary_ops": "doc",
    "tensorflow.compat.v1.xla.experimental.jit_scope": "doc",
    "tensorflow.config.experimental.get_device_policy": "doc",
    "tensorflow.config.experimental.get_memory_growth": "doc",
    "tensorflow.config.experimental.set_device_policy": "doc",
    "tensorflow.config.experimental.set_memory_growth": "doc",
    "tensorflow.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.random.experimental.stateless_fold_in": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolDataset": "doc",
    "tensorflow.raw_ops.SparseAccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullInt": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.app.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.errors.InvalidArgumentError": "doc",
    "tensorflow.compat.v1.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.keras.callbacks.TensorBoard": "doc",
    "tensorflow.compat.v1.nn.static_bidirectional_rnn": "doc",
    "tensorflow.compat.v1.random.get_global_generator": "doc",
    "tensorflow.compat.v1.random.set_global_generator": "doc",
    "tensorflow.compat.v1.sysconfig.get_compile_flags": "doc",
    "tensorflow.compat.v1.test.assert_equal_graph_def": "doc",
    "tensorflow.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.config.experimental.get_device_details": "doc",
    "tensorflow.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.data.experimental.choose_from_datasets": "doc",
    "tensorflow.data.experimental.get_next_as_optional": "doc",
    "tensorflow.data.experimental.sample_from_datasets": "doc",
    "tensorflow.experimental.tensorrt.ConversionParams": "doc",
    "tensorflow.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseBatch": "doc",
    "tensorflow.raw_ops.SparseAccumulatorApplyGradient": "doc",
    "tensorflow.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.compat.v1.ConfigProto.DeviceCountEntry": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.app.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.app.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.app.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.data.experimental.CsvDataset": "doc",
    "tensorflow.compat.v1.data.experimental.take_while": "doc",
    "tensorflow.compat.v1.errors.DeadlineExceededError": "doc",
    "tensorflow.compat.v1.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.keras.callbacks.CallbackList": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist": "doc",
    "tensorflow.compat.v1.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianDropout": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.StackedRNNCells": "doc",
    "tensorflow.compat.v1.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.compat.v1.keras.layers.TimeDistributed": "doc",
    "tensorflow.compat.v1.keras.models.model_from_json": "doc",
    "tensorflow.compat.v1.keras.models.model_from_yaml": "doc",
    "tensorflow.compat.v1.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.compat.v1.lookup.StaticVocabularyTable": "doc",
    "tensorflow.compat.v1.losses.compute_weighted_loss": "doc",
    "tensorflow.compat.v1.losses.sigmoid_cross_entropy": "doc",
    "tensorflow.compat.v1.losses.softmax_cross_entropy": "doc",
    "tensorflow.compat.v1.nn.scale_regularization_loss": "doc",
    "tensorflow.compat.v1.random.stateless_categorical": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_strong": "doc",
    "tensorflow.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.config.experimental.get_visible_devices": "doc",
    "tensorflow.config.experimental.set_visible_devices": "doc",
    "tensorflow.config.get_logical_device_configuration": "doc",
    "tensorflow.config.set_logical_device_configuration": "doc",
    "tensorflow.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.data.experimental.parse_example_dataset": "doc",
    "tensorflow.experimental.register_filesystem_plugin": "doc",
    "tensorflow.raw_ops.BoostedTreesExampleDebugOutputs": "doc",
    "tensorflow.raw_ops.ExperimentalLatencyStatsDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgsGradient": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsGradient": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullIntV2": "doc",
    "tensorflow.compat.v1.NodeDef.ExperimentalDebugInfo": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_string": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.data.FixedLengthRecordDataset": "doc",
    "tensorflow.compat.v1.keras.backend.is_keras_tensor": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.load_data": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.compat.v1.keras.losses.CosineSimilarity": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.utils.CustomObjectScope": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder_v2": "doc",
    "tensorflow.compat.v1.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.resource_loader.load_resource": "doc",
    "tensorflow.compat.v1.saved_model.experimental.save": "doc",
    "tensorflow.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.random.experimental.get_global_generator": "doc",
    "tensorflow.random.experimental.set_global_generator": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseAggregateStats": "doc",
    "tensorflow.raw_ops.ExperimentalChooseFastestDataset": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBias": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanWithNumSegments": "doc",
    "tensorflow.compat.v1.experimental.async_clear_error": "doc",
    "tensorflow.compat.v1.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecay": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearModel": "doc",
    "tensorflow.compat.v1.keras.layers.AdditiveAttention": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_similarity": "doc",
    "tensorflow.compat.v1.keras.models.model_from_config": "doc",
    "tensorflow.compat.v1.keras.utils.get_custom_objects": "doc",
    "tensorflow.compat.v1.saved_model.is_valid_signature": "doc",
    "tensorflow.compat.v1.test.is_built_with_gpu_support": "doc",
    "tensorflow.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorHandle": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannel": "doc",
    "tensorflow.raw_ops.LegacyParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorToStringHandle": "doc",
    "tensorflow.compat.v1.app.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.app.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.app.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.app.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.data.experimental.get_structure": "doc",
    "tensorflow.compat.v1.data.experimental.ignore_errors": "doc",
    "tensorflow.compat.v1.data.experimental.latency_stats": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch": "doc",
    "tensorflow.compat.v1.keras.backend.image_data_format": "doc",
    "tensorflow.compat.v1.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.compat.v1.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.keras.utils.custom_object_scope": "doc",
    "tensorflow.compat.v1.lite.experimental.load_delegate": "doc",
    "tensorflow.compat.v1.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.saved_model.build_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.signature_constants": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils": "doc",
    "tensorflow.compat.v1.summary.get_summary_description": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdamParameters": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropInput": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorSummary": "doc",
    "tensorflow.compat.v1.app.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.config.get_soft_device_placement": "doc",
    "tensorflow.compat.v1.config.set_soft_device_placement": "doc",
    "tensorflow.compat.v1.data.experimental.copy_to_device": "doc",
    "tensorflow.compat.v1.io.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.compat.v1.keras.experimental.WideDeepModel": "doc",
    "tensorflow.compat.v1.keras.losses.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_error": "doc",
    "tensorflow.compat.v1.nondifferentiable_batch_function": "doc",
    "tensorflow.compat.v1.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.compat.v1.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.compat.v1.required_space_to_batch_paddings": "doc",
    "tensorflow.compat.v1.saved_model.contains_saved_model": "doc",
    "tensorflow.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorFromStringHandle": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.StatelessSampleDistortedBoundingBox": "doc",
    "tensorflow.compat.v1.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.compat.v1.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.compat.v1.data.experimental.StatsAggregator": "doc",
    "tensorflow.compat.v1.data.experimental.TensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_window": "doc",
    "tensorflow.compat.v1.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.compat.v1.random.stateless_truncated_normal": "doc",
    "tensorflow.compat.v1.saved_model.predict_signature_def": "doc",
    "tensorflow.compat.v1.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding_column": "doc",
    "tensorflow.raw_ops.BoostedTreesEnsembleResourceHandleOp": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingRaggedTensorBatch": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseTensorBatch": "doc",
    "tensorflow.compat.v1.data.experimental.DatasetStructure": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_reducer": "doc",
    "tensorflow.compat.v1.data.experimental.make_csv_dataset": "doc",
    "tensorflow.compat.v1.keras.utils.serialize_keras_object": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TfLiteRNNCell": "doc",
    "tensorflow.compat.v1.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.compat.v1.losses.mean_pairwise_squared_error": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_function": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.keras.callbacks.experimental.BackupAndRestore": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.ExperimentalParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSetStatsAggregatorDataset": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_host": "doc",
    "tensorflow.compat.v1.data.experimental.OptionalStructure": "doc",
    "tensorflow.compat.v1.data.experimental.enumerate_dataset": "doc",
    "tensorflow.compat.v1.executing_eagerly_outside_functions": "doc",
    "tensorflow.compat.v1.experimental.function_executor_type": "doc",
    "tensorflow.compat.v1.keras.backend.set_image_data_format": "doc",
    "tensorflow.compat.v1.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.compat.v1.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.compat.v1.layers.experimental.set_keras_style": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TFLiteLSTMCell": "doc",
    "tensorflow.compat.v1.losses.sparse_softmax_cross_entropy": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_split": "doc",
    "tensorflow.compat.v1.register_tensor_conversion_function": "doc",
    "tensorflow.compat.v1.resource_loader.get_data_files_path": "doc",
    "tensorflow.compat.v1.resource_loader.readahead_file_path": "doc",
    "tensorflow.compat.v1.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_usage": "doc",
    "tensorflow.compat.v1.data.experimental.get_single_element": "doc",
    "tensorflow.compat.v1.data.experimental.prefetch_to_device": "doc",
    "tensorflow.compat.v1.data.experimental.rejection_resample": "doc",
    "tensorflow.compat.v1.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.compat.v1.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.compat.v1.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.random.experimental.create_rng_state": "doc",
    "tensorflow.compat.v1.saved_model.regression_signature_def": "doc",
    "tensorflow.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplitV2": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_growth": "doc",
    "tensorflow.compat.v1.config.experimental.set_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.set_memory_growth": "doc",
    "tensorflow.compat.v1.keras.layers.enable_v2_dtype_behavior": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.layers.experimental.keras_style_scope": "doc",
    "tensorflow.compat.v1.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_fold_in": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestGainsPerFeature": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateQuantileStreamResource": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_details": "doc",
    "tensorflow.compat.v1.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.compat.v1.data.experimental.choose_from_datasets": "doc",
    "tensorflow.compat.v1.data.experimental.get_next_as_optional": "doc",
    "tensorflow.compat.v1.data.experimental.sample_from_datasets": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.compat.v1.keras.layers.disable_v2_dtype_behavior": "doc",
    "tensorflow.compat.v1.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannelGradient": "doc",
    "tensorflow.raw_ops.QuantizedBatchNormWithGlobalNormalization": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.compat.v1.config.experimental.get_visible_devices": "doc",
    "tensorflow.compat.v1.config.experimental.set_visible_devices": "doc",
    "tensorflow.compat.v1.config.get_logical_device_configuration": "doc",
    "tensorflow.compat.v1.config.set_logical_device_configuration": "doc",
    "tensorflow.compat.v1.data.experimental.SparseTensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.compat.v1.data.experimental.parse_example_dataset": "doc",
    "tensorflow.compat.v1.errors.raise_exception_on_not_ok_status": "doc",
    "tensorflow.compat.v1.experimental.register_filesystem_plugin": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceHandleOp": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.random.experimental.get_global_generator": "doc",
    "tensorflow.compat.v1.random.experimental.set_global_generator": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndReluAndRequantize": "doc",
    "tensorflow.compat.v1.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_input": "doc",
    "tensorflow.compat.v1.tpu.experimental.shared_embedding_columns": "doc",
    "tensorflow.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.compat.v1.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.app.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.compat.v1.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.compat.v1.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSignedSumAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.is_valid_signature": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceGetBucketBoundaries": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.build_signature_def": "doc",
    "tensorflow.compat.v1.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.compat.v1.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch_with_legacy_function": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.predict_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.regression_signature_def": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc",
    "tensorflow.debugging.assert_greater_equal": "doc",
    "tensorflow.debugging.assert_rank_at_least": "doc",
    "tensorflow.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.nn.scale_regularization_loss": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.keras.layers.ActivityRegularization": "doc",
    "tensorflow.convert_to_tensor": "doc",
    "tensorflow.math.reciprocal_no_nan": "doc",
    "tensorflow.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.debugging.enable_check_numerics": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.histogram_fixed_width_bins": "doc",
    "tensorflow.quantize_and_dequantize_v4": "doc",
    "tensorflow.debugging.disable_check_numerics": "doc",
    "tensorflow.hessians": "doc",
    "tensorflow.io.serialize_tensor": "doc",
    "tensorflow.UnconnectedGradients": "doc",
    "tensorflow.summary.trace_export": "doc",
    "tensorflow.linalg.matrix_transpose": "doc",
    "tensorflow.linalg.triangular_solve": "doc",
    "tensorflow.keras.layers.AveragePooling1D": "doc",
    "tensorflow.keras.layers.AveragePooling2D": "doc",
    "tensorflow.keras.layers.AveragePooling3D": "doc",
    "tensorflow.math.squared_difference": "doc",
    "tensorflow.queue.RandomShuffleQueue": "doc",
    "tensorflow.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.debugging.assert_same_float_dtype": "doc",
    "tensorflow.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.io.decode_json_example": "doc",
    "tensorflow.nn.with_space_to_batch": "doc",
    "tensorflow.feature_column.sequence_numeric_column": "doc",
    "tensorflow.type_spec_from_value": "doc",
    "tensorflow.math.unsorted_segment_max": "doc",
    "tensorflow.math.unsorted_segment_min": "doc",
    "tensorflow.math.unsorted_segment_sum": "doc",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.nn.normalize_moments": "doc",
    "tensorflow.math.is_non_decreasing": "doc",
    "tensorflow.linalg.tridiagonal_solve": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.tensor_scatter_nd_add": "doc",
    "tensorflow.tensor_scatter_nd_max": "doc",
    "tensorflow.tensor_scatter_nd_sub": "doc",
    "tensorflow.nn.sufficient_statistics": "doc",
    "tensorflow.math.reduce_euclidean_norm": "doc",
    "tensorflow.nondifferentiable_batch_function": "doc",
    "tensorflow.signal.kaiser_window": "doc",
    "tensorflow.broadcast_static_shape": "doc",
    "tensorflow.extract_volume_patches": "doc",
    "tensorflow.test.assert_equal_graph_def": "doc",
    "tensorflow.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.feature_column.weighted_categorical_column": "doc",
    "tensorflow.VariableSynchronization": "doc",
    "tensorflow.broadcast_dynamic_shape": "doc",
    "tensorflow.io.FixedLenSequenceFeature": "doc",
    "tensorflow.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.nn.embedding_lookup_sparse": "doc",
    "tensorflow.register_tensor_conversion_function": "doc",
    "tensorflow.debugging": "doc",
    "tensorflow.gather_nd": "doc",
    "tensorflow.keras.layers.Embedding": "doc",
    "tensorflow.debugging.check_numerics": "doc",
    "tensorflow.linalg.tridiagonal_matmul": "doc",
    "tensorflow.debugging.assert_less_equal": "doc",
    "tensorflow.debugging.assert_none_equal": "doc",
    "tensorflow.debugging.is_numeric_tensor": "doc",
    "tensorflow.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.tensor_scatter_nd_update": "doc",
    "tensorflow.data.FixedLengthRecordDataset": "doc",
    "tensorflow.test.is_built_with_gpu_support": "doc",
    "tensorflow.feature_column": "doc",
    "tensorflow.nn.conv_transpose": "doc",
    "tensorflow.feature_column.crossed_column": "doc",
    "tensorflow.feature_column.numeric_column": "doc",
    "tensorflow.feature_column.embedding_column": "doc",
    "tensorflow.feature_column.indicator_column": "doc",
    "tensorflow.feature_column.bucketized_column": "doc",
    "tensorflow.feature_column.shared_embeddings": "doc",
    "tensorflow.VariableAggregation": "doc",
    "tensorflow.nn.fractional_avg_pool": "doc",
    "tensorflow.nn.fractional_max_pool": "doc",
    "tensorflow.nn.isotonic_regression": "doc",
    "tensorflow.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.io": "doc",
    "tensorflow.nn": "doc",
    "tensorflow.abs": "doc",
    "tensorflow.add": "doc",
    "tensorflow.cos": "doc",
    "tensorflow.eig": "doc",
    "tensorflow.exp": "doc",
    "tensorflow.eye": "doc",
    "tensorflow.pad": "doc",
    "tensorflow.pow": "doc",
    "tensorflow.tpu": "doc",
    "tensorflow.xla": "doc",
    "tensorflow.acos": "doc",
    "tensorflow.case": "doc",
    "tensorflow.cast": "doc",
    "tensorflow.cond": "doc",
    "tensorflow.cosh": "doc",
    "tensorflow.data": "doc",
    "tensorflow.fill": "doc",
    "tensorflow.less": "doc",
    "tensorflow.math": "doc",
    "tensorflow.nest": "doc",
    "tensorflow.sets": "doc",
    "tensorflow.sign": "doc",
    "tensorflow.sinh": "doc",
    "tensorflow.test": "doc",
    "tensorflow.acosh": "doc",
    "tensorflow.add_n": "doc",
    "tensorflow.asinh": "doc",
    "tensorflow.atan2": "doc",
    "tensorflow.atanh": "doc",
    "tensorflow.audio": "doc",
    "tensorflow.equal": "doc",
    "tensorflow.foldl": "doc",
    "tensorflow.keras": "doc",
    "tensorflow.queue": "doc",
    "tensorflow.stack": "doc",
    "tensorflow.cumsum": "doc",
    "tensorflow.einsum": "doc",
    "tensorflow.linalg": "doc",
    "tensorflow.map_fn": "doc",
    "tensorflow.nn.elu": "doc",
    "tensorflow.signal": "doc",
    "tensorflow.eigvals": "doc",
    "tensorflow.nn.gelu": "doc",
    "tensorflow.nn.pool": "doc",
    "tensorflow.nn.relu": "doc",
    "tensorflow.nn.selu": "doc",
    "tensorflow.nn.silu": "doc",
    "tensorflow.summary": "doc",
    "tensorflow.unstack": "doc",
    "tensorflow.math.abs": "doc",
    "tensorflow.math.add": "doc",
    "tensorflow.math.cos": "doc",
    "tensorflow.math.erf": "doc",
    "tensorflow.math.exp": "doc",
    "tensorflow.math.log": "doc",
    "tensorflow.math.mod": "doc",
    "tensorflow.math.pow": "doc",
    "tensorflow.meshgrid": "doc",
    "tensorflow.nn.crelu": "doc",
    "tensorflow.nn.relu6": "doc",
    "tensorflow.nn.swish": "doc",
    "tensorflow.linalg.lu": "doc",
    "tensorflow.linalg.qr": "doc",
    "tensorflow.math.acos": "doc",
    "tensorflow.math.ceil": "doc",
    "tensorflow.math.conj": "doc",
    "tensorflow.math.cosh": "doc",
    "tensorflow.math.erfc": "doc",
    "tensorflow.math.less": "doc",
    "tensorflow.math.real": "doc",
    "tensorflow.math.sign": "doc",
    "tensorflow.math.sinh": "doc",
    "tensorflow.math.zeta": "doc",
    "tensorflow.nn.conv1d": "doc",
    "tensorflow.nn.conv2d": "doc",
    "tensorflow.nn.conv3d": "doc",
    "tensorflow.less_equal": "doc",
    "tensorflow.linalg.det": "doc",
    "tensorflow.linalg.eig": "doc",
    "tensorflow.linalg.eye": "doc",
    "tensorflow.linalg.inv": "doc",
    "tensorflow.linalg.svd": "doc",
    "tensorflow.math.acosh": "doc",
    "tensorflow.math.add_n": "doc",
    "tensorflow.math.angle": "doc",
    "tensorflow.math.asinh": "doc",
    "tensorflow.math.atan2": "doc",
    "tensorflow.math.atanh": "doc",
    "tensorflow.math.equal": "doc",
    "tensorflow.math.lbeta": "doc",
    "tensorflow.math.xdivy": "doc",
    "tensorflow.math.xlogy": "doc",
    "tensorflow.nn.l2_loss": "doc",
    "tensorflow.reduce_all": "doc",
    "tensorflow.reduce_any": "doc",
    "tensorflow.reduce_sum": "doc",
    "tensorflow.scalar_mul": "doc",
    "tensorflow.scatter_nd": "doc",
    "tensorflow.sets.union": "doc",
    "tensorflow.signal.dct": "doc",
    "tensorflow.signal.fft": "doc",
    "tensorflow.while_loop": "doc",
    "tensorflow.TensorArray": "doc",
    "tensorflow.linalg.diag": "doc",
    "tensorflow.linalg.eigh": "doc",
    "tensorflow.logical_and": "doc",
    "tensorflow.logical_not": "doc",
    "tensorflow.math.cumsum": "doc",
    "tensorflow.math.igamma": "doc",
    "tensorflow.math.is_nan": "doc",
    "tensorflow.math.lgamma": "doc",
    "tensorflow.nn.avg_pool": "doc",
    "tensorflow.nn.bias_add": "doc",
    "tensorflow.nn.ctc_loss": "doc",
    "tensorflow.nn.max_pool": "doc",
    "tensorflow.nn.nce_loss": "doc",
    "tensorflow.reduce_prod": "doc",
    "tensorflow.signal.idct": "doc",
    "tensorflow.signal.ifft": "doc",
    "tensorflow.signal.mdct": "doc",
    "tensorflow.signal.stft": "doc",
    "tensorflow.switch_case": "doc",
    "tensorflow.clip_by_norm": "doc",
    "tensorflow.keras.layers": "doc",
    "tensorflow.keras.models": "doc",
    "tensorflow.linalg.lstsq": "doc",
    "tensorflow.make_ndarray": "doc",
    "tensorflow.math.digamma": "doc",
    "tensorflow.math.igammac": "doc",
    "tensorflow.math.polyval": "doc",
    "tensorflow.signal.fft2d": "doc",
    "tensorflow.signal.fft3d": "doc",
    "tensorflow.summary.text": "doc",
    "tensorflow.clip_by_value": "doc",
    "tensorflow.greater_equal": "doc",
    "tensorflow.io.decode_csv": "doc",
    "tensorflow.io.decode_png": "doc",
    "tensorflow.io.decode_raw": "doc",
    "tensorflow.io.encode_png": "doc",
    "tensorflow.keras.backend": "doc",
    "tensorflow.linalg.einsum": "doc",
    "tensorflow.nn.avg_pool1d": "doc",
    "tensorflow.nn.avg_pool2d": "doc",
    "tensorflow.nn.avg_pool3d": "doc",
    "tensorflow.nn.leaky_relu": "doc",
    "tensorflow.nn.max_pool1d": "doc",
    "tensorflow.nn.max_pool2d": "doc",
    "tensorflow.nn.max_pool3d": "doc",
    "tensorflow.sequence_mask": "doc",
    "tensorflow.signal.ifft2d": "doc",
    "tensorflow.signal.ifft3d": "doc",
    "tensorflow.summary.audio": "doc",
    "tensorflow.summary.flush": "doc",
    "tensorflow.batch_to_space": "doc",
    "tensorflow.keras.datasets": "doc",
    "tensorflow.linalg.eigvals": "doc",
    "tensorflow.math.bessel_i0": "doc",
    "tensorflow.math.bessel_i1": "doc",
    "tensorflow.numpy_function": "doc",
    "tensorflow.parallel_stack": "doc",
    "tensorflow.space_to_batch": "doc",
    "tensorflow.summary.scalar": "doc",
    "tensorflow.test.Benchmark": "doc",
    "tensorflow.guarantee_const": "doc",
    "tensorflow.inside_function": "doc",
    "tensorflow.io.decode_proto": "doc",
    "tensorflow.io.encode_proto": "doc",
    "tensorflow.keras.callbacks": "doc",
    "tensorflow.linalg.cholesky": "doc",
    "tensorflow.linalg.eigvalsh": "doc",
    "tensorflow.math.less_equal": "doc",
    "tensorflow.math.reduce_all": "doc",
    "tensorflow.math.reduce_any": "doc",
    "tensorflow.math.reduce_std": "doc",
    "tensorflow.math.reduce_sum": "doc",
    "tensorflow.math.scalar_mul": "doc",
    "tensorflow.queue.QueueBase": "doc",
    "tensorflow.sets.difference": "doc",
    "tensorflow.SparseTensorSpec": "doc",
    "tensorflow.audio.decode_wav": "doc",
    "tensorflow.audio.encode_wav": "doc",
    "tensorflow.get_static_value": "doc",
    "tensorflow.io.decode_base64": "doc",
    "tensorflow.io.encode_base64": "doc",
    "tensorflow.keras.layers.Add": "doc",
    "tensorflow.keras.layers.ELU": "doc",
    "tensorflow.keras.layers.GRU": "doc",
    "tensorflow.keras.layers.RNN": "doc",
    "tensorflow.keras.layers.add": "doc",
    "tensorflow.math.logical_and": "doc",
    "tensorflow.math.logical_not": "doc",
    "tensorflow.math.reduce_prod": "doc",
    "tensorflow.math.segment_sum": "doc",
    "tensorflow.reduce_logsumexp": "doc",
    "tensorflow.reverse_sequence": "doc",
    "tensorflow.IndexedSlicesSpec": "doc",
    "tensorflow.executing_eagerly": "doc",
    "tensorflow.grad_pass_through": "doc",
    "tensorflow.keras.layers.LSTM": "doc",
    "tensorflow.keras.layers.ReLU": "doc",
    "tensorflow.make_tensor_proto": "doc",
    "tensorflow.math.accumulate_n": "doc",
    "tensorflow.math.segment_prod": "doc",
    "tensorflow.nn.depth_to_space": "doc",
    "tensorflow.nn.space_to_batch": "doc",
    "tensorflow.nn.space_to_depth": "doc",
    "tensorflow.space_to_batch_nd": "doc",
    "tensorflow.io.FixedLenFeature": "doc",
    "tensorflow.keras.layers.Dense": "doc",
    "tensorflow.keras.layers.PReLU": "doc",
    "tensorflow.linalg.global_norm": "doc",
    "tensorflow.math.divide_no_nan": "doc",
    "tensorflow.math.greater_equal": "doc",
    "tensorflow.matrix_square_root": "doc",
    "tensorflow.signal.hann_window": "doc",
    "tensorflow.unique_with_counts": "doc",
    "tensorflow.clip_by_global_norm": "doc",
    "tensorflow.io.serialize_sparse": "doc",
    "tensorflow.keras.layers.Conv1D": "doc",
    "tensorflow.keras.layers.Conv2D": "doc",
    "tensorflow.keras.layers.Conv3D": "doc",
    "tensorflow.keras.layers.Lambda": "doc",
    "tensorflow.nn.conv1d_transpose": "doc",
    "tensorflow.nn.conv2d_transpose": "doc",
    "tensorflow.nn.conv3d_transpose": "doc",
    "tensorflow.nn.depthwise_conv2d": "doc",
    "tensorflow.nn.embedding_lookup": "doc",
    "tensorflow.nn.log_poisson_loss": "doc",
    "tensorflow.nn.separable_conv2d": "doc",
    "tensorflow.nn.weighted_moments": "doc",
    "tensorflow.data.TextLineDataset": "doc",
    "tensorflow.io.decode_compressed": "doc",
    "tensorflow.keras.datasets.mnist": "doc",
    "tensorflow.keras.layers.GRUCell": "doc",
    "tensorflow.math.multiply_no_nan": "doc",
    "tensorflow.nn.collapse_repeated": "doc",
    "tensorflow.nn.ctc_unique_labels": "doc",
    "tensorflow.test.gpu_device_name": "doc",
    "tensorflow.io.extract_jpeg_shape": "doc",
    "tensorflow.keras.layers.LSTMCell": "doc",
    "tensorflow.linalg.cholesky_solve": "doc",
    "tensorflow.linalg.lu_reconstruct": "doc",
    "tensorflow.math.confusion_matrix": "doc",
    "tensorflow.math.reduce_logsumexp": "doc",
    "tensorflow.nest.pack_sequence_as": "doc",
    "tensorflow.signal.hamming_window": "doc",
    "tensorflow.test.benchmark_config": "doc",
    "tensorflow.test.is_gpu_available": "doc",
    "tensorflow.keras.datasets.cifar10": "doc",
    "tensorflow.keras.layers.LeakyReLU": "doc",
    "tensorflow.queue.PaddingFIFOQueue": "doc",
    "tensorflow.signal.overlap_and_add": "doc",
    "tensorflow.test.is_built_with_xla": "doc",
    "tensorflow.variable_creator_scope": "doc",
    "tensorflow.io.decode_and_crop_jpeg": "doc",
    "tensorflow.io.match_filenames_once": "doc",
    "tensorflow.io.parse_single_example": "doc",
    "tensorflow.keras.callbacks.History": "doc",
    "tensorflow.keras.datasets.cifar100": "doc",
    "tensorflow.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.linalg.tensor_diag_part": "doc",
    "tensorflow.nn.compute_average_loss": "doc",
    "tensorflow.nn.sampled_softmax_loss": "doc",
    "tensorflow.test.is_built_with_cuda": "doc",
    "tensorflow.test.is_built_with_rocm": "doc",
    "tensorflow.io.serialize_many_sparse": "doc",
    "tensorflow.keras.backend.set_floatx": "doc",
    "tensorflow.keras.callbacks.Callback": "doc",
    "tensorflow.io.parse_sequence_example": "doc",
    "tensorflow.math.cumulative_logsumexp": "doc",
    "tensorflow.nn.compute_accidental_hits": "doc",
    "tensorflow.keras.callbacks.TensorBoard": "doc",
    "tensorflow.keras.callbacks.CallbackList": "doc",
    "tensorflow.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.keras.layers.GaussianDropout": "doc",
    "tensorflow.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.keras.layers.SeparableConv1D": "doc",
    "tensorflow.keras.layers.SeparableConv2D": "doc",
    "tensorflow.keras.layers.StackedRNNCells": "doc",
    "tensorflow.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.keras.models.model_from_json": "doc",
    "tensorflow.keras.models.model_from_yaml": "doc",
    "tensorflow.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.keras.datasets.mnist.load_data": "doc",
    "tensorflow.keras.layers.AdditiveAttention": "doc",
    "tensorflow.keras.models.model_from_config": "doc",
    "tensorflow.linalg.banded_triangular_solve": "doc",
    "tensorflow.keras.backend.image_data_format": "doc",
    "tensorflow.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.io.parse_single_sequence_example": "doc",
    "tensorflow.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.keras.backend.set_image_data_format": "doc"
  },
  "seaborn.tsplot": {
    "seaborn.lmplot": "doc",
    "seaborn.JointGrid.plot": "doc",
    "seaborn.distplot": "doc",
    "seaborn.relplot": "doc",
    "seaborn.kdeplot": "doc",
    "seaborn.rugplot": "doc",
    "seaborn.catplot": "doc",
    "seaborn.boxplot": "doc",
    "seaborn.barplot": "doc",
    "seaborn.regplot": "doc",
    "seaborn.stripplot": "doc",
    "seaborn.residplot": "doc",
    "seaborn.lineplot": "doc",
    "seaborn.ecdfplot": "doc",
    "seaborn.pairplot": "doc",
    "seaborn.scatterplot": "doc",
    "seaborn.swarmplot": "doc",
    "seaborn.boxenplot": "doc",
    "seaborn.pointplot": "doc",
    "seaborn.countplot": "doc",
    "seaborn.jointplot": "doc",
    "seaborn.violinplot": "doc",
    "seaborn.set_palette": "doc",
    "seaborn.hls_palette": "doc",
    "seaborn.set": "doc",
    "seaborn.husl_palette": "doc",
    "seaborn.PairGrid.map_lower": "doc",
    "seaborn.light_palette": "doc",
    "seaborn.despine": "doc",
    "seaborn.set_context": "doc",
    "seaborn.mpl_palette": "doc",
    "seaborn.saturate": "doc",
    "seaborn.dark_palette": "doc",
    "seaborn.xkcd_palette": "doc",
    "seaborn.color_palette": "doc",
    "seaborn.blend_palette": "doc",
    "seaborn.set_style": "doc",
    "seaborn.crayon_palette": "doc",
    "seaborn.set_hls_values": "doc",
    "seaborn.choose_dark_palette": "doc",
    "seaborn.reset_orig": "doc",
    "seaborn.desaturate": "doc",
    "seaborn.set_color_codes": "doc",
    "seaborn.JointGrid.plot_joint": "doc",
    "seaborn.choose_light_palette": "doc",
    "seaborn.plotting_context": "doc",
    "seaborn.PairGrid.map_offdiag": "doc",
    "seaborn.cubehelix_palette": "doc",
    "seaborn.diverging_palette": "doc",
    "seaborn.PairGrid.map": "doc",
    "seaborn.FacetGrid.map": "doc",
    "seaborn.choose_cubehelix_palette": "doc",
    "seaborn.choose_diverging_palette": "doc",
    "seaborn.get_data_home": "doc",
    "seaborn.FacetGrid.map_dataframe": "doc",
    "seaborn.choose_colorbrewer_palette": "doc",
    "seaborn.heatmap": "doc",
    "seaborn.PairGrid": "doc",
    "seaborn.Themeing": "doc",
    "seaborn.FacetGrid": "doc",
    "seaborn.JointGrid": "doc",
    "seaborn.set_theme": "doc",
    "seaborn.clustermap": "doc",
    "seaborn.axes_style": "doc",
    "seaborn.load_dataset": "doc",
    "seaborn.reset_defaults": "doc",
    "seaborn.PairGrid.map_diag": "doc",
    "seaborn.get_dataset_names": "doc",
    "seaborn.PairGrid.map_upper": "doc",
    "seaborn.JointGrid.plot_marginals": "doc"
  },
  "seaborn.displot": {
    "seaborn.distplot": "doc",
    "seaborn.lineplot": "doc",
    "seaborn.pairplot": "doc",
    "seaborn.relplot": "doc",
    "seaborn.kdeplot": "doc",
    "seaborn.lmplot": "doc",
    "seaborn.rugplot": "doc",
    "seaborn.catplot": "doc",
    "seaborn.boxplot": "doc",
    "seaborn.barplot": "doc",
    "seaborn.regplot": "doc",
    "seaborn.JointGrid.plot": "doc",
    "seaborn.stripplot": "doc",
    "seaborn.pointplot": "doc",
    "seaborn.residplot": "doc",
    "seaborn.jointplot": "doc",
    "seaborn.ecdfplot": "doc",
    "seaborn.violinplot": "doc",
    "seaborn.swarmplot": "doc",
    "seaborn.boxenplot": "doc",
    "seaborn.countplot": "doc",
    "seaborn.despine": "doc",
    "seaborn.scatterplot": "doc",
    "seaborn.hls_palette": "doc",
    "seaborn.husl_palette": "doc",
    "seaborn.dark_palette": "doc",
    "seaborn.light_palette": "doc",
    "seaborn.desaturate": "doc",
    "seaborn.diverging_palette": "doc",
    "seaborn.set": "doc",
    "seaborn.set_palette": "doc",
    "seaborn.mpl_palette": "doc",
    "seaborn.xkcd_palette": "doc",
    "seaborn.cubehelix_palette": "doc",
    "seaborn.color_palette": "doc",
    "seaborn.blend_palette": "doc",
    "seaborn.PairGrid.map_lower": "doc",
    "seaborn.crayon_palette": "doc",
    "seaborn.choose_dark_palette": "doc",
    "seaborn.choose_diverging_palette": "doc",
    "seaborn.reset_orig": "doc",
    "seaborn.JointGrid.plot_joint": "doc",
    "seaborn.choose_light_palette": "doc",
    "seaborn.plotting_context": "doc",
    "seaborn.set_context": "doc",
    "seaborn.load_dataset": "doc",
    "seaborn.choose_cubehelix_palette": "doc",
    "seaborn.get_data_home": "doc",
    "seaborn.choose_colorbrewer_palette": "doc",
    "seaborn.PairGrid.map": "doc",
    "seaborn.FacetGrid.map": "doc",
    "seaborn.reset_defaults": "doc",
    "seaborn.set_hls_values": "doc",
    "seaborn.set_color_codes": "doc",
    "seaborn.PairGrid": "doc",
    "seaborn.saturate": "doc",
    "seaborn.PairGrid.map_diag": "doc",
    "seaborn.PairGrid.map_upper": "doc",
    "seaborn.PairGrid.map_offdiag": "doc",
    "seaborn.get_dataset_names": "doc",
    "seaborn.JointGrid": "doc",
    "seaborn.set_style": "doc",
    "seaborn.JointGrid.plot_marginals": "doc",
    "seaborn.clustermap": "doc",
    "seaborn.axes_style": "doc",
    "seaborn.FacetGrid.map_dataframe": "doc",
    "seaborn.heatmap": "doc",
    "seaborn.Themeing": "doc",
    "seaborn.FacetGrid": "doc",
    "seaborn.set_theme": "doc"
  },
  "seaborn.histplot": {
    "seaborn.distplot": "doc",
    "seaborn.pointplot": "doc",
    "seaborn.jointplot": "doc",
    "seaborn.lineplot": "doc",
    "seaborn.catplot": "doc",
    "seaborn.countplot": "doc",
    "seaborn.residplot": "doc",
    "seaborn.lmplot": "doc",
    "seaborn.relplot": "doc",
    "seaborn.kdeplot": "doc",
    "seaborn.rugplot": "doc",
    "seaborn.boxplot": "doc",
    "seaborn.barplot": "doc",
    "seaborn.regplot": "doc",
    "seaborn.ecdfplot": "doc",
    "seaborn.pairplot": "doc",
    "seaborn.violinplot": "doc",
    "seaborn.JointGrid.plot": "doc",
    "seaborn.scatterplot": "doc",
    "seaborn.hls_palette": "doc",
    "seaborn.stripplot": "doc",
    "seaborn.swarmplot": "doc",
    "seaborn.boxenplot": "doc",
    "seaborn.husl_palette": "doc",
    "seaborn.light_palette": "doc",
    "seaborn.desaturate": "doc",
    "seaborn.JointGrid.plot_joint": "doc",
    "seaborn.choose_light_palette": "doc",
    "seaborn.cubehelix_palette": "doc",
    "seaborn.set_palette": "doc",
    "seaborn.mpl_palette": "doc",
    "seaborn.choose_dark_palette": "doc",
    "seaborn.set": "doc",
    "seaborn.heatmap": "doc",
    "seaborn.despine": "doc",
    "seaborn.dark_palette": "doc",
    "seaborn.xkcd_palette": "doc",
    "seaborn.diverging_palette": "doc",
    "seaborn.color_palette": "doc",
    "seaborn.blend_palette": "doc",
    "seaborn.JointGrid": "doc",
    "seaborn.set_style": "doc",
    "seaborn.JointGrid.plot_marginals": "doc",
    "seaborn.reset_defaults": "doc",
    "seaborn.crayon_palette": "doc",
    "seaborn.set_hls_values": "doc",
    "seaborn.choose_cubehelix_palette": "doc",
    "seaborn.choose_diverging_palette": "doc",
    "seaborn.clustermap": "doc",
    "seaborn.axes_style": "doc",
    "seaborn.reset_orig": "doc",
    "seaborn.choose_colorbrewer_palette": "doc",
    "seaborn.plotting_context": "doc",
    "seaborn.set_context": "doc",
    "seaborn.load_dataset": "doc",
    "seaborn.get_data_home": "doc",
    "seaborn.set_color_codes": "doc",
    "seaborn.PairGrid": "doc",
    "seaborn.Themeing": "doc",
    "seaborn.saturate": "doc",
    "seaborn.FacetGrid": "doc",
    "seaborn.set_theme": "doc",
    "seaborn.PairGrid.map": "doc",
    "seaborn.FacetGrid.map": "doc",
    "seaborn.PairGrid.map_diag": "doc",
    "seaborn.get_dataset_names": "doc",
    "seaborn.PairGrid.map_lower": "doc",
    "seaborn.PairGrid.map_upper": "doc",
    "seaborn.PairGrid.map_offdiag": "doc",
    "seaborn.FacetGrid.map_dataframe": "doc"
  },
  "plotly.plotly": {
    "plotly.express.scatter": "doc",
    "plotly.express.scatter_3d": "doc",
    "plotly.express.scatter_polar": "doc",
    "plotly.express.scatter_ternary": "doc",
    "plotly.express.scatter_mapbox": "doc",
    "plotly.io": "doc",
    "plotly.io.show": "doc",
    "plotly.io.to_json": "doc",
    "plotly.io.to_html": "doc",
    "plotly.express.bar": "doc",
    "plotly.express.box": "doc",
    "plotly.express.pie": "doc",
    "plotly.io.to_image": "doc",
    "plotly.express.line": "doc",
    "plotly.express.area": "doc",
    "plotly.express.data": "doc",
    "plotly.io.from_json": "doc",
    "plotly.io.read_json": "doc",
    "plotly.io.templates": "doc",
    "plotly.io.renderers": "doc",
    "plotly.express.strip": "doc",
    "plotly.io.write_json": "doc",
    "plotly.io.write_html": "doc",
    "plotly.express.violin": "doc",
    "plotly.express.funnel": "doc",
    "plotly.express.imshow": "doc",
    "plotly.express.colors": "doc",
    "plotly.figure_factory": "doc",
    "plotly.io.write_image": "doc",
    "plotly.express.line_3d": "doc",
    "plotly.express.treemap": "doc",
    "plotly.io.to_templated": "doc",
    "plotly.express.line_geo": "doc",
    "plotly.express.timeline": "doc",
    "plotly.express.sunburst": "doc",
    "plotly.express.bar_polar": "doc",
    "plotly.express.histogram": "doc",
    "plotly.graph_objects.Bar": "doc",
    "plotly.graph_objects.bar": "doc",
    "plotly.graph_objects.Pie": "doc",
    "plotly.graph_objects.pie": "doc",
    "plotly.graph_objects.Box": "doc",
    "plotly.graph_objects.box": "doc",
    "plotly.express.line_polar": "doc",
    "plotly.express.choropleth": "doc",
    "plotly.graph_objects.Ohlc": "doc",
    "plotly.graph_objects.ohlc": "doc",
    "plotly.graph_objects.Cone": "doc",
    "plotly.graph_objects.cone": "doc",
    "plotly.express.scatter_geo": "doc",
    "plotly.express.line_mapbox": "doc",
    "plotly.express.funnel_area": "doc",
    "plotly.graph_objects.Image": "doc",
    "plotly.graph_objects.image": "doc",
    "plotly.graph_objects.Table": "doc",
    "plotly.graph_objects.table": "doc",
    "plotly.graph_objects.Splom": "doc",
    "plotly.graph_objects.splom": "doc",
    "plotly.express.line_ternary": "doc",
    "plotly.graph_objects.Figure": "doc",
    "plotly.graph_objects.Layout": "doc",
    "plotly.graph_objects.layout": "doc",
    "plotly.graph_objects.Violin": "doc",
    "plotly.graph_objects.violin": "doc",
    "plotly.graph_objects.Funnel": "doc",
    "plotly.graph_objects.funnel": "doc",
    "plotly.graph_objects.Mesh3d": "doc",
    "plotly.graph_objects.mesh3d": "doc",
    "plotly.graph_objects.Volume": "doc",
    "plotly.graph_objects.volume": "doc",
    "plotly.graph_objects.Sankey": "doc",
    "plotly.graph_objects.sankey": "doc",
    "plotly.graph_objects.Carpet": "doc",
    "plotly.graph_objects.carpet": "doc",
    "plotly.graph_objects.Scatter": "doc",
    "plotly.graph_objects.scatter": "doc",
    "plotly.graph_objects.Heatmap": "doc",
    "plotly.graph_objects.heatmap": "doc",
    "plotly.graph_objects.Contour": "doc",
    "plotly.graph_objects.contour": "doc",
    "plotly.graph_objects.Surface": "doc",
    "plotly.graph_objects.surface": "doc",
    "plotly.graph_objects.Treemap": "doc",
    "plotly.graph_objects.treemap": "doc",
    "plotly.graph_objects.Parcats": "doc",
    "plotly.graph_objects.parcats": "doc",
    "plotly.express.scatter_matrix": "doc",
    "plotly.express.density_mapbox": "doc",
    "plotly.graph_objects.Barpolar": "doc",
    "plotly.graph_objects.barpolar": "doc",
    "plotly.graph_objects.Sunburst": "doc",
    "plotly.graph_objects.sunburst": "doc",
    "plotly.subplots.make_subplots": "doc",
    "plotly.express.density_contour": "doc",
    "plotly.express.density_heatmap": "doc",
    "plotly.graph_objects.Scattergl": "doc",
    "plotly.graph_objects.scattergl": "doc",
    "plotly.graph_objects.Heatmapgl": "doc",
    "plotly.graph_objects.heatmapgl": "doc",
    "plotly.graph_objects.Histogram": "doc",
    "plotly.graph_objects.histogram": "doc",
    "plotly.graph_objects.Waterfall": "doc",
    "plotly.graph_objects.waterfall": "doc",
    "plotly.graph_objects.Indicator": "doc",
    "plotly.graph_objects.indicator": "doc",
    "plotly.graph_objects.Scatter3d": "doc",
    "plotly.graph_objects.scatter3d": "doc",
    "plotly.graph_objects.Parcoords": "doc",
    "plotly.graph_objects.parcoords": "doc",
    "plotly.graph_objects.Funnelarea": "doc",
    "plotly.graph_objects.funnelarea": "doc",
    "plotly.graph_objects.Streamtube": "doc",
    "plotly.graph_objects.streamtube": "doc",
    "plotly.graph_objects.Isosurface": "doc",
    "plotly.graph_objects.isosurface": "doc",
    "plotly.graph_objects.Scattergeo": "doc",
    "plotly.graph_objects.scattergeo": "doc",
    "plotly.graph_objects.Choropleth": "doc",
    "plotly.graph_objects.choropleth": "doc",
    "plotly.express.choropleth_mapbox": "doc",
    "plotly.graph_objects.Histogram2d": "doc",
    "plotly.graph_objects.histogram2d": "doc",
    "plotly.graph_objects.Candlestick": "doc",
    "plotly.graph_objects.candlestick": "doc",
    "plotly.graph_objects.Scatterpolar": "doc",
    "plotly.graph_objects.scatterpolar": "doc",
    "plotly.figure_factory.create_ohlc": "doc",
    "plotly.express.parallel_categories": "doc",
    "plotly.graph_objects.Scattermapbox": "doc",
    "plotly.graph_objects.scattermapbox": "doc",
    "plotly.graph_objects.Densitymapbox": "doc",
    "plotly.graph_objects.densitymapbox": "doc",
    "plotly.graph_objects.Scattercarpet": "doc",
    "plotly.graph_objects.scattercarpet": "doc",
    "plotly.graph_objects.Contourcarpet": "doc",
    "plotly.graph_objects.contourcarpet": "doc",
    "plotly.figure_factory.create_gantt": "doc",
    "plotly.figure_factory.create_table": "doc",
    "plotly.express.parallel_coordinates": "doc",
    "plotly.graph_objects.Scatterpolargl": "doc",
    "plotly.graph_objects.scatterpolargl": "doc",
    "plotly.graph_objects.Scatterternary": "doc",
    "plotly.graph_objects.scatterternary": "doc",
    "plotly.figure_factory.create_bullet": "doc",
    "plotly.figure_factory.create_quiver": "doc",
    "plotly.figure_factory.create_violin": "doc",
    "plotly.figure_factory.create_trisurf": "doc",
    "plotly.graph_objects.Choroplethmapbox": "doc",
    "plotly.graph_objects.choroplethmapbox": "doc",
    "plotly.figure_factory.create_distplot": "doc",
    "plotly.graph_objects.Histogram2dContour": "doc",
    "plotly.graph_objects.histogram2dcontour": "doc",
    "plotly.figure_factory.create_2d_density": "doc",
    "plotly.figure_factory.create_choropleth": "doc",
    "plotly.figure_factory.create_dendrogram": "doc",
    "plotly.figure_factory.create_facet_grid": "doc",
    "plotly.figure_factory.create_streamline": "doc",
    "plotly.figure_factory.create_candlestick": "doc",
    "plotly.figure_factory.create_hexbin_mapbox": "doc",
    "plotly.figure_factory.create_ternary_contour": "doc",
    "plotly.figure_factory.create_annotated_heatmap": "doc",
    "plotly.figure_factory.create_scatterplotmatrix": "doc"
  },
  "networkx.from_pandas_dataframe": {
    "networkx.convert_matrix.from_pandas_adjacency": "doc",
    "networkx.convert_matrix.from_pandas_edgelist": "doc",
    "networkx.convert_matrix.to_pandas_adjacency": "doc",
    "networkx.convert_matrix.from_numpy_array": "doc",
    "networkx.convert_matrix.from_numpy_matrix": "doc",
    "networkx.convert_matrix.to_pandas_edgelist": "doc",
    "networkx.utils.misc.random_state": "doc",
    "networkx.convert_matrix.from_scipy_sparse_matrix": "doc",
    "networkx.Graph.get_edge_data": "doc",
    "networkx.Graph.add_nodes_from": "doc",
    "networkx.DiGraph.get_edge_data": "doc",
    "networkx.convert.from_edgelist": "doc",
    "networkx.DiGraph.add_nodes_from": "doc",
    "networkx.Graph.remove_nodes_from": "doc",
    "networkx.MultiGraph.get_edge_data": "doc",
    "networkx.DiGraph.remove_nodes_from": "doc",
    "networkx.MultiGraph.add_nodes_from": "doc",
    "networkx.MultiDiGraph.get_edge_data": "doc",
    "networkx.MultiDiGraph.add_nodes_from": "doc",
    "networkx.MultiGraph.remove_nodes_from": "doc",
    "networkx.MultiDiGraph.remove_nodes_from": "doc",
    "networkx.algorithms.triads.random_triad": "doc",
    "networkx.utils.misc.create_random_state": "doc",
    "networkx.algorithms.tournament.random_tournament": "doc",
    "networkx.algorithms.link_prediction.preferential_attachment": "doc",
    "networkx.Graph.add_edges_from": "doc",
    "networkx.utils.misc.open_file": "doc",
    "networkx.DiGraph.add_edges_from": "doc",
    "networkx.Graph.remove_edges_from": "doc",
    "networkx.DiGraph.remove_edges_from": "doc",
    "networkx.MultiGraph.add_edges_from": "doc",
    "networkx.classes.function.add_star": "doc",
    "networkx.convert.from_dict_of_dicts": "doc",
    "networkx.convert.from_dict_of_lists": "doc",
    "networkx.MultiDiGraph.add_edges_from": "doc",
    "networkx.algorithms.cuts.conductance": "doc",
    "networkx.MultiGraph.remove_edges_from": "doc",
    "networkx.algorithms.triads.triad_type": "doc",
    "networkx.convert_matrix.to_numpy_array": "doc",
    "networkx.MultiDiGraph.remove_edges_from": "doc",
    "networkx.convert_matrix.to_numpy_matrix": "doc",
    "networkx.algorithms.triads.triads_by_type": "doc",
    "networkx.convert_matrix.to_numpy_recarray": "doc",
    "networkx.algorithms.smallworld.random_reference": "doc",
    "networkx.algorithms.vitality.closeness_vitality": "doc",
    "networkx.algorithms.similarity.simrank_similarity": "doc",
    "networkx.algorithms.similarity.graph_edit_distance": "doc",
    "networkx.algorithms.distance_measures.resistance_distance": "doc",
    "networkx.algorithms.planar_drawing.combinatorial_embedding_to_pos": "doc",
    "networkx.algorithms.similarity.optimize_graph_edit_distance": "doc",
    "networkx.algorithms.coloring.strategy_saturation_largest_first": "doc",
    "networkx.algorithms.chordal.complete_to_chordal_graph": "doc",
    "networkx.Graph.update": "doc",
    "networkx.DiGraph.update": "doc",
    "networkx.DiGraph.in_degree": "doc",
    "networkx.MultiGraph.update": "doc",
    "networkx.DiGraph.out_degree": "doc",
    "networkx.Graph.to_undirected": "doc",
    "networkx.MultiDiGraph.update": "doc",
    "networkx.utils.misc.make_str": "doc",
    "networkx.DiGraph.to_undirected": "doc",
    "networkx.MultiDiGraph.in_degree": "doc",
    "networkx.MultiDiGraph.out_degree": "doc",
    "networkx.MultiGraph.to_undirected": "doc",
    "networkx.algorithms.dag.ancestors": "doc",
    "networkx.classes.function.add_path": "doc",
    "networkx.convert.to_networkx_graph": "doc",
    "networkx.MultiDiGraph.to_undirected": "doc",
    "networkx.algorithms.core.onion_layers": "doc",
    "networkx.algorithms.cycles.find_cycle": "doc",
    "networkx.algorithms.moral.moral_graph": "doc",
    "networkx.algorithms.isolate.is_isolate": "doc",
    "networkx.algorithms.euler.eulerian_path": "doc",
    "networkx.classes.function.to_undirected": "doc",
    "networkx.algorithms.cluster.transitivity": "doc",
    "networkx.algorithms.dag.dag_longest_path": "doc",
    "networkx.algorithms.minors.quotient_graph": "doc",
    "networkx.utils.misc.preserve_random_state": "doc",
    "networkx.algorithms.operators.binary.union": "doc",
    "networkx.classes.function.degree_histogram": "doc",
    "networkx.algorithms.cuts.boundary_expansion": "doc",
    "networkx.algorithms.operators.unary.reverse": "doc",
    "networkx.algorithms.operators.all.union_all": "doc",
    "networkx.algorithms.operators.product.power": "doc",
    "networkx.algorithms.cuts.normalized_cut_size": "doc",
    "networkx.algorithms.d_separation.d_separated": "doc",
    "networkx.algorithms.hierarchy.flow_hierarchy": "doc",
    "networkx.algorithms.operators.binary.compose": "doc",
    "networkx.algorithms.dominating.dominating_set": "doc",
    "networkx.algorithms.matching.maximal_matching": "doc",
    "networkx.algorithms.operators.all.compose_all": "doc",
    "networkx.algorithms.chordal.find_induced_nodes": "doc",
    "networkx.algorithms.operators.unary.complement": "doc",
    "networkx.algorithms.operators.binary.full_join": "doc",
    "networkx.algorithms.structuralholes.constraint": "doc",
    "networkx.convert_matrix.to_scipy_sparse_matrix": "doc",
    "networkx.algorithms.operators.binary.difference": "doc",
    "networkx.algorithms.simple_paths.is_simple_path": "doc",
    "networkx.algorithms.tournament.hamiltonian_path": "doc",
    "networkx.algorithms.dominating.is_dominating_set": "doc",
    "networkx.algorithms.matching.is_maximal_matching": "doc",
    "networkx.algorithms.dominance.dominance_frontiers": "doc",
    "networkx.algorithms.non_randomness.non_randomness": "doc",
    "networkx.algorithms.operators.binary.intersection": "doc",
    "networkx.algorithms.similarity.optimal_edit_paths": "doc",
    "networkx.algorithms.simple_paths.all_simple_paths": "doc",
    "networkx.algorithms.dominance.immediate_dominators": "doc",
    "networkx.algorithms.operators.all.intersection_all": "doc",
    "networkx.algorithms.threshold.find_threshold_graph": "doc",
    "networkx.algorithms.operators.binary.disjoint_union": "doc",
    "networkx.algorithms.shortest_paths.generic.has_path": "doc",
    "networkx.algorithms.operators.all.disjoint_union_all": "doc",
    "networkx.algorithms.operators.product.rooted_product": "doc",
    "networkx.algorithms.operators.product.strong_product": "doc",
    "networkx.algorithms.operators.product.tensor_product": "doc",
    "networkx.algorithms.distance_regular.global_parameters": "doc",
    "networkx.algorithms.simple_paths.all_simple_edge_paths": "doc",
    "networkx.algorithms.simple_paths.shortest_simple_paths": "doc",
    "networkx.algorithms.communicability_alg.communicability": "doc",
    "networkx.algorithms.operators.product.cartesian_product": "doc",
    "networkx.algorithms.operators.binary.symmetric_difference": "doc",
    "networkx.algorithms.communicability_alg.communicability_exp": "doc",
    "networkx.algorithms.operators.product.lexicographic_product": "doc",
    "networkx.algorithms.coloring.strategy_random_sequential": "doc",
    "networkx.utils.misc.random_weighted_sample": "doc",
    "networkx.algorithms.dag.dag_longest_path_length": "doc",
    "networkx.algorithms.lowest_common_ancestors.tree_all_pairs_lowest_common_ancestor": "doc",
    "networkx.algorithms.graph_hashing.weisfeiler_lehman_graph_hash": "doc",
    "networkx.algorithms.shortest_paths.generic.average_shortest_path_length": "doc",
    "networkx.algorithms.coloring.strategy_connected_sequential_dfs": "doc",
    "networkx.algorithms.coloring.strategy_connected_sequential_bfs": "doc",
    "networkx.algorithms.similarity.simrank_similarity_numpy": "doc",
    "networkx.algorithms.isomorphism.fast_could_be_isomorphic": "doc",
    "networkx.algorithms.link_prediction.ra_index_soundarajan_hopcroft": "doc",
    "networkx.algorithms.isomorphism.faster_could_be_isomorphic": "doc",
    "networkx.Graph.add_node": "doc",
    "networkx.Graph.add_edge": "doc",
    "networkx.Graph.__iter__": "doc",
    "networkx.Graph.has_node": "doc",
    "networkx.Graph.has_edge": "doc",
    "networkx.DiGraph.add_node": "doc",
    "networkx.DiGraph.add_edge": "doc",
    "networkx.DiGraph.__iter__": "doc",
    "networkx.DiGraph.has_node": "doc",
    "networkx.DiGraph.has_edge": "doc",
    "networkx.Graph.remove_node": "doc",
    "networkx.Graph.remove_edge": "doc",
    "networkx.Graph.nbunch_iter": "doc",
    "networkx.Graph.to_directed": "doc",
    "networkx.utils.misc.groups": "doc",
    "networkx.Graph.__contains__": "doc",
    "networkx.Graph.edge_subgraph": "doc",
    "networkx.DiGraph.remove_node": "doc",
    "networkx.DiGraph.remove_edge": "doc",
    "networkx.DiGraph.nbunch_iter": "doc",
    "networkx.DiGraph.to_directed": "doc",
    "networkx.MultiGraph.add_node": "doc",
    "networkx.MultiGraph.add_edge": "doc",
    "networkx.MultiGraph.__iter__": "doc",
    "networkx.MultiGraph.has_node": "doc",
    "networkx.MultiGraph.has_edge": "doc",
    "networkx.convert.to_edgelist": "doc",
    "networkx.DiGraph.__contains__": "doc",
    "networkx.DiGraph.edge_subgraph": "doc",
    "networkx.MultiDiGraph.add_node": "doc",
    "networkx.MultiDiGraph.add_edge": "doc",
    "networkx.MultiDiGraph.__iter__": "doc",
    "networkx.MultiDiGraph.has_node": "doc",
    "networkx.MultiDiGraph.has_edge": "doc",
    "networkx.MultiGraph.remove_node": "doc",
    "networkx.MultiGraph.remove_edge": "doc",
    "networkx.MultiGraph.nbunch_iter": "doc",
    "networkx.MultiGraph.to_directed": "doc",
    "networkx.MultiGraph.__contains__": "doc",
    "networkx.MultiGraph.edge_subgraph": "doc",
    "networkx.MultiDiGraph.remove_node": "doc",
    "networkx.MultiDiGraph.remove_edge": "doc",
    "networkx.MultiDiGraph.nbunch_iter": "doc",
    "networkx.MultiDiGraph.to_directed": "doc",
    "networkx.classes.function.is_path": "doc",
    "networkx.MultiDiGraph.__contains__": "doc",
    "networkx.classes.filters.no_filter": "doc",
    "networkx.MultiDiGraph.edge_subgraph": "doc",
    "networkx.classes.filters.show_nodes": "doc",
    "networkx.classes.filters.show_edges": "doc",
    "networkx.algorithms.dag.descendants": "doc",
    "networkx.classes.function.add_cycle": "doc",
    "networkx.classes.function.non_edges": "doc",
    "networkx.utils.misc.nodes_or_number": "doc",
    "networkx.algorithms.core.core_number": "doc",
    "networkx.algorithms.isolate.isolates": "doc",
    "networkx.algorithms.regular.k_factor": "doc",
    "networkx.algorithms.smetric.s_metric": "doc",
    "networkx.classes.filters.show_diedges": "doc",
    "networkx.algorithms.cluster.triangles": "doc",
    "networkx.algorithms.triads.all_triads": "doc",
    "networkx.classes.function.to_directed": "doc",
    "networkx.utils.misc.powerlaw_sequence": "doc",
    "networkx.algorithms.clique.find_cliques": "doc",
    "networkx.algorithms.cuts.node_expansion": "doc",
    "networkx.algorithms.sparsifiers.spanner": "doc",
    "networkx.algorithms.triads.all_triplets": "doc",
    "networkx.classes.function.edge_subgraph": "doc",
    "networkx.classes.function.non_neighbors": "doc",
    "networkx.algorithms.matching.is_matching": "doc",
    "networkx.algorithms.coloring.greedy_color": "doc",
    "networkx.algorithms.cuts.mixing_expansion": "doc",
    "networkx.algorithms.triads.triadic_census": "doc",
    "networkx.algorithms.covering.is_edge_cover": "doc",
    "networkx.algorithms.dag.transitive_closure": "doc",
    "networkx.algorithms.minors.contracted_edge": "doc",
    "networkx.classes.function.induced_subgraph": "doc",
    "networkx.classes.function.common_neighbors": "doc",
    "networkx.algorithms.covering.min_edge_cover": "doc",
    "networkx.algorithms.tournament.is_reachable": "doc",
    "networkx.algorithms.distance_measures.center": "doc",
    "networkx.algorithms.distance_measures.radius": "doc",
    "networkx.algorithms.graphical.is_digraphical": "doc",
    "networkx.algorithms.tournament.is_tournament": "doc",
    "networkx.algorithms.isomorphism.is_isomorphic": "doc",
    "networkx.algorithms.planarity.check_planarity": "doc",
    "networkx.algorithms.tournament.score_sequence": "doc",
    "networkx.classes.function.set_node_attributes": "doc",
    "networkx.classes.function.get_node_attributes": "doc",
    "networkx.classes.function.set_edge_attributes": "doc",
    "networkx.classes.function.get_edge_attributes": "doc",
    "networkx.algorithms.cluster.generalized_degree": "doc",
    "networkx.algorithms.distance_measures.diameter": "doc",
    "networkx.algorithms.isolate.number_of_isolates": "doc",
    "networkx.algorithms.distance_measures.periphery": "doc",
    "networkx.algorithms.clique.make_max_clique_graph": "doc",
    "networkx.algorithms.clique.make_clique_bipartite": "doc",
    "networkx.algorithms.distance_measures.barycenter": "doc",
    "networkx.algorithms.graphical.is_pseudographical": "doc",
    "networkx.algorithms.matching.is_perfect_matching": "doc",
    "networkx.algorithms.matching.max_weight_matching": "doc",
    "networkx.algorithms.threshold.is_threshold_graph": "doc",
    "networkx.algorithms.distance_measures.eccentricity": "doc",
    "networkx.algorithms.isomorphism.could_be_isomorphic": "doc",
    "networkx.algorithms.structuralholes.local_constraint": "doc",
    "networkx.algorithms.tournament.is_strongly_connected": "doc",
    "networkx.algorithms.link_prediction.adamic_adar_index": "doc",
    "networkx.algorithms.distance_measures.extrema_bounding": "doc",
    "networkx.algorithms.distance_regular.intersection_array": "doc",
    "networkx.algorithms.link_prediction.jaccard_coefficient": "doc",
    "networkx.algorithms.distance_regular.is_distance_regular": "doc",
    "networkx.algorithms.distance_regular.is_strongly_regular": "doc",
    "networkx.algorithms.link_prediction.within_inter_cluster": "doc",
    "networkx.algorithms.shortest_paths.generic.shortest_path": "doc",
    "networkx.algorithms.link_prediction.cn_soundarajan_hopcroft": "doc",
    "networkx.algorithms.link_prediction.resource_allocation_index": "doc",
    "networkx.algorithms.shortest_paths.generic.all_shortest_paths": "doc",
    "networkx.algorithms.link_prediction.common_neighbor_centrality": "doc",
    "networkx.algorithms.shortest_paths.generic.shortest_path_length": "doc",
    "networkx.algorithms.lowest_common_ancestors.all_pairs_lowest_common_ancestor": "doc",
    "networkx.algorithms.coloring.strategy_largest_first": "doc",
    "networkx.Graph.add_weighted_edges_from": "doc",
    "networkx.DiGraph.add_weighted_edges_from": "doc",
    "networkx.MultiGraph.add_weighted_edges_from": "doc",
    "networkx.utils.misc.cumulative_distribution": "doc",
    "networkx.MultiDiGraph.add_weighted_edges_from": "doc",
    "networkx.algorithms.clique.graph_number_of_cliques": "doc",
    "networkx.algorithms.coloring.strategy_connected_sequential": "doc",
    "networkx.algorithms.graphical.is_valid_degree_sequence_havel_hakimi": "doc",
    "networkx.algorithms.dag.is_directed_acyclic_graph": "doc",
    "networkx.algorithms.dag.lexicographical_topological_sort": "doc",
    "networkx.Graph": "doc",
    "networkx.Graph.adj": "doc",
    "networkx.Graph.size": "doc",
    "networkx.Graph.copy": "doc",
    "networkx.Graph.clear": "doc",
    "networkx.Graph.nodes": "doc",
    "networkx.Graph.edges": "doc",
    "networkx.Graph.order": "doc",
    "networkx.DiGraph.adj": "doc",
    "networkx.Graph.degree": "doc",
    "networkx.DiGraph.succ": "doc",
    "networkx.DiGraph.pred": "doc",
    "networkx.DiGraph.size": "doc",
    "networkx.DiGraph.copy": "doc",
    "networkx.Graph.__len__": "doc",
    "networkx.DiGraph.clear": "doc",
    "networkx.DiGraph.nodes": "doc",
    "networkx.DiGraph.edges": "doc",
    "networkx.DiGraph.order": "doc",
    "networkx.Graph.__init__": "doc",
    "networkx.Graph.subgraph": "doc",
    "networkx.DiGraph.degree": "doc",
    "networkx.MultiGraph.adj": "doc",
    "networkx.Graph.neighbors": "doc",
    "networkx.Graph.adjacency": "doc",
    "networkx.DiGraph.__len__": "doc",
    "networkx.DiGraph.reverse": "doc",
    "networkx.MultiGraph.size": "doc",
    "networkx.MultiGraph.copy": "doc",
    "networkx.DiGraph.__init__": "doc",
    "networkx.DiGraph.in_edges": "doc",
    "networkx.DiGraph.subgraph": "doc",
    "networkx.MultiGraph.clear": "doc",
    "networkx.MultiGraph.nodes": "doc",
    "networkx.MultiGraph.edges": "doc",
    "networkx.MultiGraph.order": "doc",
    "networkx.MultiDiGraph.adj": "doc",
    "networkx.Graph.clear_edges": "doc",
    "networkx.Graph.__getitem__": "doc",
    "networkx.DiGraph.out_edges": "doc",
    "networkx.DiGraph.neighbors": "doc",
    "networkx.DiGraph.adjacency": "doc",
    "networkx.MultiGraph.degree": "doc",
    "networkx.MultiDiGraph.succ": "doc",
    "networkx.MultiDiGraph.size": "doc",
    "networkx.MultiDiGraph.copy": "doc",
    "networkx.DiGraph.successors": "doc",
    "networkx.MultiGraph.__len__": "doc",
    "networkx.MultiDiGraph.clear": "doc",
    "networkx.MultiDiGraph.nodes": "doc",
    "networkx.MultiDiGraph.edges": "doc",
    "networkx.MultiDiGraph.order": "doc",
    "networkx.utils.misc.flatten": "doc",
    "networkx.utils.misc.zipf_rv": "doc",
    "networkx.DiGraph.clear_edges": "doc",
    "networkx.DiGraph.__getitem__": "doc",
    "networkx.MultiGraph.__init__": "doc",
    "networkx.MultiGraph.subgraph": "doc",
    "networkx.MultiDiGraph.degree": "doc",
    "networkx.utils.misc.iterable": "doc",
    "networkx.utils.misc.pairwise": "doc",
    "networkx.DiGraph.predecessors": "doc",
    "networkx.MultiGraph.neighbors": "doc",
    "networkx.MultiGraph.adjacency": "doc",
    "networkx.MultiDiGraph.__len__": "doc",
    "networkx.MultiDiGraph.reverse": "doc",
    "networkx.Graph.number_of_nodes": "doc",
    "networkx.Graph.number_of_edges": "doc",
    "networkx.MultiDiGraph.__init__": "doc",
    "networkx.MultiDiGraph.in_edges": "doc",
    "networkx.MultiDiGraph.subgraph": "doc",
    "networkx.classes.function.info": "doc",
    "networkx.MultiGraph.clear_edges": "doc",
    "networkx.MultiGraph.__getitem__": "doc",
    "networkx.MultiDiGraph.out_edges": "doc",
    "networkx.MultiDiGraph.neighbors": "doc",
    "networkx.MultiDiGraph.adjacency": "doc",
    "networkx.algorithms.core.k_core": "doc",
    "networkx.algorithms.cuts.volume": "doc",
    "networkx.classes.function.nodes": "doc",
    "networkx.classes.function.edges": "doc",
    "networkx.DiGraph.number_of_nodes": "doc",
    "networkx.DiGraph.number_of_edges": "doc",
    "networkx.MultiGraph.new_edge_key": "doc",
    "networkx.MultiDiGraph.successors": "doc",
    "networkx.algorithms.core.k_shell": "doc",
    "networkx.algorithms.core.k_crust": "doc",
    "networkx.algorithms.core.k_truss": "doc",
    "networkx.classes.function.degree": "doc",
    "networkx.MultiDiGraph.clear_edges": "doc",
    "networkx.MultiDiGraph.__getitem__": "doc",
    "networkx.algorithms.core.k_corona": "doc",
    "networkx.algorithms.cuts.cut_size": "doc",
    "networkx.classes.function.density": "doc",
    "networkx.convert.to_dict_of_dicts": "doc",
    "networkx.convert.to_dict_of_lists": "doc",
    "networkx.MultiDiGraph.new_edge_key": "doc",
    "networkx.MultiDiGraph.predecessors": "doc",
    "networkx.algorithms.dag.antichains": "doc",
    "networkx.algorithms.euler.eulerize": "doc",
    "networkx.classes.function.is_empty": "doc",
    "networkx.classes.function.subgraph": "doc",
    "networkx.utils.misc.is_string_like": "doc",
    "networkx.utils.misc.default_opener": "doc",
    "networkx.MultiGraph.number_of_nodes": "doc",
    "networkx.MultiGraph.number_of_edges": "doc",
    "networkx.classes.filters.hide_nodes": "doc",
    "networkx.classes.filters.hide_edges": "doc",
    "networkx.classes.function.neighbors": "doc",
    "networkx.utils.misc.is_list_of_ints": "doc",
    "networkx.utils.misc.UnionFind.union": "doc",
    "networkx.utils.misc.weighted_choice": "doc",
    "networkx.algorithms.dag.is_aperiodic": "doc",
    "networkx.algorithms.smallworld.sigma": "doc",
    "networkx.algorithms.smallworld.omega": "doc",
    "networkx.MultiDiGraph.number_of_nodes": "doc",
    "networkx.MultiDiGraph.number_of_edges": "doc",
    "networkx.classes.filters.hide_diedges": "doc",
    "networkx.algorithms.euler.is_eulerian": "doc",
    "networkx.classes.function.is_directed": "doc",
    "networkx.classes.function.is_weighted": "doc",
    "networkx.classes.function.path_weight": "doc",
    "networkx.utils.misc.make_list_of_ints": "doc",
    "networkx.utils.misc.discrete_sequence": "doc",
    "networkx.algorithms.chordal.is_chordal": "doc",
    "networkx.algorithms.cluster.clustering": "doc",
    "networkx.algorithms.cycles.cycle_basis": "doc",
    "networkx.algorithms.regular.is_regular": "doc",
    "networkx.classes.function.reverse_view": "doc",
    "networkx.algorithms.cuts.edge_expansion": "doc",
    "networkx.algorithms.wiener.wiener_index": "doc",
    "networkx.classes.function.subgraph_view": "doc",
    "networkx.classes.function.all_neighbors": "doc",
    "networkx.utils.misc.not_implemented_for": "doc",
    "networkx.classes.graphviews.reverse_view": "doc",
    "networkx.classes.filters.hide_multiedges": "doc",
    "networkx.classes.filters.show_multiedges": "doc",
    "networkx.algorithms.cycles.simple_cycles": "doc",
    "networkx.algorithms.dag.topological_sort": "doc",
    "networkx.algorithms.dag.dag_to_branching": "doc",
    "networkx.algorithms.regular.is_k_regular": "doc",
    "networkx.classes.function.selfloop_edges": "doc",
    "networkx.utils.misc.generate_unique_node": "doc",
    "networkx.classes.graphviews.subgraph_view": "doc",
    "networkx.algorithms.euler.is_semieulerian": "doc",
    "networkx.algorithms.swap.double_edge_swap": "doc",
    "networkx.algorithms.voronoi.voronoi_cells": "doc",
    "networkx.classes.function.restricted_view": "doc",
    "networkx.classes.function.number_of_nodes": "doc",
    "networkx.classes.function.number_of_edges": "doc",
    "networkx.classes.filters.hide_multidiedges": "doc",
    "networkx.classes.filters.show_multidiedges": "doc",
    "networkx.algorithms.euler.eulerian_circuit": "doc",
    "networkx.algorithms.graphical.is_graphical": "doc",
    "networkx.algorithms.hybrid.is_kl_connected": "doc",
    "networkx.utils.misc.cuthill_mckee_ordering": "doc",
    "networkx.algorithms.euler.has_eulerian_path": "doc",
    "networkx.algorithms.minors.contracted_nodes": "doc",
    "networkx.algorithms.minors.identified_nodes": "doc",
    "networkx.algorithms.reciprocity.reciprocity": "doc",
    "networkx.classes.function.create_empty_copy": "doc",
    "networkx.algorithms.clique.number_of_cliques": "doc",
    "networkx.algorithms.clique.max_weight_clique": "doc",
    "networkx.algorithms.coloring.equitable_color": "doc",
    "networkx.algorithms.dag.transitive_reduction": "doc",
    "networkx.algorithms.clique.node_clique_number": "doc",
    "networkx.algorithms.cluster.square_clustering": "doc",
    "networkx.algorithms.dag.all_topological_sorts": "doc",
    "networkx.classes.function.number_of_selfloops": "doc",
    "networkx.classes.graphviews.generic_graph_view": "doc",
    "networkx.algorithms.chains.chain_decomposition": "doc",
    "networkx.algorithms.clique.graph_clique_number": "doc",
    "networkx.algorithms.cluster.average_clustering": "doc",
    "networkx.algorithms.cycles.minimum_cycle_basis": "doc",
    "networkx.algorithms.dag.transitive_closure_dag": "doc",
    "networkx.classes.function.nodes_with_selfloops": "doc",
    "networkx.algorithms.graphical.is_multigraphical": "doc",
    "networkx.algorithms.mis.maximal_independent_set": "doc",
    "networkx.algorithms.clique.enumerate_all_cliques": "doc",
    "networkx.algorithms.hybrid.kl_connected_subgraph": "doc",
    "networkx.algorithms.smallworld.lattice_reference": "doc",
    "networkx.classes.function.is_negatively_weighted": "doc",
    "networkx.algorithms.chordal.chordal_graph_cliques": "doc",
    "networkx.algorithms.clique.cliques_containing_node": "doc",
    "networkx.algorithms.efficiency_measures.efficiency": "doc",
    "networkx.algorithms.richclub.rich_club_coefficient": "doc",
    "networkx.algorithms.similarity.optimize_edit_paths": "doc",
    "networkx.algorithms.structuralholes.effective_size": "doc",
    "networkx.utils.misc.reverse_cuthill_mckee_ordering": "doc",
    "networkx.algorithms.chordal.chordal_graph_treewidth": "doc",
    "networkx.algorithms.coloring.strategy_smallest_last": "doc",
    "networkx.algorithms.reciprocity.overall_reciprocity": "doc",
    "networkx.algorithms.swap.connected_double_edge_swap": "doc",
    "networkx.algorithms.coloring.strategy_independent_set": "doc",
    "networkx.algorithms.efficiency_measures.local_efficiency": "doc",
    "networkx.algorithms.efficiency_measures.global_efficiency": "doc",
    "networkx.algorithms.lowest_common_ancestors.lowest_common_ancestor": "doc",
    "networkx.algorithms.graphical.is_valid_degree_sequence_erdos_gallai": "doc"
  },
  "statsmodels.formula.api.OLS": {
    "statsmodels.formula.api.gls": "doc",
    "statsmodels.formula.api.wls": "doc",
    "statsmodels.formula.api.ols": "doc",
    "statsmodels.formula.api.glsar": "doc",
    "statsmodels.formula.api.mixedlm": "doc",
    "statsmodels.formula.api.glm": "doc",
    "statsmodels.formula.api.rlm": "doc",
    "statsmodels.formula.api.gee": "doc",
    "statsmodels.formula.api.logit": "doc",
    "statsmodels.formula.api.phreg": "doc",
    "statsmodels.formula.api.probit": "doc",
    "statsmodels.formula.api.glmgam": "doc",
    "statsmodels.formula.api.mnlogit": "doc",
    "statsmodels.formula.api.poisson": "doc",
    "statsmodels.formula.api.quantreg": "doc",
    "statsmodels.formula.api.ordinal_gee": "doc",
    "statsmodels.formula.api.nominal_gee": "doc",
    "statsmodels.formula.api.negativebinomial": "doc",
    "statsmodels.regression.linear_model.OLS": "doc",
    "statsmodels.regression.linear_model.GLS": "doc",
    "statsmodels.regression.linear_model.WLS": "doc",
    "statsmodels.regression.linear_model.GLSAR": "doc",
    "statsmodels.graphics.gofplots.ProbPlot": "doc",
    "statsmodels.regression.mixed_linear_model.RLM": "doc",
    "statsmodels.genmod.generalized_linear_model.GLM": "doc",
    "statsmodels.regression.linear_model.RollingOLS": "doc",
    "statsmodels.graphics.gofplots.qqplot_2samples": "doc",
    "statsmodels.graphics.gofplots.qqline": "doc",
    "statsmodels.graphics.gofplots.qqplot": "doc",
    "statsmodels.tsa.stattools.acf": "doc",
    "statsmodels.multivariate.manova.MANOVA": "doc",
    "statsmodels.regression.linear_model.RollingWLS": "doc",
    "statsmodels.discrete.discrete_model.MNLogit": "doc",
    "statsmodels.regression.linear_model.RecursiveLS": "doc",
    "statsmodels.__init__.categorical": "doc",
    "statsmodels.__init__.load_pickle": "doc",
    "statsmodels.genmod.generalized_linear_model.GLMGam": "doc",
    "statsmodels.tsa.stattools.kpss": "doc",
    "statsmodels.tsa.stattools.pacf": "doc",
    "statsmodels.tsa.seasonal.hpfilter": "doc",
    "statsmodels.imputation.BinomialBayesMixedGLM": "doc",
    "statsmodels.regression.mixed_linear_model.MixedLM": "doc",
    "statsmodels.imputation.MI": "doc",
    "statsmodels.imputation.MICE": "doc",
    "statsmodels.imputation.Factor": "doc",
    "statsmodels.imputation.MICEData": "doc",
    "statsmodels.tsa.stattools.acovf": "doc",
    "statsmodels.tsa.stattools.coint": "doc",
    "statsmodels.imputation.BayesGaussMI": "doc",
    "statsmodels.discrete.discrete_model.Logit": "doc",
    "statsmodels.tsa.statespace.dynamic_factor.VAR": "doc",
    "statsmodels.tsa.statespace.dynamic_factor.SVAR": "doc",
    "statsmodels.tsa.statespace.dynamic_factor.VECM": "doc",
    "statsmodels.tsa.statespace.dynamic_factor.VARMAX": "doc",
    "statsmodels.tsa.statespace.dynamic_factor.DynamicFactor": "doc",
    "statsmodels.genmod.generalized_estimating_equations.OrdinalGEE": "doc",
    "statsmodels.tsa.statespace.dynamic_factor.UnobservedComponents": "doc",
    "statsmodels.tsa.holtwinters.Holt": "doc",
    "statsmodels.tsa.tsatools.lagmat": "doc",
    "statsmodels.multivariate.pca.PCA": "doc",
    "statsmodels.discrete.discrete_model.Probit": "doc",
    "statsmodels.tsa.holtwinters.SimpleExpSmoothing": "doc",
    "statsmodels.tsa.holtwinters.ExponentialSmoothing": "doc",
    "statsmodels.genmod.generalized_linear_model.PoissonBayesMixedGLM": "doc",
    "statsmodels.tsa.tsatools.add_lag": "doc",
    "statsmodels.tsa.stattools.pacf_yw": "doc",
    "statsmodels.discrete.discrete_model.Poisson": "doc",
    "statsmodels.__init__.test": "doc",
    "statsmodels.__init__.webdoc": "doc",
    "statsmodels.tsa.ar_model.AR": "doc",
    "statsmodels.tsa.seasonal.STL": "doc",
    "statsmodels.tsa.ar_model.ARMA": "doc",
    "statsmodels.tsa.ar_model.ARIMA": "doc",
    "statsmodels.tsa.ar_model.SARIMAX": "doc",
    "statsmodels.tsa.tsatools.detrend": "doc",
    "statsmodels.__init__.add_constant": "doc",
    "statsmodels.tsa.seasonal.bkfilter": "doc",
    "statsmodels.tsa.seasonal.cffilter": "doc",
    "statsmodels.__init__.show_versions": "doc",
    "statsmodels.tsa.stattools.adfuller": "doc",
    "statsmodels.tsa.stattools.pacf_ols": "doc",
    "statsmodels.tsa.tsatools.add_trend": "doc",
    "statsmodels.tsa.tsatools.lagmat2ds": "doc",
    "statsmodels.tsa.ar_model.ArmaProcess": "doc",
    "statsmodels.tsa.seasonal.seasonal_decompose": "doc",
    "statsmodels.tsa.ar_model.arma_order_select_ic": "doc",
    "statsmodels.tsa.ar_model.arma_generate_sample": "doc",
    "statsmodels.regression.mixed_linear_model.QuantReg": "doc",
    "statsmodels.discrete.discrete_model.NegativeBinomial": "doc",
    "statsmodels.tsa.regime_switching.markov_autoregression.MarkovRegression": "doc",
    "statsmodels.genmod.generalized_estimating_equations.NominalGEE": "doc",
    "statsmodels.discrete.discrete_model.NegativeBinomialP": "doc",
    "statsmodels.tsa.stattools.bds": "doc",
    "statsmodels.tsa.stattools.ccf": "doc",
    "statsmodels.tsa.stattools.ccovf": "doc",
    "statsmodels.tsa.stattools.q_stat": "doc",
    "statsmodels.tsa.stattools.periodogram": "doc",
    "statsmodels.tsa.x13.x13_arima_analysis": "doc",
    "statsmodels.discrete.discrete_model.GeneralizedPoisson": "doc",
    "statsmodels.discrete.discrete_model.ZeroInflatedPoisson": "doc",
    "statsmodels.regression.mixed_linear_model.PHReg": "doc",
    "statsmodels.regression.mixed_linear_model.SurvfuncRight": "doc",
    "statsmodels.tsa.regime_switching.markov_autoregression.MarkovAutoregression": "doc",
    "statsmodels.tsa.x13.x13_arima_select_order": "doc",
    "statsmodels.genmod.generalized_estimating_equations.GEE": "doc",
    "statsmodels.discrete.discrete_model.ZeroInflatedNegativeBinomialP": "doc",
    "statsmodels.discrete.discrete_model.ZeroInflatedGeneralizedPoisson": "doc"
  },
  "statsmodels.formula.api.Logit": {
    "statsmodels.formula.api.logit": "doc",
    "statsmodels.formula.api.mnlogit": "doc",
    "statsmodels.formula.api.probit": "doc",
    "statsmodels.formula.api.gls": "doc",
    "statsmodels.formula.api.wls": "doc",
    "statsmodels.formula.api.ols": "doc",
    "statsmodels.formula.api.glm": "doc",
    "statsmodels.formula.api.rlm": "doc",
    "statsmodels.formula.api.gee": "doc",
    "statsmodels.formula.api.glsar": "doc",
    "statsmodels.formula.api.phreg": "doc",
    "statsmodels.formula.api.glmgam": "doc",
    "statsmodels.formula.api.mixedlm": "doc",
    "statsmodels.formula.api.poisson": "doc",
    "statsmodels.formula.api.quantreg": "doc",
    "statsmodels.formula.api.ordinal_gee": "doc",
    "statsmodels.formula.api.nominal_gee": "doc",
    "statsmodels.formula.api.negativebinomial": "doc",
    "statsmodels.discrete.discrete_model.Logit": "doc",
    "statsmodels.discrete.discrete_model.MNLogit": "doc",
    "statsmodels.graphics.gofplots.ProbPlot": "doc",
    "statsmodels.discrete.discrete_model.Probit": "doc",
    "statsmodels.graphics.gofplots.qqplot_2samples": "doc",
    "statsmodels.graphics.gofplots.qqline": "doc",
    "statsmodels.graphics.gofplots.qqplot": "doc",
    "statsmodels.tsa.stattools.coint": "doc",
    "statsmodels.tsa.holtwinters.Holt": "doc",
    "statsmodels.__init__.categorical": "doc",
    "statsmodels.__init__.load_pickle": "doc",
    "statsmodels.tsa.tsatools.lagmat": "doc",
    "statsmodels.tsa.seasonal.hpfilter": "doc",
    "statsmodels.tsa.stattools.acf": "doc",
    "statsmodels.tsa.holtwinters.SimpleExpSmoothing": "doc",
    "statsmodels.__init__.test": "doc",
    "statsmodels.__init__.webdoc": "doc",
    "statsmodels.__init__.add_constant": "doc",
    "statsmodels.tsa.seasonal.bkfilter": "doc",
    "statsmodels.tsa.seasonal.cffilter": "doc",
    "statsmodels.__init__.show_versions": "doc",
    "statsmodels.tsa.holtwinters.ExponentialSmoothing": "doc",
    "statsmodels.tsa.stattools.kpss": "doc",
    "statsmodels.tsa.stattools.pacf": "doc",
    "statsmodels.tsa.statespace.dynamic_factor.DynamicFactor": "doc",
    "statsmodels.tsa.tsatools.lagmat2ds": "doc",
    "statsmodels.tsa.statespace.dynamic_factor.VAR": "doc",
    "statsmodels.tsa.statespace.dynamic_factor.SVAR": "doc",
    "statsmodels.tsa.statespace.dynamic_factor.VECM": "doc",
    "statsmodels.tsa.statespace.dynamic_factor.VARMAX": "doc",
    "statsmodels.tsa.statespace.dynamic_factor.UnobservedComponents": "doc",
    "statsmodels.multivariate.pca.PCA": "doc",
    "statsmodels.multivariate.manova.MANOVA": "doc",
    "statsmodels.imputation.MICEData": "doc",
    "statsmodels.regression.mixed_linear_model.QuantReg": "doc",
    "statsmodels.genmod.generalized_estimating_equations.NominalGEE": "doc",
    "statsmodels.tsa.regime_switching.markov_autoregression.MarkovRegression": "doc",
    "statsmodels.tsa.stattools.acovf": "doc",
    "statsmodels.imputation.MI": "doc",
    "statsmodels.imputation.MICE": "doc",
    "statsmodels.imputation.Factor": "doc",
    "statsmodels.imputation.BayesGaussMI": "doc",
    "statsmodels.regression.linear_model.OLS": "doc",
    "statsmodels.regression.linear_model.GLS": "doc",
    "statsmodels.regression.linear_model.WLS": "doc",
    "statsmodels.regression.linear_model.GLSAR": "doc",
    "statsmodels.imputation.BinomialBayesMixedGLM": "doc",
    "statsmodels.regression.mixed_linear_model.RLM": "doc",
    "statsmodels.regression.linear_model.RollingOLS": "doc",
    "statsmodels.regression.linear_model.RollingWLS": "doc",
    "statsmodels.regression.linear_model.RecursiveLS": "doc",
    "statsmodels.regression.mixed_linear_model.PHReg": "doc",
    "statsmodels.regression.mixed_linear_model.MixedLM": "doc",
    "statsmodels.regression.mixed_linear_model.SurvfuncRight": "doc",
    "statsmodels.tsa.stattools.periodogram": "doc",
    "statsmodels.tsa.regime_switching.markov_autoregression.MarkovAutoregression": "doc",
    "statsmodels.discrete.discrete_model.Poisson": "doc",
    "statsmodels.tsa.stattools.q_stat": "doc",
    "statsmodels.tsa.tsatools.add_lag": "doc",
    "statsmodels.genmod.generalized_linear_model.GLMGam": "doc",
    "statsmodels.tsa.stattools.pacf_yw": "doc",
    "statsmodels.tsa.ar_model.AR": "doc",
    "statsmodels.tsa.seasonal.STL": "doc",
    "statsmodels.tsa.ar_model.ARMA": "doc",
    "statsmodels.tsa.ar_model.ARIMA": "doc",
    "statsmodels.tsa.ar_model.SARIMAX": "doc",
    "statsmodels.tsa.tsatools.detrend": "doc",
    "statsmodels.tsa.tsatools.add_trend": "doc",
    "statsmodels.tsa.ar_model.ArmaProcess": "doc",
    "statsmodels.tsa.seasonal.seasonal_decompose": "doc",
    "statsmodels.tsa.ar_model.arma_order_select_ic": "doc",
    "statsmodels.tsa.ar_model.arma_generate_sample": "doc",
    "statsmodels.discrete.discrete_model.NegativeBinomial": "doc",
    "statsmodels.discrete.discrete_model.NegativeBinomialP": "doc",
    "statsmodels.tsa.stattools.adfuller": "doc",
    "statsmodels.tsa.stattools.pacf_ols": "doc",
    "statsmodels.discrete.discrete_model.GeneralizedPoisson": "doc",
    "statsmodels.discrete.discrete_model.ZeroInflatedPoisson": "doc",
    "statsmodels.tsa.stattools.bds": "doc",
    "statsmodels.tsa.stattools.ccf": "doc",
    "statsmodels.tsa.stattools.ccovf": "doc",
    "statsmodels.discrete.discrete_model.ZeroInflatedNegativeBinomialP": "doc",
    "statsmodels.discrete.discrete_model.ZeroInflatedGeneralizedPoisson": "doc",
    "statsmodels.tsa.x13.x13_arima_analysis": "doc",
    "statsmodels.genmod.generalized_estimating_equations.OrdinalGEE": "doc",
    "statsmodels.genmod.generalized_linear_model.PoissonBayesMixedGLM": "doc",
    "statsmodels.tsa.x13.x13_arima_select_order": "doc",
    "statsmodels.genmod.generalized_linear_model.GLM": "doc",
    "statsmodels.genmod.generalized_estimating_equations.GEE": "doc"
  },
  "pandas.tools.plotting": {
    "pandas.plotting.table": "doc",
    "pandas.plotting.boxplot": "doc",
    "pandas.plotting.bootstrap_plot": "doc",
    "pandas.plotting.autocorrelation_plot": "doc",
    "pandas.plotting.plot_params": "doc",
    "pandas.plotting": "doc",
    "pandas.plotting.radviz": "doc",
    "pandas.plotting.lag_plot": "doc",
    "pandas.plotting.andrews_curves": "doc",
    "pandas.plotting.scatter_matrix": "doc",
    "pandas.plotting.parallel_coordinates": "doc",
    "pandas.plotting.register_matplotlib_converters": "doc",
    "pandas.plotting.deregister_matplotlib_converters": "doc",
    "pandas.Index.to_list": "doc",
    "pandas.Series.to_list": "doc",
    "pandas.Series.rolling": "doc",
    "pandas.DataFrame.rolling": "doc",
    "pandas.core.window.rolling.Window.sum": "doc",
    "pandas.core.window.rolling.Window.var": "doc",
    "pandas.core.window.rolling.Window.std": "doc",
    "pandas.core.window.rolling.Rolling.sum": "doc",
    "pandas.core.window.rolling.Rolling.var": "doc",
    "pandas.core.window.rolling.Rolling.std": "doc",
    "pandas.core.window.rolling.Rolling.min": "doc",
    "pandas.core.window.rolling.Rolling.max": "doc",
    "pandas.core.window.rolling.Rolling.cov": "doc",
    "pandas.core.window.rolling.Window.mean": "doc",
    "pandas.core.window.rolling.Rolling.mean": "doc",
    "pandas.core.window.rolling.Rolling.corr": "doc",
    "pandas.core.window.rolling.Rolling.skew": "doc",
    "pandas.core.window.rolling.Rolling.kurt": "doc",
    "pandas.core.window.rolling.Rolling.count": "doc",
    "pandas.core.window.rolling.Rolling.apply": "doc",
    "pandas.core.window.rolling.Rolling.median": "doc",
    "pandas.core.window.rolling.Rolling.quantile": "doc",
    "pandas.core.window.rolling.Rolling.aggregate": "doc",
    "pandas.Series.bool": "doc",
    "pandas.DataFrame.bool": "doc",
    "pandas.Index.is_floating": "doc",
    "pandas.Series.plot": "doc",
    "pandas.DataFrame.plot": "doc",
    "pandas.Series.plot.bar": "doc",
    "pandas.Series.plot.box": "doc",
    "pandas.Series.plot.kde": "doc",
    "pandas.Series.plot.pie": "doc",
    "pandas.Series.plot.area": "doc",
    "pandas.Series.plot.barh": "doc",
    "pandas.Series.plot.hist": "doc",
    "pandas.Series.plot.line": "doc",
    "pandas.DataFrame.plot.bar": "doc",
    "pandas.DataFrame.plot.box": "doc",
    "pandas.DataFrame.plot.kde": "doc",
    "pandas.DataFrame.plot.pie": "doc",
    "pandas.Series.plot.density": "doc",
    "pandas.DataFrame.plot.area": "doc",
    "pandas.DataFrame.plot.barh": "doc",
    "pandas.DataFrame.plot.hist": "doc",
    "pandas.DataFrame.plot.line": "doc",
    "pandas.DataFrame.plot.hexbin": "doc",
    "pandas.DataFrame.plot.density": "doc",
    "pandas.DataFrame.plot.scatter": "doc",
    "pandas.core.groupby.DataFrameGroupBy.plot": "doc",
    "pandas.api.types.is_float_dtype": "doc",
    "pandas.Timestamp.toordinal": "doc",
    "pandas.errors.DtypeWarning": "doc",
    "pandas.api.types.is_string_dtype": "doc",
    "pandas.Series.to_string": "doc",
    "pandas.DataFrame.to_string": "doc",
    "pandas.testing.assert_frame_equal": "doc",
    "pandas.testing.assert_index_equal": "doc",
    "pandas.testing.assert_series_equal": "doc",
    "pandas.testing.assert_extension_array_equal": "doc",
    "pandas.Series.tail": "doc",
    "pandas.DataFrame.tail": "doc",
    "pandas.Series.str.title": "doc",
    "pandas.api.types.is_list_like": "doc",
    "pandas.core.groupby.GroupBy.tail": "doc",
    "pandas.Series.to_csv": "doc",
    "pandas.Series.to_sql": "doc",
    "pandas.DataFrame.to_csv": "doc",
    "pandas.DataFrame.to_sql": "doc",
    "pandas.Series.str.contains": "doc",
    "pandas.IntervalIndex.contains": "doc",
    "pandas.tseries.offsets.BMonthEnd": "doc",
    "pandas.tseries.offsets.BMonthEnd.base": "doc",
    "pandas.tseries.offsets.BMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.BMonthEnd.name": "doc",
    "pandas.tseries.offsets.BMonthEnd.copy": "doc",
    "pandas.tseries.offsets.BMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.BMonthEnd.apply": "doc",
    "pandas.tseries.offsets.BMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.BMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.BMonthEnd.rollback": "doc",
    "pandas.tseries.offsets.BMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.BMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.BMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.BMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.BMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.rollforward": "doc",
    "pandas.tseries.offsets.BMonthEnd.is_on_offset": "doc",
    "pandas.Series.str.partition": "doc",
    "pandas.tseries.offsets.CBMonthEnd.month_roll": "doc",
    "pandas.MultiIndex.codes": "doc",
    "pandas.api.types.is_object_dtype": "doc",
    "pandas.api.types.is_period_dtype": "doc",
    "pandas.errors.UnsupportedFunctionCall": "doc",
    "pandas.CategoricalIndex.codes": "doc",
    "pandas.api.types.is_complex_dtype": "doc",
    "pandas.tseries.offsets.CBMonthEnd": "doc",
    "pandas.tseries.offsets.CBMonthEnd.base": "doc",
    "pandas.tseries.offsets.CBMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.CBMonthEnd.name": "doc",
    "pandas.tseries.offsets.CBMonthEnd.copy": "doc",
    "pandas.tseries.offsets.CBMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.CBMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd.offset": "doc",
    "pandas.tseries.offsets.CBMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthEnd.m_offset": "doc",
    "pandas.tseries.offsets.CBMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rollback": "doc",
    "pandas.tseries.offsets.CBMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CBMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.CBMonthEnd.cbday_roll": "doc",
    "pandas.tseries.offsets.CBMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.CBMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.CBMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rollforward": "doc",
    "pandas.tseries.offsets.CBMonthEnd.is_on_offset": "doc",
    "pandas.DataFrame.lookup": "doc",
    "pandas.Categorical.codes": "doc",
    "pandas.api.types.is_datetime64_ns_dtype": "doc",
    "pandas.api.types.is_extension_type": "doc",
    "pandas.notna": "doc",
    "pandas.Index.join": "doc",
    "pandas.Index.notna": "doc",
    "pandas.Series.notna": "doc",
    "pandas.DataFrame.join": "doc",
    "pandas.Series.str.join": "doc",
    "pandas.DataFrame.notna": "doc",
    "pandas.MultiIndex.get_locs": "doc",
    "pandas.api.types.is_datetime64_any_dtype": "doc",
    "pandas.io.formats.style.Styler.set_properties": "doc",
    "pandas.IntervalIndex.to_tuples": "doc",
    "pandas.Series.str.rpartition": "doc",
    "pandas.api.types.pandas_dtype": "doc",
    "pandas.api.types.is_dict_like": "doc",
    "pandas.api.types.is_file_like": "doc",
    "pandas.api.types.union_categoricals": "doc",
    "pandas.errors.ParserWarning": "doc",
    "pandas.DatetimeIndex.to_series": "doc",
    "pandas.tseries.offsets.BMonthBegin": "doc",
    "pandas.tseries.offsets.Week.apply_index": "doc",
    "pandas.tseries.offsets.BDay.apply_index": "doc",
    "pandas.tseries.offsets.BMonthBegin.base": "doc",
    "pandas.tseries.offsets.BMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.BMonthBegin.name": "doc",
    "pandas.tseries.offsets.BMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CDay.apply_index": "doc",
    "pandas.tseries.offsets.BMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.BMonthBegin.apply": "doc",
    "pandas.tseries.offsets.YearEnd.apply_index": "doc",
    "pandas.tseries.offsets.BMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.MonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.BYearEnd.apply_index": "doc",
    "pandas.tseries.offsets.BMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.BMonthBegin.rollback": "doc",
    "pandas.tseries.offsets.BMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.YearBegin.apply_index": "doc",
    "pandas.tseries.offsets.BMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.BMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.MonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.QuarterEnd.apply_index": "doc",
    "pandas.tseries.offsets.YearOffset.apply_index": "doc",
    "pandas.tseries.offsets.BYearBegin.apply_index": "doc",
    "pandas.tseries.offsets.BMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessDay.apply_index": "doc",
    "pandas.tseries.offsets.MonthOffset.apply_index": "doc",
    "pandas.tseries.offsets.BQuarterEnd.apply_index": "doc",
    "pandas.tseries.offsets.BMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.BMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.rollforward": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.QuarterBegin.apply_index": "doc",
    "pandas.tseries.offsets.BMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.QuarterOffset.apply_index": "doc",
    "pandas.tseries.offsets.BQuarterBegin.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.apply_index": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.apply_index": "doc",
    "pandas.api.types.is_datetime64_dtype": "doc",
    "pandas.errors.PerformanceWarning": "doc",
    "pandas.api.types.is_bool_dtype": "doc",
    "pandas.Series.to_json": "doc",
    "pandas.DataFrame.to_json": "doc",
    "pandas.tseries.offsets.CBMonthBegin.month_roll": "doc",
    "pandas.pivot_table": "doc",
    "pandas.Series.tz_localize": "doc",
    "pandas.Series.dt.tz_localize": "doc",
    "pandas.DataFrame.pivot_table": "doc",
    "pandas.DataFrame.tz_localize": "doc",
    "pandas.Timestamp.tz_localize": "doc",
    "pandas.DatetimeIndex.tz_localize": "doc",
    "pandas.errors.OutOfBoundsDatetime": "doc",
    "pandas.api.types.is_int64_dtype": "doc",
    "pandas.api.types.is_categorical": "doc",
    "pandas.api.types.is_datetime64tz_dtype": "doc",
    "pandas.Series.align": "doc",
    "pandas.Series.combine": "doc",
    "pandas.DataFrame.align": "doc",
    "pandas.Series.str.lstrip": "doc",
    "pandas.DataFrame.combine": "doc",
    "pandas.Timestamp.combine": "doc",
    "pandas.MultiIndex.to_flat_index": "doc",
    "pandas.notnull": "doc",
    "pandas.Series.to_dict": "doc",
    "pandas.DataFrame.columns": "doc",
    "pandas.DataFrame.to_dict": "doc",
    "pandas.Series.str.istitle": "doc",
    "pandas.Series.sparse.npoints": "doc",
    "pandas.tseries.offsets.MonthEnd": "doc",
    "pandas.tseries.offsets.SemiMonthEnd": "doc",
    "pandas.tseries.offsets.CBMonthBegin": "doc",
    "pandas.io.formats.style.Styler.pipe": "doc",
    "pandas.tseries.offsets.MonthEnd.kwds": "doc",
    "pandas.tseries.offsets.MonthEnd.name": "doc",
    "pandas.tseries.offsets.MonthEnd.copy": "doc",
    "pandas.tseries.offsets.MonthEnd.nanos": "doc",
    "pandas.tseries.offsets.MonthEnd.apply": "doc",
    "pandas.io.formats.style.Styler.loader": "doc",
    "pandas.tseries.offsets.MonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.MonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.MonthEnd.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.name": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.copy": "doc",
    "pandas.tseries.offsets.CBMonthBegin.base": "doc",
    "pandas.tseries.offsets.CBMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.CBMonthBegin.name": "doc",
    "pandas.tseries.offsets.CBMonthBegin.copy": "doc",
    "pandas.tseries.offsets.MonthEnd.normalize": "doc",
    "pandas.tseries.offsets.MonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CBMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.CBMonthBegin.apply": "doc",
    "pandas.tseries.offsets.MonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.offset": "doc",
    "pandas.tseries.offsets.MonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.MonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CBMonthBegin.m_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rollback": "doc",
    "pandas.tseries.offsets.CBMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.CBMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.cbday_roll": "doc",
    "pandas.tseries.offsets.CBMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rollforward": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.is_on_offset": "doc",
    "pandas.MultiIndex.levels": "doc",
    "pandas.MultiIndex.set_codes": "doc",
    "pandas.core.window.expanding.Expanding.sum": "doc",
    "pandas.core.window.expanding.Expanding.var": "doc",
    "pandas.core.window.expanding.Expanding.std": "doc",
    "pandas.core.window.expanding.Expanding.min": "doc",
    "pandas.core.window.expanding.Expanding.max": "doc",
    "pandas.core.window.expanding.Expanding.cov": "doc",
    "pandas.core.window.expanding.Expanding.mean": "doc",
    "pandas.core.window.expanding.Expanding.corr": "doc",
    "pandas.core.window.expanding.Expanding.skew": "doc",
    "pandas.core.window.expanding.Expanding.kurt": "doc",
    "pandas.core.window.expanding.Expanding.count": "doc",
    "pandas.core.window.expanding.Expanding.apply": "doc",
    "pandas.core.window.expanding.Expanding.median": "doc",
    "pandas.core.window.expanding.Expanding.quantile": "doc",
    "pandas.core.window.expanding.Expanding.aggregate": "doc",
    "pandas.api.types.is_signed_integer_dtype": "doc",
    "pandas.api.types.is_timedelta64_ns_dtype": "doc",
    "pandas.Timestamp.fold": "doc",
    "pandas.Timestamp.today": "doc",
    "pandas.api.types.is_re": "doc",
    "pandas.Series.cat.codes": "doc",
    "pandas.api.types.is_bool": "doc",
    "pandas.api.types.is_float": "doc",
    "pandas.api.types.is_sparse": "doc",
    "pandas.api.types.is_number": "doc",
    "pandas.api.types.is_scalar": "doc",
    "pandas.DataFrame.to_records": "doc",
    "pandas.api.types.is_complex": "doc",
    "pandas.api.types.is_integer": "doc",
    "pandas.api.types.infer_dtype": "doc",
    "pandas.api.types.is_iterator": "doc",
    "pandas.api.types.is_hashable": "doc",
    "pandas.api.types.is_interval": "doc",
    "pandas.api.types.is_named_tuple": "doc",
    "pandas.core.groupby.GroupBy.ohlc": "doc",
    "pandas.api.types.is_integer_dtype": "doc",
    "pandas.api.types.is_numeric_dtype": "doc",
    "pandas.api.types.is_re_compilable": "doc",
    "pandas.api.types.is_interval_dtype": "doc",
    "pandas.core.resample.Resampler.ohlc": "doc",
    "pandas.api.types.is_categorical_dtype": "doc",
    "pandas.api.types.is_timedelta64_dtype": "doc",
    "pandas.api.types.is_extension_array_dtype": "doc",
    "pandas.api.types.is_unsigned_integer_dtype": "doc",
    "pandas.CategoricalIndex.equals": "doc",
    "pandas.DatetimeIndex.to_perioddelta": "doc",
    "pandas.io.formats.style.Styler.highlight_min": "doc",
    "pandas.get_option": "doc",
    "pandas.set_option": "doc",
    "pandas.wide_to_long": "doc",
    "pandas.period_range": "doc",
    "pandas.Float64Index": "doc",
    "pandas.Series.floordiv": "doc",
    "pandas.Series.autocorr": "doc",
    "pandas.Series.kurtosis": "doc",
    "pandas.Series.to_latex": "doc",
    "pandas.Series.expanding": "doc",
    "pandas.DataFrame.iterrows": "doc",
    "pandas.DataFrame.floordiv": "doc",
    "pandas.DataFrame.kurtosis": "doc",
    "pandas.DataFrame.to_latex": "doc",
    "pandas.DataFrame.expanding": "doc",
    "pandas.Timestamp.resolution": "doc",
    "pandas.Timedelta.resolution": "doc",
    "pandas.Series.cat.categories": "doc",
    "pandas.MultiIndex.set_levels": "doc",
    "pandas.Categorical.categories": "doc",
    "pandas.DataFrame.sparse.to_dense": "doc",
    "pandas.errors.UnsortedIndexError": "doc",
    "pandas.CategoricalDtype.categories": "doc",
    "pandas.CategoricalIndex.categories": "doc",
    "pandas.api.extensions.ExtensionDtype": "doc",
    "pandas.api.extensions.ExtensionArray": "doc",
    "pandas.tseries.offsets.SemiMonthBegin": "doc",
    "pandas.core.groupby.GroupBy.pct_change": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.name": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.copy": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.apply": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.freqstr": "doc",
    "pandas.io.formats.style.Styler.highlight_null": "doc",
    "pandas.api.extensions.register_index_accessor": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.__call__": "doc",
    "pandas.api.extensions.register_extension_dtype": "doc",
    "pandas.api.extensions.register_series_accessor": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.rule_code": "doc",
    "pandas.core.groupby.DataFrameGroupBy.pct_change": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.is_anchored": "doc",
    "pandas.api.extensions.register_dataframe_accessor": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.is_on_offset": "doc",
    "pandas.MultiIndex.nlevels": "doc",
    "pandas.MultiIndex.get_loc": "doc",
    "pandas.tseries.offsets.MonthBegin": "doc",
    "pandas.tseries.offsets.QuarterEnd": "doc",
    "pandas.tseries.offsets.MonthBegin.kwds": "doc",
    "pandas.tseries.offsets.MonthBegin.name": "doc",
    "pandas.tseries.offsets.MonthBegin.copy": "doc",
    "pandas.tseries.offsets.QuarterEnd.kwds": "doc",
    "pandas.tseries.offsets.QuarterEnd.name": "doc",
    "pandas.tseries.offsets.QuarterEnd.copy": "doc",
    "pandas.tseries.offsets.MonthBegin.nanos": "doc",
    "pandas.tseries.offsets.MonthBegin.apply": "doc",
    "pandas.tseries.offsets.QuarterEnd.nanos": "doc",
    "pandas.tseries.offsets.QuarterEnd.apply": "doc",
    "pandas.tseries.offsets.MonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.QuarterEnd.freqstr": "doc",
    "pandas.tseries.offsets.MonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.MonthBegin.__call__": "doc",
    "pandas.tseries.offsets.QuarterEnd.onOffset": "doc",
    "pandas.tseries.offsets.QuarterEnd.__call__": "doc",
    "pandas.tseries.offsets.MonthBegin.normalize": "doc",
    "pandas.tseries.offsets.MonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.QuarterEnd.normalize": "doc",
    "pandas.tseries.offsets.QuarterEnd.rule_code": "doc",
    "pandas.tseries.offsets.MonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterEnd.isAnchored": "doc",
    "pandas.tseries.offsets.MonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterEnd.is_anchored": "doc",
    "pandas.tseries.offsets.MonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.QuarterEnd.is_on_offset": "doc",
    "pandas.io.formats.style.Styler.set_table_attributes": "doc",
    "pandas.Categorical.from_codes": "doc",
    "pandas.DatetimeIndex.to_frame": "doc",
    "pandas.errors.EmptyDataError": "doc",
    "pandas.TimedeltaIndex.to_series": "doc",
    "pandas.Series.dt.to_pydatetime": "doc",
    "pandas.Timestamp.to_pydatetime": "doc",
    "pandas.DatetimeIndex.to_pydatetime": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.name": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.copy": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.apply": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.is_on_offset": "doc",
    "pandas.MultiIndex.from_tuples": "doc",
    "pandas.tseries.offsets.BQuarterEnd": "doc",
    "pandas.tseries.offsets.BQuarterEnd.kwds": "doc",
    "pandas.tseries.offsets.BQuarterEnd.name": "doc",
    "pandas.tseries.offsets.BQuarterEnd.copy": "doc",
    "pandas.tseries.offsets.BDay.rollforward": "doc",
    "pandas.tseries.offsets.CDay.rollforward": "doc",
    "pandas.tseries.offsets.BQuarterEnd.nanos": "doc",
    "pandas.tseries.offsets.BQuarterEnd.apply": "doc",
    "pandas.tseries.offsets.BQuarterEnd.freqstr": "doc",
    "pandas.io.formats.style.Styler.set_caption": "doc",
    "pandas.tseries.offsets.BQuarterEnd.onOffset": "doc",
    "pandas.tseries.offsets.BQuarterEnd.__call__": "doc",
    "pandas.tseries.offsets.BQuarterEnd.normalize": "doc",
    "pandas.tseries.offsets.BQuarterEnd.rule_code": "doc",
    "pandas.tseries.offsets.BQuarterEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BQuarterEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BQuarterEnd.is_on_offset": "doc",
    "pandas.Series.pct_change": "doc",
    "pandas.Series.sort_index": "doc",
    "pandas.Period.start_time": "doc",
    "pandas.Series.dt.start_time": "doc",
    "pandas.DataFrame.pct_change": "doc",
    "pandas.DataFrame.sort_index": "doc",
    "pandas.RangeIndex.from_range": "doc",
    "pandas.PeriodIndex.start_time": "doc",
    "pandas.tseries.offsets.CustomBusinessDay": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.name": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.copy": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.freqstr": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.is_on_offset": "doc",
    "pandas.Series.dt.total_seconds": "doc",
    "pandas.Timedelta.total_seconds": "doc",
    "pandas.Index.equals": "doc",
    "pandas.Series.dtypes": "doc",
    "pandas.Series.equals": "doc",
    "pandas.Series.to_hdf": "doc",
    "pandas.HDFStore.groups": "doc",
    "pandas.Index.to_series": "doc",
    "pandas.Index.asof_locs": "doc",
    "pandas.Series.to_pickle": "doc",
    "pandas.DataFrame.dtypes": "doc",
    "pandas.DataFrame.equals": "doc",
    "pandas.DataFrame.to_hdf": "doc",
    "pandas.DataFrame.to_gbq": "doc",
    "pandas.errors.ParserError": "doc",
    "pandas.DataFrame.to_pickle": "doc",
    "pandas.Timestamp.utcoffset": "doc",
    "pandas.Series.sparse.to_coo": "doc",
    "pandas.DataFrame.sparse.to_coo": "doc",
    "pandas.core.groupby.GroupBy.groups": "doc",
    "pandas.core.resample.Resampler.groups": "doc",
    "pandas.to_datetime": "doc",
    "pandas.Series.dt.nanoseconds": "doc",
    "pandas.Timestamp.fromordinal": "doc",
    "pandas.Timedelta.nanoseconds": "doc",
    "pandas.IntervalIndex.from_tuples": "doc",
    "pandas.TimedeltaIndex.nanoseconds": "doc",
    "pandas.DatetimeIndex.normalize": "doc",
    "pandas.DatetimeIndex.to_period": "doc",
    "pandas.IntervalIndex.is_overlapping": "doc",
    "pandas.tseries.offsets.QuarterBegin": "doc",
    "pandas.tseries.offsets.QuarterBegin.kwds": "doc",
    "pandas.tseries.offsets.QuarterBegin.name": "doc",
    "pandas.tseries.offsets.QuarterBegin.copy": "doc",
    "pandas.tseries.offsets.CustomBusinessHour": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin": "doc",
    "pandas.tseries.offsets.QuarterBegin.nanos": "doc",
    "pandas.tseries.offsets.QuarterBegin.apply": "doc",
    "pandas.tseries.offsets.QuarterBegin.freqstr": "doc",
    "pandas.tseries.offsets.QuarterBegin.onOffset": "doc",
    "pandas.tseries.offsets.QuarterBegin.__call__": "doc",
    "pandas.tseries.offsets.QuarterBegin.normalize": "doc",
    "pandas.tseries.offsets.QuarterBegin.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.name": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.copy": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.name": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.copy": "doc",
    "pandas.tseries.offsets.QuarterBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.apply": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin": "doc",
    "pandas.tseries.offsets.QuarterBegin.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.__call__": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.rule_code": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.name": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset": "doc",
    "pandas.Series.lt": "doc",
    "pandas.Series.loc": "doc",
    "pandas.Series.pop": "doc",
    "pandas.Series.pow": "doc",
    "pandas.Series.dot": "doc",
    "pandas.Series.iloc": "doc",
    "pandas.Series.prod": "doc",
    "pandas.Series.round": "doc",
    "pandas.Series.count": "doc",
    "pandas.Series.attrs": "doc",
    "pandas.DataFrame.lt": "doc",
    "pandas.Period.month": "doc",
    "pandas.DataFrame.loc": "doc",
    "pandas.DataFrame.pop": "doc",
    "pandas.DataFrame.pow": "doc",
    "pandas.DataFrame.dot": "doc",
    "pandas.Series.dt.time": "doc",
    "pandas.DataFrame.iloc": "doc",
    "pandas.DataFrame.prod": "doc",
    "pandas.Timestamp.time": "doc",
    "pandas.util.hash_array": "doc",
    "pandas.Series.dt.month": "doc",
    "pandas.Series.dt.round": "doc",
    "pandas.Series.dt.floor": "doc",
    "pandas.DataFrame.count": "doc",
    "pandas.DataFrame.round": "doc",
    "pandas.DataFrame.attrs": "doc",
    "pandas.Timestamp.month": "doc",
    "pandas.Timestamp.floor": "doc",
    "pandas.Timestamp.round": "doc",
    "pandas.Timedelta.floor": "doc",
    "pandas.Timedelta.round": "doc",
    "pandas.Series.str.count": "doc",
    "pandas.Series.str.lower": "doc",
    "pandas.PeriodIndex.month": "doc",
    "pandas.DatetimeIndex.time": "doc",
    "pandas.MultiIndex.to_frame": "doc",
    "pandas.DatetimeIndex.month": "doc",
    "pandas.DatetimeIndex.round": "doc",
    "pandas.DatetimeIndex.floor": "doc",
    "pandas.TimedeltaIndex.round": "doc",
    "pandas.TimedeltaIndex.floor": "doc",
    "pandas.util.hash_pandas_object": "doc",
    "pandas.core.groupby.GroupBy.min": "doc",
    "pandas.core.groupby.GroupBy.pipe": "doc",
    "pandas.core.groupby.GroupBy.last": "doc",
    "pandas.core.groupby.GroupBy.prod": "doc",
    "pandas.io.json.build_table_schema": "doc",
    "pandas.core.groupby.GroupBy.count": "doc",
    "pandas.core.groupby.GroupBy.cummin": "doc",
    "pandas.core.resample.Resampler.min": "doc",
    "pandas.core.resample.Resampler.pipe": "doc",
    "pandas.core.resample.Resampler.last": "doc",
    "pandas.core.resample.Resampler.prod": "doc",
    "pandas.core.resample.Resampler.count": "doc",
    "pandas.core.resample.Resampler.quantile": "doc",
    "pandas.core.groupby.DataFrameGroupBy.count": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cummin": "doc",
    "pandas.core.groupby.DataFrameGroupBy.idxmin": "doc",
    "pandas.core.groupby.DataFrameGroupBy.quantile": "doc",
    "pandas.factorize": "doc",
    "pandas.Index.factorize": "doc",
    "pandas.Series.rfloordiv": "doc",
    "pandas.Series.factorize": "doc",
    "pandas.DataFrame.rfloordiv": "doc",
    "pandas.io.formats.style.Styler.background_gradient": "doc",
    "pandas.TimedeltaIndex.components": "doc",
    "pandas.tseries.offsets.BQuarterBegin": "doc",
    "pandas.tseries.offsets.BQuarterBegin.kwds": "doc",
    "pandas.tseries.offsets.BQuarterBegin.name": "doc",
    "pandas.tseries.offsets.BQuarterBegin.copy": "doc",
    "pandas.tseries.offsets.BQuarterBegin.nanos": "doc",
    "pandas.tseries.offsets.BQuarterBegin.apply": "doc",
    "pandas.tseries.offsets.BQuarterBegin.freqstr": "doc",
    "pandas.io.formats.style.Styler.set_precision": "doc",
    "pandas.io.formats.style.Styler.highlight_max": "doc",
    "pandas.tseries.offsets.BQuarterBegin.onOffset": "doc",
    "pandas.tseries.offsets.BQuarterBegin.__call__": "doc",
    "pandas.tseries.offsets.BQuarterBegin.normalize": "doc",
    "pandas.tseries.offsets.BQuarterBegin.rule_code": "doc",
    "pandas.tseries.offsets.BQuarterBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BQuarterBegin.is_anchored": "doc",
    "pandas.tseries.offsets.BQuarterBegin.is_on_offset": "doc",
    "pandas.bdate_range": "doc",
    "pandas.Series.reset_index": "doc",
    "pandas.DataFrame.reset_index": "doc",
    "pandas.io.formats.style.Styler.from_custom_template": "doc",
    "pandas.DatetimeIndex.tz": "doc",
    "pandas.DatetimeIndex.hour": "doc",
    "pandas.DatetimeIndex.ceil": "doc",
    "pandas.MultiIndex.get_loc_level": "doc",
    "pandas.DatetimeIndex.nanosecond": "doc",
    "pandas.DatetimeIndex.tz_convert": "doc",
    "pandas.option_context": "doc",
    "pandas.TimedeltaIndex.seconds": "doc",
    "pandas.Index.is_boolean": "doc",
    "pandas.Series.dt.components": "doc",
    "pandas.DataFrame.itertuples": "doc",
    "pandas.Timedelta.components": "doc",
    "pandas.IntervalIndex.set_closed": "doc",
    "pandas.MultiIndex.sortlevel": "doc",
    "pandas.MultiIndex.droplevel": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.name": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.copy": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.SemiMonthOffset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.name": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.copy": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.kwds": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.name": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.apply": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.nanos": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.apply": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.freqstr": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.__call__": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.onOffset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.rule_code": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.normalize": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.isAnchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.is_anchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.is_anchored": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.is_on_offset": "doc",
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing": "doc",
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing": "doc",
    "pandas.pivot": "doc",
    "pandas.Index.min": "doc",
    "pandas.Series.min": "doc",
    "pandas.Index.isin": "doc",
    "pandas.Series.pipe": "doc",
    "pandas.Series.clip": "doc",
    "pandas.Series.isin": "doc",
    "pandas.Series.last": "doc",
    "pandas.Index.union": "doc",
    "pandas.HDFStore.put": "doc",
    "pandas.to_timedelta": "doc",
    "pandas.BooleanDtype": "doc",
    "pandas.Index.argmin": "doc",
    "pandas.Index.dropna": "doc",
    "pandas.reset_option": "doc",
    "pandas.Series.cummin": "doc",
    "pandas.Series.idxmin": "doc",
    "pandas.Series.dropna": "doc",
    "pandas.Series.argmin": "doc",
    "pandas.DataFrame.min": "doc",
    "pandas.Timestamp.min": "doc",
    "pandas.Timedelta.min": "doc",
    "pandas.Interval.left": "doc",
    "pandas.Index.putmask": "doc",
    "pandas.Series.product": "doc",
    "pandas.Series.at_time": "doc",
    "pandas.Series.str.len": "doc",
    "pandas.DataFrame.isin": "doc",
    "pandas.DataFrame.pipe": "doc",
    "pandas.DataFrame.clip": "doc",
    "pandas.DataFrame.last": "doc",
    "pandas.Period.ordinal": "doc",
    "pandas.Series.quantile": "doc",
    "pandas.Series.str.find": "doc",
    "pandas.DataFrame.pivot": "doc",
    "pandas.Timestamp.ctime": "doc",
    "pandas.Period.end_time": "doc",
    "pandas.Period.strftime": "doc",
    "pandas.Interval.closed": "doc",
    "pandas.Series.str.rfind": "doc",
    "pandas.Series.str.slice": "doc",
    "pandas.Series.str.split": "doc",
    "pandas.Series.str.strip": "doc",
    "pandas.DataFrame.cummin": "doc",
    "pandas.DataFrame.idxmin": "doc",
    "pandas.DataFrame.dropna": "doc",
    "pandas.DataFrame.assign": "doc",
    "pandas.Timestamp.tzinfo": "doc",
    "pandas.Series.str.rstrip": "doc",
    "pandas.DataFrame.product": "doc",
    "pandas.DataFrame.at_time": "doc",
    "pandas.Series.dt.strftime": "doc",
    "pandas.Series.dt.end_time": "doc",
    "pandas.DataFrame.quantile": "doc",
    "pandas.Timestamp.strftime": "doc",
    "pandas.Timestamp.strptime": "doc",
    "pandas.Index.is_monotonic": "doc",
    "pandas.IntervalIndex.left": "doc",
    "pandas.Series.to_timestamp": "doc",
    "pandas.Series.is_monotonic": "doc",
    "pandas.Period.to_timestamp": "doc",
    "pandas.arrays.BooleanArray": "doc",
    "pandas.IntervalIndex.closed": "doc",
    "pandas.PeriodIndex.end_time": "doc",
    "pandas.PeriodIndex.strftime": "doc",
    "pandas.Interval.closed_right": "doc",
    "pandas.Series.dt.is_month_end": "doc",
    "pandas.Series.dt.microseconds": "doc",
    "pandas.DataFrame.to_timestamp": "doc",
    "pandas.Timestamp.is_month_end": "doc",
    "pandas.Timedelta.microseconds": "doc",
    "pandas.DatetimeIndex.strftime": "doc",
    "pandas.PeriodIndex.to_timestamp": "doc",
    "pandas.DatetimeIndex.is_month_end": "doc",
    "pandas.TimedeltaIndex.microseconds": "doc",
    "pandas.MultiIndex.reorder_levels": "doc",
    "pandas.DatetimeIndex.microsecond": "doc",
    "pandas.Index.get_loc": "doc",
    "pandas.Series.dt.seconds": "doc",
    "pandas.DataFrame.boxplot": "doc",
    "pandas.DataFrame.to_html": "doc",
    "pandas.Timedelta.seconds": "doc",
    "pandas.tseries.offsets.Day": "doc",
    "pandas.tseries.offsets.Week": "doc",
    "pandas.tseries.offsets.Tick": "doc",
    "pandas.tseries.offsets.Hour": "doc",
    "pandas.tseries.offsets.Nano": "doc",
    "pandas.tseries.offsets.BDay": "doc",
    "pandas.tseries.offsets.CDay": "doc",
    "pandas.IntervalIndex.get_loc": "doc",
    "pandas.tseries.offsets.Milli": "doc",
    "pandas.tseries.offsets.Micro": "doc",
    "pandas.tseries.offsets.FY5253": "doc",
    "pandas.tseries.offsets.Easter": "doc",
    "pandas.tseries.offsets.Minute": "doc",
    "pandas.tseries.offsets.Second": "doc",
    "pandas.tseries.offsets.YearEnd": "doc",
    "pandas.io.formats.style.Styler": "doc",
    "pandas.tseries.offsets.BYearEnd": "doc",
    "pandas.tseries.offsets.Day.kwds": "doc",
    "pandas.tseries.offsets.Day.name": "doc",
    "pandas.tseries.offsets.Day.copy": "doc",
    "pandas.tseries.offsets.Week.kwds": "doc",
    "pandas.tseries.offsets.Week.name": "doc",
    "pandas.tseries.offsets.Week.copy": "doc",
    "pandas.tseries.offsets.YearBegin": "doc",
    "pandas.tseries.offsets.Tick.kwds": "doc",
    "pandas.tseries.offsets.Tick.name": "doc",
    "pandas.tseries.offsets.Tick.copy": "doc",
    "pandas.tseries.offsets.Day.delta": "doc",
    "pandas.tseries.offsets.Day.nanos": "doc",
    "pandas.tseries.offsets.Hour.kwds": "doc",
    "pandas.tseries.offsets.Hour.name": "doc",
    "pandas.tseries.offsets.Hour.copy": "doc",
    "pandas.tseries.offsets.Nano.kwds": "doc",
    "pandas.tseries.offsets.Nano.name": "doc",
    "pandas.tseries.offsets.Nano.copy": "doc",
    "pandas.tseries.offsets.BDay.base": "doc",
    "pandas.tseries.offsets.BDay.kwds": "doc",
    "pandas.tseries.offsets.BDay.name": "doc",
    "pandas.tseries.offsets.BDay.copy": "doc",
    "pandas.tseries.offsets.CDay.base": "doc",
    "pandas.tseries.offsets.CDay.kwds": "doc",
    "pandas.tseries.offsets.CDay.name": "doc",
    "pandas.tseries.offsets.CDay.copy": "doc",
    "pandas.tseries.offsets.DateOffset": "doc",
    "pandas.tseries.offsets.Week.nanos": "doc",
    "pandas.tseries.offsets.Week.apply": "doc",
    "pandas.tseries.offsets.YearOffset": "doc",
    "pandas.tseries.offsets.BYearBegin": "doc",
    "pandas.tseries.offsets.Tick.delta": "doc",
    "pandas.tseries.offsets.Tick.nanos": "doc",
    "pandas.tseries.offsets.Hour.delta": "doc",
    "pandas.tseries.offsets.Hour.nanos": "doc",
    "pandas.tseries.offsets.Milli.kwds": "doc",
    "pandas.tseries.offsets.Milli.name": "doc",
    "pandas.tseries.offsets.Milli.copy": "doc",
    "pandas.tseries.offsets.Micro.kwds": "doc",
    "pandas.tseries.offsets.Micro.name": "doc",
    "pandas.tseries.offsets.Micro.copy": "doc",
    "pandas.tseries.offsets.Nano.delta": "doc",
    "pandas.tseries.offsets.Nano.nanos": "doc",
    "pandas.tseries.offsets.BDay.nanos": "doc",
    "pandas.tseries.offsets.BDay.apply": "doc",
    "pandas.tseries.offsets.CDay.nanos": "doc",
    "pandas.tseries.offsets.CDay.apply": "doc",
    "pandas.tseries.offsets.BusinessDay": "doc",
    "pandas.tseries.offsets.MonthOffset": "doc",
    "pandas.tseries.offsets.WeekOfMonth": "doc",
    "pandas.tseries.offsets.FY5253.kwds": "doc",
    "pandas.tseries.offsets.FY5253.name": "doc",
    "pandas.tseries.offsets.FY5253.copy": "doc",
    "pandas.tseries.offsets.Easter.kwds": "doc",
    "pandas.tseries.offsets.Easter.name": "doc",
    "pandas.tseries.offsets.Easter.copy": "doc",
    "pandas.tseries.offsets.Day.freqstr": "doc",
    "pandas.tseries.offsets.Minute.kwds": "doc",
    "pandas.tseries.offsets.Minute.name": "doc",
    "pandas.tseries.offsets.Minute.copy": "doc",
    "pandas.tseries.offsets.Second.kwds": "doc",
    "pandas.tseries.offsets.Second.name": "doc",
    "pandas.tseries.offsets.Second.copy": "doc",
    "pandas.tseries.offsets.Milli.delta": "doc",
    "pandas.tseries.offsets.Milli.nanos": "doc",
    "pandas.tseries.offsets.Micro.delta": "doc",
    "pandas.tseries.offsets.Micro.nanos": "doc",
    "pandas.tseries.offsets.BDay.offset": "doc",
    "pandas.tseries.offsets.CDay.offset": "doc",
    "pandas.io.formats.style.Styler.env": "doc",
    "pandas.io.formats.style.Styler.bar": "doc",
    "pandas.io.formats.style.Styler.use": "doc",
    "pandas.tseries.offsets.BusinessHour": "doc",
    "pandas.tseries.offsets.Week.freqstr": "doc",
    "pandas.tseries.offsets.YearEnd.kwds": "doc",
    "pandas.tseries.offsets.YearEnd.name": "doc",
    "pandas.tseries.offsets.YearEnd.copy": "doc",
    "pandas.tseries.offsets.FY5253.nanos": "doc",
    "pandas.tseries.offsets.FY5253.apply": "doc",
    "pandas.tseries.offsets.Easter.nanos": "doc",
    "pandas.tseries.offsets.Easter.apply": "doc",
    "pandas.tseries.offsets.Tick.freqstr": "doc",
    "pandas.tseries.offsets.Day.onOffset": "doc",
    "pandas.tseries.offsets.Day.__call__": "doc",
    "pandas.tseries.offsets.Hour.freqstr": "doc",
    "pandas.tseries.offsets.Minute.delta": "doc",
    "pandas.tseries.offsets.Minute.nanos": "doc",
    "pandas.tseries.offsets.Second.delta": "doc",
    "pandas.tseries.offsets.Second.nanos": "doc",
    "pandas.tseries.offsets.Nano.freqstr": "doc",
    "pandas.tseries.offsets.BDay.freqstr": "doc",
    "pandas.tseries.offsets.CDay.freqstr": "doc",
    "pandas.tseries.offsets.Week.onOffset": "doc",
    "pandas.tseries.offsets.Week.__call__": "doc",
    "pandas.tseries.offsets.QuarterOffset": "doc",
    "pandas.tseries.offsets.BYearEnd.kwds": "doc",
    "pandas.tseries.offsets.BYearEnd.name": "doc",
    "pandas.tseries.offsets.BYearEnd.copy": "doc",
    "pandas.tseries.offsets.YearEnd.nanos": "doc",
    "pandas.tseries.offsets.YearEnd.apply": "doc",
    "pandas.tseries.offsets.FY5253Quarter": "doc",
    "pandas.tseries.offsets.Tick.onOffset": "doc",
    "pandas.tseries.offsets.Tick.__call__": "doc",
    "pandas.tseries.offsets.Day.normalize": "doc",
    "pandas.tseries.offsets.Day.rule_code": "doc",
    "pandas.tseries.offsets.Hour.onOffset": "doc",
    "pandas.tseries.offsets.Hour.__call__": "doc",
    "pandas.tseries.offsets.Milli.freqstr": "doc",
    "pandas.tseries.offsets.Micro.freqstr": "doc",
    "pandas.tseries.offsets.Nano.onOffset": "doc",
    "pandas.tseries.offsets.Nano.__call__": "doc",
    "pandas.tseries.offsets.BDay.onOffset": "doc",
    "pandas.tseries.offsets.BDay.rollback": "doc",
    "pandas.tseries.offsets.BDay.__call__": "doc",
    "pandas.tseries.offsets.CDay.onOffset": "doc",
    "pandas.tseries.offsets.CDay.rollback": "doc",
    "pandas.tseries.offsets.CDay.__call__": "doc",
    "pandas.io.formats.style.Styler.apply": "doc",
    "pandas.io.formats.style.Styler.where": "doc",
    "pandas.io.formats.style.Styler.clear": "doc",
    "pandas.tseries.offsets.Week.normalize": "doc",
    "pandas.tseries.offsets.Week.rule_code": "doc",
    "pandas.tseries.offsets.BYearEnd.nanos": "doc",
    "pandas.tseries.offsets.BYearEnd.apply": "doc",
    "pandas.tseries.offsets.YearBegin.kwds": "doc",
    "pandas.tseries.offsets.YearBegin.name": "doc",
    "pandas.tseries.offsets.YearBegin.copy": "doc",
    "pandas.tseries.offsets.FY5253.freqstr": "doc",
    "pandas.tseries.offsets.Easter.freqstr": "doc",
    "pandas.tseries.offsets.Tick.normalize": "doc",
    "pandas.tseries.offsets.Tick.rule_code": "doc",
    "pandas.tseries.offsets.Day.isAnchored": "doc",
    "pandas.tseries.offsets.Hour.normalize": "doc",
    "pandas.tseries.offsets.Hour.rule_code": "doc",
    "pandas.tseries.offsets.Minute.freqstr": "doc",
    "pandas.tseries.offsets.Second.freqstr": "doc",
    "pandas.tseries.offsets.Milli.onOffset": "doc",
    "pandas.tseries.offsets.Milli.__call__": "doc",
    "pandas.tseries.offsets.Micro.onOffset": "doc",
    "pandas.tseries.offsets.Micro.__call__": "doc",
    "pandas.tseries.offsets.Nano.normalize": "doc",
    "pandas.tseries.offsets.Nano.rule_code": "doc",
    "pandas.tseries.offsets.BDay.normalize": "doc",
    "pandas.tseries.offsets.BDay.rule_code": "doc",
    "pandas.tseries.offsets.CDay.normalize": "doc",
    "pandas.tseries.offsets.CDay.rule_code": "doc",
    "pandas.io.formats.style.Styler.format": "doc",
    "pandas.io.formats.style.Styler.render": "doc",
    "pandas.io.formats.style.Styler.export": "doc",
    "pandas.tseries.offsets.DateOffset.kwds": "doc",
    "pandas.tseries.offsets.DateOffset.name": "doc",
    "pandas.tseries.offsets.DateOffset.copy": "doc",
    "pandas.tseries.offsets.Week.isAnchored": "doc",
    "pandas.tseries.offsets.YearOffset.kwds": "doc",
    "pandas.tseries.offsets.YearOffset.name": "doc",
    "pandas.tseries.offsets.YearOffset.copy": "doc",
    "pandas.tseries.offsets.BYearBegin.kwds": "doc",
    "pandas.tseries.offsets.BYearBegin.name": "doc",
    "pandas.tseries.offsets.BYearBegin.copy": "doc",
    "pandas.tseries.offsets.YearEnd.freqstr": "doc",
    "pandas.tseries.offsets.YearBegin.nanos": "doc",
    "pandas.tseries.offsets.YearBegin.apply": "doc",
    "pandas.tseries.offsets.FY5253.onOffset": "doc",
    "pandas.tseries.offsets.FY5253.__call__": "doc",
    "pandas.tseries.offsets.Easter.onOffset": "doc",
    "pandas.tseries.offsets.Easter.__call__": "doc",
    "pandas.tseries.offsets.Tick.isAnchored": "doc",
    "pandas.tseries.offsets.Day.is_anchored": "doc",
    "pandas.tseries.offsets.Hour.isAnchored": "doc",
    "pandas.tseries.offsets.Minute.onOffset": "doc",
    "pandas.tseries.offsets.Minute.__call__": "doc",
    "pandas.tseries.offsets.Second.onOffset": "doc",
    "pandas.tseries.offsets.Second.__call__": "doc",
    "pandas.tseries.offsets.Milli.normalize": "doc",
    "pandas.tseries.offsets.Milli.rule_code": "doc",
    "pandas.tseries.offsets.Micro.normalize": "doc",
    "pandas.tseries.offsets.Micro.rule_code": "doc",
    "pandas.tseries.offsets.Nano.isAnchored": "doc",
    "pandas.tseries.offsets.BDay.isAnchored": "doc",
    "pandas.tseries.offsets.CDay.isAnchored": "doc",
    "pandas.tseries.offsets.DateOffset.nanos": "doc",
    "pandas.tseries.offsets.DateOffset.apply": "doc",
    "pandas.tseries.offsets.BusinessDay.kwds": "doc",
    "pandas.tseries.offsets.BusinessDay.name": "doc",
    "pandas.tseries.offsets.BusinessDay.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.kwds": "doc",
    "pandas.tseries.offsets.MonthOffset.name": "doc",
    "pandas.tseries.offsets.MonthOffset.copy": "doc",
    "pandas.tseries.offsets.Week.is_anchored": "doc",
    "pandas.tseries.offsets.WeekOfMonth.kwds": "doc",
    "pandas.tseries.offsets.WeekOfMonth.name": "doc",
    "pandas.tseries.offsets.WeekOfMonth.copy": "doc",
    "pandas.tseries.offsets.YearOffset.nanos": "doc",
    "pandas.tseries.offsets.YearOffset.apply": "doc",
    "pandas.tseries.offsets.BYearEnd.freqstr": "doc",
    "pandas.tseries.offsets.BYearBegin.nanos": "doc",
    "pandas.tseries.offsets.BYearBegin.apply": "doc",
    "pandas.tseries.offsets.YearEnd.onOffset": "doc",
    "pandas.tseries.offsets.YearEnd.__call__": "doc",
    "pandas.tseries.offsets.FY5253.normalize": "doc",
    "pandas.tseries.offsets.FY5253.rule_code": "doc",
    "pandas.tseries.offsets.Easter.normalize": "doc",
    "pandas.tseries.offsets.Easter.rule_code": "doc",
    "pandas.tseries.offsets.Tick.is_anchored": "doc",
    "pandas.tseries.offsets.Day.is_on_offset": "doc",
    "pandas.tseries.offsets.Hour.is_anchored": "doc",
    "pandas.tseries.offsets.Minute.normalize": "doc",
    "pandas.tseries.offsets.Minute.rule_code": "doc",
    "pandas.tseries.offsets.Second.normalize": "doc",
    "pandas.tseries.offsets.Second.rule_code": "doc",
    "pandas.tseries.offsets.Milli.isAnchored": "doc",
    "pandas.tseries.offsets.Micro.isAnchored": "doc",
    "pandas.tseries.offsets.Nano.is_anchored": "doc",
    "pandas.tseries.offsets.BDay.is_anchored": "doc",
    "pandas.tseries.offsets.CDay.is_anchored": "doc",
    "pandas.io.formats.style.Styler.template": "doc",
    "pandas.io.formats.style.Styler.applymap": "doc",
    "pandas.io.formats.style.Styler.set_uuid": "doc",
    "pandas.io.formats.style.Styler.to_excel": "doc",
    "pandas.tseries.offsets.BusinessDay.nanos": "doc",
    "pandas.tseries.offsets.BusinessDay.apply": "doc",
    "pandas.tseries.offsets.BusinessHour.kwds": "doc",
    "pandas.tseries.offsets.BusinessHour.name": "doc",
    "pandas.tseries.offsets.BusinessHour.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.nanos": "doc",
    "pandas.tseries.offsets.MonthOffset.apply": "doc",
    "pandas.tseries.offsets.Week.is_on_offset": "doc",
    "pandas.tseries.offsets.WeekOfMonth.nanos": "doc",
    "pandas.tseries.offsets.WeekOfMonth.apply": "doc",
    "pandas.tseries.offsets.BYearEnd.onOffset": "doc",
    "pandas.tseries.offsets.BYearEnd.__call__": "doc",
    "pandas.tseries.offsets.YearEnd.normalize": "doc",
    "pandas.tseries.offsets.YearEnd.rule_code": "doc",
    "pandas.tseries.offsets.YearBegin.freqstr": "doc",
    "pandas.tseries.offsets.FY5253.isAnchored": "doc",
    "pandas.tseries.offsets.Easter.isAnchored": "doc",
    "pandas.tseries.offsets.Tick.is_on_offset": "doc",
    "pandas.tseries.offsets.Hour.is_on_offset": "doc",
    "pandas.tseries.offsets.Minute.isAnchored": "doc",
    "pandas.tseries.offsets.Second.isAnchored": "doc",
    "pandas.tseries.offsets.Milli.is_anchored": "doc",
    "pandas.tseries.offsets.Micro.is_anchored": "doc",
    "pandas.tseries.offsets.Nano.is_on_offset": "doc",
    "pandas.tseries.offsets.BDay.is_on_offset": "doc",
    "pandas.tseries.offsets.CDay.is_on_offset": "doc",
    "pandas.tseries.offsets.DateOffset.freqstr": "doc",
    "pandas.tseries.offsets.BusinessHour.nanos": "doc",
    "pandas.tseries.offsets.BusinessHour.apply": "doc",
    "pandas.tseries.offsets.QuarterOffset.kwds": "doc",
    "pandas.tseries.offsets.QuarterOffset.name": "doc",
    "pandas.tseries.offsets.QuarterOffset.copy": "doc",
    "pandas.tseries.offsets.YearOffset.freqstr": "doc",
    "pandas.tseries.offsets.BYearEnd.normalize": "doc",
    "pandas.tseries.offsets.BYearEnd.rule_code": "doc",
    "pandas.tseries.offsets.BYearBegin.freqstr": "doc",
    "pandas.tseries.offsets.YearEnd.isAnchored": "doc",
    "pandas.tseries.offsets.YearBegin.onOffset": "doc",
    "pandas.tseries.offsets.YearBegin.__call__": "doc",
    "pandas.tseries.offsets.FY5253.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.kwds": "doc",
    "pandas.tseries.offsets.FY5253Quarter.name": "doc",
    "pandas.tseries.offsets.FY5253Quarter.copy": "doc",
    "pandas.tseries.offsets.Easter.is_anchored": "doc",
    "pandas.tseries.offsets.Minute.is_anchored": "doc",
    "pandas.tseries.offsets.Second.is_anchored": "doc",
    "pandas.tseries.offsets.Milli.is_on_offset": "doc",
    "pandas.tseries.offsets.Micro.is_on_offset": "doc",
    "pandas.io.formats.style.Styler.set_na_rep": "doc",
    "pandas.tseries.offsets.DateOffset.onOffset": "doc",
    "pandas.tseries.offsets.DateOffset.__call__": "doc",
    "pandas.tseries.offsets.BusinessDay.freqstr": "doc",
    "pandas.tseries.offsets.MonthOffset.freqstr": "doc",
    "pandas.tseries.offsets.WeekOfMonth.freqstr": "doc",
    "pandas.tseries.offsets.QuarterOffset.nanos": "doc",
    "pandas.tseries.offsets.QuarterOffset.apply": "doc",
    "pandas.tseries.offsets.YearOffset.onOffset": "doc",
    "pandas.tseries.offsets.YearOffset.__call__": "doc",
    "pandas.tseries.offsets.BYearEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BYearBegin.onOffset": "doc",
    "pandas.tseries.offsets.BYearBegin.__call__": "doc",
    "pandas.tseries.offsets.YearEnd.is_anchored": "doc",
    "pandas.tseries.offsets.YearBegin.normalize": "doc",
    "pandas.tseries.offsets.YearBegin.rule_code": "doc",
    "pandas.tseries.offsets.FY5253.get_year_end": "doc",
    "pandas.tseries.offsets.FY5253.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.nanos": "doc",
    "pandas.tseries.offsets.FY5253Quarter.apply": "doc",
    "pandas.tseries.offsets.Easter.is_on_offset": "doc",
    "pandas.tseries.offsets.Minute.is_on_offset": "doc",
    "pandas.tseries.offsets.Second.is_on_offset": "doc",
    "pandas.tseries.offsets.DateOffset.normalize": "doc",
    "pandas.tseries.offsets.DateOffset.rule_code": "doc",
    "pandas.tseries.offsets.BusinessDay.onOffset": "doc",
    "pandas.tseries.offsets.BusinessDay.__call__": "doc",
    "pandas.tseries.offsets.BusinessHour.freqstr": "doc",
    "pandas.tseries.offsets.MonthOffset.onOffset": "doc",
    "pandas.tseries.offsets.MonthOffset.__call__": "doc",
    "pandas.tseries.offsets.WeekOfMonth.onOffset": "doc",
    "pandas.tseries.offsets.WeekOfMonth.__call__": "doc",
    "pandas.tseries.offsets.YearOffset.normalize": "doc",
    "pandas.tseries.offsets.YearOffset.rule_code": "doc",
    "pandas.tseries.offsets.BYearEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BYearBegin.normalize": "doc",
    "pandas.tseries.offsets.BYearBegin.rule_code": "doc",
    "pandas.tseries.offsets.YearEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.YearBegin.isAnchored": "doc",
    "pandas.tseries.offsets.DateOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessDay.normalize": "doc",
    "pandas.tseries.offsets.BusinessDay.rule_code": "doc",
    "pandas.tseries.offsets.BusinessHour.onOffset": "doc",
    "pandas.tseries.offsets.BusinessHour.__call__": "doc",
    "pandas.tseries.offsets.MonthOffset.normalize": "doc",
    "pandas.tseries.offsets.MonthOffset.rule_code": "doc",
    "pandas.tseries.offsets.WeekOfMonth.normalize": "doc",
    "pandas.tseries.offsets.WeekOfMonth.rule_code": "doc",
    "pandas.tseries.offsets.QuarterOffset.freqstr": "doc",
    "pandas.tseries.offsets.YearOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BYearEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BYearBegin.isAnchored": "doc",
    "pandas.tseries.offsets.YearBegin.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.freqstr": "doc",
    "pandas.core.groupby.DataFrameGroupBy.boxplot": "doc",
    "pandas.tseries.offsets.DateOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessDay.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessHour.normalize": "doc",
    "pandas.tseries.offsets.BusinessHour.rule_code": "doc",
    "pandas.tseries.offsets.MonthOffset.isAnchored": "doc",
    "pandas.tseries.offsets.WeekOfMonth.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterOffset.onOffset": "doc",
    "pandas.tseries.offsets.QuarterOffset.__call__": "doc",
    "pandas.tseries.offsets.YearOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BYearBegin.is_anchored": "doc",
    "pandas.tseries.offsets.YearBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.onOffset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.__call__": "doc",
    "pandas.tseries.offsets.DateOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessDay.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessHour.isAnchored": "doc",
    "pandas.tseries.offsets.MonthOffset.is_anchored": "doc",
    "pandas.tseries.offsets.WeekOfMonth.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterOffset.normalize": "doc",
    "pandas.tseries.offsets.QuarterOffset.rule_code": "doc",
    "pandas.tseries.offsets.YearOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BYearBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.normalize": "doc",
    "pandas.tseries.offsets.FY5253Quarter.rule_code": "doc",
    "pandas.tseries.offsets.FY5253Quarter.get_weeks": "doc",
    "pandas.tseries.offsets.BusinessDay.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessHour.is_anchored": "doc",
    "pandas.tseries.offsets.MonthOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.WeekOfMonth.is_on_offset": "doc",
    "pandas.tseries.offsets.QuarterOffset.isAnchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.isAnchored": "doc",
    "pandas.io.formats.style.Styler.set_table_styles": "doc",
    "pandas.tseries.offsets.BusinessHour.is_on_offset": "doc",
    "pandas.tseries.offsets.QuarterOffset.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253.get_rule_code_suffix": "doc",
    "pandas.tseries.offsets.FY5253Quarter.year_has_extra_week": "doc",
    "pandas.CategoricalIndex.add_categories": "doc",
    "pandas.CategoricalIndex.set_categories": "doc",
    "pandas.MultiIndex.names": "doc",
    "pandas.Series.dt.nanosecond": "doc",
    "pandas.Timestamp.nanosecond": "doc",
    "pandas.Series.str.startswith": "doc",
    "pandas.io.stata.StataWriter.write_file": "doc",
    "pandas.Index.sort_values": "doc",
    "pandas.Series.interpolate": "doc",
    "pandas.Series.sort_values": "doc",
    "pandas.Series.to_markdown": "doc",
    "pandas.DataFrame.interpolate": "doc",
    "pandas.DataFrame.sort_values": "doc",
    "pandas.DataFrame.to_markdown": "doc",
    "pandas.core.resample.Resampler.interpolate": "doc",
    "pandas.DatetimeIndex": "doc",
    "pandas.DatetimeIndex.day": "doc",
    "pandas.DatetimeIndex.year": "doc",
    "pandas.DatetimeIndex.date": "doc",
    "pandas.DatetimeIndex.week": "doc",
    "pandas.DatetimeIndex.freq": "doc",
    "pandas.DatetimeIndex.snap": "doc",
    "pandas.DatetimeIndex.mean": "doc",
    "pandas.Index.slice_indexer": "doc",
    "pandas.DatetimeIndex.minute": "doc",
    "pandas.DatetimeIndex.second": "doc",
    "pandas.DatetimeIndex.timetz": "doc",
    "pandas.DatetimeIndex.weekday": "doc",
    "pandas.DatetimeIndex.quarter": "doc",
    "pandas.DatetimeIndex.freqstr": "doc",
    "pandas.DatetimeIndex.day_name": "doc",
    "pandas.DataFrame.select_dtypes": "doc",
    "pandas.Timestamp.fromtimestamp": "doc",
    "pandas.Timestamp.to_datetime64": "doc",
    "pandas.DatetimeIndex.dayofyear": "doc",
    "pandas.DatetimeIndex.dayofweek": "doc",
    "pandas.DatetimeIndex.weekofyear": "doc",
    "pandas.DatetimeIndex.month_name": "doc",
    "pandas.DatetimeIndex.is_year_end": "doc",
    "pandas.DatetimeIndex.is_leap_year": "doc",
    "pandas.DatetimeIndex.is_year_start": "doc",
    "pandas.DatetimeIndex.inferred_freq": "doc",
    "pandas.DatetimeIndex.is_month_start": "doc",
    "pandas.DatetimeIndex.is_quarter_end": "doc",
    "pandas.DatetimeIndex.indexer_at_time": "doc",
    "pandas.DatetimeIndex.is_quarter_start": "doc",
    "pandas.DatetimeIndex.indexer_between_time": "doc",
    "pandas.TimedeltaIndex.to_frame": "doc",
    "pandas.Index.identical": "doc",
    "pandas.DataFrame.set_index": "doc",
    "pandas.DataFrame.from_dict": "doc",
    "pandas.MultiIndex.get_level_values": "doc",
    "pandas.Index.is_monotonic_increasing": "doc",
    "pandas.Index.is_monotonic_decreasing": "doc",
    "pandas.Series.is_monotonic_increasing": "doc",
    "pandas.Series.is_monotonic_decreasing": "doc",
    "pandas.MultiIndex.from_arrays": "doc",
    "pandas.Series.dt.is_month_start": "doc",
    "pandas.Timestamp.is_month_start": "doc",
    "pandas.crosstab": "doc",
    "pandas.Index.to_frame": "doc",
    "pandas.Series.to_numpy": "doc",
    "pandas.Series.set_axis": "doc",
    "pandas.Series.to_excel": "doc",
    "pandas.Series.to_frame": "doc",
    "pandas.CategoricalIndex": "doc",
    "pandas.Interval.overlaps": "doc",
    "pandas.DataFrame.set_axis": "doc",
    "pandas.DataFrame.to_excel": "doc",
    "pandas.DataFrame.to_stata": "doc",
    "pandas.Timestamp.to_numpy": "doc",
    "pandas.Timedelta.to_numpy": "doc",
    "pandas.Series.str.casefold": "doc",
    "pandas.Series.to_clipboard": "doc",
    "pandas.CategoricalIndex.map": "doc",
    "pandas.DataFrame.from_records": "doc",
    "pandas.DataFrame.to_clipboard": "doc",
    "pandas.IntervalIndex.overlaps": "doc",
    "pandas.CategoricalIndex.ordered": "doc",
    "pandas.Timestamp.utcfromtimestamp": "doc",
    "pandas.CategoricalIndex.as_ordered": "doc",
    "pandas.CategoricalIndex.as_unordered": "doc",
    "pandas.CategoricalIndex.rename_categories": "doc",
    "pandas.CategoricalIndex.remove_categories": "doc",
    "pandas.CategoricalIndex.reorder_categories": "doc",
    "pandas.CategoricalIndex.remove_unused_categories": "doc",
    "pandas.date_range": "doc",
    "pandas.UInt8Dtype": "doc",
    "pandas.MultiIndex": "doc",
    "pandas.timedelta_range": "doc",
    "pandas.describe_option": "doc",
    "pandas.Index.duplicated": "doc",
    "pandas.Series.duplicated": "doc",
    "pandas.Interval.open_right": "doc",
    "pandas.MultiIndex.levshape": "doc",
    "pandas.Series.dt.month_name": "doc",
    "pandas.DataFrame.duplicated": "doc",
    "pandas.Timestamp.month_name": "doc",
    "pandas.MultiIndex.swaplevel": "doc",
    "pandas.Series.str.capitalize": "doc",
    "pandas.MultiIndex.from_frame": "doc",
    "pandas.MultiIndex.get_indexer": "doc",
    "pandas.MultiIndex.from_product": "doc",
    "pandas.MultiIndex.is_lexsorted": "doc",
    "pandas.MultiIndex.remove_unused_levels": "doc",
    "pandas.core.groupby.SeriesGroupBy.value_counts": "doc",
    "pandas.Categorical": "doc",
    "pandas.Categorical.dtype": "doc",
    "pandas.Categorical.ordered": "doc",
    "pandas.Interval.closed_left": "doc",
    "pandas.Series.dt.microsecond": "doc",
    "pandas.Timestamp.microsecond": "doc",
    "pandas.Timestamp.isocalendar": "doc",
    "pandas.Categorical.__array__": "doc",
    "pandas.json_normalize": "doc",
    "pandas.Series.dt.to_pytimedelta": "doc",
    "pandas.Timestamp.to_julian_date": "doc",
    "pandas.Timedelta.to_pytimedelta": "doc",
    "pandas.Timedelta.to_timedelta64": "doc",
    "pandas.Series.cat.add_categories": "doc",
    "pandas.Series.cat.set_categories": "doc",
    "pandas.TimedeltaIndex.to_pytimedelta": "doc",
    "pandas.Series.last_valid_index": "doc",
    "pandas.DataFrame.last_valid_index": "doc",
    "pandas.Series.cat.remove_categories": "doc",
    "pandas.ExcelWriter": "doc",
    "pandas.PeriodDtype": "doc",
    "pandas.UInt16Dtype": "doc",
    "pandas.UInt32Dtype": "doc",
    "pandas.UInt64Dtype": "doc",
    "pandas.SparseDtype": "doc",
    "pandas.StringDtype": "doc",
    "pandas.UInt64Index": "doc",
    "pandas.Index.get_indexer": "doc",
    "pandas.Series.slice_shift": "doc",
    "pandas.arrays.StringArray": "doc",
    "pandas.DataFrame.slice_shift": "doc",
    "pandas.IntervalIndex.get_indexer": "doc",
    "pandas.Index.set_names": "doc",
    "pandas.Index.droplevel": "doc",
    "pandas.Index.get_value": "doc",
    "pandas.Series.to_period": "doc",
    "pandas.Series.iteritems": "doc",
    "pandas.Series.transform": "doc",
    "pandas.Series.nsmallest": "doc",
    "pandas.Series.droplevel": "doc",
    "pandas.Series.to_xarray": "doc",
    "pandas.Series.dt.to_period": "doc",
    "pandas.Series.dt.normalize": "doc",
    "pandas.DataFrame.iteritems": "doc",
    "pandas.DataFrame.transform": "doc",
    "pandas.DataFrame.droplevel": "doc",
    "pandas.DataFrame.nsmallest": "doc",
    "pandas.DataFrame.to_xarray": "doc",
    "pandas.DataFrame.transpose": "doc",
    "pandas.DataFrame.to_period": "doc",
    "pandas.Timestamp.isoformat": "doc",
    "pandas.Timestamp.normalize": "doc",
    "pandas.Timestamp.timestamp": "doc",
    "pandas.Timestamp.timetuple": "doc",
    "pandas.Timestamp.to_period": "doc",
    "pandas.Timedelta.isoformat": "doc",
    "pandas.Series.str.normalize": "doc",
    "pandas.Series.str.translate": "doc",
    "pandas.Series.sparse.sp_values": "doc",
    "pandas.core.groupby.GroupBy.get_group": "doc",
    "pandas.core.groupby.GroupBy.transform": "doc",
    "pandas.core.resample.Resampler.get_group": "doc",
    "pandas.core.resample.Resampler.transform": "doc",
    "pandas.core.groupby.SeriesGroupBy.nsmallest": "doc",
    "pandas.Series.first_valid_index": "doc",
    "pandas.DataFrame.first_valid_index": "doc",
    "pandas.TimedeltaIndex.days": "doc",
    "pandas.TimedeltaIndex.ceil": "doc",
    "pandas.Series.reorder_levels": "doc",
    "pandas.DataFrame.reorder_levels": "doc",
    "pandas.Index.memory_usage": "doc",
    "pandas.Index.value_counts": "doc",
    "pandas.Index.intersection": "doc",
    "pandas.Series.memory_usage": "doc",
    "pandas.Series.value_counts": "doc",
    "pandas.Series.between_time": "doc",
    "pandas.Index.drop_duplicates": "doc",
    "pandas.Index.to_native_types": "doc",
    "pandas.Series.drop_duplicates": "doc",
    "pandas.DataFrame.memory_usage": "doc",
    "pandas.DataFrame.between_time": "doc",
    "pandas.Timestamp.utctimetuple": "doc",
    "pandas.Timedelta.is_populated": "doc",
    "pandas.DataFrame.drop_duplicates": "doc",
    "pandas.Series.cat.reorder_categories": "doc",
    "pandas.melt": "doc",
    "pandas.eval": "doc",
    "pandas.test": "doc",
    "pandas.Series.xs": "doc",
    "pandas.Series.le": "doc",
    "pandas.Index.all": "doc",
    "pandas.read_table": "doc",
    "pandas.to_numeric": "doc",
    "pandas.Series.mul": "doc",
    "pandas.Series.mod": "doc",
    "pandas.Series.abs": "doc",
    "pandas.Series.all": "doc",
    "pandas.Series.cov": "doc",
    "pandas.Period.now": "doc",
    "pandas.Index.copy": "doc",
    "pandas.Index.drop": "doc",
    "pandas.Index.take": "doc",
    "pandas.Index.asof": "doc",
    "pandas.Series.copy": "doc",
    "pandas.Series.keys": "doc",
    "pandas.Series.rmul": "doc",
    "pandas.Series.rmod": "doc",
    "pandas.Series.rpow": "doc",
    "pandas.Series.corr": "doc",
    "pandas.Series.mode": "doc",
    "pandas.Series.drop": "doc",
    "pandas.Series.take": "doc",
    "pandas.Series.asof": "doc",
    "pandas.Period.hour": "doc",
    "pandas.Index.names": "doc",
    "pandas.Series.items": "doc",
    "pandas.Series.apply": "doc",
    "pandas.Series.dt.tz": "doc",
    "pandas.DataFrame.xs": "doc",
    "pandas.DataFrame.le": "doc",
    "pandas.Timestamp.tz": "doc",
    "pandas.HDFStore.keys": "doc",
    "pandas.HDFStore.walk": "doc",
    "pandas.DataFrame.mul": "doc",
    "pandas.DataFrame.mod": "doc",
    "pandas.DataFrame.abs": "doc",
    "pandas.DataFrame.all": "doc",
    "pandas.DataFrame.cov": "doc",
    "pandas.Timestamp.now": "doc",
    "pandas.Series.dt.hour": "doc",
    "pandas.Series.dt.ceil": "doc",
    "pandas.Series.dt.days": "doc",
    "pandas.DataFrame.axes": "doc",
    "pandas.DataFrame.copy": "doc",
    "pandas.DataFrame.keys": "doc",
    "pandas.DataFrame.rmul": "doc",
    "pandas.DataFrame.rmod": "doc",
    "pandas.DataFrame.rpow": "doc",
    "pandas.DataFrame.corr": "doc",
    "pandas.DataFrame.eval": "doc",
    "pandas.DataFrame.mode": "doc",
    "pandas.DataFrame.drop": "doc",
    "pandas.DataFrame.take": "doc",
    "pandas.DataFrame.melt": "doc",
    "pandas.DataFrame.asof": "doc",
    "pandas.Timestamp.hour": "doc",
    "pandas.Timestamp.ceil": "doc",
    "pandas.Timedelta.days": "doc",
    "pandas.Timedelta.ceil": "doc",
    "pandas.DataFrame.items": "doc",
    "pandas.DataFrame.apply": "doc",
    "pandas.DataFrame.style": "doc",
    "pandas.RangeIndex.stop": "doc",
    "pandas.Series.str.zfill": "doc",
    "pandas.Index.slice_locs": "doc",
    "pandas.PeriodIndex.hour": "doc",
    "pandas.Series.tz_convert": "doc",
    "pandas.Series.dt.tz_convert": "doc",
    "pandas.DataFrame.tz_convert": "doc",
    "pandas.DataFrame.to_parquet": "doc",
    "pandas.DataFrame.to_feather": "doc",
    "pandas.Timestamp.astimezone": "doc",
    "pandas.Timestamp.tz_convert": "doc",
    "pandas.Series.str.extractall": "doc",
    "pandas.core.window.ewm.EWM.std": "doc",
    "pandas.core.window.ewm.EWM.var": "doc",
    "pandas.core.window.ewm.EWM.cov": "doc",
    "pandas.core.window.ewm.EWM.mean": "doc",
    "pandas.core.window.ewm.EWM.corr": "doc",
    "pandas.core.groupby.GroupBy.agg": "doc",
    "pandas.core.groupby.GroupBy.all": "doc",
    "pandas.core.groupby.GroupBy.any": "doc",
    "pandas.core.groupby.GroupBy.max": "doc",
    "pandas.core.groupby.GroupBy.nth": "doc",
    "pandas.core.groupby.GroupBy.sem": "doc",
    "pandas.core.groupby.GroupBy.std": "doc",
    "pandas.core.groupby.GroupBy.sum": "doc",
    "pandas.core.groupby.GroupBy.var": "doc",
    "pandas.core.groupby.GroupBy.head": "doc",
    "pandas.core.groupby.GroupBy.mean": "doc",
    "pandas.core.groupby.GroupBy.rank": "doc",
    "pandas.core.groupby.GroupBy.size": "doc",
    "pandas.core.groupby.GroupBy.apply": "doc",
    "pandas.core.groupby.GroupBy.bfill": "doc",
    "pandas.core.groupby.GroupBy.ffill": "doc",
    "pandas.core.groupby.GroupBy.first": "doc",
    "pandas.core.groupby.GroupBy.cummax": "doc",
    "pandas.core.groupby.GroupBy.cumsum": "doc",
    "pandas.core.groupby.GroupBy.median": "doc",
    "pandas.core.groupby.GroupBy.ngroup": "doc",
    "pandas.core.resample.Resampler.pad": "doc",
    "pandas.core.resample.Resampler.max": "doc",
    "pandas.core.resample.Resampler.sem": "doc",
    "pandas.core.resample.Resampler.std": "doc",
    "pandas.core.resample.Resampler.sum": "doc",
    "pandas.core.resample.Resampler.var": "doc",
    "pandas.core.groupby.GroupBy.indices": "doc",
    "pandas.core.groupby.GroupBy.cumprod": "doc",
    "pandas.core.resample.Resampler.mean": "doc",
    "pandas.core.resample.Resampler.size": "doc",
    "pandas.core.groupby.GroupBy.__iter__": "doc",
    "pandas.core.groupby.GroupBy.cumcount": "doc",
    "pandas.core.resample.Resampler.apply": "doc",
    "pandas.core.resample.Resampler.ffill": "doc",
    "pandas.core.resample.Resampler.bfill": "doc",
    "pandas.core.resample.Resampler.first": "doc",
    "pandas.core.groupby.GroupBy.aggregate": "doc",
    "pandas.core.resample.Resampler.fillna": "doc",
    "pandas.core.resample.Resampler.asfreq": "doc",
    "pandas.core.resample.Resampler.median": "doc",
    "pandas.io.stata.StataReader.data_label": "doc",
    "pandas.core.resample.Resampler.indices": "doc",
    "pandas.core.resample.Resampler.nearest": "doc",
    "pandas.core.resample.Resampler.nunique": "doc",
    "pandas.core.resample.Resampler.__iter__": "doc",
    "pandas.core.resample.Resampler.backfill": "doc",
    "pandas.io.stata.StataReader.value_labels": "doc",
    "pandas.core.groupby.DataFrameGroupBy.all": "doc",
    "pandas.core.groupby.DataFrameGroupBy.any": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cov": "doc",
    "pandas.core.groupby.DataFrameGroupBy.mad": "doc",
    "pandas.core.groupby.SeriesGroupBy.unique": "doc",
    "pandas.core.resample.Resampler.aggregate": "doc",
    "pandas.core.groupby.DataFrameGroupBy.corr": "doc",
    "pandas.core.groupby.DataFrameGroupBy.diff": "doc",
    "pandas.core.groupby.DataFrameGroupBy.hist": "doc",
    "pandas.core.groupby.DataFrameGroupBy.rank": "doc",
    "pandas.core.groupby.DataFrameGroupBy.size": "doc",
    "pandas.core.groupby.DataFrameGroupBy.skew": "doc",
    "pandas.core.groupby.DataFrameGroupBy.take": "doc",
    "pandas.core.groupby.SeriesGroupBy.nunique": "doc",
    "pandas.core.groupby.DataFrameGroupBy.bfill": "doc",
    "pandas.core.groupby.DataFrameGroupBy.ffill": "doc",
    "pandas.core.groupby.DataFrameGroupBy.shift": "doc",
    "pandas.core.groupby.SeriesGroupBy.nlargest": "doc",
    "pandas.io.stata.StataReader.variable_labels": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cummax": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cumsum": "doc",
    "pandas.core.groupby.DataFrameGroupBy.fillna": "doc",
    "pandas.core.groupby.DataFrameGroupBy.filter": "doc",
    "pandas.core.groupby.DataFrameGroupBy.idxmax": "doc",
    "pandas.core.groupby.DataFrameGroupBy.tshift": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cumprod": "doc",
    "pandas.core.groupby.DataFrameGroupBy.nunique": "doc",
    "pandas.core.groupby.DataFrameGroupBy.describe": "doc",
    "pandas.core.groupby.DataFrameGroupBy.resample": "doc",
    "pandas.core.groupby.DataFrameGroupBy.corrwith": "doc",
    "pandas.Series.combine_first": "doc",
    "pandas.arrays.DatetimeArray": "doc",
    "pandas.Period.days_in_month": "doc",
    "pandas.Series.dt.days_in_month": "doc",
    "pandas.DataFrame.combine_first": "doc",
    "pandas.Timestamp.days_in_month": "doc",
    "pandas.PeriodIndex.days_in_month": "doc",
    "pandas.DataFrame.sparse.from_spmatrix": "doc",
    "pandas.Index.symmetric_difference": "doc",
    "pandas.CategoricalDtype": "doc",
    "pandas.Index.get_level_values": "doc",
    "pandas.CategoricalDtype.ordered": "doc",
    "pandas.read_sql_table": "doc",
    "pandas.interval_range": "doc",
    "pandas.TimedeltaIndex": "doc",
    "pandas.TimedeltaIndex.mean": "doc",
    "pandas.Index.has_duplicates": "doc",
    "pandas.Index.is_categorical": "doc",
    "pandas.Series.convert_dtypes": "doc",
    "pandas.Series.dt.is_quarter_end": "doc",
    "pandas.DataFrame.convert_dtypes": "doc",
    "pandas.Timestamp.is_quarter_end": "doc",
    "pandas.TimedeltaIndex.inferred_freq": "doc",
    "pandas.IntervalIndex.is_non_overlapping_monotonic": "doc",
    "pandas.get_dummies": "doc",
    "pandas.Series.str.get_dummies": "doc",
    "pandas.IntervalIndex.from_arrays": "doc",
    "pandas.IntervalIndex.from_breaks": "doc",
    "pandas.Series.cat.rename_categories": "doc",
    "pandas.DatetimeTZDtype": "doc",
    "pandas.Index.get_indexer_for": "doc",
    "pandas.Index.get_slice_bound": "doc",
    "pandas.cut": "doc",
    "pandas.qcut": "doc",
    "pandas.isna": "doc",
    "pandas.merge": "doc",
    "pandas.array": "doc",
    "pandas.Index": "doc",
    "pandas.concat": "doc",
    "pandas.unique": "doc",
    "pandas.isnull": "doc",
    "pandas.Series": "doc",
    "pandas.Period": "doc",
    "pandas.Index.T": "doc",
    "pandas.Grouper": "doc",
    "pandas.read_csv": "doc",
    "pandas.read_fwf": "doc",
    "pandas.read_hdf": "doc",
    "pandas.read_orc": "doc",
    "pandas.read_sas": "doc",
    "pandas.read_sql": "doc",
    "pandas.read_gbq": "doc",
    "pandas.Series.T": "doc",
    "pandas.Interval": "doc",
    "pandas.read_json": "doc",
    "pandas.read_html": "doc",
    "pandas.read_spss": "doc",
    "pandas.Series.at": "doc",
    "pandas.Series.gt": "doc",
    "pandas.Series.ge": "doc",
    "pandas.Series.ne": "doc",
    "pandas.Series.eq": "doc",
    "pandas.DataFrame": "doc",
    "pandas.Timestamp": "doc",
    "pandas.Timedelta": "doc",
    "pandas.Int8Dtype": "doc",
    "pandas.Index.any": "doc",
    "pandas.Index.is_": "doc",
    "pandas.Index.max": "doc",
    "pandas.Index.map": "doc",
    "pandas.read_excel": "doc",
    "pandas.read_stata": "doc",
    "pandas.merge_asof": "doc",
    "pandas.infer_freq": "doc",
    "pandas.Series.get": "doc",
    "pandas.Series.iat": "doc",
    "pandas.Series.add": "doc",
    "pandas.Series.sub": "doc",
    "pandas.Series.div": "doc",
    "pandas.Series.agg": "doc",
    "pandas.Series.map": "doc",
    "pandas.Series.ewm": "doc",
    "pandas.Series.any": "doc",
    "pandas.Series.mad": "doc",
    "pandas.Series.max": "doc",
    "pandas.Series.sem": "doc",
    "pandas.Series.std": "doc",
    "pandas.Series.sum": "doc",
    "pandas.Series.var": "doc",
    "pandas.Period.day": "doc",
    "pandas.Int16Dtype": "doc",
    "pandas.Int32Dtype": "doc",
    "pandas.Int64Dtype": "doc",
    "pandas.Index.name": "doc",
    "pandas.Index.ndim": "doc",
    "pandas.Index.size": "doc",
    "pandas.Index.isna": "doc",
    "pandas.Index.item": "doc",
    "pandas.Index.view": "doc",
    "pandas.RangeIndex": "doc",
    "pandas.Int64Index": "doc",
    "pandas.IndexSlice": "doc",
    "pandas.read_pickle": "doc",
    "pandas.Series.ndim": "doc",
    "pandas.Series.size": "doc",
    "pandas.Series.name": "doc",
    "pandas.Series.item": "doc",
    "pandas.Series.radd": "doc",
    "pandas.Series.rsub": "doc",
    "pandas.Series.rdiv": "doc",
    "pandas.Series.diff": "doc",
    "pandas.Series.kurt": "doc",
    "pandas.Series.mean": "doc",
    "pandas.Series.rank": "doc",
    "pandas.Series.skew": "doc",
    "pandas.Series.head": "doc",
    "pandas.Series.mask": "doc",
    "pandas.Series.isna": "doc",
    "pandas.Series.view": "doc",
    "pandas.Series.hist": "doc",
    "pandas.DataFrame.T": "doc",
    "pandas.Period.freq": "doc",
    "pandas.Period.week": "doc",
    "pandas.Period.year": "doc",
    "pandas.Index.dtype": "doc",
    "pandas.Index.shape": "doc",
    "pandas.Index.empty": "doc",
    "pandas.Index.where": "doc",
    "pandas.Index.ravel": "doc",
    "pandas.Index.shift": "doc",
    "pandas.PeriodIndex": "doc",
    "pandas.HDFStore.get": "doc",
    "pandas.read_feather": "doc",
    "pandas.read_parquet": "doc",
    "pandas.Series.index": "doc",
    "pandas.Series.array": "doc",
    "pandas.Series.dtype": "doc",
    "pandas.Series.shape": "doc",
    "pandas.Series.empty": "doc",
    "pandas.Series.first": "doc",
    "pandas.Series.where": "doc",
    "pandas.Series.ravel": "doc",
    "pandas.Series.shift": "doc",
    "pandas.DataFrame.at": "doc",
    "pandas.DataFrame.gt": "doc",
    "pandas.DataFrame.ge": "doc",
    "pandas.DataFrame.ne": "doc",
    "pandas.DataFrame.eq": "doc",
    "pandas.Period.qyear": "doc",
    "pandas.Interval.mid": "doc",
    "pandas.Index.values": "doc",
    "pandas.Index.nbytes": "doc",
    "pandas.Index.argmax": "doc",
    "pandas.Index.delete": "doc",
    "pandas.Index.insert": "doc",
    "pandas.Index.rename": "doc",
    "pandas.Index.repeat": "doc",
    "pandas.Index.unique": "doc",
    "pandas.Index.fillna": "doc",
    "pandas.Index.astype": "doc",
    "pandas.Index.append": "doc",
    "pandas.HDFStore.info": "doc",
    "pandas.merge_ordered": "doc",
    "pandas.Series.values": "doc",
    "pandas.Series.nbytes": "doc",
    "pandas.Series.astype": "doc",
    "pandas.Series.cummax": "doc",
    "pandas.Series.cumsum": "doc",
    "pandas.Series.median": "doc",
    "pandas.Series.unique": "doc",
    "pandas.Series.idxmax": "doc",
    "pandas.Series.rename": "doc",
    "pandas.Series.sample": "doc",
    "pandas.Series.filter": "doc",
    "pandas.Series.fillna": "doc",
    "pandas.Series.argmax": "doc",
    "pandas.Series.repeat": "doc",
    "pandas.Series.append": "doc",
    "pandas.Series.update": "doc",
    "pandas.Series.asfreq": "doc",
    "pandas.Series.tshift": "doc",
    "pandas.Series.dt.day": "doc",
    "pandas.DataFrame.iat": "doc",
    "pandas.DataFrame.get": "doc",
    "pandas.DataFrame.add": "doc",
    "pandas.DataFrame.sub": "doc",
    "pandas.DataFrame.div": "doc",
    "pandas.DataFrame.agg": "doc",
    "pandas.DataFrame.ewm": "doc",
    "pandas.DataFrame.any": "doc",
    "pandas.DataFrame.mad": "doc",
    "pandas.DataFrame.max": "doc",
    "pandas.DataFrame.sem": "doc",
    "pandas.DataFrame.sum": "doc",
    "pandas.DataFrame.std": "doc",
    "pandas.DataFrame.var": "doc",
    "pandas.Timestamp.day": "doc",
    "pandas.Timestamp.max": "doc",
    "pandas.Timestamp.dst": "doc",
    "pandas.Timedelta.max": "doc",
    "pandas.Period.minute": "doc",
    "pandas.Period.second": "doc",
    "pandas.Period.asfreq": "doc",
    "pandas.IntervalDtype": "doc",
    "pandas.Index.hasnans": "doc",
    "pandas.Index.reindex": "doc",
    "pandas.Index.nunique": "doc",
    "pandas.Index.argsort": "doc",
    "pandas.IntervalIndex": "doc",
    "pandas.read_clipboard": "doc",
    "pandas.read_sql_query": "doc",
    "pandas.Series.hasnans": "doc",
    "pandas.Series.truediv": "doc",
    "pandas.Series.groupby": "doc",
    "pandas.Series.between": "doc",
    "pandas.Series.cumprod": "doc",
    "pandas.Series.nunique": "doc",
    "pandas.Series.reindex": "doc",
    "pandas.Series.argsort": "doc",
    "pandas.Series.unstack": "doc",
    "pandas.Series.explode": "doc",
    "pandas.Series.squeeze": "doc",
    "pandas.Series.replace": "doc",
    "pandas.Series.dt.date": "doc",
    "pandas.Series.dt.year": "doc",
    "pandas.Series.dt.week": "doc",
    "pandas.Series.dt.freq": "doc",
    "pandas.Series.str.cat": "doc",
    "pandas.Series.str.get": "doc",
    "pandas.Series.str.pad": "doc",
    "pandas.DataFrame.ndim": "doc",
    "pandas.DataFrame.size": "doc",
    "pandas.DataFrame.isna": "doc",
    "pandas.DataFrame.head": "doc",
    "pandas.DataFrame.mask": "doc",
    "pandas.DataFrame.radd": "doc",
    "pandas.DataFrame.rsub": "doc",
    "pandas.DataFrame.rdiv": "doc",
    "pandas.DataFrame.diff": "doc",
    "pandas.DataFrame.kurt": "doc",
    "pandas.DataFrame.mean": "doc",
    "pandas.DataFrame.rank": "doc",
    "pandas.DataFrame.skew": "doc",
    "pandas.DataFrame.hist": "doc",
    "pandas.DataFrame.info": "doc",
    "pandas.Timestamp.asm8": "doc",
    "pandas.Timestamp.week": "doc",
    "pandas.Timestamp.year": "doc",
    "pandas.Timestamp.date": "doc",
    "pandas.Timestamp.freq": "doc",
    "pandas.Timedelta.asm8": "doc",
    "pandas.Timedelta.freq": "doc",
    "pandas.Timedelta.view": "doc",
    "pandas.Period.freqstr": "doc",
    "pandas.Period.quarter": "doc",
    "pandas.Period.weekday": "doc",
    "pandas.Interval.right": "doc",
    "pandas.Index.is_mixed": "doc",
    "pandas.ExcelFile.parse": "doc",
    "pandas.HDFStore.append": "doc",
    "pandas.HDFStore.select": "doc",
    "pandas.Series.__iter__": "doc",
    "pandas.Series.rtruediv": "doc",
    "pandas.Series.describe": "doc",
    "pandas.Series.nlargest": "doc",
    "pandas.Series.truncate": "doc",
    "pandas.Series.resample": "doc",
    "pandas.Series.dt.qyear": "doc",
    "pandas.Series.str.wrap": "doc",
    "pandas.DataFrame.index": "doc",
    "pandas.DataFrame.shape": "doc",
    "pandas.DataFrame.empty": "doc",
    "pandas.DataFrame.where": "doc",
    "pandas.DataFrame.query": "doc",
    "pandas.DataFrame.first": "doc",
    "pandas.DataFrame.stack": "doc",
    "pandas.DataFrame.merge": "doc",
    "pandas.DataFrame.shift": "doc",
    "pandas.Timestamp.value": "doc",
    "pandas.Timedelta.delta": "doc",
    "pandas.Timedelta.value": "doc",
    "pandas.Interval.length": "doc",
    "pandas.Index.is_unique": "doc",
    "pandas.Index.is_object": "doc",
    "pandas.RangeIndex.step": "doc",
    "pandas.PeriodIndex.day": "doc",
    "pandas.Series.__array__": "doc",
    "pandas.Series.aggregate": "doc",
    "pandas.Series.is_unique": "doc",
    "pandas.Series.swaplevel": "doc",
    "pandas.Series.dt.timetz": "doc",
    "pandas.Series.dt.minute": "doc",
    "pandas.Series.dt.second": "doc",
    "pandas.Series.str.index": "doc",
    "pandas.Series.str.ljust": "doc",
    "pandas.Series.str.match": "doc",
    "pandas.Series.str.rjust": "doc",
    "pandas.Series.str.upper": "doc",
    "pandas.DataFrame.values": "doc",
    "pandas.DataFrame.astype": "doc",
    "pandas.DataFrame.insert": "doc",
    "pandas.DataFrame.cummax": "doc",
    "pandas.DataFrame.cumsum": "doc",
    "pandas.DataFrame.median": "doc",
    "pandas.DataFrame.filter": "doc",
    "pandas.DataFrame.idxmax": "doc",
    "pandas.DataFrame.rename": "doc",
    "pandas.DataFrame.sample": "doc",
    "pandas.DataFrame.fillna": "doc",
    "pandas.DataFrame.append": "doc",
    "pandas.DataFrame.update": "doc",
    "pandas.DataFrame.asfreq": "doc",
    "pandas.DataFrame.tshift": "doc",
    "pandas.Timestamp.minute": "doc",
    "pandas.Timestamp.second": "doc",
    "pandas.Timestamp.timetz": "doc",
    "pandas.Timestamp.tzname": "doc",
    "pandas.Timestamp.utcnow": "doc",
    "pandas.Period.dayofweek": "doc",
    "pandas.Period.dayofyear": "doc",
    "pandas.Index.is_integer": "doc",
    "pandas.Index.is_numeric": "doc",
    "pandas.Index.difference": "doc",
    "pandas.RangeIndex.start": "doc",
    "pandas.PeriodIndex.freq": "doc",
    "pandas.PeriodIndex.week": "doc",
    "pandas.PeriodIndex.year": "doc",
    "pandas.Series.add_prefix": "doc",
    "pandas.Series.add_suffix": "doc",
    "pandas.Series.dt.weekday": "doc",
    "pandas.Series.dt.quarter": "doc",
    "pandas.Series.str.center": "doc",
    "pandas.Series.str.decode": "doc",
    "pandas.Series.str.encode": "doc",
    "pandas.Series.str.repeat": "doc",
    "pandas.Series.str.rindex": "doc",
    "pandas.Series.str.rsplit": "doc",
    "pandas.DataFrame.truediv": "doc",
    "pandas.DataFrame.groupby": "doc",
    "pandas.DataFrame.cumprod": "doc",
    "pandas.DataFrame.nunique": "doc",
    "pandas.DataFrame.reindex": "doc",
    "pandas.DataFrame.replace": "doc",
    "pandas.DataFrame.unstack": "doc",
    "pandas.DataFrame.explode": "doc",
    "pandas.DataFrame.squeeze": "doc",
    "pandas.Timestamp.quarter": "doc",
    "pandas.Timestamp.freqstr": "doc",
    "pandas.Timestamp.replace": "doc",
    "pandas.Timestamp.weekday": "doc",
    "pandas.Period.weekofyear": "doc",
    "pandas.Interval.is_empty": "doc",
    "pandas.Index.is_interval": "doc",
    "pandas.IntervalIndex.mid": "doc",
    "pandas.PeriodIndex.qyear": "doc",
    "pandas.Series.rename_axis": "doc",
    "pandas.Series.dt.day_name": "doc",
    "pandas.Series.str.extract": "doc",
    "pandas.Series.str.findall": "doc",
    "pandas.Series.str.replace": "doc",
    "pandas.Series.str.isalnum": "doc",
    "pandas.Series.str.isalpha": "doc",
    "pandas.Series.str.isdigit": "doc",
    "pandas.Series.str.isspace": "doc",
    "pandas.Series.str.islower": "doc",
    "pandas.Series.str.isupper": "doc",
    "pandas.Series.cat.ordered": "doc",
    "pandas.DataFrame.__iter__": "doc",
    "pandas.DataFrame.rtruediv": "doc",
    "pandas.DataFrame.applymap": "doc",
    "pandas.DataFrame.corrwith": "doc",
    "pandas.DataFrame.describe": "doc",
    "pandas.DataFrame.truncate": "doc",
    "pandas.DataFrame.nlargest": "doc",
    "pandas.DataFrame.swapaxes": "doc",
    "pandas.DataFrame.resample": "doc",
    "pandas.Timestamp.day_name": "doc",
    "pandas.Period.daysinmonth": "doc",
    "pandas.arrays.PeriodArray": "doc",
    "pandas.Interval.open_left": "doc",
    "pandas.arrays.SparseArray": "doc",
    "pandas.Index.is_all_dates": "doc",
    "pandas.Index.searchsorted": "doc",
    "pandas.PeriodIndex.minute": "doc",
    "pandas.PeriodIndex.second": "doc",
    "pandas.PeriodIndex.asfreq": "doc",
    "pandas.arrays.PandasArray": "doc",
    "pandas.Series.reindex_like": "doc",
    "pandas.Series.searchsorted": "doc",
    "pandas.Series.dt.dayofweek": "doc",
    "pandas.Series.dt.dayofyear": "doc",
    "pandas.Series.str.endswith": "doc",
    "pandas.Series.str.swapcase": "doc",
    "pandas.DataFrame.aggregate": "doc",
    "pandas.DataFrame.swaplevel": "doc",
    "pandas.Timestamp.dayofweek": "doc",
    "pandas.Timestamp.dayofyear": "doc",
    "pandas.Period.is_leap_year": "doc",
    "pandas.arrays.IntegerArray": "doc",
    "pandas.Index.inferred_type": "doc",
    "pandas.IntervalIndex.right": "doc",
    "pandas.PeriodIndex.freqstr": "doc",
    "pandas.PeriodIndex.quarter": "doc",
    "pandas.PeriodIndex.weekday": "doc",
    "pandas.Series.infer_objects": "doc",
    "pandas.Series.dt.weekofyear": "doc",
    "pandas.Series.str.isnumeric": "doc",
    "pandas.Series.str.isdecimal": "doc",
    "pandas.DataFrame.add_prefix": "doc",
    "pandas.DataFrame.add_suffix": "doc",
    "pandas.Timestamp.weekofyear": "doc",
    "pandas.Timestamp.isoweekday": "doc",
    "pandas.arrays.IntervalArray": "doc",
    "pandas.IntervalIndex.length": "doc",
    "pandas.IntervalIndex.values": "doc",
    "pandas.Series.dt.is_year_end": "doc",
    "pandas.Series.dt.daysinmonth": "doc",
    "pandas.Series.cat.as_ordered": "doc",
    "pandas.Series.sparse.density": "doc",
    "pandas.DataFrame.rename_axis": "doc",
    "pandas.Timestamp.daysinmonth": "doc",
    "pandas.Timestamp.is_year_end": "doc",
    "pandas.arrays.TimedeltaArray": "doc",
    "pandas.PeriodIndex.dayofweek": "doc",
    "pandas.PeriodIndex.dayofyear": "doc",
    "pandas.Series.dt.is_leap_year": "doc",
    "pandas.Series.sparse.from_coo": "doc",
    "pandas.DataFrame.reindex_like": "doc",
    "pandas.Timestamp.is_leap_year": "doc",
    "pandas.IntervalIndex.is_empty": "doc",
    "pandas.PeriodIndex.weekofyear": "doc",
    "pandas.Series.dt.is_year_start": "doc",
    "pandas.Series.cat.as_unordered": "doc",
    "pandas.DataFrame.infer_objects": "doc",
    "pandas.Timestamp.is_year_start": "doc",
    "pandas.PeriodIndex.daysinmonth": "doc",
    "pandas.Series.str.slice_replace": "doc",
    "pandas.Series.sparse.fill_value": "doc",
    "pandas.DataFrame.sparse.density": "doc",
    "pandas.PeriodIndex.is_leap_year": "doc",
    "pandas.api.indexers.BaseIndexer": "doc",
    "pandas.Series.dt.is_quarter_start": "doc",
    "pandas.Timestamp.is_quarter_start": "doc",
    "pandas.Index.get_indexer_non_unique": "doc",
    "pandas.api.indexers.check_array_indexer": "doc",
    "pandas.Series.cat.remove_unused_categories": "doc",
    "pandas.Index.to_numpy": "doc"
  },
  "sklearn.learning_curve.learning_curve": {
    "sklearn.model_selection.learning_curve": "doc",
    "sklearn.calibration.calibration_curve": "doc",
    "sklearn.datasets.make_s_curve": "doc",
    "sklearn.decomposition.dict_learning_online": "doc",
    "sklearn.metrics.roc_curve": "doc",
    "sklearn.model_selection.validation_curve": "doc",
    "sklearn.metrics.plot_roc_curve": "doc",
    "sklearn.metrics.precision_recall_curve": "doc",
    "sklearn.metrics.label_ranking_loss": "doc",
    "sklearn.metrics.plot_precision_recall_curve": "doc",
    "sklearn.kernel_ridge": "doc",
    "sklearn.svm.l1_min_c": "doc",
    "sklearn.cluster.ward_tree": "doc",
    "sklearn.metrics.ndcg_score": "doc",
    "sklearn.metrics.hamming_loss": "doc",
    "sklearn.kernel_ridge.KernelRidge": "doc",
    "sklearn.metrics.mutual_info_score": "doc",
    "sklearn.feature_extraction.text.HashingVectorizer": "doc",
    "sklearn.metrics.precision_score": "doc",
    "sklearn.datasets.clear_data_home": "doc",
    "sklearn.metrics.completeness_score": "doc",
    "sklearn.datasets.load_breast_cancer": "doc",
    "sklearn.metrics.explained_variance_score": "doc",
    "sklearn.model_selection.permutation_test_score": "doc",
    "sklearn.metrics.pairwise.haversine_distances": "doc",
    "sklearn.metrics.pairwise.laplacian_kernel": "doc",
    "sklearn.metrics.pairwise.pairwise_kernels": "doc",
    "sklearn.metrics.average_precision_score": "doc",
    "sklearn.metrics.homogeneity_score": "doc",
    "sklearn.ensemble.StackingRegressor": "doc",
    "sklearn.metrics.pairwise.polynomial_kernel": "doc",
    "sklearn.metrics": "doc",
    "sklearn.mixture": "doc",
    "sklearn.neighbors": "doc",
    "sklearn.covariance": "doc",
    "sklearn.metrics.auc": "doc",
    "sklearn.covariance.OAS": "doc",
    "sklearn.covariance.oas": "doc",
    "sklearn.metrics.f1_score": "doc",
    "sklearn.metrics.log_loss": "doc",
    "sklearn.metrics.r2_score": "doc",
    "sklearn.neighbors.KDTree": "doc",
    "sklearn.metrics.dcg_score": "doc",
    "sklearn.metrics.max_error": "doc",
    "sklearn.cluster.mean_shift": "doc",
    "sklearn.datasets.load_iris": "doc",
    "sklearn.datasets.load_wine": "doc",
    "sklearn.metrics.get_scorer": "doc",
    "sklearn.metrics.hinge_loss": "doc",
    "sklearn.neighbors.BallTree": "doc",
    "sklearn.datasets.fetch_rcv1": "doc",
    "sklearn.metrics.make_scorer": "doc",
    "sklearn.metrics.fbeta_score": "doc",
    "sklearn.covariance.MinCovDet": "doc",
    "sklearn.metrics.recall_score": "doc",
    "sklearn.covariance.LedoitWolf": "doc",
    "sklearn.metrics.check_scoring": "doc",
    "sklearn.metrics.jaccard_score": "doc",
    "sklearn.metrics.roc_auc_score": "doc",
    "sklearn.metrics.zero_one_loss": "doc",
    "sklearn.covariance.ledoit_wolf": "doc",
    "sklearn.datasets.load_linnerud": "doc",
    "sklearn.linear_model.lars_path": "doc",
    "sklearn.metrics.accuracy_score": "doc",
    "sklearn.metrics.coverage_error": "doc",
    "sklearn.metrics.v_measure_score": "doc",
    "sklearn.metrics.consensus_score": "doc",
    "sklearn.metrics.RocCurveDisplay": "doc",
    "sklearn.mixture.GaussianMixture": "doc",
    "sklearn.neighbors.KernelDensity": "doc",
    "sklearn.metrics.brier_score_loss": "doc",
    "sklearn.metrics.confusion_matrix": "doc",
    "sklearn.metrics.silhouette_score": "doc",
    "sklearn.neighbors.DistanceMetric": "doc",
    "sklearn.covariance.GraphicalLasso": "doc",
    "sklearn.metrics.cohen_kappa_score": "doc",
    "sklearn.metrics.matthews_corrcoef": "doc",
    "sklearn.neighbors.NearestCentroid": "doc",
    "sklearn.covariance.graphical_lasso": "doc",
    "sklearn.metrics.mean_squared_error": "doc",
    "sklearn.metrics.silhouette_samples": "doc",
    "sklearn.metrics.pairwise_distances": "doc",
    "sklearn.neighbors.NearestNeighbors": "doc",
    "sklearn.neighbors.kneighbors_graph": "doc",
    "sklearn.covariance.EllipticEnvelope": "doc",
    "sklearn.covariance.GraphicalLassoCV": "doc",
    "sklearn.covariance.ShrunkCovariance": "doc",
    "sklearn.decomposition.sparse_encode": "doc",
    "sklearn.metrics.mean_absolute_error": "doc",
    "sklearn.metrics.mean_gamma_deviance": "doc",
    "sklearn.metrics.adjusted_rand_score": "doc",
    "sklearn.metrics.pairwise.rbf_kernel": "doc",
    "sklearn.model_selection.LeaveOneOut": "doc",
    "sklearn.covariance.shrunk_covariance": "doc",
    "sklearn.metrics.davies_bouldin_score": "doc",
    "sklearn.metrics.pairwise.chi2_kernel": "doc",
    "sklearn.neighbors.LocalOutlierFactor": "doc",
    "sklearn.metrics.classification_report": "doc",
    "sklearn.metrics.median_absolute_error": "doc",
    "sklearn.metrics.mean_poisson_deviance": "doc",
    "sklearn.metrics.mean_tweedie_deviance": "doc",
    "sklearn.metrics.fowlkes_mallows_score": "doc",
    "sklearn.metrics.plot_confusion_matrix": "doc",
    "sklearn.neighbors.KNeighborsRegressor": "doc",
    "sklearn.covariance.EmpiricalCovariance": "doc",
    "sklearn.metrics.mean_squared_log_error": "doc",
    "sklearn.metrics.pairwise.linear_kernel": "doc",
    "sklearn.metrics.ConfusionMatrixDisplay": "doc",
    "sklearn.metrics.PrecisionRecallDisplay": "doc",
    "sklearn.neighbors.KNeighborsClassifier": "doc",
    "sklearn.covariance.empirical_covariance": "doc",
    "sklearn.metrics.balanced_accuracy_score": "doc",
    "sklearn.metrics.calinski_harabasz_score": "doc",
    "sklearn.metrics.pairwise.kernel_metrics": "doc",
    "sklearn.metrics.pairwise.sigmoid_kernel": "doc",
    "sklearn.mixture.BayesianGaussianMixture": "doc",
    "sklearn.neighbors.KNeighborsTransformer": "doc",
    "sklearn.neighbors.radius_neighbors_graph": "doc",
    "sklearn.metrics.pairwise.cosine_distances": "doc",
    "sklearn.metrics.pairwise.distance_metrics": "doc",
    "sklearn.metrics.pairwise.paired_distances": "doc",
    "sklearn.metrics.pairwise_distances_argmin": "doc",
    "sklearn.metrics.adjusted_mutual_info_score": "doc",
    "sklearn.metrics.cluster.contingency_matrix": "doc",
    "sklearn.metrics.pairwise.cosine_similarity": "doc",
    "sklearn.metrics.pairwise_distances_chunked": "doc",
    "sklearn.neighbors.RadiusNeighborsRegressor": "doc",
    "sklearn.metrics.multilabel_confusion_matrix": "doc",
    "sklearn.neighbors.RadiusNeighborsClassifier": "doc",
    "sklearn.metrics.normalized_mutual_info_score": "doc",
    "sklearn.metrics.pairwise.euclidean_distances": "doc",
    "sklearn.metrics.pairwise.manhattan_distances": "doc",
    "sklearn.neighbors.RadiusNeighborsTransformer": "doc",
    "sklearn.metrics.pairwise.additive_chi2_kernel": "doc",
    "sklearn.metrics.pairwise_distances_argmin_min": "doc",
    "sklearn.metrics.precision_recall_fscore_support": "doc",
    "sklearn.metrics.pairwise.nan_euclidean_distances": "doc",
    "sklearn.metrics.pairwise.paired_cosine_distances": "doc",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis": "doc",
    "sklearn.metrics.homogeneity_completeness_v_measure": "doc",
    "sklearn.metrics.pairwise.paired_euclidean_distances": "doc",
    "sklearn.metrics.pairwise.paired_manhattan_distances": "doc",
    "sklearn.metrics.label_ranking_average_precision_score": "doc",
    "sklearn.utils.check_random_state": "doc",
    "sklearn.ensemble.StackingClassifier": "doc",
    "sklearn.utils.sparsefuncs.mean_variance_axis": "doc",
    "sklearn.inspection.permutation_importance": "doc",
    "sklearn.feature_selection.mutual_info_classif": "doc",
    "sklearn.cluster.AgglomerativeClustering": "doc",
    "sklearn.datasets.make_gaussian_quantiles": "doc",
    "sklearn.inspection.plot_partial_dependence": "doc",
    "sklearn.impute.IterativeImputer": "doc",
    "sklearn.ensemble.BaggingRegressor": "doc",
    "sklearn.cluster.FeatureAgglomeration": "doc",
    "sklearn.model_selection.LeaveOneGroupOut": "doc",
    "sklearn.datasets.fetch_california_housing": "doc",
    "sklearn.datasets.make_sparse_uncorrelated": "doc",
    "sklearn.experimental.enable_iterative_imputer": "doc",
    "sklearn.datasets.fetch_20newsgroups_vectorized": "doc",
    "sklearn.ensemble.GradientBoostingRegressor": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuit": "doc",
    "sklearn.feature_selection": "doc",
    "sklearn.feature_selection.RFE": "doc",
    "sklearn.feature_selection.chi2": "doc",
    "sklearn.feature_selection.RFECV": "doc",
    "sklearn.compose.ColumnTransformer": "doc",
    "sklearn.datasets.load_sample_image": "doc",
    "sklearn.ensemble.BaggingClassifier": "doc",
    "sklearn.feature_selection.SelectFpr": "doc",
    "sklearn.feature_selection.SelectFdr": "doc",
    "sklearn.feature_selection.SelectFwe": "doc",
    "sklearn.feature_selection.f_classif": "doc",
    "sklearn.feature_selection.SelectKBest": "doc",
    "sklearn.feature_selection.f_regression": "doc",
    "sklearn.feature_selection.SelectorMixin": "doc",
    "sklearn.feature_selection.SelectFromModel": "doc",
    "sklearn.feature_selection.SelectPercentile": "doc",
    "sklearn.feature_selection.VarianceThreshold": "doc",
    "sklearn.feature_selection.mutual_info_regression": "doc",
    "sklearn.feature_selection.GenericUnivariateSelect": "doc",
    "sklearn.ensemble.GradientBoostingClassifier": "doc",
    "sklearn.datasets.make_sparse_spd_matrix": "doc",
    "sklearn.random_projection.SparseRandomProjection": "doc",
    "sklearn.feature_extraction": "doc",
    "sklearn.datasets.load_sample_images": "doc",
    "sklearn.datasets.load_svmlight_file": "doc",
    "sklearn.inspection.partial_dependence": "doc",
    "sklearn.feature_extraction.FeatureHasher": "doc",
    "sklearn.preprocessing.PolynomialFeatures": "doc",
    "sklearn.feature_extraction.DictVectorizer": "doc",
    "sklearn.feature_extraction.image.img_to_graph": "doc",
    "sklearn.feature_extraction.image.grid_to_graph": "doc",
    "sklearn.feature_extraction.image.PatchExtractor": "doc",
    "sklearn.feature_extraction.text.CountVectorizer": "doc",
    "sklearn.feature_extraction.text.TfidfVectorizer": "doc",
    "sklearn.feature_extraction.text.TfidfTransformer": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuitCV": "doc",
    "sklearn.feature_extraction.image.extract_patches_2d": "doc",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d": "doc",
    "sklearn.utils.check_consistent_length": "doc",
    "sklearn.utils.extmath.randomized_range_finder": "doc",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis": "doc",
    "sklearn.utils.estimator_checks.parametrize_with_checks": "doc",
    "sklearn.svm": "doc",
    "sklearn.base": "doc",
    "sklearn.tree": "doc",
    "sklearn.dummy": "doc",
    "sklearn.utils": "doc",
    "sklearn.impute": "doc",
    "sklearn.cluster": "doc",
    "sklearn.compose": "doc",
    "sklearn.svm.SVC": "doc",
    "sklearn.svm.SVR": "doc",
    "sklearn.datasets": "doc",
    "sklearn.ensemble": "doc",
    "sklearn.isotonic": "doc",
    "sklearn.manifold": "doc",
    "sklearn.pipeline": "doc",
    "sklearn.svm.NuSVC": "doc",
    "sklearn.svm.NuSVR": "doc",
    "sklearn.base.clone": "doc",
    "sklearn.exceptions": "doc",
    "sklearn.inspection": "doc",
    "sklearn.multiclass": "doc",
    "sklearn.calibration": "doc",
    "sklearn.multioutput": "doc",
    "sklearn.naive_bayes": "doc",
    "sklearn.utils.Bunch": "doc",
    "sklearn.experimental": "doc",
    "sklearn.linear_model": "doc",
    "sklearn.manifold.MDS": "doc",
    "sklearn.cluster.Birch": "doc",
    "sklearn.decomposition": "doc",
    "sklearn.manifold.TSNE": "doc",
    "sklearn.preprocessing": "doc",
    "sklearn.svm.LinearSVC": "doc",
    "sklearn.svm.LinearSVR": "doc",
    "sklearn.utils.extmath": "doc",
    "sklearn.utils.shuffle": "doc",
    "sklearn.cluster.DBSCAN": "doc",
    "sklearn.cluster.KMeans": "doc",
    "sklearn.cluster.OPTICS": "doc",
    "sklearn.cluster.dbscan": "doc",
    "sklearn.neural_network": "doc",
    "sklearn.tree.plot_tree": "doc",
    "sklearn.utils.resample": "doc",
    "sklearn.utils.safe_sqr": "doc",
    "sklearn.cluster.k_means": "doc",
    "sklearn.manifold.Isomap": "doc",
    "sklearn.manifold.smacof": "doc",
    "sklearn.model_selection": "doc",
    "sklearn.semi_supervised": "doc",
    "sklearn.svm.OneClassSVM": "doc",
    "sklearn.utils.check_X_y": "doc",
    "sklearn.utils.indexable": "doc",
    "sklearn.utils.safe_mask": "doc",
    "sklearn.gaussian_process": "doc",
    "sklearn.tree.export_text": "doc",
    "sklearn.utils.deprecated": "doc",
    "sklearn.utils.multiclass": "doc",
    "sklearn.utils.validation": "doc",
    "sklearn.base.ClusterMixin": "doc",
    "sklearn.base.DensityMixin": "doc",
    "sklearn.base.is_regressor": "doc",
    "sklearn.cluster.MeanShift": "doc",
    "sklearn.decomposition.NMF": "doc",
    "sklearn.decomposition.PCA": "doc",
    "sklearn.impute.KNNImputer": "doc",
    "sklearn.linear_model.Lars": "doc",
    "sklearn.pipeline.Pipeline": "doc",
    "sklearn.random_projection": "doc",
    "sklearn.utils.check_array": "doc",
    "sklearn.utils.sparsefuncs": "doc",
    "sklearn.base.BaseEstimator": "doc",
    "sklearn.base.is_classifier": "doc",
    "sklearn.linear_model.Ridge": "doc",
    "sklearn.linear_model.Lasso": "doc",
    "sklearn.utils.check_scalar": "doc",
    "sklearn.base.BiclusterMixin": "doc",
    "sklearn.base.RegressorMixin": "doc",
    "sklearn.cross_decomposition": "doc",
    "sklearn.datasets.load_files": "doc",
    "sklearn.datasets.make_blobs": "doc",
    "sklearn.datasets.make_moons": "doc",
    "sklearn.linear_model.LarsCV": "doc",
    "sklearn.pipeline.make_union": "doc",
    "sklearn.preprocessing.scale": "doc",
    "sklearn.base.ClassifierMixin": "doc",
    "sklearn.datasets.load_boston": "doc",
    "sklearn.datasets.load_digits": "doc",
    "sklearn.dummy.DummyRegressor": "doc",
    "sklearn.impute.SimpleImputer": "doc",
    "sklearn.kernel_approximation": "doc",
    "sklearn.linear_model.RidgeCV": "doc",
    "sklearn.linear_model.LassoCV": "doc",
    "sklearn.tree.export_graphviz": "doc",
    "sklearn.utils.as_float_array": "doc",
    "sklearn.utils.murmurhash3_32": "doc",
    "sklearn.utils._safe_indexing": "doc",
    "sklearn.utils.all_estimators": "doc",
    "sklearn.base.TransformerMixin": "doc",
    "sklearn.datasets.fetch_openml": "doc",
    "sklearn.datasets.make_circles": "doc",
    "sklearn.decomposition.FastICA": "doc",
    "sklearn.decomposition.fastica": "doc",
    "sklearn.discriminant_analysis": "doc",
    "sklearn.dummy.DummyClassifier": "doc",
    "sklearn.model_selection.KFold": "doc",
    "sklearn.pipeline.FeatureUnion": "doc",
    "sklearn.utils.extmath.density": "doc",
    "sklearn.utils.gen_even_slices": "doc",
    "sklearn.datasets.fetch_covtype": "doc",
    "sklearn.datasets.get_data_home": "doc",
    "sklearn.datasets.load_diabetes": "doc",
    "sklearn.linear_model.LassoLars": "doc",
    "sklearn.linear_model.enet_path": "doc",
    "sklearn.naive_bayes.GaussianNB": "doc",
    "sklearn.pipeline.make_pipeline": "doc",
    "sklearn.preprocessing.binarize": "doc",
    "sklearn.utils.estimator_checks": "doc",
    "sklearn.utils.parallel_backend": "doc",
    "sklearn.cluster.MiniBatchKMeans": "doc",
    "sklearn.cross_decomposition.CCA": "doc",
    "sklearn.datasets.fetch_kddcup99": "doc",
    "sklearn.datasets.make_friedman1": "doc",
    "sklearn.datasets.make_friedman2": "doc",
    "sklearn.datasets.make_friedman3": "doc",
    "sklearn.decomposition.KernelPCA": "doc",
    "sklearn.decomposition.SparsePCA": "doc",
    "sklearn.impute.MissingIndicator": "doc",
    "sklearn.linear_model.Perceptron": "doc",
    "sklearn.linear_model.ElasticNet": "doc",
    "sklearn.linear_model.lasso_path": "doc",
    "sklearn.naive_bayes.BernoulliNB": "doc",
    "sklearn.preprocessing.Binarizer": "doc",
    "sklearn.preprocessing.normalize": "doc",
    "sklearn.tree.ExtraTreeRegressor": "doc",
    "sklearn.utils.assert_all_finite": "doc",
    "sklearn.datasets.fetch_lfw_pairs": "doc",
    "sklearn.datasets.make_biclusters": "doc",
    "sklearn.datasets.make_regression": "doc",
    "sklearn.datasets.make_spd_matrix": "doc",
    "sklearn.datasets.make_swiss_roll": "doc",
    "sklearn.ensemble.IsolationForest": "doc",
    "sklearn.ensemble.VotingRegressor": "doc",
    "sklearn.linear_model.LassoLarsCV": "doc",
    "sklearn.linear_model.LassoLarsIC": "doc",
    "sklearn.manifold.trustworthiness": "doc",
    "sklearn.model_selection.check_cv": "doc",
    "sklearn.naive_bayes.ComplementNB": "doc",
    "sklearn.preprocessing.Normalizer": "doc",
    "sklearn.tree.ExtraTreeClassifier": "doc",
    "sklearn.utils.arrayfuncs.min_pos": "doc",
    "sklearn.cluster.cluster_optics_xi": "doc",
    "sklearn.datasets.fetch_lfw_people": "doc",
    "sklearn.datasets.make_hastie_10_2": "doc",
    "sklearn.decomposition.SparseCoder": "doc",
    "sklearn.ensemble.VotingClassifier": "doc",
    "sklearn.exceptions.NotFittedError": "doc",
    "sklearn.isotonic.check_increasing": "doc",
    "sklearn.linear_model.SGDRegressor": "doc",
    "sklearn.linear_model.ElasticNetCV": "doc",
    "sklearn.model_selection.LeavePOut": "doc",
    "sklearn.naive_bayes.CategoricalNB": "doc",
    "sklearn.naive_bayes.MultinomialNB": "doc",
    "sklearn.utils.estimator_html_repr": "doc",
    "sklearn.utils.extmath.fast_logdet": "doc",
    "sklearn.cluster.SpectralClustering": "doc",
    "sklearn.cluster.estimate_bandwidth": "doc",
    "sklearn.cross_decomposition.PLSSVD": "doc",
    "sklearn.datasets.make_checkerboard": "doc",
    "sklearn.decomposition.TruncatedSVD": "doc",
    "sklearn.ensemble.AdaBoostRegressor": "doc",
    "sklearn.linear_model.SGDClassifier": "doc",
    "sklearn.linear_model.ARDRegression": "doc",
    "sklearn.linear_model.BayesianRidge": "doc",
    "sklearn.linear_model.orthogonal_mp": "doc",
    "sklearn.manifold.SpectralEmbedding": "doc",
    "sklearn.model_selection.GroupKFold": "doc",
    "sklearn.multioutput.RegressorChain": "doc",
    "sklearn.preprocessing.LabelEncoder": "doc",
    "sklearn.preprocessing.MaxAbsScaler": "doc",
    "sklearn.preprocessing.MinMaxScaler": "doc",
    "sklearn.preprocessing.RobustScaler": "doc",
    "sklearn.preprocessing.maxabs_scale": "doc",
    "sklearn.preprocessing.minmax_scale": "doc",
    "sklearn.preprocessing.robust_scale": "doc",
    "sklearn.tree.DecisionTreeRegressor": "doc",
    "sklearn.cluster.AffinityPropagation": "doc",
    "sklearn.cluster.spectral_clustering": "doc",
    "sklearn.datasets.dump_svmlight_file": "doc",
    "sklearn.datasets.fetch_20newsgroups": "doc",
    "sklearn.decomposition.dict_learning": "doc",
    "sklearn.ensemble.AdaBoostClassifier": "doc",
    "sklearn.exceptions.FitFailedWarning": "doc",
    "sklearn.isotonic.IsotonicRegression": "doc",
    "sklearn.linear_model.MultiTaskLasso": "doc",
    "sklearn.linear_model.HuberRegressor": "doc",
    "sklearn.linear_model.GammaRegressor": "doc",
    "sklearn.linear_model.lars_path_gram": "doc",
    "sklearn.manifold.spectral_embedding": "doc",
    "sklearn.multioutput.ClassifierChain": "doc",
    "sklearn.neural_network.BernoulliRBM": "doc",
    "sklearn.neural_network.MLPRegressor": "doc",
    "sklearn.preprocessing.OneHotEncoder": "doc",
    "sklearn.tree.DecisionTreeClassifier": "doc",
    "sklearn.utils.extmath.weighted_mode": "doc",
    "sklearn.cluster.SpectralBiclustering": "doc",
    "sklearn.cluster.SpectralCoclustering": "doc",
    "sklearn.cluster.affinity_propagation": "doc",
    "sklearn.cluster.compute_optics_graph": "doc",
    "sklearn.compose.make_column_selector": "doc",
    "sklearn.datasets.load_svmlight_files": "doc",
    "sklearn.datasets.make_classification": "doc",
    "sklearn.decomposition.FactorAnalysis": "doc",
    "sklearn.decomposition.IncrementalPCA": "doc",
    "sklearn.ensemble.ExtraTreesRegressor": "doc",
    "sklearn.exceptions.EfficiencyWarning": "doc",
    "sklearn.exceptions.NonBLASDotWarning": "doc",
    "sklearn.gaussian_process.kernels.RBF": "doc",
    "sklearn.gaussian_process.kernels.Sum": "doc",
    "sklearn.isotonic.isotonic_regression": "doc",
    "sklearn.linear_model.RidgeClassifier": "doc",
    "sklearn.linear_model.RANSACRegressor": "doc",
    "sklearn.model_selection.ShuffleSplit": "doc",
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.neural_network.MLPClassifier": "doc",
    "sklearn.preprocessing.KernelCenterer": "doc",
    "sklearn.preprocessing.LabelBinarizer": "doc",
    "sklearn.preprocessing.OrdinalEncoder": "doc",
    "sklearn.preprocessing.StandardScaler": "doc",
    "sklearn.preprocessing.label_binarize": "doc",
    "sklearn.utils.extmath.randomized_svd": "doc",
    "sklearn.cluster.cluster_optics_dbscan": "doc",
    "sklearn.datasets.fetch_olivetti_faces": "doc",
    "sklearn.datasets.make_low_rank_matrix": "doc",
    "sklearn.ensemble.ExtraTreesClassifier": "doc",
    "sklearn.ensemble.RandomTreesEmbedding": "doc",
    "sklearn.exceptions.ConvergenceWarning": "doc",
    "sklearn.kernel_approximation.Nystroem": "doc",
    "sklearn.linear_model.LinearRegression": "doc",
    "sklearn.linear_model.MultiTaskLassoCV": "doc",
    "sklearn.linear_model.PoissonRegressor": "doc",
    "sklearn.linear_model.TweedieRegressor": "doc",
    "sklearn.linear_model.ridge_regression": "doc",
    "sklearn.model_selection.RepeatedKFold": "doc",
    "sklearn.model_selection.ParameterGrid": "doc",
    "sklearn.multiclass.OneVsOneClassifier": "doc",
    "sklearn.preprocessing.power_transform": "doc",
    "sklearn.utils.extmath.safe_sparse_dot": "doc",
    "sklearn.utils.validation.check_memory": "doc",
    "sklearn.utils.validation.column_or_1d": "doc",
    "sklearn.ensemble.RandomForestRegressor": "doc",
    "sklearn.linear_model.RidgeClassifierCV": "doc",
    "sklearn.linear_model.TheilSenRegressor": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.multiclass.OneVsRestClassifier": "doc",
    "sklearn.preprocessing.KBinsDiscretizer": "doc",
    "sklearn.preprocessing.PowerTransformer": "doc",
    "sklearn.semi_supervised.LabelSpreading": "doc",
    "sklearn.utils.multiclass.is_multilabel": "doc",
    "sklearn.utils.multiclass.unique_labels": "doc",
    "sklearn.compose.make_column_transformer": "doc",
    "sklearn.ensemble.RandomForestClassifier": "doc",
    "sklearn.gaussian_process.kernels.Kernel": "doc",
    "sklearn.gaussian_process.kernels.Matern": "doc",
    "sklearn.kernel_approximation.RBFSampler": "doc",
    "sklearn.linear_model.LogisticRegression": "doc",
    "sklearn.linear_model.orthogonal_mp_gram": "doc",
    "sklearn.manifold.LocallyLinearEmbedding": "doc",
    "sklearn.model_selection.LeavePGroupsOut": "doc",
    "sklearn.model_selection.PredefinedSplit": "doc",
    "sklearn.model_selection.StratifiedKFold": "doc",
    "sklearn.model_selection.TimeSeriesSplit": "doc",
    "sklearn.model_selection.cross_val_score": "doc",
    "sklearn.multiclass.OutputCodeClassifier": "doc",
    "sklearn.preprocessing.add_dummy_feature": "doc",
    "sklearn.utils.multiclass.type_of_target": "doc",
    "sklearn.utils.register_parallel_backend": "doc",
    "sklearn.cross_decomposition.PLSCanonical": "doc",
    "sklearn.decomposition.DictionaryLearning": "doc",
    "sklearn.decomposition.MiniBatchSparsePCA": "doc",
    "sklearn.exceptions.DataConversionWarning": "doc",
    "sklearn.gaussian_process.kernels.Product": "doc",
    "sklearn.linear_model.MultiTaskElasticNet": "doc",
    "sklearn.model_selection.train_test_split": "doc",
    "sklearn.model_selection.ParameterSampler": "doc",
    "sklearn.multioutput.MultiOutputRegressor": "doc",
    "sklearn.preprocessing.quantile_transform": "doc",
    "sklearn.semi_supervised.LabelPropagation": "doc",
    "sklearn.utils.validation.check_is_fitted": "doc",
    "sklearn.utils.validation.check_symmetric": "doc",
    "sklearn.cross_decomposition.PLSRegression": "doc",
    "sklearn.datasets.make_sparse_coded_signal": "doc",
    "sklearn.exceptions.ChangedBehaviorWarning": "doc",
    "sklearn.exceptions.UndefinedMetricWarning": "doc",
    "sklearn.linear_model.LogisticRegressionCV": "doc",
    "sklearn.manifold.locally_linear_embedding": "doc",
    "sklearn.model_selection.GroupShuffleSplit": "doc",
    "sklearn.model_selection.cross_val_predict": "doc",
    "sklearn.multioutput.MultiOutputClassifier": "doc",
    "sklearn.preprocessing.FunctionTransformer": "doc",
    "sklearn.preprocessing.MultiLabelBinarizer": "doc",
    "sklearn.preprocessing.QuantileTransformer": "doc",
    "sklearn.calibration.CalibratedClassifierCV": "doc",
    "sklearn.compose.TransformedTargetRegressor": "doc",
    "sklearn.linear_model.MultiTaskElasticNetCV": "doc",
    "sklearn.model_selection.RandomizedSearchCV": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_row": "doc",
    "sklearn.utils.validation.has_fit_parameter": "doc",
    "sklearn.gaussian_process.kernels.DotProduct": "doc",
    "sklearn.inspection.PartialDependenceDisplay": "doc",
    "sklearn.utils.sparsefuncs.inplace_row_scale": "doc",
    "sklearn.datasets.fetch_species_distributions": "doc",
    "sklearn.exceptions.DataDimensionalityWarning": "doc",
    "sklearn.gaussian_process.kernels.WhiteKernel": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_column": "doc",
    "sklearn.ensemble.HistGradientBoostingRegressor": "doc",
    "sklearn.kernel_approximation.SkewedChi2Sampler": "doc",
    "sklearn.model_selection.StratifiedShuffleSplit": "doc",
    "sklearn.utils.estimator_checks.check_estimator": "doc",
    "sklearn.utils.sparsefuncs.inplace_column_scale": "doc",
    "sklearn.datasets.make_multilabel_classification": "doc",
    "sklearn.decomposition.LatentDirichletAllocation": "doc",
    "sklearn.ensemble.HistGradientBoostingClassifier": "doc",
    "sklearn.gaussian_process.kernels.CompoundKernel": "doc",
    "sklearn.gaussian_process.kernels.ConstantKernel": "doc",
    "sklearn.gaussian_process.kernels.ExpSineSquared": "doc",
    "sklearn.gaussian_process.kernels.Exponentiation": "doc",
    "sklearn.gaussian_process.kernels.Hyperparameter": "doc",
    "sklearn.gaussian_process.kernels.PairwiseKernel": "doc",
    "sklearn.linear_model.PassiveAggressiveRegressor": "doc",
    "sklearn.model_selection.RepeatedStratifiedKFold": "doc",
    "sklearn.utils.class_weight.compute_class_weight": "doc",
    "sklearn.utils.random.sample_without_replacement": "doc",
    "sklearn.decomposition.non_negative_factorization": "doc",
    "sklearn.kernel_approximation.AdditiveChi2Sampler": "doc",
    "sklearn.linear_model.PassiveAggressiveClassifier": "doc",
    "sklearn.utils.class_weight.compute_sample_weight": "doc",
    "sklearn.decomposition.MiniBatchDictionaryLearning": "doc",
    "sklearn.gaussian_process.GaussianProcessRegressor": "doc",
    "sklearn.experimental.enable_hist_gradient_boosting": "doc",
    "sklearn.gaussian_process.GaussianProcessClassifier": "doc",
    "sklearn.gaussian_process.kernels.RationalQuadratic": "doc",
    "sklearn.random_projection.GaussianRandomProjection": "doc",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale": "doc",
    "sklearn.utils.metaestimators.if_delegate_has_method": "doc",
    "sklearn.utils.graph_shortest_path.graph_shortest_path": "doc",
    "sklearn.utils.graph.single_source_shortest_path_length": "doc",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim": "doc",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": "doc",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2": "doc"
  },
  "sklearn.learning_curve.validation_curve": {
    "sklearn.model_selection.learning_curve": "doc",
    "sklearn.model_selection.validation_curve": "doc",
    "sklearn.calibration.calibration_curve": "doc",
    "sklearn.datasets.make_s_curve": "doc",
    "sklearn.metrics.roc_curve": "doc",
    "sklearn.metrics.plot_roc_curve": "doc",
    "sklearn.utils.validation": "doc",
    "sklearn.utils.validation.check_memory": "doc",
    "sklearn.utils.validation.column_or_1d": "doc",
    "sklearn.utils.validation.check_is_fitted": "doc",
    "sklearn.utils.validation.check_symmetric": "doc",
    "sklearn.utils.validation.has_fit_parameter": "doc",
    "sklearn.metrics.precision_recall_curve": "doc",
    "sklearn.metrics.precision_score": "doc",
    "sklearn.metrics.explained_variance_score": "doc",
    "sklearn.metrics.plot_precision_recall_curve": "doc",
    "sklearn.decomposition.dict_learning_online": "doc",
    "sklearn.metrics.pairwise.laplacian_kernel": "doc",
    "sklearn.model_selection.permutation_test_score": "doc",
    "sklearn.svm.l1_min_c": "doc",
    "sklearn.cluster.ward_tree": "doc",
    "sklearn.metrics.classification_report": "doc",
    "sklearn.metrics.average_precision_score": "doc",
    "sklearn.calibration": "doc",
    "sklearn.calibration.CalibratedClassifierCV": "doc",
    "sklearn.metrics.mutual_info_score": "doc",
    "sklearn.metrics.normalized_mutual_info_score": "doc",
    "sklearn.inspection.permutation_importance": "doc",
    "sklearn.metrics.davies_bouldin_score": "doc",
    "sklearn.metrics.label_ranking_loss": "doc",
    "sklearn.metrics.ndcg_score": "doc",
    "sklearn.mixture": "doc",
    "sklearn.covariance": "doc",
    "sklearn.covariance.OAS": "doc",
    "sklearn.covariance.oas": "doc",
    "sklearn.covariance.MinCovDet": "doc",
    "sklearn.covariance.LedoitWolf": "doc",
    "sklearn.metrics.jaccard_score": "doc",
    "sklearn.covariance.ledoit_wolf": "doc",
    "sklearn.metrics.v_measure_score": "doc",
    "sklearn.mixture.GaussianMixture": "doc",
    "sklearn.covariance.GraphicalLasso": "doc",
    "sklearn.covariance.graphical_lasso": "doc",
    "sklearn.covariance.EllipticEnvelope": "doc",
    "sklearn.covariance.GraphicalLassoCV": "doc",
    "sklearn.covariance.ShrunkCovariance": "doc",
    "sklearn.covariance.shrunk_covariance": "doc",
    "sklearn.covariance.EmpiricalCovariance": "doc",
    "sklearn.covariance.empirical_covariance": "doc",
    "sklearn.mixture.BayesianGaussianMixture": "doc",
    "sklearn.metrics.pairwise_distances_chunked": "doc",
    "sklearn.metrics.balanced_accuracy_score": "doc",
    "sklearn.metrics.calinski_harabasz_score": "doc",
    "sklearn.metrics.pairwise.polynomial_kernel": "doc",
    "sklearn.metrics.pairwise.additive_chi2_kernel": "doc",
    "sklearn.datasets.clear_data_home": "doc",
    "sklearn.experimental.enable_iterative_imputer": "doc",
    "sklearn.metrics.multilabel_confusion_matrix": "doc",
    "sklearn.metrics.fowlkes_mallows_score": "doc",
    "sklearn.metrics.pairwise.haversine_distances": "doc",
    "sklearn.datasets.make_gaussian_quantiles": "doc",
    "sklearn.metrics.pairwise.pairwise_kernels": "doc",
    "sklearn.metrics.label_ranking_average_precision_score": "doc",
    "sklearn.metrics.completeness_score": "doc",
    "sklearn.datasets.load_breast_cancer": "doc",
    "sklearn.utils.sparsefuncs.mean_variance_axis": "doc",
    "sklearn.metrics.adjusted_mutual_info_score": "doc",
    "sklearn.neighbors.RadiusNeighborsTransformer": "doc",
    "sklearn.metrics.pairwise.paired_manhattan_distances": "doc",
    "sklearn.metrics.adjusted_rand_score": "doc",
    "sklearn.metrics.pairwise.euclidean_distances": "doc",
    "sklearn.metrics.pairwise.manhattan_distances": "doc",
    "sklearn.metrics.pairwise.nan_euclidean_distances": "doc",
    "sklearn.metrics.pairwise.paired_cosine_distances": "doc",
    "sklearn.kernel_ridge": "doc",
    "sklearn.metrics.hamming_loss": "doc",
    "sklearn.kernel_ridge.KernelRidge": "doc",
    "sklearn.feature_extraction.text.HashingVectorizer": "doc",
    "sklearn.metrics.dcg_score": "doc",
    "sklearn.datasets.load_iris": "doc",
    "sklearn.datasets.load_wine": "doc",
    "sklearn.neighbors.BallTree": "doc",
    "sklearn.datasets.fetch_rcv1": "doc",
    "sklearn.metrics.fbeta_score": "doc",
    "sklearn.metrics.recall_score": "doc",
    "sklearn.metrics.roc_auc_score": "doc",
    "sklearn.datasets.load_linnerud": "doc",
    "sklearn.metrics.accuracy_score": "doc",
    "sklearn.metrics.confusion_matrix": "doc",
    "sklearn.metrics.silhouette_score": "doc",
    "sklearn.metrics.pairwise.rbf_kernel": "doc",
    "sklearn.metrics.pairwise.chi2_kernel": "doc",
    "sklearn.metrics.pairwise.linear_kernel": "doc",
    "sklearn.metrics.pairwise.kernel_metrics": "doc",
    "sklearn.metrics.pairwise.sigmoid_kernel": "doc",
    "sklearn.metrics.pairwise.cosine_distances": "doc",
    "sklearn.metrics.pairwise.distance_metrics": "doc",
    "sklearn.metrics.pairwise.paired_distances": "doc",
    "sklearn.metrics.pairwise.cosine_similarity": "doc",
    "sklearn.metrics.pairwise.paired_euclidean_distances": "doc",
    "sklearn.feature_extraction.image.grid_to_graph": "doc",
    "sklearn.utils.estimator_checks.parametrize_with_checks": "doc",
    "sklearn.metrics.homogeneity_score": "doc",
    "sklearn.isotonic": "doc",
    "sklearn.multioutput": "doc",
    "sklearn.tree.plot_tree": "doc",
    "sklearn.datasets.get_data_home": "doc",
    "sklearn.utils.estimator_checks": "doc",
    "sklearn.ensemble.IsolationForest": "doc",
    "sklearn.isotonic.check_increasing": "doc",
    "sklearn.multioutput.RegressorChain": "doc",
    "sklearn.isotonic.IsotonicRegression": "doc",
    "sklearn.multioutput.ClassifierChain": "doc",
    "sklearn.isotonic.isotonic_regression": "doc",
    "sklearn.multioutput.MultiOutputRegressor": "doc",
    "sklearn.multioutput.MultiOutputClassifier": "doc",
    "sklearn.utils.estimator_checks.check_estimator": "doc",
    "sklearn.metrics.pairwise_distances_argmin": "doc",
    "sklearn.metrics.median_absolute_error": "doc",
    "sklearn.metrics.mean_poisson_deviance": "doc",
    "sklearn.metrics.plot_confusion_matrix": "doc",
    "sklearn.cluster.AgglomerativeClustering": "doc",
    "sklearn.metrics.mean_squared_log_error": "doc",
    "sklearn.neighbors.radius_neighbors_graph": "doc",
    "sklearn.inspection.plot_partial_dependence": "doc",
    "sklearn.utils.check_random_state": "doc",
    "sklearn.datasets.fetch_california_housing": "doc",
    "sklearn.datasets.make_sparse_uncorrelated": "doc",
    "sklearn.metrics.mean_absolute_error": "doc",
    "sklearn.neighbors.RadiusNeighborsRegressor": "doc",
    "sklearn.metrics.pairwise_distances_argmin_min": "doc",
    "sklearn.neighbors.RadiusNeighborsClassifier": "doc",
    "sklearn.ensemble.StackingRegressor": "doc",
    "sklearn.ensemble.GradientBoostingRegressor": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuit": "doc",
    "sklearn.utils.estimator_html_repr": "doc",
    "sklearn.preprocessing.MultiLabelBinarizer": "doc",
    "sklearn.preprocessing.QuantileTransformer": "doc",
    "sklearn.neighbors.KNeighborsTransformer": "doc",
    "sklearn.compose.make_column_transformer": "doc",
    "sklearn.feature_selection.mutual_info_classif": "doc",
    "sklearn.decomposition.MiniBatchDictionaryLearning": "doc",
    "sklearn.metrics": "doc",
    "sklearn.neighbors": "doc",
    "sklearn.metrics.auc": "doc",
    "sklearn.metrics.f1_score": "doc",
    "sklearn.metrics.log_loss": "doc",
    "sklearn.metrics.r2_score": "doc",
    "sklearn.neighbors.KDTree": "doc",
    "sklearn.metrics.max_error": "doc",
    "sklearn.cluster.mean_shift": "doc",
    "sklearn.metrics.get_scorer": "doc",
    "sklearn.metrics.hinge_loss": "doc",
    "sklearn.metrics.make_scorer": "doc",
    "sklearn.metrics.check_scoring": "doc",
    "sklearn.metrics.zero_one_loss": "doc",
    "sklearn.linear_model.lars_path": "doc",
    "sklearn.metrics.coverage_error": "doc",
    "sklearn.metrics.consensus_score": "doc",
    "sklearn.metrics.RocCurveDisplay": "doc",
    "sklearn.neighbors.KernelDensity": "doc",
    "sklearn.metrics.brier_score_loss": "doc",
    "sklearn.neighbors.DistanceMetric": "doc",
    "sklearn.metrics.cohen_kappa_score": "doc",
    "sklearn.metrics.matthews_corrcoef": "doc",
    "sklearn.neighbors.NearestCentroid": "doc",
    "sklearn.metrics.mean_squared_error": "doc",
    "sklearn.metrics.silhouette_samples": "doc",
    "sklearn.metrics.pairwise_distances": "doc",
    "sklearn.neighbors.NearestNeighbors": "doc",
    "sklearn.neighbors.kneighbors_graph": "doc",
    "sklearn.decomposition.sparse_encode": "doc",
    "sklearn.metrics.mean_gamma_deviance": "doc",
    "sklearn.model_selection.LeaveOneOut": "doc",
    "sklearn.neighbors.LocalOutlierFactor": "doc",
    "sklearn.metrics.mean_tweedie_deviance": "doc",
    "sklearn.neighbors.KNeighborsRegressor": "doc",
    "sklearn.metrics.ConfusionMatrixDisplay": "doc",
    "sklearn.metrics.PrecisionRecallDisplay": "doc",
    "sklearn.neighbors.KNeighborsClassifier": "doc",
    "sklearn.metrics.cluster.contingency_matrix": "doc",
    "sklearn.metrics.precision_recall_fscore_support": "doc",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis": "doc",
    "sklearn.metrics.homogeneity_completeness_v_measure": "doc",
    "sklearn.inspection.partial_dependence": "doc",
    "sklearn.feature_extraction.text.TfidfTransformer": "doc",
    "sklearn.compose.ColumnTransformer": "doc",
    "sklearn.datasets.load_sample_image": "doc",
    "sklearn.ensemble.StackingClassifier": "doc",
    "sklearn.pipeline": "doc",
    "sklearn.base.clone": "doc",
    "sklearn.exceptions": "doc",
    "sklearn.inspection": "doc",
    "sklearn.multiclass": "doc",
    "sklearn.utils.multiclass": "doc",
    "sklearn.pipeline.Pipeline": "doc",
    "sklearn.base.BaseEstimator": "doc",
    "sklearn.pipeline.make_union": "doc",
    "sklearn.utils.all_estimators": "doc",
    "sklearn.decomposition.fastica": "doc",
    "sklearn.pipeline.FeatureUnion": "doc",
    "sklearn.pipeline.make_pipeline": "doc",
    "sklearn.preprocessing.binarize": "doc",
    "sklearn.linear_model.ElasticNet": "doc",
    "sklearn.linear_model.lasso_path": "doc",
    "sklearn.preprocessing.Binarizer": "doc",
    "sklearn.utils.arrayfuncs.min_pos": "doc",
    "sklearn.exceptions.NotFittedError": "doc",
    "sklearn.naive_bayes.MultinomialNB": "doc",
    "sklearn.linear_model.BayesianRidge": "doc",
    "sklearn.preprocessing.maxabs_scale": "doc",
    "sklearn.exceptions.FitFailedWarning": "doc",
    "sklearn.linear_model.lars_path_gram": "doc",
    "sklearn.utils.extmath.weighted_mode": "doc",
    "sklearn.exceptions.EfficiencyWarning": "doc",
    "sklearn.exceptions.NonBLASDotWarning": "doc",
    "sklearn.preprocessing.OrdinalEncoder": "doc",
    "sklearn.preprocessing.label_binarize": "doc",
    "sklearn.utils.extmath.randomized_svd": "doc",
    "sklearn.exceptions.ConvergenceWarning": "doc",
    "sklearn.multiclass.OneVsOneClassifier": "doc",
    "sklearn.multiclass.OneVsRestClassifier": "doc",
    "sklearn.utils.multiclass.is_multilabel": "doc",
    "sklearn.utils.multiclass.unique_labels": "doc",
    "sklearn.multiclass.OutputCodeClassifier": "doc",
    "sklearn.utils.multiclass.type_of_target": "doc",
    "sklearn.cross_decomposition.PLSCanonical": "doc",
    "sklearn.exceptions.DataConversionWarning": "doc",
    "sklearn.exceptions.ChangedBehaviorWarning": "doc",
    "sklearn.exceptions.UndefinedMetricWarning": "doc",
    "sklearn.inspection.PartialDependenceDisplay": "doc",
    "sklearn.exceptions.DataDimensionalityWarning": "doc",
    "sklearn.utils.sparsefuncs.inplace_column_scale": "doc",
    "sklearn.gaussian_process.kernels.PairwiseKernel": "doc",
    "sklearn.ensemble.GradientBoostingClassifier": "doc",
    "sklearn.experimental.enable_hist_gradient_boosting": "doc",
    "sklearn.utils.sparsefuncs.inplace_row_scale": "doc",
    "sklearn.utils.random.sample_without_replacement": "doc",
    "sklearn.decomposition.non_negative_factorization": "doc",
    "sklearn.datasets.load_sample_images": "doc",
    "sklearn.preprocessing.PolynomialFeatures": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuitCV": "doc",
    "sklearn.impute.IterativeImputer": "doc",
    "sklearn.ensemble.BaggingRegressor": "doc",
    "sklearn.cluster.FeatureAgglomeration": "doc",
    "sklearn.model_selection.LeaveOneGroupOut": "doc",
    "sklearn.cluster.estimate_bandwidth": "doc",
    "sklearn.decomposition.MiniBatchSparsePCA": "doc",
    "sklearn.preprocessing.quantile_transform": "doc",
    "sklearn.utils.extmath.randomized_range_finder": "doc",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis": "doc",
    "sklearn.model_selection.RepeatedStratifiedKFold": "doc",
    "sklearn.datasets.fetch_20newsgroups_vectorized": "doc",
    "sklearn.linear_model.MultiTaskElasticNet": "doc",
    "sklearn.preprocessing.FunctionTransformer": "doc",
    "sklearn.feature_selection": "doc",
    "sklearn.feature_selection.RFE": "doc",
    "sklearn.feature_selection.chi2": "doc",
    "sklearn.feature_selection.RFECV": "doc",
    "sklearn.ensemble.BaggingClassifier": "doc",
    "sklearn.feature_selection.SelectFpr": "doc",
    "sklearn.feature_selection.SelectFdr": "doc",
    "sklearn.feature_selection.SelectFwe": "doc",
    "sklearn.feature_selection.f_classif": "doc",
    "sklearn.feature_selection.SelectKBest": "doc",
    "sklearn.feature_selection.f_regression": "doc",
    "sklearn.feature_selection.SelectorMixin": "doc",
    "sklearn.feature_selection.SelectFromModel": "doc",
    "sklearn.feature_selection.SelectPercentile": "doc",
    "sklearn.feature_selection.VarianceThreshold": "doc",
    "sklearn.feature_selection.mutual_info_regression": "doc",
    "sklearn.feature_selection.GenericUnivariateSelect": "doc",
    "sklearn.random_projection.GaussianRandomProjection": "doc",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale": "doc",
    "sklearn.ensemble.HistGradientBoostingRegressor": "doc",
    "sklearn.datasets.make_sparse_spd_matrix": "doc",
    "sklearn.random_projection.SparseRandomProjection": "doc",
    "sklearn.datasets.make_low_rank_matrix": "doc",
    "sklearn.ensemble.HistGradientBoostingClassifier": "doc",
    "sklearn.feature_extraction": "doc",
    "sklearn.datasets.load_svmlight_file": "doc",
    "sklearn.feature_extraction.FeatureHasher": "doc",
    "sklearn.feature_extraction.DictVectorizer": "doc",
    "sklearn.feature_extraction.image.img_to_graph": "doc",
    "sklearn.feature_extraction.image.PatchExtractor": "doc",
    "sklearn.feature_extraction.text.CountVectorizer": "doc",
    "sklearn.feature_extraction.text.TfidfVectorizer": "doc",
    "sklearn.feature_extraction.image.extract_patches_2d": "doc",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d": "doc",
    "sklearn.utils.check_consistent_length": "doc",
    "sklearn.discriminant_analysis": "doc",
    "sklearn.linear_model.MultiTaskElasticNetCV": "doc",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": "doc",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": "doc",
    "sklearn.svm": "doc",
    "sklearn.base": "doc",
    "sklearn.tree": "doc",
    "sklearn.dummy": "doc",
    "sklearn.utils": "doc",
    "sklearn.impute": "doc",
    "sklearn.cluster": "doc",
    "sklearn.compose": "doc",
    "sklearn.svm.SVC": "doc",
    "sklearn.svm.SVR": "doc",
    "sklearn.datasets": "doc",
    "sklearn.ensemble": "doc",
    "sklearn.manifold": "doc",
    "sklearn.svm.NuSVC": "doc",
    "sklearn.svm.NuSVR": "doc",
    "sklearn.naive_bayes": "doc",
    "sklearn.utils.Bunch": "doc",
    "sklearn.experimental": "doc",
    "sklearn.linear_model": "doc",
    "sklearn.manifold.MDS": "doc",
    "sklearn.cluster.Birch": "doc",
    "sklearn.decomposition": "doc",
    "sklearn.manifold.TSNE": "doc",
    "sklearn.preprocessing": "doc",
    "sklearn.svm.LinearSVC": "doc",
    "sklearn.svm.LinearSVR": "doc",
    "sklearn.utils.extmath": "doc",
    "sklearn.utils.shuffle": "doc",
    "sklearn.cluster.DBSCAN": "doc",
    "sklearn.cluster.KMeans": "doc",
    "sklearn.cluster.OPTICS": "doc",
    "sklearn.cluster.dbscan": "doc",
    "sklearn.neural_network": "doc",
    "sklearn.utils.resample": "doc",
    "sklearn.utils.safe_sqr": "doc",
    "sklearn.cluster.k_means": "doc",
    "sklearn.manifold.Isomap": "doc",
    "sklearn.manifold.smacof": "doc",
    "sklearn.model_selection": "doc",
    "sklearn.semi_supervised": "doc",
    "sklearn.svm.OneClassSVM": "doc",
    "sklearn.utils.check_X_y": "doc",
    "sklearn.utils.indexable": "doc",
    "sklearn.utils.safe_mask": "doc",
    "sklearn.gaussian_process": "doc",
    "sklearn.tree.export_text": "doc",
    "sklearn.utils.deprecated": "doc",
    "sklearn.base.ClusterMixin": "doc",
    "sklearn.base.DensityMixin": "doc",
    "sklearn.base.is_regressor": "doc",
    "sklearn.cluster.MeanShift": "doc",
    "sklearn.decomposition.NMF": "doc",
    "sklearn.decomposition.PCA": "doc",
    "sklearn.impute.KNNImputer": "doc",
    "sklearn.linear_model.Lars": "doc",
    "sklearn.random_projection": "doc",
    "sklearn.utils.check_array": "doc",
    "sklearn.utils.sparsefuncs": "doc",
    "sklearn.base.is_classifier": "doc",
    "sklearn.linear_model.Ridge": "doc",
    "sklearn.linear_model.Lasso": "doc",
    "sklearn.utils.check_scalar": "doc",
    "sklearn.base.BiclusterMixin": "doc",
    "sklearn.base.RegressorMixin": "doc",
    "sklearn.cross_decomposition": "doc",
    "sklearn.datasets.load_files": "doc",
    "sklearn.datasets.make_blobs": "doc",
    "sklearn.datasets.make_moons": "doc",
    "sklearn.linear_model.LarsCV": "doc",
    "sklearn.preprocessing.scale": "doc",
    "sklearn.base.ClassifierMixin": "doc",
    "sklearn.datasets.load_boston": "doc",
    "sklearn.datasets.load_digits": "doc",
    "sklearn.dummy.DummyRegressor": "doc",
    "sklearn.impute.SimpleImputer": "doc",
    "sklearn.kernel_approximation": "doc",
    "sklearn.linear_model.RidgeCV": "doc",
    "sklearn.linear_model.LassoCV": "doc",
    "sklearn.tree.export_graphviz": "doc",
    "sklearn.utils.as_float_array": "doc",
    "sklearn.utils.murmurhash3_32": "doc",
    "sklearn.utils._safe_indexing": "doc",
    "sklearn.base.TransformerMixin": "doc",
    "sklearn.datasets.fetch_openml": "doc",
    "sklearn.datasets.make_circles": "doc",
    "sklearn.decomposition.FastICA": "doc",
    "sklearn.dummy.DummyClassifier": "doc",
    "sklearn.model_selection.KFold": "doc",
    "sklearn.utils.extmath.density": "doc",
    "sklearn.utils.gen_even_slices": "doc",
    "sklearn.datasets.fetch_covtype": "doc",
    "sklearn.datasets.load_diabetes": "doc",
    "sklearn.linear_model.LassoLars": "doc",
    "sklearn.linear_model.enet_path": "doc",
    "sklearn.naive_bayes.GaussianNB": "doc",
    "sklearn.utils.parallel_backend": "doc",
    "sklearn.cluster.MiniBatchKMeans": "doc",
    "sklearn.cross_decomposition.CCA": "doc",
    "sklearn.datasets.fetch_kddcup99": "doc",
    "sklearn.datasets.make_friedman1": "doc",
    "sklearn.datasets.make_friedman2": "doc",
    "sklearn.datasets.make_friedman3": "doc",
    "sklearn.decomposition.KernelPCA": "doc",
    "sklearn.decomposition.SparsePCA": "doc",
    "sklearn.impute.MissingIndicator": "doc",
    "sklearn.linear_model.Perceptron": "doc",
    "sklearn.naive_bayes.BernoulliNB": "doc",
    "sklearn.preprocessing.normalize": "doc",
    "sklearn.tree.ExtraTreeRegressor": "doc",
    "sklearn.utils.assert_all_finite": "doc",
    "sklearn.datasets.fetch_lfw_pairs": "doc",
    "sklearn.datasets.make_biclusters": "doc",
    "sklearn.datasets.make_regression": "doc",
    "sklearn.datasets.make_spd_matrix": "doc",
    "sklearn.datasets.make_swiss_roll": "doc",
    "sklearn.ensemble.VotingRegressor": "doc",
    "sklearn.linear_model.LassoLarsCV": "doc",
    "sklearn.linear_model.LassoLarsIC": "doc",
    "sklearn.manifold.trustworthiness": "doc",
    "sklearn.model_selection.check_cv": "doc",
    "sklearn.naive_bayes.ComplementNB": "doc",
    "sklearn.preprocessing.Normalizer": "doc",
    "sklearn.tree.ExtraTreeClassifier": "doc",
    "sklearn.cluster.cluster_optics_xi": "doc",
    "sklearn.datasets.fetch_lfw_people": "doc",
    "sklearn.datasets.make_hastie_10_2": "doc",
    "sklearn.decomposition.SparseCoder": "doc",
    "sklearn.ensemble.VotingClassifier": "doc",
    "sklearn.linear_model.SGDRegressor": "doc",
    "sklearn.linear_model.ElasticNetCV": "doc",
    "sklearn.model_selection.LeavePOut": "doc",
    "sklearn.naive_bayes.CategoricalNB": "doc",
    "sklearn.utils.extmath.fast_logdet": "doc",
    "sklearn.cluster.SpectralClustering": "doc",
    "sklearn.cross_decomposition.PLSSVD": "doc",
    "sklearn.datasets.make_checkerboard": "doc",
    "sklearn.decomposition.TruncatedSVD": "doc",
    "sklearn.ensemble.AdaBoostRegressor": "doc",
    "sklearn.linear_model.SGDClassifier": "doc",
    "sklearn.linear_model.ARDRegression": "doc",
    "sklearn.linear_model.orthogonal_mp": "doc",
    "sklearn.manifold.SpectralEmbedding": "doc",
    "sklearn.model_selection.GroupKFold": "doc",
    "sklearn.preprocessing.LabelEncoder": "doc",
    "sklearn.preprocessing.MaxAbsScaler": "doc",
    "sklearn.preprocessing.MinMaxScaler": "doc",
    "sklearn.preprocessing.RobustScaler": "doc",
    "sklearn.preprocessing.minmax_scale": "doc",
    "sklearn.preprocessing.robust_scale": "doc",
    "sklearn.tree.DecisionTreeRegressor": "doc",
    "sklearn.cluster.AffinityPropagation": "doc",
    "sklearn.cluster.spectral_clustering": "doc",
    "sklearn.datasets.dump_svmlight_file": "doc",
    "sklearn.datasets.fetch_20newsgroups": "doc",
    "sklearn.decomposition.dict_learning": "doc",
    "sklearn.ensemble.AdaBoostClassifier": "doc",
    "sklearn.linear_model.MultiTaskLasso": "doc",
    "sklearn.linear_model.HuberRegressor": "doc",
    "sklearn.linear_model.GammaRegressor": "doc",
    "sklearn.manifold.spectral_embedding": "doc",
    "sklearn.neural_network.BernoulliRBM": "doc",
    "sklearn.neural_network.MLPRegressor": "doc",
    "sklearn.preprocessing.OneHotEncoder": "doc",
    "sklearn.tree.DecisionTreeClassifier": "doc",
    "sklearn.cluster.SpectralBiclustering": "doc",
    "sklearn.cluster.SpectralCoclustering": "doc",
    "sklearn.cluster.affinity_propagation": "doc",
    "sklearn.cluster.compute_optics_graph": "doc",
    "sklearn.compose.make_column_selector": "doc",
    "sklearn.datasets.load_svmlight_files": "doc",
    "sklearn.datasets.make_classification": "doc",
    "sklearn.decomposition.FactorAnalysis": "doc",
    "sklearn.decomposition.IncrementalPCA": "doc",
    "sklearn.ensemble.ExtraTreesRegressor": "doc",
    "sklearn.gaussian_process.kernels.RBF": "doc",
    "sklearn.gaussian_process.kernels.Sum": "doc",
    "sklearn.linear_model.RidgeClassifier": "doc",
    "sklearn.linear_model.RANSACRegressor": "doc",
    "sklearn.model_selection.ShuffleSplit": "doc",
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.neural_network.MLPClassifier": "doc",
    "sklearn.preprocessing.KernelCenterer": "doc",
    "sklearn.preprocessing.LabelBinarizer": "doc",
    "sklearn.preprocessing.StandardScaler": "doc",
    "sklearn.cluster.cluster_optics_dbscan": "doc",
    "sklearn.datasets.fetch_olivetti_faces": "doc",
    "sklearn.ensemble.ExtraTreesClassifier": "doc",
    "sklearn.ensemble.RandomTreesEmbedding": "doc",
    "sklearn.kernel_approximation.Nystroem": "doc",
    "sklearn.linear_model.LinearRegression": "doc",
    "sklearn.linear_model.MultiTaskLassoCV": "doc",
    "sklearn.linear_model.PoissonRegressor": "doc",
    "sklearn.linear_model.TweedieRegressor": "doc",
    "sklearn.linear_model.ridge_regression": "doc",
    "sklearn.model_selection.RepeatedKFold": "doc",
    "sklearn.model_selection.ParameterGrid": "doc",
    "sklearn.preprocessing.power_transform": "doc",
    "sklearn.utils.extmath.safe_sparse_dot": "doc",
    "sklearn.ensemble.RandomForestRegressor": "doc",
    "sklearn.linear_model.RidgeClassifierCV": "doc",
    "sklearn.linear_model.TheilSenRegressor": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.preprocessing.KBinsDiscretizer": "doc",
    "sklearn.preprocessing.PowerTransformer": "doc",
    "sklearn.semi_supervised.LabelSpreading": "doc",
    "sklearn.ensemble.RandomForestClassifier": "doc",
    "sklearn.gaussian_process.kernels.Kernel": "doc",
    "sklearn.gaussian_process.kernels.Matern": "doc",
    "sklearn.kernel_approximation.RBFSampler": "doc",
    "sklearn.linear_model.LogisticRegression": "doc",
    "sklearn.linear_model.orthogonal_mp_gram": "doc",
    "sklearn.manifold.LocallyLinearEmbedding": "doc",
    "sklearn.model_selection.LeavePGroupsOut": "doc",
    "sklearn.model_selection.PredefinedSplit": "doc",
    "sklearn.model_selection.StratifiedKFold": "doc",
    "sklearn.model_selection.TimeSeriesSplit": "doc",
    "sklearn.model_selection.cross_val_score": "doc",
    "sklearn.preprocessing.add_dummy_feature": "doc",
    "sklearn.utils.register_parallel_backend": "doc",
    "sklearn.decomposition.DictionaryLearning": "doc",
    "sklearn.gaussian_process.kernels.Product": "doc",
    "sklearn.model_selection.train_test_split": "doc",
    "sklearn.model_selection.ParameterSampler": "doc",
    "sklearn.semi_supervised.LabelPropagation": "doc",
    "sklearn.cross_decomposition.PLSRegression": "doc",
    "sklearn.datasets.make_sparse_coded_signal": "doc",
    "sklearn.linear_model.LogisticRegressionCV": "doc",
    "sklearn.manifold.locally_linear_embedding": "doc",
    "sklearn.model_selection.GroupShuffleSplit": "doc",
    "sklearn.model_selection.cross_val_predict": "doc",
    "sklearn.compose.TransformedTargetRegressor": "doc",
    "sklearn.model_selection.RandomizedSearchCV": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_row": "doc",
    "sklearn.gaussian_process.kernels.DotProduct": "doc",
    "sklearn.datasets.fetch_species_distributions": "doc",
    "sklearn.gaussian_process.kernels.WhiteKernel": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_column": "doc",
    "sklearn.kernel_approximation.SkewedChi2Sampler": "doc",
    "sklearn.model_selection.StratifiedShuffleSplit": "doc",
    "sklearn.datasets.make_multilabel_classification": "doc",
    "sklearn.decomposition.LatentDirichletAllocation": "doc",
    "sklearn.gaussian_process.kernels.CompoundKernel": "doc",
    "sklearn.gaussian_process.kernels.ConstantKernel": "doc",
    "sklearn.gaussian_process.kernels.ExpSineSquared": "doc",
    "sklearn.gaussian_process.kernels.Exponentiation": "doc",
    "sklearn.gaussian_process.kernels.Hyperparameter": "doc",
    "sklearn.linear_model.PassiveAggressiveRegressor": "doc",
    "sklearn.utils.class_weight.compute_class_weight": "doc",
    "sklearn.kernel_approximation.AdditiveChi2Sampler": "doc",
    "sklearn.linear_model.PassiveAggressiveClassifier": "doc",
    "sklearn.utils.class_weight.compute_sample_weight": "doc",
    "sklearn.gaussian_process.GaussianProcessRegressor": "doc",
    "sklearn.gaussian_process.GaussianProcessClassifier": "doc",
    "sklearn.gaussian_process.kernels.RationalQuadratic": "doc",
    "sklearn.utils.metaestimators.if_delegate_has_method": "doc",
    "sklearn.utils.graph_shortest_path.graph_shortest_path": "doc",
    "sklearn.utils.graph.single_source_shortest_path_length": "doc",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2": "doc"
  },
  "tensorflow.placeholder": {
    "tensorflow.compat.v1.placeholder": "doc",
    "tensorflow.compat.v1.ragged.placeholder": "doc",
    "tensorflow.compat.v1.sparse.placeholder": "doc",
    "tensorflow.raw_ops.Placeholder": "doc",
    "tensorflow.raw_ops.PlaceholderV2": "doc",
    "tensorflow.compat.v1.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.app.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.sparse_placeholder": "doc",
    "tensorflow.raw_ops.SparseReorder": "doc",
    "tensorflow.compat.v1.placeholder_with_default": "doc",
    "tensorflow.sparse.reorder": "doc",
    "tensorflow.keras.utils.plot_model": "doc",
    "tensorflow.compat.v1.sparse.reorder": "doc",
    "tensorflow.keras.callbacks.BaseLogger": "doc",
    "tensorflow.compat.v1.saved_model.loader": "doc",
    "tensorflow.raw_ops.PlaceholderWithDefault": "doc",
    "tensorflow.compat.v1.keras.utils.plot_model": "doc",
    "tensorflow.compat.v1.saved_model.loader.load": "doc",
    "tensorflow.compat.v1.keras.callbacks.BaseLogger": "doc",
    "tensorflow.compat.v1.saved_model.loader.maybe_saved_model_directory": "doc",
    "tensorflow.nn.space_to_depth": "doc",
    "tensorflow.compat.v1.space_to_depth": "doc",
    "tensorflow.compat.v1.sparse_reorder": "doc",
    "tensorflow.compat.v1.nn.space_to_depth": "doc",
    "tensorflow.compat.v1.resource_loader": "doc",
    "tensorflow.compat.v1.resource_loader.load_resource": "doc",
    "tensorflow.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.compat.v1.resource_loader.get_data_files_path": "doc",
    "tensorflow.compat.v1.resource_loader.readahead_file_path": "doc",
    "tensorflow.compat.v1.resource_loader.get_path_to_datafile": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.compat.v1.resource_loader.get_root_dir_with_all_resources": "doc",
    "tensorflow.raw_ops.InplaceUpdate": "doc",
    "tensorflow.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.distribute.cluster_resolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver": "doc",
    "tensorflow.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.foldr": "doc",
    "tensorflow.gather": "doc",
    "tensorflow.profiler": "doc",
    "tensorflow.linalg.logdet": "doc",
    "tensorflow.strings.lower": "doc",
    "tensorflow.linalg.slogdet": "doc",
    "tensorflow.raw_ops.Gather": "doc",
    "tensorflow.linalg.lu_solve": "doc",
    "tensorflow.compat.v1.foldr": "doc",
    "tensorflow.summary.trace_on": "doc",
    "tensorflow.compat.v1.gather": "doc",
    "tensorflow.autograph.to_code": "doc",
    "tensorflow.summary.trace_off": "doc",
    "tensorflow.raw_ops.InplaceAdd": "doc",
    "tensorflow.raw_ops.StackClose": "doc",
    "tensorflow.raw_ops.StageClear": "doc",
    "tensorflow.compat.v1.profiler": "doc",
    "tensorflow.profiler.experimental": "doc",
    "tensorflow.keras.models.load_model": "doc",
    "tensorflow.keras.models.save_model": "doc",
    "tensorflow.compat.v1.linalg.logdet": "doc",
    "tensorflow.compat.v1.strings.lower": "doc",
    "tensorflow.experimental.numpy.power": "doc",
    "tensorflow.keras.models.clone_model": "doc",
    "tensorflow.compat.v1.linalg.slogdet": "doc",
    "tensorflow.compat.v1.train.Scaffold": "doc",
    "tensorflow.experimental.numpy.vander": "doc",
    "tensorflow.compat.v1.linalg.lu_solve": "doc",
    "tensorflow.compat.v1.profiler.advise": "doc",
    "tensorflow.profiler.experimental.stop": "doc",
    "tensorflow.compat.v1.flags.FlagValues": "doc",
    "tensorflow.compat.v1.profiler.profile": "doc",
    "tensorflow.experimental.numpy.allclose": "doc",
    "tensorflow.experimental.numpy.unicode_": "doc",
    "tensorflow.profiler.experimental.Trace": "doc",
    "tensorflow.profiler.experimental.start": "doc",
    "tensorflow.compat.v1.autograph.to_code": "doc",
    "tensorflow.compat.v1.profiler.Profiler": "doc",
    "tensorflow.profiler.experimental.client": "doc",
    "tensorflow.profiler.experimental.server": "doc",
    "tensorflow.profiler.experimental.Profile": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto": "doc",
    "tensorflow.compat.v1.saved_model.Builder": "doc",
    "tensorflow.compat.v1.saved_model.builder": "doc",
    "tensorflow.experimental.numpy.float_power": "doc",
    "tensorflow.compat.v1.app.flags.FlagValues": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto": "doc",
    "tensorflow.compat.v1.profiler.write_op_log": "doc",
    "tensorflow.compat.v1.keras.models.load_model": "doc",
    "tensorflow.compat.v1.keras.models.save_model": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto": "doc",
    "tensorflow.profiler.experimental.client.trace": "doc",
    "tensorflow.profiler.experimental.server.start": "doc",
    "tensorflow.compat.v1.keras.models.clone_model": "doc",
    "tensorflow.profiler.experimental.client.monitor": "doc",
    "tensorflow.profiler.experimental.ProfilerOptions": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.Checker": "doc",
    "tensorflow.compat.v1.profiler.MultiGraphNodeProto": "doc",
    "tensorflow.compat.v1.profiler.ProfileOptionBuilder": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.CheckersEntry": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto.IdToStringEntry": "doc",
    "tensorflow.compat.v1.saved_model.builder.SavedModelBuilder": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto.InputShapesEntry": "doc",
    "tensorflow.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.distribute.ReplicaContext": "doc",
    "tensorflow.compat.v1.distribute.ReplicaContext": "doc",
    "tensorflow.searchsorted": "doc",
    "tensorflow.raw_ops.SpaceToBatch": "doc",
    "tensorflow.raw_ops.SpaceToDepth": "doc",
    "tensorflow.raw_ops.StackCloseV2": "doc",
    "tensorflow.raw_ops.UnravelIndex": "doc",
    "tensorflow.summary.trace_export": "doc",
    "tensorflow.ragged.map_flat_values": "doc",
    "tensorflow.compat.v1.searchsorted": "doc",
    "tensorflow.raw_ops.WholeFileReader": "doc",
    "tensorflow.compat.v1.WholeFileReader": "doc",
    "tensorflow.compat.v1.sparse_to_dense": "doc",
    "tensorflow.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.compat.v1.ragged.map_flat_values": "doc",
    "tensorflow.data.experimental.prefetch_to_device": "doc",
    "tensorflow.distribute.experimental.ValueContext": "doc",
    "tensorflow.compat.v1.train.replica_device_setter": "doc",
    "tensorflow.compat.v1.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.compat.v1.data.experimental.prefetch_to_device": "doc",
    "tensorflow.raw_ops.CollectiveGather": "doc",
    "tensorflow.compat.v1.train.polynomial_decay": "doc",
    "tensorflow.keras.mixed_precision.experimental.get_layer_policy": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.unravel_index": "doc",
    "tensorflow.raw_ops.BatchCholesky": "doc",
    "tensorflow.estimator.FinalExporter": "doc",
    "tensorflow.compat.v1.unravel_index": "doc",
    "tensorflow.compat.v1.estimator.FinalExporter": "doc",
    "tensorflow.keras.mixed_precision.global_policy": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DeviceWrapper": "doc",
    "tensorflow.keras.mixed_precision.experimental.global_policy": "doc",
    "tensorflow.test.create_local_cluster": "doc",
    "tensorflow.raw_ops.CTCBeamSearchDecoder": "doc",
    "tensorflow.raw_ops.Conv2DBackpropFilter": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilter": "doc",
    "tensorflow.compat.v1.test.create_local_cluster": "doc",
    "tensorflow.compat.v1.train.slice_input_producer": "doc",
    "tensorflow.compat.v1.metrics.recall_at_thresholds": "doc",
    "tensorflow.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.compat.v1.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.losses.kullback_leibler_divergence": "doc",
    "tensorflow.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.losses.MeanAbsoluteError": "doc",
    "tensorflow.metrics.MeanAbsoluteError": "doc",
    "tensorflow.raw_ops.BatchCholeskyGrad": "doc",
    "tensorflow.raw_ops.DatasetToTFRecord": "doc",
    "tensorflow.raw_ops.WholeFileReaderV2": "doc",
    "tensorflow.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.random.experimental.stateless_fold_in": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_fold_in": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropFilter": "doc",
    "tensorflow.feature_column": "doc",
    "tensorflow.space_to_batch": "doc",
    "tensorflow.io.TFRecordWriter": "doc",
    "tensorflow.nn.space_to_batch": "doc",
    "tensorflow.errors.CancelledError": "doc",
    "tensorflow.metrics.FalsePositives": "doc",
    "tensorflow.raw_ops.ResizeBilinear": "doc",
    "tensorflow.raw_ops.ResourceGather": "doc",
    "tensorflow.raw_ops.SpaceToBatchND": "doc",
    "tensorflow.raw_ops.TFRecordReader": "doc",
    "tensorflow.raw_ops.TextLineReader": "doc",
    "tensorflow.estimator.LatestExporter": "doc",
    "tensorflow.compat.v1.TFRecordReader": "doc",
    "tensorflow.compat.v1.TextLineReader": "doc",
    "tensorflow.compat.v1.feature_column": "doc",
    "tensorflow.compat.v1.no_regularizer": "doc",
    "tensorflow.compat.v1.space_to_batch": "doc",
    "tensorflow.math.reduce_euclidean_norm": "doc",
    "tensorflow.compat.v1.io.TFRecordWriter": "doc",
    "tensorflow.compat.v1.nn.space_to_batch": "doc",
    "tensorflow.keras.metrics.FalsePositives": "doc",
    "tensorflow.feature_column.crossed_column": "doc",
    "tensorflow.feature_column.numeric_column": "doc",
    "tensorflow.compat.v1.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.train.input_producer": "doc",
    "tensorflow.feature_column.embedding_column": "doc",
    "tensorflow.feature_column.indicator_column": "doc",
    "tensorflow.compat.v1.errors.CancelledError": "doc",
    "tensorflow.data.experimental.TFRecordWriter": "doc",
    "tensorflow.feature_column.bucketized_column": "doc",
    "tensorflow.feature_column.shared_embeddings": "doc",
    "tensorflow.compat.v1.app.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.estimator.LatestExporter": "doc",
    "tensorflow.compat.v1.python_io.TFRecordWriter": "doc",
    "tensorflow.compat.v1.feature_column.input_layer": "doc",
    "tensorflow.compat.v1.math.reduce_euclidean_norm": "doc",
    "tensorflow.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.compat.v1.feature_column.linear_model": "doc",
    "tensorflow.feature_column.make_parse_example_spec": "doc",
    "tensorflow.feature_column.sequence_numeric_column": "doc",
    "tensorflow.compat.v1.keras.metrics.FalsePositives": "doc",
    "tensorflow.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.compat.v1.feature_column.crossed_column": "doc",
    "tensorflow.compat.v1.feature_column.numeric_column": "doc",
    "tensorflow.data.experimental.service.DispatchServer": "doc",
    "tensorflow.compat.v1.feature_column.embedding_column": "doc",
    "tensorflow.compat.v1.feature_column.indicator_column": "doc",
    "tensorflow.feature_column.weighted_categorical_column": "doc",
    "tensorflow.compat.v1.data.experimental.TFRecordWriter": "doc",
    "tensorflow.compat.v1.feature_column.bucketized_column": "doc",
    "tensorflow.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.compat.v1.feature_column.make_parse_example_spec": "doc",
    "tensorflow.compat.v1.feature_column.sequence_numeric_column": "doc",
    "tensorflow.compat.v1.feature_column.shared_embedding_columns": "doc",
    "tensorflow.compat.v1.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.feature_column.weighted_categorical_column": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.errors.UnimplementedError": "doc",
    "tensorflow.raw_ops.CollectiveGatherV2": "doc",
    "tensorflow.raw_ops.SparseApplyAdagrad": "doc",
    "tensorflow.summary.create_file_writer": "doc",
    "tensorflow.summary.create_noop_writer": "doc",
    "tensorflow.compat.v1.io.tf_record_iterator": "doc",
    "tensorflow.compat.v1.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.train.create_global_step": "doc",
    "tensorflow.compat.v1.errors.UnimplementedError": "doc",
    "tensorflow.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.compat.v1.app.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.python_io.tf_record_iterator": "doc",
    "tensorflow.compat.v1.MetaGraphDef.CollectionDefEntry": "doc",
    "tensorflow.compat.v1.keras.experimental.export_saved_model": "doc",
    "tensorflow.compat.v1.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.distribute.experimental.coordinator.ClusterCoordinator": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.pad": "doc",
    "tensorflow.acos": "doc",
    "tensorflow.cond": "doc",
    "tensorflow.acosh": "doc",
    "tensorflow.floor": "doc",
    "tensorflow.foldl": "doc",
    "tensorflow.slice": "doc",
    "tensorflow.losses": "doc",
    "tensorflow.complex": "doc",
    "tensorflow.greater": "doc",
    "tensorflow.nn.pool": "doc",
    "tensorflow.realdiv": "doc",
    "tensorflow.Variable": "doc",
    "tensorflow.math.acos": "doc",
    "tensorflow.math.ceil": "doc",
    "tensorflow.transpose": "doc",
    "tensorflow.get_logger": "doc",
    "tensorflow.logical_or": "doc",
    "tensorflow.losses.KLD": "doc",
    "tensorflow.losses.MAE": "doc",
    "tensorflow.losses.MSE": "doc",
    "tensorflow.losses.get": "doc",
    "tensorflow.losses.kld": "doc",
    "tensorflow.losses.mae": "doc",
    "tensorflow.losses.mse": "doc",
    "tensorflow.math.acosh": "doc",
    "tensorflow.math.angle": "doc",
    "tensorflow.math.floor": "doc",
    "tensorflow.keras.Model": "doc",
    "tensorflow.losses.Loss": "doc",
    "tensorflow.losses.MAPE": "doc",
    "tensorflow.losses.MSLE": "doc",
    "tensorflow.losses.mape": "doc",
    "tensorflow.losses.msle": "doc",
    "tensorflow.nn.nce_loss": "doc",
    "tensorflow.saved_model": "doc",
    "tensorflow.io.read_file": "doc",
    "tensorflow.keras.layers": "doc",
    "tensorflow.keras.losses": "doc",
    "tensorflow.linalg.solve": "doc",
    "tensorflow.linalg.trace": "doc",
    "tensorflow.losses.Hinge": "doc",
    "tensorflow.losses.Huber": "doc",
    "tensorflow.losses.hinge": "doc",
    "tensorflow.losses.huber": "doc",
    "tensorflow.math.greater": "doc",
    "tensorflow.nest.flatten": "doc",
    "tensorflow.sparse.slice": "doc",
    "tensorflow.keras.backend": "doc",
    "tensorflow.math.floordiv": "doc",
    "tensorflow.math.floormod": "doc",
    "tensorflow.raw_ops.Floor": "doc",
    "tensorflow.raw_ops.Slice": "doc",
    "tensorflow.raw_ops.While": "doc",
    "tensorflow.train.Example": "doc",
    "tensorflow.compat.v1.pad": "doc",
    "tensorflow.dtypes.complex": "doc",
    "tensorflow.losses.LogCosh": "doc",
    "tensorflow.losses.Poisson": "doc",
    "tensorflow.losses.logcosh": "doc",
    "tensorflow.losses.poisson": "doc",
    "tensorflow.summary.scalar": "doc",
    "tensorflow.compat.v1.acos": "doc",
    "tensorflow.compat.v1.ceil": "doc",
    "tensorflow.compat.v1.cond": "doc",
    "tensorflow.autograph.trace": "doc",
    "tensorflow.image.transpose": "doc",
    "tensorflow.io.gfile.remove": "doc",
    "tensorflow.linalg.cholesky": "doc",
    "tensorflow.losses.log_cosh": "doc",
    "tensorflow.math.logical_or": "doc",
    "tensorflow.raw_ops.Barrier": "doc",
    "tensorflow.raw_ops.Greater": "doc",
    "tensorflow.raw_ops.MaxPool": "doc",
    "tensorflow.compat.v1.acosh": "doc",
    "tensorflow.compat.v1.angle": "doc",
    "tensorflow.compat.v1.floor": "doc",
    "tensorflow.compat.v1.foldl": "doc",
    "tensorflow.compat.v1.slice": "doc",
    "tensorflow.compat.v1.trace": "doc",
    "tensorflow.io.gfile.listdir": "doc",
    "tensorflow.keras.layers.Add": "doc",
    "tensorflow.keras.layers.Dot": "doc",
    "tensorflow.keras.layers.ELU": "doc",
    "tensorflow.keras.layers.GRU": "doc",
    "tensorflow.keras.layers.RNN": "doc",
    "tensorflow.keras.layers.add": "doc",
    "tensorflow.keras.layers.dot": "doc",
    "tensorflow.keras.losses.KLD": "doc",
    "tensorflow.keras.losses.MAE": "doc",
    "tensorflow.keras.losses.MSE": "doc",
    "tensorflow.keras.losses.get": "doc",
    "tensorflow.keras.losses.kld": "doc",
    "tensorflow.keras.losses.mae": "doc",
    "tensorflow.keras.losses.mse": "doc",
    "tensorflow.losses.Reduction": "doc",
    "tensorflow.losses.serialize": "doc",
    "tensorflow.raw_ops.BatchSvd": "doc",
    "tensorflow.raw_ops.FloorMod": "doc",
    "tensorflow.raw_ops.GatherNd": "doc",
    "tensorflow.raw_ops.MapClear": "doc",
    "tensorflow.raw_ops.ReadFile": "doc",
    "tensorflow.raw_ops.RefEnter": "doc",
    "tensorflow.raw_ops.Snapshot": "doc",
    "tensorflow.raw_ops.StackPop": "doc",
    "tensorflow.raw_ops.Variable": "doc",
    "tensorflow.saved_model.load": "doc",
    "tensorflow.saved_model.save": "doc",
    "tensorflow.sparse.transpose": "doc",
    "tensorflow.compat.v1.layers": "doc",
    "tensorflow.compat.v1.losses": "doc",
    "tensorflow.distribute.Server": "doc",
    "tensorflow.io.gfile.makedirs": "doc",
    "tensorflow.keras.backend.rnn": "doc",
    "tensorflow.keras.layers.LSTM": "doc",
    "tensorflow.keras.layers.ReLU": "doc",
    "tensorflow.keras.losses.Loss": "doc",
    "tensorflow.keras.losses.MAPE": "doc",
    "tensorflow.keras.losses.MSLE": "doc",
    "tensorflow.keras.losses.mape": "doc",
    "tensorflow.keras.losses.msle": "doc",
    "tensorflow.raw_ops.FakeQueue": "doc",
    "tensorflow.raw_ops.MaxPool3D": "doc",
    "tensorflow.raw_ops.MaxPoolV2": "doc",
    "tensorflow.raw_ops.StagePeek": "doc",
    "tensorflow.raw_ops.StageSize": "doc",
    "tensorflow.raw_ops.Transpose": "doc",
    "tensorflow.raw_ops.WriteFile": "doc",
    "tensorflow.saved_model.Asset": "doc",
    "tensorflow.sparse.map_values": "doc",
    "tensorflow.compat.v1.complex": "doc",
    "tensorflow.compat.v1.greater": "doc",
    "tensorflow.compat.v1.nn.pool": "doc",
    "tensorflow.compat.v1.realdiv": "doc",
    "tensorflow.compat.path_to_str": "doc",
    "tensorflow.estimator.Exporter": "doc",
    "tensorflow.keras.layers.Dense": "doc",
    "tensorflow.keras.layers.Input": "doc",
    "tensorflow.keras.layers.Layer": "doc",
    "tensorflow.keras.layers.PReLU": "doc",
    "tensorflow.keras.losses.Hinge": "doc",
    "tensorflow.keras.losses.Huber": "doc",
    "tensorflow.keras.losses.hinge": "doc",
    "tensorflow.keras.losses.huber": "doc",
    "tensorflow.keras.models.Model": "doc",
    "tensorflow.losses.deserialize": "doc",
    "tensorflow.raw_ops.InplaceSub": "doc",
    "tensorflow.raw_ops.LMDBReader": "doc",
    "tensorflow.raw_ops.QueueClose": "doc",
    "tensorflow.raw_ops.SaveSlices": "doc",
    "tensorflow.raw_ops.StackPopV2": "doc",
    "tensorflow.compat.v1.GraphDef": "doc",
    "tensorflow.compat.v1.Variable": "doc",
    "tensorflow.compat.v1.cholesky": "doc",
    "tensorflow.compat.v1.floordiv": "doc",
    "tensorflow.compat.v1.floormod": "doc",
    "tensorflow.compat.v1.op_scope": "doc",
    "tensorflow.compat.v1.tpu.core": "doc",
    "tensorflow.keras.layers.Conv1D": "doc",
    "tensorflow.keras.layers.Conv2D": "doc",
    "tensorflow.keras.layers.Conv3D": "doc",
    "tensorflow.keras.layers.Lambda": "doc",
    "tensorflow.losses.KLDivergence": "doc",
    "tensorflow.losses.SquaredHinge": "doc",
    "tensorflow.optimizers.Adadelta": "doc",
    "tensorflow.raw_ops.DeviceIndex": "doc",
    "tensorflow.raw_ops.ReaderReset": "doc",
    "tensorflow.compat.v1.math.acos": "doc",
    "tensorflow.compat.v1.math.ceil": "doc",
    "tensorflow.compat.v1.python_io": "doc",
    "tensorflow.compat.v1.read_file": "doc",
    "tensorflow.compat.v1.transpose": "doc",
    "tensorflow.keras.backend.floatx": "doc",
    "tensorflow.keras.layers.Average": "doc",
    "tensorflow.keras.layers.Dropout": "doc",
    "tensorflow.keras.layers.Flatten": "doc",
    "tensorflow.keras.layers.GRUCell": "doc",
    "tensorflow.keras.layers.Masking": "doc",
    "tensorflow.keras.layers.Maximum": "doc",
    "tensorflow.keras.layers.Minimum": "doc",
    "tensorflow.keras.layers.Permute": "doc",
    "tensorflow.keras.layers.Reshape": "doc",
    "tensorflow.keras.layers.Softmax": "doc",
    "tensorflow.keras.layers.Wrapper": "doc",
    "tensorflow.keras.layers.average": "doc",
    "tensorflow.keras.layers.maximum": "doc",
    "tensorflow.keras.layers.minimum": "doc",
    "tensorflow.keras.losses.LogCosh": "doc",
    "tensorflow.keras.losses.Poisson": "doc",
    "tensorflow.keras.losses.logcosh": "doc",
    "tensorflow.keras.losses.poisson": "doc",
    "tensorflow.losses.kl_divergence": "doc",
    "tensorflow.losses.squared_hinge": "doc",
    "tensorflow.optimizers.schedules": "doc",
    "tensorflow.compat.v1.LMDBReader": "doc",
    "tensorflow.compat.v1.ReaderBase": "doc",
    "tensorflow.compat.v1.get_logger": "doc",
    "tensorflow.compat.v1.logical_or": "doc",
    "tensorflow.compat.v1.math.acosh": "doc",
    "tensorflow.compat.v1.math.angle": "doc",
    "tensorflow.compat.v1.math.floor": "doc",
    "tensorflow.keras.backend.epsilon": "doc",
    "tensorflow.keras.backend.get_uid": "doc",
    "tensorflow.keras.layers.LSTMCell": "doc",
    "tensorflow.keras.layers.Multiply": "doc",
    "tensorflow.keras.layers.Subtract": "doc",
    "tensorflow.keras.layers.multiply": "doc",
    "tensorflow.keras.layers.subtract": "doc",
    "tensorflow.keras.losses.log_cosh": "doc",
    "tensorflow.compat.v1.keras.Model": "doc",
    "tensorflow.compat.v1.nn.nce_loss": "doc",
    "tensorflow.compat.v1.saved_model": "doc",
    "tensorflow.compat.v1.train.Saver": "doc",
    "tensorflow.Variable.SaveSliceInfo": "doc",
    "tensorflow.data.experimental.load": "doc",
    "tensorflow.experimental.numpy.pad": "doc",
    "tensorflow.keras.layers.Attention": "doc",
    "tensorflow.keras.layers.AvgPool1D": "doc",
    "tensorflow.keras.layers.AvgPool2D": "doc",
    "tensorflow.keras.layers.AvgPool3D": "doc",
    "tensorflow.keras.layers.Embedding": "doc",
    "tensorflow.keras.layers.InputSpec": "doc",
    "tensorflow.keras.layers.LeakyReLU": "doc",
    "tensorflow.keras.layers.MaxPool1D": "doc",
    "tensorflow.keras.layers.MaxPool2D": "doc",
    "tensorflow.keras.layers.MaxPool3D": "doc",
    "tensorflow.keras.layers.SimpleRNN": "doc",
    "tensorflow.keras.layers.serialize": "doc",
    "tensorflow.keras.losses.Reduction": "doc",
    "tensorflow.keras.losses.serialize": "doc",
    "tensorflow.compat.v1.gfile.Remove": "doc",
    "tensorflow.compat.v1.io.read_file": "doc",
    "tensorflow.compat.v1.keras.layers": "doc",
    "tensorflow.compat.v1.keras.losses": "doc",
    "tensorflow.compat.v1.layers.Dense": "doc",
    "tensorflow.compat.v1.layers.Layer": "doc",
    "tensorflow.compat.v1.layers.dense": "doc",
    "tensorflow.compat.v1.linalg.solve": "doc",
    "tensorflow.compat.v1.linalg.trace": "doc",
    "tensorflow.compat.v1.math.greater": "doc",
    "tensorflow.compat.v1.nest.flatten": "doc",
    "tensorflow.compat.v1.sparse.slice": "doc",
    "tensorflow.compat.v1.train.Server": "doc",
    "tensorflow.experimental.numpy.ceil": "doc",
    "tensorflow.experimental.numpy.prod": "doc",
    "tensorflow.keras.layers.Activation": "doc",
    "tensorflow.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.keras.layers.Cropping1D": "doc",
    "tensorflow.keras.layers.Cropping2D": "doc",
    "tensorflow.keras.layers.Cropping3D": "doc",
    "tensorflow.keras.layers.InputLayer": "doc",
    "tensorflow.losses.CategoricalHinge": "doc",
    "tensorflow.losses.CosineSimilarity": "doc",
    "tensorflow.losses.MeanSquaredError": "doc",
    "tensorflow.saved_model.LoadOptions": "doc",
    "tensorflow.saved_model.SaveOptions": "doc",
    "tensorflow.compat.v1.Summary.Value": "doc",
    "tensorflow.compat.v1.keras.backend": "doc",
    "tensorflow.compat.v1.layers.Conv1D": "doc",
    "tensorflow.compat.v1.layers.Conv2D": "doc",
    "tensorflow.compat.v1.layers.Conv3D": "doc",
    "tensorflow.compat.v1.layers.conv1d": "doc",
    "tensorflow.compat.v1.layers.conv2d": "doc",
    "tensorflow.compat.v1.layers.conv3d": "doc",
    "tensorflow.compat.v1.math.floordiv": "doc",
    "tensorflow.compat.v1.math.floormod": "doc",
    "tensorflow.compat.v1.nn.relu_layer": "doc",
    "tensorflow.compat.v1.train.Example": "doc",
    "tensorflow.experimental.numpy.angle": "doc",
    "tensorflow.experimental.numpy.floor": "doc",
    "tensorflow.experimental.numpy.outer": "doc",
    "tensorflow.experimental.numpy.ravel": "doc",
    "tensorflow.experimental.numpy.trace": "doc",
    "tensorflow.keras.activations.linear": "doc",
    "tensorflow.keras.backend.reset_uids": "doc",
    "tensorflow.keras.backend.set_floatx": "doc",
    "tensorflow.keras.layers.Concatenate": "doc",
    "tensorflow.keras.layers.concatenate": "doc",
    "tensorflow.keras.layers.deserialize": "doc",
    "tensorflow.keras.losses.deserialize": "doc",
    "tensorflow.losses.categorical_hinge": "doc",
    "tensorflow.losses.cosine_similarity": "doc",
    "tensorflow.saved_model.experimental": "doc",
    "tensorflow.compat.v1.dtypes.complex": "doc",
    "tensorflow.compat.v1.layers.Dropout": "doc",
    "tensorflow.compat.v1.layers.Flatten": "doc",
    "tensorflow.compat.v1.layers.dropout": "doc",
    "tensorflow.compat.v1.layers.flatten": "doc",
    "tensorflow.compat.v1.summary.scalar": "doc",
    "tensorflow.compat.v1.train.SaverDef": "doc",
    "tensorflow.data.experimental.Reducer": "doc",
    "tensorflow.experimental.numpy.append": "doc",
    "tensorflow.experimental.numpy.fliplr": "doc",
    "tensorflow.keras.backend.set_epsilon": "doc",
    "tensorflow.keras.callbacks.CSVLogger": "doc",
    "tensorflow.keras.layers.AlphaDropout": "doc",
    "tensorflow.keras.layers.MaxPooling1D": "doc",
    "tensorflow.keras.layers.MaxPooling2D": "doc",
    "tensorflow.keras.layers.MaxPooling3D": "doc",
    "tensorflow.keras.layers.RepeatVector": "doc",
    "tensorflow.keras.layers.UpSampling1D": "doc",
    "tensorflow.keras.layers.UpSampling2D": "doc",
    "tensorflow.keras.layers.UpSampling3D": "doc",
    "tensorflow.keras.layers.experimental": "doc",
    "tensorflow.keras.losses.KLDivergence": "doc",
    "tensorflow.keras.losses.SquaredHinge": "doc",
    "tensorflow.keras.optimizers.Adadelta": "doc",
    "tensorflow.losses.BinaryCrossentropy": "doc",
    "tensorflow.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.autograph.trace": "doc",
    "tensorflow.compat.v1.image.transpose": "doc",
    "tensorflow.compat.v1.io.gfile.remove": "doc",
    "tensorflow.compat.v1.linalg.cholesky": "doc",
    "tensorflow.compat.v1.losses.add_loss": "doc",
    "tensorflow.compat.v1.losses.log_loss": "doc",
    "tensorflow.compat.v1.math.logical_or": "doc",
    "tensorflow.data.experimental.snapshot": "doc",
    "tensorflow.experimental.numpy.average": "doc",
    "tensorflow.experimental.numpy.greater": "doc",
    "tensorflow.experimental.numpy.isclose": "doc",
    "tensorflow.experimental.numpy.nanprod": "doc",
    "tensorflow.experimental.numpy.rad2deg": "doc",
    "tensorflow.keras.layers.Bidirectional": "doc",
    "tensorflow.keras.layers.Convolution1D": "doc",
    "tensorflow.keras.layers.Convolution2D": "doc",
    "tensorflow.keras.layers.Convolution3D": "doc",
    "tensorflow.keras.layers.DenseFeatures": "doc",
    "tensorflow.keras.layers.GaussianNoise": "doc",
    "tensorflow.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.keras.losses.kl_divergence": "doc",
    "tensorflow.keras.losses.squared_hinge": "doc",
    "tensorflow.keras.optimizers.schedules": "doc",
    "tensorflow.losses.binary_crossentropy": "doc",
    "tensorflow.losses.mean_absolute_error": "doc",
    "tensorflow.compat.v1.io.gfile.listdir": "doc",
    "tensorflow.compat.v1.keras.layers.Add": "doc",
    "tensorflow.compat.v1.keras.layers.Dot": "doc",
    "tensorflow.compat.v1.keras.layers.ELU": "doc",
    "tensorflow.compat.v1.keras.layers.GRU": "doc",
    "tensorflow.compat.v1.keras.layers.RNN": "doc",
    "tensorflow.compat.v1.keras.layers.add": "doc",
    "tensorflow.compat.v1.keras.layers.dot": "doc",
    "tensorflow.compat.v1.keras.losses.KLD": "doc",
    "tensorflow.compat.v1.keras.losses.MAE": "doc",
    "tensorflow.compat.v1.keras.losses.MSE": "doc",
    "tensorflow.compat.v1.keras.losses.get": "doc",
    "tensorflow.compat.v1.keras.losses.kld": "doc",
    "tensorflow.compat.v1.keras.losses.mae": "doc",
    "tensorflow.compat.v1.keras.losses.mse": "doc",
    "tensorflow.compat.v1.layers.InputSpec": "doc",
    "tensorflow.compat.v1.linalg.transpose": "doc",
    "tensorflow.compat.v1.losses.Reduction": "doc",
    "tensorflow.compat.v1.saved_model.load": "doc",
    "tensorflow.compat.v1.saved_model.save": "doc",
    "tensorflow.compat.v1.sparse.transpose": "doc",
    "tensorflow.experimental.numpy.absolute": "doc",
    "tensorflow.experimental.numpy.isscalar": "doc",
    "tensorflow.keras.backend.clear_session": "doc",
    "tensorflow.compat.v1.distribute.Server": "doc",
    "tensorflow.compat.v1.flags.FloatParser": "doc",
    "tensorflow.compat.v1.io.gfile.makedirs": "doc",
    "tensorflow.compat.v1.keras.backend.rnn": "doc",
    "tensorflow.compat.v1.keras.layers.LSTM": "doc",
    "tensorflow.compat.v1.keras.layers.ReLU": "doc",
    "tensorflow.compat.v1.keras.losses.Loss": "doc",
    "tensorflow.compat.v1.keras.losses.MAPE": "doc",
    "tensorflow.compat.v1.keras.losses.MSLE": "doc",
    "tensorflow.compat.v1.keras.losses.mape": "doc",
    "tensorflow.compat.v1.keras.losses.msle": "doc",
    "tensorflow.compat.v1.losses.get_losses": "doc",
    "tensorflow.compat.v1.losses.hinge_loss": "doc",
    "tensorflow.compat.v1.losses.huber_loss": "doc",
    "tensorflow.compat.v1.saved_model.Asset": "doc",
    "tensorflow.compat.v1.saved_model.utils": "doc",
    "tensorflow.compat.v1.train.QueueRunner": "doc",
    "tensorflow.data.experimental.take_while": "doc",
    "tensorflow.experimental.numpy.heaviside": "doc",
    "tensorflow.experimental.numpy.iscomplex": "doc",
    "tensorflow.experimental.numpy.remainder": "doc",
    "tensorflow.experimental.numpy.transpose": "doc",
    "tensorflow.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.keras.layers.GaussianDropout": "doc",
    "tensorflow.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.keras.layers.SeparableConv1D": "doc",
    "tensorflow.keras.layers.SeparableConv2D": "doc",
    "tensorflow.keras.layers.StackedRNNCells": "doc",
    "tensorflow.keras.layers.TimeDistributed": "doc",
    "tensorflow.compat.v1.compat.path_to_str": "doc",
    "tensorflow.compat.v1.estimator.Exporter": "doc",
    "tensorflow.compat.v1.keras.layers.Dense": "doc",
    "tensorflow.compat.v1.keras.layers.Input": "doc",
    "tensorflow.compat.v1.keras.layers.Layer": "doc",
    "tensorflow.compat.v1.keras.layers.PReLU": "doc",
    "tensorflow.compat.v1.keras.losses.Hinge": "doc",
    "tensorflow.compat.v1.keras.losses.Huber": "doc",
    "tensorflow.compat.v1.keras.losses.hinge": "doc",
    "tensorflow.compat.v1.keras.models.Model": "doc",
    "tensorflow.compat.v1.summary.FileWriter": "doc",
    "tensorflow.experimental.numpy.logical_or": "doc",
    "tensorflow.keras.backend.is_keras_tensor": "doc",
    "tensorflow.keras.layers.AveragePooling1D": "doc",
    "tensorflow.keras.layers.AveragePooling2D": "doc",
    "tensorflow.keras.layers.AveragePooling3D": "doc",
    "tensorflow.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.keras.losses.CategoricalHinge": "doc",
    "tensorflow.keras.losses.CosineSimilarity": "doc",
    "tensorflow.keras.losses.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3D": "doc",
    "tensorflow.compat.v1.keras.layers.Lambda": "doc",
    "tensorflow.compat.v1.keras.losses.cosine": "doc",
    "tensorflow.compat.v1.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.layers.experimental": "doc",
    "tensorflow.compat.v1.saved_model.load_v2": "doc",
    "tensorflow.compat.v1.saved_model.main_op": "doc",
    "tensorflow.keras.layers.AdditiveAttention": "doc",
    "tensorflow.keras.losses.categorical_hinge": "doc",
    "tensorflow.keras.losses.cosine_similarity": "doc",
    "tensorflow.losses.CategoricalCrossentropy": "doc",
    "tensorflow.optimizers.schedules.serialize": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilterV2": "doc",
    "tensorflow.compat.v1.keras.backend.floatx": "doc",
    "tensorflow.compat.v1.keras.layers.Average": "doc",
    "tensorflow.compat.v1.keras.layers.Dropout": "doc",
    "tensorflow.compat.v1.keras.layers.Flatten": "doc",
    "tensorflow.compat.v1.keras.layers.GRUCell": "doc",
    "tensorflow.compat.v1.keras.layers.Masking": "doc",
    "tensorflow.compat.v1.keras.layers.Maximum": "doc",
    "tensorflow.compat.v1.keras.layers.Minimum": "doc",
    "tensorflow.compat.v1.keras.layers.Permute": "doc",
    "tensorflow.compat.v1.keras.layers.Reshape": "doc",
    "tensorflow.compat.v1.keras.layers.Softmax": "doc",
    "tensorflow.compat.v1.keras.layers.Wrapper": "doc",
    "tensorflow.compat.v1.keras.layers.average": "doc",
    "tensorflow.compat.v1.keras.layers.maximum": "doc",
    "tensorflow.compat.v1.keras.layers.minimum": "doc",
    "tensorflow.compat.v1.keras.losses.LogCosh": "doc",
    "tensorflow.compat.v1.keras.losses.Poisson": "doc",
    "tensorflow.compat.v1.keras.losses.logcosh": "doc",
    "tensorflow.compat.v1.keras.losses.poisson": "doc",
    "tensorflow.compat.v1.layers.max_pooling1d": "doc",
    "tensorflow.compat.v1.layers.max_pooling2d": "doc",
    "tensorflow.compat.v1.layers.max_pooling3d": "doc",
    "tensorflow.experimental.tensorrt.Converter": "doc",
    "tensorflow.keras.backend.image_data_format": "doc",
    "tensorflow.keras.layers.BatchNormalization": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.keras.layers.LayerNormalization": "doc",
    "tensorflow.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.keras.losses.mean_squared_error": "doc",
    "tensorflow.losses.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.app.flags.FloatParser": "doc",
    "tensorflow.compat.v1.distributions.Laplace": "doc",
    "tensorflow.compat.v1.keras.backend.epsilon": "doc",
    "tensorflow.compat.v1.keras.backend.get_uid": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNGRU": "doc",
    "tensorflow.compat.v1.keras.layers.LSTMCell": "doc",
    "tensorflow.compat.v1.keras.layers.Multiply": "doc",
    "tensorflow.compat.v1.keras.layers.Subtract": "doc",
    "tensorflow.compat.v1.keras.layers.multiply": "doc",
    "tensorflow.compat.v1.keras.layers.subtract": "doc",
    "tensorflow.compat.v1.keras.losses.log_cosh": "doc",
    "tensorflow.compat.v1.losses.get_total_loss": "doc",
    "tensorflow.compat.v1.saved_model.constants": "doc",
    "tensorflow.compat.v1.summary.Summary.Value": "doc",
    "tensorflow.keras.losses.binary_crossentropy": "doc",
    "tensorflow.keras.losses.mean_absolute_error": "doc",
    "tensorflow.optimizers.schedules.deserialize": "doc",
    "tensorflow.saved_model.contains_saved_model": "doc",
    "tensorflow.compat.v1.Variable.SaveSliceInfo": "doc",
    "tensorflow.compat.v1.initializers.variables": "doc",
    "tensorflow.compat.v1.keras.layers.Attention": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNLSTM": "doc",
    "tensorflow.compat.v1.keras.layers.Embedding": "doc",
    "tensorflow.compat.v1.keras.layers.InputSpec": "doc",
    "tensorflow.compat.v1.keras.layers.LeakyReLU": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNN": "doc",
    "tensorflow.compat.v1.keras.layers.serialize": "doc",
    "tensorflow.compat.v1.keras.losses.serialize": "doc",
    "tensorflow.compat.v1.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.losses.cosine_distance": "doc",
    "tensorflow.compat.v1.distributions.Dirichlet": "doc",
    "tensorflow.compat.v1.keras.layers.Activation": "doc",
    "tensorflow.compat.v1.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping1D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping2D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping3D": "doc",
    "tensorflow.compat.v1.keras.layers.InputLayer": "doc",
    "tensorflow.compat.v1.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling3D": "doc",
    "tensorflow.compat.v1.layers.conv2d_transpose": "doc",
    "tensorflow.compat.v1.layers.conv3d_transpose": "doc",
    "tensorflow.compat.v1.layers.separable_conv1d": "doc",
    "tensorflow.compat.v1.layers.separable_conv2d": "doc",
    "tensorflow.compat.v1.saved_model.SaveOptions": "doc",
    "tensorflow.compat.v1.saved_model.simple_save": "doc",
    "tensorflow.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.activations.linear": "doc",
    "tensorflow.compat.v1.keras.backend.name_scope": "doc",
    "tensorflow.compat.v1.keras.backend.reset_uids": "doc",
    "tensorflow.compat.v1.keras.backend.set_floatx": "doc",
    "tensorflow.compat.v1.keras.layers.Concatenate": "doc",
    "tensorflow.compat.v1.keras.layers.concatenate": "doc",
    "tensorflow.compat.v1.keras.layers.deserialize": "doc",
    "tensorflow.compat.v1.keras.losses.deserialize": "doc",
    "tensorflow.compat.v1.layers.average_pooling1d": "doc",
    "tensorflow.compat.v1.layers.average_pooling2d": "doc",
    "tensorflow.compat.v1.layers.average_pooling3d": "doc",
    "tensorflow.compat.v1.saved_model.experimental": "doc",
    "tensorflow.keras.backend.set_image_data_format": "doc",
    "tensorflow.keras.layers.ActivityRegularization": "doc",
    "tensorflow.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.compat.v1.data.experimental.Reducer": "doc",
    "tensorflow.compat.v1.keras.backend.get_session": "doc",
    "tensorflow.compat.v1.keras.backend.set_epsilon": "doc",
    "tensorflow.compat.v1.keras.backend.set_session": "doc",
    "tensorflow.compat.v1.keras.callbacks.CSVLogger": "doc",
    "tensorflow.compat.v1.keras.layers.AlphaDropout": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.RepeatVector": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling1D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling2D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling3D": "doc",
    "tensorflow.compat.v1.keras.layers.experimental": "doc",
    "tensorflow.compat.v1.keras.losses.KLDivergence": "doc",
    "tensorflow.compat.v1.keras.losses.SquaredHinge": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adadelta": "doc",
    "tensorflow.compat.v1.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter": "doc",
    "tensorflow.compat.v1.python_io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.saved_model.tag_constants": "doc",
    "tensorflow.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.compat.v1.data.experimental.snapshot": "doc",
    "tensorflow.compat.v1.keras.layers.Bidirectional": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3D": "doc",
    "tensorflow.compat.v1.keras.layers.DenseFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianNoise": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.compat.v1.keras.losses.kl_divergence": "doc",
    "tensorflow.compat.v1.keras.losses.squared_hinge": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules": "doc",
    "tensorflow.compat.v1.layers.batch_normalization": "doc",
    "tensorflow.compat.v1.losses.absolute_difference": "doc",
    "tensorflow.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.compat.v1.keras.backend.clear_session": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op": "doc",
    "tensorflow.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.data.experimental.take_while": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.compat.v1.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianDropout": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.StackedRNNCells": "doc",
    "tensorflow.compat.v1.keras.layers.TimeDistributed": "doc",
    "tensorflow.compat.v1.losses.compute_weighted_loss": "doc",
    "tensorflow.compat.v1.losses.sigmoid_cross_entropy": "doc",
    "tensorflow.compat.v1.losses.softmax_cross_entropy": "doc",
    "tensorflow.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.compat.v1.keras.backend.is_keras_tensor": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalHinge": "doc",
    "tensorflow.compat.v1.keras.losses.CosineSimilarity": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_proximity": "doc",
    "tensorflow.compat.v1.saved_model.build_tensor_info": "doc",
    "tensorflow.compat.v1.saved_model.experimental.save": "doc",
    "tensorflow.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.layers.AdditiveAttention": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_hinge": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_similarity": "doc",
    "tensorflow.compat.v1.losses.get_regularization_loss": "doc",
    "tensorflow.compat.v1.saved_model.is_valid_signature": "doc",
    "tensorflow.compat.v1.train.queue_runner.QueueRunner": "doc",
    "tensorflow.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.compat.v1.keras.backend.image_data_format": "doc",
    "tensorflow.compat.v1.keras.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.LayerNormalization": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.compat.v1.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.compat.v1.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.saved_model.build_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.signature_constants": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils": "doc",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.compat.v1.keras.losses.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_error": "doc",
    "tensorflow.compat.v1.losses.get_regularization_losses": "doc",
    "tensorflow.compat.v1.saved_model.contains_saved_model": "doc",
    "tensorflow.compat.v1.saved_model.main_op_with_restore": "doc",
    "tensorflow.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.compat.v1.python_io.TFRecordCompressionType": "doc",
    "tensorflow.compat.v1.saved_model.predict_signature_def": "doc",
    "tensorflow.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.compat.v1.losses.mean_pairwise_squared_error": "doc",
    "tensorflow.compat.v1.keras.backend.set_image_data_format": "doc",
    "tensorflow.compat.v1.keras.layers.ActivityRegularization": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.compat.v1.layers.experimental.set_keras_style": "doc",
    "tensorflow.compat.v1.losses.sparse_softmax_cross_entropy": "doc",
    "tensorflow.compat.v1.saved_model.utils.build_tensor_info": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.compat.v1.saved_model.regression_signature_def": "doc",
    "tensorflow.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.compat.v1.keras.layers.enable_v2_dtype_behavior": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.layers.experimental.keras_style_scope": "doc",
    "tensorflow.keras.layers.experimental.SyncBatchNormalization": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.compat.v1.keras.layers.disable_v2_dtype_behavior": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.compat.v1.saved_model.get_tensor_from_tensor_info": "doc",
    "tensorflow.compat.v1.saved_model.maybe_saved_model_directory": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.saved_model.classification_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op_with_restore": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.compat.v1.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.compat.v1.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.saved_model.utils.get_tensor_from_tensor_info": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.MethodNameUpdater": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.is_valid_signature": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.build_signature_def": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.predict_signature_def": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.regression_signature_def": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.classification_signature_def": "doc",
    "tensorflow.lite.TFLiteConverter": "doc",
    "tensorflow.image.image_gradients": "doc",
    "tensorflow.raw_ops.MapUnstageNoKey": "doc",
    "tensorflow.raw_ops.MaxPoolGradGrad": "doc",
    "tensorflow.raw_ops.ShardedFilespec": "doc",
    "tensorflow.raw_ops.SnapshotDataset": "doc",
    "tensorflow.raw_ops.SparseApplyFtrl": "doc",
    "tensorflow.raw_ops.SparseSliceGrad": "doc",
    "tensorflow.raw_ops.StatefulUniform": "doc",
    "tensorflow.initializers.VarianceScaling": "doc",
    "tensorflow.compat.v1.lite.TFLiteConverter": "doc",
    "tensorflow.compat.v1.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.image.image_gradients": "doc",
    "tensorflow.compat.v1.image.resize_bilinear": "doc",
    "tensorflow.compat.v1.metrics.false_positives": "doc",
    "tensorflow.keras.initializers.VarianceScaling": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.keras.initializers.VarianceScaling": "doc",
    "tensorflow.linalg.LinearOperatorZeros": "doc",
    "tensorflow.metrics.mean_absolute_error": "doc",
    "tensorflow.raw_ops.AllCandidateSampler": "doc",
    "tensorflow.raw_ops.CumulativeLogsumexp": "doc",
    "tensorflow.raw_ops.DeleteSeedGenerator": "doc",
    "tensorflow.raw_ops.DeleteSessionTensor": "doc",
    "tensorflow.raw_ops.SparseApplyAdadelta": "doc",
    "tensorflow.compat.v1.sparse_to_indicator": "doc",
    "tensorflow.distribute.get_replica_context": "doc",
    "tensorflow.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.train.NewCheckpointReader": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorZeros": "doc",
    "tensorflow.data.experimental.parallel_interleave": "doc",
    "tensorflow.compat.v1.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.distribute.get_replica_context": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.data.experimental.parallel_interleave": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReader": "doc",
    "tensorflow.compat.v1.FixedLengthRecordReader": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.metrics.precision_at_thresholds": "doc",
    "tensorflow.compat.v1.app.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.estimator.experimental.linear_logit_fn_builder": "doc",
    "tensorflow.config.experimental_connect_to_cluster": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_cluster": "doc",
    "tensorflow.SparseTensor": "doc",
    "tensorflow.io.parse_tensor": "doc",
    "tensorflow.SparseTensorSpec": "doc",
    "tensorflow.reduce_logsumexp": "doc",
    "tensorflow.nn.separable_conv2d": "doc",
    "tensorflow.sparse.SparseTensor": "doc",
    "tensorflow.raw_ops.CacheDataset": "doc",
    "tensorflow.raw_ops.ImageSummary": "doc",
    "tensorflow.raw_ops.QueueCloseV2": "doc",
    "tensorflow.raw_ops.RaggedGather": "doc",
    "tensorflow.raw_ops.ReaderReadV2": "doc",
    "tensorflow.raw_ops.SparseConcat": "doc",
    "tensorflow.math.reduce_logsumexp": "doc",
    "tensorflow.nest.pack_sequence_as": "doc",
    "tensorflow.estimator.BestExporter": "doc",
    "tensorflow.image.grayscale_to_rgb": "doc",
    "tensorflow.compat.v1.SparseTensor": "doc",
    "tensorflow.compat.v1.batch_gather": "doc",
    "tensorflow.compat.v1.parse_tensor": "doc",
    "tensorflow.compat.v1.sparse_slice": "doc",
    "tensorflow.linalg.triangular_solve": "doc",
    "tensorflow.nn.RNNCellDeviceWrapper": "doc",
    "tensorflow.raw_ops.CTCGreedyDecoder": "doc",
    "tensorflow.raw_ops.GRUBlockCellGrad": "doc",
    "tensorflow.raw_ops.GetSessionTensor": "doc",
    "tensorflow.raw_ops.OptionalGetValue": "doc",
    "tensorflow.raw_ops.ResourceGatherNd": "doc",
    "tensorflow.raw_ops.StridedSliceGrad": "doc",
    "tensorflow.raw_ops.TFRecordReaderV2": "doc",
    "tensorflow.raw_ops.TakeWhileDataset": "doc",
    "tensorflow.raw_ops.TextLineReaderV2": "doc",
    "tensorflow.raw_ops.ThreadPoolHandle": "doc",
    "tensorflow.math.cumulative_logsumexp": "doc",
    "tensorflow.compat.v1.io.parse_tensor": "doc",
    "tensorflow.compat.v1.SparseTensorSpec": "doc",
    "tensorflow.compat.v1.reduce_logsumexp": "doc",
    "tensorflow.distribute.StrategyExtended": "doc",
    "tensorflow.compat.v1.lite.toco_convert": "doc",
    "tensorflow.compat.v1.test.get_temp_dir": "doc",
    "tensorflow.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.raw_ops.ApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ApplyGradientDescent": "doc",
    "tensorflow.raw_ops.ApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.ExtractVolumePatches": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagrad": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.TPUReplicateMetadata": "doc",
    "tensorflow.compat.v1.flags.tf_decorator": "doc",
    "tensorflow.compat.v1.train.queue_runner": "doc",
    "tensorflow.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.nn.separable_conv2d": "doc",
    "tensorflow.compat.v1.sparse.SparseTensor": "doc",
    "tensorflow.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.distribute.InputReplicationMode": "doc",
    "tensorflow.compat.v1.math.reduce_logsumexp": "doc",
    "tensorflow.compat.v1.nest.pack_sequence_as": "doc",
    "tensorflow.raw_ops.AccumulatorSetGlobalStep": "doc",
    "tensorflow.raw_ops.PrivateThreadPoolDataset": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator": "doc",
    "tensorflow.compat.v1.estimator.BestExporter": "doc",
    "tensorflow.compat.v1.image.grayscale_to_rgb": "doc",
    "tensorflow.compat.v1.linalg.triangular_solve": "doc",
    "tensorflow.compat.v1.metrics.percentage_below": "doc",
    "tensorflow.keras.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.math.cumulative_logsumexp": "doc",
    "tensorflow.distribute.experimental.partitioners": "doc",
    "tensorflow.raw_ops.ExperimentalTakeWhileDataset": "doc",
    "tensorflow.compat.v1.train.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.distribute.StrategyExtended": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.data.experimental.sample_from_datasets": "doc",
    "tensorflow.data.experimental.service.WorkerServer": "doc",
    "tensorflow.compat.v1.ConfigProto.DeviceCountEntry": "doc",
    "tensorflow.compat.v1.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.compat.v1.train.piecewise_constant_decay": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.compat.v1.distribute.InputReplicationMode": "doc",
    "tensorflow.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.keras.callbacks.experimental.BackupAndRestore": "doc",
    "tensorflow.compat.v1.train.queue_runner.add_queue_runner": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.distribute.experimental.partitioners.Partitioner": "doc",
    "tensorflow.compat.v1.data.experimental.sample_from_datasets": "doc",
    "tensorflow.compat.v1.train.queue_runner.start_queue_runners": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.compat.v1.estimator.experimental.dnn_logit_fn_builder": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.distribute.experimental.partitioners.MaxSizePartitioner": "doc",
    "tensorflow.distribute.experimental.partitioners.MinSizePartitioner": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.distribute.experimental.partitioners.FixedShardsPartitioner": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetToTFRecord": "doc",
    "tensorflow.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.raw_ops.DeleteRandomSeedGenerator": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReaderV2": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensors": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter_v2": "doc",
    "tensorflow.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.nn.all_candidate_sampler": "doc",
    "tensorflow.errors.DeadlineExceededError": "doc",
    "tensorflow.random.all_candidate_sampler": "doc",
    "tensorflow.raw_ops.BroadcastGradientArgs": "doc",
    "tensorflow.raw_ops.FractionalAvgPoolGrad": "doc",
    "tensorflow.raw_ops.FractionalMaxPoolGrad": "doc",
    "tensorflow.raw_ops.ResourceApplyAdadelta": "doc",
    "tensorflow.raw_ops.ScaleAndTranslateGrad": "doc",
    "tensorflow.debugging.enable_check_numerics": "doc",
    "tensorflow.compat.v1.delete_session_tensor": "doc",
    "tensorflow.compat.v1.variables_initializer": "doc",
    "tensorflow.compat.v1.nn.all_candidate_sampler": "doc",
    "tensorflow.compat.v1.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.train.SyncReplicasOptimizer": "doc",
    "tensorflow.compat.v1.errors.DeadlineExceededError": "doc",
    "tensorflow.compat.v1.random.all_candidate_sampler": "doc",
    "tensorflow.data.experimental.parse_example_dataset": "doc",
    "tensorflow.compat.v1.app.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.app.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.debugging.enable_check_numerics": "doc",
    "tensorflow.compat.v1.data.experimental.parse_example_dataset": "doc",
    "tensorflow.convert_to_tensor": "doc",
    "tensorflow.space_to_batch_nd": "doc",
    "tensorflow.nn.collapse_repeated": "doc",
    "tensorflow.train.CheckpointManager": "doc",
    "tensorflow.metrics.MeanRelativeError": "doc",
    "tensorflow.raw_ops.CollectivePermute": "doc",
    "tensorflow.raw_ops.FractionalAvgPool": "doc",
    "tensorflow.raw_ops.FractionalMaxPool": "doc",
    "tensorflow.raw_ops.InterleaveDataset": "doc",
    "tensorflow.raw_ops.LSTMBlockCellGrad": "doc",
    "tensorflow.raw_ops.LookupTableFindV2": "doc",
    "tensorflow.raw_ops.LookupTableInsert": "doc",
    "tensorflow.raw_ops.MapIncompleteSize": "doc",
    "tensorflow.raw_ops.MaxPool3DGradGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradV2": "doc",
    "tensorflow.raw_ops.OptionalFromValue": "doc",
    "tensorflow.raw_ops.ResourceApplyAdam": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrl": "doc",
    "tensorflow.raw_ops.SnapshotDatasetV2": "doc",
    "tensorflow.raw_ops.SparseApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SparseCrossHashed": "doc",
    "tensorflow.raw_ops.SparseMatrixZeros": "doc",
    "tensorflow.raw_ops.SquaredDifference": "doc",
    "tensorflow.raw_ops.ThreadPoolDataset": "doc",
    "tensorflow.estimator.BaselineRegressor": "doc",
    "tensorflow.compat.v1.SparseTensorValue": "doc",
    "tensorflow.compat.v1.convert_to_tensor": "doc",
    "tensorflow.compat.v1.space_to_batch_nd": "doc",
    "tensorflow.compat.v1.sparse_reduce_max": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum": "doc",
    "tensorflow.compat.v1.nn.collapse_repeated": "doc",
    "tensorflow.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.compat.v1.flags.CsvListSerializer": "doc",
    "tensorflow.compat.v1.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.manip.space_to_batch_nd": "doc",
    "tensorflow.compat.v1.train.AdadeltaOptimizer": "doc",
    "tensorflow.compat.v1.train.CheckpointManager": "doc",
    "tensorflow.compat.v1.train.exponential_decay": "doc",
    "tensorflow.compat.v1.train.natural_exp_decay": "doc",
    "tensorflow.config.experimental.get_device_policy": "doc",
    "tensorflow.config.experimental.set_device_policy": "doc",
    "tensorflow.compat.v1.app.flags.CsvListSerializer": "doc",
    "tensorflow.compat.v1.app.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.estimator.BaselineRegressor": "doc",
    "tensorflow.keras.mixed_precision.set_global_policy": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.compat.v1.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.set_device_policy": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.IndexedSlices": "doc",
    "tensorflow.io.SparseFeature": "doc",
    "tensorflow.math.count_nonzero": "doc",
    "tensorflow.metrics.squared_hinge": "doc",
    "tensorflow.raw_ops.BlockLSTMGrad": "doc",
    "tensorflow.raw_ops.LeakyReluGrad": "doc",
    "tensorflow.raw_ops.MatrixSolveLs": "doc",
    "tensorflow.raw_ops.MaxPool3DGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradV2": "doc",
    "tensorflow.raw_ops.QuantizedRelu": "doc",
    "tensorflow.raw_ops.QueueIsClosed": "doc",
    "tensorflow.raw_ops.ReaderResetV2": "doc",
    "tensorflow.raw_ops.ReduceDataset": "doc",
    "tensorflow.raw_ops.RepeatDataset": "doc",
    "tensorflow.raw_ops.ScatterUpdate": "doc",
    "tensorflow.raw_ops.SdcaOptimizer": "doc",
    "tensorflow.raw_ops.SparseAddGrad": "doc",
    "tensorflow.raw_ops.SparseCrossV2": "doc",
    "tensorflow.raw_ops.SparseSoftmax": "doc",
    "tensorflow.raw_ops.SparseToDense": "doc",
    "tensorflow.raw_ops.SummaryWriter": "doc",
    "tensorflow.raw_ops.UnicodeDecode": "doc",
    "tensorflow.raw_ops.UnicodeEncode": "doc",
    "tensorflow.summary.SummaryWriter": "doc",
    "tensorflow.estimator.DNNClassifier": "doc",
    "tensorflow.compat.v1.IndexedSlices": "doc",
    "tensorflow.compat.v1.SparseFeature": "doc",
    "tensorflow.compat.v1.all_variables": "doc",
    "tensorflow.compat.v1.count_nonzero": "doc",
    "tensorflow.compat.v1.sparse_concat": "doc",
    "tensorflow.compat.v1.io.SparseFeature": "doc",
    "tensorflow.keras.metrics.squared_hinge": "doc",
    "tensorflow.compat.v1.lite.TocoConverter": "doc",
    "tensorflow.compat.v1.math.count_nonzero": "doc",
    "tensorflow.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.compat.v1.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.train.AdamOptimizer": "doc",
    "tensorflow.compat.v1.train.FtrlOptimizer": "doc",
    "tensorflow.experimental.numpy.count_nonzero": "doc",
    "tensorflow.experimental.numpy.promote_types": "doc",
    "tensorflow.keras.experimental.WideDeepModel": "doc",
    "tensorflow.compat.v1.app.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.app.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.estimator.DNNClassifier": "doc",
    "tensorflow.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.raw_ops.SparseApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseCholesky": "doc",
    "tensorflow.estimator.experimental.RNNClassifier": "doc",
    "tensorflow.compat.v1.keras.metrics.squared_hinge": "doc",
    "tensorflow.compat.v1.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.compat.v1.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder_v2": "doc",
    "tensorflow.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.compat.v1.keras.experimental.WideDeepModel": "doc",
    "tensorflow.compat.v1.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.extract_volume_patches": "doc",
    "tensorflow.nn.RNNCellResidualWrapper": "doc",
    "tensorflow.errors.ResourceExhaustedError": "doc",
    "tensorflow.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.raw_ops.DatasetToSingleElement": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRelu": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradV2": "doc",
    "tensorflow.raw_ops.ResourceApplyPowerSign": "doc",
    "tensorflow.raw_ops.StatefulStandardNormal": "doc",
    "tensorflow.debugging.disable_check_numerics": "doc",
    "tensorflow.compat.v1.extract_volume_patches": "doc",
    "tensorflow.compat.v1.sparse_fill_empty_rows": "doc",
    "tensorflow.compat.v1.sparse_tensor_to_dense": "doc",
    "tensorflow.compat.v1.data.make_one_shot_iterator": "doc",
    "tensorflow.compat.v1.errors.ResourceExhaustedError": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.compat.v1.debugging.disable_check_numerics": "doc",
    "tensorflow.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.nn.ctc_greedy_decoder": "doc",
    "tensorflow.math.squared_difference": "doc",
    "tensorflow.metrics.BinaryCrossentropy": "doc",
    "tensorflow.metrics.mean_squared_error": "doc",
    "tensorflow.raw_ops.BatchMatrixSolveLs": "doc",
    "tensorflow.raw_ops.CloseSummaryWriter": "doc",
    "tensorflow.raw_ops.CollectiveReduceV2": "doc",
    "tensorflow.raw_ops.DataServiceDataset": "doc",
    "tensorflow.raw_ops.FlushSummaryWriter": "doc",
    "tensorflow.raw_ops.FusedBatchNormGrad": "doc",
    "tensorflow.raw_ops.GetSessionHandleV2": "doc",
    "tensorflow.raw_ops.MapAndBatchDataset": "doc",
    "tensorflow.raw_ops.MutableHashTableV2": "doc",
    "tensorflow.raw_ops.ResizeBilinearGrad": "doc",
    "tensorflow.raw_ops.ResourceScatterAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterDiv": "doc",
    "tensorflow.raw_ops.ResourceScatterMax": "doc",
    "tensorflow.raw_ops.ResourceScatterMin": "doc",
    "tensorflow.raw_ops.ResourceScatterMul": "doc",
    "tensorflow.raw_ops.ResourceScatterSub": "doc",
    "tensorflow.raw_ops.SparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtN": "doc",
    "tensorflow.raw_ops.StatefulUniformInt": "doc",
    "tensorflow.raw_ops.StaticRegexReplace": "doc",
    "tensorflow.raw_ops.TPUReplicatedInput": "doc",
    "tensorflow.raw_ops.TensorSliceDataset": "doc",
    "tensorflow.autodiff.ForwardAccumulator": "doc",
    "tensorflow.estimator.BaselineClassifier": "doc",
    "tensorflow.compat.v1.enable_v2_behavior": "doc",
    "tensorflow.compat.v1.get_collection_ref": "doc",
    "tensorflow.compat.v1.get_session_tensor": "doc",
    "tensorflow.compat.v1.squared_difference": "doc",
    "tensorflow.compat.v1.tables_initializer": "doc",
    "tensorflow.compat.v1.nn.ctc_greedy_decoder": "doc",
    "tensorflow.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.keras.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.math.squared_difference": "doc",
    "tensorflow.compat.v1.flags.ArgumentSerializer": "doc",
    "tensorflow.compat.v1.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.flags.register_validator": "doc",
    "tensorflow.compat.v1.train.piecewise_constant": "doc",
    "tensorflow.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensorsV2": "doc",
    "tensorflow.compat.v1.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.local_variables_initializer": "doc",
    "tensorflow.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentSerializer": "doc",
    "tensorflow.compat.v1.app.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.app.flags.register_validator": "doc",
    "tensorflow.compat.v1.estimator.BaselineClassifier": "doc",
    "tensorflow.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.compat.v1.initializers.tables_initializer": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_error": "doc",
    "tensorflow.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.raw_ops.ExperimentalPrivateThreadPoolDataset": "doc",
    "tensorflow.keras.preprocessing.text_dataset_from_directory": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.compat.v1.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.compat.v1.app.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.nn.compute_accidental_hits": "doc",
    "tensorflow.errors.FailedPreconditionError": "doc",
    "tensorflow.linalg.LinearOperatorInversion": "doc",
    "tensorflow.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.raw_ops.AccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.CreateSummaryFileWriter": "doc",
    "tensorflow.raw_ops.QuantizedResizeBilinear": "doc",
    "tensorflow.raw_ops.SparseMatrixOrderingAMD": "doc",
    "tensorflow.raw_ops.StatefulTruncatedNormal": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandleV2": "doc",
    "tensorflow.summary.should_record_summaries": "doc",
    "tensorflow.estimator.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.nn.compute_accidental_hits": "doc",
    "tensorflow.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.train.update_checkpoint_state": "doc",
    "tensorflow.compat.v1.errors.FailedPreconditionError": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorInversion": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.parallel_stack": "doc",
    "tensorflow.linalg.cholesky_solve": "doc",
    "tensorflow.linalg.lu_reconstruct": "doc",
    "tensorflow.metrics.FalseNegatives": "doc",
    "tensorflow.raw_ops.ApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ApplyAdagradV2": "doc",
    "tensorflow.raw_ops.BatchToSpaceND": "doc",
    "tensorflow.raw_ops.CacheDatasetV2": "doc",
    "tensorflow.raw_ops.ControlTrigger": "doc",
    "tensorflow.raw_ops.DatasetToGraph": "doc",
    "tensorflow.raw_ops.DeleteIterator": "doc",
    "tensorflow.raw_ops.FlatMapDataset": "doc",
    "tensorflow.raw_ops.IdentityReader": "doc",
    "tensorflow.raw_ops.ParallelConcat": "doc",
    "tensorflow.raw_ops.QuantizedRelu6": "doc",
    "tensorflow.raw_ops.QuantizedReluX": "doc",
    "tensorflow.raw_ops.ReaderReadUpTo": "doc",
    "tensorflow.raw_ops.RebatchDataset": "doc",
    "tensorflow.raw_ops.StatelessWhile": "doc",
    "tensorflow.raw_ops.StringToNumber": "doc",
    "tensorflow.raw_ops.UnbatchDataset": "doc",
    "tensorflow.strings.unicode_decode": "doc",
    "tensorflow.strings.unicode_encode": "doc",
    "tensorflow.debugging.check_numerics": "doc",
    "tensorflow.estimator.MultiLabelHead": "doc",
    "tensorflow.estimator.RegressionHead": "doc",
    "tensorflow.compat.v1.IdentityReader": "doc",
    "tensorflow.compat.v1.check_numerics": "doc",
    "tensorflow.compat.v1.cholesky_solve": "doc",
    "tensorflow.compat.v1.parallel_stack": "doc",
    "tensorflow.compat.v1.scatter_nd_add": "doc",
    "tensorflow.compat.v1.scatter_nd_sub": "doc",
    "tensorflow.compat.v1.scatter_update": "doc",
    "tensorflow.compat.v1.sparse_softmax": "doc",
    "tensorflow.keras.utils.to_categorical": "doc",
    "tensorflow.keras.metrics.FalseNegatives": "doc",
    "tensorflow.compat.v1.tpu.batch_parallel": "doc",
    "tensorflow.compat.v1.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.train.sdca_optimizer": "doc",
    "tensorflow.compat.v1.linalg.cholesky_solve": "doc",
    "tensorflow.compat.v1.linalg.lu_reconstruct": "doc",
    "tensorflow.data.experimental.copy_to_device": "doc",
    "tensorflow.compat.v1.metrics.precision_at_k": "doc",
    "tensorflow.compat.v1.strings.unicode_decode": "doc",
    "tensorflow.compat.v1.strings.unicode_encode": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.app.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.debugging.check_numerics": "doc",
    "tensorflow.compat.v1.estimator.MultiLabelHead": "doc",
    "tensorflow.compat.v1.estimator.RegressionHead": "doc",
    "tensorflow.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolHandle": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalAdagrad": "doc",
    "tensorflow.compat.v1.keras.utils.to_categorical": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DropoutWrapper": "doc",
    "tensorflow.autograph.experimental.do_not_convert": "doc",
    "tensorflow.compat.v1.global_variables_initializer": "doc",
    "tensorflow.compat.v1.keras.metrics.FalseNegatives": "doc",
    "tensorflow.compat.v1.truncated_normal_initializer": "doc",
    "tensorflow.compat.v1.variance_scaling_initializer": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdamParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.FtrlParameters": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.compat.v1.data.experimental.copy_to_device": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.compat.v1.metrics.true_positives_at_thresholds": "doc",
    "tensorflow.compat.v1.autograph.experimental.do_not_convert": "doc",
    "tensorflow.keras.preprocessing.image_dataset_from_directory": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.clip_by_global_norm": "doc",
    "tensorflow.nn.fractional_avg_pool": "doc",
    "tensorflow.nn.fractional_max_pool": "doc",
    "tensorflow.nn.with_space_to_batch": "doc",
    "tensorflow.image.draw_bounding_boxes": "doc",
    "tensorflow.lookup.TextFileInitializer": "doc",
    "tensorflow.metrics.CategoricalAccuracy": "doc",
    "tensorflow.metrics.binary_crossentropy": "doc",
    "tensorflow.raw_ops.CollectiveBcastRecv": "doc",
    "tensorflow.raw_ops.CollectiveBcastSend": "doc",
    "tensorflow.raw_ops.ExtractImagePatches": "doc",
    "tensorflow.raw_ops.LookupTableExportV2": "doc",
    "tensorflow.raw_ops.LookupTableImportV2": "doc",
    "tensorflow.raw_ops.LookupTableInsertV2": "doc",
    "tensorflow.raw_ops.LookupTableRemoveV2": "doc",
    "tensorflow.raw_ops.MultiDeviceIterator": "doc",
    "tensorflow.raw_ops.ResourceApplyAdaMax": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SparseApplyMomentum": "doc",
    "tensorflow.raw_ops.TPUReplicatedOutput": "doc",
    "tensorflow.estimator.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.clip_by_global_norm": "doc",
    "tensorflow.compat.v1.disable_v2_behavior": "doc",
    "tensorflow.compat.v1.nn.fractional_avg_pool": "doc",
    "tensorflow.compat.v1.nn.fractional_max_pool": "doc",
    "tensorflow.compat.v1.nn.with_space_to_batch": "doc",
    "tensorflow.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.compat.v1.tpu.CrossShardOptimizer": "doc",
    "tensorflow.compat.v1.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.image.draw_bounding_boxes": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.train.ChiefSessionCreator": "doc",
    "tensorflow.compat.v1.train.linear_cosine_decay": "doc",
    "tensorflow.compat.v1.train.start_queue_runners": "doc",
    "tensorflow.compat.v1.lookup.TextFileInitializer": "doc",
    "tensorflow.compat.v1.metrics.mean_relative_error": "doc",
    "tensorflow.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverHook": "doc",
    "tensorflow.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.compat.v1.estimator.tpu.InputPipelineConfig": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.data.FixedLengthRecordDataset": "doc",
    "tensorflow.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.metrics.categorical_crossentropy": "doc",
    "tensorflow.raw_ops.AccumulatorApplyGradient": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDataset": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProduced": "doc",
    "tensorflow.raw_ops.SparseTensorSliceDataset": "doc",
    "tensorflow.raw_ops.StatefulStandardNormalV2": "doc",
    "tensorflow.debugging.get_log_device_placement": "doc",
    "tensorflow.debugging.set_log_device_placement": "doc",
    "tensorflow.compat.v1.sparse_reduce_max_sparse": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum_sparse": "doc",
    "tensorflow.distribute.in_cross_replica_context": "doc",
    "tensorflow.compat.v1.nn.static_bidirectional_rnn": "doc",
    "tensorflow.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.data.FixedLengthRecordDataset": "doc",
    "tensorflow.compat.v1.train.GradientDescentOptimizer": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.compat.v1.debugging.get_log_device_placement": "doc",
    "tensorflow.compat.v1.debugging.set_log_device_placement": "doc",
    "tensorflow.compat.v1.distribute.in_cross_replica_context": "doc",
    "tensorflow.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.compat.v1.experimental.output_all_intermediates": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession.StepContext": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolDataset": "doc",
    "tensorflow.raw_ops.SparseAccumulatorTakeGradient": "doc",
    "tensorflow.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.compat.v1.metrics.false_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.false_positives_at_thresholds": "doc",
    "tensorflow.compat.v1.app.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.load_op_library": "doc",
    "tensorflow.UnconnectedGradients": "doc",
    "tensorflow.constant_initializer": "doc",
    "tensorflow.control_dependencies": "doc",
    "tensorflow.data.TFRecordDataset": "doc",
    "tensorflow.test.gpu_device_name": "doc",
    "tensorflow.type_spec_from_value": "doc",
    "tensorflow.image.extract_glimpse": "doc",
    "tensorflow.image.extract_patches": "doc",
    "tensorflow.train.load_checkpoint": "doc",
    "tensorflow.lookup.StaticHashTable": "doc",
    "tensorflow.sparse.fill_empty_rows": "doc",
    "tensorflow.io.match_filenames_once": "doc",
    "tensorflow.io.parse_single_example": "doc",
    "tensorflow.nn.compute_average_loss": "doc",
    "tensorflow.nn.sampled_softmax_loss": "doc",
    "tensorflow.raw_ops.BlockLSTMGradV2": "doc",
    "tensorflow.raw_ops.CompressElement": "doc",
    "tensorflow.raw_ops.DecodePaddedRaw": "doc",
    "tensorflow.raw_ops.EmptyTensorList": "doc",
    "tensorflow.raw_ops.OneShotIterator": "doc",
    "tensorflow.raw_ops.OptimizeDataset": "doc",
    "tensorflow.raw_ops.OrderedMapClear": "doc",
    "tensorflow.raw_ops.PopulationCount": "doc",
    "tensorflow.raw_ops.PrefetchDataset": "doc",
    "tensorflow.raw_ops.PreventGradient": "doc",
    "tensorflow.raw_ops.QuantizedConcat": "doc",
    "tensorflow.raw_ops.QuantizedConv2D": "doc",
    "tensorflow.raw_ops.QueueIsClosedV2": "doc",
    "tensorflow.raw_ops.SamplingDataset": "doc",
    "tensorflow.raw_ops.ScatterNdUpdate": "doc",
    "tensorflow.raw_ops.SdcaOptimizerV2": "doc",
    "tensorflow.raw_ops.SerializeTensor": "doc",
    "tensorflow.raw_ops.ShardedFilename": "doc",
    "tensorflow.raw_ops.SparseReduceMax": "doc",
    "tensorflow.raw_ops.SparseReduceSum": "doc",
    "tensorflow.raw_ops.TFRecordDataset": "doc",
    "tensorflow.raw_ops.TruncatedNormal": "doc",
    "tensorflow.estimator.LinearRegressor": "doc",
    "tensorflow.compat.v1.load_op_library": "doc",
    "tensorflow.compat.v1.local_variables": "doc",
    "tensorflow.compat.v1.matrix_solve_ls": "doc",
    "tensorflow.compat.v1.model_variables": "doc",
    "tensorflow.train.checkpoints_iterator": "doc",
    "tensorflow.config.list_logical_devices": "doc",
    "tensorflow.errors.UnauthenticatedError": "doc",
    "tensorflow.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.random.get_global_generator": "doc",
    "tensorflow.random.set_global_generator": "doc",
    "tensorflow.initializers.TruncatedNormal": "doc",
    "tensorflow.metrics.categorical_accuracy": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV3": "doc",
    "tensorflow.raw_ops.RaggedTensorToTensor": "doc",
    "tensorflow.raw_ops.ReaderRestoreStateV2": "doc",
    "tensorflow.raw_ops.ReaderSerializeState": "doc",
    "tensorflow.raw_ops.RequantizePerChannel": "doc",
    "tensorflow.raw_ops.ResourceApplyAddSign": "doc",
    "tensorflow.raw_ops.ResourceApplyRMSProp": "doc",
    "tensorflow.raw_ops.ResourceScatterNdAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMax": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMin": "doc",
    "tensorflow.raw_ops.ResourceScatterNdSub": "doc",
    "tensorflow.raw_ops.SparseTensorDenseAdd": "doc",
    "tensorflow.raw_ops.StaticRegexFullMatch": "doc",
    "tensorflow.raw_ops.TPUCompilationResult": "doc",
    "tensorflow.compat.v1.UnconnectedGradients": "doc",
    "tensorflow.compat.v1.clip_by_average_norm": "doc",
    "tensorflow.compat.v1.constant_initializer": "doc",
    "tensorflow.compat.v1.control_dependencies": "doc",
    "tensorflow.compat.v1.data.TFRecordDataset": "doc",
    "tensorflow.compat.v1.parse_single_example": "doc",
    "tensorflow.compat.v1.test.gpu_device_name": "doc",
    "tensorflow.compat.v1.type_spec_from_value": "doc",
    "tensorflow.image.per_image_standardization": "doc",
    "tensorflow.compat.v1.flags.ValidationError": "doc",
    "tensorflow.compat.v1.image.extract_glimpse": "doc",
    "tensorflow.compat.v1.image.extract_patches": "doc",
    "tensorflow.compat.v1.train.get_global_step": "doc",
    "tensorflow.compat.v1.train.load_checkpoint": "doc",
    "tensorflow.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.compat.v1.lookup.StaticHashTable": "doc",
    "tensorflow.compat.v1.sparse.fill_empty_rows": "doc",
    "tensorflow.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.data.experimental.StatsAggregator": "doc",
    "tensorflow.raw_ops.AccumulatorNumAccumulated": "doc",
    "tensorflow.raw_ops.DeleteMultiDeviceIterator": "doc",
    "tensorflow.raw_ops.ExperimentalRandomDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DPerChannel": "doc",
    "tensorflow.compat.v1.io.match_filenames_once": "doc",
    "tensorflow.compat.v1.io.parse_single_example": "doc",
    "tensorflow.compat.v1.metrics.false_negatives": "doc",
    "tensorflow.compat.v1.nn.compute_average_loss": "doc",
    "tensorflow.compat.v1.nn.sampled_softmax_loss": "doc",
    "tensorflow.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.compat.v1.app.flags.ValidationError": "doc",
    "tensorflow.compat.v1.enable_resource_variables": "doc",
    "tensorflow.compat.v1.estimator.LinearRegressor": "doc",
    "tensorflow.compat.v1.glorot_normal_initializer": "doc",
    "tensorflow.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.distribute.experimental_set_strategy": "doc",
    "tensorflow.compat.v1.TensorInfo.CompositeTensor": "doc",
    "tensorflow.compat.v1.train.WorkerSessionCreator": "doc",
    "tensorflow.compat.v1.train.checkpoints_iterator": "doc",
    "tensorflow.compat.v1.train.match_filenames_once": "doc",
    "tensorflow.compat.v1.train.range_input_producer": "doc",
    "tensorflow.errors.OperatorNotAllowedInGraphError": "doc",
    "tensorflow.estimator.export.ClassificationOutput": "doc",
    "tensorflow.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.compat.v1.config.list_logical_devices": "doc",
    "tensorflow.compat.v1.errors.UnauthenticatedError": "doc",
    "tensorflow.compat.v1.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.ResidualWrapper": "doc",
    "tensorflow.compat.v1.random.get_global_generator": "doc",
    "tensorflow.compat.v1.random.set_global_generator": "doc",
    "tensorflow.data.experimental.choose_from_datasets": "doc",
    "tensorflow.raw_ops.SparseAccumulatorApplyGradient": "doc",
    "tensorflow.compat.v1.initializers.local_variables": "doc",
    "tensorflow.compat.v1.nn.bidirectional_dynamic_rnn": "doc",
    "tensorflow.config.experimental.list_logical_devices": "doc",
    "tensorflow.random.experimental.get_global_generator": "doc",
    "tensorflow.random.experimental.set_global_generator": "doc",
    "tensorflow.compat.v1.image.per_image_standardization": "doc",
    "tensorflow.compat.v1.train.get_or_create_global_step": "doc",
    "tensorflow.compat.v1.train.noisy_linear_cosine_decay": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropFilter": "doc",
    "tensorflow.compat.v1.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.compat.v1.data.experimental.StatsAggregator": "doc",
    "tensorflow.compat.v1.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.compat.v1.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.compat.v1.distribute.experimental_set_strategy": "doc",
    "tensorflow.compat.v1.estimator.export.ClassificationOutput": "doc",
    "tensorflow.compat.v1.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.compat.v1.data.experimental.choose_from_datasets": "doc",
    "tensorflow.compat.v1.config.experimental.list_logical_devices": "doc",
    "tensorflow.compat.v1.random.experimental.get_global_generator": "doc",
    "tensorflow.compat.v1.random.experimental.set_global_generator": "doc",
    "tensorflow.distribute.experimental.coordinator.PerWorkerValues": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.raw_ops.ExperimentalParseExampleDataset": "doc",
    "tensorflow.raw_ops.StatelessRandomGetKeyCounterAlg": "doc",
    "tensorflow.compat.v1.train.generate_checkpoint_state_proto": "doc",
    "tensorflow.image.non_max_suppression_padded": "doc",
    "tensorflow.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.raw_ops.ExperimentalRebatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalUnbatchDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDatasetV2": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV2": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV3": "doc",
    "tensorflow.raw_ops.InitializeTableFromDataset": "doc",
    "tensorflow.raw_ops.QuantizeDownAndShrinkRange": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProducedV2": "doc",
    "tensorflow.raw_ops.ResourceApplyKerasMomentum": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBox": "doc",
    "tensorflow.raw_ops.SparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.SparseToSparseSetOperation": "doc",
    "tensorflow.strings.unicode_split_with_offsets": "doc",
    "tensorflow.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.compat.v1.disable_resource_variables": "doc",
    "tensorflow.compat.v1.glorot_uniform_initializer": "doc",
    "tensorflow.compat.v1.initialize_local_variables": "doc",
    "tensorflow.compat.v1.sparse_tensor_dense_matmul": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_padded": "doc",
    "tensorflow.compat.v1.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.compat.v1.strings.unicode_split_with_offsets": "doc",
    "tensorflow.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.compat.v1.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.nn.RNNCellDropoutWrapper": "doc",
    "tensorflow.lite.RepresentativeDataset": "doc",
    "tensorflow.image.stateless_random_crop": "doc",
    "tensorflow.config.functions_run_eagerly": "doc",
    "tensorflow.config.list_physical_devices": "doc",
    "tensorflow.config.run_functions_eagerly": "doc",
    "tensorflow.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.lookup.StaticVocabularyTable": "doc",
    "tensorflow.random.stateless_categorical": "doc",
    "tensorflow.raw_ops.AddSparseToTensorsMap": "doc",
    "tensorflow.raw_ops.BarrierIncompleteSize": "doc",
    "tensorflow.raw_ops.ComputeAccidentalHits": "doc",
    "tensorflow.raw_ops.CreateSummaryDbWriter": "doc",
    "tensorflow.raw_ops.DebugGradientIdentity": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNative": "doc",
    "tensorflow.raw_ops.DummyIterationCounter": "doc",
    "tensorflow.raw_ops.GroupByReducerDataset": "doc",
    "tensorflow.raw_ops.IsVariableInitialized": "doc",
    "tensorflow.raw_ops.MaxPoolGradWithArgmax": "doc",
    "tensorflow.raw_ops.QuantizedInstanceNorm": "doc",
    "tensorflow.raw_ops.ResourceApplyMomentum": "doc",
    "tensorflow.raw_ops.ResourceScatterUpdate": "doc",
    "tensorflow.raw_ops.SparseReduceMaxSparse": "doc",
    "tensorflow.raw_ops.SparseReduceSumSparse": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanGrad": "doc",
    "tensorflow.raw_ops.StatelessRandomNormal": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandle": "doc",
    "tensorflow.compat.v1.enable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.extract_image_patches": "doc",
    "tensorflow.compat.v1.initialize_all_tables": "doc",
    "tensorflow.compat.v1.sparse_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.lite.RepresentativeDataset": "doc",
    "tensorflow.compat.v1.flags.CantOpenFlagFileError": "doc",
    "tensorflow.compat.v1.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.image.extract_image_patches": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_mtimes": "doc",
    "tensorflow.compat.v1.train.string_input_producer": "doc",
    "tensorflow.compat.v1.config.functions_run_eagerly": "doc",
    "tensorflow.compat.v1.config.list_physical_devices": "doc",
    "tensorflow.compat.v1.config.run_functions_eagerly": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.compat.v1.lookup.StaticVocabularyTable": "doc",
    "tensorflow.compat.v1.random.stateless_categorical": "doc",
    "tensorflow.compat.v1.NodeDef.ExperimentalDebugInfo": "doc",
    "tensorflow.config.experimental.list_physical_devices": "doc",
    "tensorflow.compat.v1.app.flags.CantOpenFlagFileError": "doc",
    "tensorflow.compat.v1.app.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.app.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.lite.OpHint.OpHintArgumentTracker": "doc",
    "tensorflow.compat.v1.data.experimental.SparseTensorStructure": "doc",
    "tensorflow.compat.v1.keras.experimental.load_from_saved_model": "doc",
    "tensorflow.compat.v1.config.experimental.list_physical_devices": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental.RunHandlerPoolOptions": "doc",
    "tensorflow.RaggedTensorSpec": "doc",
    "tensorflow.RegisterGradient": "doc",
    "tensorflow.get_static_value": "doc",
    "tensorflow.import_graph_def": "doc",
    "tensorflow.ones_initializer": "doc",
    "tensorflow.io.serialize_sparse": "doc",
    "tensorflow.io.serialize_tensor": "doc",
    "tensorflow.nn.depthwise_conv2d": "doc",
    "tensorflow.nn.log_poisson_loss": "doc",
    "tensorflow.test.compute_gradient": "doc",
    "tensorflow.errors.UnavailableError": "doc",
    "tensorflow.random.stateless_normal": "doc",
    "tensorflow.random.truncated_normal": "doc",
    "tensorflow.metrics.CategoricalHinge": "doc",
    "tensorflow.metrics.MeanSquaredError": "doc",
    "tensorflow.raw_ops.AutoShardDataset": "doc",
    "tensorflow.raw_ops.BatchMatrixSolve": "doc",
    "tensorflow.raw_ops.CollectiveReduce": "doc",
    "tensorflow.raw_ops.ComputeBatchSize": "doc",
    "tensorflow.raw_ops.DatasetFromGraph": "doc",
    "tensorflow.raw_ops.DatasetToGraphV2": "doc",
    "tensorflow.raw_ops.DecodeCompressed": "doc",
    "tensorflow.raw_ops.ExtractGlimpseV2": "doc",
    "tensorflow.raw_ops.ExtractJpegShape": "doc",
    "tensorflow.raw_ops.FusedBatchNormV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormV3": "doc",
    "tensorflow.raw_ops.GetSessionHandle": "doc",
    "tensorflow.raw_ops.IdentityReaderV2": "doc",
    "tensorflow.raw_ops.MutableHashTable": "doc",
    "tensorflow.raw_ops.OptionalHasValue": "doc",
    "tensorflow.raw_ops.QuantizedReshape": "doc",
    "tensorflow.raw_ops.ReaderReadUpToV2": "doc",
    "tensorflow.raw_ops.RebatchDatasetV2": "doc",
    "tensorflow.raw_ops.RefNextIteration": "doc",
    "tensorflow.raw_ops.SparseSegmentSum": "doc",
    "tensorflow.raw_ops.SymbolicGradient": "doc",
    "tensorflow.raw_ops.TridiagonalSolve": "doc",
    "tensorflow.raw_ops.UnicodeTranscode": "doc",
    "tensorflow.raw_ops.UniqueWithCounts": "doc",
    "tensorflow.estimator.LinearClassifier": "doc",
    "tensorflow.compat.v1.RaggedTensorSpec": "doc",
    "tensorflow.compat.v1.RegisterGradient": "doc",
    "tensorflow.compat.v1.get_static_value": "doc",
    "tensorflow.compat.v1.global_variables": "doc",
    "tensorflow.compat.v1.import_graph_def": "doc",
    "tensorflow.compat.v1.ones_initializer": "doc",
    "tensorflow.compat.v1.quantized_concat": "doc",
    "tensorflow.compat.v1.self_adjoint_eig": "doc",
    "tensorflow.compat.v1.serialize_sparse": "doc",
    "tensorflow.compat.v1.serialize_tensor": "doc",
    "tensorflow.compat.v1.string_to_number": "doc",
    "tensorflow.compat.v1.truncated_normal": "doc",
    "tensorflow.graph_util.import_graph_def": "doc",
    "tensorflow.initializers.truncated_normal": "doc",
    "tensorflow.quantization.quantized_concat": "doc",
    "tensorflow.compat.v1.io.serialize_sparse": "doc",
    "tensorflow.compat.v1.io.serialize_tensor": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d": "doc",
    "tensorflow.compat.v1.nn.log_poisson_loss": "doc",
    "tensorflow.compat.v1.nn.quantized_conv2d": "doc",
    "tensorflow.compat.v1.nn.quantized_relu_x": "doc",
    "tensorflow.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.test.compute_gradient": "doc",
    "tensorflow.compat.v1.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.train.AdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.add_queue_runner": "doc",
    "tensorflow.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.compat.v1.errors.UnavailableError": "doc",
    "tensorflow.compat.v1.random.stateless_normal": "doc",
    "tensorflow.compat.v1.random.truncated_normal": "doc",
    "tensorflow.data.experimental.group_by_reducer": "doc",
    "tensorflow.data.experimental.make_csv_dataset": "doc",
    "tensorflow.experimental.numpy.broadcast_arrays": "doc",
    "tensorflow.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.keras.initializers.truncated_normal": "doc",
    "tensorflow.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.compat.v1.app.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.estimator.LinearClassifier": "doc",
    "tensorflow.compat.v1.graph_util.import_graph_def": "doc",
    "tensorflow.experimental.tensorrt.ConversionParams": "doc",
    "tensorflow.image.stateless_random_flip_left_right": "doc",
    "tensorflow.config.get_logical_device_configuration": "doc",
    "tensorflow.config.set_logical_device_configuration": "doc",
    "tensorflow.compat.v1.initializers.global_variables": "doc",
    "tensorflow.compat.v1.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.quantization.quantized_concat": "doc",
    "tensorflow.raw_ops.ExperimentalMatchingFilesDataset": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorApplyGradient": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorSetGlobalStep": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.compat.v1.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.compat.v1.data.experimental.DatasetStructure": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_reducer": "doc",
    "tensorflow.compat.v1.data.experimental.make_csv_dataset": "doc",
    "tensorflow.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.compat.v1.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.compat.v1.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.compat.v1.keras.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.train.ProximalGradientDescentOptimizer": "doc",
    "tensorflow.compat.v1.config.get_logical_device_configuration": "doc",
    "tensorflow.compat.v1.config.set_logical_device_configuration": "doc",
    "tensorflow.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFile": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompleted": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdadelta": "doc",
    "tensorflow.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.distribute.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.compat.v1.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.compat.v1.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.add": "doc",
    "tensorflow.cos": "doc",
    "tensorflow.eye": "doc",
    "tensorflow.pow": "doc",
    "tensorflow.xla": "doc",
    "tensorflow.case": "doc",
    "tensorflow.cosh": "doc",
    "tensorflow.less": "doc",
    "tensorflow.lite": "doc",
    "tensorflow.math": "doc",
    "tensorflow.mlir": "doc",
    "tensorflow.ones": "doc",
    "tensorflow.roll": "doc",
    "tensorflow.tanh": "doc",
    "tensorflow.tile": "doc",
    "tensorflow.Graph": "doc",
    "tensorflow.add_n": "doc",
    "tensorflow.atanh": "doc",
    "tensorflow.audio": "doc",
    "tensorflow.image": "doc",
    "tensorflow.queue": "doc",
    "tensorflow.range": "doc",
    "tensorflow.shape": "doc",
    "tensorflow.stack": "doc",
    "tensorflow.tuple": "doc",
    "tensorflow.where": "doc",
    "tensorflow.zeros": "doc",
    "tensorflow.Module": "doc",
    "tensorflow.Tensor": "doc",
    "tensorflow.compat": "doc",
    "tensorflow.concat": "doc",
    "tensorflow.config": "doc",
    "tensorflow.device": "doc",
    "tensorflow.divide": "doc",
    "tensorflow.linalg": "doc",
    "tensorflow.lookup": "doc",
    "tensorflow.matmul": "doc",
    "tensorflow.nn.elu": "doc",
    "tensorflow.ragged": "doc",
    "tensorflow.random": "doc",
    "tensorflow.sparse": "doc",
    "tensorflow.argsort": "doc",
    "tensorflow.nn.gelu": "doc",
    "tensorflow.nn.relu": "doc",
    "tensorflow.nn.selu": "doc",
    "tensorflow.nn.tanh": "doc",
    "tensorflow.one_hot": "doc",
    "tensorflow.raw_ops": "doc",
    "tensorflow.reshape": "doc",
    "tensorflow.reverse": "doc",
    "tensorflow.shape_n": "doc",
    "tensorflow.sigmoid": "doc",
    "tensorflow.squeeze": "doc",
    "tensorflow.truediv": "doc",
    "tensorflow.TypeSpec": "doc",
    "tensorflow.as_dtype": "doc",
    "tensorflow.autodiff": "doc",
    "tensorflow.function": "doc",
    "tensorflow.io.gfile": "doc",
    "tensorflow.linspace": "doc",
    "tensorflow.math.abs": "doc",
    "tensorflow.math.add": "doc",
    "tensorflow.math.cos": "doc",
    "tensorflow.math.erf": "doc",
    "tensorflow.math.exp": "doc",
    "tensorflow.math.log": "doc",
    "tensorflow.math.mod": "doc",
    "tensorflow.math.pow": "doc",
    "tensorflow.math.sin": "doc",
    "tensorflow.math.tan": "doc",
    "tensorflow.nn.crelu": "doc",
    "tensorflow.nn.relu6": "doc",
    "tensorflow.gather_nd": "doc",
    "tensorflow.is_tensor": "doc",
    "tensorflow.linalg.lu": "doc",
    "tensorflow.linalg.qr": "doc",
    "tensorflow.math.asin": "doc",
    "tensorflow.math.atan": "doc",
    "tensorflow.math.conj": "doc",
    "tensorflow.math.cosh": "doc",
    "tensorflow.math.erfc": "doc",
    "tensorflow.math.imag": "doc",
    "tensorflow.math.less": "doc",
    "tensorflow.math.real": "doc",
    "tensorflow.math.rint": "doc",
    "tensorflow.math.sign": "doc",
    "tensorflow.math.sinh": "doc",
    "tensorflow.math.sqrt": "doc",
    "tensorflow.math.tanh": "doc",
    "tensorflow.math.zeta": "doc",
    "tensorflow.nn.conv1d": "doc",
    "tensorflow.nn.conv2d": "doc",
    "tensorflow.nn.conv3d": "doc",
    "tensorflow.ones_like": "doc",
    "tensorflow.sysconfig": "doc",
    "tensorflow.tensordot": "doc",
    "tensorflow.compat.v1": "doc",
    "tensorflow.DeviceSpec": "doc",
    "tensorflow.graph_util": "doc",
    "tensorflow.image.psnr": "doc",
    "tensorflow.image.ssim": "doc",
    "tensorflow.linalg.det": "doc",
    "tensorflow.linalg.eig": "doc",
    "tensorflow.linalg.eye": "doc",
    "tensorflow.linalg.inv": "doc",
    "tensorflow.linalg.svd": "doc",
    "tensorflow.math.add_n": "doc",
    "tensorflow.math.asinh": "doc",
    "tensorflow.math.atan2": "doc",
    "tensorflow.math.atanh": "doc",
    "tensorflow.math.equal": "doc",
    "tensorflow.math.expm1": "doc",
    "tensorflow.math.lbeta": "doc",
    "tensorflow.math.log1p": "doc",
    "tensorflow.math.ndtri": "doc",
    "tensorflow.math.round": "doc",
    "tensorflow.math.rsqrt": "doc",
    "tensorflow.math.top_k": "doc",
    "tensorflow.math.xdivy": "doc",
    "tensorflow.math.xlogy": "doc",
    "tensorflow.name_scope": "doc",
    "tensorflow.nn.l2_loss": "doc",
    "tensorflow.nn.sigmoid": "doc",
    "tensorflow.raw_ops.If": "doc",
    "tensorflow.raw_ops.Lu": "doc",
    "tensorflow.raw_ops.Qr": "doc",
    "tensorflow.reduce_all": "doc",
    "tensorflow.scatter_nd": "doc",
    "tensorflow.sparse.add": "doc",
    "tensorflow.sparse.eye": "doc",
    "tensorflow.while_loop": "doc",
    "tensorflow.image.rot90": "doc",
    "tensorflow.linalg.diag": "doc",
    "tensorflow.linalg.eigh": "doc",
    "tensorflow.linalg.expm": "doc",
    "tensorflow.linalg.logm": "doc",
    "tensorflow.linalg.norm": "doc",
    "tensorflow.linalg.pinv": "doc",
    "tensorflow.lite.OpsSet": "doc",
    "tensorflow.math.argmax": "doc",
    "tensorflow.math.argmin": "doc",
    "tensorflow.math.cumsum": "doc",
    "tensorflow.math.divide": "doc",
    "tensorflow.math.erfinv": "doc",
    "tensorflow.math.igamma": "doc",
    "tensorflow.math.is_inf": "doc",
    "tensorflow.math.is_nan": "doc",
    "tensorflow.math.lgamma": "doc",
    "tensorflow.math.square": "doc",
    "tensorflow.metrics.kld": "doc",
    "tensorflow.metrics.mae": "doc",
    "tensorflow.nn.avg_pool": "doc",
    "tensorflow.nn.bias_add": "doc",
    "tensorflow.nn.ctc_loss": "doc",
    "tensorflow.nn.max_pool": "doc",
    "tensorflow.raw_ops.Abs": "doc",
    "tensorflow.raw_ops.Add": "doc",
    "tensorflow.raw_ops.All": "doc",
    "tensorflow.raw_ops.Any": "doc",
    "tensorflow.raw_ops.Cos": "doc",
    "tensorflow.raw_ops.Div": "doc",
    "tensorflow.raw_ops.Eig": "doc",
    "tensorflow.raw_ops.Elu": "doc",
    "tensorflow.raw_ops.Erf": "doc",
    "tensorflow.raw_ops.Exp": "doc",
    "tensorflow.raw_ops.FFT": "doc",
    "tensorflow.raw_ops.For": "doc",
    "tensorflow.raw_ops.Inv": "doc",
    "tensorflow.raw_ops.LRN": "doc",
    "tensorflow.raw_ops.Log": "doc",
    "tensorflow.raw_ops.Max": "doc",
    "tensorflow.raw_ops.Min": "doc",
    "tensorflow.raw_ops.Mod": "doc",
    "tensorflow.raw_ops.Mul": "doc",
    "tensorflow.raw_ops.Neg": "doc",
    "tensorflow.raw_ops.Pad": "doc",
    "tensorflow.raw_ops.Pow": "doc",
    "tensorflow.raw_ops.Sin": "doc",
    "tensorflow.raw_ops.Sub": "doc",
    "tensorflow.raw_ops.Sum": "doc",
    "tensorflow.raw_ops.Svd": "doc",
    "tensorflow.raw_ops.Tan": "doc",
    "tensorflow.sparse.mask": "doc",
    "tensorflow.data.Dataset": "doc",
    "tensorflow.image.resize": "doc",
    "tensorflow.keras.models": "doc",
    "tensorflow.linalg.cross": "doc",
    "tensorflow.linalg.lstsq": "doc",
    "tensorflow.linalg.sqrtm": "doc",
    "tensorflow.math.betainc": "doc",
    "tensorflow.math.cumprod": "doc",
    "tensorflow.math.digamma": "doc",
    "tensorflow.math.erfcinv": "doc",
    "tensorflow.math.igammac": "doc",
    "tensorflow.math.maximum": "doc",
    "tensorflow.math.minimum": "doc",
    "tensorflow.math.polyval": "doc",
    "tensorflow.math.sigmoid": "doc",
    "tensorflow.math.softmax": "doc",
    "tensorflow.math.special": "doc",
    "tensorflow.math.truediv": "doc",
    "tensorflow.math.xlog1py": "doc",
    "tensorflow.metrics.mape": "doc",
    "tensorflow.metrics.msle": "doc",
    "tensorflow.ragged.cross": "doc",
    "tensorflow.ragged.range": "doc",
    "tensorflow.ragged.stack": "doc",
    "tensorflow.random.gamma": "doc",
    "tensorflow.raw_ops.Acos": "doc",
    "tensorflow.raw_ops.AddN": "doc",
    "tensorflow.raw_ops.Asin": "doc",
    "tensorflow.raw_ops.Atan": "doc",
    "tensorflow.raw_ops.Case": "doc",
    "tensorflow.raw_ops.Cast": "doc",
    "tensorflow.raw_ops.Ceil": "doc",
    "tensorflow.raw_ops.Conj": "doc",
    "tensorflow.raw_ops.Copy": "doc",
    "tensorflow.raw_ops.Cosh": "doc",
    "tensorflow.raw_ops.Diag": "doc",
    "tensorflow.raw_ops.Erfc": "doc",
    "tensorflow.raw_ops.Exit": "doc",
    "tensorflow.raw_ops.Fact": "doc",
    "tensorflow.raw_ops.Fill": "doc",
    "tensorflow.raw_ops.IFFT": "doc",
    "tensorflow.raw_ops.Imag": "doc",
    "tensorflow.raw_ops.Less": "doc",
    "tensorflow.raw_ops.Mean": "doc",
    "tensorflow.raw_ops.Mfcc": "doc",
    "tensorflow.raw_ops.NoOp": "doc",
    "tensorflow.raw_ops.Pack": "doc",
    "tensorflow.raw_ops.Prod": "doc",
    "tensorflow.raw_ops.RFFT": "doc",
    "tensorflow.raw_ops.Rank": "doc",
    "tensorflow.raw_ops.Real": "doc",
    "tensorflow.raw_ops.Recv": "doc",
    "tensorflow.raw_ops.Relu": "doc",
    "tensorflow.raw_ops.Rint": "doc",
    "tensorflow.raw_ops.Roll": "doc",
    "tensorflow.raw_ops.Save": "doc",
    "tensorflow.raw_ops.Selu": "doc",
    "tensorflow.raw_ops.Send": "doc",
    "tensorflow.raw_ops.Sign": "doc",
    "tensorflow.raw_ops.Sinh": "doc",
    "tensorflow.raw_ops.Size": "doc",
    "tensorflow.raw_ops.Sqrt": "doc",
    "tensorflow.raw_ops.Tanh": "doc",
    "tensorflow.raw_ops.Tile": "doc",
    "tensorflow.raw_ops.TopK": "doc",
    "tensorflow.raw_ops.Zeta": "doc",
    "tensorflow.signal.frame": "doc",
    "tensorflow.sparse.cross": "doc",
    "tensorflow.sparse.split": "doc",
    "tensorflow.train.JobDef": "doc",
    "tensorflow.compat.v1.io": "doc",
    "tensorflow.compat.v1.nn": "doc",
    "tensorflow.compat.v1.qr": "doc",
    "tensorflow.compat.as_str": "doc",
    "tensorflow.data.Iterator": "doc",
    "tensorflow.image.is_jpeg": "doc",
    "tensorflow.io.decode_raw": "doc",
    "tensorflow.io.gfile.copy": "doc",
    "tensorflow.io.gfile.glob": "doc",
    "tensorflow.io.gfile.stat": "doc",
    "tensorflow.io.gfile.walk": "doc",
    "tensorflow.io.write_file": "doc",
    "tensorflow.linalg.einsum": "doc",
    "tensorflow.linalg.matmul": "doc",
    "tensorflow.linalg.matvec": "doc",
    "tensorflow.lite.Optimize": "doc",
    "tensorflow.math.bincount": "doc",
    "tensorflow.math.in_top_k": "doc",
    "tensorflow.math.multiply": "doc",
    "tensorflow.math.negative": "doc",
    "tensorflow.math.softplus": "doc",
    "tensorflow.math.softsign": "doc",
    "tensorflow.math.subtract": "doc",
    "tensorflow.metrics.hinge": "doc",
    "tensorflow.nn.avg_pool1d": "doc",
    "tensorflow.nn.avg_pool2d": "doc",
    "tensorflow.nn.avg_pool3d": "doc",
    "tensorflow.nn.dilation2d": "doc",
    "tensorflow.nn.leaky_relu": "doc",
    "tensorflow.nn.max_pool1d": "doc",
    "tensorflow.nn.max_pool2d": "doc",
    "tensorflow.nn.max_pool3d": "doc",
    "tensorflow.random.normal": "doc",
    "tensorflow.raw_ops.Abort": "doc",
    "tensorflow.raw_ops.Acosh": "doc",
    "tensorflow.raw_ops.AddV2": "doc",
    "tensorflow.raw_ops.Angle": "doc",
    "tensorflow.raw_ops.Asinh": "doc",
    "tensorflow.raw_ops.Atan2": "doc",
    "tensorflow.raw_ops.Atanh": "doc",
    "tensorflow.raw_ops.Batch": "doc",
    "tensorflow.raw_ops.Const": "doc",
    "tensorflow.raw_ops.Cross": "doc",
    "tensorflow.raw_ops.Dawsn": "doc",
    "tensorflow.raw_ops.Empty": "doc",
    "tensorflow.raw_ops.Enter": "doc",
    "tensorflow.raw_ops.Equal": "doc",
    "tensorflow.raw_ops.Expm1": "doc",
    "tensorflow.raw_ops.FFT2D": "doc",
    "tensorflow.raw_ops.FFT3D": "doc",
    "tensorflow.raw_ops.IRFFT": "doc",
    "tensorflow.raw_ops.IsInf": "doc",
    "tensorflow.raw_ops.IsNan": "doc",
    "tensorflow.raw_ops.Log1p": "doc",
    "tensorflow.raw_ops.Merge": "doc",
    "tensorflow.raw_ops.Ndtri": "doc",
    "tensorflow.raw_ops.PadV2": "doc",
    "tensorflow.raw_ops.Print": "doc",
    "tensorflow.raw_ops.Range": "doc",
    "tensorflow.raw_ops.Relu6": "doc",
    "tensorflow.raw_ops.Round": "doc",
    "tensorflow.raw_ops.Rsqrt": "doc",
    "tensorflow.raw_ops.Shape": "doc",
    "tensorflow.raw_ops.Split": "doc",
    "tensorflow.raw_ops.Stack": "doc",
    "tensorflow.raw_ops.Stage": "doc",
    "tensorflow.raw_ops.Where": "doc",
    "tensorflow.raw_ops.Xdivy": "doc",
    "tensorflow.raw_ops.Xlogy": "doc",
    "tensorflow.sparse.concat": "doc",
    "tensorflow.sparse.retain": "doc",
    "tensorflow.strings.upper": "doc",
    "tensorflow.summary.audio": "doc",
    "tensorflow.summary.flush": "doc",
    "tensorflow.summary.image": "doc",
    "tensorflow.train.Feature": "doc",
    "tensorflow.compat.v1.abs": "doc",
    "tensorflow.compat.v1.add": "doc",
    "tensorflow.compat.v1.app": "doc",
    "tensorflow.compat.v1.cos": "doc",
    "tensorflow.compat.v1.div": "doc",
    "tensorflow.compat.v1.erf": "doc",
    "tensorflow.compat.v1.exp": "doc",
    "tensorflow.compat.v1.eye": "doc",
    "tensorflow.compat.v1.fft": "doc",
    "tensorflow.compat.v1.log": "doc",
    "tensorflow.compat.v1.mod": "doc",
    "tensorflow.compat.v1.pow": "doc",
    "tensorflow.compat.v1.sin": "doc",
    "tensorflow.compat.v1.svd": "doc",
    "tensorflow.compat.v1.tan": "doc",
    "tensorflow.compat.v1.tpu": "doc",
    "tensorflow.compat.v1.xla": "doc",
    "tensorflow.compat.as_text": "doc",
    "tensorflow.errors.OpError": "doc",
    "tensorflow.estimator.Head": "doc",
    "tensorflow.io.gfile.GFile": "doc",
    "tensorflow.io.gfile.isdir": "doc",
    "tensorflow.io.gfile.mkdir": "doc",
    "tensorflow.keras.wrappers": "doc",
    "tensorflow.linalg.adjoint": "doc",
    "tensorflow.linalg.eigvals": "doc",
    "tensorflow.math.bessel_i0": "doc",
    "tensorflow.math.bessel_i1": "doc",
    "tensorflow.math.is_finite": "doc",
    "tensorflow.math.nextafter": "doc",
    "tensorflow.math.not_equal": "doc",
    "tensorflow.math.polygamma": "doc",
    "tensorflow.metrics.Recall": "doc",
    "tensorflow.nest.is_nested": "doc",
    "tensorflow.random.poisson": "doc",
    "tensorflow.random.shuffle": "doc",
    "tensorflow.random.uniform": "doc",
    "tensorflow.raw_ops.ArgMax": "doc",
    "tensorflow.raw_ops.ArgMin": "doc",
    "tensorflow.raw_ops.Assert": "doc",
    "tensorflow.raw_ops.Assign": "doc",
    "tensorflow.raw_ops.Concat": "doc",
    "tensorflow.raw_ops.Conv2D": "doc",
    "tensorflow.raw_ops.Conv3D": "doc",
    "tensorflow.raw_ops.Cumsum": "doc",
    "tensorflow.raw_ops.Einsum": "doc",
    "tensorflow.raw_ops.Erfinv": "doc",
    "tensorflow.raw_ops.Expint": "doc",
    "tensorflow.raw_ops.IFFT2D": "doc",
    "tensorflow.raw_ops.IFFT3D": "doc",
    "tensorflow.raw_ops.Igamma": "doc",
    "tensorflow.raw_ops.InTopK": "doc",
    "tensorflow.raw_ops.Invert": "doc",
    "tensorflow.raw_ops.L2Loss": "doc",
    "tensorflow.raw_ops.Lgamma": "doc",
    "tensorflow.raw_ops.MatMul": "doc",
    "tensorflow.raw_ops.OneHot": "doc",
    "tensorflow.raw_ops.PyFunc": "doc",
    "tensorflow.raw_ops.RFFT2D": "doc",
    "tensorflow.raw_ops.RFFT3D": "doc",
    "tensorflow.raw_ops.SaveV2": "doc",
    "tensorflow.raw_ops.Select": "doc",
    "tensorflow.raw_ops.ShapeN": "doc",
    "tensorflow.raw_ops.Spence": "doc",
    "tensorflow.raw_ops.SplitV": "doc",
    "tensorflow.raw_ops.Square": "doc",
    "tensorflow.raw_ops.Substr": "doc",
    "tensorflow.raw_ops.Switch": "doc",
    "tensorflow.raw_ops.ToBool": "doc",
    "tensorflow.raw_ops.TopKV2": "doc",
    "tensorflow.raw_ops.Unique": "doc",
    "tensorflow.raw_ops.Unpack": "doc",
    "tensorflow.sparse.maximum": "doc",
    "tensorflow.sparse.minimum": "doc",
    "tensorflow.sparse.reshape": "doc",
    "tensorflow.sparse.softmax": "doc",
    "tensorflow.strings.length": "doc",
    "tensorflow.test.Benchmark": "doc",
    "tensorflow.train.Features": "doc",
    "tensorflow.compat.v1.asin": "doc",
    "tensorflow.compat.v1.atan": "doc",
    "tensorflow.compat.v1.case": "doc",
    "tensorflow.compat.v1.cast": "doc",
    "tensorflow.compat.v1.conj": "doc",
    "tensorflow.compat.v1.cosh": "doc",
    "tensorflow.compat.v1.data": "doc",
    "tensorflow.compat.v1.diag": "doc",
    "tensorflow.compat.v1.erfc": "doc",
    "tensorflow.compat.v1.fill": "doc",
    "tensorflow.compat.v1.ifft": "doc",
    "tensorflow.compat.v1.imag": "doc",
    "tensorflow.compat.v1.less": "doc",
    "tensorflow.compat.v1.lite": "doc",
    "tensorflow.compat.v1.math": "doc",
    "tensorflow.compat.v1.mlir": "doc",
    "tensorflow.compat.v1.nest": "doc",
    "tensorflow.compat.v1.norm": "doc",
    "tensorflow.compat.v1.ones": "doc",
    "tensorflow.compat.v1.rank": "doc",
    "tensorflow.compat.v1.real": "doc",
    "tensorflow.compat.v1.rint": "doc",
    "tensorflow.compat.v1.roll": "doc",
    "tensorflow.compat.v1.scan": "doc",
    "tensorflow.compat.v1.sets": "doc",
    "tensorflow.compat.v1.sign": "doc",
    "tensorflow.compat.v1.sinh": "doc",
    "tensorflow.compat.v1.size": "doc",
    "tensorflow.compat.v1.sort": "doc",
    "tensorflow.compat.v1.sqrt": "doc",
    "tensorflow.compat.v1.tanh": "doc",
    "tensorflow.compat.v1.test": "doc",
    "tensorflow.compat.v1.tile": "doc",
    "tensorflow.compat.v1.zeta": "doc",
    "tensorflow.compat.as_bytes": "doc",
    "tensorflow.dtypes.as_dtype": "doc",
    "tensorflow.io.gfile.exists": "doc",
    "tensorflow.io.gfile.rename": "doc",
    "tensorflow.io.gfile.rmtree": "doc",
    "tensorflow.linalg.eigvalsh": "doc",
    "tensorflow.linalg.set_diag": "doc",
    "tensorflow.lite.TargetSpec": "doc",
    "tensorflow.math.bessel_i0e": "doc",
    "tensorflow.math.bessel_i1e": "doc",
    "tensorflow.math.less_equal": "doc",
    "tensorflow.math.reciprocal": "doc",
    "tensorflow.math.reduce_all": "doc",
    "tensorflow.math.reduce_any": "doc",
    "tensorflow.math.reduce_max": "doc",
    "tensorflow.math.reduce_min": "doc",
    "tensorflow.math.reduce_std": "doc",
    "tensorflow.math.reduce_sum": "doc",
    "tensorflow.math.scalar_mul": "doc",
    "tensorflow.metrics.MeanIoU": "doc",
    "tensorflow.metrics.logcosh": "doc",
    "tensorflow.metrics.poisson": "doc",
    "tensorflow.queue.FIFOQueue": "doc",
    "tensorflow.queue.QueueBase": "doc",
    "tensorflow.ragged.constant": "doc",
    "tensorflow.random.set_seed": "doc",
    "tensorflow.raw_ops.AvgPool": "doc",
    "tensorflow.raw_ops.Betainc": "doc",
    "tensorflow.raw_ops.BiasAdd": "doc",
    "tensorflow.raw_ops.Bitcast": "doc",
    "tensorflow.raw_ops.CTCLoss": "doc",
    "tensorflow.raw_ops.Complex": "doc",
    "tensorflow.raw_ops.Cumprod": "doc",
    "tensorflow.raw_ops.Digamma": "doc",
    "tensorflow.raw_ops.EluGrad": "doc",
    "tensorflow.raw_ops.IRFFT2D": "doc",
    "tensorflow.raw_ops.IRFFT3D": "doc",
    "tensorflow.raw_ops.Igammac": "doc",
    "tensorflow.raw_ops.InvGrad": "doc",
    "tensorflow.raw_ops.LRNGrad": "doc",
    "tensorflow.raw_ops.MapPeek": "doc",
    "tensorflow.raw_ops.MapSize": "doc",
    "tensorflow.raw_ops.Maximum": "doc",
    "tensorflow.raw_ops.Minimum": "doc",
    "tensorflow.raw_ops.MutexV2": "doc",
    "tensorflow.raw_ops.PrintV2": "doc",
    "tensorflow.raw_ops.RealDiv": "doc",
    "tensorflow.raw_ops.RefExit": "doc",
    "tensorflow.raw_ops.Reshape": "doc",
    "tensorflow.raw_ops.Restore": "doc",
    "tensorflow.raw_ops.Reverse": "doc",
    "tensorflow.raw_ops.RngSkip": "doc",
    "tensorflow.raw_ops.SetSize": "doc",
    "tensorflow.raw_ops.Sigmoid": "doc",
    "tensorflow.raw_ops.Softmax": "doc",
    "tensorflow.raw_ops.Squeeze": "doc",
    "tensorflow.raw_ops.StackV2": "doc",
    "tensorflow.raw_ops.Unbatch": "doc",
    "tensorflow.raw_ops.Unstage": "doc",
    "tensorflow.raw_ops.Xlog1py": "doc",
    "tensorflow.sets.difference": "doc",
    "tensorflow.sparse.bincount": "doc",
    "tensorflow.sparse.to_dense": "doc",
    "tensorflow.train.ServerDef": "doc",
    "tensorflow.compat.v1.DType": "doc",
    "tensorflow.compat.v1.Event": "doc",
    "tensorflow.compat.v1.Graph": "doc",
    "tensorflow.compat.v1.Print": "doc",
    "tensorflow.compat.v1.add_n": "doc",
    "tensorflow.compat.v1.asinh": "doc",
    "tensorflow.compat.v1.atan2": "doc",
    "tensorflow.compat.v1.atanh": "doc",
    "tensorflow.compat.v1.audio": "doc",
    "tensorflow.compat.v1.cross": "doc",
    "tensorflow.compat.v1.equal": "doc",
    "tensorflow.compat.v1.expm1": "doc",
    "tensorflow.compat.v1.fft2d": "doc",
    "tensorflow.compat.v1.fft3d": "doc",
    "tensorflow.compat.v1.flags": "doc",
    "tensorflow.compat.v1.gfile": "doc",
    "tensorflow.compat.v1.group": "doc",
    "tensorflow.compat.v1.image": "doc",
    "tensorflow.compat.v1.keras": "doc",
    "tensorflow.compat.v1.lbeta": "doc",
    "tensorflow.compat.v1.log1p": "doc",
    "tensorflow.compat.v1.manip": "doc",
    "tensorflow.compat.v1.no_op": "doc",
    "tensorflow.compat.v1.print": "doc",
    "tensorflow.compat.v1.queue": "doc",
    "tensorflow.compat.v1.range": "doc",
    "tensorflow.compat.v1.round": "doc",
    "tensorflow.compat.v1.rsqrt": "doc",
    "tensorflow.compat.v1.shape": "doc",
    "tensorflow.compat.v1.split": "doc",
    "tensorflow.compat.v1.stack": "doc",
    "tensorflow.compat.v1.train": "doc",
    "tensorflow.compat.v1.tuple": "doc",
    "tensorflow.compat.v1.types": "doc",
    "tensorflow.compat.v1.where": "doc",
    "tensorflow.compat.v1.zeros": "doc",
    "tensorflow.audio.decode_wav": "doc",
    "tensorflow.audio.encode_wav": "doc",
    "tensorflow.config.optimizer": "doc",
    "tensorflow.config.threading": "doc",
    "tensorflow.data.DatasetSpec": "doc",
    "tensorflow.image.adjust_hue": "doc",
    "tensorflow.image.decode_bmp": "doc",
    "tensorflow.image.decode_gif": "doc",
    "tensorflow.image.decode_png": "doc",
    "tensorflow.image.encode_png": "doc",
    "tensorflow.image.hsv_to_rgb": "doc",
    "tensorflow.image.random_hue": "doc",
    "tensorflow.image.rgb_to_hsv": "doc",
    "tensorflow.image.rgb_to_yiq": "doc",
    "tensorflow.image.rgb_to_yuv": "doc",
    "tensorflow.image.yiq_to_rgb": "doc",
    "tensorflow.image.yuv_to_rgb": "doc",
    "tensorflow.linalg.band_part": "doc",
    "tensorflow.linalg.diag_part": "doc",
    "tensorflow.linalg.normalize": "doc",
    "tensorflow.linalg.tensordot": "doc",
    "tensorflow.lite.Interpreter": "doc",
    "tensorflow.math.log_sigmoid": "doc",
    "tensorflow.math.log_softmax": "doc",
    "tensorflow.math.logical_and": "doc",
    "tensorflow.math.logical_not": "doc",
    "tensorflow.math.logical_xor": "doc",
    "tensorflow.math.reduce_mean": "doc",
    "tensorflow.math.reduce_prod": "doc",
    "tensorflow.math.segment_max": "doc",
    "tensorflow.math.segment_min": "doc",
    "tensorflow.math.segment_sum": "doc",
    "tensorflow.metrics.log_cosh": "doc",
    "tensorflow.optimizers.Nadam": "doc",
    "tensorflow.random.Algorithm": "doc",
    "tensorflow.random.Generator": "doc",
    "tensorflow.raw_ops.AllToAll": "doc",
    "tensorflow.raw_ops.AsString": "doc",
    "tensorflow.raw_ops.BatchFFT": "doc",
    "tensorflow.raw_ops.BesselI0": "doc",
    "tensorflow.raw_ops.BesselI1": "doc",
    "tensorflow.raw_ops.BesselJ0": "doc",
    "tensorflow.raw_ops.BesselJ1": "doc",
    "tensorflow.raw_ops.BesselK0": "doc",
    "tensorflow.raw_ops.BesselK1": "doc",
    "tensorflow.raw_ops.BesselY0": "doc",
    "tensorflow.raw_ops.BesselY1": "doc",
    "tensorflow.raw_ops.Bincount": "doc",
    "tensorflow.raw_ops.Cholesky": "doc",
    "tensorflow.raw_ops.ConcatV2": "doc",
    "tensorflow.raw_ops.CopyHost": "doc",
    "tensorflow.raw_ops.CudnnRNN": "doc",
    "tensorflow.raw_ops.DeepCopy": "doc",
    "tensorflow.raw_ops.DiagPart": "doc",
    "tensorflow.raw_ops.DivNoNan": "doc",
    "tensorflow.raw_ops.FloorDiv": "doc",
    "tensorflow.raw_ops.GatherV2": "doc",
    "tensorflow.raw_ops.HSVToRGB": "doc",
    "tensorflow.raw_ops.Identity": "doc",
    "tensorflow.raw_ops.InTopKV2": "doc",
    "tensorflow.raw_ops.IsFinite": "doc",
    "tensorflow.raw_ops.Iterator": "doc",
    "tensorflow.raw_ops.LinSpace": "doc",
    "tensorflow.raw_ops.ListDiff": "doc",
    "tensorflow.raw_ops.LoopCond": "doc",
    "tensorflow.raw_ops.MapDefun": "doc",
    "tensorflow.raw_ops.MapStage": "doc",
    "tensorflow.raw_ops.MulNoNan": "doc",
    "tensorflow.raw_ops.NotEqual": "doc",
    "tensorflow.raw_ops.OnesLike": "doc",
    "tensorflow.raw_ops.RGBToHSV": "doc",
    "tensorflow.raw_ops.RefMerge": "doc",
    "tensorflow.raw_ops.ReluGrad": "doc",
    "tensorflow.raw_ops.SelectV2": "doc",
    "tensorflow.raw_ops.SeluGrad": "doc",
    "tensorflow.raw_ops.Softplus": "doc",
    "tensorflow.raw_ops.Softsign": "doc",
    "tensorflow.raw_ops.SqrtGrad": "doc",
    "tensorflow.raw_ops.TanhGrad": "doc",
    "tensorflow.raw_ops.TileGrad": "doc",
    "tensorflow.raw_ops.UniqueV2": "doc",
    "tensorflow.train.Checkpoint": "doc",
    "tensorflow.train.ClusterDef": "doc",
    "tensorflow.xla.experimental": "doc",
    "tensorflow.compat.v1.Assert": "doc",
    "tensorflow.compat.v1.Module": "doc",
    "tensorflow.compat.v1.Tensor": "doc",
    "tensorflow.compat.v1.argmax": "doc",
    "tensorflow.compat.v1.argmin": "doc",
    "tensorflow.compat.v1.assign": "doc",
    "tensorflow.compat.v1.compat": "doc",
    "tensorflow.compat.v1.concat": "doc",
    "tensorflow.compat.v1.config": "doc",
    "tensorflow.compat.v1.cumsum": "doc",
    "tensorflow.compat.v1.device": "doc",
    "tensorflow.compat.v1.divide": "doc",
    "tensorflow.compat.v1.dtypes": "doc",
    "tensorflow.compat.v1.einsum": "doc",
    "tensorflow.compat.v1.errors": "doc",
    "tensorflow.compat.v1.ifft2d": "doc",
    "tensorflow.compat.v1.ifft3d": "doc",
    "tensorflow.compat.v1.igamma": "doc",
    "tensorflow.compat.v1.is_inf": "doc",
    "tensorflow.compat.v1.is_nan": "doc",
    "tensorflow.compat.v1.lgamma": "doc",
    "tensorflow.compat.v1.linalg": "doc",
    "tensorflow.compat.v1.lookup": "doc",
    "tensorflow.compat.v1.map_fn": "doc",
    "tensorflow.compat.v1.matmul": "doc",
    "tensorflow.compat.v1.nn.elu": "doc",
    "tensorflow.compat.v1.nn.lrn": "doc",
    "tensorflow.compat.v1.ragged": "doc",
    "tensorflow.compat.v1.random": "doc",
    "tensorflow.compat.v1.repeat": "doc",
    "tensorflow.compat.v1.signal": "doc",
    "tensorflow.compat.v1.sparse": "doc",
    "tensorflow.compat.v1.square": "doc",
    "tensorflow.compat.v1.substr": "doc",
    "tensorflow.compat.v1.unique": "doc",
    "tensorflow.compat.as_str_any": "doc",
    "tensorflow.image.decode_jpeg": "doc",
    "tensorflow.image.encode_jpeg": "doc",
    "tensorflow.image.random_crop": "doc",
    "tensorflow.image.sobel_edges": "doc",
    "tensorflow.initializers.ones": "doc",
    "tensorflow.keras.metrics.kld": "doc",
    "tensorflow.keras.metrics.mae": "doc",
    "tensorflow.lite.experimental": "doc",
    "tensorflow.math.accumulate_n": "doc",
    "tensorflow.math.l2_normalize": "doc",
    "tensorflow.math.segment_mean": "doc",
    "tensorflow.math.segment_prod": "doc",
    "tensorflow.math.sobol_sample": "doc",
    "tensorflow.mlir.experimental": "doc",
    "tensorflow.raw_ops.AdjustHue": "doc",
    "tensorflow.raw_ops.ApplyAdam": "doc",
    "tensorflow.raw_ops.ApplyFtrl": "doc",
    "tensorflow.raw_ops.AssignAdd": "doc",
    "tensorflow.raw_ops.AssignSub": "doc",
    "tensorflow.raw_ops.AvgPool3D": "doc",
    "tensorflow.raw_ops.BatchIFFT": "doc",
    "tensorflow.raw_ops.BesselI0e": "doc",
    "tensorflow.raw_ops.BesselI1e": "doc",
    "tensorflow.raw_ops.BesselK0e": "doc",
    "tensorflow.raw_ops.BesselK1e": "doc",
    "tensorflow.raw_ops.BiasAddV1": "doc",
    "tensorflow.raw_ops.BitwiseOr": "doc",
    "tensorflow.raw_ops.BlockLSTM": "doc",
    "tensorflow.raw_ops.Bucketize": "doc",
    "tensorflow.raw_ops.CTCLossV2": "doc",
    "tensorflow.raw_ops.CountUpTo": "doc",
    "tensorflow.raw_ops.DecodeBmp": "doc",
    "tensorflow.raw_ops.DecodeCSV": "doc",
    "tensorflow.raw_ops.DecodeGif": "doc",
    "tensorflow.raw_ops.DecodePng": "doc",
    "tensorflow.raw_ops.DecodeRaw": "doc",
    "tensorflow.raw_ops.DecodeWav": "doc",
    "tensorflow.raw_ops.EncodePng": "doc",
    "tensorflow.raw_ops.EncodeWav": "doc",
    "tensorflow.raw_ops.FIFOQueue": "doc",
    "tensorflow.raw_ops.FakeParam": "doc",
    "tensorflow.raw_ops.HashTable": "doc",
    "tensorflow.raw_ops.IdentityN": "doc",
    "tensorflow.raw_ops.LeakyRelu": "doc",
    "tensorflow.raw_ops.LeftShift": "doc",
    "tensorflow.raw_ops.LessEqual": "doc",
    "tensorflow.raw_ops.LogicalOr": "doc",
    "tensorflow.raw_ops.MirrorPad": "doc",
    "tensorflow.raw_ops.MutexLock": "doc",
    "tensorflow.raw_ops.NextAfter": "doc",
    "tensorflow.raw_ops.Polygamma": "doc",
    "tensorflow.raw_ops.QueueSize": "doc",
    "tensorflow.raw_ops.RefSelect": "doc",
    "tensorflow.raw_ops.RefSwitch": "doc",
    "tensorflow.raw_ops.Relu6Grad": "doc",
    "tensorflow.raw_ops.RestoreV2": "doc",
    "tensorflow.raw_ops.ReverseV2": "doc",
    "tensorflow.raw_ops.RsqrtGrad": "doc",
    "tensorflow.raw_ops.ScatterNd": "doc",
    "tensorflow.raw_ops.SparseAdd": "doc",
    "tensorflow.raw_ops.StackPush": "doc",
    "tensorflow.raw_ops.Timestamp": "doc",
    "tensorflow.raw_ops.ZerosLike": "doc",
    "tensorflow.sparse.from_dense": "doc",
    "tensorflow.sparse.reduce_max": "doc",
    "tensorflow.sparse.reduce_sum": "doc",
    "tensorflow.strings.to_number": "doc",
    "tensorflow.summary.record_if": "doc",
    "tensorflow.sysconfig.get_lib": "doc",
    "tensorflow.train.ClusterSpec": "doc",
    "tensorflow.compat.v1.NodeDef": "doc",
    "tensorflow.compat.v1.OpError": "doc",
    "tensorflow.compat.v1.Session": "doc",
    "tensorflow.compat.v1.Summary": "doc",
    "tensorflow.compat.v1.app.run": "doc",
    "tensorflow.compat.v1.arg_max": "doc",
    "tensorflow.compat.v1.arg_min": "doc",
    "tensorflow.compat.v1.argsort": "doc",
    "tensorflow.compat.v1.betainc": "doc",
    "tensorflow.compat.v1.bitcast": "doc",
    "tensorflow.compat.v1.bitwise": "doc",
    "tensorflow.compat.v1.cumprod": "doc",
    "tensorflow.compat.v1.digamma": "doc",
    "tensorflow.compat.v1.igammac": "doc",
    "tensorflow.compat.v1.logging": "doc",
    "tensorflow.compat.v1.maximum": "doc",
    "tensorflow.compat.v1.metrics": "doc",
    "tensorflow.compat.v1.minimum": "doc",
    "tensorflow.compat.v1.nn.relu": "doc",
    "tensorflow.compat.v1.nn.selu": "doc",
    "tensorflow.compat.v1.nn.silu": "doc",
    "tensorflow.compat.v1.nn.tanh": "doc",
    "tensorflow.compat.v1.one_hot": "doc",
    "tensorflow.compat.v1.py_func": "doc",
    "tensorflow.compat.v1.reshape": "doc",
    "tensorflow.compat.v1.reverse": "doc",
    "tensorflow.compat.v1.shape_n": "doc",
    "tensorflow.compat.v1.sigmoid": "doc",
    "tensorflow.compat.v1.squeeze": "doc",
    "tensorflow.compat.v1.strings": "doc",
    "tensorflow.compat.v1.summary": "doc",
    "tensorflow.compat.v1.truediv": "doc",
    "tensorflow.compat.v1.unstack": "doc",
    "tensorflow.compat.v1.version": "doc",
    "tensorflow.estimator.EvalSpec": "doc",
    "tensorflow.image.ResizeMethod": "doc",
    "tensorflow.image.adjust_gamma": "doc",
    "tensorflow.image.central_crop": "doc",
    "tensorflow.image.decode_image": "doc",
    "tensorflow.image.flip_up_down": "doc",
    "tensorflow.initializers.Zeros": "doc",
    "tensorflow.initializers.zeros": "doc",
    "tensorflow.keras.metrics.mape": "doc",
    "tensorflow.keras.metrics.msle": "doc",
    "tensorflow.linalg.global_norm": "doc",
    "tensorflow.linalg.matrix_rank": "doc",
    "tensorflow.linalg.tensor_diag": "doc",
    "tensorflow.math.divide_no_nan": "doc",
    "tensorflow.math.greater_equal": "doc",
    "tensorflow.math.special.dawsn": "doc",
    "tensorflow.math.zero_fraction": "doc",
    "tensorflow.metrics.MeanTensor": "doc",
    "tensorflow.optimizers.Adagrad": "doc",
    "tensorflow.random.categorical": "doc",
    "tensorflow.raw_ops.BatchFFT2D": "doc",
    "tensorflow.raw_ops.BatchFFT3D": "doc",
    "tensorflow.raw_ops.BitwiseAnd": "doc",
    "tensorflow.raw_ops.BitwiseXor": "doc",
    "tensorflow.raw_ops.CSVDataset": "doc",
    "tensorflow.raw_ops.ComplexAbs": "doc",
    "tensorflow.raw_ops.CudnnRNNV2": "doc",
    "tensorflow.raw_ops.CudnnRNNV3": "doc",
    "tensorflow.raw_ops.DecodeJpeg": "doc",
    "tensorflow.raw_ops.Dequantize": "doc",
    "tensorflow.raw_ops.Dilation2D": "doc",
    "tensorflow.raw_ops.EncodeJpeg": "doc",
    "tensorflow.raw_ops.ExpandDims": "doc",
    "tensorflow.raw_ops.FresnelCos": "doc",
    "tensorflow.raw_ops.FresnelSin": "doc",
    "tensorflow.raw_ops.IteratorV2": "doc",
    "tensorflow.raw_ops.LogSoftmax": "doc",
    "tensorflow.raw_ops.LogicalAnd": "doc",
    "tensorflow.raw_ops.LogicalNot": "doc",
    "tensorflow.raw_ops.LowerBound": "doc",
    "tensorflow.raw_ops.MapDataset": "doc",
    "tensorflow.raw_ops.MapUnstage": "doc",
    "tensorflow.raw_ops.MatrixDiag": "doc",
    "tensorflow.raw_ops.NcclReduce": "doc",
    "tensorflow.raw_ops.NthElement": "doc",
    "tensorflow.raw_ops.QuantizeV2": "doc",
    "tensorflow.raw_ops.RandomCrop": "doc",
    "tensorflow.raw_ops.ReaderRead": "doc",
    "tensorflow.raw_ops.Reciprocal": "doc",
    "tensorflow.raw_ops.ReduceJoin": "doc",
    "tensorflow.raw_ops.RemoteCall": "doc",
    "tensorflow.raw_ops.Requantize": "doc",
    "tensorflow.raw_ops.ResizeArea": "doc",
    "tensorflow.raw_ops.RightShift": "doc",
    "tensorflow.raw_ops.ScatterAdd": "doc",
    "tensorflow.raw_ops.ScatterDiv": "doc",
    "tensorflow.raw_ops.ScatterMax": "doc",
    "tensorflow.raw_ops.ScatterMin": "doc",
    "tensorflow.raw_ops.ScatterMul": "doc",
    "tensorflow.raw_ops.ScatterSub": "doc",
    "tensorflow.raw_ops.SdcaFprint": "doc",
    "tensorflow.raw_ops.SegmentMax": "doc",
    "tensorflow.raw_ops.SegmentMin": "doc",
    "tensorflow.raw_ops.SegmentSum": "doc",
    "tensorflow.raw_ops.SqlDataset": "doc",
    "tensorflow.raw_ops.StringJoin": "doc",
    "tensorflow.raw_ops.UpperBound": "doc",
    "tensorflow.raw_ops.VariableV2": "doc",
    "tensorflow.raw_ops.ZipDataset": "doc",
    "tensorflow.sparse.expand_dims": "doc",
    "tensorflow.sparse.reset_shape": "doc",
    "tensorflow.sparse.segment_sum": "doc",
    "tensorflow.compat.v1.TypeSpec": "doc",
    "tensorflow.compat.v1.as_dtype": "doc",
    "tensorflow.compat.v1.bincount": "doc",
    "tensorflow.compat.v1.constant": "doc",
    "tensorflow.compat.v1.function": "doc",
    "tensorflow.compat.v1.get_seed": "doc",
    "tensorflow.compat.v1.hessians": "doc",
    "tensorflow.compat.v1.identity": "doc",
    "tensorflow.compat.v1.io.gfile": "doc",
    "tensorflow.compat.v1.linspace": "doc",
    "tensorflow.compat.v1.math.abs": "doc",
    "tensorflow.compat.v1.math.add": "doc",
    "tensorflow.compat.v1.math.cos": "doc",
    "tensorflow.compat.v1.math.erf": "doc",
    "tensorflow.compat.v1.math.exp": "doc",
    "tensorflow.compat.v1.math.log": "doc",
    "tensorflow.compat.v1.math.mod": "doc",
    "tensorflow.compat.v1.math.pow": "doc",
    "tensorflow.compat.v1.math.sin": "doc",
    "tensorflow.compat.v1.math.tan": "doc",
    "tensorflow.compat.v1.meshgrid": "doc",
    "tensorflow.compat.v1.multiply": "doc",
    "tensorflow.compat.v1.negative": "doc",
    "tensorflow.compat.v1.nn.crelu": "doc",
    "tensorflow.compat.v1.nn.relu6": "doc",
    "tensorflow.compat.v1.nn.swish": "doc",
    "tensorflow.compat.v1.nn.top_k": "doc",
    "tensorflow.compat.v1.quantize": "doc",
    "tensorflow.compat.v1.spectral": "doc",
    "tensorflow.compat.v1.subtract": "doc",
    "tensorflow.compat.v1.to_float": "doc",
    "tensorflow.compat.v1.to_int32": "doc",
    "tensorflow.compat.v1.to_int64": "doc",
    "tensorflow.compat.v1.user_ops": "doc",
    "tensorflow.compat.v1.where_v2": "doc",
    "tensorflow.config.experimental": "doc",
    "tensorflow.estimator.TrainSpec": "doc",
    "tensorflow.experimental.dlpack": "doc",
    "tensorflow.keras.metrics.hinge": "doc",
    "tensorflow.keras.utils.Progbar": "doc",
    "tensorflow.linalg.experimental": "doc",
    "tensorflow.linalg.l2_normalize": "doc",
    "tensorflow.lookup.experimental": "doc",
    "tensorflow.math.special.expint": "doc",
    "tensorflow.math.special.spence": "doc",
    "tensorflow.queue.PriorityQueue": "doc",
    "tensorflow.ragged.boolean_mask": "doc",
    "tensorflow.ragged.cross_hashed": "doc",
    "tensorflow.random.experimental": "doc",
    "tensorflow.raw_ops.ApplyAdaMax": "doc",
    "tensorflow.raw_ops.ApplyFtrlV2": "doc",
    "tensorflow.raw_ops.AvgPoolGrad": "doc",
    "tensorflow.raw_ops.BatchIFFT2D": "doc",
    "tensorflow.raw_ops.BatchIFFT3D": "doc",
    "tensorflow.raw_ops.BatchMatMul": "doc",
    "tensorflow.raw_ops.BiasAddGrad": "doc",
    "tensorflow.raw_ops.BlockLSTMV2": "doc",
    "tensorflow.raw_ops.BroadcastTo": "doc",
    "tensorflow.raw_ops.ClipByValue": "doc",
    "tensorflow.raw_ops.DecodeImage": "doc",
    "tensorflow.raw_ops.EagerPyFunc": "doc",
    "tensorflow.raw_ops.EncodeProto": "doc",
    "tensorflow.raw_ops.EnsureShape": "doc",
    "tensorflow.raw_ops.FIFOQueueV2": "doc",
    "tensorflow.raw_ops.Fingerprint": "doc",
    "tensorflow.raw_ops.HashTableV2": "doc",
    "tensorflow.raw_ops.IgammaGradA": "doc",
    "tensorflow.raw_ops.ImportEvent": "doc",
    "tensorflow.raw_ops.LMDBDataset": "doc",
    "tensorflow.raw_ops.LoadDataset": "doc",
    "tensorflow.raw_ops.MatrixSolve": "doc",
    "tensorflow.raw_ops.MaxPoolGrad": "doc",
    "tensorflow.raw_ops.Multinomial": "doc",
    "tensorflow.raw_ops.ParseTensor": "doc",
    "tensorflow.raw_ops.QueueSizeV2": "doc",
    "tensorflow.raw_ops.RaggedCross": "doc",
    "tensorflow.raw_ops.RaggedRange": "doc",
    "tensorflow.raw_ops.RandomGamma": "doc",
    "tensorflow.raw_ops.RecordInput": "doc",
    "tensorflow.raw_ops.RefIdentity": "doc",
    "tensorflow.raw_ops.SaveDataset": "doc",
    "tensorflow.raw_ops.ScanDataset": "doc",
    "tensorflow.raw_ops.SegmentMean": "doc",
    "tensorflow.raw_ops.SegmentProd": "doc",
    "tensorflow.raw_ops.SigmoidGrad": "doc",
    "tensorflow.raw_ops.SkipDataset": "doc",
    "tensorflow.raw_ops.SobolSample": "doc",
    "tensorflow.raw_ops.SparseCross": "doc",
    "tensorflow.raw_ops.SparseSlice": "doc",
    "tensorflow.raw_ops.SparseSplit": "doc",
    "tensorflow.raw_ops.StackPushV2": "doc",
    "tensorflow.raw_ops.StatelessIf": "doc",
    "tensorflow.raw_ops.StringLower": "doc",
    "tensorflow.raw_ops.StringSplit": "doc",
    "tensorflow.raw_ops.StringStrip": "doc",
    "tensorflow.raw_ops.StringUpper": "doc",
    "tensorflow.raw_ops.TakeDataset": "doc",
    "tensorflow.raw_ops.TensorArray": "doc",
    "tensorflow.raw_ops.TruncateDiv": "doc",
    "tensorflow.raw_ops.TruncateMod": "doc",
    "tensorflow.raw_ops.UnbatchGrad": "doc",
    "tensorflow.raw_ops.VarHandleOp": "doc",
    "tensorflow.sparse.cross_hashed": "doc",
    "tensorflow.sparse.segment_mean": "doc",
    "tensorflow.sparse.to_indicator": "doc",
    "tensorflow.compat.v1.AttrValue": "doc",
    "tensorflow.compat.v1.Dimension": "doc",
    "tensorflow.compat.v1.FIFOQueue": "doc",
    "tensorflow.compat.v1.GraphKeys": "doc",
    "tensorflow.compat.v1.Operation": "doc",
    "tensorflow.compat.v1.QueueBase": "doc",
    "tensorflow.compat.v1.app.flags": "doc",
    "tensorflow.compat.v1.as_string": "doc",
    "tensorflow.compat.v1.autograph": "doc",
    "tensorflow.compat.v1.container": "doc",
    "tensorflow.compat.v1.debugging": "doc",
    "tensorflow.compat.v1.diag_part": "doc",
    "tensorflow.compat.v1.estimator": "doc",
    "tensorflow.compat.v1.floor_div": "doc",
    "tensorflow.compat.v1.gather_nd": "doc",
    "tensorflow.compat.v1.gradients": "doc",
    "tensorflow.compat.v1.is_finite": "doc",
    "tensorflow.compat.v1.is_tensor": "doc",
    "tensorflow.compat.v1.lin_space": "doc",
    "tensorflow.compat.v1.linalg.lu": "doc",
    "tensorflow.compat.v1.linalg.qr": "doc",
    "tensorflow.compat.v1.math.asin": "doc",
    "tensorflow.compat.v1.math.atan": "doc",
    "tensorflow.compat.v1.math.conj": "doc",
    "tensorflow.compat.v1.math.cosh": "doc",
    "tensorflow.compat.v1.math.erfc": "doc",
    "tensorflow.compat.v1.math.imag": "doc",
    "tensorflow.compat.v1.math.less": "doc",
    "tensorflow.compat.v1.math.real": "doc",
    "tensorflow.compat.v1.math.rint": "doc",
    "tensorflow.compat.v1.math.sign": "doc",
    "tensorflow.compat.v1.math.sinh": "doc",
    "tensorflow.compat.v1.math.sqrt": "doc",
    "tensorflow.compat.v1.math.tanh": "doc",
    "tensorflow.compat.v1.math.zeta": "doc",
    "tensorflow.compat.v1.nn.conv1d": "doc",
    "tensorflow.compat.v1.nn.conv2d": "doc",
    "tensorflow.compat.v1.nn.conv3d": "doc",
    "tensorflow.compat.v1.not_equal": "doc",
    "tensorflow.compat.v1.ones_like": "doc",
    "tensorflow.compat.v1.polygamma": "doc",
    "tensorflow.compat.v1.setdiff1d": "doc",
    "tensorflow.compat.v1.sets.size": "doc",
    "tensorflow.compat.v1.sysconfig": "doc",
    "tensorflow.compat.v1.tensordot": "doc",
    "tensorflow.compat.v1.test.main": "doc",
    "tensorflow.compat.v1.timestamp": "doc",
    "tensorflow.compat.v1.to_double": "doc",
    "tensorflow.compat.v1.tpu.shard": "doc",
    "tensorflow.config.LogicalDevice": "doc",
    "tensorflow.keras.metrics.Recall": "doc",
    "tensorflow.keras.utils.Sequence": "doc",
    "tensorflow.keras.utils.get_file": "doc",
    "tensorflow.lookup.TextFileIndex": "doc",
    "tensorflow.math.multiply_no_nan": "doc",
    "tensorflow.math.reduce_variance": "doc",
    "tensorflow.optimizers.Optimizer": "doc",
    "tensorflow.raw_ops.ApplyAdagrad": "doc",
    "tensorflow.raw_ops.ApplyAddSign": "doc",
    "tensorflow.raw_ops.ApplyRMSProp": "doc",
    "tensorflow.raw_ops.AudioSummary": "doc",
    "tensorflow.raw_ops.BarrierClose": "doc",
    "tensorflow.raw_ops.BatchDataset": "doc",
    "tensorflow.raw_ops.BatchToSpace": "doc",
    "tensorflow.raw_ops.CSVDatasetV2": "doc",
    "tensorflow.raw_ops.CholeskyGrad": "doc",
    "tensorflow.raw_ops.ConcatOffset": "doc",
    "tensorflow.raw_ops.DecodeBase64": "doc",
    "tensorflow.raw_ops.DepthToSpace": "doc",
    "tensorflow.raw_ops.EditDistance": "doc",
    "tensorflow.raw_ops.EncodeBase64": "doc",
    "tensorflow.raw_ops.GRUBlockCell": "doc",
    "tensorflow.raw_ops.GreaterEqual": "doc",
    "tensorflow.raw_ops.MakeIterator": "doc",
    "tensorflow.raw_ops.MatrixDiagV2": "doc",
    "tensorflow.raw_ops.MatrixDiagV3": "doc",
    "tensorflow.raw_ops.MergeSummary": "doc",
    "tensorflow.raw_ops.ModelDataset": "doc",
    "tensorflow.raw_ops.OptionalNone": "doc",
    "tensorflow.raw_ops.ParseExample": "doc",
    "tensorflow.raw_ops.Prelinearize": "doc",
    "tensorflow.raw_ops.QuantizedAdd": "doc",
    "tensorflow.raw_ops.QuantizedMul": "doc",
    "tensorflow.raw_ops.QueueDequeue": "doc",
    "tensorflow.raw_ops.QueueEnqueue": "doc",
    "tensorflow.raw_ops.RangeDataset": "doc",
    "tensorflow.raw_ops.RegexReplace": "doc",
    "tensorflow.raw_ops.RestoreSlice": "doc",
    "tensorflow.raw_ops.ScatterNdAdd": "doc",
    "tensorflow.raw_ops.ScatterNdMax": "doc",
    "tensorflow.raw_ops.ScatterNdMin": "doc",
    "tensorflow.raw_ops.ScatterNdSub": "doc",
    "tensorflow.raw_ops.SdcaShrinkL1": "doc",
    "tensorflow.raw_ops.ShardDataset": "doc",
    "tensorflow.raw_ops.SleepDataset": "doc",
    "tensorflow.raw_ops.SoftplusGrad": "doc",
    "tensorflow.raw_ops.SoftsignGrad": "doc",
    "tensorflow.raw_ops.SparseMatMul": "doc",
    "tensorflow.raw_ops.StopGradient": "doc",
    "tensorflow.raw_ops.StridedSlice": "doc",
    "tensorflow.raw_ops.StringFormat": "doc",
    "tensorflow.raw_ops.StringLength": "doc",
    "tensorflow.raw_ops.StringNGrams": "doc",
    "tensorflow.raw_ops.WriteSummary": "doc",
    "tensorflow.compat.v1.DeviceSpec": "doc",
    "tensorflow.compat.v1.GPUOptions": "doc",
    "tensorflow.compat.v1.LogMessage": "doc",
    "tensorflow.compat.v1.NoGradient": "doc",
    "tensorflow.compat.v1.RunOptions": "doc",
    "tensorflow.compat.v1.SessionLog": "doc",
    "tensorflow.compat.v1.TensorInfo": "doc",
    "tensorflow.compat.v1.TensorSpec": "doc",
    "tensorflow.compat.v1.assign_add": "doc",
    "tensorflow.compat.v1.assign_sub": "doc",
    "tensorflow.compat.v1.decode_csv": "doc",
    "tensorflow.compat.v1.decode_raw": "doc",
    "tensorflow.compat.v1.dequantize": "doc",
    "tensorflow.compat.v1.distribute": "doc",
    "tensorflow.compat.v1.div_no_nan": "doc",
    "tensorflow.compat.v1.flags.Flag": "doc",
    "tensorflow.compat.v1.gfile.Copy": "doc",
    "tensorflow.compat.v1.gfile.Glob": "doc",
    "tensorflow.compat.v1.gfile.Open": "doc",
    "tensorflow.compat.v1.gfile.Stat": "doc",
    "tensorflow.compat.v1.gfile.Walk": "doc",
    "tensorflow.compat.v1.graph_util": "doc",
    "tensorflow.compat.v1.identity_n": "doc",
    "tensorflow.compat.v1.image.psnr": "doc",
    "tensorflow.compat.v1.image.ssim": "doc",
    "tensorflow.compat.v1.init_scope": "doc",
    "tensorflow.compat.v1.io.is_jpeg": "doc",
    "tensorflow.compat.v1.less_equal": "doc",
    "tensorflow.compat.v1.linalg.det": "doc",
    "tensorflow.compat.v1.linalg.eye": "doc",
    "tensorflow.compat.v1.linalg.inv": "doc",
    "tensorflow.compat.v1.linalg.svd": "doc",
    "tensorflow.compat.v1.manip.roll": "doc",
    "tensorflow.compat.v1.manip.tile": "doc",
    "tensorflow.compat.v1.math.add_n": "doc",
    "tensorflow.compat.v1.math.asinh": "doc",
    "tensorflow.compat.v1.math.atan2": "doc",
    "tensorflow.compat.v1.math.atanh": "doc",
    "tensorflow.compat.v1.math.equal": "doc",
    "tensorflow.compat.v1.math.expm1": "doc",
    "tensorflow.compat.v1.math.lbeta": "doc",
    "tensorflow.compat.v1.math.log1p": "doc",
    "tensorflow.compat.v1.math.ndtri": "doc",
    "tensorflow.compat.v1.math.round": "doc",
    "tensorflow.compat.v1.math.rsqrt": "doc",
    "tensorflow.compat.v1.math.top_k": "doc",
    "tensorflow.compat.v1.math.xdivy": "doc",
    "tensorflow.compat.v1.math.xlogy": "doc",
    "tensorflow.compat.v1.name_scope": "doc",
    "tensorflow.compat.v1.nn.dropout": "doc",
    "tensorflow.compat.v1.nn.l2_loss": "doc",
    "tensorflow.compat.v1.nn.moments": "doc",
    "tensorflow.compat.v1.nn.raw_rnn": "doc",
    "tensorflow.compat.v1.nn.sigmoid": "doc",
    "tensorflow.compat.v1.nn.softmax": "doc",
    "tensorflow.compat.v1.reciprocal": "doc",
    "tensorflow.compat.v1.reduce_all": "doc",
    "tensorflow.compat.v1.reduce_any": "doc",
    "tensorflow.compat.v1.reduce_max": "doc",
    "tensorflow.compat.v1.reduce_min": "doc",
    "tensorflow.compat.v1.reduce_sum": "doc",
    "tensorflow.compat.v1.reverse_v2": "doc",
    "tensorflow.compat.v1.scalar_mul": "doc",
    "tensorflow.compat.v1.scatter_nd": "doc",
    "tensorflow.compat.v1.sets.union": "doc",
    "tensorflow.compat.v1.signal.dct": "doc",
    "tensorflow.compat.v1.signal.fft": "doc",
    "tensorflow.compat.v1.sparse.add": "doc",
    "tensorflow.compat.v1.sparse.eye": "doc",
    "tensorflow.compat.v1.sparse_add": "doc",
    "tensorflow.compat.v1.while_loop": "doc",
    "tensorflow.compat.v1.write_file": "doc",
    "tensorflow.compat.v1.zeros_like": "doc",
    "tensorflow.autodiff.GradientTape": "doc",
    "tensorflow.config.PhysicalDevice": "doc",
    "tensorflow.debugging.assert_near": "doc",
    "tensorflow.image.adjust_contrast": "doc",
    "tensorflow.image.crop_and_resize": "doc",
    "tensorflow.image.flip_left_right": "doc",
    "tensorflow.image.random_contrast": "doc",
    "tensorflow.image.resize_with_pad": "doc",
    "tensorflow.image.ssim_multiscale": "doc",
    "tensorflow.image.total_variation": "doc",
    "tensorflow.initializers.HeNormal": "doc",
    "tensorflow.keras.activations.elu": "doc",
    "tensorflow.keras.metrics.MeanIoU": "doc",
    "tensorflow.keras.metrics.logcosh": "doc",
    "tensorflow.keras.metrics.poisson": "doc",
    "tensorflow.linalg.LinearOperator": "doc",
    "tensorflow.math.confusion_matrix": "doc",
    "tensorflow.quantization.quantize": "doc",
    "tensorflow.raw_ops.AccumulateNV2": "doc",
    "tensorflow.raw_ops.ApplyAdadelta": "doc",
    "tensorflow.raw_ops.ApplyMomentum": "doc",
    "tensorflow.raw_ops.AvgPool3DGrad": "doc",
    "tensorflow.raw_ops.BatchFunction": "doc",
    "tensorflow.raw_ops.BatchMatMulV2": "doc",
    "tensorflow.raw_ops.BroadcastArgs": "doc",
    "tensorflow.raw_ops.CheckNumerics": "doc",
    "tensorflow.raw_ops.CropAndResize": "doc",
    "tensorflow.raw_ops.DebugIdentity": "doc",
    "tensorflow.raw_ops.DebugNanCount": "doc",
    "tensorflow.raw_ops.DecodeProtoV2": "doc",
    "tensorflow.raw_ops.DenseBincount": "doc",
    "tensorflow.raw_ops.DynamicStitch": "doc",
    "tensorflow.raw_ops.EuclideanNorm": "doc",
    "tensorflow.raw_ops.FilterDataset": "doc",
    "tensorflow.raw_ops.InfeedDequeue": "doc",
    "tensorflow.raw_ops.InfeedEnqueue": "doc",
    "tensorflow.raw_ops.LSTMBlockCell": "doc",
    "tensorflow.raw_ops.MatchingFiles": "doc",
    "tensorflow.raw_ops.MatrixInverse": "doc",
    "tensorflow.raw_ops.MatrixSetDiag": "doc",
    "tensorflow.raw_ops.MirrorPadGrad": "doc",
    "tensorflow.raw_ops.NcclAllReduce": "doc",
    "tensorflow.raw_ops.NcclBroadcast": "doc",
    "tensorflow.raw_ops.NextIteration": "doc",
    "tensorflow.raw_ops.PriorityQueue": "doc",
    "tensorflow.raw_ops.RandomDataset": "doc",
    "tensorflow.raw_ops.RandomPoisson": "doc",
    "tensorflow.raw_ops.RandomShuffle": "doc",
    "tensorflow.raw_ops.RandomUniform": "doc",
    "tensorflow.raw_ops.ResizeBicubic": "doc",
    "tensorflow.raw_ops.ScalarSummary": "doc",
    "tensorflow.raw_ops.SparseReshape": "doc",
    "tensorflow.raw_ops.StatelessCase": "doc",
    "tensorflow.raw_ops.StringSplitV2": "doc",
    "tensorflow.raw_ops.TensorArrayV2": "doc",
    "tensorflow.raw_ops.TensorArrayV3": "doc",
    "tensorflow.raw_ops.TensorDataset": "doc",
    "tensorflow.raw_ops.TensorSummary": "doc",
    "tensorflow.raw_ops.UnicodeScript": "doc",
    "tensorflow.raw_ops.UniqueDataset": "doc",
    "tensorflow.raw_ops.VariableShape": "doc",
    "tensorflow.raw_ops.WindowDataset": "doc",
    "tensorflow.sparse.segment_sqrt_n": "doc",
    "tensorflow.sysconfig.get_include": "doc",
    "tensorflow.compat.v1.ConfigProto": "doc",
    "tensorflow.compat.v1.RunMetadata": "doc",
    "tensorflow.compat.v1.TensorArray": "doc",
    "tensorflow.compat.v1.TensorShape": "doc",
    "tensorflow.compat.v1.assert_less": "doc",
    "tensorflow.compat.v1.assert_near": "doc",
    "tensorflow.compat.v1.assert_rank": "doc",
    "tensorflow.compat.v1.assert_type": "doc",
    "tensorflow.compat.v1.count_up_to": "doc",
    "tensorflow.compat.v1.dtypes.cast": "doc",
    "tensorflow.compat.v1.expand_dims": "doc",
    "tensorflow.compat.v1.fingerprint": "doc",
    "tensorflow.compat.v1.flags.Error": "doc",
    "tensorflow.compat.v1.flags.FLAGS": "doc",
    "tensorflow.compat.v1.gfile.GFile": "doc",
    "tensorflow.compat.v1.gfile.MkDir": "doc",
    "tensorflow.compat.v1.global_norm": "doc",
    "tensorflow.compat.v1.image.rot90": "doc",
    "tensorflow.compat.v1.keras.Input": "doc",
    "tensorflow.compat.v1.keras.utils": "doc",
    "tensorflow.compat.v1.linalg.diag": "doc",
    "tensorflow.compat.v1.linalg.eigh": "doc",
    "tensorflow.compat.v1.linalg.expm": "doc",
    "tensorflow.compat.v1.linalg.logm": "doc",
    "tensorflow.compat.v1.linalg.norm": "doc",
    "tensorflow.compat.v1.linalg.pinv": "doc",
    "tensorflow.compat.v1.lite.OpHint": "doc",
    "tensorflow.compat.v1.lite.OpsSet": "doc",
    "tensorflow.compat.v1.log_sigmoid": "doc",
    "tensorflow.compat.v1.logging.log": "doc",
    "tensorflow.compat.v1.logical_and": "doc",
    "tensorflow.compat.v1.logical_not": "doc",
    "tensorflow.compat.v1.logical_xor": "doc",
    "tensorflow.compat.v1.math.argmax": "doc",
    "tensorflow.compat.v1.math.argmin": "doc",
    "tensorflow.compat.v1.math.cumsum": "doc",
    "tensorflow.compat.v1.math.divide": "doc",
    "tensorflow.compat.v1.math.erfinv": "doc",
    "tensorflow.compat.v1.math.igamma": "doc",
    "tensorflow.compat.v1.math.is_inf": "doc",
    "tensorflow.compat.v1.math.is_nan": "doc",
    "tensorflow.compat.v1.math.lgamma": "doc",
    "tensorflow.compat.v1.math.square": "doc",
    "tensorflow.compat.v1.matrix_diag": "doc",
    "tensorflow.compat.v1.metrics.auc": "doc",
    "tensorflow.compat.v1.multinomial": "doc",
    "tensorflow.compat.v1.nn.avg_pool": "doc",
    "tensorflow.compat.v1.nn.bias_add": "doc",
    "tensorflow.compat.v1.nn.ctc_loss": "doc",
    "tensorflow.compat.v1.nn.in_top_k": "doc",
    "tensorflow.compat.v1.nn.max_pool": "doc",
    "tensorflow.compat.v1.nn.rnn_cell": "doc",
    "tensorflow.compat.v1.nn.softplus": "doc",
    "tensorflow.compat.v1.nn.softsign": "doc",
    "tensorflow.compat.v1.no_gradient": "doc",
    "tensorflow.compat.v1.py_function": "doc",
    "tensorflow.compat.v1.quantize_v2": "doc",
    "tensorflow.compat.v1.random_crop": "doc",
    "tensorflow.compat.v1.reduce_join": "doc",
    "tensorflow.compat.v1.reduce_mean": "doc",
    "tensorflow.compat.v1.reduce_prod": "doc",
    "tensorflow.compat.v1.scatter_add": "doc",
    "tensorflow.compat.v1.scatter_div": "doc",
    "tensorflow.compat.v1.scatter_max": "doc",
    "tensorflow.compat.v1.scatter_min": "doc",
    "tensorflow.compat.v1.scatter_mul": "doc",
    "tensorflow.compat.v1.scatter_sub": "doc",
    "tensorflow.compat.v1.segment_max": "doc",
    "tensorflow.compat.v1.segment_min": "doc",
    "tensorflow.compat.v1.segment_sum": "doc",
    "tensorflow.compat.v1.signal.idct": "doc",
    "tensorflow.compat.v1.signal.ifft": "doc",
    "tensorflow.compat.v1.signal.mdct": "doc",
    "tensorflow.compat.v1.signal.rfft": "doc",
    "tensorflow.compat.v1.signal.stft": "doc",
    "tensorflow.compat.v1.sparse.mask": "doc",
    "tensorflow.compat.v1.sparse_mask": "doc",
    "tensorflow.compat.v1.string_join": "doc",
    "tensorflow.compat.v1.switch_case": "doc",
    "tensorflow.compat.v1.to_bfloat16": "doc",
    "tensorflow.compat.v1.tpu.rewrite": "doc",
    "tensorflow.compat.v1.train.batch": "doc",
    "tensorflow.compat.v1.truncatediv": "doc",
    "tensorflow.compat.v1.truncatemod": "doc",
    "tensorflow.compat.dimension_value": "doc",
    "tensorflow.data.experimental.save": "doc",
    "tensorflow.experimental.numpy.add": "doc",
    "tensorflow.experimental.numpy.all": "doc",
    "tensorflow.experimental.numpy.cos": "doc",
    "tensorflow.experimental.numpy.eye": "doc",
    "tensorflow.experimental.numpy.gcd": "doc",
    "tensorflow.experimental.numpy.lcm": "doc",
    "tensorflow.experimental.numpy.log": "doc",
    "tensorflow.experimental.numpy.mod": "doc",
    "tensorflow.experimental.numpy.var": "doc",
    "tensorflow.image.rgb_to_grayscale": "doc",
    "tensorflow.keras.activations.gelu": "doc",
    "tensorflow.keras.activations.relu": "doc",
    "tensorflow.keras.activations.selu": "doc",
    "tensorflow.keras.activations.tanh": "doc",
    "tensorflow.keras.datasets.reuters": "doc",
    "tensorflow.keras.metrics.log_cosh": "doc",
    "tensorflow.keras.optimizers.Nadam": "doc",
    "tensorflow.math.is_non_decreasing": "doc",
    "tensorflow.math.reciprocal_no_nan": "doc",
    "tensorflow.math.special.bessel_i0": "doc",
    "tensorflow.math.special.bessel_i1": "doc",
    "tensorflow.math.special.bessel_j0": "doc",
    "tensorflow.math.special.bessel_j1": "doc",
    "tensorflow.math.special.bessel_k0": "doc",
    "tensorflow.math.special.bessel_k1": "doc",
    "tensorflow.math.special.bessel_y0": "doc",
    "tensorflow.math.special.bessel_y1": "doc",
    "tensorflow.queue.PaddingFIFOQueue": "doc",
    "tensorflow.random.stateless_gamma": "doc",
    "tensorflow.raw_ops.AdjustContrast": "doc",
    "tensorflow.raw_ops.ApplyPowerSign": "doc",
    "tensorflow.raw_ops.AudioSummaryV2": "doc",
    "tensorflow.raw_ops.BatchDatasetV2": "doc",
    "tensorflow.raw_ops.ExtractGlimpse": "doc",
    "tensorflow.raw_ops.FusedBatchNorm": "doc",
    "tensorflow.raw_ops.FusedPadConv2D": "doc",
    "tensorflow.raw_ops.GuaranteeConst": "doc",
    "tensorflow.raw_ops.ImmutableConst": "doc",
    "tensorflow.raw_ops.MatrixBandPart": "doc",
    "tensorflow.raw_ops.MatrixDiagPart": "doc",
    "tensorflow.raw_ops.OrderedMapPeek": "doc",
    "tensorflow.raw_ops.OrderedMapSize": "doc",
    "tensorflow.raw_ops.OutfeedDequeue": "doc",
    "tensorflow.raw_ops.OutfeedEnqueue": "doc",
    "tensorflow.raw_ops.ParseExampleV2": "doc",
    "tensorflow.raw_ops.QueueDequeueV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueV2": "doc",
    "tensorflow.raw_ops.RaggedBincount": "doc",
    "tensorflow.raw_ops.ReadVariableOp": "doc",
    "tensorflow.raw_ops.ReciprocalGrad": "doc",
    "tensorflow.raw_ops.RegexFullMatch": "doc",
    "tensorflow.raw_ops.RngReadAndSkip": "doc",
    "tensorflow.raw_ops.SelfAdjointEig": "doc",
    "tensorflow.raw_ops.ShuffleDataset": "doc",
    "tensorflow.raw_ops.SparseBincount": "doc",
    "tensorflow.variable_creator_scope": "doc",
    "tensorflow.compat.v1.GradientTape": "doc",
    "tensorflow.compat.v1.GraphOptions": "doc",
    "tensorflow.compat.v1.MetaGraphDef": "doc",
    "tensorflow.compat.v1.NameAttrList": "doc",
    "tensorflow.compat.v1.OptionalSpec": "doc",
    "tensorflow.compat.v1.RaggedTensor": "doc",
    "tensorflow.compat.v1.accumulate_n": "doc",
    "tensorflow.compat.v1.assert_equal": "doc",
    "tensorflow.compat.v1.boolean_mask": "doc",
    "tensorflow.compat.v1.broadcast_to": "doc",
    "tensorflow.compat.v1.clip_by_norm": "doc",
    "tensorflow.compat.v1.data.Dataset": "doc",
    "tensorflow.compat.v1.data.Options": "doc",
    "tensorflow.compat.v1.dtypes.DType": "doc",
    "tensorflow.compat.v1.ensure_shape": "doc",
    "tensorflow.compat.v1.experimental": "doc",
    "tensorflow.compat.v1.flags.DEFINE": "doc",
    "tensorflow.compat.v1.get_variable": "doc",
    "tensorflow.compat.v1.gfile.Exists": "doc",
    "tensorflow.compat.v1.gfile.Rename": "doc",
    "tensorflow.compat.v1.image.resize": "doc",
    "tensorflow.compat.v1.initializers": "doc",
    "tensorflow.compat.v1.io.QueueBase": "doc",
    "tensorflow.compat.v1.keras.models": "doc",
    "tensorflow.compat.v1.linalg.cross": "doc",
    "tensorflow.compat.v1.linalg.lstsq": "doc",
    "tensorflow.compat.v1.linalg.sqrtm": "doc",
    "tensorflow.compat.v1.load_library": "doc",
    "tensorflow.compat.v1.logging.info": "doc",
    "tensorflow.compat.v1.logging.vlog": "doc",
    "tensorflow.compat.v1.logging.warn": "doc",
    "tensorflow.compat.v1.make_ndarray": "doc",
    "tensorflow.compat.v1.math.betainc": "doc",
    "tensorflow.compat.v1.math.cumprod": "doc",
    "tensorflow.compat.v1.math.digamma": "doc",
    "tensorflow.compat.v1.math.erfcinv": "doc",
    "tensorflow.compat.v1.math.igammac": "doc",
    "tensorflow.compat.v1.math.maximum": "doc",
    "tensorflow.compat.v1.math.minimum": "doc",
    "tensorflow.compat.v1.math.polyval": "doc",
    "tensorflow.compat.v1.math.sigmoid": "doc",
    "tensorflow.compat.v1.math.softmax": "doc",
    "tensorflow.compat.v1.math.special": "doc",
    "tensorflow.compat.v1.math.truediv": "doc",
    "tensorflow.compat.v1.math.xlog1py": "doc",
    "tensorflow.compat.v1.matrix_solve": "doc",
    "tensorflow.compat.v1.metrics.mean": "doc",
    "tensorflow.compat.v1.nn.erosion2d": "doc",
    "tensorflow.compat.v1.nn.xw_plus_b": "doc",
    "tensorflow.compat.v1.quantization": "doc",
    "tensorflow.compat.v1.ragged.cross": "doc",
    "tensorflow.compat.v1.ragged.range": "doc",
    "tensorflow.compat.v1.ragged.stack": "doc",
    "tensorflow.compat.v1.random.gamma": "doc",
    "tensorflow.compat.v1.random_gamma": "doc",
    "tensorflow.compat.v1.segment_mean": "doc",
    "tensorflow.compat.v1.segment_prod": "doc",
    "tensorflow.compat.v1.signal.fft2d": "doc",
    "tensorflow.compat.v1.signal.fft3d": "doc",
    "tensorflow.compat.v1.signal.frame": "doc",
    "tensorflow.compat.v1.signal.irfft": "doc",
    "tensorflow.compat.v1.sparse.cross": "doc",
    "tensorflow.compat.v1.sparse.merge": "doc",
    "tensorflow.compat.v1.sparse.split": "doc",
    "tensorflow.compat.v1.sparse_merge": "doc",
    "tensorflow.compat.v1.sparse_split": "doc",
    "tensorflow.compat.v1.spectral.dct": "doc",
    "tensorflow.compat.v1.spectral.fft": "doc",
    "tensorflow.compat.v1.string_split": "doc",
    "tensorflow.compat.v1.string_strip": "doc",
    "tensorflow.compat.v1.strings.join": "doc",
    "tensorflow.compat.v1.summary.text": "doc",
    "tensorflow.compat.v1.to_complex64": "doc",
    "tensorflow.compat.v1.train.JobDef": "doc",
    "tensorflow.experimental.numpy.clip": "doc",
    "tensorflow.experimental.numpy.conj": "doc",
    "tensorflow.experimental.numpy.copy": "doc",
    "tensorflow.experimental.numpy.cosh": "doc",
    "tensorflow.experimental.numpy.less": "doc",
    "tensorflow.experimental.numpy.log2": "doc",
    "tensorflow.experimental.numpy.ones": "doc",
    "tensorflow.experimental.numpy.real": "doc",
    "tensorflow.experimental.numpy.roll": "doc",
    "tensorflow.experimental.numpy.take": "doc",
    "tensorflow.experimental.numpy.tanh": "doc",
    "tensorflow.experimental.numpy.tile": "doc",
    "tensorflow.image.adjust_brightness": "doc",
    "tensorflow.image.adjust_saturation": "doc",
    "tensorflow.image.random_brightness": "doc",
    "tensorflow.image.random_saturation": "doc",
    "tensorflow.keras.initializers.ones": "doc",
    "tensorflow.keras.models.Sequential": "doc",
    "tensorflow.linalg.matrix_transpose": "doc",
    "tensorflow.linalg.tensor_diag_part": "doc",
    "tensorflow.math.invert_permutation": "doc",
    "tensorflow.math.special.bessel_i0e": "doc",
    "tensorflow.math.special.bessel_i1e": "doc",
    "tensorflow.math.special.bessel_k0e": "doc",
    "tensorflow.math.special.bessel_k1e": "doc",
    "tensorflow.random.create_rng_state": "doc",
    "tensorflow.raw_ops.BarrierTakeMany": "doc",
    "tensorflow.raw_ops.BatchMatrixDiag": "doc",
    "tensorflow.raw_ops.CheckNumericsV2": "doc",
    "tensorflow.raw_ops.CrossReplicaSum": "doc",
    "tensorflow.raw_ops.DebugIdentityV2": "doc",
    "tensorflow.raw_ops.InitializeTable": "doc",
    "tensorflow.raw_ops.IteratorGetNext": "doc",
    "tensorflow.raw_ops.LookupTableFind": "doc",
    "tensorflow.raw_ops.LookupTableSize": "doc",
    "tensorflow.raw_ops.MatrixLogarithm": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV2": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV3": "doc",
    "tensorflow.raw_ops.OrderedMapStage": "doc",
    "tensorflow.raw_ops.PartitionedCall": "doc",
    "tensorflow.raw_ops.PriorityQueueV2": "doc",
    "tensorflow.raw_ops.PyFuncStateless": "doc",
    "tensorflow.raw_ops.QuantizedMatMul": "doc",
    "tensorflow.raw_ops.RandomGammaGrad": "doc",
    "tensorflow.raw_ops.RandomPoissonV2": "doc",
    "tensorflow.raw_ops.RegisterDataset": "doc",
    "tensorflow.raw_ops.ReverseSequence": "doc",
    "tensorflow.raw_ops.SerializeSparse": "doc",
    "tensorflow.raw_ops.SparseMatrixAdd": "doc",
    "tensorflow.raw_ops.SparseMatrixMul": "doc",
    "tensorflow.raw_ops.SparseMatrixNNZ": "doc",
    "tensorflow.raw_ops.TensorArrayGrad": "doc",
    "tensorflow.raw_ops.TensorArrayPack": "doc",
    "tensorflow.raw_ops.TensorArrayRead": "doc",
    "tensorflow.raw_ops.TensorArraySize": "doc",
    "tensorflow.raw_ops.TensorListSplit": "doc",
    "tensorflow.raw_ops.TensorListStack": "doc",
    "tensorflow.raw_ops.TensorSummaryV2": "doc",
    "tensorflow.raw_ops.TextLineDataset": "doc",
    "tensorflow.raw_ops.WorkerHeartbeat": "doc",
    "tensorflow.train.JobDef.TasksEntry": "doc",
    "tensorflow.compat.v1.PriorityQueue": "doc",
    "tensorflow.compat.v1.Summary.Audio": "doc",
    "tensorflow.compat.v1.Summary.Image": "doc",
    "tensorflow.compat.v1.VarLenFeature": "doc",
    "tensorflow.compat.v1.VariableScope": "doc",
    "tensorflow.compat.v1.assert_scalar": "doc",
    "tensorflow.compat.v1.clip_by_value": "doc",
    "tensorflow.compat.v1.colocate_with": "doc",
    "tensorflow.compat.v1.compat.as_str": "doc",
    "tensorflow.compat.v1.data.Iterator": "doc",
    "tensorflow.compat.v1.decode_base64": "doc",
    "tensorflow.compat.v1.distributions": "doc",
    "tensorflow.compat.v1.edit_distance": "doc",
    "tensorflow.compat.v1.encode_base64": "doc",
    "tensorflow.compat.v1.estimator.tpu": "doc",
    "tensorflow.compat.v1.greater_equal": "doc",
    "tensorflow.compat.v1.image.is_jpeg": "doc",
    "tensorflow.compat.v1.io.decode_bmp": "doc",
    "tensorflow.compat.v1.io.decode_csv": "doc",
    "tensorflow.compat.v1.io.decode_gif": "doc",
    "tensorflow.compat.v1.io.decode_png": "doc",
    "tensorflow.compat.v1.io.decode_raw": "doc",
    "tensorflow.compat.v1.io.encode_png": "doc",
    "tensorflow.compat.v1.io.gfile.copy": "doc",
    "tensorflow.compat.v1.io.gfile.glob": "doc",
    "tensorflow.compat.v1.io.gfile.stat": "doc",
    "tensorflow.compat.v1.io.gfile.walk": "doc",
    "tensorflow.compat.v1.io.write_file": "doc",
    "tensorflow.compat.v1.keras.metrics": "doc",
    "tensorflow.compat.v1.linalg.einsum": "doc",
    "tensorflow.compat.v1.linalg.matmul": "doc",
    "tensorflow.compat.v1.linalg.matvec": "doc",
    "tensorflow.compat.v1.lite.Optimize": "doc",
    "tensorflow.compat.v1.logging.debug": "doc",
    "tensorflow.compat.v1.logging.error": "doc",
    "tensorflow.compat.v1.logging.fatal": "doc",
    "tensorflow.compat.v1.logging.flush": "doc",
    "tensorflow.compat.v1.make_template": "doc",
    "tensorflow.compat.v1.manip.reshape": "doc",
    "tensorflow.compat.v1.manip.reverse": "doc",
    "tensorflow.compat.v1.math.bincount": "doc",
    "tensorflow.compat.v1.math.in_top_k": "doc",
    "tensorflow.compat.v1.math.multiply": "doc",
    "tensorflow.compat.v1.math.negative": "doc",
    "tensorflow.compat.v1.math.softplus": "doc",
    "tensorflow.compat.v1.math.softsign": "doc",
    "tensorflow.compat.v1.math.subtract": "doc",
    "tensorflow.compat.v1.nn.avg_pool1d": "doc",
    "tensorflow.compat.v1.nn.avg_pool2d": "doc",
    "tensorflow.compat.v1.nn.avg_pool3d": "doc",
    "tensorflow.compat.v1.nn.dilation2d": "doc",
    "tensorflow.compat.v1.nn.leaky_relu": "doc",
    "tensorflow.compat.v1.nn.max_pool1d": "doc",
    "tensorflow.compat.v1.nn.max_pool2d": "doc",
    "tensorflow.compat.v1.nn.max_pool3d": "doc",
    "tensorflow.compat.v1.nn.static_rnn": "doc",
    "tensorflow.compat.v1.parse_example": "doc",
    "tensorflow.compat.v1.random.normal": "doc",
    "tensorflow.compat.v1.random_normal": "doc",
    "tensorflow.compat.v1.regex_replace": "doc",
    "tensorflow.compat.v1.saturate_cast": "doc",
    "tensorflow.compat.v1.sequence_mask": "doc",
    "tensorflow.compat.v1.sets.set_size": "doc",
    "tensorflow.compat.v1.signal.ifft2d": "doc",
    "tensorflow.compat.v1.signal.ifft3d": "doc",
    "tensorflow.compat.v1.signal.rfft2d": "doc",
    "tensorflow.compat.v1.signal.rfft3d": "doc",
    "tensorflow.compat.v1.sparse.concat": "doc",
    "tensorflow.compat.v1.sparse.matmul": "doc",
    "tensorflow.compat.v1.sparse.retain": "doc",
    "tensorflow.compat.v1.sparse_matmul": "doc",
    "tensorflow.compat.v1.sparse_retain": "doc",
    "tensorflow.compat.v1.spectral.idct": "doc",
    "tensorflow.compat.v1.spectral.ifft": "doc",
    "tensorflow.compat.v1.spectral.rfft": "doc",
    "tensorflow.compat.v1.stop_gradient": "doc",
    "tensorflow.compat.v1.strided_slice": "doc",
    "tensorflow.compat.v1.strings.split": "doc",
    "tensorflow.compat.v1.strings.strip": "doc",
    "tensorflow.compat.v1.strings.upper": "doc",
    "tensorflow.compat.v1.summary.Event": "doc",
    "tensorflow.compat.v1.summary.audio": "doc",
    "tensorflow.compat.v1.summary.image": "doc",
    "tensorflow.compat.v1.summary.merge": "doc",
    "tensorflow.compat.v1.test.TestCase": "doc",
    "tensorflow.compat.v1.to_complex128": "doc",
    "tensorflow.compat.v1.tpu.replicate": "doc",
    "tensorflow.compat.v1.train.Feature": "doc",
    "tensorflow.compat.v1.wrap_function": "doc",
    "tensorflow.config.optimizer.get_jit": "doc",
    "tensorflow.config.optimizer.set_jit": "doc",
    "tensorflow.experimental.numpy.bool_": "doc",
    "tensorflow.experimental.numpy.cross": "doc",
    "tensorflow.experimental.numpy.inner": "doc",
    "tensorflow.experimental.numpy.log10": "doc",
    "tensorflow.experimental.numpy.log1p": "doc",
    "tensorflow.experimental.numpy.shape": "doc",
    "tensorflow.experimental.numpy.stack": "doc",
    "tensorflow.experimental.numpy.where": "doc",
    "tensorflow.experimental.numpy.zeros": "doc",
    "tensorflow.image.extract_jpeg_shape": "doc",
    "tensorflow.initializers.Initializer": "doc",
    "tensorflow.keras.constraints.NonNeg": "doc",
    "tensorflow.keras.initializers.Zeros": "doc",
    "tensorflow.keras.initializers.zeros": "doc",
    "tensorflow.keras.metrics.MeanTensor": "doc",
    "tensorflow.keras.optimizers.Adagrad": "doc",
    "tensorflow.keras.regularizers.l1_l2": "doc",
    "tensorflow.linalg.lu_matrix_inverse": "doc",
    "tensorflow.linalg.tridiagonal_solve": "doc",
    "tensorflow.math.special.fresnel_cos": "doc",
    "tensorflow.math.special.fresnel_sin": "doc",
    "tensorflow.queue.RandomShuffleQueue": "doc",
    "tensorflow.random.stateless_poisson": "doc",
    "tensorflow.random.stateless_uniform": "doc",
    "tensorflow.raw_ops.AdjustContrastv2": "doc",
    "tensorflow.raw_ops.AdjustSaturation": "doc",
    "tensorflow.raw_ops.ApproximateEqual": "doc",
    "tensorflow.raw_ops.AssignVariableOp": "doc",
    "tensorflow.raw_ops.AudioSpectrogram": "doc",
    "tensorflow.raw_ops.BarrierReadySize": "doc",
    "tensorflow.raw_ops.ConsumeMutexLock": "doc",
    "tensorflow.raw_ops.CudnnRNNBackprop": "doc",
    "tensorflow.raw_ops.DataFormatDimMap": "doc",
    "tensorflow.raw_ops.DummyMemoryCache": "doc",
    "tensorflow.raw_ops.DynamicPartition": "doc",
    "tensorflow.raw_ops.GeneratorDataset": "doc",
    "tensorflow.raw_ops.HistogramSummary": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV2": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV3": "doc",
    "tensorflow.raw_ops.MatrixSquareRoot": "doc",
    "tensorflow.raw_ops.OutfeedDequeueV2": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueue": "doc",
    "tensorflow.raw_ops.QuantizedAvgPool": "doc",
    "tensorflow.raw_ops.QuantizedBiasAdd": "doc",
    "tensorflow.raw_ops.QuantizedMaxPool": "doc",
    "tensorflow.raw_ops.QueueDequeueMany": "doc",
    "tensorflow.raw_ops.QueueDequeueUpTo": "doc",
    "tensorflow.raw_ops.QueueEnqueueMany": "doc",
    "tensorflow.raw_ops.RandomUniformInt": "doc",
    "tensorflow.raw_ops.SelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV2": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV3": "doc",
    "tensorflow.raw_ops.TensorArrayClose": "doc",
    "tensorflow.raw_ops.TensorArraySplit": "doc",
    "tensorflow.raw_ops.TensorArrayWrite": "doc",
    "tensorflow.raw_ops.TensorListConcat": "doc",
    "tensorflow.raw_ops.TensorListGather": "doc",
    "tensorflow.raw_ops.TensorListLength": "doc",
    "tensorflow.raw_ops.TensorListResize": "doc",
    "tensorflow.raw_ops.TensorScatterAdd": "doc",
    "tensorflow.raw_ops.TensorScatterMax": "doc",
    "tensorflow.raw_ops.TensorScatterMin": "doc",
    "tensorflow.raw_ops.TensorScatterSub": "doc",
    "tensorflow.sysconfig.get_build_info": "doc",
    "tensorflow.sysconfig.get_link_flags": "doc",
    "tensorflow.xla.experimental.compile": "doc",
    "tensorflow.compat.v1.HistogramProto": "doc",
    "tensorflow.compat.v1.app.flags.Flag": "doc",
    "tensorflow.compat.v1.assert_greater": "doc",
    "tensorflow.compat.v1.assert_integer": "doc",
    "tensorflow.compat.v1.assert_rank_in": "doc",
    "tensorflow.compat.v1.batch_to_space": "doc",
    "tensorflow.compat.v1.bitwise.invert": "doc",
    "tensorflow.compat.v1.compat.as_text": "doc",
    "tensorflow.compat.v1.depth_to_space": "doc",
    "tensorflow.compat.v1.dynamic_stitch": "doc",
    "tensorflow.compat.v1.errors.OpError": "doc",
    "tensorflow.compat.v1.estimator.Head": "doc",
    "tensorflow.compat.v1.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.get_collection": "doc",
    "tensorflow.compat.v1.gfile.MakeDirs": "doc",
    "tensorflow.compat.v1.io.decode_jpeg": "doc",
    "tensorflow.compat.v1.io.encode_jpeg": "doc",
    "tensorflow.compat.v1.io.gfile.GFile": "doc",
    "tensorflow.compat.v1.io.gfile.isdir": "doc",
    "tensorflow.compat.v1.io.gfile.mkdir": "doc",
    "tensorflow.compat.v1.io.write_graph": "doc",
    "tensorflow.compat.v1.keras.datasets": "doc",
    "tensorflow.compat.v1.keras.wrappers": "doc",
    "tensorflow.compat.v1.linalg.adjoint": "doc",
    "tensorflow.compat.v1.lite.constants": "doc",
    "tensorflow.compat.v1.logging.log_if": "doc",
    "tensorflow.compat.v1.matching_files": "doc",
    "tensorflow.compat.v1.math.bessel_i0": "doc",
    "tensorflow.compat.v1.math.bessel_i1": "doc",
    "tensorflow.compat.v1.math.is_finite": "doc",
    "tensorflow.compat.v1.math.nextafter": "doc",
    "tensorflow.compat.v1.math.not_equal": "doc",
    "tensorflow.compat.v1.math.polygamma": "doc",
    "tensorflow.compat.v1.matrix_inverse": "doc",
    "tensorflow.compat.v1.metrics.recall": "doc",
    "tensorflow.compat.v1.nest.is_nested": "doc",
    "tensorflow.compat.v1.nn.avg_pool_v2": "doc",
    "tensorflow.compat.v1.nn.convolution": "doc",
    "tensorflow.compat.v1.nn.ctc_loss_v2": "doc",
    "tensorflow.compat.v1.nn.dynamic_rnn": "doc",
    "tensorflow.compat.v1.nn.log_softmax": "doc",
    "tensorflow.compat.v1.nn.max_pool_v2": "doc",
    "tensorflow.compat.v1.numpy_function": "doc",
    "tensorflow.compat.v1.random.poisson": "doc",
    "tensorflow.compat.v1.random.shuffle": "doc",
    "tensorflow.compat.v1.random.uniform": "doc",
    "tensorflow.compat.v1.random_poisson": "doc",
    "tensorflow.compat.v1.random_shuffle": "doc",
    "tensorflow.compat.v1.random_uniform": "doc",
    "tensorflow.compat.v1.recompute_grad": "doc",
    "tensorflow.compat.v1.sets.set_union": "doc",
    "tensorflow.compat.v1.signal.irfft2d": "doc",
    "tensorflow.compat.v1.signal.irfft3d": "doc",
    "tensorflow.compat.v1.sparse.maximum": "doc",
    "tensorflow.compat.v1.sparse.minimum": "doc",
    "tensorflow.compat.v1.sparse.reshape": "doc",
    "tensorflow.compat.v1.sparse.softmax": "doc",
    "tensorflow.compat.v1.sparse_maximum": "doc",
    "tensorflow.compat.v1.sparse_minimum": "doc",
    "tensorflow.compat.v1.sparse_reshape": "doc",
    "tensorflow.compat.v1.spectral.fft2d": "doc",
    "tensorflow.compat.v1.spectral.fft3d": "doc",
    "tensorflow.compat.v1.spectral.irfft": "doc",
    "tensorflow.compat.v1.strings.format": "doc",
    "tensorflow.compat.v1.strings.length": "doc",
    "tensorflow.compat.v1.strings.ngrams": "doc",
    "tensorflow.compat.v1.strings.substr": "doc",
    "tensorflow.compat.v1.test.Benchmark": "doc",
    "tensorflow.compat.v1.tpu.XLAOptions": "doc",
    "tensorflow.compat.v1.train.Features": "doc",
    "tensorflow.compat.v1.variable_scope": "doc",
    "tensorflow.compat.v1.vectorized_map": "doc",
    "tensorflow.compat.dimension_at_index": "doc",
    "tensorflow.compat.forward_compatible": "doc",
    "tensorflow.data.experimental.Counter": "doc",
    "tensorflow.data.experimental.service": "doc",
    "tensorflow.experimental.numpy.arange": "doc",
    "tensorflow.experimental.numpy.arccos": "doc",
    "tensorflow.experimental.numpy.around": "doc",
    "tensorflow.experimental.numpy.divide": "doc",
    "tensorflow.experimental.numpy.divmod": "doc",
    "tensorflow.experimental.numpy.flipud": "doc",
    "tensorflow.experimental.numpy.float_": "doc",
    "tensorflow.experimental.numpy.isreal": "doc",
    "tensorflow.experimental.numpy.matmul": "doc",
    "tensorflow.experimental.numpy.random": "doc",
    "tensorflow.experimental.numpy.select": "doc",
    "tensorflow.image.adjust_jpeg_quality": "doc",
    "tensorflow.image.convert_image_dtype": "doc",
    "tensorflow.image.non_max_suppression": "doc",
    "tensorflow.image.pad_to_bounding_box": "doc",
    "tensorflow.image.random_flip_up_down": "doc",
    "tensorflow.image.random_jpeg_quality": "doc",
    "tensorflow.keras.activations.sigmoid": "doc",
    "tensorflow.keras.applications.nasnet": "doc",
    "tensorflow.keras.applications.resnet": "doc",
    "tensorflow.keras.constraints.MaxNorm": "doc",
    "tensorflow.keras.preprocessing.image": "doc",
    "tensorflow.linalg.LinearOperatorDiag": "doc",
    "tensorflow.linalg.tridiagonal_matmul": "doc",
    "tensorflow.math.unsorted_segment_max": "doc",
    "tensorflow.math.unsorted_segment_min": "doc",
    "tensorflow.math.unsorted_segment_sum": "doc",
    "tensorflow.random.stateless_binomial": "doc",
    "tensorflow.raw_ops.AnonymousIterator": "doc",
    "tensorflow.raw_ops.AssertNextDataset": "doc",
    "tensorflow.raw_ops.BarrierInsertMany": "doc",
    "tensorflow.raw_ops.CompareAndBitpack": "doc",
    "tensorflow.raw_ops.DecodeAndCropJpeg": "doc",
    "tensorflow.raw_ops.DecodeJSONExample": "doc",
    "tensorflow.raw_ops.DeleteMemoryCache": "doc",
    "tensorflow.raw_ops.DeserializeSparse": "doc",
    "tensorflow.raw_ops.DestroyResourceOp": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxes": "doc",
    "tensorflow.raw_ops.InitializeTableV2": "doc",
    "tensorflow.raw_ops.InvertPermutation": "doc",
    "tensorflow.raw_ops.IteratorGetDevice": "doc",
    "tensorflow.raw_ops.LookupTableExport": "doc",
    "tensorflow.raw_ops.LookupTableImport": "doc",
    "tensorflow.raw_ops.LookupTableSizeV2": "doc",
    "tensorflow.raw_ops.MatrixDeterminant": "doc",
    "tensorflow.raw_ops.MatrixExponential": "doc",
    "tensorflow.raw_ops.MaxPoolWithArgmax": "doc",
    "tensorflow.raw_ops.NonMaxSuppression": "doc",
    "tensorflow.raw_ops.OptimizeDatasetV2": "doc",
    "tensorflow.raw_ops.OrderedMapUnstage": "doc",
    "tensorflow.raw_ops.PrelinearizeTuple": "doc",
    "tensorflow.raw_ops.ResizeBicubicGrad": "doc",
    "tensorflow.raw_ops.ResourceCountUpTo": "doc",
    "tensorflow.raw_ops.ScaleAndTranslate": "doc",
    "tensorflow.raw_ops.SerializeIterator": "doc",
    "tensorflow.raw_ops.SparseSegmentMean": "doc",
    "tensorflow.raw_ops.TemporaryVariable": "doc",
    "tensorflow.raw_ops.TensorArrayConcat": "doc",
    "tensorflow.raw_ops.TensorArrayGather": "doc",
    "tensorflow.raw_ops.TensorArrayGradV2": "doc",
    "tensorflow.raw_ops.TensorArrayGradV3": "doc",
    "tensorflow.raw_ops.TensorArrayReadV2": "doc",
    "tensorflow.raw_ops.TensorArrayReadV3": "doc",
    "tensorflow.raw_ops.TensorArraySizeV2": "doc",
    "tensorflow.raw_ops.TensorArraySizeV3": "doc",
    "tensorflow.raw_ops.TensorArrayUnpack": "doc",
    "tensorflow.raw_ops.TensorListGetItem": "doc",
    "tensorflow.raw_ops.TensorListPopBack": "doc",
    "tensorflow.raw_ops.TensorListReserve": "doc",
    "tensorflow.raw_ops.TensorListScatter": "doc",
    "tensorflow.raw_ops.TensorListSetItem": "doc",
    "tensorflow.raw_ops.TridiagonalMatMul": "doc",
    "tensorflow.raw_ops.UncompressElement": "doc",
    "tensorflow.raw_ops.WriteAudioSummary": "doc",
    "tensorflow.raw_ops.WriteGraphSummary": "doc",
    "tensorflow.raw_ops.WriteImageSummary": "doc",
    "tensorflow.tpu.experimental.Topology": "doc",
    "tensorflow.compat.v1.CriticalSection": "doc",
    "tensorflow.compat.v1.FixedLenFeature": "doc",
    "tensorflow.compat.v1.SummaryMetadata": "doc",
    "tensorflow.compat.v1.TensorArraySpec": "doc",
    "tensorflow.compat.v1.app.flags.Error": "doc",
    "tensorflow.compat.v1.app.flags.FLAGS": "doc",
    "tensorflow.compat.v1.assert_negative": "doc",
    "tensorflow.compat.v1.assert_positive": "doc",
    "tensorflow.compat.v1.compat.as_bytes": "doc",
    "tensorflow.compat.v1.custom_gradient": "doc",
    "tensorflow.compat.v1.dimension_value": "doc",
    "tensorflow.compat.v1.dtypes.as_dtype": "doc",
    "tensorflow.compat.v1.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.flags.text_wrap": "doc",
    "tensorflow.compat.v1.flags.validator": "doc",
    "tensorflow.compat.v1.gfile.FastGFile": "doc",
    "tensorflow.compat.v1.guarantee_const": "doc",
    "tensorflow.compat.v1.io.decode_image": "doc",
    "tensorflow.compat.v1.io.decode_proto": "doc",
    "tensorflow.compat.v1.io.encode_proto": "doc",
    "tensorflow.compat.v1.io.gfile.exists": "doc",
    "tensorflow.compat.v1.io.gfile.rename": "doc",
    "tensorflow.compat.v1.io.gfile.rmtree": "doc",
    "tensorflow.compat.v1.keras.callbacks": "doc",
    "tensorflow.compat.v1.keras.estimator": "doc",
    "tensorflow.compat.v1.linalg.eigvalsh": "doc",
    "tensorflow.compat.v1.linalg.set_diag": "doc",
    "tensorflow.compat.v1.lite.TargetSpec": "doc",
    "tensorflow.compat.v1.logging.warning": "doc",
    "tensorflow.compat.v1.manip.gather_nd": "doc",
    "tensorflow.compat.v1.math.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.less_equal": "doc",
    "tensorflow.compat.v1.math.reciprocal": "doc",
    "tensorflow.compat.v1.math.reduce_all": "doc",
    "tensorflow.compat.v1.math.reduce_any": "doc",
    "tensorflow.compat.v1.math.reduce_max": "doc",
    "tensorflow.compat.v1.math.reduce_min": "doc",
    "tensorflow.compat.v1.math.reduce_std": "doc",
    "tensorflow.compat.v1.math.reduce_sum": "doc",
    "tensorflow.compat.v1.math.scalar_mul": "doc",
    "tensorflow.compat.v1.matrix_set_diag": "doc",
    "tensorflow.compat.v1.mixed_precision": "doc",
    "tensorflow.compat.v1.nn.l2_normalize": "doc",
    "tensorflow.compat.v1.queue.FIFOQueue": "doc",
    "tensorflow.compat.v1.queue.QueueBase": "doc",
    "tensorflow.compat.v1.ragged.constant": "doc",
    "tensorflow.compat.v1.random.get_seed": "doc",
    "tensorflow.compat.v1.set_random_seed": "doc",
    "tensorflow.compat.v1.sets.difference": "doc",
    "tensorflow.compat.v1.signal.fftshift": "doc",
    "tensorflow.compat.v1.sparse.bincount": "doc",
    "tensorflow.compat.v1.sparse.to_dense": "doc",
    "tensorflow.compat.v1.spectral.ifft2d": "doc",
    "tensorflow.compat.v1.spectral.ifft3d": "doc",
    "tensorflow.compat.v1.spectral.rfft2d": "doc",
    "tensorflow.compat.v1.spectral.rfft3d": "doc",
    "tensorflow.compat.v1.summary.Summary": "doc",
    "tensorflow.compat.v1.tpu.PaddingSpec": "doc",
    "tensorflow.compat.v1.train.BytesList": "doc",
    "tensorflow.compat.v1.train.FloatList": "doc",
    "tensorflow.compat.v1.train.Int64List": "doc",
    "tensorflow.compat.v1.train.Optimizer": "doc",
    "tensorflow.compat.v1.train.ServerDef": "doc",
    "tensorflow.compat.v1.train.VocabInfo": "doc",
    "tensorflow.config.get_visible_devices": "doc",
    "tensorflow.config.set_visible_devices": "doc",
    "tensorflow.experimental.numpy.arccosh": "doc",
    "tensorflow.experimental.numpy.argsort": "doc",
    "tensorflow.experimental.numpy.cumprod": "doc",
    "tensorflow.experimental.numpy.float16": "doc",
    "tensorflow.experimental.numpy.float32": "doc",
    "tensorflow.experimental.numpy.float64": "doc",
    "tensorflow.experimental.numpy.nonzero": "doc",
    "tensorflow.experimental.numpy.polyval": "doc",
    "tensorflow.experimental.numpy.reshape": "doc",
    "tensorflow.experimental.numpy.squeeze": "doc",
    "tensorflow.image.crop_to_bounding_box": "doc",
    "tensorflow.image.decode_and_crop_jpeg": "doc",
    "tensorflow.image.stateless_random_hue": "doc",
    "tensorflow.keras.constraints.max_norm": "doc",
    "tensorflow.keras.optimizers.Optimizer": "doc",
    "tensorflow.math.unsorted_segment_mean": "doc",
    "tensorflow.math.unsorted_segment_prod": "doc",
    "tensorflow.raw_ops.BatchMatrixInverse": "doc",
    "tensorflow.raw_ops.BatchMatrixSetDiag": "doc",
    "tensorflow.raw_ops.ConcatenateDataset": "doc",
    "tensorflow.raw_ops.ConjugateTranspose": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV2": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV3": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsSize": "doc",
    "tensorflow.raw_ops.DatasetCardinality": "doc",
    "tensorflow.raw_ops.DummySeedGenerator": "doc",
    "tensorflow.raw_ops.InfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.InfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.IsotonicRegression": "doc",
    "tensorflow.raw_ops.LoadAndRemapMatrix": "doc",
    "tensorflow.raw_ops.MergeV2Checkpoints": "doc",
    "tensorflow.raw_ops.PaddedBatchDataset": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueueV2": "doc",
    "tensorflow.raw_ops.ParallelMapDataset": "doc",
    "tensorflow.raw_ops.ParseSingleExample": "doc",
    "tensorflow.raw_ops.QueueDequeueManyV2": "doc",
    "tensorflow.raw_ops.QueueDequeueUpToV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueManyV2": "doc",
    "tensorflow.raw_ops.RandomShuffleQueue": "doc",
    "tensorflow.raw_ops.ReaderRestoreState": "doc",
    "tensorflow.raw_ops.SparseMatrixMatMul": "doc",
    "tensorflow.raw_ops.StridedSliceAssign": "doc",
    "tensorflow.raw_ops.StringToHashBucket": "doc",
    "tensorflow.raw_ops.TPUOrdinalSelector": "doc",
    "tensorflow.raw_ops.TPUPartitionedCall": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV2": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV3": "doc",
    "tensorflow.raw_ops.TensorArrayScatter": "doc",
    "tensorflow.raw_ops.TensorArraySplitV2": "doc",
    "tensorflow.raw_ops.TensorArraySplitV3": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV2": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV3": "doc",
    "tensorflow.raw_ops.TensorListConcatV2": "doc",
    "tensorflow.raw_ops.TensorListPushBack": "doc",
    "tensorflow.raw_ops.UniqueWithCountsV2": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMax": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMin": "doc",
    "tensorflow.raw_ops.UnsortedSegmentSum": "doc",
    "tensorflow.raw_ops.VarIsInitializedOp": "doc",
    "tensorflow.raw_ops.WrapDatasetVariant": "doc",
    "tensorflow.raw_ops.WriteScalarSummary": "doc",
    "tensorflow.sparse.sparse_dense_matmul": "doc",
    "tensorflow.xla.experimental.jit_scope": "doc",
    "tensorflow.compat.v1.OptimizerOptions": "doc",
    "tensorflow.compat.v1.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE": "doc",
    "tensorflow.compat.v1.audio.decode_wav": "doc",
    "tensorflow.compat.v1.audio.encode_wav": "doc",
    "tensorflow.compat.v1.config.optimizer": "doc",
    "tensorflow.compat.v1.config.threading": "doc",
    "tensorflow.compat.v1.confusion_matrix": "doc",
    "tensorflow.compat.v1.data.DatasetSpec": "doc",
    "tensorflow.compat.v1.debugging.Assert": "doc",
    "tensorflow.compat.v1.debugging.is_inf": "doc",
    "tensorflow.compat.v1.debugging.is_nan": "doc",
    "tensorflow.compat.v1.dtypes.as_string": "doc",
    "tensorflow.compat.v1.estimator.export": "doc",
    "tensorflow.compat.v1.estimator.inputs": "doc",
    "tensorflow.compat.v1.flags.EnumParser": "doc",
    "tensorflow.compat.v1.flags.ListParser": "doc",
    "tensorflow.compat.v1.image.adjust_hue": "doc",
    "tensorflow.compat.v1.image.decode_bmp": "doc",
    "tensorflow.compat.v1.image.decode_gif": "doc",
    "tensorflow.compat.v1.image.decode_png": "doc",
    "tensorflow.compat.v1.image.encode_png": "doc",
    "tensorflow.compat.v1.image.hsv_to_rgb": "doc",
    "tensorflow.compat.v1.image.random_hue": "doc",
    "tensorflow.compat.v1.image.rgb_to_hsv": "doc",
    "tensorflow.compat.v1.image.rgb_to_yiq": "doc",
    "tensorflow.compat.v1.image.rgb_to_yuv": "doc",
    "tensorflow.compat.v1.image.yiq_to_rgb": "doc",
    "tensorflow.compat.v1.image.yuv_to_rgb": "doc",
    "tensorflow.compat.v1.io.PriorityQueue": "doc",
    "tensorflow.compat.v1.io.RaggedFeature": "doc",
    "tensorflow.compat.v1.io.VarLenFeature": "doc",
    "tensorflow.compat.v1.io.decode_base64": "doc",
    "tensorflow.compat.v1.io.encode_base64": "doc",
    "tensorflow.compat.v1.io.parse_example": "doc",
    "tensorflow.compat.v1.keras.Sequential": "doc",
    "tensorflow.compat.v1.keras.optimizers": "doc",
    "tensorflow.compat.v1.linalg.band_part": "doc",
    "tensorflow.compat.v1.linalg.diag_part": "doc",
    "tensorflow.compat.v1.linalg.normalize": "doc",
    "tensorflow.compat.v1.linalg.tensordot": "doc",
    "tensorflow.compat.v1.lite.Interpreter": "doc",
    "tensorflow.compat.v1.manip.scatter_nd": "doc",
    "tensorflow.compat.v1.math.log_sigmoid": "doc",
    "tensorflow.compat.v1.math.log_softmax": "doc",
    "tensorflow.compat.v1.math.logical_and": "doc",
    "tensorflow.compat.v1.math.logical_not": "doc",
    "tensorflow.compat.v1.math.logical_xor": "doc",
    "tensorflow.compat.v1.math.reduce_mean": "doc",
    "tensorflow.compat.v1.math.reduce_prod": "doc",
    "tensorflow.compat.v1.math.segment_max": "doc",
    "tensorflow.compat.v1.math.segment_min": "doc",
    "tensorflow.compat.v1.math.segment_sum": "doc",
    "tensorflow.compat.v1.matrix_band_part": "doc",
    "tensorflow.compat.v1.matrix_diag_part": "doc",
    "tensorflow.compat.v1.matrix_transpose": "doc",
    "tensorflow.compat.v1.metrics.accuracy": "doc",
    "tensorflow.compat.v1.metrics.mean_iou": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d": "doc",
    "tensorflow.compat.v1.nn.zero_fraction": "doc",
    "tensorflow.compat.v1.random.Algorithm": "doc",
    "tensorflow.compat.v1.random.Generator": "doc",
    "tensorflow.compat.v1.reverse_sequence": "doc",
    "tensorflow.compat.v1.signal.ifftshift": "doc",
    "tensorflow.compat.v1.sparse_transpose": "doc",
    "tensorflow.compat.v1.spectral.irfft2d": "doc",
    "tensorflow.compat.v1.spectral.irfft3d": "doc",
    "tensorflow.compat.v1.tpu.experimental": "doc",
    "tensorflow.compat.v1.train.Checkpoint": "doc",
    "tensorflow.compat.v1.train.ClusterDef": "doc",
    "tensorflow.compat.v1.train.FeedFnHook": "doc",
    "tensorflow.compat.v1.train.Supervisor": "doc",
    "tensorflow.compat.v1.train.batch_join": "doc",
    "tensorflow.compat.v1.train.warm_start": "doc",
    "tensorflow.compat.v1.user_ops.my_fact": "doc",
    "tensorflow.compat.v1.xla.experimental": "doc",
    "tensorflow.experimental.numpy.complex_": "doc",
    "tensorflow.experimental.numpy.diagflat": "doc",
    "tensorflow.experimental.numpy.diagonal": "doc",
    "tensorflow.experimental.numpy.linspace": "doc",
    "tensorflow.experimental.numpy.logspace": "doc",
    "tensorflow.experimental.numpy.positive": "doc",
    "tensorflow.experimental.numpy.swapaxes": "doc",
    "tensorflow.keras.applications.Xception": "doc",
    "tensorflow.keras.applications.densenet": "doc",
    "tensorflow.keras.applications.xception": "doc",
    "tensorflow.keras.initializers.HeNormal": "doc",
    "tensorflow.keras.wrappers.scikit_learn": "doc",
    "tensorflow.math.is_strictly_increasing": "doc",
    "tensorflow.raw_ops.AnonymousIteratorV2": "doc",
    "tensorflow.raw_ops.AssignAddVariableOp": "doc",
    "tensorflow.raw_ops.AssignSubVariableOp": "doc",
    "tensorflow.raw_ops.BatchMatrixBandPart": "doc",
    "tensorflow.raw_ops.BatchMatrixDiagPart": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEig": "doc",
    "tensorflow.raw_ops.BoostedTreesPredict": "doc",
    "tensorflow.raw_ops.Conv2DBackpropInput": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInput": "doc",
    "tensorflow.raw_ops.DebugNumericSummary": "doc",
    "tensorflow.raw_ops.DeserializeIterator": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxesV2": "doc",
    "tensorflow.raw_ops.HistogramFixedWidth": "doc",
    "tensorflow.raw_ops.IgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.IteratorGetNextSync": "doc",
    "tensorflow.raw_ops.LatencyStatsDataset": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV3": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV4": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV5": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.OutfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.ParseExampleDataset": "doc",
    "tensorflow.raw_ops.RequantizationRange": "doc",
    "tensorflow.raw_ops.SerializeManySparse": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseAdd": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseDiv": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseMul": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRows": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmax": "doc",
    "tensorflow.raw_ops.SparseSparseMaximum": "doc",
    "tensorflow.raw_ops.SparseSparseMinimum": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV2": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV3": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV2": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV3": "doc",
    "tensorflow.raw_ops.TensorListScatterV2": "doc",
    "tensorflow.raw_ops.TensorScatterUpdate": "doc",
    "tensorflow.raw_ops.UnsortedSegmentJoin": "doc",
    "tensorflow.raw_ops.UnsortedSegmentProd": "doc",
    "tensorflow.sysconfig.get_compile_flags": "doc",
    "tensorflow.test.assert_equal_graph_def": "doc",
    "tensorflow.train.Features.FeatureEntry": "doc",
    "tensorflow.compat.v1.AggregationMethod": "doc",
    "tensorflow.compat.v1.IndexedSlicesSpec": "doc",
    "tensorflow.compat.v1.NodeDef.AttrEntry": "doc",
    "tensorflow.compat.v1.NotDifferentiable": "doc",
    "tensorflow.compat.v1.add_to_collection": "doc",
    "tensorflow.compat.v1.assert_less_equal": "doc",
    "tensorflow.compat.v1.assert_none_equal": "doc",
    "tensorflow.compat.v1.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.compat.as_str_any": "doc",
    "tensorflow.compat.v1.data.experimental": "doc",
    "tensorflow.compat.v1.decode_compressed": "doc",
    "tensorflow.compat.v1.dynamic_partition": "doc",
    "tensorflow.compat.v1.executing_eagerly": "doc",
    "tensorflow.compat.v1.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.get_default_graph": "doc",
    "tensorflow.compat.v1.gfile.IsDirectory": "doc",
    "tensorflow.compat.v1.grad_pass_through": "doc",
    "tensorflow.compat.v1.image.decode_jpeg": "doc",
    "tensorflow.compat.v1.image.encode_jpeg": "doc",
    "tensorflow.compat.v1.image.random_crop": "doc",
    "tensorflow.compat.v1.image.resize_area": "doc",
    "tensorflow.compat.v1.image.sobel_edges": "doc",
    "tensorflow.compat.v1.initializers.ones": "doc",
    "tensorflow.compat.v1.io.matching_files": "doc",
    "tensorflow.compat.v1.is_non_decreasing": "doc",
    "tensorflow.compat.v1.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.keras.activations": "doc",
    "tensorflow.compat.v1.keras.constraints": "doc",
    "tensorflow.compat.v1.keras.metrics.AUC": "doc",
    "tensorflow.compat.v1.keras.metrics.KLD": "doc",
    "tensorflow.compat.v1.keras.metrics.MAE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSE": "doc",
    "tensorflow.compat.v1.keras.metrics.Sum": "doc",
    "tensorflow.compat.v1.keras.metrics.get": "doc",
    "tensorflow.compat.v1.keras.metrics.kld": "doc",
    "tensorflow.compat.v1.keras.metrics.mae": "doc",
    "tensorflow.compat.v1.keras.metrics.mse": "doc",
    "tensorflow.compat.v1.lite.experimental": "doc",
    "tensorflow.compat.v1.make_tensor_proto": "doc",
    "tensorflow.compat.v1.math.accumulate_n": "doc",
    "tensorflow.compat.v1.math.l2_normalize": "doc",
    "tensorflow.compat.v1.math.segment_mean": "doc",
    "tensorflow.compat.v1.math.segment_prod": "doc",
    "tensorflow.compat.v1.math.sobol_sample": "doc",
    "tensorflow.compat.v1.metrics.precision": "doc",
    "tensorflow.compat.v1.mlir.experimental": "doc",
    "tensorflow.compat.v1.nn.conv_transpose": "doc",
    "tensorflow.compat.v1.nn.depth_to_space": "doc",
    "tensorflow.compat.v1.scatter_nd_update": "doc",
    "tensorflow.compat.v1.sets.intersection": "doc",
    "tensorflow.compat.v1.sparse.from_dense": "doc",
    "tensorflow.compat.v1.sparse.reduce_max": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum": "doc",
    "tensorflow.compat.v1.strings.as_string": "doc",
    "tensorflow.compat.v1.strings.to_number": "doc",
    "tensorflow.compat.v1.summary.histogram": "doc",
    "tensorflow.compat.v1.summary.merge_all": "doc",
    "tensorflow.compat.v1.sysconfig.get_lib": "doc",
    "tensorflow.compat.v1.train.ClusterSpec": "doc",
    "tensorflow.compat.v1.train.Coordinator": "doc",
    "tensorflow.compat.v1.train.FeatureList": "doc",
    "tensorflow.compat.v1.train.global_step": "doc",
    "tensorflow.compat.v1.train.maybe_batch": "doc",
    "tensorflow.compat.v1.train.sdca_fprint": "doc",
    "tensorflow.compat.v1.train.write_graph": "doc",
    "tensorflow.compat.v1.variable_op_scope": "doc",
    "tensorflow.compat.v1.zeros_initializer": "doc",
    "tensorflow.experimental.numpy.isrealobj": "doc",
    "tensorflow.experimental.numpy.logaddexp": "doc",
    "tensorflow.experimental.numpy.nextafter": "doc",
    "tensorflow.experimental.numpy.ones_like": "doc",
    "tensorflow.experimental.numpy.tensordot": "doc",
    "tensorflow.image.random_flip_left_right": "doc",
    "tensorflow.keras.applications.MobileNet": "doc",
    "tensorflow.keras.applications.mobilenet": "doc",
    "tensorflow.keras.mixed_precision.Policy": "doc",
    "tensorflow.keras.models.model_from_json": "doc",
    "tensorflow.keras.models.model_from_yaml": "doc",
    "tensorflow.keras.preprocessing.sequence": "doc",
    "tensorflow.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.raw_ops.AnonymousMemoryCache": "doc",
    "tensorflow.raw_ops.ChooseFastestDataset": "doc",
    "tensorflow.raw_ops.DataFormatVecPermute": "doc",
    "tensorflow.raw_ops.GroupByWindowDataset": "doc",
    "tensorflow.raw_ops.LogMatrixDeterminant": "doc",
    "tensorflow.raw_ops.MatchingFilesDataset": "doc",
    "tensorflow.raw_ops.NonDeterministicInts": "doc",
    "tensorflow.raw_ops.PaddedBatchDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelMapDatasetV2": "doc",
    "tensorflow.raw_ops.ParseSequenceExample": "doc",
    "tensorflow.raw_ops.RaggedTensorToSparse": "doc",
    "tensorflow.raw_ops.RandomShuffleQueueV2": "doc",
    "tensorflow.raw_ops.RandomStandardNormal": "doc",
    "tensorflow.raw_ops.SlidingWindowDataset": "doc",
    "tensorflow.raw_ops.StatelessMultinomial": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV2": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV3": "doc",
    "tensorflow.raw_ops.TensorListFromTensor": "doc",
    "tensorflow.raw_ops.UnwrapDatasetVariant": "doc",
    "tensorflow.raw_ops.WriteRawProtoSummary": "doc",
    "tensorflow.train.experimental.LossScale": "doc",
    "tensorflow.compat.v1.InteractiveSession": "doc",
    "tensorflow.compat.v1.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.add_to_collections": "doc",
    "tensorflow.compat.v1.app.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.autograph.to_graph": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_or": "doc",
    "tensorflow.compat.v1.bitwise.left_shift": "doc",
    "tensorflow.compat.v1.dimension_at_index": "doc",
    "tensorflow.compat.v1.distributions.Beta": "doc",
    "tensorflow.compat.v1.estimator.EvalSpec": "doc",
    "tensorflow.compat.v1.estimator.ModeKeys": "doc",
    "tensorflow.compat.v1.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.get_local_variable": "doc",
    "tensorflow.compat.v1.get_session_handle": "doc",
    "tensorflow.compat.v1.get_variable_scope": "doc",
    "tensorflow.compat.v1.image.ResizeMethod": "doc",
    "tensorflow.compat.v1.image.adjust_gamma": "doc",
    "tensorflow.compat.v1.image.central_crop": "doc",
    "tensorflow.compat.v1.image.decode_image": "doc",
    "tensorflow.compat.v1.image.flip_up_down": "doc",
    "tensorflow.compat.v1.initializers.zeros": "doc",
    "tensorflow.compat.v1.invert_permutation": "doc",
    "tensorflow.compat.v1.io.FixedLenFeature": "doc",
    "tensorflow.compat.v1.io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.keras.applications": "doc",
    "tensorflow.compat.v1.keras.experimental": "doc",
    "tensorflow.compat.v1.keras.initializers": "doc",
    "tensorflow.compat.v1.keras.metrics.MAPE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSLE": "doc",
    "tensorflow.compat.v1.keras.metrics.Mean": "doc",
    "tensorflow.compat.v1.keras.metrics.mape": "doc",
    "tensorflow.compat.v1.keras.metrics.msle": "doc",
    "tensorflow.compat.v1.keras.regularizers": "doc",
    "tensorflow.compat.v1.linalg.global_norm": "doc",
    "tensorflow.compat.v1.linalg.matrix_rank": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag": "doc",
    "tensorflow.compat.v1.math.divide_no_nan": "doc",
    "tensorflow.compat.v1.math.greater_equal": "doc",
    "tensorflow.compat.v1.math.special.dawsn": "doc",
    "tensorflow.compat.v1.math.zero_fraction": "doc",
    "tensorflow.compat.v1.matrix_determinant": "doc",
    "tensorflow.compat.v1.matrix_square_root": "doc",
    "tensorflow.compat.v1.nest.map_structure": "doc",
    "tensorflow.compat.v1.random.categorical": "doc",
    "tensorflow.compat.v1.random.multinomial": "doc",
    "tensorflow.compat.v1.signal.hann_window": "doc",
    "tensorflow.compat.v1.sparse.expand_dims": "doc",
    "tensorflow.compat.v1.sparse.reset_shape": "doc",
    "tensorflow.compat.v1.sparse.segment_sum": "doc",
    "tensorflow.compat.v1.sparse_reset_shape": "doc",
    "tensorflow.compat.v1.sparse_segment_sum": "doc",
    "tensorflow.compat.v1.summary.SessionLog": "doc",
    "tensorflow.compat.v1.summary.initialize": "doc",
    "tensorflow.compat.v1.tensor_scatter_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_sub": "doc",
    "tensorflow.compat.v1.tpu.bfloat16_scope": "doc",
    "tensorflow.compat.v1.train.FeatureLists": "doc",
    "tensorflow.compat.v1.train.FinalOpsHook": "doc",
    "tensorflow.compat.v1.train.LooperThread": "doc",
    "tensorflow.compat.v1.train.ProfilerHook": "doc",
    "tensorflow.compat.v1.train.cosine_decay": "doc",
    "tensorflow.compat.v1.train.experimental": "doc",
    "tensorflow.compat.v1.train.limit_epochs": "doc",
    "tensorflow.compat.v1.types.experimental": "doc",
    "tensorflow.compat.v1.unique_with_counts": "doc",
    "tensorflow.experimental.dlpack.to_dlpack": "doc",
    "tensorflow.image.resize_with_crop_or_pad": "doc",
    "tensorflow.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.random.experimental.Algorithm": "doc",
    "tensorflow.random.experimental.Generator": "doc",
    "tensorflow.raw_ops.BandedTriangularSolve": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.BoostedTreesBucketize": "doc",
    "tensorflow.raw_ops.ConfigureTPUEmbedding": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInputV2": "doc",
    "tensorflow.raw_ops.DebugNumericSummaryV2": "doc",
    "tensorflow.raw_ops.DeserializeManySparse": "doc",
    "tensorflow.raw_ops.MatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.MutableDenseHashTable": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTupleV2": "doc",
    "tensorflow.raw_ops.ParallelDynamicStitch": "doc",
    "tensorflow.raw_ops.ParseExampleDatasetV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantize": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariant": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighbor": "doc",
    "tensorflow.raw_ops.SparseMatrixTranspose": "doc",
    "tensorflow.raw_ops.TensorListConcatLists": "doc",
    "tensorflow.raw_ops.WriteHistogramSummary": "doc",
    "tensorflow.summary.experimental.get_step": "doc",
    "tensorflow.summary.experimental.set_step": "doc",
    "tensorflow.compat.v1.AttrValue.ListValue": "doc",
    "tensorflow.compat.v1.VariableAggregation": "doc",
    "tensorflow.compat.v1.app.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.app.flags.text_wrap": "doc",
    "tensorflow.compat.v1.app.flags.validator": "doc",
    "tensorflow.compat.v1.assert_non_negative": "doc",
    "tensorflow.compat.v1.assert_non_positive": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_and": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_xor": "doc",
    "tensorflow.compat.v1.bitwise.right_shift": "doc",
    "tensorflow.compat.v1.config.experimental": "doc",
    "tensorflow.compat.v1.debugging.is_finite": "doc",
    "tensorflow.compat.v1.decode_json_example": "doc",
    "tensorflow.compat.v1.distribute.ReduceOp": "doc",
    "tensorflow.compat.v1.distribute.Strategy": "doc",
    "tensorflow.compat.v1.distributions.Gamma": "doc",
    "tensorflow.compat.v1.errors.AbortedError": "doc",
    "tensorflow.compat.v1.errors.UnknownError": "doc",
    "tensorflow.compat.v1.estimator.Estimator": "doc",
    "tensorflow.compat.v1.estimator.MultiHead": "doc",
    "tensorflow.compat.v1.estimator.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.TrainSpec": "doc",
    "tensorflow.compat.v1.estimator.VocabInfo": "doc",
    "tensorflow.compat.v1.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.get_default_session": "doc",
    "tensorflow.compat.v1.gfile.ListDirectory": "doc",
    "tensorflow.compat.v1.image.resize_images": "doc",
    "tensorflow.compat.v1.io.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb": "doc",
    "tensorflow.compat.v1.keras.metrics.Hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.hinge": "doc",
    "tensorflow.compat.v1.keras.preprocessing": "doc",
    "tensorflow.compat.v1.keras.utils.Progbar": "doc",
    "tensorflow.compat.v1.linalg.experimental": "doc",
    "tensorflow.compat.v1.linalg.l2_normalize": "doc",
    "tensorflow.compat.v1.logging.log_every_n": "doc",
    "tensorflow.compat.v1.logging.log_first_n": "doc",
    "tensorflow.compat.v1.lookup.experimental": "doc",
    "tensorflow.compat.v1.math.special.expint": "doc",
    "tensorflow.compat.v1.math.special.spence": "doc",
    "tensorflow.compat.v1.metrics.mean_tensor": "doc",
    "tensorflow.compat.v1.metrics.recall_at_k": "doc",
    "tensorflow.compat.v1.nn.conv1d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv3d_transpose": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup": "doc",
    "tensorflow.compat.v1.nn.fused_batch_norm": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.GRUCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.RNNCell": "doc",
    "tensorflow.compat.v1.nn.weighted_moments": "doc",
    "tensorflow.compat.v1.queue.PriorityQueue": "doc",
    "tensorflow.compat.v1.ragged.boolean_mask": "doc",
    "tensorflow.compat.v1.ragged.cross_hashed": "doc",
    "tensorflow.compat.v1.random.experimental": "doc",
    "tensorflow.compat.v1.reset_default_graph": "doc",
    "tensorflow.compat.v1.sets.set_difference": "doc",
    "tensorflow.compat.v1.signal.inverse_mdct": "doc",
    "tensorflow.compat.v1.signal.inverse_stft": "doc",
    "tensorflow.compat.v1.sparse.cross_hashed": "doc",
    "tensorflow.compat.v1.sparse.segment_mean": "doc",
    "tensorflow.compat.v1.sparse.to_indicator": "doc",
    "tensorflow.compat.v1.sparse_segment_mean": "doc",
    "tensorflow.compat.v1.strings.bytes_split": "doc",
    "tensorflow.compat.v1.strings.reduce_join": "doc",
    "tensorflow.compat.v1.tpu.shutdown_system": "doc",
    "tensorflow.compat.v1.train.NanTensorHook": "doc",
    "tensorflow.compat.v1.train.load_variable": "doc",
    "tensorflow.compat.v1.train.shuffle_batch": "doc",
    "tensorflow.compat.v1.trainable_variables": "doc",
    "tensorflow.autograph.experimental.Feature": "doc",
    "tensorflow.experimental.numpy.logical_xor": "doc",
    "tensorflow.experimental.numpy.random.rand": "doc",
    "tensorflow.experimental.numpy.random.seed": "doc",
    "tensorflow.keras.experimental.LinearModel": "doc",
    "tensorflow.keras.initializers.Initializer": "doc",
    "tensorflow.keras.models.model_from_config": "doc",
    "tensorflow.keras.regularizers.Regularizer": "doc",
    "tensorflow.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.linalg.banded_triangular_solve": "doc",
    "tensorflow.raw_ops.AnonymousSeedGenerator": "doc",
    "tensorflow.raw_ops.BatchMatrixDeterminant": "doc",
    "tensorflow.raw_ops.BoostedTreesCenterBias": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToDense": "doc",
    "tensorflow.raw_ops.ConditionalAccumulator": "doc",
    "tensorflow.raw_ops.CropAndResizeGradBoxes": "doc",
    "tensorflow.raw_ops.CropAndResizeGradImage": "doc",
    "tensorflow.raw_ops.DenseCountSparseOutput": "doc",
    "tensorflow.raw_ops.DenseToCSRSparseMatrix": "doc",
    "tensorflow.raw_ops.ExperimentalCSVDataset": "doc",
    "tensorflow.raw_ops.ExperimentalMapDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSqlDataset": "doc",
    "tensorflow.raw_ops.GenerateVocabRemapping": "doc",
    "tensorflow.raw_ops.IteratorToStringHandle": "doc",
    "tensorflow.raw_ops.NonSerializableDataset": "doc",
    "tensorflow.raw_ops.OrderedMapUnstageNoKey": "doc",
    "tensorflow.raw_ops.ParseSequenceExampleV2": "doc",
    "tensorflow.raw_ops.ReaderSerializeStateV2": "doc",
    "tensorflow.raw_ops.ShutdownDistributedTPU": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNGrad": "doc",
    "tensorflow.raw_ops.StatefulRandomBinomial": "doc",
    "tensorflow.raw_ops.StatefulUniformFullInt": "doc",
    "tensorflow.raw_ops.StatelessRandomGammaV2": "doc",
    "tensorflow.raw_ops.StatelessRandomPoisson": "doc",
    "tensorflow.raw_ops.StatelessRandomUniform": "doc",
    "tensorflow.raw_ops.StatsAggregatorSummary": "doc",
    "tensorflow.raw_ops.StringToHashBucketFast": "doc",
    "tensorflow.raw_ops.TensorListElementShape": "doc",
    "tensorflow.compat.v1.TensorInfo.CooSparse": "doc",
    "tensorflow.compat.v1.app.flags.EnumParser": "doc",
    "tensorflow.compat.v1.app.flags.ListParser": "doc",
    "tensorflow.compat.v1.assert_greater_equal": "doc",
    "tensorflow.compat.v1.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.batch_scatter_update": "doc",
    "tensorflow.compat.v1.config.LogicalDevice": "doc",
    "tensorflow.compat.v1.data.TextLineDataset": "doc",
    "tensorflow.compat.v1.distributions.Normal": "doc",
    "tensorflow.compat.v1.dtypes.saturate_cast": "doc",
    "tensorflow.compat.v1.errors.DataLossError": "doc",
    "tensorflow.compat.v1.errors.InternalError": "doc",
    "tensorflow.compat.v1.errors.NotFoundError": "doc",
    "tensorflow.compat.v1.estimator.FeedFnHook": "doc",
    "tensorflow.compat.v1.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.flags.get_help_width": "doc",
    "tensorflow.compat.v1.image.resize_bicubic": "doc",
    "tensorflow.compat.v1.initialize_variables": "doc",
    "tensorflow.compat.v1.io.decode_compressed": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist": "doc",
    "tensorflow.compat.v1.keras.metrics.Metric": "doc",
    "tensorflow.compat.v1.keras.metrics.Recall": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine": "doc",
    "tensorflow.compat.v1.keras.optimizers.SGD": "doc",
    "tensorflow.compat.v1.keras.optimizers.get": "doc",
    "tensorflow.compat.v1.keras.utils.Sequence": "doc",
    "tensorflow.compat.v1.keras.utils.get_file": "doc",
    "tensorflow.compat.v1.lite.experimental.nn": "doc",
    "tensorflow.compat.v1.lookup.TextFileIndex": "doc",
    "tensorflow.compat.v1.math.multiply_no_nan": "doc",
    "tensorflow.compat.v1.math.reduce_variance": "doc",
    "tensorflow.compat.v1.nn.ctc_unique_labels": "doc",
    "tensorflow.compat.v1.nn.normalize_moments": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMCell": "doc",
    "tensorflow.compat.v1.self_adjoint_eigvals": "doc",
    "tensorflow.compat.v1.signal.kaiser_window": "doc",
    "tensorflow.compat.v1.signal.vorbis_window": "doc",
    "tensorflow.compat.v1.train.SessionCreator": "doc",
    "tensorflow.compat.v1.train.SessionManager": "doc",
    "tensorflow.compat.v1.train.SessionRunArgs": "doc",
    "tensorflow.compat.v1.train.SessionRunHook": "doc",
    "tensorflow.compat.v1.train.StopAtStepHook": "doc",
    "tensorflow.compat.v1.train.list_variables": "doc",
    "tensorflow.compat.v1.train.sdca_shrink_l1": "doc",
    "tensorflow.compat.v1.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.unsorted_segment_sum": "doc",
    "tensorflow.experimental.dlpack.from_dlpack": "doc",
    "tensorflow.experimental.numpy.random.randn": "doc",
    "tensorflow.image.stateless_random_contrast": "doc",
    "tensorflow.lite.experimental.load_delegate": "doc",
    "tensorflow.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.raw_ops.ConfigureDistributedTPU": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropInput": "doc",
    "tensorflow.raw_ops.ExperimentalLMDBDataset": "doc",
    "tensorflow.raw_ops.ExperimentalScanDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgs": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVars": "doc",
    "tensorflow.raw_ops.FusedResizeAndPadConv2D": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorInit": "doc",
    "tensorflow.raw_ops.MutableDenseHashTableV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV3": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBias": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBias": "doc",
    "tensorflow.raw_ops.RaggedCountSparseOutput": "doc",
    "tensorflow.raw_ops.RaggedTensorFromVariant": "doc",
    "tensorflow.raw_ops.ResourceScatterNdUpdate": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrl": "doc",
    "tensorflow.raw_ops.ScatterNdNonAliasingAdd": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDataset": "doc",
    "tensorflow.raw_ops.SparseCountSparseOutput": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRowsGrad": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmaxGrad": "doc",
    "tensorflow.raw_ops.SparseTensorDenseMatMul": "doc",
    "tensorflow.raw_ops.StatefulPartitionedCall": "doc",
    "tensorflow.raw_ops.StatelessRandomBinomial": "doc",
    "tensorflow.raw_ops.StatelessRandomNormalV2": "doc",
    "tensorflow.raw_ops.TPUEmbeddingActivations": "doc",
    "tensorflow.raw_ops.TensorListPushBackBatch": "doc",
    "tensorflow.raw_ops.UniformCandidateSampler": "doc",
    "tensorflow.compat.v1.app.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.app.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.config.PhysicalDevice": "doc",
    "tensorflow.compat.v1.data.get_output_types": "doc",
    "tensorflow.compat.v1.debugging.assert_less": "doc",
    "tensorflow.compat.v1.debugging.assert_near": "doc",
    "tensorflow.compat.v1.debugging.assert_rank": "doc",
    "tensorflow.compat.v1.debugging.assert_type": "doc",
    "tensorflow.compat.v1.distribute.RunOptions": "doc",
    "tensorflow.compat.v1.distributions.Uniform": "doc",
    "tensorflow.compat.v1.estimator.add_metrics": "doc",
    "tensorflow.compat.v1.experimental.Optional": "doc",
    "tensorflow.compat.v1.histogram_fixed_width": "doc",
    "tensorflow.compat.v1.image.adjust_contrast": "doc",
    "tensorflow.compat.v1.image.crop_and_resize": "doc",
    "tensorflow.compat.v1.image.flip_left_right": "doc",
    "tensorflow.compat.v1.image.random_contrast": "doc",
    "tensorflow.compat.v1.image.ssim_multiscale": "doc",
    "tensorflow.compat.v1.image.total_variation": "doc",
    "tensorflow.compat.v1.image.transpose_image": "doc",
    "tensorflow.compat.v1.initializers.constant": "doc",
    "tensorflow.compat.v1.initializers.identity": "doc",
    "tensorflow.compat.v1.io.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.io.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.keras.activations.elu": "doc",
    "tensorflow.compat.v1.keras.activations.get": "doc",
    "tensorflow.compat.v1.keras.constraints.get": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanIoU": "doc",
    "tensorflow.compat.v1.keras.metrics.Poisson": "doc",
    "tensorflow.compat.v1.keras.metrics.logcosh": "doc",
    "tensorflow.compat.v1.keras.metrics.poisson": "doc",
    "tensorflow.compat.v1.keras.mixed_precision": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adam": "doc",
    "tensorflow.compat.v1.keras.optimizers.Ftrl": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1": "doc",
    "tensorflow.compat.v1.keras.regularizers.L2": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1": "doc",
    "tensorflow.compat.v1.keras.regularizers.l2": "doc",
    "tensorflow.compat.v1.keras.utils.normalize": "doc",
    "tensorflow.compat.v1.linalg.LinearOperator": "doc",
    "tensorflow.compat.v1.logging.get_verbosity": "doc",
    "tensorflow.compat.v1.logging.set_verbosity": "doc",
    "tensorflow.compat.v1.math.confusion_matrix": "doc",
    "tensorflow.compat.v1.nn.quantized_avg_pool": "doc",
    "tensorflow.compat.v1.nn.quantized_max_pool": "doc",
    "tensorflow.compat.v1.quantization.quantize": "doc",
    "tensorflow.compat.v1.ragged.constant_value": "doc",
    "tensorflow.compat.v1.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.sets.set_intersection": "doc",
    "tensorflow.compat.v1.signal.hamming_window": "doc",
    "tensorflow.compat.v1.sparse.segment_sqrt_n": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket": "doc",
    "tensorflow.compat.v1.strings.regex_replace": "doc",
    "tensorflow.compat.v1.strings.unicode_split": "doc",
    "tensorflow.compat.v1.summary.Summary.Audio": "doc",
    "tensorflow.compat.v1.summary.Summary.Image": "doc",
    "tensorflow.compat.v1.sysconfig.get_include": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_max": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_min": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_sub": "doc",
    "tensorflow.compat.v1.tensor_scatter_update": "doc",
    "tensorflow.compat.v1.test.benchmark_config": "doc",
    "tensorflow.compat.v1.test.is_gpu_available": "doc",
    "tensorflow.compat.v1.tpu.cross_replica_sum": "doc",
    "tensorflow.compat.v1.tpu.initialize_system": "doc",
    "tensorflow.compat.v1.train.SequenceExample": "doc",
    "tensorflow.compat.v1.train.StepCounterHook": "doc",
    "tensorflow.compat.v1.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.unsorted_segment_prod": "doc",
    "tensorflow.config.get_soft_device_placement": "doc",
    "tensorflow.config.set_soft_device_placement": "doc",
    "tensorflow.debugging.assert_proper_iterable": "doc",
    "tensorflow.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.estimator.LogisticRegressionHead": "doc",
    "tensorflow.experimental.numpy.random.random": "doc",
    "tensorflow.keras.datasets.reuters.load_data": "doc",
    "tensorflow.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.linalg.LinearOperatorComposition": "doc",
    "tensorflow.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.random.uniform_candidate_sampler": "doc",
    "tensorflow.raw_ops.AssertCardinalityDataset": "doc",
    "tensorflow.raw_ops.DebugGradientRefIdentity": "doc",
    "tensorflow.raw_ops.DenseToDenseSetOperation": "doc",
    "tensorflow.raw_ops.DestroyTemporaryVariable": "doc",
    "tensorflow.raw_ops.ExperimentalSleepDataset": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandle": "doc",
    "tensorflow.raw_ops.OrderedMapIncompleteSize": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2D": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseMatMul": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformV2": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormal": "doc",
    "tensorflow.raw_ops.StringToHashBucketStrong": "doc",
    "tensorflow.raw_ops.TensorArrayGradWithShape": "doc",
    "tensorflow.raw_ops.TensorStridedSliceUpdate": "doc",
    "tensorflow.raw_ops.UnicodeDecodeWithOffsets": "doc",
    "tensorflow.compat.v1.ConditionalAccumulator": "doc",
    "tensorflow.compat.v1.NameAttrList.AttrEntry": "doc",
    "tensorflow.compat.v1.add_check_numerics_ops": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.autograph.experimental": "doc",
    "tensorflow.compat.v1.broadcast_static_shape": "doc",
    "tensorflow.compat.v1.compat.dimension_value": "doc",
    "tensorflow.compat.v1.data.experimental.scan": "doc",
    "tensorflow.compat.v1.data.get_output_shapes": "doc",
    "tensorflow.compat.v1.debugging.assert_equal": "doc",
    "tensorflow.compat.v1.debugging.experimental": "doc",
    "tensorflow.compat.v1.disable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.distributions.StudentT": "doc",
    "tensorflow.compat.v1.enable_control_flow_v2": "doc",
    "tensorflow.compat.v1.enable_eager_execution": "doc",
    "tensorflow.compat.v1.enable_tensor_equality": "doc",
    "tensorflow.compat.v1.errors.OutOfRangeError": "doc",
    "tensorflow.compat.v1.estimator.DNNEstimator": "doc",
    "tensorflow.compat.v1.estimator.DNNRegressor": "doc",
    "tensorflow.compat.v1.estimator.FinalOpsHook": "doc",
    "tensorflow.compat.v1.estimator.ProfilerHook": "doc",
    "tensorflow.compat.v1.estimator.experimental": "doc",
    "tensorflow.compat.v1.fixed_size_partitioner": "doc",
    "tensorflow.compat.v1.image.rgb_to_grayscale": "doc",
    "tensorflow.compat.v1.initializers.he_normal": "doc",
    "tensorflow.compat.v1.io.decode_json_example": "doc",
    "tensorflow.compat.v1.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.keras.activations.relu": "doc",
    "tensorflow.compat.v1.keras.activations.selu": "doc",
    "tensorflow.compat.v1.keras.activations.tanh": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters": "doc",
    "tensorflow.compat.v1.keras.initializers.get": "doc",
    "tensorflow.compat.v1.keras.metrics.Accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.log_cosh": "doc",
    "tensorflow.compat.v1.keras.optimizers.Nadam": "doc",
    "tensorflow.compat.v1.keras.regularizers.get": "doc",
    "tensorflow.compat.v1.math.is_non_decreasing": "doc",
    "tensorflow.compat.v1.math.reciprocal_no_nan": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1": "doc",
    "tensorflow.compat.v1.math.special.bessel_j0": "doc",
    "tensorflow.compat.v1.math.special.bessel_j1": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1": "doc",
    "tensorflow.compat.v1.math.special.bessel_y0": "doc",
    "tensorflow.compat.v1.math.special.bessel_y1": "doc",
    "tensorflow.compat.v1.metrics.true_negatives": "doc",
    "tensorflow.compat.v1.metrics.true_positives": "doc",
    "tensorflow.compat.v1.nn.batch_normalization": "doc",
    "tensorflow.compat.v1.orthogonal_initializer": "doc",
    "tensorflow.compat.v1.queue.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.random.set_random_seed": "doc",
    "tensorflow.compat.v1.random.stateless_gamma": "doc",
    "tensorflow.compat.v1.signal.overlap_and_add": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket": "doc",
    "tensorflow.compat.v1.strings.unicode_script": "doc",
    "tensorflow.compat.v1.summary.tensor_summary": "doc",
    "tensorflow.compat.v1.test.StubOutForTesting": "doc",
    "tensorflow.compat.v1.test.is_built_with_xla": "doc",
    "tensorflow.compat.v1.test.test_src_dir_path": "doc",
    "tensorflow.compat.v1.train.MonitoredSession": "doc",
    "tensorflow.compat.v1.train.RMSPropOptimizer": "doc",
    "tensorflow.compat.v1.train.SessionRunValues": "doc",
    "tensorflow.compat.v1.train.SummarySaverHook": "doc",
    "tensorflow.compat.v1.train.basic_train_loop": "doc",
    "tensorflow.compat.v1.train.maybe_batch_join": "doc",
    "tensorflow.compat.v1.train.summary_iterator": "doc",
    "tensorflow.compat.v1.variable_creator_scope": "doc",
    "tensorflow.experimental.numpy.random.randint": "doc",
    "tensorflow.experimental.numpy.random.uniform": "doc",
    "tensorflow.image.stateless_random_brightness": "doc",
    "tensorflow.image.stateless_random_saturation": "doc",
    "tensorflow.random.stateless_truncated_normal": "doc",
    "tensorflow.raw_ops.AddManySparseToTensorsMap": "doc",
    "tensorflow.raw_ops.BytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixComponents": "doc",
    "tensorflow.raw_ops.CombinedNonMaxSuppression": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParams": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonical": "doc",
    "tensorflow.raw_ops.DenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.DenseToSparseSetOperation": "doc",
    "tensorflow.raw_ops.DirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.EncodeJpegVariableQuality": "doc",
    "tensorflow.raw_ops.ExperimentalUniqueDataset": "doc",
    "tensorflow.raw_ops.IteratorGetNextAsOptional": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradWithArgmax": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighborGrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SendTPUEmbeddingGradients": "doc",
    "tensorflow.raw_ops.SetStatsAggregatorDataset": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDatasetV2": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformInt": "doc",
    "tensorflow.compat.v1.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental": "doc",
    "tensorflow.compat.v1.VariableSynchronization": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.autograph.set_verbosity": "doc",
    "tensorflow.compat.v1.broadcast_dynamic_shape": "doc",
    "tensorflow.compat.v1.control_flow_v2_enabled": "doc",
    "tensorflow.compat.v1.data.get_output_classes": "doc",
    "tensorflow.compat.v1.debugging.assert_scalar": "doc",
    "tensorflow.compat.v1.debugging.assert_shapes": "doc",
    "tensorflow.compat.v1.deserialize_many_sparse": "doc",
    "tensorflow.compat.v1.disable_control_flow_v2": "doc",
    "tensorflow.compat.v1.disable_eager_execution": "doc",
    "tensorflow.compat.v1.disable_tensor_equality": "doc",
    "tensorflow.compat.v1.distribute.InputContext": "doc",
    "tensorflow.compat.v1.distribute.experimental": "doc",
    "tensorflow.compat.v1.distribute.get_strategy": "doc",
    "tensorflow.compat.v1.distribute.has_strategy": "doc",
    "tensorflow.compat.v1.distributions.Bernoulli": "doc",
    "tensorflow.compat.v1.estimator.EstimatorSpec": "doc",
    "tensorflow.compat.v1.estimator.NanTensorHook": "doc",
    "tensorflow.compat.v1.estimator.tpu.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUConfig": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.gfile.DeleteRecursively": "doc",
    "tensorflow.compat.v1.image.adjust_brightness": "doc",
    "tensorflow.compat.v1.image.adjust_saturation": "doc",
    "tensorflow.compat.v1.image.random_brightness": "doc",
    "tensorflow.compat.v1.image.random_saturation": "doc",
    "tensorflow.compat.v1.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.io.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.is_variable_initialized": "doc",
    "tensorflow.compat.v1.keras.activations.swish": "doc",
    "tensorflow.compat.v1.keras.callbacks.History": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100": "doc",
    "tensorflow.compat.v1.keras.initializers.Ones": "doc",
    "tensorflow.compat.v1.keras.initializers.ones": "doc",
    "tensorflow.compat.v1.keras.metrics.Precision": "doc",
    "tensorflow.compat.v1.keras.metrics.serialize": "doc",
    "tensorflow.compat.v1.keras.models.Sequential": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adamax": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1L2": "doc",
    "tensorflow.compat.v1.linalg.matrix_transpose": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag_part": "doc",
    "tensorflow.compat.v1.manip.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.math.invert_permutation": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1e": "doc",
    "tensorflow.compat.v1.matrix_triangular_solve": "doc",
    "tensorflow.compat.v1.metrics.recall_at_top_k": "doc",
    "tensorflow.compat.v1.nn.max_pool_with_argmax": "doc",
    "tensorflow.compat.v1.quantization.dequantize": "doc",
    "tensorflow.compat.v1.random.create_rng_state": "doc",
    "tensorflow.compat.v1.summary.FileWriterCache": "doc",
    "tensorflow.compat.v1.test.is_built_with_cuda": "doc",
    "tensorflow.compat.v1.test.is_built_with_rocm": "doc",
    "tensorflow.compat.v1.tpu.outside_compilation": "doc",
    "tensorflow.compat.v1.train.CheckpointOptions": "doc",
    "tensorflow.compat.v1.train.JobDef.TasksEntry": "doc",
    "tensorflow.compat.v1.train.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.train.MomentumOptimizer": "doc",
    "tensorflow.compat.v1.train.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.train.SessionRunContext": "doc",
    "tensorflow.compat.v1.train.checkpoint_exists": "doc",
    "tensorflow.compat.v1.train.export_meta_graph": "doc",
    "tensorflow.compat.v1.train.import_meta_graph": "doc",
    "tensorflow.compat.v1.train.latest_checkpoint": "doc",
    "tensorflow.compat.v1.train.remove_checkpoint": "doc",
    "tensorflow.compat.v1.unsorted_segment_sqrt_n": "doc",
    "tensorflow.image.combined_non_max_suppression": "doc",
    "tensorflow.image.non_max_suppression_overlaps": "doc",
    "tensorflow.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.keras.preprocessing.image.load_img": "doc",
    "tensorflow.keras.preprocessing.image.save_img": "doc",
    "tensorflow.keras.utils.pack_x_y_sample_weight": "doc",
    "tensorflow.keras.utils.serialize_keras_object": "doc",
    "tensorflow.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.mlir.experimental.convert_function": "doc",
    "tensorflow.raw_ops.BatchMatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.BoostedTreesAggregateStats": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateEnsemble": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsemble": "doc",
    "tensorflow.raw_ops.ChooseFastestBranchDataset": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandleV2": "doc",
    "tensorflow.raw_ops.LogUniformCandidateSampler": "doc",
    "tensorflow.raw_ops.ParseSingleSequenceExample": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.ResourceStridedSliceAssign": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormalV2": "doc",
    "tensorflow.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.compat.v1.ConfigProto.Experimental": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.app.flags.get_help_width": "doc",
    "tensorflow.compat.v1.config.optimizer.get_jit": "doc",
    "tensorflow.compat.v1.config.optimizer.set_jit": "doc",
    "tensorflow.compat.v1.data.experimental.unique": "doc",
    "tensorflow.compat.v1.debugging.assert_greater": "doc",
    "tensorflow.compat.v1.debugging.assert_integer": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_in": "doc",
    "tensorflow.compat.v1.distribute.NcclAllReduce": "doc",
    "tensorflow.compat.v1.distributions.RegisterKL": "doc",
    "tensorflow.compat.v1.estimator.MultiClassHead": "doc",
    "tensorflow.compat.v1.estimator.SessionRunArgs": "doc",
    "tensorflow.compat.v1.estimator.SessionRunHook": "doc",
    "tensorflow.compat.v1.estimator.StopAtStepHook": "doc",
    "tensorflow.compat.v1.experimental.async_scope": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.image.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.initialize_all_variables": "doc",
    "tensorflow.compat.v1.io.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.keras.applications.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.VGG19": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19": "doc",
    "tensorflow.compat.v1.keras.callbacks.Callback": "doc",
    "tensorflow.compat.v1.keras.constraints.NonNeg": "doc",
    "tensorflow.compat.v1.keras.initializers.Zeros": "doc",
    "tensorflow.compat.v1.keras.initializers.zeros": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanTensor": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adagrad": "doc",
    "tensorflow.compat.v1.keras.optimizers.RMSprop": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1_l2": "doc",
    "tensorflow.compat.v1.keras.utils.model_to_dot": "doc",
    "tensorflow.compat.v1.linalg.lu_matrix_inverse": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_solve": "doc",
    "tensorflow.compat.v1.load_file_system_library": "doc",
    "tensorflow.compat.v1.math.special.fresnel_cos": "doc",
    "tensorflow.compat.v1.math.special.fresnel_sin": "doc",
    "tensorflow.compat.v1.moving_average_variables": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicRNNCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.MultiRNNCell": "doc",
    "tensorflow.compat.v1.nn.sufficient_statistics": "doc",
    "tensorflow.compat.v1.queue.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.ragged.RaggedTensorValue": "doc",
    "tensorflow.compat.v1.random.stateless_poisson": "doc",
    "tensorflow.compat.v1.random.stateless_uniform": "doc",
    "tensorflow.compat.v1.sparse.reduce_max_sparse": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum_sparse": "doc",
    "tensorflow.compat.v1.strings.regex_full_match": "doc",
    "tensorflow.compat.v1.sysconfig.get_build_info": "doc",
    "tensorflow.compat.v1.sysconfig.get_link_flags": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_update": "doc",
    "tensorflow.compat.v1.train.AdagradDAOptimizer": "doc",
    "tensorflow.compat.v1.train.assert_global_step": "doc",
    "tensorflow.compat.v1.train.inverse_time_decay": "doc",
    "tensorflow.compat.v1.train.shuffle_batch_join": "doc",
    "tensorflow.compat.v1.verify_tensor_all_finite": "doc",
    "tensorflow.compat.v1.xla.experimental.compile": "doc",
    "tensorflow.config.experimental_connect_to_host": "doc",
    "tensorflow.experimental.function_executor_type": "doc",
    "tensorflow.image.sample_distorted_bounding_box": "doc",
    "tensorflow.image.stateless_random_flip_up_down": "doc",
    "tensorflow.image.stateless_random_jpeg_quality": "doc",
    "tensorflow.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.random.experimental.stateless_split": "doc",
    "tensorflow.raw_ops.BoostedTreesTrainingPredict": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParamsV2": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonicalV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV3": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV4": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4Grad": "doc",
    "tensorflow.raw_ops.RecvTPUEmbeddingActivations": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyMomentum": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformIntV2": "doc",
    "tensorflow.compat.v1.compat.dimension_at_index": "doc",
    "tensorflow.compat.v1.compat.forward_compatible": "doc",
    "tensorflow.compat.v1.data.experimental.Counter": "doc",
    "tensorflow.compat.v1.data.experimental.service": "doc",
    "tensorflow.compat.v1.data.experimental.unbatch": "doc",
    "tensorflow.compat.v1.debugging.assert_negative": "doc",
    "tensorflow.compat.v1.debugging.assert_positive": "doc",
    "tensorflow.compat.v1.distribute.CrossDeviceOps": "doc",
    "tensorflow.compat.v1.distributions.Categorical": "doc",
    "tensorflow.compat.v1.distributions.Exponential": "doc",
    "tensorflow.compat.v1.distributions.Multinomial": "doc",
    "tensorflow.compat.v1.errors.AlreadyExistsError": "doc",
    "tensorflow.compat.v1.estimator.BinaryClassHead": "doc",
    "tensorflow.compat.v1.estimator.LinearEstimator": "doc",
    "tensorflow.compat.v1.estimator.StepCounterHook": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_string": "doc",
    "tensorflow.compat.v1.image.adjust_jpeg_quality": "doc",
    "tensorflow.compat.v1.image.convert_image_dtype": "doc",
    "tensorflow.compat.v1.image.non_max_suppression": "doc",
    "tensorflow.compat.v1.image.pad_to_bounding_box": "doc",
    "tensorflow.compat.v1.image.random_flip_up_down": "doc",
    "tensorflow.compat.v1.image.random_jpeg_quality": "doc",
    "tensorflow.compat.v1.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.io.parse_sequence_example": "doc",
    "tensorflow.compat.v1.keras.activations.sigmoid": "doc",
    "tensorflow.compat.v1.keras.activations.softmax": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet": "doc",
    "tensorflow.compat.v1.keras.constraints.MaxNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.non_neg": "doc",
    "tensorflow.compat.v1.keras.initializers.normal": "doc",
    "tensorflow.compat.v1.keras.metrics.deserialize": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorDiag": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_matmul": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sum": "doc",
    "tensorflow.compat.v1.mixed_precision.LossScale": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicLSTMCell": "doc",
    "tensorflow.compat.v1.random.stateless_binomial": "doc",
    "tensorflow.compat.v1.random_normal_initializer": "doc",
    "tensorflow.compat.v1.strings.unicode_transcode": "doc",
    "tensorflow.compat.v1.summary.TaggedRunMetadata": "doc",
    "tensorflow.compat.v1.tpu.experimental.Topology": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch": "doc",
    "tensorflow.compat.forward_compatibility_horizon": "doc",
    "tensorflow.config.experimental.get_memory_usage": "doc",
    "tensorflow.data.experimental.service.distribute": "doc",
    "tensorflow.keras.applications.xception.Xception": "doc",
    "tensorflow.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.random.experimental.create_rng_state": "doc",
    "tensorflow.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.raw_ops.AnonymousMultiDeviceIterator": "doc",
    "tensorflow.raw_ops.AnonymousRandomSeedGenerator": "doc",
    "tensorflow.raw_ops.ApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeStatsSummary": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsembleV2": "doc",
    "tensorflow.raw_ops.ExperimentalAutoShardDataset": "doc",
    "tensorflow.raw_ops.FilterByLastComponentDataset": "doc",
    "tensorflow.raw_ops.FixedUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.GenerateBoundingBoxProposals": "doc",
    "tensorflow.raw_ops.MaxIntraOpParallelismDataset": "doc",
    "tensorflow.raw_ops.ParameterizedTruncatedNormal": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRequantize": "doc",
    "tensorflow.raw_ops.ResourceApplyAdamWithAmsgrad": "doc",
    "tensorflow.raw_ops.ResourceApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ResourceApplyGradientDescent": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBoxV2": "doc",
    "tensorflow.raw_ops.SparseConditionalAccumulator": "doc",
    "tensorflow.raw_ops.TakeManySparseFromTensorsMap": "doc",
    "tensorflow.compat.v1.ConditionalAccumulatorBase": "doc",
    "tensorflow.compat.v1.RunMetadata.FunctionGraphs": "doc",
    "tensorflow.compat.v1.SummaryMetadata.PluginData": "doc",
    "tensorflow.compat.v1.config.get_visible_devices": "doc",
    "tensorflow.compat.v1.config.set_visible_devices": "doc",
    "tensorflow.compat.v1.data.experimental.Optional": "doc",
    "tensorflow.compat.v1.distributions.Distribution": "doc",
    "tensorflow.compat.v1.estimator.SessionRunValues": "doc",
    "tensorflow.compat.v1.estimator.SummarySaverHook": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimator": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.graph_util.must_run_on_cpu": "doc",
    "tensorflow.compat.v1.histogram_fixed_width_bins": "doc",
    "tensorflow.compat.v1.image.crop_to_bounding_box": "doc",
    "tensorflow.compat.v1.image.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.initializers.random_normal": "doc",
    "tensorflow.compat.v1.io.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.compat.v1.io.TFRecordCompressionType": "doc",
    "tensorflow.compat.v1.io.deserialize_many_sparse": "doc",
    "tensorflow.compat.v1.keras.activations.softplus": "doc",
    "tensorflow.compat.v1.keras.activations.softsign": "doc",
    "tensorflow.compat.v1.keras.constraints.UnitNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.max_norm": "doc",
    "tensorflow.compat.v1.keras.initializers.uniform": "doc",
    "tensorflow.compat.v1.keras.metrics.KLDivergence": "doc",
    "tensorflow.compat.v1.keras.metrics.LogCoshError": "doc",
    "tensorflow.compat.v1.keras.metrics.SquaredHinge": "doc",
    "tensorflow.compat.v1.keras.optimizers.Optimizer": "doc",
    "tensorflow.compat.v1.keras.optimizers.serialize": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_prod": "doc",
    "tensorflow.compat.v1.metrics.precision_at_top_k": "doc",
    "tensorflow.compat.v1.nest.assert_same_structure": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMStateTuple": "doc",
    "tensorflow.compat.v1.nn.static_state_saving_rnn": "doc",
    "tensorflow.compat.v1.quantize_and_dequantize_v4": "doc",
    "tensorflow.compat.v1.random_uniform_initializer": "doc",
    "tensorflow.compat.v1.resource_variables_enabled": "doc",
    "tensorflow.compat.v1.sparse.sparse_dense_matmul": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.summary.SummaryDescription": "doc",
    "tensorflow.compat.v1.summary.all_v2_summary_ops": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_state": "doc",
    "tensorflow.compat.v1.train.init_from_checkpoint": "doc",
    "tensorflow.compat.v1.xla.experimental.jit_scope": "doc",
    "tensorflow.config.experimental.get_memory_growth": "doc",
    "tensorflow.config.experimental.set_memory_growth": "doc",
    "tensorflow.image.generate_bounding_box_proposals": "doc",
    "tensorflow.image.non_max_suppression_with_scores": "doc",
    "tensorflow.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.raw_ops.BoostedTreesGetEnsembleStates": "doc",
    "tensorflow.raw_ops.BoostedTreesSerializeEnsemble": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToSparseTensor": "doc",
    "tensorflow.raw_ops.ExperimentalAssertNextDataset": "doc",
    "tensorflow.raw_ops.ExperimentalIteratorGetDevice": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFileV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionWithOverlaps": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariantGradient": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompletedV2": "doc",
    "tensorflow.raw_ops.RequantizationRangePerChannel": "doc",
    "tensorflow.raw_ops.SoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.SparseTensorToCSRSparseMatrix": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullInt": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.data.experimental.Structure": "doc",
    "tensorflow.compat.v1.debugging.assert_all_finite": "doc",
    "tensorflow.compat.v1.debugging.assert_less_equal": "doc",
    "tensorflow.compat.v1.debugging.assert_none_equal": "doc",
    "tensorflow.compat.v1.debugging.is_non_decreasing": "doc",
    "tensorflow.compat.v1.debugging.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.distribute.MirroredStrategy": "doc",
    "tensorflow.compat.v1.distributions.kl_divergence": "doc",
    "tensorflow.compat.v1.errors.InvalidArgumentError": "doc",
    "tensorflow.compat.v1.estimator.BaselineEstimator": "doc",
    "tensorflow.compat.v1.estimator.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.estimator.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.estimator.SessionRunContext": "doc",
    "tensorflow.compat.v1.estimator.WarmStartSettings": "doc",
    "tensorflow.compat.v1.image.resize_image_with_pad": "doc",
    "tensorflow.compat.v1.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.compat.v1.keras.activations.serialize": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.Xception": "doc",
    "tensorflow.compat.v1.keras.applications.densenet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50": "doc",
    "tensorflow.compat.v1.keras.applications.xception": "doc",
    "tensorflow.compat.v1.keras.callbacks.TensorBoard": "doc",
    "tensorflow.compat.v1.keras.constraints.serialize": "doc",
    "tensorflow.compat.v1.keras.constraints.unit_norm": "doc",
    "tensorflow.compat.v1.keras.initializers.Constant": "doc",
    "tensorflow.compat.v1.keras.initializers.Identity": "doc",
    "tensorflow.compat.v1.keras.initializers.constant": "doc",
    "tensorflow.compat.v1.keras.initializers.identity": "doc",
    "tensorflow.compat.v1.keras.metrics.TrueNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.TruePositives": "doc",
    "tensorflow.compat.v1.keras.metrics.kl_divergence": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn": "doc",
    "tensorflow.compat.v1.math.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.sysconfig.get_compile_flags": "doc",
    "tensorflow.compat.v1.test.assert_equal_graph_def": "doc",
    "tensorflow.compat.v1.test.compute_gradient_error": "doc",
    "tensorflow.compat.v1.train.Features.FeatureEntry": "doc",
    "tensorflow.compat.v1.train.cosine_decay_restarts": "doc",
    "tensorflow.config.experimental.get_device_details": "doc",
    "tensorflow.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.keras.preprocessing.image.smart_resize": "doc",
    "tensorflow.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseBatch": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetCardinality": "doc",
    "tensorflow.raw_ops.ExperimentalMapAndBatchDataset": "doc",
    "tensorflow.raw_ops.LearnedUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRelu": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRelu": "doc",
    "tensorflow.raw_ops.ResourceConditionalAccumulator": "doc",
    "tensorflow.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.compat.v1.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.app.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.assert_variables_initialized": "doc",
    "tensorflow.compat.v1.create_partitioned_variables": "doc",
    "tensorflow.compat.v1.data.experimental.CsvDataset": "doc",
    "tensorflow.compat.v1.data.experimental.SqlDataset": "doc",
    "tensorflow.compat.v1.data.experimental.to_variant": "doc",
    "tensorflow.compat.v1.distribute.OneDeviceStrategy": "doc",
    "tensorflow.compat.v1.errors.PermissionDeniedError": "doc",
    "tensorflow.compat.v1.estimator.train_and_evaluate": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.graph_util.extract_sub_graph": "doc",
    "tensorflow.compat.v1.image.random_flip_left_right": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNet": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2": "doc",
    "tensorflow.compat.v1.keras.callbacks.CallbackList": "doc",
    "tensorflow.compat.v1.keras.constraints.Constraint": "doc",
    "tensorflow.compat.v1.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist": "doc",
    "tensorflow.compat.v1.keras.initializers.he_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.serialize": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.compat.v1.keras.models.model_from_json": "doc",
    "tensorflow.compat.v1.keras.models.model_from_yaml": "doc",
    "tensorflow.compat.v1.keras.optimizers.deserialize": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence": "doc",
    "tensorflow.compat.v1.keras.regularizers.serialize": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.metrics.mean_cosine_distance": "doc",
    "tensorflow.compat.v1.min_max_variable_partitioner": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.nn.scale_regularization_loss": "doc",
    "tensorflow.compat.v1.nn.uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.stateless_multinomial": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_strong": "doc",
    "tensorflow.compat.v1.train.experimental.LossScale": "doc",
    "tensorflow.config.experimental.get_visible_devices": "doc",
    "tensorflow.config.experimental.set_visible_devices": "doc",
    "tensorflow.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.raw_ops.BoostedTreesDeserializeEnsemble": "doc",
    "tensorflow.raw_ops.BoostedTreesExampleDebugOutputs": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingIntegerBatch": "doc",
    "tensorflow.raw_ops.ExperimentalIgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalLatencyStatsDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgsGradient": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsGradient": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.SparseSegmentSumWithNumSegments": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullIntV2": "doc",
    "tensorflow.raw_ops.StatsAggregatorSetSummaryWriter": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_string": "doc",
    "tensorflow.compat.v1.data.experimental.cardinality": "doc",
    "tensorflow.compat.v1.debugging.assert_non_negative": "doc",
    "tensorflow.compat.v1.debugging.assert_non_positive": "doc",
    "tensorflow.compat.v1.distribute.get_loss_reduction": "doc",
    "tensorflow.compat.v1.estimator.experimental.KMeans": "doc",
    "tensorflow.compat.v1.estimator.export.ExportOutput": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.image.resize_nearest_neighbor": "doc",
    "tensorflow.compat.v1.image.resize_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.keras.activations.deserialize": "doc",
    "tensorflow.compat.v1.keras.activations.exponential": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50V2": "doc",
    "tensorflow.compat.v1.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.compat.v1.keras.constraints.deserialize": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.load_data": "doc",
    "tensorflow.compat.v1.keras.initializers.Orthogonal": "doc",
    "tensorflow.compat.v1.keras.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_accuracy": "doc",
    "tensorflow.compat.v1.keras.utils.CustomObjectScope": "doc",
    "tensorflow.compat.v1.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.compat.v1.keras.utils.get_source_inputs": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.compat.v1.metrics.sparse_precision_at_k": "doc",
    "tensorflow.compat.v1.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.random.experimental.Algorithm": "doc",
    "tensorflow.compat.v1.random.experimental.Generator": "doc",
    "tensorflow.compat.v1.signal.inverse_stft_window_fn": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_strong": "doc",
    "tensorflow.compat.v1.strings.unsorted_segment_join": "doc",
    "tensorflow.compat.v1.types.experimental.TensorLike": "doc",
    "tensorflow.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalization": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseAggregateStats": "doc",
    "tensorflow.raw_ops.ExperimentalChooseFastestDataset": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByWindowDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSlidingWindowDataset": "doc",
    "tensorflow.raw_ops.InfeedEnqueuePrelinearizedBuffer": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBias": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyKerasMomentum": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanWithNumSegments": "doc",
    "tensorflow.compat.v1.MetaGraphDef.SignatureDefEntry": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.autograph.experimental.Feature": "doc",
    "tensorflow.compat.v1.data.experimental.StatsOptions": "doc",
    "tensorflow.compat.v1.data.experimental.from_variant": "doc",
    "tensorflow.compat.v1.debugging.assert_greater_equal": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.estimator.export.PredictOutput": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec": "doc",
    "tensorflow.compat.v1.experimental.async_clear_error": "doc",
    "tensorflow.compat.v1.keras.activations.hard_sigmoid": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetLarge": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152V2": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.compat.v1.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.compat.v1.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.compat.v1.keras.constraints.min_max_norm": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecay": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearModel": "doc",
    "tensorflow.compat.v1.keras.initializers.Initializer": "doc",
    "tensorflow.compat.v1.keras.initializers.deserialize": "doc",
    "tensorflow.compat.v1.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine_proximity": "doc",
    "tensorflow.compat.v1.keras.models.model_from_config": "doc",
    "tensorflow.compat.v1.keras.regularizers.Regularizer": "doc",
    "tensorflow.compat.v1.keras.regularizers.deserialize": "doc",
    "tensorflow.compat.v1.keras.utils.get_custom_objects": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.compat.v1.logging.TaskLevelStatusMessage": "doc",
    "tensorflow.compat.v1.metrics.average_precision_at_k": "doc",
    "tensorflow.compat.v1.mixed_precision.FixedLossScale": "doc",
    "tensorflow.compat.v1.report_uninitialized_variables": "doc",
    "tensorflow.compat.v1.test.TestCase.failureException": "doc",
    "tensorflow.compat.v1.test.is_built_with_gpu_support": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.compat.v1.train.ExponentialMovingAverage": "doc",
    "tensorflow.compat.v1.train.MonitoredTrainingSession": "doc",
    "tensorflow.compat.v1.train.ProximalAdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.experimental.PythonState": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch_join": "doc",
    "tensorflow.compat.v1.variable_axis_size_partitioner": "doc",
    "tensorflow.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.config.optimizer.get_experimental_options": "doc",
    "tensorflow.config.optimizer.set_experimental_options": "doc",
    "tensorflow.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.keras.mixed_precision.experimental.Policy": "doc",
    "tensorflow.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeQuantileSummaries": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByReducerDataset": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorHandle": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannel": "doc",
    "tensorflow.raw_ops.IsBoostedTreesEnsembleInitialized": "doc",
    "tensorflow.raw_ops.LegacyParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorToStringHandle": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndRelu": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorNumAccumulated": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNWithNumSegments": "doc",
    "tensorflow.raw_ops.TensorListScatterIntoExistingList": "doc",
    "tensorflow.compat.v1.data.experimental.RandomDataset": "doc",
    "tensorflow.compat.v1.data.experimental.get_structure": "doc",
    "tensorflow.compat.v1.data.experimental.ignore_errors": "doc",
    "tensorflow.compat.v1.data.experimental.latency_stats": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch": "doc",
    "tensorflow.compat.v1.distribute.ReductionToOneDevice": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.compat.v1.estimator.PoissonRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.inputs.numpy_input_fn": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3": "doc",
    "tensorflow.compat.v1.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomNormal": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.compat.v1.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.compat.v1.keras.utils.custom_object_scope": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_name": "doc",
    "tensorflow.compat.v1.lite.experimental.load_delegate": "doc",
    "tensorflow.compat.v1.metrics.mean_per_class_accuracy": "doc",
    "tensorflow.compat.v1.metrics.root_mean_squared_error": "doc",
    "tensorflow.compat.v1.nn.local_response_normalization": "doc",
    "tensorflow.compat.v1.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.compat.v1.summary.get_summary_description": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.data.experimental.service.register_dataset": "doc",
    "tensorflow.raw_ops.BoostedTreesFlushQuantileSummaries": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropInput": "doc",
    "tensorflow.raw_ops.ExperimentalNonSerializableDataset": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorSummary": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.raw_ops.SparseApplyProximalGradientDescent": "doc",
    "tensorflow.compat.v1.app.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.config.get_soft_device_placement": "doc",
    "tensorflow.compat.v1.config.set_soft_device_placement": "doc",
    "tensorflow.compat.v1.data.make_initializable_iterator": "doc",
    "tensorflow.compat.v1.debugging.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.debugging.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.compat.v1.estimator.LogisticRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.inputs.pandas_input_fn": "doc",
    "tensorflow.compat.v1.graph_util.remove_training_nodes": "doc",
    "tensorflow.compat.v1.io.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.load_data": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomUniform": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.random_normal": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorComposition": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.dynamic_rnn": "doc",
    "tensorflow.compat.v1.mixed_precision.DynamicLossScale": "doc",
    "tensorflow.compat.v1.nn.log_uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.nondifferentiable_batch_function": "doc",
    "tensorflow.compat.v1.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.compat.v1.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.compat.v1.random.uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.required_space_to_batch_paddings": "doc",
    "tensorflow.compat.v1.train.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.uniform_unit_scaling_initializer": "doc",
    "tensorflow.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorFromStringHandle": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorGetNextFromShard": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.SparseSoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.StatelessSampleDistortedBoundingBox": "doc",
    "tensorflow.raw_ops.ThreadUnsafeUnigramCandidateSampler": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.data.experimental.TensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_window": "doc",
    "tensorflow.compat.v1.debugging.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.compat.v1.estimator.export.RegressionOutput": "doc",
    "tensorflow.compat.v1.initializers.uniform_unit_scaling": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_object": "doc",
    "tensorflow.compat.v1.random.stateless_truncated_normal": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding_column": "doc",
    "tensorflow.compat.v1.train.experimental.FixedLossScale": "doc",
    "tensorflow.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalizationGrad": "doc",
    "tensorflow.raw_ops.BoostedTreesEnsembleResourceHandleOp": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingRaggedTensorBatch": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseTensorBatch": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndDequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRequantize": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalGradientDescent": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_sparse_tensor": "doc",
    "tensorflow.compat.v1.data.experimental.ThreadingOptions": "doc",
    "tensorflow.compat.v1.distributions.DirichletMultinomial": "doc",
    "tensorflow.compat.v1.image.combined_non_max_suppression": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_overlaps": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.compat.v1.keras.constraints.RadialConstraint": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.compat.v1.keras.estimator.model_to_estimator": "doc",
    "tensorflow.compat.v1.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.load_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.save_img": "doc",
    "tensorflow.compat.v1.keras.utils.serialize_keras_object": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TfLiteRNNCell": "doc",
    "tensorflow.compat.v1.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.compat.v1.metrics.sensitivity_at_specificity": "doc",
    "tensorflow.compat.v1.metrics.specificity_at_sensitivity": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_function": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdagradParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.compat.v1.train.MonitoredSession.StepContext": "doc",
    "tensorflow.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.image.stateless_sample_distorted_bounding_box": "doc",
    "tensorflow.keras.mixed_precision.experimental.set_policy": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.ExperimentalBytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.ExperimentalParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSetStatsAggregatorDataset": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.raw_ops.StatelessParameterizedTruncatedNormal": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_host": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_indexed_slices": "doc",
    "tensorflow.compat.v1.data.experimental.DistributeOptions": "doc",
    "tensorflow.compat.v1.data.experimental.OptionalStructure": "doc",
    "tensorflow.compat.v1.data.experimental.enumerate_dataset": "doc",
    "tensorflow.compat.v1.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.compat.v1.executing_eagerly_outside_functions": "doc",
    "tensorflow.compat.v1.experimental.function_executor_type": "doc",
    "tensorflow.compat.v1.image.resize_image_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.image.sample_distorted_bounding_box": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.compat.v1.keras.constraints.radial_constraint": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TFLiteLSTMCell": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_split": "doc",
    "tensorflow.compat.v1.register_tensor_conversion_function": "doc",
    "tensorflow.compat.v1.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.compat.v1.sparse.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.train.experimental.DynamicLossScale": "doc",
    "tensorflow.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.compat.v1.compat.forward_compatibility_horizon": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_usage": "doc",
    "tensorflow.compat.v1.data.experimental.assert_cardinality": "doc",
    "tensorflow.compat.v1.data.experimental.get_single_element": "doc",
    "tensorflow.compat.v1.data.experimental.rejection_resample": "doc",
    "tensorflow.compat.v1.data.experimental.service.distribute": "doc",
    "tensorflow.compat.v1.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.compat.v1.distributions.ReparameterizationType": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.compat.v1.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.xception.Xception": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.compat.v1.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.compat.v1.metrics.true_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize": "doc",
    "tensorflow.compat.v1.random.experimental.create_rng_state": "doc",
    "tensorflow.compat.v1.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.distribute.experimental.coordinator.RemoteValue": "doc",
    "tensorflow.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplitV2": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceFlush": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndRelu": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_growth": "doc",
    "tensorflow.compat.v1.config.experimental.set_memory_growth": "doc",
    "tensorflow.compat.v1.data.experimental.OptimizationOptions": "doc",
    "tensorflow.compat.v1.errors.error_code_from_exception_type": "doc",
    "tensorflow.compat.v1.errors.exception_type_from_error_code": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.compat.v1.image.generate_bounding_box_proposals": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_with_scores": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.compat.v1.metrics.sparse_average_precision_at_k": "doc",
    "tensorflow.compat.v1.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestGainsPerFeature": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateQuantileStreamResource": "doc",
    "tensorflow.raw_ops.ExperimentalMaxIntraOpParallelismDataset": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental.VirtualDevices": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_details": "doc",
    "tensorflow.compat.v1.data.experimental.TensorArrayStructure": "doc",
    "tensorflow.compat.v1.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.compat.v1.data.experimental.get_next_as_optional": "doc",
    "tensorflow.compat.v1.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.compat.v1.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.compat.v1.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.compat.v1.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.compat.v1.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.compat.v1.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.compat.v1.train.do_quantize_training_on_graphdef": "doc",
    "tensorflow.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannelGradient": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.raw_ops.QuantizedBatchNormWithGlobalNormalization": "doc",
    "tensorflow.compat.v1.autograph.experimental.set_loop_options": "doc",
    "tensorflow.compat.v1.config.experimental.get_visible_devices": "doc",
    "tensorflow.compat.v1.config.experimental.set_visible_devices": "doc",
    "tensorflow.compat.v1.data.experimental.RaggedTensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.compat.v1.errors.raise_exception_on_not_ok_status": "doc",
    "tensorflow.compat.v1.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.compat.v1.experimental.register_filesystem_plugin": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.compat.v1.keras.utils.register_keras_serializable": "doc",
    "tensorflow.compat.v1.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits_v2": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceHandleOp": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.app.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.compat.v1.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndReluAndRequantize": "doc",
    "tensorflow.compat.v1.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.compat.v1.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.compat.v1.config.optimizer.get_experimental_options": "doc",
    "tensorflow.compat.v1.config.optimizer.set_experimental_options": "doc",
    "tensorflow.compat.v1.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.compat.v1.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.graph_util.convert_variables_to_constants": "doc",
    "tensorflow.compat.v1.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_input": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.tpu.experimental.shared_embedding_columns": "doc",
    "tensorflow.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.data.experimental.service.register_dataset": "doc",
    "tensorflow.compat.v1.graph_util.tensor_shape_from_node_def_name": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_filter": "doc",
    "tensorflow.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceDeserialize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.compat.v1.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.compat.v1.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.compat.v1.lite.experimental.convert_op_hints_to_stubs": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceAddSummaries": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndReluAndRequantize": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.compat.v1.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.raw_ops.IsBoostedTreesQuantileStreamResourceInitialized": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.app.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.compat.v1.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.compat.v1.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.compat.v1.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.compat.v1.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental.EmbeddingConfigSpec": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.compat.v1.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.compat.v1.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.lite.experimental.get_potentially_supported_ops": "doc",
    "tensorflow.compat.v1.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.compat.v1.mixed_precision.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSignedSumAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceGetBucketBoundaries": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.compat.v1.train.experimental.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.compat.v1.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.compat.v1.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch_with_legacy_function": "doc",
    "tensorflow.compat.v1.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.compat.v1.mixed_precision.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.tpu.experimental.StochasticGradientDescentParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.compat.v1.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.compat.v1.mixed_precision.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.compat.v1.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc",
    "tensorflow.nn.local_response_normalization": "doc",
    "tensorflow.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.AggregationMethod": "doc",
    "tensorflow.IndexedSlicesSpec": "doc",
    "tensorflow.executing_eagerly": "doc",
    "tensorflow.make_tensor_proto": "doc",
    "tensorflow.zeros_initializer": "doc",
    "tensorflow.io.decode_compressed": "doc",
    "tensorflow.nn.normalize_moments": "doc",
    "tensorflow.train.latest_checkpoint": "doc",
    "tensorflow.metrics.PrecisionAtRecall": "doc",
    "tensorflow.strings.unicode_transcode": "doc",
    "tensorflow.debugging.is_numeric_tensor": "doc",
    "tensorflow.estimator.BaselineEstimator": "doc",
    "tensorflow.estimator.SecondOrStepTimer": "doc",
    "tensorflow.distribute.DistributedValues": "doc",
    "tensorflow.distribute.OneDeviceStrategy": "doc",
    "tensorflow.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.experimental.async_clear_error": "doc",
    "tensorflow.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.data.experimental.enumerate_dataset": "doc",
    "tensorflow.keras.constraints.radial_constraint": "doc",
    "tensorflow.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.VariableSynchronization": "doc",
    "tensorflow.debugging.assert_same_float_dtype": "doc",
    "tensorflow.quantization.quantize_and_dequantize": "doc",
    "tensorflow.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.GradientTape": "doc",
    "tensorflow.OptionalSpec": "doc",
    "tensorflow.RaggedTensor": "doc",
    "tensorflow.clip_by_norm": "doc",
    "tensorflow.initializers": "doc",
    "tensorflow.load_library": "doc",
    "tensorflow.make_ndarray": "doc",
    "tensorflow.initializers.get": "doc",
    "tensorflow.data.IteratorSpec": "doc",
    "tensorflow.initializers.Ones": "doc",
    "tensorflow.keras.applications": "doc",
    "tensorflow.keras.initializers": "doc",
    "tensorflow.keras.regularizers": "doc",
    "tensorflow.unique_with_counts": "doc",
    "tensorflow.errors.AbortedError": "doc",
    "tensorflow.metrics.LogCoshError": "doc",
    "tensorflow.metrics.SquaredHinge": "doc",
    "tensorflow.initializers.Constant": "doc",
    "tensorflow.initializers.Identity": "doc",
    "tensorflow.initializers.constant": "doc",
    "tensorflow.initializers.identity": "doc",
    "tensorflow.io.extract_jpeg_shape": "doc",
    "tensorflow.keras.regularizers.L1": "doc",
    "tensorflow.keras.regularizers.L2": "doc",
    "tensorflow.keras.regularizers.l1": "doc",
    "tensorflow.keras.regularizers.l2": "doc",
    "tensorflow.estimator.DNNRegressor": "doc",
    "tensorflow.initializers.HeUniform": "doc",
    "tensorflow.initializers.he_normal": "doc",
    "tensorflow.initializers.serialize": "doc",
    "tensorflow.keras.initializers.get": "doc",
    "tensorflow.keras.regularizers.get": "doc",
    "tensorflow.distribute.InputContext": "doc",
    "tensorflow.initializers.Orthogonal": "doc",
    "tensorflow.initializers.he_uniform": "doc",
    "tensorflow.initializers.orthogonal": "doc",
    "tensorflow.keras.initializers.Ones": "doc",
    "tensorflow.keras.regularizers.L1L2": "doc",
    "tensorflow.initializers.LecunNormal": "doc",
    "tensorflow.initializers.deserialize": "doc",
    "tensorflow.keras.applications.VGG16": "doc",
    "tensorflow.keras.applications.VGG19": "doc",
    "tensorflow.keras.applications.vgg16": "doc",
    "tensorflow.keras.applications.vgg19": "doc",
    "tensorflow.keras.utils.model_to_dot": "doc",
    "tensorflow.errors.AlreadyExistsError": "doc",
    "tensorflow.initializers.GlorotNormal": "doc",
    "tensorflow.initializers.LecunUniform": "doc",
    "tensorflow.initializers.RandomNormal": "doc",
    "tensorflow.initializers.lecun_normal": "doc",
    "tensorflow.initializers.GlorotUniform": "doc",
    "tensorflow.initializers.RandomUniform": "doc",
    "tensorflow.initializers.glorot_normal": "doc",
    "tensorflow.initializers.lecun_uniform": "doc",
    "tensorflow.initializers.random_normal": "doc",
    "tensorflow.keras.metrics.LogCoshError": "doc",
    "tensorflow.keras.metrics.SquaredHinge": "doc",
    "tensorflow.initializers.glorot_uniform": "doc",
    "tensorflow.initializers.random_uniform": "doc",
    "tensorflow.keras.applications.ResNet50": "doc",
    "tensorflow.keras.applications.resnet50": "doc",
    "tensorflow.keras.initializers.Constant": "doc",
    "tensorflow.keras.initializers.Identity": "doc",
    "tensorflow.keras.initializers.constant": "doc",
    "tensorflow.keras.initializers.identity": "doc",
    "tensorflow.estimator.train_and_evaluate": "doc",
    "tensorflow.keras.applications.ResNet101": "doc",
    "tensorflow.keras.applications.ResNet152": "doc",
    "tensorflow.keras.applications.resnet_v2": "doc",
    "tensorflow.keras.initializers.he_normal": "doc",
    "tensorflow.keras.initializers.serialize": "doc",
    "tensorflow.keras.regularizers.serialize": "doc",
    "tensorflow.keras.applications.ResNet50V2": "doc",
    "tensorflow.keras.initializers.Orthogonal": "doc",
    "tensorflow.keras.initializers.he_uniform": "doc",
    "tensorflow.keras.initializers.orthogonal": "doc",
    "tensorflow.keras.applications.DenseNet121": "doc",
    "tensorflow.keras.applications.DenseNet169": "doc",
    "tensorflow.keras.applications.DenseNet201": "doc",
    "tensorflow.keras.applications.InceptionV3": "doc",
    "tensorflow.keras.applications.MobileNetV2": "doc",
    "tensorflow.keras.applications.NASNetLarge": "doc",
    "tensorflow.keras.applications.ResNet101V2": "doc",
    "tensorflow.keras.applications.ResNet152V2": "doc",
    "tensorflow.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.keras.initializers.LecunNormal": "doc",
    "tensorflow.keras.initializers.deserialize": "doc",
    "tensorflow.keras.regularizers.deserialize": "doc",
    "tensorflow.keras.utils.get_custom_objects": "doc",
    "tensorflow.train.ExponentialMovingAverage": "doc",
    "tensorflow.experimental.numpy.diag_indices": "doc",
    "tensorflow.experimental.numpy.floor_divide": "doc",
    "tensorflow.keras.applications.NASNetMobile": "doc",
    "tensorflow.keras.applications.efficientnet": "doc",
    "tensorflow.keras.applications.inception_v3": "doc",
    "tensorflow.keras.applications.mobilenet_v2": "doc",
    "tensorflow.keras.applications.mobilenet_v3": "doc",
    "tensorflow.keras.initializers.GlorotNormal": "doc",
    "tensorflow.keras.initializers.LecunUniform": "doc",
    "tensorflow.keras.initializers.RandomNormal": "doc",
    "tensorflow.keras.initializers.lecun_normal": "doc",
    "tensorflow.keras.initializers.GlorotUniform": "doc",
    "tensorflow.keras.initializers.RandomUniform": "doc",
    "tensorflow.keras.initializers.glorot_normal": "doc",
    "tensorflow.keras.initializers.lecun_uniform": "doc",
    "tensorflow.keras.initializers.random_normal": "doc",
    "tensorflow.keras.applications.EfficientNetB0": "doc",
    "tensorflow.keras.applications.EfficientNetB1": "doc",
    "tensorflow.keras.applications.EfficientNetB2": "doc",
    "tensorflow.keras.applications.EfficientNetB3": "doc",
    "tensorflow.keras.applications.EfficientNetB4": "doc",
    "tensorflow.keras.applications.EfficientNetB5": "doc",
    "tensorflow.keras.applications.EfficientNetB6": "doc",
    "tensorflow.keras.applications.EfficientNetB7": "doc",
    "tensorflow.keras.applications.imagenet_utils": "doc",
    "tensorflow.keras.initializers.glorot_uniform": "doc",
    "tensorflow.keras.initializers.random_uniform": "doc",
    "tensorflow.keras.estimator.model_to_estimator": "doc",
    "tensorflow.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.data.experimental.get_single_element": "doc",
    "tensorflow.data.experimental.rejection_resample": "doc",
    "tensorflow.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.keras.utils.unpack_x_y_sample_weight": "doc",
    "tensorflow.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.random_normal_initializer": "doc",
    "tensorflow.nn.scale_regularization_loss": "doc",
    "tensorflow.VariableAggregation": "doc",
    "tensorflow.io.decode_json_example": "doc",
    "tensorflow.nn.batch_normalization": "doc",
    "tensorflow.strings.to_hash_bucket_fast": "doc",
    "tensorflow.distribute.DistributedIterator": "doc",
    "tensorflow.keras.utils.get_registered_name": "doc",
    "tensorflow.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.required_space_to_batch_paddings": "doc",
    "tensorflow.clip_by_value": "doc",
    "tensorflow.greater_equal": "doc",
    "tensorflow.stop_gradient": "doc",
    "tensorflow.strided_slice": "doc",
    "tensorflow.io.RaggedFeature": "doc",
    "tensorflow.io.VarLenFeature": "doc",
    "tensorflow.io.decode_base64": "doc",
    "tensorflow.io.encode_base64": "doc",
    "tensorflow.io.parse_example": "doc",
    "tensorflow.nest.map_structure": "doc",
    "tensorflow.keras.preprocessing": "doc",
    "tensorflow.errors.DataLossError": "doc",
    "tensorflow.errors.InternalError": "doc",
    "tensorflow.signal.kaiser_window": "doc",
    "tensorflow.metrics.TrueNegatives": "doc",
    "tensorflow.metrics.TruePositives": "doc",
    "tensorflow.metrics.kl_divergence": "doc",
    "tensorflow.strings.unicode_split": "doc",
    "tensorflow.autograph.set_verbosity": "doc",
    "tensorflow.estimator.EstimatorSpec": "doc",
    "tensorflow.estimator.NanTensorHook": "doc",
    "tensorflow.distribute.NcclAllReduce": "doc",
    "tensorflow.keras.preprocessing.text": "doc",
    "tensorflow.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.quantize_and_dequantize_v4": "doc",
    "tensorflow.random_uniform_initializer": "doc",
    "tensorflow.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.keras.metrics.TrueNegatives": "doc",
    "tensorflow.keras.metrics.TruePositives": "doc",
    "tensorflow.keras.metrics.kl_divergence": "doc",
    "tensorflow.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.data.experimental.ignore_errors": "doc",
    "tensorflow.data.experimental.latency_stats": "doc",
    "tensorflow.data.experimental.map_and_batch": "doc",
    "tensorflow.experimental.numpy.greater_equal": "doc",
    "tensorflow.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.keras.preprocessing.timeseries_dataset_from_array": "doc",
    "tensorflow.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.io.decode_and_crop_jpeg": "doc",
    "tensorflow.nn.max_pool_with_argmax": "doc",
    "tensorflow.train.get_checkpoint_state": "doc",
    "tensorflow.errors.InvalidArgumentError": "doc",
    "tensorflow.metrics.RootMeanSquaredError": "doc",
    "tensorflow.distribute.ReductionToOneDevice": "doc",
    "tensorflow.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.assert_greater": "doc",
    "tensorflow.batch_to_space": "doc",
    "tensorflow.dynamic_stitch": "doc",
    "tensorflow.recompute_grad": "doc",
    "tensorflow.io.matching_files": "doc",
    "tensorflow.train.list_variables": "doc",
    "tensorflow.histogram_fixed_width": "doc",
    "tensorflow.tensor_scatter_nd_add": "doc",
    "tensorflow.tensor_scatter_nd_max": "doc",
    "tensorflow.tensor_scatter_nd_min": "doc",
    "tensorflow.tensor_scatter_nd_sub": "doc",
    "tensorflow.strings.to_hash_bucket": "doc",
    "tensorflow.strings.unicode_script": "doc",
    "tensorflow.debugging.assert_greater": "doc",
    "tensorflow.debugging.assert_integer": "doc",
    "tensorflow.estimator.MultiClassHead": "doc",
    "tensorflow.io.serialize_many_sparse": "doc",
    "tensorflow.nest.assert_same_structure": "doc",
    "tensorflow.errors.PermissionDeniedError": "doc",
    "tensorflow.keras.datasets.boston_housing": "doc",
    "tensorflow.strings.to_hash_bucket_strong": "doc",
    "tensorflow.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.estimator.PoissonRegressionHead": "doc",
    "tensorflow.keras.utils.get_registered_object": "doc",
    "tensorflow.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.io.parse_single_sequence_example": "doc",
    "tensorflow.io.parse_sequence_example": "doc",
    "tensorflow.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.CriticalSection": "doc",
    "tensorflow.custom_gradient": "doc",
    "tensorflow.guarantee_const": "doc",
    "tensorflow.io.FixedLenFeature": "doc",
    "tensorflow.io.TFRecordOptions": "doc",
    "tensorflow.data.TextLineDataset": "doc",
    "tensorflow.train.SequenceExample": "doc",
    "tensorflow.errors.OutOfRangeError": "doc",
    "tensorflow.signal.overlap_and_add": "doc",
    "tensorflow.metrics.binary_accuracy": "doc",
    "tensorflow.estimator.BinaryClassHead": "doc",
    "tensorflow.estimator.LinearEstimator": "doc",
    "tensorflow.estimator.StepCounterHook": "doc",
    "tensorflow.keras.metrics.binary_accuracy": "doc",
    "tensorflow.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.data.experimental.group_by_window": "doc",
    "tensorflow.experimental.numpy.take_along_axis": "doc",
    "tensorflow.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.broadcast_dynamic_shape": "doc",
    "tensorflow.io.FixedLenSequenceFeature": "doc",
    "tensorflow.io.deserialize_many_sparse": "doc",
    "tensorflow.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.reverse_sequence": "doc",
    "tensorflow.nn.weighted_moments": "doc",
    "tensorflow.test.benchmark_config": "doc",
    "tensorflow.test.is_gpu_available": "doc",
    "tensorflow.metrics.CosineSimilarity": "doc",
    "tensorflow.tensor_scatter_nd_update": "doc",
    "tensorflow.estimator.SessionRunValues": "doc",
    "tensorflow.estimator.SummarySaverHook": "doc",
    "tensorflow.distribute.MirroredStrategy": "doc",
    "tensorflow.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.test.TestCase.failureException": "doc",
    "tensorflow.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.estimator.export.RegressionOutput": "doc",
    "tensorflow.keras.constraints.RadialConstraint": "doc",
    "tensorflow.train.experimental.DynamicLossScale": "doc",
    "tensorflow.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.autograph.experimental.set_loop_options": "doc",
    "tensorflow.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.test.is_built_with_gpu_support": "doc",
    "tensorflow.dynamic_partition": "doc",
    "tensorflow.grad_pass_through": "doc",
    "tensorflow.nn.ctc_unique_labels": "doc",
    "tensorflow.train.CheckpointOptions": "doc",
    "tensorflow.metrics.RecallAtPrecision": "doc",
    "tensorflow.debugging.assert_less_equal": "doc",
    "tensorflow.debugging.assert_none_equal": "doc",
    "tensorflow.estimator.LoggingTensorHook": "doc",
    "tensorflow.estimator.SessionRunContext": "doc",
    "tensorflow.estimator.WarmStartSettings": "doc",
    "tensorflow.keras.utils.get_source_inputs": "doc",
    "tensorflow.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.experimental.numpy.ascontiguousarray": "doc",
    "tensorflow.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.histogram_fixed_width_bins": "doc",
    "tensorflow.experimental.register_filesystem_plugin": "doc",
    "tensorflow.register_tensor_conversion_function": "doc",
    "tensorflow.matrix_square_root": "doc",
    "tensorflow.test.is_built_with_cuda": "doc",
    "tensorflow.test.is_built_with_rocm": "doc",
    "tensorflow.distribute.DistributedDataset": "doc",
    "tensorflow.data.experimental.assert_cardinality": "doc",
    "tensorflow.keras.utils.register_keras_serializable": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.nn.isotonic_regression": "doc",
    "tensorflow.debugging.assert_non_negative": "doc",
    "tensorflow.keras.utils.custom_object_scope": "doc",
    "tensorflow.data.experimental.OptimizationOptions": "doc",
    "tensorflow.debugging.assert_greater_equal": "doc",
    "tensorflow.debugging.assert_rank_at_least": "doc",
    "tensorflow.data.experimental.get_next_as_optional": "doc",
    "tensorflow.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.nn.sufficient_statistics": "doc",
    "tensorflow.strings.unsorted_segment_join": "doc",
    "tensorflow.nondifferentiable_batch_function": "doc",
    "tensorflow.io": "doc",
    "tensorflow.nn": "doc",
    "tensorflow.abs": "doc",
    "tensorflow.eig": "doc",
    "tensorflow.exp": "doc",
    "tensorflow.sin": "doc",
    "tensorflow.tan": "doc",
    "tensorflow.tpu": "doc",
    "tensorflow.asin": "doc",
    "tensorflow.atan": "doc",
    "tensorflow.cast": "doc",
    "tensorflow.data": "doc",
    "tensorflow.fill": "doc",
    "tensorflow.nest": "doc",
    "tensorflow.norm": "doc",
    "tensorflow.rank": "doc",
    "tensorflow.scan": "doc",
    "tensorflow.sets": "doc",
    "tensorflow.sign": "doc",
    "tensorflow.sinh": "doc",
    "tensorflow.size": "doc",
    "tensorflow.sort": "doc",
    "tensorflow.sqrt": "doc",
    "tensorflow.test": "doc",
    "tensorflow.DType": "doc",
    "tensorflow.asinh": "doc",
    "tensorflow.atan2": "doc",
    "tensorflow.equal": "doc",
    "tensorflow.group": "doc",
    "tensorflow.keras": "doc",
    "tensorflow.no_op": "doc",
    "tensorflow.print": "doc",
    "tensorflow.round": "doc",
    "tensorflow.split": "doc",
    "tensorflow.train": "doc",
    "tensorflow.types": "doc",
    "tensorflow.Assert": "doc",
    "tensorflow.argmax": "doc",
    "tensorflow.argmin": "doc",
    "tensorflow.cumsum": "doc",
    "tensorflow.dtypes": "doc",
    "tensorflow.einsum": "doc",
    "tensorflow.errors": "doc",
    "tensorflow.map_fn": "doc",
    "tensorflow.nn.lrn": "doc",
    "tensorflow.repeat": "doc",
    "tensorflow.signal": "doc",
    "tensorflow.square": "doc",
    "tensorflow.unique": "doc",
    "tensorflow.bitcast": "doc",
    "tensorflow.bitwise": "doc",
    "tensorflow.eigvals": "doc",
    "tensorflow.maximum": "doc",
    "tensorflow.metrics": "doc",
    "tensorflow.minimum": "doc",
    "tensorflow.nn.silu": "doc",
    "tensorflow.strings": "doc",
    "tensorflow.summary": "doc",
    "tensorflow.unstack": "doc",
    "tensorflow.version": "doc",
    "tensorflow.constant": "doc",
    "tensorflow.hessians": "doc",
    "tensorflow.identity": "doc",
    "tensorflow.meshgrid": "doc",
    "tensorflow.multiply": "doc",
    "tensorflow.negative": "doc",
    "tensorflow.nn.swish": "doc",
    "tensorflow.nn.top_k": "doc",
    "tensorflow.subtract": "doc",
    "tensorflow.Operation": "doc",
    "tensorflow.as_string": "doc",
    "tensorflow.autograph": "doc",
    "tensorflow.debugging": "doc",
    "tensorflow.estimator": "doc",
    "tensorflow.gradients": "doc",
    "tensorflow.not_equal": "doc",
    "tensorflow.sets.size": "doc",
    "tensorflow.test.main": "doc",
    "tensorflow.timestamp": "doc",
    "tensorflow.TensorSpec": "doc",
    "tensorflow.distribute": "doc",
    "tensorflow.identity_n": "doc",
    "tensorflow.init_scope": "doc",
    "tensorflow.io.is_jpeg": "doc",
    "tensorflow.less_equal": "doc",
    "tensorflow.nn.dropout": "doc",
    "tensorflow.nn.moments": "doc",
    "tensorflow.nn.softmax": "doc",
    "tensorflow.optimizers": "doc",
    "tensorflow.reduce_any": "doc",
    "tensorflow.reduce_max": "doc",
    "tensorflow.reduce_min": "doc",
    "tensorflow.reduce_sum": "doc",
    "tensorflow.scalar_mul": "doc",
    "tensorflow.sets.union": "doc",
    "tensorflow.signal.dct": "doc",
    "tensorflow.signal.fft": "doc",
    "tensorflow.zeros_like": "doc",
    "tensorflow.TensorArray": "doc",
    "tensorflow.TensorShape": "doc",
    "tensorflow.assert_less": "doc",
    "tensorflow.assert_rank": "doc",
    "tensorflow.dtypes.cast": "doc",
    "tensorflow.expand_dims": "doc",
    "tensorflow.fingerprint": "doc",
    "tensorflow.keras.Input": "doc",
    "tensorflow.keras.utils": "doc",
    "tensorflow.logical_and": "doc",
    "tensorflow.logical_not": "doc",
    "tensorflow.metrics.AUC": "doc",
    "tensorflow.metrics.KLD": "doc",
    "tensorflow.metrics.MAE": "doc",
    "tensorflow.metrics.MSE": "doc",
    "tensorflow.metrics.Sum": "doc",
    "tensorflow.metrics.get": "doc",
    "tensorflow.metrics.mse": "doc",
    "tensorflow.nn.in_top_k": "doc",
    "tensorflow.nn.softplus": "doc",
    "tensorflow.nn.softsign": "doc",
    "tensorflow.no_gradient": "doc",
    "tensorflow.py_function": "doc",
    "tensorflow.reduce_mean": "doc",
    "tensorflow.reduce_prod": "doc",
    "tensorflow.signal.idct": "doc",
    "tensorflow.signal.ifft": "doc",
    "tensorflow.signal.mdct": "doc",
    "tensorflow.signal.rfft": "doc",
    "tensorflow.signal.stft": "doc",
    "tensorflow.switch_case": "doc",
    "tensorflow.truncatediv": "doc",
    "tensorflow.truncatemod": "doc",
    "tensorflow.assert_equal": "doc",
    "tensorflow.boolean_mask": "doc",
    "tensorflow.broadcast_to": "doc",
    "tensorflow.data.Options": "doc",
    "tensorflow.dtypes.DType": "doc",
    "tensorflow.ensure_shape": "doc",
    "tensorflow.experimental": "doc",
    "tensorflow.metrics.MAPE": "doc",
    "tensorflow.metrics.MSLE": "doc",
    "tensorflow.metrics.Mean": "doc",
    "tensorflow.nn.erosion2d": "doc",
    "tensorflow.quantization": "doc",
    "tensorflow.signal.fft2d": "doc",
    "tensorflow.signal.fft3d": "doc",
    "tensorflow.signal.irfft": "doc",
    "tensorflow.strings.join": "doc",
    "tensorflow.summary.text": "doc",
    "tensorflow.edit_distance": "doc",
    "tensorflow.io.decode_bmp": "doc",
    "tensorflow.io.decode_csv": "doc",
    "tensorflow.io.decode_gif": "doc",
    "tensorflow.io.decode_png": "doc",
    "tensorflow.io.encode_png": "doc",
    "tensorflow.keras.metrics": "doc",
    "tensorflow.metrics.Hinge": "doc",
    "tensorflow.saturate_cast": "doc",
    "tensorflow.sequence_mask": "doc",
    "tensorflow.signal.ifft2d": "doc",
    "tensorflow.signal.ifft3d": "doc",
    "tensorflow.signal.rfft2d": "doc",
    "tensorflow.signal.rfft3d": "doc",
    "tensorflow.strings.split": "doc",
    "tensorflow.strings.strip": "doc",
    "tensorflow.summary.write": "doc",
    "tensorflow.test.TestCase": "doc",
    "tensorflow.bitwise.invert": "doc",
    "tensorflow.io.decode_jpeg": "doc",
    "tensorflow.io.encode_jpeg": "doc",
    "tensorflow.io.write_graph": "doc",
    "tensorflow.keras.datasets": "doc",
    "tensorflow.metrics.Metric": "doc",
    "tensorflow.nn.convolution": "doc",
    "tensorflow.nn.log_softmax": "doc",
    "tensorflow.numpy_function": "doc",
    "tensorflow.optimizers.SGD": "doc",
    "tensorflow.optimizers.get": "doc",
    "tensorflow.signal.irfft2d": "doc",
    "tensorflow.signal.irfft3d": "doc",
    "tensorflow.strings.format": "doc",
    "tensorflow.strings.ngrams": "doc",
    "tensorflow.strings.substr": "doc",
    "tensorflow.vectorized_map": "doc",
    "tensorflow.TensorArraySpec": "doc",
    "tensorflow.inside_function": "doc",
    "tensorflow.io.decode_image": "doc",
    "tensorflow.io.decode_proto": "doc",
    "tensorflow.io.encode_proto": "doc",
    "tensorflow.keras.callbacks": "doc",
    "tensorflow.keras.estimator": "doc",
    "tensorflow.metrics.Poisson": "doc",
    "tensorflow.mixed_precision": "doc",
    "tensorflow.nn.l2_normalize": "doc",
    "tensorflow.optimizers.Adam": "doc",
    "tensorflow.optimizers.Ftrl": "doc",
    "tensorflow.signal.fftshift": "doc",
    "tensorflow.train.BytesList": "doc",
    "tensorflow.train.FloatList": "doc",
    "tensorflow.train.Int64List": "doc",
    "tensorflow.debugging.Assert": "doc",
    "tensorflow.estimator.export": "doc",
    "tensorflow.keras.Sequential": "doc",
    "tensorflow.keras.optimizers": "doc",
    "tensorflow.metrics.Accuracy": "doc",
    "tensorflow.nn.atrous_conv2d": "doc",
    "tensorflow.nn.zero_fraction": "doc",
    "tensorflow.signal.ifftshift": "doc",
    "tensorflow.tpu.experimental": "doc",
    "tensorflow.data.experimental": "doc",
    "tensorflow.keras.activations": "doc",
    "tensorflow.keras.constraints": "doc",
    "tensorflow.keras.metrics.AUC": "doc",
    "tensorflow.keras.metrics.KLD": "doc",
    "tensorflow.keras.metrics.MAE": "doc",
    "tensorflow.keras.metrics.MSE": "doc",
    "tensorflow.keras.metrics.Sum": "doc",
    "tensorflow.keras.metrics.get": "doc",
    "tensorflow.keras.metrics.mse": "doc",
    "tensorflow.metrics.Precision": "doc",
    "tensorflow.metrics.serialize": "doc",
    "tensorflow.nn.conv_transpose": "doc",
    "tensorflow.nn.depth_to_space": "doc",
    "tensorflow.optimizers.Adamax": "doc",
    "tensorflow.sets.intersection": "doc",
    "tensorflow.strings.as_string": "doc",
    "tensorflow.summary.histogram": "doc",
    "tensorflow.train.Coordinator": "doc",
    "tensorflow.train.FeatureList": "doc",
    "tensorflow.autograph.to_graph": "doc",
    "tensorflow.bitwise.bitwise_or": "doc",
    "tensorflow.bitwise.left_shift": "doc",
    "tensorflow.estimator.ModeKeys": "doc",
    "tensorflow.experimental.numpy": "doc",
    "tensorflow.keras.experimental": "doc",
    "tensorflow.keras.metrics.MAPE": "doc",
    "tensorflow.keras.metrics.MSLE": "doc",
    "tensorflow.keras.metrics.Mean": "doc",
    "tensorflow.optimizers.RMSprop": "doc",
    "tensorflow.signal.hann_window": "doc",
    "tensorflow.train.FeatureLists": "doc",
    "tensorflow.train.experimental": "doc",
    "tensorflow.types.experimental": "doc",
    "tensorflow.bitwise.bitwise_and": "doc",
    "tensorflow.bitwise.bitwise_xor": "doc",
    "tensorflow.bitwise.right_shift": "doc",
    "tensorflow.distribute.ReduceOp": "doc",
    "tensorflow.distribute.Strategy": "doc",
    "tensorflow.errors.UnknownError": "doc",
    "tensorflow.estimator.Estimator": "doc",
    "tensorflow.estimator.MultiHead": "doc",
    "tensorflow.estimator.RunConfig": "doc",
    "tensorflow.estimator.VocabInfo": "doc",
    "tensorflow.keras.datasets.imdb": "doc",
    "tensorflow.keras.metrics.Hinge": "doc",
    "tensorflow.metrics.deserialize": "doc",
    "tensorflow.nn.conv1d_transpose": "doc",
    "tensorflow.nn.conv2d_transpose": "doc",
    "tensorflow.nn.conv3d_transpose": "doc",
    "tensorflow.nn.embedding_lookup": "doc",
    "tensorflow.signal.inverse_mdct": "doc",
    "tensorflow.signal.inverse_stft": "doc",
    "tensorflow.strings.bytes_split": "doc",
    "tensorflow.strings.reduce_join": "doc",
    "tensorflow.train.load_variable": "doc",
    "tensorflow.dtypes.saturate_cast": "doc",
    "tensorflow.errors.NotFoundError": "doc",
    "tensorflow.estimator.FeedFnHook": "doc",
    "tensorflow.keras.datasets.mnist": "doc",
    "tensorflow.keras.metrics.Metric": "doc",
    "tensorflow.keras.optimizers.SGD": "doc",
    "tensorflow.keras.optimizers.get": "doc",
    "tensorflow.metrics.KLDivergence": "doc",
    "tensorflow.optimizers.serialize": "doc",
    "tensorflow.signal.vorbis_window": "doc",
    "tensorflow.summary.experimental": "doc",
    "tensorflow.debugging.assert_less": "doc",
    "tensorflow.debugging.assert_rank": "doc",
    "tensorflow.debugging.assert_type": "doc",
    "tensorflow.distribute.RunOptions": "doc",
    "tensorflow.estimator.add_metrics": "doc",
    "tensorflow.experimental.Optional": "doc",
    "tensorflow.experimental.tensorrt": "doc",
    "tensorflow.keras.activations.get": "doc",
    "tensorflow.keras.constraints.get": "doc",
    "tensorflow.keras.metrics.Poisson": "doc",
    "tensorflow.keras.mixed_precision": "doc",
    "tensorflow.keras.optimizers.Adam": "doc",
    "tensorflow.keras.optimizers.Ftrl": "doc",
    "tensorflow.keras.utils.normalize": "doc",
    "tensorflow.signal.hamming_window": "doc",
    "tensorflow.strings.regex_replace": "doc",
    "tensorflow.autograph.experimental": "doc",
    "tensorflow.broadcast_static_shape": "doc",
    "tensorflow.data.experimental.scan": "doc",
    "tensorflow.debugging.assert_equal": "doc",
    "tensorflow.debugging.experimental": "doc",
    "tensorflow.distribute.TPUStrategy": "doc",
    "tensorflow.estimator.DNNEstimator": "doc",
    "tensorflow.estimator.FinalOpsHook": "doc",
    "tensorflow.estimator.ProfilerHook": "doc",
    "tensorflow.estimator.experimental": "doc",
    "tensorflow.experimental.numpy.abs": "doc",
    "tensorflow.experimental.numpy.any": "doc",
    "tensorflow.experimental.numpy.dot": "doc",
    "tensorflow.experimental.numpy.exp": "doc",
    "tensorflow.experimental.numpy.fix": "doc",
    "tensorflow.experimental.numpy.ix_": "doc",
    "tensorflow.experimental.numpy.max": "doc",
    "tensorflow.experimental.numpy.min": "doc",
    "tensorflow.experimental.numpy.ptp": "doc",
    "tensorflow.experimental.numpy.sin": "doc",
    "tensorflow.experimental.numpy.std": "doc",
    "tensorflow.experimental.numpy.sum": "doc",
    "tensorflow.experimental.numpy.tan": "doc",
    "tensorflow.experimental.numpy.tri": "doc",
    "tensorflow.keras.datasets.cifar10": "doc",
    "tensorflow.keras.metrics.Accuracy": "doc",
    "tensorflow.metrics.BinaryAccuracy": "doc",
    "tensorflow.optimizers.deserialize": "doc",
    "tensorflow.test.is_built_with_xla": "doc",
    "tensorflow.debugging.assert_scalar": "doc",
    "tensorflow.debugging.assert_shapes": "doc",
    "tensorflow.distribute.InputOptions": "doc",
    "tensorflow.distribute.experimental": "doc",
    "tensorflow.distribute.get_strategy": "doc",
    "tensorflow.distribute.has_strategy": "doc",
    "tensorflow.experimental.numpy.amax": "doc",
    "tensorflow.experimental.numpy.amin": "doc",
    "tensorflow.experimental.numpy.cbrt": "doc",
    "tensorflow.experimental.numpy.diag": "doc",
    "tensorflow.experimental.numpy.diff": "doc",
    "tensorflow.experimental.numpy.exp2": "doc",
    "tensorflow.experimental.numpy.fabs": "doc",
    "tensorflow.experimental.numpy.flip": "doc",
    "tensorflow.experimental.numpy.full": "doc",
    "tensorflow.experimental.numpy.imag": "doc",
    "tensorflow.experimental.numpy.int8": "doc",
    "tensorflow.experimental.numpy.int_": "doc",
    "tensorflow.experimental.numpy.kron": "doc",
    "tensorflow.experimental.numpy.mean": "doc",
    "tensorflow.experimental.numpy.ndim": "doc",
    "tensorflow.experimental.numpy.sign": "doc",
    "tensorflow.experimental.numpy.sinc": "doc",
    "tensorflow.experimental.numpy.sinh": "doc",
    "tensorflow.experimental.numpy.size": "doc",
    "tensorflow.experimental.numpy.sort": "doc",
    "tensorflow.experimental.numpy.sqrt": "doc",
    "tensorflow.experimental.numpy.tril": "doc",
    "tensorflow.experimental.numpy.triu": "doc",
    "tensorflow.experimental.numpy.vdot": "doc",
    "tensorflow.keras.activations.swish": "doc",
    "tensorflow.keras.callbacks.History": "doc",
    "tensorflow.keras.datasets.cifar100": "doc",
    "tensorflow.keras.metrics.Precision": "doc",
    "tensorflow.keras.metrics.serialize": "doc",
    "tensorflow.keras.optimizers.Adamax": "doc",
    "tensorflow.quantization.dequantize": "doc",
    "tensorflow.data.experimental.unique": "doc",
    "tensorflow.debugging.assert_rank_in": "doc",
    "tensorflow.estimator.SessionRunArgs": "doc",
    "tensorflow.estimator.SessionRunHook": "doc",
    "tensorflow.estimator.StopAtStepHook": "doc",
    "tensorflow.experimental.async_scope": "doc",
    "tensorflow.experimental.numpy.array": "doc",
    "tensorflow.experimental.numpy.empty": "doc",
    "tensorflow.experimental.numpy.equal": "doc",
    "tensorflow.experimental.numpy.expm1": "doc",
    "tensorflow.experimental.numpy.finfo": "doc",
    "tensorflow.experimental.numpy.hypot": "doc",
    "tensorflow.experimental.numpy.iinfo": "doc",
    "tensorflow.experimental.numpy.int16": "doc",
    "tensorflow.experimental.numpy.int32": "doc",
    "tensorflow.experimental.numpy.int64": "doc",
    "tensorflow.experimental.numpy.isinf": "doc",
    "tensorflow.experimental.numpy.isnan": "doc",
    "tensorflow.experimental.numpy.rot90": "doc",
    "tensorflow.experimental.numpy.round": "doc",
    "tensorflow.experimental.numpy.split": "doc",
    "tensorflow.experimental.numpy.uint8": "doc",
    "tensorflow.keras.callbacks.Callback": "doc",
    "tensorflow.keras.optimizers.RMSprop": "doc",
    "tensorflow.strings.regex_full_match": "doc",
    "tensorflow.data.experimental.unbatch": "doc",
    "tensorflow.debugging.assert_negative": "doc",
    "tensorflow.debugging.assert_positive": "doc",
    "tensorflow.distribute.CrossDeviceOps": "doc",
    "tensorflow.experimental.numpy.arcsin": "doc",
    "tensorflow.experimental.numpy.arctan": "doc",
    "tensorflow.experimental.numpy.argmax": "doc",
    "tensorflow.experimental.numpy.argmin": "doc",
    "tensorflow.experimental.numpy.cumsum": "doc",
    "tensorflow.experimental.numpy.dsplit": "doc",
    "tensorflow.experimental.numpy.dstack": "doc",
    "tensorflow.experimental.numpy.einsum": "doc",
    "tensorflow.experimental.numpy.hsplit": "doc",
    "tensorflow.experimental.numpy.hstack": "doc",
    "tensorflow.experimental.numpy.nansum": "doc",
    "tensorflow.experimental.numpy.repeat": "doc",
    "tensorflow.experimental.numpy.square": "doc",
    "tensorflow.experimental.numpy.uint16": "doc",
    "tensorflow.experimental.numpy.uint32": "doc",
    "tensorflow.experimental.numpy.uint64": "doc",
    "tensorflow.experimental.numpy.vsplit": "doc",
    "tensorflow.experimental.numpy.vstack": "doc",
    "tensorflow.keras.activations.softmax": "doc",
    "tensorflow.keras.constraints.non_neg": "doc",
    "tensorflow.keras.metrics.deserialize": "doc",
    "tensorflow.data.experimental.Optional": "doc",
    "tensorflow.experimental.numpy.arcsinh": "doc",
    "tensorflow.experimental.numpy.arctan2": "doc",
    "tensorflow.experimental.numpy.arctanh": "doc",
    "tensorflow.experimental.numpy.asarray": "doc",
    "tensorflow.experimental.numpy.deg2rad": "doc",
    "tensorflow.experimental.numpy.inexact": "doc",
    "tensorflow.experimental.numpy.maximum": "doc",
    "tensorflow.experimental.numpy.minimum": "doc",
    "tensorflow.experimental.numpy.nanmean": "doc",
    "tensorflow.experimental.numpy.ndarray": "doc",
    "tensorflow.experimental.numpy.object_": "doc",
    "tensorflow.experimental.numpy.signbit": "doc",
    "tensorflow.experimental.numpy.string_": "doc",
    "tensorflow.keras.activations.softplus": "doc",
    "tensorflow.keras.activations.softsign": "doc",
    "tensorflow.keras.constraints.UnitNorm": "doc",
    "tensorflow.keras.metrics.KLDivergence": "doc",
    "tensorflow.keras.optimizers.serialize": "doc",
    "tensorflow.nn.embedding_lookup_sparse": "doc",
    "tensorflow.tpu.experimental.embedding": "doc",
    "tensorflow.debugging.assert_all_finite": "doc",
    "tensorflow.experimental.numpy.compress": "doc",
    "tensorflow.experimental.numpy.identity": "doc",
    "tensorflow.experimental.numpy.isfinite": "doc",
    "tensorflow.experimental.numpy.isneginf": "doc",
    "tensorflow.experimental.numpy.isposinf": "doc",
    "tensorflow.experimental.numpy.meshgrid": "doc",
    "tensorflow.experimental.numpy.moveaxis": "doc",
    "tensorflow.experimental.numpy.multiply": "doc",
    "tensorflow.experimental.numpy.negative": "doc",
    "tensorflow.experimental.numpy.subtract": "doc",
    "tensorflow.keras.activations.serialize": "doc",
    "tensorflow.keras.callbacks.TensorBoard": "doc",
    "tensorflow.keras.constraints.serialize": "doc",
    "tensorflow.keras.constraints.unit_norm": "doc",
    "tensorflow.data.experimental.CsvDataset": "doc",
    "tensorflow.data.experimental.SqlDataset": "doc",
    "tensorflow.data.experimental.to_variant": "doc",
    "tensorflow.experimental.numpy.complex64": "doc",
    "tensorflow.experimental.numpy.conjugate": "doc",
    "tensorflow.experimental.numpy.full_like": "doc",
    "tensorflow.experimental.numpy.geomspace": "doc",
    "tensorflow.experimental.numpy.not_equal": "doc",
    "tensorflow.keras.callbacks.CallbackList": "doc",
    "tensorflow.keras.callbacks.experimental": "doc",
    "tensorflow.keras.constraints.Constraint": "doc",
    "tensorflow.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.keras.datasets.fashion_mnist": "doc",
    "tensorflow.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.keras.optimizers.deserialize": "doc",
    "tensorflow.mixed_precision.experimental": "doc",
    "tensorflow.data.experimental.cardinality": "doc",
    "tensorflow.debugging.assert_non_positive": "doc",
    "tensorflow.estimator.export.ExportOutput": "doc",
    "tensorflow.experimental.numpy.asanyarray": "doc",
    "tensorflow.experimental.numpy.atleast_1d": "doc",
    "tensorflow.experimental.numpy.atleast_2d": "doc",
    "tensorflow.experimental.numpy.atleast_3d": "doc",
    "tensorflow.experimental.numpy.bitwise_or": "doc",
    "tensorflow.experimental.numpy.complex128": "doc",
    "tensorflow.experimental.numpy.empty_like": "doc",
    "tensorflow.experimental.numpy.issubdtype": "doc",
    "tensorflow.experimental.numpy.less_equal": "doc",
    "tensorflow.experimental.numpy.logaddexp2": "doc",
    "tensorflow.experimental.numpy.reciprocal": "doc",
    "tensorflow.experimental.numpy.zeros_like": "doc",
    "tensorflow.keras.activations.deserialize": "doc",
    "tensorflow.keras.activations.exponential": "doc",
    "tensorflow.keras.constraints.deserialize": "doc",
    "tensorflow.keras.datasets.imdb.load_data": "doc",
    "tensorflow.keras.utils.CustomObjectScope": "doc",
    "tensorflow.signal.inverse_stft_window_fn": "doc",
    "tensorflow.types.experimental.TensorLike": "doc",
    "tensorflow.data.experimental.StatsOptions": "doc",
    "tensorflow.data.experimental.from_variant": "doc",
    "tensorflow.estimator.export.PredictOutput": "doc",
    "tensorflow.experimental.numpy.array_equal": "doc",
    "tensorflow.experimental.numpy.bitwise_and": "doc",
    "tensorflow.experimental.numpy.bitwise_not": "doc",
    "tensorflow.experimental.numpy.bitwise_xor": "doc",
    "tensorflow.experimental.numpy.concatenate": "doc",
    "tensorflow.experimental.numpy.expand_dims": "doc",
    "tensorflow.experimental.numpy.logical_and": "doc",
    "tensorflow.experimental.numpy.logical_not": "doc",
    "tensorflow.experimental.numpy.result_type": "doc",
    "tensorflow.experimental.numpy.true_divide": "doc",
    "tensorflow.keras.activations.hard_sigmoid": "doc",
    "tensorflow.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.keras.constraints.min_max_norm": "doc",
    "tensorflow.keras.datasets.mnist.load_data": "doc",
    "tensorflow.keras.experimental.CosineDecay": "doc",
    "tensorflow.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.train.experimental.PythonState": "doc",
    "tensorflow.data.experimental.RandomDataset": "doc",
    "tensorflow.data.experimental.get_structure": "doc",
    "tensorflow.experimental.numpy.broadcast_to": "doc",
    "tensorflow.experimental.numpy.iscomplexobj": "doc",
    "tensorflow.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.summary.experimental.write_raw_pb": "doc",
    "tensorflow.train.experimental.FixedLossScale": "doc",
    "tensorflow.data.experimental.ThreadingOptions": "doc",
    "tensorflow.keras.mixed_precision.experimental": "doc",
    "tensorflow.summary.experimental.summary_scope": "doc",
    "tensorflow.data.experimental.DistributeOptions": "doc",
    "tensorflow.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.distribute.experimental.coordinator": "doc",
    "tensorflow.estimator.experimental.RNNEstimator": "doc",
    "tensorflow.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.tpu.experimental.embedding.serving_embedding_lookup": "doc"
  },
  "pandas.tools": {
    "pandas.Series.bool": "doc",
    "pandas.DataFrame.bool": "doc",
    "pandas.Series.to_list": "doc",
    "pandas.Index.to_list": "doc",
    "pandas.Series.to_csv": "doc"
  },
  "pandas.TimeGrouper": {
    "pandas.Grouper": "doc",
    "pandas.core.groupby.SeriesGroupBy.nlargest": "doc",
    "pandas.core.groupby.SeriesGroupBy.nsmallest": "doc",
    "pandas.core.groupby.SeriesGroupBy.nunique": "doc",
    "pandas.core.groupby.SeriesGroupBy.unique": "doc",
    "pandas.core.groupby.SeriesGroupBy.value_counts": "doc",
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing": "doc",
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing": "doc",
    "pandas.Timestamp": "doc",
    "pandas.Timestamp.tz": "doc",
    "pandas.Timestamp.day": "doc",
    "pandas.Timestamp.max": "doc",
    "pandas.Timestamp.min": "doc",
    "pandas.Timestamp.dst": "doc",
    "pandas.Timestamp.now": "doc",
    "pandas.Timestamp.asm8": "doc",
    "pandas.Timestamp.fold": "doc",
    "pandas.Timestamp.hour": "doc",
    "pandas.Timestamp.week": "doc",
    "pandas.Timestamp.year": "doc",
    "pandas.Timestamp.ceil": "doc",
    "pandas.Timestamp.date": "doc",
    "pandas.Timestamp.freq": "doc",
    "pandas.Timestamp.time": "doc",
    "pandas.Timestamp.month": "doc",
    "pandas.Timestamp.value": "doc",
    "pandas.Timestamp.ctime": "doc",
    "pandas.Timestamp.floor": "doc",
    "pandas.Timestamp.round": "doc",
    "pandas.Timestamp.today": "doc",
    "pandas.Timestamp.minute": "doc",
    "pandas.Timestamp.second": "doc",
    "pandas.Timestamp.tzinfo": "doc",
    "pandas.Timestamp.timetz": "doc",
    "pandas.Timestamp.tzname": "doc",
    "pandas.Timestamp.utcnow": "doc",
    "pandas.Timestamp.quarter": "doc",
    "pandas.Timestamp.combine": "doc",
    "pandas.Timestamp.freqstr": "doc",
    "pandas.Timestamp.replace": "doc",
    "pandas.Timestamp.weekday": "doc",
    "pandas.Timestamp.day_name": "doc",
    "pandas.Timestamp.strftime": "doc",
    "pandas.Timestamp.strptime": "doc",
    "pandas.Timestamp.to_numpy": "doc",
    "pandas.Timestamp.dayofweek": "doc",
    "pandas.Timestamp.dayofyear": "doc",
    "pandas.Timestamp.isoformat": "doc",
    "pandas.Timestamp.normalize": "doc",
    "pandas.Timestamp.timestamp": "doc",
    "pandas.Timestamp.timetuple": "doc",
    "pandas.Timestamp.to_period": "doc",
    "pandas.Timestamp.toordinal": "doc",
    "pandas.Timestamp.utcoffset": "doc",
    "pandas.DataFrame.itertuples": "doc",
    "pandas.Timestamp.nanosecond": "doc",
    "pandas.Timestamp.resolution": "doc",
    "pandas.Timestamp.weekofyear": "doc",
    "pandas.Timestamp.astimezone": "doc",
    "pandas.Timestamp.isoweekday": "doc",
    "pandas.Timestamp.month_name": "doc",
    "pandas.Timestamp.tz_convert": "doc",
    "pandas.Timestamp.daysinmonth": "doc",
    "pandas.Timestamp.is_year_end": "doc",
    "pandas.Timestamp.microsecond": "doc",
    "pandas.Timestamp.fromordinal": "doc",
    "pandas.Timestamp.isocalendar": "doc",
    "pandas.Timestamp.tz_localize": "doc",
    "pandas.Timestamp.is_leap_year": "doc",
    "pandas.Timestamp.is_month_end": "doc",
    "pandas.Timestamp.utctimetuple": "doc",
    "pandas.Timestamp.days_in_month": "doc",
    "pandas.Timestamp.is_year_start": "doc",
    "pandas.Timestamp.fromtimestamp": "doc",
    "pandas.Timestamp.to_datetime64": "doc",
    "pandas.Timestamp.to_pydatetime": "doc",
    "pandas.Timestamp.is_month_start": "doc",
    "pandas.Timestamp.is_quarter_end": "doc",
    "pandas.Timestamp.to_julian_date": "doc",
    "pandas.core.groupby.GroupBy.agg": "doc",
    "pandas.core.groupby.GroupBy.all": "doc",
    "pandas.core.groupby.GroupBy.any": "doc",
    "pandas.core.groupby.GroupBy.max": "doc",
    "pandas.core.groupby.GroupBy.min": "doc",
    "pandas.core.groupby.GroupBy.nth": "doc",
    "pandas.core.groupby.GroupBy.sem": "doc",
    "pandas.core.groupby.GroupBy.std": "doc",
    "pandas.core.groupby.GroupBy.sum": "doc",
    "pandas.core.groupby.GroupBy.var": "doc",
    "pandas.core.groupby.GroupBy.pipe": "doc",
    "pandas.core.groupby.GroupBy.head": "doc",
    "pandas.core.groupby.GroupBy.last": "doc",
    "pandas.core.groupby.GroupBy.mean": "doc",
    "pandas.core.groupby.GroupBy.ohlc": "doc",
    "pandas.core.groupby.GroupBy.prod": "doc",
    "pandas.core.groupby.GroupBy.rank": "doc",
    "pandas.core.groupby.GroupBy.size": "doc",
    "pandas.core.groupby.GroupBy.tail": "doc",
    "pandas.Timestamp.is_quarter_start": "doc",
    "pandas.Timestamp.utcfromtimestamp": "doc",
    "pandas.core.groupby.GroupBy.apply": "doc",
    "pandas.core.groupby.GroupBy.bfill": "doc",
    "pandas.core.groupby.GroupBy.count": "doc",
    "pandas.core.groupby.GroupBy.ffill": "doc",
    "pandas.core.groupby.GroupBy.first": "doc",
    "pandas.core.groupby.GroupBy.groups": "doc",
    "pandas.core.groupby.GroupBy.cummax": "doc",
    "pandas.core.groupby.GroupBy.cummin": "doc",
    "pandas.core.groupby.GroupBy.cumsum": "doc",
    "pandas.core.groupby.GroupBy.median": "doc",
    "pandas.core.groupby.GroupBy.ngroup": "doc",
    "pandas.core.groupby.GroupBy.indices": "doc",
    "pandas.core.groupby.GroupBy.cumprod": "doc",
    "pandas.core.groupby.GroupBy.__iter__": "doc",
    "pandas.core.groupby.GroupBy.cumcount": "doc",
    "pandas.core.groupby.GroupBy.get_group": "doc",
    "pandas.core.groupby.GroupBy.aggregate": "doc",
    "pandas.core.groupby.GroupBy.transform": "doc",
    "pandas.core.groupby.GroupBy.pct_change": "doc",
    "pandas.core.groupby.DataFrameGroupBy.all": "doc",
    "pandas.core.groupby.DataFrameGroupBy.any": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cov": "doc",
    "pandas.core.groupby.DataFrameGroupBy.mad": "doc",
    "pandas.core.groupby.DataFrameGroupBy.corr": "doc",
    "pandas.core.groupby.DataFrameGroupBy.diff": "doc",
    "pandas.core.groupby.DataFrameGroupBy.hist": "doc",
    "pandas.core.groupby.DataFrameGroupBy.plot": "doc",
    "pandas.core.groupby.DataFrameGroupBy.rank": "doc",
    "pandas.core.groupby.DataFrameGroupBy.size": "doc",
    "pandas.core.groupby.DataFrameGroupBy.skew": "doc",
    "pandas.core.groupby.DataFrameGroupBy.take": "doc",
    "pandas.core.groupby.DataFrameGroupBy.bfill": "doc",
    "pandas.core.groupby.DataFrameGroupBy.count": "doc",
    "pandas.core.groupby.DataFrameGroupBy.ffill": "doc",
    "pandas.core.groupby.DataFrameGroupBy.shift": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cummax": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cummin": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cumsum": "doc",
    "pandas.core.groupby.DataFrameGroupBy.fillna": "doc",
    "pandas.core.groupby.DataFrameGroupBy.filter": "doc",
    "pandas.core.groupby.DataFrameGroupBy.idxmax": "doc",
    "pandas.core.groupby.DataFrameGroupBy.idxmin": "doc",
    "pandas.core.groupby.DataFrameGroupBy.tshift": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cumprod": "doc",
    "pandas.core.groupby.DataFrameGroupBy.nunique": "doc",
    "pandas.core.groupby.DataFrameGroupBy.boxplot": "doc",
    "pandas.core.groupby.DataFrameGroupBy.describe": "doc",
    "pandas.core.groupby.DataFrameGroupBy.quantile": "doc",
    "pandas.core.groupby.DataFrameGroupBy.resample": "doc",
    "pandas.core.groupby.DataFrameGroupBy.corrwith": "doc",
    "pandas.core.groupby.DataFrameGroupBy.pct_change": "doc",
    "pandas.merge": "doc",
    "pandas.Timedelta": "doc",
    "pandas.Timedelta.max": "doc",
    "pandas.Timedelta.min": "doc",
    "pandas.Series.groupby": "doc",
    "pandas.Timedelta.asm8": "doc",
    "pandas.Timedelta.days": "doc",
    "pandas.Timedelta.freq": "doc",
    "pandas.Timedelta.view": "doc",
    "pandas.Timedelta.ceil": "doc",
    "pandas.HDFStore.groups": "doc",
    "pandas.DataFrame.merge": "doc",
    "pandas.Timedelta.delta": "doc",
    "pandas.Timedelta.value": "doc",
    "pandas.Timedelta.floor": "doc",
    "pandas.Timedelta.round": "doc",
    "pandas.DataFrame.groupby": "doc",
    "pandas.Timedelta.seconds": "doc",
    "pandas.Series.str.islower": "doc",
    "pandas.Series.str.isupper": "doc",
    "pandas.DataFrame.iterrows": "doc",
    "pandas.Timedelta.to_numpy": "doc",
    "pandas.Timedelta.isoformat": "doc",
    "pandas.Timedelta.components": "doc",
    "pandas.Timedelta.resolution": "doc",
    "pandas.Timedelta.nanoseconds": "doc",
    "pandas.Timedelta.is_populated": "doc",
    "pandas.Timedelta.microseconds": "doc",
    "pandas.Timedelta.total_seconds": "doc",
    "pandas.Timedelta.to_pytimedelta": "doc",
    "pandas.Timedelta.to_timedelta64": "doc",
    "pandas.core.resample.Resampler.groups": "doc",
    "pandas.core.resample.Resampler.get_group": "doc",
    "pandas.TimedeltaIndex": "doc",
    "pandas.TimedeltaIndex.days": "doc",
    "pandas.TimedeltaIndex.ceil": "doc",
    "pandas.TimedeltaIndex.mean": "doc",
    "pandas.TimedeltaIndex.round": "doc",
    "pandas.TimedeltaIndex.floor": "doc",
    "pandas.arrays.TimedeltaArray": "doc",
    "pandas.TimedeltaIndex.seconds": "doc",
    "pandas.TimedeltaIndex.to_frame": "doc",
    "pandas.TimedeltaIndex.to_series": "doc",
    "pandas.TimedeltaIndex.components": "doc",
    "pandas.TimedeltaIndex.nanoseconds": "doc",
    "pandas.TimedeltaIndex.microseconds": "doc",
    "pandas.TimedeltaIndex.inferred_freq": "doc",
    "pandas.TimedeltaIndex.to_pytimedelta": "doc",
    "pandas.Index.slice_indexer": "doc",
    "pandas.api.types.is_named_tuple": "doc",
    "pandas.io.formats.style.Styler.set_properties": "doc",
    "pandas.Series": "doc",
    "pandas.Series.T": "doc",
    "pandas.Series.at": "doc",
    "pandas.Series.xs": "doc",
    "pandas.Series.lt": "doc",
    "pandas.Series.gt": "doc",
    "pandas.Series.le": "doc",
    "pandas.Series.ge": "doc",
    "pandas.Series.ne": "doc",
    "pandas.Series.eq": "doc",
    "pandas.date_range": "doc",
    "pandas.infer_freq": "doc",
    "pandas.Series.get": "doc",
    "pandas.Series.iat": "doc",
    "pandas.Series.loc": "doc",
    "pandas.Series.pop": "doc",
    "pandas.Series.add": "doc",
    "pandas.Series.sub": "doc",
    "pandas.Series.mul": "doc",
    "pandas.Series.div": "doc",
    "pandas.Series.mod": "doc",
    "pandas.Series.pow": "doc",
    "pandas.Series.dot": "doc",
    "pandas.Series.agg": "doc",
    "pandas.Series.map": "doc",
    "pandas.Series.ewm": "doc",
    "pandas.Series.abs": "doc",
    "pandas.Series.all": "doc",
    "pandas.Series.any": "doc",
    "pandas.Series.cov": "doc",
    "pandas.Series.mad": "doc",
    "pandas.Series.max": "doc",
    "pandas.Series.min": "doc",
    "pandas.Series.sem": "doc",
    "pandas.Series.std": "doc",
    "pandas.Series.sum": "doc",
    "pandas.Series.var": "doc",
    "pandas.Index.drop": "doc",
    "pandas.ExcelWriter": "doc",
    "pandas.Series.ndim": "doc",
    "pandas.Series.size": "doc",
    "pandas.Series.name": "doc",
    "pandas.Series.copy": "doc",
    "pandas.Series.bool": "doc",
    "pandas.Series.iloc": "doc",
    "pandas.Series.keys": "doc",
    "pandas.Series.item": "doc",
    "pandas.Series.radd": "doc",
    "pandas.Series.rsub": "doc",
    "pandas.Series.rmul": "doc",
    "pandas.Series.rdiv": "doc",
    "pandas.Series.rmod": "doc",
    "pandas.Series.rpow": "doc",
    "pandas.Series.pipe": "doc",
    "pandas.Series.clip": "doc",
    "pandas.Series.corr": "doc",
    "pandas.Series.diff": "doc",
    "pandas.Series.kurt": "doc",
    "pandas.Series.mean": "doc",
    "pandas.Series.mode": "doc",
    "pandas.Series.prod": "doc",
    "pandas.Series.rank": "doc",
    "pandas.Series.skew": "doc",
    "pandas.Series.drop": "doc",
    "pandas.Series.head": "doc",
    "pandas.Series.isin": "doc",
    "pandas.Series.last": "doc",
    "pandas.Series.take": "doc",
    "pandas.Series.tail": "doc",
    "pandas.Series.mask": "doc",
    "pandas.Series.isna": "doc",
    "pandas.Series.view": "doc",
    "pandas.Series.asof": "doc",
    "pandas.Series.plot": "doc",
    "pandas.Series.hist": "doc",
    "pandas.Period.hour": "doc",
    "pandas.Index.where": "doc",
    "pandas.Series.index": "doc",
    "pandas.Series.array": "doc",
    "pandas.Series.dtype": "doc",
    "pandas.Series.shape": "doc",
    "pandas.Series.empty": "doc",
    "pandas.Series.items": "doc",
    "pandas.Series.round": "doc",
    "pandas.Series.apply": "doc",
    "pandas.Series.count": "doc",
    "pandas.Series.align": "doc",
    "pandas.Series.first": "doc",
    "pandas.Series.where": "doc",
    "pandas.Series.notna": "doc",
    "pandas.Series.ravel": "doc",
    "pandas.Series.shift": "doc",
    "pandas.Series.dt.tz": "doc",
    "pandas.Series.attrs": "doc",
    "pandas.Index.dropna": "doc",
    "pandas.Series.values": "doc",
    "pandas.Series.nbytes": "doc",
    "pandas.Series.dtypes": "doc",
    "pandas.Series.astype": "doc",
    "pandas.Series.cummax": "doc",
    "pandas.Series.cummin": "doc",
    "pandas.Series.cumsum": "doc",
    "pandas.Series.median": "doc",
    "pandas.Series.unique": "doc",
    "pandas.Series.equals": "doc",
    "pandas.Series.idxmax": "doc",
    "pandas.Series.idxmin": "doc",
    "pandas.Series.rename": "doc",
    "pandas.Series.sample": "doc",
    "pandas.Series.filter": "doc",
    "pandas.Series.dropna": "doc",
    "pandas.Series.fillna": "doc",
    "pandas.Series.argmin": "doc",
    "pandas.Series.argmax": "doc",
    "pandas.Series.repeat": "doc",
    "pandas.Series.append": "doc",
    "pandas.Series.update": "doc",
    "pandas.Series.asfreq": "doc",
    "pandas.Series.tshift": "doc",
    "pandas.Series.dt.day": "doc",
    "pandas.Series.to_csv": "doc",
    "pandas.Series.to_hdf": "doc",
    "pandas.Series.to_sql": "doc",
    "pandas.Period.minute": "doc",
    "pandas.Series.hasnans": "doc",
    "pandas.Series.to_list": "doc",
    "pandas.Series.truediv": "doc",
    "pandas.Series.combine": "doc",
    "pandas.Series.product": "doc",
    "pandas.Series.rolling": "doc",
    "pandas.Series.between": "doc",
    "pandas.Series.cumprod": "doc",
    "pandas.Series.nunique": "doc",
    "pandas.Series.reindex": "doc",
    "pandas.Series.argsort": "doc",
    "pandas.Series.unstack": "doc",
    "pandas.Series.explode": "doc",
    "pandas.Series.squeeze": "doc",
    "pandas.Series.replace": "doc",
    "pandas.Series.at_time": "doc",
    "pandas.Series.dt.date": "doc",
    "pandas.Series.dt.time": "doc",
    "pandas.Series.dt.year": "doc",
    "pandas.Series.dt.hour": "doc",
    "pandas.Series.dt.week": "doc",
    "pandas.Series.dt.freq": "doc",
    "pandas.Series.dt.ceil": "doc",
    "pandas.Series.dt.days": "doc",
    "pandas.Series.str.cat": "doc",
    "pandas.Series.str.get": "doc",
    "pandas.Series.str.len": "doc",
    "pandas.Series.str.pad": "doc",
    "pandas.Series.to_dict": "doc",
    "pandas.Series.to_json": "doc",
    "pandas.DataFrame.pipe": "doc",
    "pandas.DataFrame.mode": "doc",
    "pandas.DataFrame.drop": "doc",
    "pandas.Period.quarter": "doc",
    "pandas.Series.to_numpy": "doc",
    "pandas.Series.__iter__": "doc",
    "pandas.Series.floordiv": "doc",
    "pandas.Series.rtruediv": "doc",
    "pandas.Series.autocorr": "doc",
    "pandas.Series.describe": "doc",
    "pandas.Series.nlargest": "doc",
    "pandas.Series.quantile": "doc",
    "pandas.Series.kurtosis": "doc",
    "pandas.Series.set_axis": "doc",
    "pandas.Series.truncate": "doc",
    "pandas.Series.resample": "doc",
    "pandas.Series.dt.month": "doc",
    "pandas.Series.dt.round": "doc",
    "pandas.Series.dt.floor": "doc",
    "pandas.Series.dt.qyear": "doc",
    "pandas.Series.str.find": "doc",
    "pandas.Series.str.join": "doc",
    "pandas.Series.str.wrap": "doc",
    "pandas.Series.plot.bar": "doc",
    "pandas.Series.plot.box": "doc",
    "pandas.Series.plot.kde": "doc",
    "pandas.Series.plot.pie": "doc",
    "pandas.Series.to_excel": "doc",
    "pandas.Series.to_frame": "doc",
    "pandas.Series.to_latex": "doc",
    "pandas.DataFrame.where": "doc",
    "pandas.DataFrame.round": "doc",
    "pandas.api.types.is_re": "doc",
    "pandas.Series.to_period": "doc",
    "pandas.Series.__array__": "doc",
    "pandas.Series.iteritems": "doc",
    "pandas.Series.rfloordiv": "doc",
    "pandas.Series.aggregate": "doc",
    "pandas.Series.transform": "doc",
    "pandas.Series.expanding": "doc",
    "pandas.Series.factorize": "doc",
    "pandas.Series.nsmallest": "doc",
    "pandas.Series.is_unique": "doc",
    "pandas.Series.droplevel": "doc",
    "pandas.Series.swaplevel": "doc",
    "pandas.Series.dt.timetz": "doc",
    "pandas.Series.dt.minute": "doc",
    "pandas.Series.dt.second": "doc",
    "pandas.Series.str.count": "doc",
    "pandas.Series.str.index": "doc",
    "pandas.Series.str.ljust": "doc",
    "pandas.Series.str.lower": "doc",
    "pandas.Series.str.match": "doc",
    "pandas.Series.str.rfind": "doc",
    "pandas.Series.str.rjust": "doc",
    "pandas.Series.str.slice": "doc",
    "pandas.Series.str.split": "doc",
    "pandas.Series.str.strip": "doc",
    "pandas.Series.str.title": "doc",
    "pandas.Series.str.upper": "doc",
    "pandas.Series.str.zfill": "doc",
    "pandas.Series.cat.codes": "doc",
    "pandas.Series.plot.area": "doc",
    "pandas.Series.plot.barh": "doc",
    "pandas.Series.plot.hist": "doc",
    "pandas.Series.plot.line": "doc",
    "pandas.Series.to_pickle": "doc",
    "pandas.Series.to_xarray": "doc",
    "pandas.Series.to_string": "doc",
    "pandas.DataFrame.filter": "doc",
    "pandas.DataFrame.dropna": "doc",
    "pandas.Index.is_integer": "doc",
    "pandas.Index.difference": "doc",
    "pandas.PeriodIndex.hour": "doc",
    "pandas.Series.pct_change": "doc",
    "pandas.Series.duplicated": "doc",
    "pandas.Series.add_prefix": "doc",
    "pandas.Series.add_suffix": "doc",
    "pandas.Series.sort_index": "doc",
    "pandas.Series.tz_convert": "doc",
    "pandas.Series.dt.weekday": "doc",
    "pandas.Series.dt.quarter": "doc",
    "pandas.Series.dt.seconds": "doc",
    "pandas.Series.str.center": "doc",
    "pandas.Series.str.decode": "doc",
    "pandas.Series.str.encode": "doc",
    "pandas.Series.str.lstrip": "doc",
    "pandas.Series.str.repeat": "doc",
    "pandas.Series.str.rindex": "doc",
    "pandas.Series.str.rstrip": "doc",
    "pandas.Series.str.rsplit": "doc",
    "pandas.DataFrame.cumprod": "doc",
    "pandas.Period.weekofyear": "doc",
    "pandas.Interval.overlaps": "doc",
    "pandas.Series.rename_axis": "doc",
    "pandas.Series.reset_index": "doc",
    "pandas.Series.interpolate": "doc",
    "pandas.Series.sort_values": "doc",
    "pandas.Series.tz_localize": "doc",
    "pandas.Series.slice_shift": "doc",
    "pandas.Series.dt.strftime": "doc",
    "pandas.Series.dt.day_name": "doc",
    "pandas.Series.dt.end_time": "doc",
    "pandas.Series.str.extract": "doc",
    "pandas.Series.str.findall": "doc",
    "pandas.Series.str.replace": "doc",
    "pandas.Series.str.isalnum": "doc",
    "pandas.Series.str.isalpha": "doc",
    "pandas.Series.str.isdigit": "doc",
    "pandas.Series.str.isspace": "doc",
    "pandas.Series.str.istitle": "doc",
    "pandas.Series.cat.ordered": "doc",
    "pandas.Series.to_markdown": "doc",
    "pandas.DatetimeIndex.hour": "doc",
    "pandas.DatetimeIndex.time": "doc",
    "pandas.PeriodIndex.minute": "doc",
    "pandas.errors.ParserError": "doc",
    "pandas.Series.memory_usage": "doc",
    "pandas.Series.to_timestamp": "doc",
    "pandas.Series.is_monotonic": "doc",
    "pandas.Series.value_counts": "doc",
    "pandas.Series.reindex_like": "doc",
    "pandas.Series.searchsorted": "doc",
    "pandas.Series.between_time": "doc",
    "pandas.Series.dt.dayofweek": "doc",
    "pandas.Series.dt.dayofyear": "doc",
    "pandas.Series.dt.to_period": "doc",
    "pandas.Series.dt.normalize": "doc",
    "pandas.Series.str.casefold": "doc",
    "pandas.Series.str.contains": "doc",
    "pandas.Series.str.endswith": "doc",
    "pandas.Series.str.swapcase": "doc",
    "pandas.Series.plot.density": "doc",
    "pandas.Series.to_clipboard": "doc",
    "pandas.DataFrame.iteritems": "doc",
    "pandas.Categorical.ordered": "doc",
    "pandas.MultiIndex.levshape": "doc",
    "pandas.DatetimeIndex.round": "doc",
    "pandas.PeriodIndex.quarter": "doc",
    "pandas.tseries.offsets.Day": "doc",
    "pandas.errors.DtypeWarning": "doc",
    "pandas.api.types.is_number": "doc",
    "pandas.Series.infer_objects": "doc",
    "pandas.Series.combine_first": "doc",
    "pandas.Series.dt.nanosecond": "doc",
    "pandas.Series.dt.weekofyear": "doc",
    "pandas.Series.dt.tz_convert": "doc",
    "pandas.Series.dt.month_name": "doc",
    "pandas.Series.dt.start_time": "doc",
    "pandas.Series.dt.components": "doc",
    "pandas.Series.str.normalize": "doc",
    "pandas.Series.str.partition": "doc",
    "pandas.Series.str.translate": "doc",
    "pandas.Series.str.isnumeric": "doc",
    "pandas.Series.str.isdecimal": "doc",
    "pandas.Series.sparse.to_coo": "doc",
    "pandas.DataFrame.to_parquet": "doc",
    "pandas.DatetimeIndex.minute": "doc",
    "pandas.DatetimeIndex.timetz": "doc",
    "pandas.tseries.offsets.Week": "doc",
    "pandas.tseries.offsets.Tick": "doc",
    "pandas.tseries.offsets.Hour": "doc",
    "pandas.tseries.offsets.Nano": "doc",
    "pandas.tseries.offsets.BDay": "doc",
    "pandas.tseries.offsets.CDay": "doc",
    "pandas.errors.ParserWarning": "doc",
    "pandas.api.types.is_complex": "doc",
    "pandas.api.types.is_integer": "doc",
    "pandas.Series.convert_dtypes": "doc",
    "pandas.Series.reorder_levels": "doc",
    "pandas.Series.dt.microsecond": "doc",
    "pandas.Series.dt.is_year_end": "doc",
    "pandas.Series.dt.daysinmonth": "doc",
    "pandas.Series.dt.tz_localize": "doc",
    "pandas.Series.dt.nanoseconds": "doc",
    "pandas.Series.str.capitalize": "doc",
    "pandas.Series.str.extractall": "doc",
    "pandas.Series.str.rpartition": "doc",
    "pandas.Series.str.startswith": "doc",
    "pandas.Series.cat.categories": "doc",
    "pandas.Series.cat.as_ordered": "doc",
    "pandas.Series.sparse.npoints": "doc",
    "pandas.Series.sparse.density": "doc",
    "pandas.DatetimeIndex.quarter": "doc",
    "pandas.tseries.offsets.Milli": "doc",
    "pandas.tseries.offsets.Micro": "doc",
    "pandas.errors.EmptyDataError": "doc",
    "pandas.Series.drop_duplicates": "doc",
    "pandas.Series.dt.is_month_end": "doc",
    "pandas.Series.dt.is_leap_year": "doc",
    "pandas.Series.dt.microseconds": "doc",
    "pandas.Series.str.get_dummies": "doc",
    "pandas.Series.sparse.from_coo": "doc",
    "pandas.Categorical.categories": "doc",
    "pandas.IntervalIndex.overlaps": "doc",
    "pandas.PeriodIndex.weekofyear": "doc",
    "pandas.tseries.offsets.FY5253": "doc",
    "pandas.tseries.offsets.Easter": "doc",
    "pandas.tseries.offsets.Minute": "doc",
    "pandas.tseries.offsets.Second": "doc",
    "pandas.Series.last_valid_index": "doc",
    "pandas.Series.dt.is_year_start": "doc",
    "pandas.Series.dt.days_in_month": "doc",
    "pandas.Series.dt.to_pydatetime": "doc",
    "pandas.Series.dt.total_seconds": "doc",
    "pandas.Series.cat.as_unordered": "doc",
    "pandas.Series.sparse.sp_values": "doc",
    "pandas.tseries.offsets.YearEnd": "doc",
    "pandas.Series.first_valid_index": "doc",
    "pandas.Series.dt.is_month_start": "doc",
    "pandas.Series.dt.is_quarter_end": "doc",
    "pandas.Series.dt.to_pytimedelta": "doc",
    "pandas.Series.str.slice_replace": "doc",
    "pandas.Series.sparse.fill_value": "doc",
    "pandas.CategoricalDtype.ordered": "doc",
    "pandas.CategoricalIndex.ordered": "doc",
    "pandas.DatetimeIndex.weekofyear": "doc",
    "pandas.tseries.offsets.MonthEnd": "doc",
    "pandas.tseries.offsets.BYearEnd": "doc",
    "pandas.tseries.offsets.Day.kwds": "doc",
    "pandas.tseries.offsets.Day.name": "doc",
    "pandas.tseries.offsets.Day.copy": "doc",
    "pandas.api.indexers.BaseIndexer": "doc",
    "pandas.Series.cat.add_categories": "doc",
    "pandas.Series.cat.set_categories": "doc",
    "pandas.tseries.offsets.Week.kwds": "doc",
    "pandas.tseries.offsets.Week.name": "doc",
    "pandas.tseries.offsets.Week.copy": "doc",
    "pandas.tseries.offsets.YearBegin": "doc",
    "pandas.tseries.offsets.Tick.kwds": "doc",
    "pandas.tseries.offsets.Tick.name": "doc",
    "pandas.tseries.offsets.Tick.copy": "doc",
    "pandas.tseries.offsets.Day.delta": "doc",
    "pandas.tseries.offsets.Day.nanos": "doc",
    "pandas.tseries.offsets.Hour.kwds": "doc",
    "pandas.tseries.offsets.Hour.name": "doc",
    "pandas.tseries.offsets.Hour.copy": "doc",
    "pandas.tseries.offsets.Nano.kwds": "doc",
    "pandas.tseries.offsets.Nano.name": "doc",
    "pandas.tseries.offsets.Nano.copy": "doc",
    "pandas.tseries.offsets.BDay.base": "doc",
    "pandas.tseries.offsets.BDay.kwds": "doc",
    "pandas.tseries.offsets.BDay.name": "doc",
    "pandas.tseries.offsets.BDay.copy": "doc",
    "pandas.tseries.offsets.BMonthEnd": "doc",
    "pandas.tseries.offsets.CDay.base": "doc",
    "pandas.tseries.offsets.CDay.kwds": "doc",
    "pandas.tseries.offsets.CDay.name": "doc",
    "pandas.tseries.offsets.CDay.copy": "doc",
    "pandas.errors.PerformanceWarning": "doc",
    "pandas.errors.UnsortedIndexError": "doc",
    "pandas.Series.dt.is_quarter_start": "doc",
    "pandas.tseries.offsets.DateOffset": "doc",
    "pandas.tseries.offsets.MonthBegin": "doc",
    "pandas.tseries.offsets.Week.nanos": "doc",
    "pandas.tseries.offsets.Week.apply": "doc",
    "pandas.tseries.offsets.QuarterEnd": "doc",
    "pandas.tseries.offsets.YearOffset": "doc",
    "pandas.tseries.offsets.BYearBegin": "doc",
    "pandas.tseries.offsets.Tick.delta": "doc",
    "pandas.tseries.offsets.Tick.nanos": "doc",
    "pandas.tseries.offsets.Hour.delta": "doc",
    "pandas.tseries.offsets.Hour.nanos": "doc",
    "pandas.tseries.offsets.Milli.kwds": "doc",
    "pandas.tseries.offsets.Milli.name": "doc",
    "pandas.tseries.offsets.Milli.copy": "doc",
    "pandas.tseries.offsets.Micro.kwds": "doc",
    "pandas.tseries.offsets.Micro.name": "doc",
    "pandas.tseries.offsets.Micro.copy": "doc",
    "pandas.tseries.offsets.Nano.delta": "doc",
    "pandas.tseries.offsets.Nano.nanos": "doc",
    "pandas.tseries.offsets.BDay.nanos": "doc",
    "pandas.tseries.offsets.BDay.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd": "doc",
    "pandas.tseries.offsets.CDay.nanos": "doc",
    "pandas.tseries.offsets.CDay.apply": "doc",
    "pandas.errors.OutOfBoundsDatetime": "doc",
    "pandas.CategoricalDtype.categories": "doc",
    "pandas.CategoricalIndex.categories": "doc",
    "pandas.tseries.offsets.BusinessDay": "doc",
    "pandas.tseries.offsets.MonthOffset": "doc",
    "pandas.tseries.offsets.WeekOfMonth": "doc",
    "pandas.tseries.offsets.BQuarterEnd": "doc",
    "pandas.tseries.offsets.FY5253.kwds": "doc",
    "pandas.tseries.offsets.FY5253.name": "doc",
    "pandas.tseries.offsets.FY5253.copy": "doc",
    "pandas.tseries.offsets.Easter.kwds": "doc",
    "pandas.tseries.offsets.Easter.name": "doc",
    "pandas.tseries.offsets.Easter.copy": "doc",
    "pandas.tseries.offsets.Day.freqstr": "doc",
    "pandas.tseries.offsets.Minute.kwds": "doc",
    "pandas.tseries.offsets.Minute.name": "doc",
    "pandas.tseries.offsets.Minute.copy": "doc",
    "pandas.tseries.offsets.Second.kwds": "doc",
    "pandas.tseries.offsets.Second.name": "doc",
    "pandas.tseries.offsets.Second.copy": "doc",
    "pandas.tseries.offsets.Milli.delta": "doc",
    "pandas.tseries.offsets.Milli.nanos": "doc",
    "pandas.tseries.offsets.Micro.delta": "doc",
    "pandas.tseries.offsets.Micro.nanos": "doc",
    "pandas.tseries.offsets.BDay.offset": "doc",
    "pandas.tseries.offsets.BMonthBegin": "doc",
    "pandas.tseries.offsets.CDay.offset": "doc",
    "pandas.core.resample.Resampler.pad": "doc",
    "pandas.core.resample.Resampler.max": "doc",
    "pandas.core.resample.Resampler.min": "doc",
    "pandas.core.resample.Resampler.sem": "doc",
    "pandas.core.resample.Resampler.std": "doc",
    "pandas.core.resample.Resampler.sum": "doc",
    "pandas.core.resample.Resampler.var": "doc",
    "pandas.Series.cat.rename_categories": "doc",
    "pandas.Series.cat.remove_categories": "doc",
    "pandas.tseries.offsets.BusinessHour": "doc",
    "pandas.tseries.offsets.SemiMonthEnd": "doc",
    "pandas.tseries.offsets.Week.freqstr": "doc",
    "pandas.tseries.offsets.QuarterBegin": "doc",
    "pandas.tseries.offsets.YearEnd.kwds": "doc",
    "pandas.tseries.offsets.YearEnd.name": "doc",
    "pandas.tseries.offsets.YearEnd.copy": "doc",
    "pandas.tseries.offsets.FY5253.nanos": "doc",
    "pandas.tseries.offsets.FY5253.apply": "doc",
    "pandas.tseries.offsets.Easter.nanos": "doc",
    "pandas.tseries.offsets.Easter.apply": "doc",
    "pandas.tseries.offsets.Tick.freqstr": "doc",
    "pandas.tseries.offsets.Day.onOffset": "doc",
    "pandas.tseries.offsets.Day.__call__": "doc",
    "pandas.tseries.offsets.Hour.freqstr": "doc",
    "pandas.tseries.offsets.Minute.delta": "doc",
    "pandas.tseries.offsets.Minute.nanos": "doc",
    "pandas.tseries.offsets.Second.delta": "doc",
    "pandas.tseries.offsets.Second.nanos": "doc",
    "pandas.tseries.offsets.Nano.freqstr": "doc",
    "pandas.tseries.offsets.BDay.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthBegin": "doc",
    "pandas.tseries.offsets.CDay.freqstr": "doc",
    "pandas.core.resample.Resampler.pipe": "doc",
    "pandas.core.resample.Resampler.last": "doc",
    "pandas.core.resample.Resampler.mean": "doc",
    "pandas.core.resample.Resampler.ohlc": "doc",
    "pandas.core.resample.Resampler.prod": "doc",
    "pandas.core.resample.Resampler.size": "doc",
    "pandas.io.formats.style.Styler.pipe": "doc",
    "pandas.Series.cat.reorder_categories": "doc",
    "pandas.tseries.offsets.MonthEnd.kwds": "doc",
    "pandas.tseries.offsets.MonthEnd.name": "doc",
    "pandas.tseries.offsets.MonthEnd.copy": "doc",
    "pandas.tseries.offsets.Week.onOffset": "doc",
    "pandas.tseries.offsets.Week.__call__": "doc",
    "pandas.tseries.offsets.QuarterOffset": "doc",
    "pandas.tseries.offsets.BQuarterBegin": "doc",
    "pandas.tseries.offsets.BYearEnd.kwds": "doc",
    "pandas.tseries.offsets.BYearEnd.name": "doc",
    "pandas.tseries.offsets.BYearEnd.copy": "doc",
    "pandas.tseries.offsets.YearEnd.nanos": "doc",
    "pandas.tseries.offsets.YearEnd.apply": "doc",
    "pandas.tseries.offsets.FY5253Quarter": "doc",
    "pandas.tseries.offsets.Tick.onOffset": "doc",
    "pandas.tseries.offsets.Tick.__call__": "doc",
    "pandas.tseries.offsets.Day.normalize": "doc",
    "pandas.tseries.offsets.Day.rule_code": "doc",
    "pandas.tseries.offsets.Hour.onOffset": "doc",
    "pandas.tseries.offsets.Hour.__call__": "doc",
    "pandas.tseries.offsets.Milli.freqstr": "doc",
    "pandas.tseries.offsets.Micro.freqstr": "doc",
    "pandas.tseries.offsets.Nano.onOffset": "doc",
    "pandas.tseries.offsets.Nano.__call__": "doc",
    "pandas.tseries.offsets.BDay.onOffset": "doc",
    "pandas.tseries.offsets.BDay.rollback": "doc",
    "pandas.tseries.offsets.BDay.__call__": "doc",
    "pandas.tseries.offsets.CDay.onOffset": "doc",
    "pandas.tseries.offsets.CDay.rollback": "doc",
    "pandas.tseries.offsets.CDay.__call__": "doc",
    "pandas.core.resample.Resampler.apply": "doc",
    "pandas.core.resample.Resampler.ffill": "doc",
    "pandas.core.resample.Resampler.bfill": "doc",
    "pandas.core.resample.Resampler.count": "doc",
    "pandas.core.resample.Resampler.first": "doc",
    "pandas.io.formats.style.Styler.where": "doc",
    "pandas.Series.is_monotonic_increasing": "doc",
    "pandas.Series.is_monotonic_decreasing": "doc",
    "pandas.tseries.offsets.MonthEnd.nanos": "doc",
    "pandas.tseries.offsets.MonthEnd.apply": "doc",
    "pandas.tseries.offsets.SemiMonthBegin": "doc",
    "pandas.tseries.offsets.Week.normalize": "doc",
    "pandas.tseries.offsets.Week.rule_code": "doc",
    "pandas.tseries.offsets.BYearEnd.nanos": "doc",
    "pandas.tseries.offsets.BYearEnd.apply": "doc",
    "pandas.tseries.offsets.YearBegin.kwds": "doc",
    "pandas.tseries.offsets.YearBegin.name": "doc",
    "pandas.tseries.offsets.YearBegin.copy": "doc",
    "pandas.tseries.offsets.FY5253.freqstr": "doc",
    "pandas.tseries.offsets.Easter.freqstr": "doc",
    "pandas.tseries.offsets.Tick.normalize": "doc",
    "pandas.tseries.offsets.Tick.rule_code": "doc",
    "pandas.tseries.offsets.Day.isAnchored": "doc",
    "pandas.tseries.offsets.Hour.normalize": "doc",
    "pandas.tseries.offsets.Hour.rule_code": "doc",
    "pandas.tseries.offsets.Minute.freqstr": "doc",
    "pandas.tseries.offsets.Second.freqstr": "doc",
    "pandas.tseries.offsets.Milli.onOffset": "doc",
    "pandas.tseries.offsets.Milli.__call__": "doc",
    "pandas.tseries.offsets.Micro.onOffset": "doc",
    "pandas.tseries.offsets.Micro.__call__": "doc",
    "pandas.tseries.offsets.Nano.normalize": "doc",
    "pandas.tseries.offsets.Nano.rule_code": "doc",
    "pandas.tseries.offsets.BDay.normalize": "doc",
    "pandas.tseries.offsets.BDay.rule_code": "doc",
    "pandas.tseries.offsets.BMonthEnd.base": "doc",
    "pandas.tseries.offsets.BMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.BMonthEnd.name": "doc",
    "pandas.tseries.offsets.BMonthEnd.copy": "doc",
    "pandas.tseries.offsets.CDay.normalize": "doc",
    "pandas.tseries.offsets.CDay.rule_code": "doc",
    "pandas.core.resample.Resampler.fillna": "doc",
    "pandas.core.resample.Resampler.asfreq": "doc",
    "pandas.core.resample.Resampler.median": "doc",
    "pandas.io.formats.style.Styler.loader": "doc",
    "pandas.io.formats.style.Styler.render": "doc",
    "pandas.errors.UnsupportedFunctionCall": "doc",
    "pandas.tseries.offsets.DateOffset.kwds": "doc",
    "pandas.tseries.offsets.DateOffset.name": "doc",
    "pandas.tseries.offsets.DateOffset.copy": "doc",
    "pandas.tseries.offsets.MonthBegin.kwds": "doc",
    "pandas.tseries.offsets.MonthBegin.name": "doc",
    "pandas.tseries.offsets.MonthBegin.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset": "doc",
    "pandas.tseries.offsets.Week.isAnchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth": "doc",
    "pandas.tseries.offsets.QuarterEnd.kwds": "doc",
    "pandas.tseries.offsets.QuarterEnd.name": "doc",
    "pandas.tseries.offsets.QuarterEnd.copy": "doc",
    "pandas.tseries.offsets.YearOffset.kwds": "doc",
    "pandas.tseries.offsets.YearOffset.name": "doc",
    "pandas.tseries.offsets.YearOffset.copy": "doc",
    "pandas.tseries.offsets.BYearBegin.kwds": "doc",
    "pandas.tseries.offsets.BYearBegin.name": "doc",
    "pandas.tseries.offsets.BYearBegin.copy": "doc",
    "pandas.tseries.offsets.YearEnd.freqstr": "doc",
    "pandas.tseries.offsets.YearBegin.nanos": "doc",
    "pandas.tseries.offsets.YearBegin.apply": "doc",
    "pandas.tseries.offsets.FY5253.onOffset": "doc",
    "pandas.tseries.offsets.FY5253.__call__": "doc",
    "pandas.tseries.offsets.Easter.onOffset": "doc",
    "pandas.tseries.offsets.Easter.__call__": "doc",
    "pandas.tseries.offsets.Tick.isAnchored": "doc",
    "pandas.tseries.offsets.Day.is_anchored": "doc",
    "pandas.tseries.offsets.Hour.isAnchored": "doc",
    "pandas.tseries.offsets.Minute.onOffset": "doc",
    "pandas.tseries.offsets.Minute.__call__": "doc",
    "pandas.tseries.offsets.Second.onOffset": "doc",
    "pandas.tseries.offsets.Second.__call__": "doc",
    "pandas.tseries.offsets.Milli.normalize": "doc",
    "pandas.tseries.offsets.Milli.rule_code": "doc",
    "pandas.tseries.offsets.Micro.normalize": "doc",
    "pandas.tseries.offsets.Micro.rule_code": "doc",
    "pandas.tseries.offsets.Nano.isAnchored": "doc",
    "pandas.tseries.offsets.BDay.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.BMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd.base": "doc",
    "pandas.tseries.offsets.CBMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.CBMonthEnd.name": "doc",
    "pandas.tseries.offsets.CBMonthEnd.copy": "doc",
    "pandas.tseries.offsets.CDay.isAnchored": "doc",
    "pandas.core.resample.Resampler.indices": "doc",
    "pandas.core.resample.Resampler.nearest": "doc",
    "pandas.core.resample.Resampler.nunique": "doc",
    "pandas.tseries.offsets.DateOffset.nanos": "doc",
    "pandas.tseries.offsets.DateOffset.apply": "doc",
    "pandas.tseries.offsets.BusinessDay.kwds": "doc",
    "pandas.tseries.offsets.BusinessDay.name": "doc",
    "pandas.tseries.offsets.BusinessDay.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.kwds": "doc",
    "pandas.tseries.offsets.MonthOffset.name": "doc",
    "pandas.tseries.offsets.MonthOffset.copy": "doc",
    "pandas.tseries.offsets.MonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.MonthBegin.nanos": "doc",
    "pandas.tseries.offsets.MonthBegin.apply": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd": "doc",
    "pandas.tseries.offsets.Week.apply_index": "doc",
    "pandas.tseries.offsets.Week.is_anchored": "doc",
    "pandas.tseries.offsets.WeekOfMonth.kwds": "doc",
    "pandas.tseries.offsets.WeekOfMonth.name": "doc",
    "pandas.tseries.offsets.WeekOfMonth.copy": "doc",
    "pandas.tseries.offsets.BQuarterEnd.kwds": "doc",
    "pandas.tseries.offsets.BQuarterEnd.name": "doc",
    "pandas.tseries.offsets.BQuarterEnd.copy": "doc",
    "pandas.tseries.offsets.QuarterEnd.nanos": "doc",
    "pandas.tseries.offsets.QuarterEnd.apply": "doc",
    "pandas.tseries.offsets.YearOffset.nanos": "doc",
    "pandas.tseries.offsets.YearOffset.apply": "doc",
    "pandas.tseries.offsets.BYearEnd.freqstr": "doc",
    "pandas.tseries.offsets.BYearBegin.nanos": "doc",
    "pandas.tseries.offsets.BYearBegin.apply": "doc",
    "pandas.tseries.offsets.YearEnd.onOffset": "doc",
    "pandas.tseries.offsets.YearEnd.__call__": "doc",
    "pandas.tseries.offsets.FY5253.normalize": "doc",
    "pandas.tseries.offsets.FY5253.rule_code": "doc",
    "pandas.tseries.offsets.Easter.normalize": "doc",
    "pandas.tseries.offsets.Easter.rule_code": "doc",
    "pandas.tseries.offsets.Tick.is_anchored": "doc",
    "pandas.tseries.offsets.Day.is_on_offset": "doc",
    "pandas.tseries.offsets.Hour.is_anchored": "doc",
    "pandas.tseries.offsets.Minute.normalize": "doc",
    "pandas.tseries.offsets.Minute.rule_code": "doc",
    "pandas.tseries.offsets.Second.normalize": "doc",
    "pandas.tseries.offsets.Second.rule_code": "doc",
    "pandas.tseries.offsets.Milli.isAnchored": "doc",
    "pandas.tseries.offsets.Micro.isAnchored": "doc",
    "pandas.tseries.offsets.Nano.is_anchored": "doc",
    "pandas.tseries.offsets.BDay.apply_index": "doc",
    "pandas.tseries.offsets.BDay.is_anchored": "doc",
    "pandas.tseries.offsets.BDay.rollforward": "doc",
    "pandas.tseries.offsets.BMonthBegin.base": "doc",
    "pandas.tseries.offsets.BMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.BMonthBegin.name": "doc",
    "pandas.tseries.offsets.BMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CBMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.CBMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CDay.apply_index": "doc",
    "pandas.tseries.offsets.CDay.is_anchored": "doc",
    "pandas.tseries.offsets.CDay.rollforward": "doc",
    "pandas.core.resample.Resampler.__iter__": "doc",
    "pandas.core.resample.Resampler.backfill": "doc",
    "pandas.core.resample.Resampler.quantile": "doc",
    "pandas.tseries.offsets.BusinessDay.nanos": "doc",
    "pandas.tseries.offsets.BusinessDay.apply": "doc",
    "pandas.tseries.offsets.BusinessHour.kwds": "doc",
    "pandas.tseries.offsets.BusinessHour.name": "doc",
    "pandas.tseries.offsets.BusinessHour.copy": "doc",
    "pandas.tseries.offsets.CustomBusinessDay": "doc",
    "pandas.tseries.offsets.MonthOffset.nanos": "doc",
    "pandas.tseries.offsets.MonthOffset.apply": "doc",
    "pandas.tseries.offsets.MonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.MonthEnd.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.name": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.copy": "doc",
    "pandas.tseries.offsets.Week.is_on_offset": "doc",
    "pandas.tseries.offsets.WeekOfMonth.nanos": "doc",
    "pandas.tseries.offsets.WeekOfMonth.apply": "doc",
    "pandas.tseries.offsets.BQuarterEnd.nanos": "doc",
    "pandas.tseries.offsets.BQuarterEnd.apply": "doc",
    "pandas.tseries.offsets.QuarterBegin.kwds": "doc",
    "pandas.tseries.offsets.QuarterBegin.name": "doc",
    "pandas.tseries.offsets.QuarterBegin.copy": "doc",
    "pandas.tseries.offsets.BYearEnd.onOffset": "doc",
    "pandas.tseries.offsets.BYearEnd.__call__": "doc",
    "pandas.tseries.offsets.YearEnd.normalize": "doc",
    "pandas.tseries.offsets.YearEnd.rule_code": "doc",
    "pandas.tseries.offsets.YearBegin.freqstr": "doc",
    "pandas.tseries.offsets.FY5253.isAnchored": "doc",
    "pandas.tseries.offsets.Easter.isAnchored": "doc",
    "pandas.tseries.offsets.Tick.is_on_offset": "doc",
    "pandas.tseries.offsets.Hour.is_on_offset": "doc",
    "pandas.tseries.offsets.Minute.isAnchored": "doc",
    "pandas.tseries.offsets.Second.isAnchored": "doc",
    "pandas.tseries.offsets.Milli.is_anchored": "doc",
    "pandas.tseries.offsets.Micro.is_anchored": "doc",
    "pandas.tseries.offsets.Nano.is_on_offset": "doc",
    "pandas.tseries.offsets.BDay.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.BMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.BMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd.offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.base": "doc",
    "pandas.tseries.offsets.CBMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.CBMonthBegin.name": "doc",
    "pandas.tseries.offsets.CBMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CDay.is_on_offset": "doc",
    "pandas.core.resample.Resampler.aggregate": "doc",
    "pandas.core.resample.Resampler.transform": "doc",
    "pandas.tseries.offsets.DateOffset.freqstr": "doc",
    "pandas.tseries.offsets.BusinessHour.nanos": "doc",
    "pandas.tseries.offsets.BusinessHour.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour": "doc",
    "pandas.tseries.offsets.MonthEnd.normalize": "doc",
    "pandas.tseries.offsets.MonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.MonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.apply": "doc",
    "pandas.tseries.offsets.QuarterOffset.kwds": "doc",
    "pandas.tseries.offsets.QuarterOffset.name": "doc",
    "pandas.tseries.offsets.QuarterOffset.copy": "doc",
    "pandas.tseries.offsets.BQuarterBegin.kwds": "doc",
    "pandas.tseries.offsets.BQuarterBegin.name": "doc",
    "pandas.tseries.offsets.BQuarterBegin.copy": "doc",
    "pandas.tseries.offsets.QuarterEnd.freqstr": "doc",
    "pandas.tseries.offsets.QuarterBegin.nanos": "doc",
    "pandas.tseries.offsets.QuarterBegin.apply": "doc",
    "pandas.tseries.offsets.YearOffset.freqstr": "doc",
    "pandas.tseries.offsets.BYearEnd.normalize": "doc",
    "pandas.tseries.offsets.BYearEnd.rule_code": "doc",
    "pandas.tseries.offsets.BYearBegin.freqstr": "doc",
    "pandas.tseries.offsets.YearEnd.isAnchored": "doc",
    "pandas.tseries.offsets.YearBegin.onOffset": "doc",
    "pandas.tseries.offsets.YearBegin.__call__": "doc",
    "pandas.tseries.offsets.FY5253.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.kwds": "doc",
    "pandas.tseries.offsets.FY5253Quarter.name": "doc",
    "pandas.tseries.offsets.FY5253Quarter.copy": "doc",
    "pandas.tseries.offsets.Easter.is_anchored": "doc",
    "pandas.tseries.offsets.Minute.is_anchored": "doc",
    "pandas.tseries.offsets.Second.is_anchored": "doc",
    "pandas.tseries.offsets.Milli.is_on_offset": "doc",
    "pandas.tseries.offsets.Micro.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.BMonthEnd.rollback": "doc",
    "pandas.tseries.offsets.BMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CBMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.CBMonthBegin.apply": "doc",
    "pandas.Series.cat.remove_unused_categories": "doc",
    "pandas.tseries.offsets.DateOffset.onOffset": "doc",
    "pandas.tseries.offsets.DateOffset.__call__": "doc",
    "pandas.tseries.offsets.BusinessDay.freqstr": "doc",
    "pandas.tseries.offsets.MonthOffset.freqstr": "doc",
    "pandas.tseries.offsets.MonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.MonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.MonthBegin.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.name": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.copy": "doc",
    "pandas.tseries.offsets.WeekOfMonth.freqstr": "doc",
    "pandas.tseries.offsets.QuarterOffset.nanos": "doc",
    "pandas.tseries.offsets.QuarterOffset.apply": "doc",
    "pandas.tseries.offsets.BQuarterEnd.freqstr": "doc",
    "pandas.tseries.offsets.BQuarterBegin.nanos": "doc",
    "pandas.tseries.offsets.BQuarterBegin.apply": "doc",
    "pandas.tseries.offsets.QuarterEnd.onOffset": "doc",
    "pandas.tseries.offsets.QuarterEnd.__call__": "doc",
    "pandas.tseries.offsets.YearOffset.onOffset": "doc",
    "pandas.tseries.offsets.YearOffset.__call__": "doc",
    "pandas.tseries.offsets.BYearEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BYearBegin.onOffset": "doc",
    "pandas.tseries.offsets.BYearBegin.__call__": "doc",
    "pandas.tseries.offsets.YearEnd.apply_index": "doc",
    "pandas.tseries.offsets.YearEnd.is_anchored": "doc",
    "pandas.tseries.offsets.YearBegin.normalize": "doc",
    "pandas.tseries.offsets.YearBegin.rule_code": "doc",
    "pandas.tseries.offsets.FY5253.get_year_end": "doc",
    "pandas.tseries.offsets.FY5253.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.nanos": "doc",
    "pandas.tseries.offsets.FY5253Quarter.apply": "doc",
    "pandas.tseries.offsets.Easter.is_on_offset": "doc",
    "pandas.tseries.offsets.Minute.is_on_offset": "doc",
    "pandas.tseries.offsets.Second.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.BMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.BMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthEnd.m_offset": "doc",
    "pandas.tseries.offsets.CBMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rollback": "doc",
    "pandas.tseries.offsets.CBMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CBMonthBegin.offset": "doc",
    "pandas.core.resample.Resampler.interpolate": "doc",
    "pandas.tseries.offsets.DateOffset.normalize": "doc",
    "pandas.tseries.offsets.DateOffset.rule_code": "doc",
    "pandas.tseries.offsets.BusinessDay.onOffset": "doc",
    "pandas.tseries.offsets.BusinessDay.__call__": "doc",
    "pandas.tseries.offsets.BusinessHour.freqstr": "doc",
    "pandas.tseries.offsets.MonthOffset.onOffset": "doc",
    "pandas.tseries.offsets.MonthOffset.__call__": "doc",
    "pandas.tseries.offsets.MonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.MonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.MonthBegin.normalize": "doc",
    "pandas.tseries.offsets.MonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.name": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.copy": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.apply": "doc",
    "pandas.tseries.offsets.WeekOfMonth.onOffset": "doc",
    "pandas.tseries.offsets.WeekOfMonth.__call__": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.kwds": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.name": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.copy": "doc",
    "pandas.tseries.offsets.BQuarterEnd.onOffset": "doc",
    "pandas.tseries.offsets.BQuarterEnd.__call__": "doc",
    "pandas.tseries.offsets.QuarterEnd.normalize": "doc",
    "pandas.tseries.offsets.QuarterEnd.rule_code": "doc",
    "pandas.tseries.offsets.QuarterBegin.freqstr": "doc",
    "pandas.tseries.offsets.YearOffset.normalize": "doc",
    "pandas.tseries.offsets.YearOffset.rule_code": "doc",
    "pandas.tseries.offsets.BYearEnd.apply_index": "doc",
    "pandas.tseries.offsets.BYearEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BYearBegin.normalize": "doc",
    "pandas.tseries.offsets.BYearBegin.rule_code": "doc",
    "pandas.tseries.offsets.YearEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.YearBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.BMonthBegin.rollback": "doc",
    "pandas.tseries.offsets.BMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.CBMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.CBMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.DateOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessDay.normalize": "doc",
    "pandas.tseries.offsets.BusinessDay.rule_code": "doc",
    "pandas.tseries.offsets.BusinessHour.onOffset": "doc",
    "pandas.tseries.offsets.BusinessHour.__call__": "doc",
    "pandas.tseries.offsets.MonthOffset.normalize": "doc",
    "pandas.tseries.offsets.MonthOffset.rule_code": "doc",
    "pandas.tseries.offsets.MonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.MonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.name": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.apply": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.WeekOfMonth.normalize": "doc",
    "pandas.tseries.offsets.WeekOfMonth.rule_code": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.nanos": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.apply": "doc",
    "pandas.tseries.offsets.QuarterOffset.freqstr": "doc",
    "pandas.tseries.offsets.BQuarterEnd.normalize": "doc",
    "pandas.tseries.offsets.BQuarterEnd.rule_code": "doc",
    "pandas.tseries.offsets.BQuarterBegin.freqstr": "doc",
    "pandas.tseries.offsets.QuarterEnd.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.onOffset": "doc",
    "pandas.tseries.offsets.QuarterBegin.__call__": "doc",
    "pandas.tseries.offsets.YearOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BYearEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BYearBegin.isAnchored": "doc",
    "pandas.tseries.offsets.YearBegin.apply_index": "doc",
    "pandas.tseries.offsets.YearBegin.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.freqstr": "doc",
    "pandas.tseries.offsets.BMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.BMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.rollforward": "doc",
    "pandas.tseries.offsets.BMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.BMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CBMonthEnd.cbday_roll": "doc",
    "pandas.tseries.offsets.CBMonthEnd.month_roll": "doc",
    "pandas.tseries.offsets.CBMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.m_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rollback": "doc",
    "pandas.tseries.offsets.CBMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.DateOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessDay.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessHour.normalize": "doc",
    "pandas.tseries.offsets.BusinessHour.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.name": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.isAnchored": "doc",
    "pandas.tseries.offsets.MonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.MonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.WeekOfMonth.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterOffset.onOffset": "doc",
    "pandas.tseries.offsets.QuarterOffset.__call__": "doc",
    "pandas.tseries.offsets.BQuarterEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BQuarterBegin.onOffset": "doc",
    "pandas.tseries.offsets.BQuarterBegin.__call__": "doc",
    "pandas.tseries.offsets.QuarterEnd.apply_index": "doc",
    "pandas.tseries.offsets.QuarterEnd.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.normalize": "doc",
    "pandas.tseries.offsets.QuarterBegin.rule_code": "doc",
    "pandas.tseries.offsets.YearOffset.apply_index": "doc",
    "pandas.tseries.offsets.YearOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BYearBegin.apply_index": "doc",
    "pandas.tseries.offsets.BYearBegin.is_anchored": "doc",
    "pandas.tseries.offsets.YearBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.onOffset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.__call__": "doc",
    "pandas.tseries.offsets.BMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CBMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.CBMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rollforward": "doc",
    "pandas.tseries.offsets.CBMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.DateOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessDay.apply_index": "doc",
    "pandas.tseries.offsets.BusinessDay.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessHour.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.name": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.apply_index": "doc",
    "pandas.tseries.offsets.MonthOffset.is_anchored": "doc",
    "pandas.tseries.offsets.MonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.name": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.WeekOfMonth.is_anchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.freqstr": "doc",
    "pandas.tseries.offsets.QuarterOffset.normalize": "doc",
    "pandas.tseries.offsets.QuarterOffset.rule_code": "doc",
    "pandas.tseries.offsets.BQuarterEnd.apply_index": "doc",
    "pandas.tseries.offsets.BQuarterEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BQuarterBegin.normalize": "doc",
    "pandas.tseries.offsets.BQuarterBegin.rule_code": "doc",
    "pandas.tseries.offsets.QuarterEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.QuarterBegin.isAnchored": "doc",
    "pandas.tseries.offsets.YearOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BYearBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.normalize": "doc",
    "pandas.tseries.offsets.FY5253Quarter.rule_code": "doc",
    "pandas.tseries.offsets.FY5253Quarter.get_weeks": "doc",
    "pandas.tseries.offsets.BMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.BMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.rollforward": "doc",
    "pandas.tseries.offsets.CBMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.cbday_roll": "doc",
    "pandas.tseries.offsets.CBMonthBegin.month_roll": "doc",
    "pandas.tseries.offsets.CBMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessDay.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessHour.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.apply": "doc",
    "pandas.tseries.offsets.MonthOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.WeekOfMonth.is_on_offset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.onOffset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.__call__": "doc",
    "pandas.tseries.offsets.QuarterOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BQuarterEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BQuarterBegin.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.apply_index": "doc",
    "pandas.tseries.offsets.QuarterBegin.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.CBMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rollforward": "doc",
    "pandas.tseries.offsets.BusinessHour.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.normalize": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.rule_code": "doc",
    "pandas.tseries.offsets.QuarterOffset.apply_index": "doc",
    "pandas.tseries.offsets.QuarterOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BQuarterBegin.apply_index": "doc",
    "pandas.tseries.offsets.BQuarterBegin.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BQuarterBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.__call__": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.name": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.is_anchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253.get_rule_code_suffix": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.rule_code": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.apply": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.name": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.FY5253Quarter.year_has_extra_week": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset": "doc",
    "pandas.timedelta_range": "doc",
    "pandas.DatetimeTZDtype": "doc",
    "pandas.wide_to_long": "doc",
    "pandas.Index.value_counts": "doc",
    "pandas.MultiIndex.from_product": "doc",
    "pandas.MultiIndex.is_lexsorted": "doc",
    "pandas.Index.symmetric_difference": "doc",
    "pandas.api.types.is_integer_dtype": "doc",
    "pandas.CategoricalIndex.rename_categories": "doc",
    "pandas.CategoricalIndex.remove_categories": "doc",
    "pandas.merge_ordered": "doc",
    "pandas.Index.inferred_type": "doc",
    "pandas.DataFrame.select_dtypes": "doc",
    "pandas.DataFrame.infer_objects": "doc",
    "pandas.DatetimeIndex.is_year_start": "doc",
    "pandas.DatetimeIndex.inferred_freq": "doc",
    "pandas.Index.get_indexer_non_unique": "doc",
    "pandas.option_context": "doc",
    "pandas.plotting.andrews_curves": "doc",
    "pandas.DataFrame.convert_dtypes": "doc",
    "pandas.DatetimeIndex.to_perioddelta": "doc",
    "pandas.api.extensions.ExtensionDtype": "doc",
    "pandas.api.extensions.ExtensionArray": "doc",
    "pandas.api.types.is_datetime64_dtype": "doc",
    "pandas.io.formats.style.Styler.background_gradient": "doc",
    "pandas.api.extensions.register_series_accessor": "doc",
    "pandas.CategoricalIndex.remove_unused_categories": "doc",
    "pandas.Index.to_native_types": "doc",
    "pandas.Index.get_indexer_for": "doc",
    "pandas.Index.get_slice_bound": "doc",
    "pandas.api.types.is_period_dtype": "doc",
    "pandas.api.types.is_timedelta64_dtype": "doc",
    "pandas.MultiIndex.remove_unused_levels": "doc",
    "pandas.io.formats.style.Styler.set_table_attributes": "doc",
    "pandas.api.types.is_datetime64tz_dtype": "doc",
    "pandas.CategoricalDtype": "doc",
    "pandas.CategoricalIndex": "doc",
    "pandas.CategoricalIndex.map": "doc",
    "pandas.CategoricalIndex.codes": "doc",
    "pandas.CategoricalIndex.equals": "doc",
    "pandas.api.types.is_complex_dtype": "doc",
    "pandas.api.types.is_numeric_dtype": "doc",
    "pandas.api.types.is_re_compilable": "doc",
    "pandas.CategoricalIndex.as_ordered": "doc",
    "pandas.CategoricalIndex.as_unordered": "doc",
    "pandas.CategoricalIndex.add_categories": "doc",
    "pandas.CategoricalIndex.set_categories": "doc",
    "pandas.CategoricalIndex.reorder_categories": "doc",
    "pandas.api.extensions.register_dataframe_accessor": "doc",
    "pandas.melt": "doc",
    "pandas.pivot": "doc",
    "pandas.unique": "doc",
    "pandas.isnull": "doc",
    "pandas.Period": "doc",
    "pandas.Interval": "doc",
    "pandas.read_spss": "doc",
    "pandas.factorize": "doc",
    "pandas.DataFrame": "doc",
    "pandas.Int8Dtype": "doc",
    "pandas.Index.map": "doc",
    "pandas.Period.day": "doc",
    "pandas.Period.now": "doc",
    "pandas.Int16Dtype": "doc",
    "pandas.Int32Dtype": "doc",
    "pandas.Int64Dtype": "doc",
    "pandas.UInt8Dtype": "doc",
    "pandas.Index.name": "doc",
    "pandas.Index.size": "doc",
    "pandas.Index.copy": "doc",
    "pandas.Index.item": "doc",
    "pandas.Index.view": "doc",
    "pandas.IndexSlice": "doc",
    "pandas.bdate_range": "doc",
    "pandas.DataFrame.T": "doc",
    "pandas.Period.freq": "doc",
    "pandas.Period.week": "doc",
    "pandas.Period.year": "doc",
    "pandas.Categorical": "doc",
    "pandas.Index.dtype": "doc",
    "pandas.Index.shape": "doc",
    "pandas.Index.names": "doc",
    "pandas.Index.empty": "doc",
    "pandas.Index.ravel": "doc",
    "pandas.HDFStore.put": "doc",
    "pandas.HDFStore.get": "doc",
    "pandas.DataFrame.at": "doc",
    "pandas.DataFrame.xs": "doc",
    "pandas.DataFrame.lt": "doc",
    "pandas.DataFrame.gt": "doc",
    "pandas.DataFrame.le": "doc",
    "pandas.DataFrame.ge": "doc",
    "pandas.DataFrame.ne": "doc",
    "pandas.DataFrame.eq": "doc",
    "pandas.Period.month": "doc",
    "pandas.Period.qyear": "doc",
    "pandas.Interval.mid": "doc",
    "pandas.Index.values": "doc",
    "pandas.Index.delete": "doc",
    "pandas.Index.equals": "doc",
    "pandas.Index.insert": "doc",
    "pandas.Index.rename": "doc",
    "pandas.Index.repeat": "doc",
    "pandas.Index.unique": "doc",
    "pandas.Index.astype": "doc",
    "pandas.HDFStore.info": "doc",
    "pandas.HDFStore.keys": "doc",
    "pandas.HDFStore.walk": "doc",
    "pandas.DataFrame.iat": "doc",
    "pandas.DataFrame.loc": "doc",
    "pandas.DataFrame.pop": "doc",
    "pandas.DataFrame.get": "doc",
    "pandas.DataFrame.add": "doc",
    "pandas.DataFrame.sub": "doc",
    "pandas.DataFrame.mul": "doc",
    "pandas.DataFrame.div": "doc",
    "pandas.DataFrame.mod": "doc",
    "pandas.DataFrame.pow": "doc",
    "pandas.DataFrame.dot": "doc",
    "pandas.DataFrame.agg": "doc",
    "pandas.DataFrame.ewm": "doc",
    "pandas.DataFrame.abs": "doc",
    "pandas.DataFrame.all": "doc",
    "pandas.DataFrame.any": "doc",
    "pandas.DataFrame.cov": "doc",
    "pandas.DataFrame.mad": "doc",
    "pandas.DataFrame.max": "doc",
    "pandas.DataFrame.min": "doc",
    "pandas.DataFrame.sem": "doc",
    "pandas.DataFrame.sum": "doc",
    "pandas.DataFrame.std": "doc",
    "pandas.DataFrame.var": "doc",
    "pandas.Period.second": "doc",
    "pandas.Period.asfreq": "doc",
    "pandas.Interval.left": "doc",
    "pandas.Index.reindex": "doc",
    "pandas.Index.nunique": "doc",
    "pandas.DataFrame.axes": "doc",
    "pandas.DataFrame.ndim": "doc",
    "pandas.DataFrame.size": "doc",
    "pandas.DataFrame.copy": "doc",
    "pandas.DataFrame.isna": "doc",
    "pandas.DataFrame.bool": "doc",
    "pandas.DataFrame.head": "doc",
    "pandas.DataFrame.iloc": "doc",
    "pandas.DataFrame.keys": "doc",
    "pandas.DataFrame.tail": "doc",
    "pandas.DataFrame.isin": "doc",
    "pandas.DataFrame.mask": "doc",
    "pandas.DataFrame.radd": "doc",
    "pandas.DataFrame.rsub": "doc",
    "pandas.DataFrame.rmul": "doc",
    "pandas.DataFrame.rdiv": "doc",
    "pandas.DataFrame.rmod": "doc",
    "pandas.DataFrame.rpow": "doc",
    "pandas.DataFrame.clip": "doc",
    "pandas.DataFrame.corr": "doc",
    "pandas.DataFrame.diff": "doc",
    "pandas.DataFrame.eval": "doc",
    "pandas.DataFrame.kurt": "doc",
    "pandas.DataFrame.mean": "doc",
    "pandas.DataFrame.prod": "doc",
    "pandas.DataFrame.rank": "doc",
    "pandas.DataFrame.skew": "doc",
    "pandas.DataFrame.last": "doc",
    "pandas.DataFrame.take": "doc",
    "pandas.DataFrame.melt": "doc",
    "pandas.DataFrame.join": "doc",
    "pandas.DataFrame.asof": "doc",
    "pandas.DataFrame.plot": "doc",
    "pandas.DataFrame.hist": "doc",
    "pandas.DataFrame.info": "doc",
    "pandas.Period.freqstr": "doc",
    "pandas.Period.ordinal": "doc",
    "pandas.Period.weekday": "doc",
    "pandas.Interval.right": "doc",
    "pandas.Index.is_mixed": "doc",
    "pandas.Index.to_frame": "doc",
    "pandas.ExcelFile.parse": "doc",
    "pandas.HDFStore.append": "doc",
    "pandas.HDFStore.select": "doc",
    "pandas.DataFrame.index": "doc",
    "pandas.DataFrame.shape": "doc",
    "pandas.DataFrame.empty": "doc",
    "pandas.DataFrame.notna": "doc",
    "pandas.DataFrame.items": "doc",
    "pandas.DataFrame.query": "doc",
    "pandas.DataFrame.apply": "doc",
    "pandas.DataFrame.count": "doc",
    "pandas.DataFrame.align": "doc",
    "pandas.DataFrame.first": "doc",
    "pandas.DataFrame.pivot": "doc",
    "pandas.DataFrame.stack": "doc",
    "pandas.DataFrame.shift": "doc",
    "pandas.DataFrame.attrs": "doc",
    "pandas.DataFrame.style": "doc",
    "pandas.Period.end_time": "doc",
    "pandas.Period.strftime": "doc",
    "pandas.Interval.closed": "doc",
    "pandas.Interval.length": "doc",
    "pandas.Index.is_unique": "doc",
    "pandas.Index.factorize": "doc",
    "pandas.Index.identical": "doc",
    "pandas.Index.is_object": "doc",
    "pandas.Index.set_names": "doc",
    "pandas.Index.to_series": "doc",
    "pandas.Index.get_value": "doc",
    "pandas.RangeIndex.stop": "doc",
    "pandas.RangeIndex.step": "doc",
    "pandas.DataFrame.dtypes": "doc",
    "pandas.DataFrame.values": "doc",
    "pandas.DataFrame.astype": "doc",
    "pandas.DataFrame.insert": "doc",
    "pandas.DataFrame.lookup": "doc",
    "pandas.DataFrame.cummax": "doc",
    "pandas.DataFrame.cummin": "doc",
    "pandas.DataFrame.cumsum": "doc",
    "pandas.DataFrame.median": "doc",
    "pandas.DataFrame.equals": "doc",
    "pandas.DataFrame.idxmax": "doc",
    "pandas.DataFrame.idxmin": "doc",
    "pandas.DataFrame.rename": "doc",
    "pandas.DataFrame.sample": "doc",
    "pandas.DataFrame.fillna": "doc",
    "pandas.DataFrame.append": "doc",
    "pandas.DataFrame.assign": "doc",
    "pandas.DataFrame.update": "doc",
    "pandas.DataFrame.asfreq": "doc",
    "pandas.DataFrame.tshift": "doc",
    "pandas.DataFrame.to_csv": "doc",
    "pandas.DataFrame.to_hdf": "doc",
    "pandas.DataFrame.to_sql": "doc",
    "pandas.DataFrame.to_gbq": "doc",
    "pandas.Period.dayofweek": "doc",
    "pandas.Period.dayofyear": "doc",
    "pandas.Index.is_boolean": "doc",
    "pandas.Index.is_numeric": "doc",
    "pandas.Index.slice_locs": "doc",
    "pandas.MultiIndex.names": "doc",
    "pandas.MultiIndex.codes": "doc",
    "pandas.PeriodIndex.freq": "doc",
    "pandas.PeriodIndex.week": "doc",
    "pandas.PeriodIndex.year": "doc",
    "pandas.DataFrame.columns": "doc",
    "pandas.DataFrame.truediv": "doc",
    "pandas.DataFrame.combine": "doc",
    "pandas.DataFrame.rolling": "doc",
    "pandas.DataFrame.product": "doc",
    "pandas.DataFrame.nunique": "doc",
    "pandas.DataFrame.at_time": "doc",
    "pandas.DataFrame.reindex": "doc",
    "pandas.DataFrame.replace": "doc",
    "pandas.DataFrame.unstack": "doc",
    "pandas.DataFrame.explode": "doc",
    "pandas.DataFrame.squeeze": "doc",
    "pandas.DataFrame.boxplot": "doc",
    "pandas.DataFrame.to_dict": "doc",
    "pandas.DataFrame.to_json": "doc",
    "pandas.DataFrame.to_html": "doc",
    "pandas.Period.start_time": "doc",
    "pandas.Interval.is_empty": "doc",
    "pandas.Categorical.dtype": "doc",
    "pandas.Categorical.codes": "doc",
    "pandas.Index.get_indexer": "doc",
    "pandas.PeriodIndex.month": "doc",
    "pandas.PeriodIndex.qyear": "doc",
    "pandas.api.types.is_bool": "doc",
    "pandas.DataFrame.__iter__": "doc",
    "pandas.DataFrame.floordiv": "doc",
    "pandas.DataFrame.rtruediv": "doc",
    "pandas.DataFrame.applymap": "doc",
    "pandas.DataFrame.corrwith": "doc",
    "pandas.DataFrame.describe": "doc",
    "pandas.DataFrame.kurtosis": "doc",
    "pandas.DataFrame.quantile": "doc",
    "pandas.DataFrame.set_axis": "doc",
    "pandas.DataFrame.truncate": "doc",
    "pandas.DataFrame.nlargest": "doc",
    "pandas.DataFrame.swapaxes": "doc",
    "pandas.DataFrame.resample": "doc",
    "pandas.DataFrame.plot.bar": "doc",
    "pandas.DataFrame.plot.box": "doc",
    "pandas.DataFrame.plot.kde": "doc",
    "pandas.DataFrame.plot.pie": "doc",
    "pandas.DataFrame.to_excel": "doc",
    "pandas.DataFrame.to_latex": "doc",
    "pandas.DataFrame.to_stata": "doc",
    "pandas.Period.daysinmonth": "doc",
    "pandas.Interval.open_left": "doc",
    "pandas.DatetimeIndex.year": "doc",
    "pandas.DatetimeIndex.week": "doc",
    "pandas.DatetimeIndex.freq": "doc",
    "pandas.DatetimeIndex.mean": "doc",
    "pandas.PeriodIndex.second": "doc",
    "pandas.PeriodIndex.asfreq": "doc",
    "pandas.api.types.is_float": "doc",
    "pandas.DataFrame.rfloordiv": "doc",
    "pandas.DataFrame.aggregate": "doc",
    "pandas.DataFrame.transform": "doc",
    "pandas.DataFrame.expanding": "doc",
    "pandas.DataFrame.set_index": "doc",
    "pandas.DataFrame.droplevel": "doc",
    "pandas.DataFrame.nsmallest": "doc",
    "pandas.DataFrame.swaplevel": "doc",
    "pandas.DataFrame.to_xarray": "doc",
    "pandas.DataFrame.transpose": "doc",
    "pandas.DataFrame.to_period": "doc",
    "pandas.DataFrame.plot.area": "doc",
    "pandas.DataFrame.plot.barh": "doc",
    "pandas.DataFrame.plot.hist": "doc",
    "pandas.DataFrame.plot.line": "doc",
    "pandas.DataFrame.from_dict": "doc",
    "pandas.DataFrame.to_pickle": "doc",
    "pandas.DataFrame.to_string": "doc",
    "pandas.Period.is_leap_year": "doc",
    "pandas.Period.to_timestamp": "doc",
    "pandas.Interval.open_right": "doc",
    "pandas.MultiIndex.to_frame": "doc",
    "pandas.DatetimeIndex.month": "doc",
    "pandas.DatetimeIndex.floor": "doc",
    "pandas.PeriodIndex.freqstr": "doc",
    "pandas.api.types.is_sparse": "doc",
    "pandas.api.types.is_scalar": "doc",
    "pandas.DataFrame.pct_change": "doc",
    "pandas.DataFrame.add_prefix": "doc",
    "pandas.DataFrame.add_suffix": "doc",
    "pandas.DataFrame.duplicated": "doc",
    "pandas.DataFrame.sort_index": "doc",
    "pandas.DataFrame.tz_convert": "doc",
    "pandas.DataFrame.to_feather": "doc",
    "pandas.DataFrame.to_records": "doc",
    "pandas.Period.days_in_month": "doc",
    "pandas.Interval.closed_left": "doc",
    "pandas.IntervalIndex.closed": "doc",
    "pandas.IntervalIndex.values": "doc",
    "pandas.MultiIndex.set_codes": "doc",
    "pandas.DatetimeIndex.second": "doc",
    "pandas.DataFrame.rename_axis": "doc",
    "pandas.DataFrame.reset_index": "doc",
    "pandas.DataFrame.interpolate": "doc",
    "pandas.DataFrame.pivot_table": "doc",
    "pandas.DataFrame.sort_values": "doc",
    "pandas.DataFrame.slice_shift": "doc",
    "pandas.DataFrame.tz_localize": "doc",
    "pandas.DataFrame.plot.hexbin": "doc",
    "pandas.DataFrame.to_markdown": "doc",
    "pandas.Interval.closed_right": "doc",
    "pandas.Categorical.__array__": "doc",
    "pandas.RangeIndex.from_range": "doc",
    "pandas.MultiIndex.from_frame": "doc",
    "pandas.DatetimeIndex.freqstr": "doc",
    "pandas.PeriodIndex.dayofyear": "doc",
    "pandas.api.types.infer_dtype": "doc",
    "pandas.api.types.is_iterator": "doc",
    "pandas.api.types.is_hashable": "doc",
    "pandas.api.types.is_interval": "doc",
    "pandas.DataFrame.memory_usage": "doc",
    "pandas.DataFrame.between_time": "doc",
    "pandas.DataFrame.reindex_like": "doc",
    "pandas.DataFrame.to_timestamp": "doc",
    "pandas.DataFrame.plot.density": "doc",
    "pandas.DataFrame.plot.scatter": "doc",
    "pandas.DataFrame.from_records": "doc",
    "pandas.DataFrame.to_clipboard": "doc",
    "pandas.Categorical.from_codes": "doc",
    "pandas.IntervalIndex.is_empty": "doc",
    "pandas.MultiIndex.from_tuples": "doc",
    "pandas.MultiIndex.get_indexer": "doc",
    "pandas.DatetimeIndex.to_frame": "doc",
    "pandas.api.types.pandas_dtype": "doc",
    "pandas.api.types.is_dict_like": "doc",
    "pandas.api.types.is_file_like": "doc",
    "pandas.api.types.is_list_like": "doc",
    "pandas.DataFrame.combine_first": "doc",
    "pandas.DataFrame.sparse.to_coo": "doc",
    "pandas.IntervalIndex.to_tuples": "doc",
    "pandas.DatetimeIndex.dayofyear": "doc",
    "pandas.DatetimeIndex.to_series": "doc",
    "pandas.core.window.ewm.EWM.std": "doc",
    "pandas.core.window.ewm.EWM.var": "doc",
    "pandas.core.window.ewm.EWM.cov": "doc",
    "pandas.io.formats.style.Styler": "doc",
    "pandas.api.types.is_bool_dtype": "doc",
    "pandas.DataFrame.reorder_levels": "doc",
    "pandas.DataFrame.sparse.density": "doc",
    "pandas.IntervalIndex.set_closed": "doc",
    "pandas.DatetimeIndex.tz_convert": "doc",
    "pandas.core.window.ewm.EWM.mean": "doc",
    "pandas.core.window.ewm.EWM.corr": "doc",
    "pandas.api.types.is_float_dtype": "doc",
    "pandas.api.types.is_int64_dtype": "doc",
    "pandas.api.types.is_categorical": "doc",
    "pandas.DataFrame.drop_duplicates": "doc",
    "pandas.DataFrame.sparse.to_dense": "doc",
    "pandas.IntervalIndex.from_tuples": "doc",
    "pandas.IntervalIndex.get_indexer": "doc",
    "pandas.api.types.is_object_dtype": "doc",
    "pandas.api.types.is_string_dtype": "doc",
    "pandas.io.json.build_table_schema": "doc",
    "pandas.DataFrame.last_valid_index": "doc",
    "pandas.DataFrame.first_valid_index": "doc",
    "pandas.io.formats.style.Styler.env": "doc",
    "pandas.io.formats.style.Styler.bar": "doc",
    "pandas.io.formats.style.Styler.use": "doc",
    "pandas.api.types.is_extension_type": "doc",
    "pandas.api.types.is_interval_dtype": "doc",
    "pandas.api.types.union_categoricals": "doc",
    "pandas.io.formats.style.Styler.apply": "doc",
    "pandas.io.formats.style.Styler.clear": "doc",
    "pandas.DataFrame.sparse.from_spmatrix": "doc",
    "pandas.core.window.rolling.Window.sum": "doc",
    "pandas.core.window.rolling.Window.var": "doc",
    "pandas.core.window.rolling.Window.std": "doc",
    "pandas.io.formats.style.Styler.format": "doc",
    "pandas.io.formats.style.Styler.export": "doc",
    "pandas.api.types.is_categorical_dtype": "doc",
    "pandas.io.stata.StataReader.data_label": "doc",
    "pandas.io.stata.StataWriter.write_file": "doc",
    "pandas.core.window.rolling.Rolling.sum": "doc",
    "pandas.core.window.rolling.Rolling.var": "doc",
    "pandas.core.window.rolling.Rolling.std": "doc",
    "pandas.core.window.rolling.Rolling.min": "doc",
    "pandas.core.window.rolling.Rolling.max": "doc",
    "pandas.core.window.rolling.Rolling.cov": "doc",
    "pandas.core.window.rolling.Window.mean": "doc",
    "pandas.core.window.rolling.Rolling.mean": "doc",
    "pandas.core.window.rolling.Rolling.corr": "doc",
    "pandas.core.window.rolling.Rolling.skew": "doc",
    "pandas.core.window.rolling.Rolling.kurt": "doc",
    "pandas.io.formats.style.Styler.template": "doc",
    "pandas.io.formats.style.Styler.applymap": "doc",
    "pandas.io.formats.style.Styler.set_uuid": "doc",
    "pandas.io.formats.style.Styler.to_excel": "doc",
    "pandas.api.types.is_datetime64_ns_dtype": "doc",
    "pandas.api.indexers.check_array_indexer": "doc",
    "pandas.io.stata.StataReader.value_labels": "doc",
    "pandas.core.window.rolling.Rolling.count": "doc",
    "pandas.core.window.rolling.Rolling.apply": "doc",
    "pandas.api.types.is_datetime64_any_dtype": "doc",
    "pandas.api.types.is_signed_integer_dtype": "doc",
    "pandas.api.types.is_timedelta64_ns_dtype": "doc",
    "pandas.core.window.rolling.Rolling.median": "doc",
    "pandas.io.formats.style.Styler.set_na_rep": "doc",
    "pandas.api.types.is_extension_array_dtype": "doc",
    "pandas.core.window.expanding.Expanding.sum": "doc",
    "pandas.core.window.expanding.Expanding.var": "doc",
    "pandas.core.window.expanding.Expanding.std": "doc",
    "pandas.core.window.expanding.Expanding.min": "doc",
    "pandas.core.window.expanding.Expanding.max": "doc",
    "pandas.core.window.expanding.Expanding.cov": "doc",
    "pandas.io.formats.style.Styler.set_caption": "doc",
    "pandas.api.types.is_unsigned_integer_dtype": "doc",
    "pandas.io.stata.StataReader.variable_labels": "doc",
    "pandas.core.window.rolling.Rolling.quantile": "doc",
    "pandas.core.window.expanding.Expanding.mean": "doc",
    "pandas.core.window.expanding.Expanding.corr": "doc",
    "pandas.core.window.expanding.Expanding.skew": "doc",
    "pandas.core.window.expanding.Expanding.kurt": "doc",
    "pandas.core.window.rolling.Rolling.aggregate": "doc",
    "pandas.core.window.expanding.Expanding.count": "doc",
    "pandas.core.window.expanding.Expanding.apply": "doc",
    "pandas.io.formats.style.Styler.set_precision": "doc",
    "pandas.io.formats.style.Styler.highlight_max": "doc",
    "pandas.io.formats.style.Styler.highlight_min": "doc",
    "pandas.core.window.expanding.Expanding.median": "doc",
    "pandas.io.formats.style.Styler.highlight_null": "doc",
    "pandas.core.window.expanding.Expanding.quantile": "doc",
    "pandas.io.formats.style.Styler.set_table_styles": "doc",
    "pandas.core.window.expanding.Expanding.aggregate": "doc",
    "pandas.io.formats.style.Styler.from_custom_template": "doc",
    "pandas.Index.is_monotonic_decreasing": "doc",
    "pandas.api.extensions.register_index_accessor": "doc",
    "pandas.read_feather": "doc",
    "pandas.read_parquet": "doc",
    "pandas.period_range": "doc",
    "pandas.BooleanDtype": "doc",
    "pandas.reset_option": "doc",
    "pandas.Index.memory_usage": "doc",
    "pandas.Index.searchsorted": "doc",
    "pandas.arrays.IntegerArray": "doc",
    "pandas.PeriodIndex.is_leap_year": "doc",
    "pandas.PeriodIndex.to_timestamp": "doc",
    "pandas.DatetimeIndex.is_leap_year": "doc",
    "pandas.testing.assert_frame_equal": "doc",
    "pandas.plotting.register_matplotlib_converters": "doc",
    "pandas.api.extensions.register_extension_dtype": "doc",
    "pandas.testing.assert_series_equal": "doc",
    "pandas.plotting.deregister_matplotlib_converters": "doc",
    "pandas.IntervalDtype": "doc",
    "pandas.IntervalIndex": "doc",
    "pandas.DatetimeIndex": "doc",
    "pandas.DatetimeIndex.tz": "doc",
    "pandas.IntervalIndex.mid": "doc",
    "pandas.DatetimeIndex.day": "doc",
    "pandas.IntervalIndex.left": "doc",
    "pandas.DatetimeIndex.date": "doc",
    "pandas.DatetimeIndex.snap": "doc",
    "pandas.DatetimeIndex.ceil": "doc",
    "pandas.IntervalIndex.right": "doc",
    "pandas.arrays.DatetimeArray": "doc",
    "pandas.arrays.IntervalArray": "doc",
    "pandas.IntervalIndex.length": "doc",
    "pandas.IntervalIndex.get_loc": "doc",
    "pandas.DatetimeIndex.weekday": "doc",
    "pandas.IntervalIndex.contains": "doc",
    "pandas.DatetimeIndex.strftime": "doc",
    "pandas.DatetimeIndex.day_name": "doc",
    "pandas.DatetimeIndex.dayofweek": "doc",
    "pandas.DatetimeIndex.normalize": "doc",
    "pandas.DatetimeIndex.to_period": "doc",
    "pandas.DatetimeIndex.nanosecond": "doc",
    "pandas.DatetimeIndex.month_name": "doc",
    "pandas.IntervalIndex.from_arrays": "doc",
    "pandas.IntervalIndex.from_breaks": "doc",
    "pandas.DatetimeIndex.microsecond": "doc",
    "pandas.DatetimeIndex.is_year_end": "doc",
    "pandas.DatetimeIndex.tz_localize": "doc",
    "pandas.DatetimeIndex.is_month_end": "doc",
    "pandas.DatetimeIndex.to_pydatetime": "doc",
    "pandas.IntervalIndex.is_overlapping": "doc",
    "pandas.DatetimeIndex.is_month_start": "doc",
    "pandas.DatetimeIndex.is_quarter_end": "doc",
    "pandas.DatetimeIndex.indexer_at_time": "doc",
    "pandas.DatetimeIndex.is_quarter_start": "doc",
    "pandas.DatetimeIndex.indexer_between_time": "doc",
    "pandas.IntervalIndex.is_non_overlapping_monotonic": "doc",
    "pandas.plotting.autocorrelation_plot": "doc",
    "pandas.plotting.parallel_coordinates": "doc",
    "pandas.read_clipboard": "doc",
    "pandas.read_sql_query": "doc",
    "pandas.interval_range": "doc",
    "pandas.Index.is_categorical": "doc",
    "pandas.plotting.bootstrap_plot": "doc",
    "pandas.plotting.scatter_matrix": "doc",
    "pandas.MultiIndex.reorder_levels": "doc",
    "pandas.describe_option": "doc",
    "pandas.Index.drop_duplicates": "doc",
    "pandas.Index.is_monotonic_increasing": "doc",
    "pandas.Index.get_level_values": "doc",
    "pandas.MultiIndex.get_level_values": "doc",
    "pandas.util.hash_pandas_object": "doc",
    "pandas.testing.assert_index_equal": "doc",
    "pandas.testing.assert_extension_array_equal": "doc",
    "pandas.cut": "doc",
    "pandas.qcut": "doc",
    "pandas.isna": "doc",
    "pandas.eval": "doc",
    "pandas.test": "doc",
    "pandas.notna": "doc",
    "pandas.array": "doc",
    "pandas.Index": "doc",
    "pandas.concat": "doc",
    "pandas.notnull": "doc",
    "pandas.Index.T": "doc",
    "pandas.read_csv": "doc",
    "pandas.read_fwf": "doc",
    "pandas.read_hdf": "doc",
    "pandas.read_orc": "doc",
    "pandas.read_sas": "doc",
    "pandas.read_sql": "doc",
    "pandas.read_gbq": "doc",
    "pandas.crosstab": "doc",
    "pandas.read_json": "doc",
    "pandas.read_html": "doc",
    "pandas.Index.all": "doc",
    "pandas.Index.any": "doc",
    "pandas.Index.is_": "doc",
    "pandas.Index.min": "doc",
    "pandas.Index.max": "doc",
    "pandas.read_table": "doc",
    "pandas.read_excel": "doc",
    "pandas.merge_asof": "doc",
    "pandas.to_numeric": "doc",
    "pandas.Index.ndim": "doc",
    "pandas.Index.take": "doc",
    "pandas.Index.isna": "doc",
    "pandas.Index.join": "doc",
    "pandas.Index.asof": "doc",
    "pandas.Index.isin": "doc",
    "pandas.RangeIndex": "doc",
    "pandas.Int64Index": "doc",
    "pandas.MultiIndex": "doc",
    "pandas.get_option": "doc",
    "pandas.set_option": "doc",
    "pandas.pivot_table": "doc",
    "pandas.get_dummies": "doc",
    "pandas.PeriodDtype": "doc",
    "pandas.UInt16Dtype": "doc",
    "pandas.UInt32Dtype": "doc",
    "pandas.UInt64Dtype": "doc",
    "pandas.SparseDtype": "doc",
    "pandas.StringDtype": "doc",
    "pandas.Index.notna": "doc",
    "pandas.Index.shift": "doc",
    "pandas.Index.union": "doc",
    "pandas.UInt64Index": "doc",
    "pandas.PeriodIndex": "doc",
    "pandas.Index.nbytes": "doc",
    "pandas.Index.argmin": "doc",
    "pandas.Index.argmax": "doc",
    "pandas.Index.fillna": "doc",
    "pandas.Index.append": "doc",
    "pandas.Index.hasnans": "doc",
    "pandas.Index.putmask": "doc",
    "pandas.Index.to_list": "doc",
    "pandas.Index.argsort": "doc",
    "pandas.Index.get_loc": "doc",
    "pandas.plotting.table": "doc",
    "pandas.util.hash_array": "doc",
    "pandas.Index.droplevel": "doc",
    "pandas.Index.asof_locs": "doc",
    "pandas.PeriodIndex.day": "doc",
    "pandas.plotting.radviz": "doc",
    "pandas.Index.duplicated": "doc",
    "pandas.RangeIndex.start": "doc",
    "pandas.plotting.boxplot": "doc",
    "pandas.Index.is_floating": "doc",
    "pandas.Index.is_interval": "doc",
    "pandas.Index.sort_values": "doc",
    "pandas.MultiIndex.levels": "doc",
    "pandas.plotting.lag_plot": "doc",
    "pandas.arrays.PeriodArray": "doc",
    "pandas.arrays.SparseArray": "doc",
    "pandas.arrays.StringArray": "doc",
    "pandas.Index.is_monotonic": "doc",
    "pandas.Index.is_all_dates": "doc",
    "pandas.Index.intersection": "doc",
    "pandas.MultiIndex.nlevels": "doc",
    "pandas.MultiIndex.get_loc": "doc",
    "pandas.arrays.PandasArray": "doc",
    "pandas.arrays.BooleanArray": "doc",
    "pandas.MultiIndex.get_locs": "doc",
    "pandas.PeriodIndex.weekday": "doc",
    "pandas.Index.has_duplicates": "doc",
    "pandas.MultiIndex.sortlevel": "doc",
    "pandas.MultiIndex.droplevel": "doc",
    "pandas.MultiIndex.swaplevel": "doc",
    "pandas.PeriodIndex.end_time": "doc",
    "pandas.PeriodIndex.strftime": "doc",
    "pandas.MultiIndex.set_levels": "doc",
    "pandas.PeriodIndex.dayofweek": "doc",
    "pandas.MultiIndex.from_arrays": "doc",
    "pandas.PeriodIndex.start_time": "doc",
    "pandas.PeriodIndex.daysinmonth": "doc",
    "pandas.MultiIndex.to_flat_index": "doc",
    "pandas.MultiIndex.get_loc_level": "doc",
    "pandas.PeriodIndex.days_in_month": "doc",
    "pandas.to_timedelta": "doc",
    "pandas.Float64Index": "doc",
    "pandas.json_normalize": "doc",
    "pandas.plotting": "doc",
    "pandas.read_stata": "doc",
    "pandas.read_pickle": "doc",
    "pandas.to_datetime": "doc",
    "pandas.read_sql_table": "doc",
    "pandas.plotting.plot_params": "doc",
    "pandas.Index.to_numpy": "doc"
  },
  "tensorflow.keras.backend.set_image_dim_ordering": {
    "tensorflow.keras.backend.set_image_data_format": "doc",
    "tensorflow.compat.v1.keras.backend.set_image_data_format": "doc",
    "tensorflow.keras.backend.set_epsilon": "doc",
    "tensorflow.keras.backend.image_data_format": "doc",
    "tensorflow.compat.v1.keras.backend.set_epsilon": "doc"
  },
  "keras.backend.set_image_dim_ordering": {
    "keras.backend.set_image_data_format": "doc",
    "keras.backend.set_epsilon": "doc",
    "keras.backend.image_data_format": "doc",
    "keras.backend.get_uid": "doc",
    "keras.backend.set_floatx": "doc",
    "keras.backend.epsilon": "doc",
    "keras.backend.clear_session": "doc",
    "keras.backend.is_keras_tensor": "doc",
    "keras.backend.rnn": "doc",
    "keras.backend.floatx": "doc",
    "keras.layers.Masking": "doc",
    "keras.layers.Embedding": "doc",
    "keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "keras.models.save_model": "doc",
    "keras.activations.tanh": "doc",
    "keras.layers.Activation": "doc",
    "keras.layers.Layer.get_config": "doc",
    "keras.layers.Layer.set_weights": "doc",
    "keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "keras.layers.Attention": "doc",
    "keras.layers.ZeroPadding1D": "doc",
    "keras.layers.ZeroPadding2D": "doc",
    "keras.layers.ZeroPadding3D": "doc",
    "keras.layers.TimeDistributed": "doc",
    "keras.layers.Layer.add_metric": "doc",
    "keras.layers.AveragePooling1D": "doc",
    "keras.layers.AveragePooling2D": "doc",
    "keras.layers.AveragePooling3D": "doc",
    "keras.layers.Layer.get_weights": "doc",
    "keras.layers.experimental.preprocessing.Hashing": "doc",
    "keras.layers.experimental.preprocessing.Resizing": "doc",
    "keras.layers.experimental.preprocessing.Rescaling": "doc",
    "keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "keras.layers.experimental.preprocessing.StringLookup": "doc",
    "keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "keras.layers.experimental.preprocessing.Normalization": "doc",
    "keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "keras.layers.experimental.preprocessing.Discretization": "doc",
    "keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "keras.models.load_model": "doc",
    "keras.layers.RepeatVector": "doc",
    "keras.layers.Layer.metrics": "doc",
    "keras.layers.Bidirectional": "doc",
    "keras.layers.Layer.trainable": "doc",
    "keras.layers.MultiHeadAttention": "doc",
    "keras.layers.Layer.trainable_weights": "doc",
    "keras.utils.get_custom_objects": "doc",
    "keras.activations.elu": "doc",
    "keras.activations.relu": "doc",
    "keras.activations.selu": "doc",
    "keras.models.clone_model": "doc",
    "keras.activations.sigmoid": "doc",
    "keras.activations.softmax": "doc",
    "keras.activations.softplus": "doc",
    "keras.activations.softsign": "doc",
    "keras.activations.exponential": "doc",
    "keras.initializers.VarianceScaling": "doc",
    "keras.Model.save": "doc",
    "keras.layers.GRU": "doc",
    "keras.layers.RNN": "doc",
    "keras.layers.Add": "doc",
    "keras.layers.Dot": "doc",
    "keras.layers.ELU": "doc",
    "keras.layers.LSTM": "doc",
    "keras.layers.ReLU": "doc",
    "keras.layers.Layer": "doc",
    "keras.layers.Dense": "doc",
    "keras.layers.PReLU": "doc",
    "keras.layers.Lambda": "doc",
    "keras.layers.Conv1D": "doc",
    "keras.layers.Conv2D": "doc",
    "keras.layers.Conv3D": "doc",
    "keras.Sequential.add": "doc",
    "keras.layers.Dropout": "doc",
    "keras.layers.Reshape": "doc",
    "keras.layers.Flatten": "doc",
    "keras.layers.Permute": "doc",
    "keras.layers.Average": "doc",
    "keras.layers.Maximum": "doc",
    "keras.layers.Minimum": "doc",
    "keras.layers.Softmax": "doc",
    "keras.layers.Subtract": "doc",
    "keras.layers.Multiply": "doc",
    "keras.layers.SimpleRNN": "doc",
    "keras.layers.LeakyReLU": "doc",
    "keras.layers.ConvLSTM2D": "doc",
    "keras.layers.Cropping1D": "doc",
    "keras.layers.Cropping2D": "doc",
    "keras.layers.Cropping3D": "doc",
    "keras.layers.Concatenate": "doc",
    "keras.layers.Layer.losses": "doc",
    "keras.layers.MaxPooling1D": "doc",
    "keras.layers.MaxPooling2D": "doc",
    "keras.layers.MaxPooling3D": "doc",
    "keras.layers.AlphaDropout": "doc",
    "keras.layers.UpSampling1D": "doc",
    "keras.layers.UpSampling2D": "doc",
    "keras.layers.UpSampling3D": "doc",
    "keras.layers.Layer.weights": "doc",
    "keras.layers.Layer.dynamic": "doc",
    "keras.layers.GaussianNoise": "doc",
    "keras.layers.Layer.add_loss": "doc",
    "keras.layers.SeparableConv1D": "doc",
    "keras.layers.SeparableConv2D": "doc",
    "keras.layers.DepthwiseConv2D": "doc",
    "keras.layers.Conv2DTranspose": "doc",
    "keras.layers.Conv3DTranspose": "doc",
    "keras.layers.GaussianDropout": "doc",
    "keras.layers.ThresholdedReLU": "doc",
    "keras.layers.SpatialDropout1D": "doc",
    "keras.layers.SpatialDropout2D": "doc",
    "keras.layers.SpatialDropout3D": "doc",
    "keras.layers.AdditiveAttention": "doc",
    "keras.layers.GlobalMaxPooling1D": "doc",
    "keras.layers.GlobalMaxPooling2D": "doc",
    "keras.layers.GlobalMaxPooling3D": "doc",
    "keras.layers.BatchNormalization": "doc",
    "keras.layers.LayerNormalization": "doc",
    "keras.layers.LocallyConnected1D": "doc",
    "keras.layers.LocallyConnected2D": "doc",
    "keras.layers.GlobalAveragePooling1D": "doc",
    "keras.layers.GlobalAveragePooling2D": "doc",
    "keras.layers.GlobalAveragePooling3D": "doc",
    "keras.layers.ActivityRegularization": "doc",
    "keras.layers.Layer.non_trainable_weights": "doc",
    "keras.Model.get_layer": "doc",
    "keras.Model.get_config": "doc",
    "keras.Model.set_weights": "doc",
    "keras.regularizers.l1": "doc",
    "keras.regularizers.l2": "doc",
    "keras.initializers.Ones": "doc",
    "keras.Model.save_weights": "doc",
    "keras.initializers.Zeros": "doc",
    "keras.regularizers.l1_l2": "doc",
    "keras.initializers.Identity": "doc",
    "keras.initializers.Constant": "doc",
    "keras.initializers.Orthogonal": "doc",
    "keras.initializers.RandomNormal": "doc",
    "keras.initializers.GlorotNormal": "doc",
    "keras.initializers.RandomUniform": "doc",
    "keras.initializers.GlorotUniform": "doc",
    "keras.initializers.TruncatedNormal": "doc",
    "keras.utils.Sequence": "doc",
    "keras.utils.get_file": "doc",
    "keras.utils.plot_model": "doc",
    "keras.Model.run_eagerly": "doc",
    "keras.Model.get_weights": "doc",
    "keras.Model.from_config": "doc",
    "keras.Model.train_on_batch": "doc",
    "keras.utils.to_categorical": "doc",
    "keras.models.model_from_config": "doc",
    "keras.constraints.RadialConstraint": "doc",
    "keras.utils.serialize_keras_object": "doc",
    "keras.utils.deserialize_keras_object": "doc",
    "keras.Sequential": "doc",
    "keras.Sequential.pop": "doc",
    "keras.utils.register_keras_serializable": "doc",
    "keras.Model.summary": "doc",
    "keras.Model.to_json": "doc",
    "keras.utils.normalize": "doc",
    "keras.utils.model_to_dot": "doc",
    "keras.Model.test_on_batch": "doc",
    "keras.Model.predict_on_batch": "doc",
    "keras.models.model_from_json": "doc",
    "keras.Model.load_weights": "doc",
    "keras.Model": "doc",
    "keras.Model.fit": "doc",
    "keras.Model.compile": "doc",
    "keras.Model.predict": "doc",
    "keras.Model.evaluate": "doc",
    "keras.constraints.NonNeg": "doc",
    "keras.constraints.MaxNorm": "doc",
    "keras.constraints.UnitNorm": "doc",
    "keras.constraints.MinMaxNorm": "doc",
    "keras.Input": "doc",
    "keras.utils.Progbar": "doc",
    "keras.utils.custom_object_scope": "doc"
  },
  "sklearn.cross_validation.KFold": {
    "sklearn.model_selection.KFold": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.GroupKFold": "doc",
    "sklearn.utils.validation.check_memory": "doc",
    "sklearn.utils.validation.column_or_1d": "doc"
  },
  "sklearn.cross_validation.LeaveOneOut": {
    "sklearn.model_selection.LeaveOneOut": "doc",
    "sklearn.model_selection.LeavePOut": "doc",
    "sklearn.model_selection.LeaveOneGroupOut": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.LeavePGroupsOut": "doc"
  },
  "sklearn.cross_validation.ShuffleSplit": {
    "sklearn.model_selection.ShuffleSplit": "doc",
    "sklearn.model_selection.GroupShuffleSplit": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.StratifiedShuffleSplit": "doc",
    "sklearn.model_selection.PredefinedSplit": "doc"
  },
  "sklearn.cross_validation.StratifiedKFold": {
    "sklearn.model_selection.StratifiedKFold": "doc",
    "sklearn.model_selection.RepeatedStratifiedKFold": "doc",
    "sklearn.model_selection.RepeatedKFold": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.StratifiedShuffleSplit": "doc"
  },
  "sklearn.cross_validation.StratifiedShuffleSplit": {
    "sklearn.model_selection.StratifiedShuffleSplit": "doc",
    "sklearn.model_selection.GroupShuffleSplit": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.ShuffleSplit": "doc",
    "sklearn.model_selection.StratifiedKFold": "doc"
  },
  "sklearn.decomposition.RandomizedPCA": {
    "sklearn.decomposition.KernelPCA": "doc",
    "sklearn.decomposition.SparsePCA": "doc",
    "sklearn.decomposition.IncrementalPCA": "doc",
    "sklearn.decomposition.PCA": "doc",
    "sklearn.decomposition.FastICA": "doc"
  },
  "sklearn.grid_search.GridSearchCV": {
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.model_selection.RandomizedSearchCV": "doc",
    "sklearn.feature_extraction.image.grid_to_graph": "doc",
    "sklearn.cluster.Birch": "doc",
    "sklearn.svm.LinearSVC": "doc"
  },
  "sklearn.grid_search.RandomizedSearchCV": {
    "sklearn.model_selection.RandomizedSearchCV": "doc",
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.utils.extmath.randomized_svd": "doc",
    "sklearn.utils.extmath.randomized_range_finder": "doc",
    "sklearn.feature_extraction.image.grid_to_graph": "doc"
  },
  "sklearn.mixture.GMM": {
    "sklearn.mixture.GaussianMixture": "doc",
    "sklearn.mixture.BayesianGaussianMixture": "doc",
    "sklearn.decomposition.NMF": "doc",
    "sklearn.impute.KNNImputer": "doc",
    "sklearn.impute.SimpleImputer": "doc"
  },
  "sklearn.cross_validation.cross_val_predict": {
    "sklearn.model_selection.cross_val_predict": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.cross_val_score": "doc",
    "sklearn.cross_decomposition.CCA": "doc",
    "sklearn.cross_decomposition.PLSSVD": "doc"
  },
  "sklearn.cross_validation.cross_val_score": {
    "sklearn.model_selection.cross_val_score": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.cross_val_predict": "doc",
    "sklearn.cross_decomposition.CCA": "doc",
    "sklearn.cross_decomposition.PLSSVD": "doc"
  },
  "sklearn.cross_validation.train_test_split": {
    "sklearn.model_selection.train_test_split": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.permutation_test_score": "doc",
    "sklearn.model_selection.cross_val_predict": "doc",
    "sklearn.model_selection.cross_val_score": "doc"
  },
  "sklearn.lda.LDA": {
    "sklearn.manifold.MDS": "doc",
    "sklearn.decomposition.PCA": "doc",
    "sklearn.cross_decomposition.CCA": "doc",
    "sklearn.linear_model.Lars": "doc",
    "sklearn.linear_model.Lasso": "doc"
  },
  "sklearn.qda.QDA": {
    "sklearn.manifold.MDS": "doc",
    "sklearn.decomposition.PCA": "doc",
    "sklearn.cross_decomposition.CCA": "doc",
    "sklearn.cluster.DBSCAN": "doc",
    "sklearn.neighbors.KDTree": "doc"
  },
  "sklearn.learning_curve": {
    "sklearn.model_selection.learning_curve": "doc",
    "sklearn.calibration.calibration_curve": "doc",
    "sklearn.metrics.roc_curve": "doc",
    "sklearn.datasets.make_s_curve": "doc",
    "sklearn.model_selection.validation_curve": "doc"
  },
  "pandas.tseries.converter.register": {
    "pandas.tseries.offsets.Easter": "doc",
    "pandas.tseries.offsets.Easter.kwds": "doc",
    "pandas.tseries.offsets.Easter.name": "doc",
    "pandas.tseries.offsets.Easter.copy": "doc",
    "pandas.tseries.offsets.Day.freqstr": "doc"
  },
  "numpy.ma.dump": {
    "numpy.ma.all": "doc",
    "numpy.ma.any": "doc",
    "numpy.ma.mr_": "doc",
    "numpy.ma.cov": "doc",
    "numpy.ma.std": "doc"
  },
  "numpy.ma.load": {
    "numpy.ma.round": "doc",
    "numpy.ma.MaskedArray.round": "doc",
    "numpy.ma.filled": "doc",
    "numpy.ma.around": "doc",
    "numpy.ma.MaskedArray.filled": "doc"
  },
  "numpy.core.numeric.load": {
    "numpy.core.records.array": "doc",
    "numpy.core.records.fromfile": "doc",
    "numpy.core.records.fromarrays": "doc",
    "numpy.core.records.fromstring": "doc",
    "numpy.core.records.fromrecords": "doc"
  },
  "numpy.testing.rand": {
    "numpy.testing.rundocs": "doc",
    "numpy.testing.dec.deprecated": "doc",
    "numpy.testing.assert_warns": "doc",
    "numpy.testing.decorate_methods": "doc",
    "numpy.testing.run_module_suite": "doc"
  },
  "numpy.lib.function_base.unique": {
    "numpy.unique": "doc",
    "numpy.lib.format": "doc",
    "numpy.lib.mixins.NDArrayOperatorsMixin": "doc",
    "numpy.lib.Arrayterator": "doc",
    "numpy.lib.NumpyVersion": "doc"
  },
  "seaborn.corrplot": {
    "seaborn.countplot": "doc",
    "seaborn.catplot": "doc",
    "seaborn.boxplot": "doc",
    "seaborn.barplot": "doc",
    "seaborn.pairplot": "doc"
  },
  "seaborn.symmatplot": {
    "seaborn.catplot": "doc",
    "seaborn.lmplot": "doc",
    "seaborn.barplot": "doc",
    "seaborn.distplot": "doc",
    "seaborn.stripplot": "doc"
  },
  "seaborn.set_color_palette": {
    "seaborn.color_palette": "doc",
    "seaborn.set_palette": "doc",
    "seaborn.set_color_codes": "doc",
    "seaborn.choose_colorbrewer_palette": "doc",
    "seaborn.hls_palette": "doc"
  },
  "seaborn.offset_spines": {
    "seaborn.despine": "doc",
    "seaborn.set_style": "doc",
    "seaborn.set_theme": "doc",
    "seaborn.reset_orig": "doc",
    "seaborn.axes_style": "doc"
  },
  "seaborn.violin": {
    "seaborn.violinplot": "doc",
    "seaborn.JointGrid.plot_joint": "doc",
    "seaborn.despine": "doc",
    "seaborn.lineplot": "doc",
    "seaborn.distplot": "doc"
  },
  "scipy.stats.fastsort": {
    "scipy.stats.kstwo": "doc",
    "scipy.stats.kstat": "doc",
    "scipy.stats.kstest": "doc",
    "scipy.stats.ansari": "doc",
    "scipy.stats.zscore": "doc"
  },
  "scipy.stats.histogram2": {
    "scipy.stats.rv_histogram": "doc",
    "scipy.stats.mstats.ttest_onesamp": "doc",
    "scipy.stats.ttest_1samp": "doc",
    "scipy.stats.mstats.ttest_1samp": "doc",
    "scipy.stats.mstats.argstoarray": "doc"
  },
  "scipy.stats.oneway": {
    "scipy.stats.f_oneway": "doc",
    "scipy.stats.mstats.f_oneway": "doc",
    "scipy.stats.powerlaw": "doc",
    "scipy.stats.contingency.margins": "doc",
    "scipy.stats.contingency.expected_freq": "doc"
  },
  "scipy.stats.glm": {
    "scipy.stats.geom": "doc",
    "scipy.stats.gamma": "doc",
    "scipy.stats.sem": "doc",
    "scipy.stats.anglit": "doc",
    "scipy.stats.dgamma": "doc"
  },
  "scipy.stats.cmedian": {
    "scipy.stats.mstats.hdmedian": "doc",
    "scipy.stats.gmean": "doc",
    "scipy.stats.hmean": "doc",
    "scipy.stats.tmean": "doc",
    "scipy.stats.mstats.gmean": "doc"
  },
  "imblearn.ensemble.EasyEnsemble": {
    "imblearn.ensemble": "doc",
    "imblearn.ensemble.RUSBoostClassifier": "doc",
    "imblearn.ensemble.EasyEnsembleClassifier": "doc",
    "imblearn.ensemble.BalancedBaggingClassifier": "doc",
    "imblearn.ensemble.BalancedRandomForestClassifier": "doc"
  },
  "sklearn.covariance.EllipticEnvelop": {
    "sklearn.covariance.EllipticEnvelope": "doc",
    "sklearn.covariance.EmpiricalCovariance": "doc",
    "sklearn.covariance.OAS": "doc",
    "sklearn.covariance.oas": "doc",
    "sklearn.covariance.MinCovDet": "doc"
  },
  "sklearn.neighbors.NeighborsRegressor": {
    "sklearn.neighbors.KNeighborsRegressor": "doc",
    "sklearn.neighbors.RadiusNeighborsRegressor": "doc",
    "sklearn.neighbors.KNeighborsTransformer": "doc",
    "sklearn.neighbors.kneighbors_graph": "doc",
    "sklearn.neighbors.KNeighborsClassifier": "doc"
  },
  "sklearn.neighbors.NeighborsClassifier": {
    "sklearn.neighbors.KNeighborsClassifier": "doc",
    "sklearn.neighbors.RadiusNeighborsClassifier": "doc",
    "sklearn.neighbors.KNeighborsTransformer": "doc",
    "sklearn.neighbors.RadiusNeighborsTransformer": "doc",
    "sklearn.neighbors.KNeighborsRegressor": "doc"
  },
  "sklearn.feature_extraction.text.Vectorizer": {
    "sklearn.feature_extraction.text.CountVectorizer": "doc",
    "sklearn.feature_extraction.text.TfidfVectorizer": "doc",
    "sklearn.feature_extraction.text.HashingVectorizer": "doc",
    "sklearn.feature_extraction.text.TfidfTransformer": "doc",
    "sklearn.feature_extraction.DictVectorizer": "doc"
  },
  "sklearn.metrics.mean_square_error": {
    "sklearn.metrics.mean_squared_error": "doc",
    "sklearn.metrics.mean_squared_log_error": "doc",
    "sklearn.metrics.mean_absolute_error": "doc",
    "sklearn.metrics.median_absolute_error": "doc",
    "sklearn.metrics.max_error": "doc"
  },
  "sklearn.metrics.zero_one_score": {
    "sklearn.metrics.zero_one_loss": "doc",
    "sklearn.metrics.roc_auc_score": "doc",
    "sklearn.metrics.precision_score": "doc",
    "sklearn.metrics.homogeneity_score": "doc",
    "sklearn.metrics.r2_score": "doc"
  },
  "sklearn.utils.Memory": {
    "sklearn.utils.validation.check_memory": "doc",
    "sklearn.utils.all_estimators": "doc",
    "sklearn.utils.extmath.density": "doc",
    "sklearn.utils.metaestimators.if_delegate_has_method": "doc",
    "sklearn.utils.check_array": "doc"
  },
  "sklearn.utils.Parallel": {
    "sklearn.utils.parallel_backend": "doc",
    "sklearn.utils.multiclass.is_multilabel": "doc",
    "sklearn.utils.register_parallel_backend": "doc",
    "sklearn.utils.extmath.fast_logdet": "doc",
    "sklearn.utils.shuffle": "doc"
  },
  "sklearn.utils.cpu_count": {
    "sklearn.utils.sparsefuncs.inplace_column_scale": "doc",
    "sklearn.utils.class_weight.compute_class_weight": "doc",
    "sklearn.utils.extmath.fast_logdet": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_row": "doc",
    "sklearn.utils.sparsefuncs.inplace_row_scale": "doc"
  },
  "sklearn.utils.delayed": {
    "sklearn.utils.deprecated": "doc",
    "sklearn.utils.indexable": "doc",
    "sklearn.utils.parallel_backend": "doc",
    "sklearn.utils.multiclass.unique_labels": "doc",
    "sklearn.utils.extmath.density": "doc"
  },
  "sklearn.metrics.calinski_harabaz_score": {
    "sklearn.metrics.calinski_harabasz_score": "doc",
    "sklearn.metrics.cohen_kappa_score": "doc",
    "sklearn.metrics.explained_variance_score": "doc",
    "sklearn.metrics.balanced_accuracy_score": "doc",
    "sklearn.metrics.adjusted_rand_score": "doc"
  },
  "sklearn.ensemble.partial_dependence.partial_dependence": {
    "sklearn.inspection.partial_dependence": "doc",
    "sklearn.inspection.plot_partial_dependence": "doc",
    "sklearn.inspection.PartialDependenceDisplay": "doc",
    "sklearn.ensemble.ExtraTreesRegressor": "doc",
    "sklearn.ensemble.RandomTreesEmbedding": "doc"
  },
  "sklearn.ensemble.partial_dependence.plot_partial_dependence": {
    "sklearn.inspection.partial_dependence": "doc",
    "sklearn.inspection.plot_partial_dependence": "doc",
    "sklearn.ensemble.ExtraTreesRegressor": "doc",
    "sklearn.ensemble.IsolationForest": "doc",
    "sklearn.ensemble.RandomTreesEmbedding": "doc"
  },
  "sklearn.covariance.GraphLasso": {
    "sklearn.covariance.GraphicalLasso": "doc",
    "sklearn.covariance.GraphicalLassoCV": "doc",
    "sklearn.covariance.graphical_lasso": "doc",
    "sklearn.covariance.oas": "doc",
    "sklearn.covariance.EmpiricalCovariance": "doc"
  },
  "sklearn.covariance.GraphLassoCV": {
    "sklearn.covariance.GraphicalLassoCV": "doc",
    "sklearn.covariance.GraphicalLasso": "doc",
    "sklearn.covariance.graphical_lasso": "doc",
    "sklearn.covariance.oas": "doc",
    "sklearn.covariance.EmpiricalCovariance": "doc"
  },
  "sklearn.covariance.graph_lasso": {
    "sklearn.covariance.graphical_lasso": "doc",
    "sklearn.covariance.GraphicalLasso": "doc",
    "sklearn.covariance.GraphicalLassoCV": "doc",
    "sklearn.covariance.oas": "doc",
    "sklearn.covariance.shrunk_covariance": "doc"
  },
  "sklearn.datasets.fetch_mldata": {
    "sklearn.datasets.fetch_rcv1": "doc",
    "sklearn.datasets.fetch_openml": "doc",
    "sklearn.datasets.fetch_kddcup99": "doc",
    "sklearn.datasets.fetch_lfw_pairs": "doc",
    "sklearn.datasets.fetch_covtype": "doc"
  },
  "sklearn.datasets.mldata_filename": {
    "sklearn.datasets.load_files": "doc",
    "sklearn.datasets.load_wine": "doc",
    "sklearn.datasets.load_sample_image": "doc",
    "sklearn.datasets.load_iris": "doc",
    "sklearn.datasets.fetch_rcv1": "doc"
  },
  "sklearn.linear_model.lars_path": {
    "sklearn.linear_model.lars_path": "doc",
    "sklearn.linear_model.lasso_path": "doc",
    "sklearn.linear_model.lars_path_gram": "doc",
    "sklearn.linear_model.enet_path": "doc",
    "sklearn.linear_model.Lars": "doc"
  },
  "sklearn.cross_validation.LabelKFold": {
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.RepeatedKFold": "doc",
    "sklearn.model_selection.KFold": "doc",
    "sklearn.model_selection.GroupKFold": "doc",
    "sklearn.model_selection.StratifiedKFold": "doc"
  },
  "sklearn.cross_validation.LeaveOneLabelOut": {
    "sklearn.model_selection.LeaveOneOut": "doc",
    "sklearn.model_selection.LeaveOneGroupOut": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.LeavePOut": "doc",
    "sklearn.model_selection.LeavePGroupsOut": "doc"
  },
  "sklearn.cross_validation.LeavePOut": {
    "sklearn.model_selection.LeavePOut": "doc",
    "sklearn.model_selection.LeaveOneOut": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.LeavePGroupsOut": "doc",
    "sklearn.model_selection.LeaveOneGroupOut": "doc"
  },
  "sklearn.cross_validation.LeavePLabelOut": {
    "sklearn.model_selection.LeavePOut": "doc",
    "sklearn.model_selection.LeaveOneOut": "doc",
    "sklearn.model_selection.LeavePGroupsOut": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.LeaveOneGroupOut": "doc"
  },
  "sklearn.cross_validation.LabelShuffleSplit": {
    "sklearn.model_selection.ShuffleSplit": "doc",
    "sklearn.model_selection.GroupShuffleSplit": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.StratifiedShuffleSplit": "doc",
    "sklearn.model_selection.cross_val_predict": "doc"
  },
  "sklearn.cross_validation.PredefinedSplit": {
    "sklearn.model_selection.PredefinedSplit": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.TimeSeriesSplit": "doc",
    "sklearn.model_selection.ShuffleSplit": "doc",
    "sklearn.model_selection.cross_val_predict": "doc"
  },
  "sklearn.gaussian_process.GaussianProcess": {
    "sklearn.gaussian_process.kernels.RBF": "doc",
    "sklearn.gaussian_process.kernels.Sum": "doc",
    "sklearn.gaussian_process.kernels.Kernel": "doc",
    "sklearn.gaussian_process.kernels.Matern": "doc",
    "sklearn.gaussian_process.kernels.Product": "doc"
  },
  "sklearn.grid_search.ParameterGrid": {
    "sklearn.model_selection.ParameterGrid": "doc",
    "sklearn.model_selection.ParameterSampler": "doc",
    "sklearn.feature_extraction.image.grid_to_graph": "doc",
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.metrics.pairwise.paired_distances": "doc"
  },
  "sklearn.grid_search.ParameterSampler": {
    "sklearn.model_selection.ParameterSampler": "doc",
    "sklearn.model_selection.ParameterGrid": "doc",
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.feature_extraction.image.grid_to_graph": "doc",
    "sklearn.metrics.silhouette_samples": "doc"
  },
  "sklearn.cross_validation.check_cv": {
    "sklearn.model_selection.check_cv": "doc",
    "sklearn.utils.validation.check_memory": "doc",
    "sklearn.utils.validation.check_is_fitted": "doc",
    "sklearn.utils.validation.check_symmetric": "doc",
    "sklearn.model_selection.cross_validate": "doc"
  },
  "sklearn.cross_validation.permutation_test_score": {
    "sklearn.model_selection.permutation_test_score": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.cross_val_score": "doc",
    "sklearn.inspection.permutation_importance": "doc",
    "sklearn.model_selection.train_test_split": "doc"
  },
  "sklearn.grid_search.fit_grid_point": {
    "sklearn.feature_extraction.image.grid_to_graph": "doc",
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.decomposition.dict_learning_online": "doc",
    "sklearn.datasets.fetch_california_housing": "doc",
    "sklearn.metrics.pairwise.sigmoid_kernel": "doc"
  },
  "sklearn.model_selection.GridSearchCV.grid_scores_": {
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.model_selection.RandomizedSearchCV": "doc",
    "sklearn.model_selection.cross_val_score": "doc",
    "sklearn.model_selection.permutation_test_score": "doc",
    "sklearn.model_selection.train_test_split": "doc"
  },
  "sklearn.model_selection.RandomizedSearchCV.grid_scores_": {
    "sklearn.model_selection.RandomizedSearchCV": "doc",
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.model_selection.cross_val_score": "doc",
    "sklearn.model_selection.permutation_test_score": "doc",
    "sklearn.model_selection.train_test_split": "doc"
  },
  "pandas.api.types.is_extension_type": {
    "pandas.api.types.is_extension_type": "doc",
    "pandas.api.types.is_extension_array_dtype": "doc",
    "pandas.api.types.is_period_dtype": "doc",
    "pandas.api.types.is_categorical_dtype": "doc",
    "pandas.api.types.is_string_dtype": "doc"
  },
  "pandas.tseries.offsets.DateOffset.isAnchored": {
    "pandas.tseries.offsets.DateOffset.isAnchored": "doc",
    "pandas.tseries.offsets.DateOffset.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterOffset.isAnchored": "doc",
    "pandas.tseries.offsets.MonthOffset.isAnchored": "doc",
    "pandas.tseries.offsets.YearOffset.isAnchored": "doc"
  },
  "pandas.tseries.offsets.DatetOffset.onOffset": {
    "pandas.tseries.offsets.DateOffset.onOffset": "doc",
    "pandas.tseries.offsets.QuarterOffset.onOffset": "doc",
    "pandas.tseries.offsets.YearOffset.onOffset": "doc",
    "pandas.tseries.offsets.Day.onOffset": "doc",
    "pandas.tseries.offsets.Week.onOffset": "doc"
  },
  "pandas.tseries.frequencies.get_offset": {
    "pandas.tseries.offsets.CBMonthEnd.m_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.m_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset": "doc",
    "pandas.tseries.offsets.DateOffset": "doc"
  },
  "pandas.Categorical.take_nd": {
    "pandas.Categorical.ordered": "doc",
    "pandas.Categorical.from_codes": "doc",
    "pandas.Categorical.categories": "doc",
    "pandas.Categorical": "doc",
    "pandas.Categorical.dtype": "doc"
  },
  "pandas.CategoricalIndex.take_nd": {
    "pandas.CategoricalIndex.ordered": "doc",
    "pandas.CategoricalIndex": "doc",
    "pandas.CategoricalIndex.map": "doc",
    "pandas.CategoricalIndex.codes": "doc",
    "pandas.CategoricalIndex.equals": "doc"
  },
  "pandas.io.json.json_normalize": {
    "pandas.io.json.build_table_schema": "doc",
    "pandas.io.formats.style.Styler.from_custom_template": "doc",
    "pandas.io.formats.style.Styler": "doc",
    "pandas.io.formats.style.Styler.env": "doc",
    "pandas.io.formats.style.Styler.bar": "doc"
  },
  "pandas.util.testing": {
    "pandas.util.hash_array": "doc",
    "pandas.util.hash_pandas_object": "doc",
    "pandas.testing.assert_frame_equal": "doc",
    "pandas.testing.assert_index_equal": "doc",
    "pandas.testing.assert_series_equal": "doc"
  },
  "pandas.SparseArray": {
    "pandas.arrays.SparseArray": "doc",
    "pandas.SparseDtype": "doc",
    "pandas.arrays.StringArray": "doc",
    "pandas.arrays.IntegerArray": "doc",
    "pandas.arrays.DatetimeArray": "doc"
  },
  "pandas.np": {
    "pandas.Series.ne": "doc",
    "pandas.DataFrame.ne": "doc",
    "pandas.DatetimeIndex.snap": "doc",
    "pandas.Index.any": "doc",
    "pandas.Index.map": "doc"
  },
  "pandas.datetime": {
    "pandas.Series.at_time": "doc",
    "pandas.DataFrame.at_time": "doc",
    "pandas.to_datetime": "doc",
    "pandas.Series.dt.to_pydatetime": "doc",
    "pandas.Timestamp.to_datetime64": "doc"
  },
  "pandas.io.stata.StataReader.data": {
    "pandas.io.stata.StataReader.data_label": "doc",
    "pandas.io.stata.StataReader.value_labels": "doc",
    "pandas.io.stata.StataReader.variable_labels": "doc",
    "pandas.io.stata.StataWriter.write_file": "doc",
    "pandas.io.formats.style.Styler": "doc"
  },
  "pandas.plotting._matplotlib.tsplot": {
    "pandas.plotting.boxplot": "doc",
    "pandas.plotting.lag_plot": "doc",
    "pandas.plotting.bootstrap_plot": "doc",
    "pandas.plotting.table": "doc",
    "pandas.plotting.register_matplotlib_converters": "doc"
  },
  "pandas.api.extensions.ExtensionArray._formatting_values": {
    "pandas.api.extensions.ExtensionArray": "doc",
    "pandas.api.extensions.ExtensionDtype": "doc",
    "pandas.api.extensions.register_index_accessor": "doc",
    "pandas.api.extensions.register_extension_dtype": "doc",
    "pandas.api.extensions.register_series_accessor": "doc"
  },
  "pandas.MultiIndex.labels": {
    "pandas.MultiIndex.levels": "doc",
    "pandas.MultiIndex.nlevels": "doc",
    "pandas.MultiIndex.names": "doc",
    "pandas.MultiIndex.set_levels": "doc",
    "pandas.MultiIndex": "doc"
  },
  "pandas.MultiIndex.set_labels": {
    "pandas.MultiIndex.set_levels": "doc",
    "pandas.MultiIndex.set_codes": "doc",
    "pandas.MultiIndex.get_locs": "doc",
    "pandas.MultiIndex.get_level_values": "doc",
    "pandas.MultiIndex.reorder_levels": "doc"
  },
  "pandas.IntervalIndex.from_intervals": {
    "pandas.IntervalIndex.from_arrays": "doc",
    "pandas.IntervalIndex.from_breaks": "doc",
    "pandas.IntervalIndex.from_tuples": "doc",
    "pandas.IntervalIndex.overlaps": "doc",
    "pandas.IntervalIndex.contains": "doc"
  },
  "pandas.Timedelta.resolution_string": {
    "pandas.Timedelta.resolution": "doc",
    "pandas.Timedelta.round": "doc",
    "pandas.Timedelta.seconds": "doc",
    "pandas.Timedelta.isoformat": "doc",
    "pandas.Timedelta.components": "doc"
  },
  "pandas.SparseSeries": {
    "pandas.SparseDtype": "doc",
    "pandas.arrays.SparseArray": "doc",
    "pandas.Series": "doc",
    "pandas.Series.T": "doc",
    "pandas.Series.at": "doc"
  },
  "pandas.SparseDataFrame": {
    "pandas.DataFrame": "doc",
    "pandas.DataFrame.T": "doc",
    "pandas.SparseDtype": "doc",
    "pandas.DataFrame.at": "doc",
    "pandas.DataFrame.xs": "doc"
  },
  "pandas.Series.ptp": {
    "pandas.Series.pop": "doc",
    "pandas.Series.pipe": "doc",
    "pandas.Series.dtype": "doc",
    "pandas.Series.empty": "doc",
    "pandas.Series.str.strip": "doc"
  },
  "numpy.rank": {
    "numpy.rand": "doc",
    "numpy.randn": "doc",
    "numpy.any": "doc",
    "numpy.tan": "doc",
    "numpy.rate": "doc"
  },
  "numpy.loads": {
    "numpy.load": "doc",
    "numpy.loadtxt": "doc",
    "numpy.logaddexp": "doc",
    "numpy.linalg.slogdet": "doc",
    "numpy.core.records.array": "doc"
  },
  "numpy.ma.dumps": {
    "numpy.ma.all": "doc",
    "numpy.ma.any": "doc",
    "numpy.ma.mr_": "doc",
    "numpy.ma.cov": "doc",
    "numpy.ma.std": "doc"
  },
  "numpy.ma.loads": {
    "numpy.ma.ones": "doc",
    "numpy.ma.anomalies": "doc",
    "numpy.ma.MaskedArray.tolist": "doc",
    "numpy.ma.MaskedArray.torecords": "doc",
    "numpy.ma.atleast_1d": "doc"
  },
  "numpy.core.numeric.loads": {
    "numpy.core.records.array": "doc",
    "numpy.core.records.fromfile": "doc",
    "numpy.core.records.fromarrays": "doc",
    "numpy.core.records.fromstring": "doc",
    "numpy.core.records.fromrecords": "doc"
  },
  "numpy.SafeEval": {
    "numpy.ma.masked_all": "doc",
    "numpy.ma.masked_values": "doc",
    "numpy.real": "doc",
    "numpy.ravel": "doc",
    "numpy.equal": "doc"
  },
  "numpy.core.typeNA": {
    "numpy.core.records.array": "doc",
    "numpy.core.records.fromfile": "doc",
    "numpy.core.records.fromarrays": "doc",
    "numpy.core.records.fromstring": "doc",
    "numpy.core.defchararray.array": "doc"
  },
  "numpy.core.sctypeNA": {
    "numpy.core.records.array": "doc",
    "numpy.core.records.fromfile": "doc",
    "numpy.core.records.fromarrays": "doc",
    "numpy.core.records.fromstring": "doc",
    "numpy.core.defchararray.array": "doc"
  },
  "numpy.ma.minimum": {
    "numpy.ma.min": "doc",
    "numpy.ma.MaskedArray.min": "doc",
    "numpy.ma.all": "doc",
    "numpy.ma.any": "doc",
    "numpy.ma.mr_": "doc"
  },
  "numpy.ma.maximum": {
    "numpy.ma.max": "doc",
    "numpy.ma.MaskedArray.max": "doc",
    "numpy.ma.maximum_fill_value": "doc",
    "numpy.ma.make_mask": "doc",
    "numpy.ma.all": "doc"
  },
  "seaborn.linearmodels": {
    "seaborn.lineplot": "doc",
    "seaborn.JointGrid.plot_marginals": "doc",
    "seaborn.set_color_codes": "doc",
    "seaborn.set": "doc",
    "seaborn.lmplot": "doc"
  },
  "scipy.signal.windows.slepian": {
    "scipy.signal.get_window": "doc",
    "scipy.signal.findfreqs": "doc",
    "scipy.signal.invres": "doc",
    "scipy.signal.find_peaks": "doc",
    "scipy.signal.step": "doc"
  },
  "scipy.signal": {
    "scipy.signal.lti": "doc",
    "scipy.signal.qmf": "doc",
    "scipy.signal.cwt": "doc",
    "scipy.signal.csd": "doc",
    "scipy.signal.lsim": "doc"
  },
  "scipy.spatial.distance.matching": {
    "scipy.spatial.distance_matrix": "doc",
    "scipy.spatial.Rectangle": "doc",
    "scipy.spatial.minkowski_distance": "doc",
    "scipy.spatial.minkowski_distance_p": "doc",
    "scipy.spatial.tsearch": "doc"
  },
  "scipy.special.sph_jn": {
    "scipy.special.sph_harm": "doc",
    "scipy.special.spherical_jn": "doc",
    "scipy.special.spherical_yn": "doc",
    "scipy.special.spherical_in": "doc",
    "scipy.special.spherical_kn": "doc"
  },
  "scipy.special.sph_yn": {
    "scipy.special.sph_harm": "doc",
    "scipy.special.spherical_yn": "doc",
    "scipy.special.spherical_jn": "doc",
    "scipy.special.spherical_in": "doc",
    "scipy.special.spherical_kn": "doc"
  },
  "scipy.special.sph_in": {
    "scipy.special.sph_harm": "doc",
    "scipy.special.spherical_in": "doc",
    "scipy.special.jv": "doc",
    "scipy.special.yn": "doc",
    "scipy.special.yv": "doc"
  },
  "scipy.special.sph_kn": {
    "scipy.special.sph_harm": "doc",
    "scipy.special.spherical_kn": "doc",
    "scipy.special.spherical_jn": "doc",
    "scipy.special.spherical_yn": "doc",
    "scipy.special.spherical_in": "doc"
  },
  "scipy.special.errprint": {
    "scipy.special.expit": "doc",
    "scipy.special.erfinv": "doc",
    "scipy.special.erfcinv": "doc",
    "scipy.special.ellipkinc": "doc",
    "scipy.special.ellipeinc": "doc"
  },
  "scipy.stats.pdf_fromgamma": {
    "scipy.stats.dgamma": "doc",
    "scipy.stats.loggamma": "doc",
    "scipy.stats.gamma": "doc",
    "scipy.stats.gengamma": "doc",
    "scipy.stats.invgamma": "doc"
  },
  "scipy.lib.blas": {
    "scipy.linalg.polar": "doc",
    "scipy.stats.anglit": "doc",
    "scipy.sparse.bmat": "doc",
    "scipy.stats.gilbrat": "doc",
    "scipy.stats.fligner": "doc"
  },
  "scipy.lib.lapack": {
    "scipy.stats.laplace": "doc",
    "scipy.ndimage.laplace": "doc",
    "scipy.stats.dlaplace": "doc",
    "scipy.sparse.csgraph.laplacian": "doc",
    "scipy.signal.lp2bp": "doc"
  },
  "scipy.linalg.cblas": {
    "scipy.linalg.polar": "doc",
    "scipy.sparse.linalg.cgs": "doc",
    "scipy.linalg.cholesky": "doc",
    "scipy.linalg.circulant": "doc",
    "scipy.linalg.eigvals": "doc"
  },
  "scipy.linalg.fblas": {
    "scipy.linalg.polar": "doc",
    "scipy.linalg.eigvals": "doc",
    "scipy.linalg.svdvals": "doc",
    "scipy.linalg.fiedler": "doc",
    "scipy.linalg.get_blas_funcs": "doc"
  },
  "scipy.linalg.clapack": {
    "scipy.linalg.null_space": "doc",
    "scipy.linalg.get_lapack_funcs": "doc",
    "scipy.linalg.companion": "doc",
    "scipy.linalg.invpascal": "doc",
    "scipy.linalg.cho_factor": "doc"
  },
  "scipy.linalg.flapack": {
    "scipy.linalg.null_space": "doc",
    "scipy.linalg.get_lapack_funcs": "doc",
    "scipy.linalg.invpascal": "doc",
    "scipy.linalg.lu": "doc",
    "scipy.linalg.qr": "doc"
  },
  "scipy.optimize.anneal": {
    "scipy.optimize.dual_annealing": "doc",
    "scipy.optimize.nnls": "doc",
    "scipy.optimize.lsq_linear": "doc",
    "scipy.optimize.line_search": "doc",
    "scipy.optimize.minimize_scalar": "doc"
  },
  "scipy.linalg.expm2": {
    "scipy.linalg.expm": "doc",
    "scipy.sparse.linalg.expm": "doc",
    "scipy.linalg.expm_cond": "doc",
    "scipy.linalg.expm_frechet": "doc",
    "scipy.sparse.linalg.expm_multiply": "doc"
  },
  "scipy.linalg.expm3": {
    "scipy.linalg.expm": "doc",
    "scipy.sparse.linalg.expm": "doc",
    "scipy.linalg.expm_cond": "doc",
    "scipy.linalg.expm_frechet": "doc",
    "scipy.sparse.linalg.expm_multiply": "doc"
  },
  "scipy.sparse.cs_graph_components": {
    "scipy.sparse.csgraph.connected_components": "doc",
    "scipy.sparse.csgraph.csgraph_to_dense": "doc",
    "scipy.sparse.csgraph.csgraph_from_dense": "doc",
    "scipy.sparse.csgraph.csgraph_to_masked": "doc",
    "scipy.sparse.csgraph.csgraph_from_masked": "doc"
  },
  "scipy.io.save_as_module": {
    "scipy.io.savemat": "doc",
    "scipy.io.read": "doc",
    "scipy.io.mmread": "doc",
    "scipy.io.readsav": "doc",
    "scipy.io.FortranFile": "doc"
  },
  "scipy.optimize.broyden_generalized": {
    "scipy.optimize.rosen_der": "doc",
    "scipy.optimize.rosen_hess_prod": "doc",
    "scipy.optimize.rosen_hess": "doc",
    "scipy.optimize.dual_annealing": "doc",
    "scipy.optimize.check_grad": "doc"
  },
  "scipy.optimize.broyden3": {
    "scipy.optimize.rosen": "doc",
    "scipy.optimize.brute": "doc",
    "scipy.optimize.brentq": "doc",
    "scipy.optimize.brenth": "doc",
    "scipy.optimize.ridder": "doc"
  },
  "scipy.optimize.vackar": {
    "scipy.optimize.bracket": "doc",
    "scipy.optimize.check_grad": "doc",
    "scipy.optimize.root_scalar": "doc",
    "scipy.optimize.least_squares": "doc",
    "scipy.optimize.lsq_linear": "doc"
  },
  "scipy.sparse.spkron": {
    "scipy.sparse.kron": "doc",
    "scipy.sparse.eye": "doc",
    "scipy.sparse.tril": "doc",
    "scipy.sparse.triu": "doc",
    "scipy.sparse.bmat": "doc"
  },
  "scipy.sparse.speye": {
    "scipy.sparse.eye": "doc",
    "scipy.sparse.kron": "doc",
    "scipy.sparse.tril": "doc",
    "scipy.sparse.triu": "doc",
    "scipy.sparse.bmat": "doc"
  },
  "scipy.sparse.spidentity": {
    "scipy.sparse.identity": "doc",
    "scipy.sparse.linalg.expm_multiply": "doc",
    "scipy.sparse.csgraph.shortest_path": "doc",
    "scipy.sparse.eye": "doc",
    "scipy.sparse.kron": "doc"
  },
  "plotly.api": {
    "plotly.express.pie": "doc",
    "plotly.graph_objects.pie": "doc",
    "plotly.graph_objects.Carpet": "doc",
    "plotly.graph_objects.carpet": "doc",
    "plotly.express.area": "doc"
  },
  "plotly.dashboard_objs": {
    "plotly.graph_objects.Parcoords": "doc",
    "plotly.graph_objects.parcoords": "doc",
    "plotly.express.bar_polar": "doc",
    "plotly.graph_objects.barpolar": "doc",
    "plotly.subplots.make_subplots": "doc"
  },
  "plotly.grid_objs": {
    "plotly.graph_objects.Bar": "doc",
    "plotly.graph_objects.bar": "doc",
    "plotly.graph_objects.Pie": "doc",
    "plotly.graph_objects.pie": "doc",
    "plotly.graph_objects.Box": "doc"
  },
  "plotly.presentation_objs": {
    "plotly.figure_factory.create_ohlc": "doc",
    "plotly.figure_factory.create_ternary_contour": "doc",
    "plotly.figure_factory.create_hexbin_mapbox": "doc",
    "plotly.express.density_contour": "doc",
    "plotly.graph_objects.parcoords": "doc"
  },
  "plotly.widgets.GraphWidget": {
    "plotly.graph_objects.Pie": "doc",
    "plotly.graph_objects.pie": "doc",
    "plotly.graph_objects.Image": "doc",
    "plotly.graph_objects.image": "doc",
    "plotly.graph_objects.Figure": "doc"
  },
  "plotly.tools.make_subplots": {
    "plotly.subplots.make_subplots": "doc",
    "plotly.figure_factory.create_distplot": "doc",
    "plotly.express.colors": "doc",
    "plotly.graph_objects.ohlc": "doc",
    "plotly.graph_objects.table": "doc"
  },
  "plotly.graph_objs": {
    "plotly.graph_objects.Bar": "doc",
    "plotly.graph_objects.bar": "doc",
    "plotly.graph_objects.Pie": "doc",
    "plotly.graph_objects.pie": "doc",
    "plotly.graph_objects.Box": "doc"
  },
  "tensorflow.config.experimentalVirtualDeviceConfiguration": {
    "tensorflow.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.compat.v1.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.config.experimental.get_virtual_device_configuration": "doc"
  },
  "tensorflow.config.experimental_list_devices": {
    "tensorflow.config.experimental_connect_to_host": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_host": "doc",
    "tensorflow.config.experimental_connect_to_cluster": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_cluster": "doc",
    "tensorflow.config.experimental": "doc"
  },
  "tensorflow.keras.experimental.export_saved_model": {
    "tensorflow.compat.v1.keras.experimental.export_saved_model": "doc",
    "tensorflow.compat.v1.keras.experimental.load_from_saved_model": "doc",
    "tensorflow.keras.experimental": "doc",
    "tensorflow.keras.layers.experimental": "doc",
    "tensorflow.keras.callbacks.experimental": "doc"
  },
  "tensorflow.keras.experimental.function": {
    "tensorflow.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Normalization": "doc"
  },
  "tensorflow.estimator.inputs": {
    "tensorflow.compat.v1.estimator.inputs": "doc",
    "tensorflow.compat.v1.estimator.inputs.numpy_input_fn": "doc",
    "tensorflow.compat.v1.estimator.inputs.pandas_input_fn": "doc",
    "tensorflow.compat.v1.estimator.tpu": "doc",
    "tensorflow.compat.v1.estimator.tpu.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUConfig": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimator": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec": "doc",
    "tensorflow.compat.v1.estimator.tpu.InputPipelineConfig": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental.EmbeddingConfigSpec": "doc",
    "tensorflow.estimator.FinalExporter": "doc",
    "tensorflow.compat.v1.estimator.FinalExporter": "doc",
    "tensorflow.estimator.SessionRunArgs": "doc",
    "tensorflow.compat.v1.estimator.SessionRunArgs": "doc",
    "tensorflow.estimator.Exporter": "doc",
    "tensorflow.estimator.FinalOpsHook": "doc",
    "tensorflow.estimator.SessionRunValues": "doc",
    "tensorflow.compat.v1.estimator.Exporter": "doc",
    "tensorflow.estimator.export.ExportOutput": "doc",
    "tensorflow.compat.v1.estimator.FinalOpsHook": "doc",
    "tensorflow.estimator.export.RegressionOutput": "doc",
    "tensorflow.compat.v1.estimator.SessionRunValues": "doc",
    "tensorflow.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.compat.v1.estimator.export.ExportOutput": "doc",
    "tensorflow.compat.v1.estimator.export.RegressionOutput": "doc",
    "tensorflow.compat.v1.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.estimator.SessionRunContext": "doc",
    "tensorflow.compat.v1.estimator.SessionRunContext": "doc",
    "tensorflow.estimator.export.PredictOutput": "doc",
    "tensorflow.compat.v1.estimator.export.PredictOutput": "doc",
    "tensorflow.estimator.TrainSpec": "doc",
    "tensorflow.estimator.train_and_evaluate": "doc",
    "tensorflow.compat.v1.estimator.TrainSpec": "doc",
    "tensorflow.compat.v1.estimator.train_and_evaluate": "doc",
    "tensorflow.estimator.SessionRunHook": "doc",
    "tensorflow.compat.v1.estimator.SessionRunHook": "doc",
    "tensorflow.estimator.BinaryClassHead": "doc",
    "tensorflow.estimator.LinearEstimator": "doc",
    "tensorflow.estimator.LinearRegressor": "doc",
    "tensorflow.estimator.StepCounterHook": "doc",
    "tensorflow.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.compat.v1.estimator.BinaryClassHead": "doc",
    "tensorflow.compat.v1.estimator.LinearEstimator": "doc",
    "tensorflow.compat.v1.estimator.LinearRegressor": "doc",
    "tensorflow.compat.v1.estimator.StepCounterHook": "doc",
    "tensorflow.estimator.export.ClassificationOutput": "doc",
    "tensorflow.compat.v1.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.compat.v1.estimator.export.ClassificationOutput": "doc",
    "tensorflow.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.compat.v1.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.estimator.LinearClassifier": "doc",
    "tensorflow.compat.v1.estimator.LinearClassifier": "doc",
    "tensorflow.estimator.add_metrics": "doc",
    "tensorflow.compat.v1.estimator.add_metrics": "doc",
    "tensorflow.estimator.BaselineEstimator": "doc",
    "tensorflow.estimator.BaselineRegressor": "doc",
    "tensorflow.estimator.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.estimator.BaselineEstimator": "doc",
    "tensorflow.compat.v1.estimator.BaselineRegressor": "doc",
    "tensorflow.compat.v1.estimator.LoggingTensorHook": "doc",
    "tensorflow.keras.estimator": "doc",
    "tensorflow.estimator.export": "doc",
    "tensorflow.compat.v1.estimator": "doc",
    "tensorflow.estimator.BestExporter": "doc",
    "tensorflow.estimator.experimental": "doc",
    "tensorflow.compat.v1.estimator.Head": "doc",
    "tensorflow.compat.v1.keras.estimator": "doc",
    "tensorflow.compat.v1.estimator.export": "doc",
    "tensorflow.estimator.BaselineClassifier": "doc",
    "tensorflow.compat.v1.estimator.EvalSpec": "doc",
    "tensorflow.compat.v1.estimator.ModeKeys": "doc",
    "tensorflow.compat.v1.estimator.Estimator": "doc",
    "tensorflow.compat.v1.estimator.MultiHead": "doc",
    "tensorflow.compat.v1.estimator.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.VocabInfo": "doc",
    "tensorflow.compat.v1.estimator.FeedFnHook": "doc",
    "tensorflow.compat.v1.estimator.BestExporter": "doc",
    "tensorflow.compat.v1.estimator.DNNEstimator": "doc",
    "tensorflow.compat.v1.estimator.DNNRegressor": "doc",
    "tensorflow.compat.v1.estimator.ProfilerHook": "doc",
    "tensorflow.compat.v1.estimator.experimental": "doc",
    "tensorflow.compat.v1.estimator.DNNClassifier": "doc",
    "tensorflow.compat.v1.estimator.EstimatorSpec": "doc",
    "tensorflow.compat.v1.estimator.NanTensorHook": "doc",
    "tensorflow.keras.estimator.model_to_estimator": "doc",
    "tensorflow.compat.v1.estimator.LatestExporter": "doc",
    "tensorflow.compat.v1.estimator.MultiClassHead": "doc",
    "tensorflow.compat.v1.estimator.MultiLabelHead": "doc",
    "tensorflow.compat.v1.estimator.RegressionHead": "doc",
    "tensorflow.compat.v1.estimator.StopAtStepHook": "doc",
    "tensorflow.estimator.experimental.RNNEstimator": "doc",
    "tensorflow.estimator.experimental.RNNClassifier": "doc",
    "tensorflow.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.compat.v1.estimator.SummarySaverHook": "doc",
    "tensorflow.compat.v1.estimator.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.estimator.WarmStartSettings": "doc",
    "tensorflow.compat.v1.estimator.BaselineClassifier": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.estimator.experimental.KMeans": "doc",
    "tensorflow.compat.v1.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.compat.v1.estimator.PoissonRegressionHead": "doc",
    "tensorflow.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.compat.v1.estimator.LogisticRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverListener": "doc",
    "tensorflow.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.compat.v1.keras.estimator.model_to_estimator": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.compat.v1.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.compat.v1.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.compat.v1.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.dnn_logit_fn_builder": "doc",
    "tensorflow.compat.v1.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.experimental.linear_logit_fn_builder": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.compat.v1.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.estimator.NanTensorHook": "doc",
    "tensorflow.estimator.LatestExporter": "doc",
    "tensorflow.estimator.MultiClassHead": "doc",
    "tensorflow.estimator.RegressionHead": "doc",
    "tensorflow.estimator.StopAtStepHook": "doc",
    "tensorflow.estimator.PoissonRegressionHead": "doc",
    "tensorflow.estimator.CheckpointSaverListener": "doc",
    "tensorflow.estimator.ModeKeys": "doc",
    "tensorflow.estimator.SecondOrStepTimer": "doc",
    "tensorflow.estimator.WarmStartSettings": "doc",
    "tensorflow.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.estimator": "doc",
    "tensorflow.estimator.Head": "doc",
    "tensorflow.estimator.EvalSpec": "doc",
    "tensorflow.estimator.Estimator": "doc",
    "tensorflow.estimator.MultiHead": "doc",
    "tensorflow.estimator.RunConfig": "doc",
    "tensorflow.estimator.VocabInfo": "doc",
    "tensorflow.estimator.FeedFnHook": "doc",
    "tensorflow.estimator.DNNEstimator": "doc",
    "tensorflow.estimator.DNNRegressor": "doc",
    "tensorflow.estimator.ProfilerHook": "doc",
    "tensorflow.estimator.DNNClassifier": "doc",
    "tensorflow.estimator.EstimatorSpec": "doc",
    "tensorflow.estimator.MultiLabelHead": "doc",
    "tensorflow.estimator.SummarySaverHook": "doc",
    "tensorflow.estimator.CheckpointSaverHook": "doc",
    "tensorflow.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.estimator.LogisticRegressionHead": "doc",
    "tensorflow.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.compat.v1.keras.Input": "doc",
    "tensorflow.compat.v1.keras.layers.Input": "doc",
    "tensorflow.keras.Input": "doc",
    "tensorflow.keras.layers.Input": "doc",
    "tensorflow.experimental.numpy.int8": "doc",
    "tensorflow.experimental.numpy.int_": "doc",
    "tensorflow.distribute.experimental.coordinator": "doc",
    "tensorflow.distribute.experimental.coordinator.RemoteValue": "doc",
    "tensorflow.distribute.experimental.coordinator.PerWorkerValues": "doc",
    "tensorflow.distribute.experimental.coordinator.ClusterCoordinator": "doc",
    "tensorflow.compat.v1.feature_column.input_layer": "doc",
    "tensorflow.compat.v1.distributions.Distribution": "doc",
    "tensorflow.data.Iterator": "doc",
    "tensorflow.compat.v1.data.Iterator": "doc",
    "tensorflow.compat.v1.flags.validator": "doc",
    "tensorflow.compat.v1.app.flags.validator": "doc",
    "tensorflow.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.distribute.InputOptions": "doc",
    "tensorflow.compat.v1.train.SessionCreator": "doc",
    "tensorflow.math.bincount": "doc",
    "tensorflow.compat.v1.math.bincount": "doc",
    "tensorflow.experimental.numpy.identity": "doc",
    "tensorflow.experimental.numpy.linspace": "doc",
    "tensorflow.keras.activations.softplus": "doc",
    "tensorflow.compat.v1.keras.activations.softplus": "doc",
    "tensorflow.raw_ops.Iterator": "doc",
    "tensorflow.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.compat.v1.distributions": "doc",
    "tensorflow.compat.v1.distributions.Beta": "doc",
    "tensorflow.compat.v1.distributions.Gamma": "doc",
    "tensorflow.compat.v1.distributions.Normal": "doc",
    "tensorflow.compat.v1.distributions.Laplace": "doc",
    "tensorflow.compat.v1.distributions.Uniform": "doc",
    "tensorflow.compat.v1.distributions.StudentT": "doc",
    "tensorflow.compat.v1.distributions.Bernoulli": "doc",
    "tensorflow.compat.v1.distributions.Dirichlet": "doc",
    "tensorflow.compat.v1.distributions.RegisterKL": "doc",
    "tensorflow.compat.v1.distributions.Categorical": "doc",
    "tensorflow.compat.v1.distributions.Exponential": "doc",
    "tensorflow.compat.v1.distributions.Multinomial": "doc",
    "tensorflow.compat.v1.distributions.kl_divergence": "doc",
    "tensorflow.compat.v1.distributions.DirichletMultinomial": "doc",
    "tensorflow.compat.v1.distributions.ReparameterizationType": "doc",
    "tensorflow.keras.applications.imagenet_utils": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils": "doc",
    "tensorflow.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.distribute.DistributedIterator": "doc",
    "tensorflow.math.rint": "doc",
    "tensorflow.io.gfile.exists": "doc",
    "tensorflow.tpu.experimental": "doc",
    "tensorflow.types.experimental": "doc",
    "tensorflow.compat.v1.math.rint": "doc",
    "tensorflow.experimental.numpy.ptp": "doc",
    "tensorflow.experimental.numpy.ones": "doc",
    "tensorflow.compat.v1.tpu.replicate": "doc",
    "tensorflow.experimental.numpy.empty": "doc",
    "tensorflow.experimental.numpy.hypot": "doc",
    "tensorflow.experimental.numpy.inner": "doc",
    "tensorflow.experimental.numpy.int16": "doc",
    "tensorflow.experimental.numpy.int32": "doc",
    "tensorflow.experimental.numpy.int64": "doc",
    "tensorflow.experimental.numpy.uint8": "doc",
    "tensorflow.compat.v1.sets.set_union": "doc",
    "tensorflow.experimental.numpy.einsum": "doc",
    "tensorflow.tpu.experimental.Topology": "doc",
    "tensorflow.compat.v1.io.gfile.exists": "doc",
    "tensorflow.tpu.experimental.embedding": "doc",
    "tensorflow.compat.v1.tpu.experimental": "doc",
    "tensorflow.experimental.numpy.conjugate": "doc",
    "tensorflow.compat.v1.types.experimental": "doc",
    "tensorflow.types.experimental.TensorLike": "doc",
    "tensorflow.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.compat.v1.tpu.experimental.Topology": "doc",
    "tensorflow.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding": "doc",
    "tensorflow.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.compat.v1.types.experimental.TensorLike": "doc",
    "tensorflow.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdamParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.FtrlParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.compat.v1.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding_column": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdagradParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.compat.v1.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.compat.v1.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.compat.v1.tpu.experimental.shared_embedding_columns": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.compat.v1.tpu.experimental.StochasticGradientDescentParameters": "doc",
    "tensorflow.random.Generator": "doc",
    "tensorflow.sparse.to_indicator": "doc",
    "tensorflow.keras.layers.Activation": "doc",
    "tensorflow.compat.v1.layers.InputSpec": "doc",
    "tensorflow.compat.v1.random.Generator": "doc",
    "tensorflow.random.experimental.Generator": "doc",
    "tensorflow.compat.v1.sparse.to_indicator": "doc",
    "tensorflow.compat.v1.keras.layers.InputSpec": "doc",
    "tensorflow.compat.v1.keras.layers.Activation": "doc",
    "tensorflow.compat.v1.random.experimental.Generator": "doc",
    "tensorflow.compat.v1.tpu.outside_compilation": "doc",
    "tensorflow.compat.v1.sets.set_intersection": "doc",
    "tensorflow.optimizers.Optimizer": "doc",
    "tensorflow.keras.layers.InputSpec": "doc",
    "tensorflow.keras.optimizers.Optimizer": "doc",
    "tensorflow.compat.v1.keras.optimizers.Optimizer": "doc",
    "tensorflow.raw_ops.MakeIterator": "doc",
    "tensorflow.linalg.LinearOperator": "doc",
    "tensorflow.compat.v1.linalg.LinearOperator": "doc",
    "tensorflow.nest.map_structure": "doc",
    "tensorflow.compat.v1.nest.map_structure": "doc",
    "tensorflow.keras.activations": "doc",
    "tensorflow.train.Coordinator": "doc",
    "tensorflow.keras.activations.elu": "doc",
    "tensorflow.keras.activations.get": "doc",
    "tensorflow.keras.activations.gelu": "doc",
    "tensorflow.keras.activations.relu": "doc",
    "tensorflow.keras.activations.selu": "doc",
    "tensorflow.keras.activations.tanh": "doc",
    "tensorflow.keras.activations.swish": "doc",
    "tensorflow.keras.activations.linear": "doc",
    "tensorflow.keras.activations.sigmoid": "doc",
    "tensorflow.keras.activations.softmax": "doc",
    "tensorflow.keras.activations.softsign": "doc",
    "tensorflow.keras.activations.serialize": "doc",
    "tensorflow.compat.v1.gfile.IsDirectory": "doc",
    "tensorflow.compat.v1.keras.activations": "doc",
    "tensorflow.compat.v1.train.Coordinator": "doc",
    "tensorflow.keras.activations.deserialize": "doc",
    "tensorflow.keras.activations.exponential": "doc",
    "tensorflow.keras.activations.hard_sigmoid": "doc",
    "tensorflow.compat.v1.keras.activations.elu": "doc",
    "tensorflow.compat.v1.keras.activations.get": "doc",
    "tensorflow.compat.v1.keras.activations.relu": "doc",
    "tensorflow.compat.v1.keras.activations.selu": "doc",
    "tensorflow.compat.v1.keras.activations.tanh": "doc",
    "tensorflow.compat.v1.keras.activations.swish": "doc",
    "tensorflow.compat.v1.keras.activations.linear": "doc",
    "tensorflow.compat.v1.keras.activations.sigmoid": "doc",
    "tensorflow.compat.v1.keras.activations.softmax": "doc",
    "tensorflow.compat.v1.keras.activations.softsign": "doc",
    "tensorflow.compat.v1.keras.activations.serialize": "doc",
    "tensorflow.compat.v1.keras.activations.deserialize": "doc",
    "tensorflow.compat.v1.keras.activations.exponential": "doc",
    "tensorflow.compat.v1.keras.activations.hard_sigmoid": "doc",
    "tensorflow.distribute.InputContext": "doc",
    "tensorflow.distribute.experimental": "doc",
    "tensorflow.distribute.get_strategy": "doc",
    "tensorflow.experimental.numpy.issubdtype": "doc",
    "tensorflow.compat.v1.distribute.InputContext": "doc",
    "tensorflow.compat.v1.distribute.experimental": "doc",
    "tensorflow.compat.v1.distribute.get_strategy": "doc",
    "tensorflow.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.data.experimental.service.distribute": "doc",
    "tensorflow.distribute.experimental.ValueContext": "doc",
    "tensorflow.distribute.experimental.partitioners": "doc",
    "tensorflow.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.compat.v1.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.compat.v1.data.experimental.service.distribute": "doc",
    "tensorflow.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.distribute.experimental.partitioners.Partitioner": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.distribute.experimental.partitioners.MaxSizePartitioner": "doc",
    "tensorflow.distribute.experimental.partitioners.MinSizePartitioner": "doc",
    "tensorflow.compat.v1.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.compat.v1.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.distribute.experimental.partitioners.FixedShardsPartitioner": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.compat.v1.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.compat.v1.gfile.ListDirectory": "doc",
    "tensorflow.initializers.identity": "doc",
    "tensorflow.keras.initializers.identity": "doc",
    "tensorflow.compat.v1.initializers.identity": "doc",
    "tensorflow.compat.v1.keras.initializers.identity": "doc",
    "tensorflow.optimizers.schedules": "doc",
    "tensorflow.keras.optimizers.schedules": "doc",
    "tensorflow.optimizers.schedules.serialize": "doc",
    "tensorflow.optimizers.schedules.deserialize": "doc",
    "tensorflow.compat.v1.keras.layers.InputLayer": "doc",
    "tensorflow.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules": "doc",
    "tensorflow.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.math.minimum": "doc",
    "tensorflow.compat.v1.math.minimum": "doc",
    "tensorflow.data.experimental.unbatch": "doc",
    "tensorflow.experimental.numpy.inexact": "doc",
    "tensorflow.experimental.numpy.isclose": "doc",
    "tensorflow.experimental.numpy.minimum": "doc",
    "tensorflow.experimental.numpy.nanprod": "doc",
    "tensorflow.experimental.numpy.signbit": "doc",
    "tensorflow.compat.v1.data.experimental.unbatch": "doc",
    "tensorflow.quantization.dequantize": "doc",
    "tensorflow.compat.v1.quantization.dequantize": "doc",
    "tensorflow.keras.layers.DenseFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.DenseFeatures": "doc",
    "tensorflow.io.gfile.stat": "doc",
    "tensorflow.math.invert_permutation": "doc",
    "tensorflow.compat.v1.io.gfile.stat": "doc",
    "tensorflow.compat.v1.train.Optimizer": "doc",
    "tensorflow.compat.v1.config.optimizer": "doc",
    "tensorflow.profiler.experimental.start": "doc",
    "tensorflow.compat.v1.invert_permutation": "doc",
    "tensorflow.compat.v1.math.invert_permutation": "doc",
    "tensorflow.profiler.experimental.server.start": "doc",
    "tensorflow.compat.v1.config.optimizer.get_jit": "doc",
    "tensorflow.compat.v1.config.optimizer.set_jit": "doc",
    "tensorflow.compat.v1.flags.register_validator": "doc",
    "tensorflow.profiler.experimental.client.monitor": "doc",
    "tensorflow.compat.v1.app.flags.register_validator": "doc",
    "tensorflow.config.optimizer.get_experimental_options": "doc",
    "tensorflow.config.optimizer.set_experimental_options": "doc",
    "tensorflow.compat.v1.config.optimizer.get_experimental_options": "doc",
    "tensorflow.compat.v1.config.optimizer.set_experimental_options": "doc",
    "tensorflow.data.experimental.cardinality": "doc",
    "tensorflow.keras.constraints.min_max_norm": "doc",
    "tensorflow.compat.v1.data.experimental.cardinality": "doc",
    "tensorflow.compat.v1.keras.constraints.min_max_norm": "doc",
    "tensorflow.distribute": "doc",
    "tensorflow.distribute.Server": "doc",
    "tensorflow.distribute.ReduceOp": "doc",
    "tensorflow.distribute.Strategy": "doc",
    "tensorflow.data.TextLineDataset": "doc",
    "tensorflow.compat.v1.distribute": "doc",
    "tensorflow.distribute.RunOptions": "doc",
    "tensorflow.image.ssim_multiscale": "doc",
    "tensorflow.distribute.TPUStrategy": "doc",
    "tensorflow.distribute.has_strategy": "doc",
    "tensorflow.raw_ops.TextLineDataset": "doc",
    "tensorflow.distribute.NcclAllReduce": "doc",
    "tensorflow.distribute.CrossDeviceOps": "doc",
    "tensorflow.distribute.ReplicaContext": "doc",
    "tensorflow.distribute.MirroredStrategy": "doc",
    "tensorflow.distribute.StrategyExtended": "doc",
    "tensorflow.distribute.cluster_resolver": "doc",
    "tensorflow.compat.v1.distribute.Server": "doc",
    "tensorflow.distribute.DistributedValues": "doc",
    "tensorflow.distribute.OneDeviceStrategy": "doc",
    "tensorflow.distribute.DistributedDataset": "doc",
    "tensorflow.compat.v1.distribute.ReduceOp": "doc",
    "tensorflow.compat.v1.distribute.Strategy": "doc",
    "tensorflow.distribute.get_replica_context": "doc",
    "tensorflow.compat.v1.data.TextLineDataset": "doc",
    "tensorflow.distribute.InputReplicationMode": "doc",
    "tensorflow.distribute.ReductionToOneDevice": "doc",
    "tensorflow.compat.v1.distribute.RunOptions": "doc",
    "tensorflow.compat.v1.image.ssim_multiscale": "doc",
    "tensorflow.compat.v1.distribute.has_strategy": "doc",
    "tensorflow.compat.v1.distribute.NcclAllReduce": "doc",
    "tensorflow.distribute.in_cross_replica_context": "doc",
    "tensorflow.compat.v1.distribute.CrossDeviceOps": "doc",
    "tensorflow.compat.v1.distribute.ReplicaContext": "doc",
    "tensorflow.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.distribute.experimental_set_strategy": "doc",
    "tensorflow.compat.v1.distribute.MirroredStrategy": "doc",
    "tensorflow.compat.v1.distribute.StrategyExtended": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver": "doc",
    "tensorflow.distribute.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.compat.v1.distribute.OneDeviceStrategy": "doc",
    "tensorflow.compat.v1.distribute.get_loss_reduction": "doc",
    "tensorflow.compat.v1.distribute.get_replica_context": "doc",
    "tensorflow.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.compat.v1.distribute.InputReplicationMode": "doc",
    "tensorflow.compat.v1.distribute.ReductionToOneDevice": "doc",
    "tensorflow.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.in_cross_replica_context": "doc",
    "tensorflow.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.compat.v1.distribute.experimental_set_strategy": "doc",
    "tensorflow.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.optimizers": "doc",
    "tensorflow.optimizers.SGD": "doc",
    "tensorflow.optimizers.get": "doc",
    "tensorflow.optimizers.Adam": "doc",
    "tensorflow.optimizers.Ftrl": "doc",
    "tensorflow.keras.optimizers": "doc",
    "tensorflow.optimizers.Nadam": "doc",
    "tensorflow.optimizers.Adamax": "doc",
    "tensorflow.optimizers.Adagrad": "doc",
    "tensorflow.optimizers.RMSprop": "doc",
    "tensorflow.optimizers.Adadelta": "doc",
    "tensorflow.keras.optimizers.SGD": "doc",
    "tensorflow.keras.optimizers.get": "doc",
    "tensorflow.optimizers.serialize": "doc",
    "tensorflow.keras.optimizers.Adam": "doc",
    "tensorflow.keras.optimizers.Ftrl": "doc",
    "tensorflow.keras.optimizers.Nadam": "doc",
    "tensorflow.optimizers.deserialize": "doc",
    "tensorflow.keras.layers.InputLayer": "doc",
    "tensorflow.keras.optimizers.Adamax": "doc",
    "tensorflow.keras.optimizers.Adagrad": "doc",
    "tensorflow.keras.optimizers.RMSprop": "doc",
    "tensorflow.keras.optimizers.Adadelta": "doc",
    "tensorflow.keras.optimizers.serialize": "doc",
    "tensorflow.compat.v1.keras.optimizers": "doc",
    "tensorflow.keras.optimizers.deserialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.SGD": "doc",
    "tensorflow.compat.v1.keras.optimizers.get": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adam": "doc",
    "tensorflow.compat.v1.keras.optimizers.Ftrl": "doc",
    "tensorflow.compat.v1.keras.optimizers.Nadam": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adamax": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adagrad": "doc",
    "tensorflow.compat.v1.keras.optimizers.RMSprop": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adadelta": "doc",
    "tensorflow.compat.v1.keras.optimizers.serialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.deserialize": "doc",
    "tensorflow.identity": "doc",
    "tensorflow.sparse.bincount": "doc",
    "tensorflow.compat.v1.bincount": "doc",
    "tensorflow.compat.v1.identity": "doc",
    "tensorflow.compat.v1.linspace": "doc",
    "tensorflow.compat.v1.sparse.bincount": "doc",
    "tensorflow.compat.v1.tpu.CrossShardOptimizer": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.quantization.quantize_and_dequantize": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize": "doc",
    "tensorflow.math.in_top_k": "doc",
    "tensorflow.math.softplus": "doc",
    "tensorflow.raw_ops.IsFinite": "doc",
    "tensorflow.initializers.Ones": "doc",
    "tensorflow.initializers.ones": "doc",
    "tensorflow.sets.intersection": "doc",
    "tensorflow.keras.applications": "doc",
    "tensorflow.keras.initializers.Ones": "doc",
    "tensorflow.keras.initializers.ones": "doc",
    "tensorflow.compat.v1.math.in_top_k": "doc",
    "tensorflow.compat.v1.math.softplus": "doc",
    "tensorflow.keras.applications.VGG16": "doc",
    "tensorflow.keras.applications.VGG19": "doc",
    "tensorflow.keras.applications.vgg16": "doc",
    "tensorflow.keras.applications.vgg19": "doc",
    "tensorflow.keras.applications.nasnet": "doc",
    "tensorflow.keras.applications.resnet": "doc",
    "tensorflow.data.experimental.snapshot": "doc",
    "tensorflow.experimental.numpy.absolute": "doc",
    "tensorflow.experimental.numpy.compress": "doc",
    "tensorflow.experimental.numpy.isfinite": "doc",
    "tensorflow.experimental.numpy.isneginf": "doc",
    "tensorflow.experimental.numpy.isposinf": "doc",
    "tensorflow.experimental.numpy.swapaxes": "doc",
    "tensorflow.keras.applications.ResNet50": "doc",
    "tensorflow.keras.applications.Xception": "doc",
    "tensorflow.keras.applications.densenet": "doc",
    "tensorflow.keras.applications.resnet50": "doc",
    "tensorflow.keras.applications.xception": "doc",
    "tensorflow.compat.v1.initializers.ones": "doc",
    "tensorflow.compat.v1.sets.intersection": "doc",
    "tensorflow.keras.applications.MobileNet": "doc",
    "tensorflow.keras.applications.ResNet101": "doc",
    "tensorflow.keras.applications.ResNet152": "doc",
    "tensorflow.keras.applications.mobilenet": "doc",
    "tensorflow.keras.applications.resnet_v2": "doc",
    "tensorflow.compat.v1.keras.applications": "doc",
    "tensorflow.keras.applications.ResNet50V2": "doc",
    "tensorflow.keras.applications.DenseNet121": "doc",
    "tensorflow.keras.applications.DenseNet169": "doc",
    "tensorflow.keras.applications.DenseNet201": "doc",
    "tensorflow.keras.applications.InceptionV3": "doc",
    "tensorflow.keras.applications.MobileNetV2": "doc",
    "tensorflow.keras.applications.NASNetLarge": "doc",
    "tensorflow.keras.applications.ResNet101V2": "doc",
    "tensorflow.keras.applications.ResNet152V2": "doc",
    "tensorflow.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.experimental.numpy.diag_indices": "doc",
    "tensorflow.keras.applications.NASNetMobile": "doc",
    "tensorflow.keras.applications.efficientnet": "doc",
    "tensorflow.keras.applications.inception_v3": "doc",
    "tensorflow.keras.applications.mobilenet_v2": "doc",
    "tensorflow.keras.applications.mobilenet_v3": "doc",
    "tensorflow.keras.applications.EfficientNetB0": "doc",
    "tensorflow.keras.applications.EfficientNetB1": "doc",
    "tensorflow.keras.applications.EfficientNetB2": "doc",
    "tensorflow.keras.applications.EfficientNetB3": "doc",
    "tensorflow.keras.applications.EfficientNetB4": "doc",
    "tensorflow.keras.applications.EfficientNetB5": "doc",
    "tensorflow.keras.applications.EfficientNetB6": "doc",
    "tensorflow.keras.applications.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.initializers.Ones": "doc",
    "tensorflow.compat.v1.keras.initializers.ones": "doc",
    "tensorflow.data.experimental.ThreadingOptions": "doc",
    "tensorflow.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.VGG19": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19": "doc",
    "tensorflow.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet": "doc",
    "tensorflow.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.keras.applications.xception.Xception": "doc",
    "tensorflow.compat.v1.data.experimental.snapshot": "doc",
    "tensorflow.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.Xception": "doc",
    "tensorflow.compat.v1.keras.applications.densenet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50": "doc",
    "tensorflow.compat.v1.keras.applications.xception": "doc",
    "tensorflow.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNet": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2": "doc",
    "tensorflow.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50V2": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetLarge": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152V2": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3": "doc",
    "tensorflow.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB7": "doc",
    "tensorflow.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.compat.v1.data.experimental.ThreadingOptions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.xception.Xception": "doc",
    "tensorflow.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.quantization": "doc",
    "tensorflow.quantization.quantize": "doc",
    "tensorflow.compat.v1.quantization": "doc",
    "tensorflow.keras.layers.RepeatVector": "doc",
    "tensorflow.quantization.quantized_concat": "doc",
    "tensorflow.compat.v1.quantization.quantize": "doc",
    "tensorflow.compat.v1.keras.layers.RepeatVector": "doc",
    "tensorflow.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.compat.v1.quantization.quantized_concat": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.compat.v1.train.input_producer": "doc",
    "tensorflow.keras.utils.get_source_inputs": "doc",
    "tensorflow.compat.v1.keras.utils.get_source_inputs": "doc",
    "tensorflow.linspace": "doc",
    "tensorflow.raw_ops.Bincount": "doc",
    "tensorflow.raw_ops.LinSpace": "doc",
    "tensorflow.raw_ops.DeleteIterator": "doc",
    "tensorflow.nest.assert_same_structure": "doc",
    "tensorflow.compat.v1.nest.assert_same_structure": "doc",
    "tensorflow.compat.v1.train.SessionRunArgs": "doc",
    "tensorflow.data.experimental.DistributeOptions": "doc",
    "tensorflow.compat.v1.data.experimental.DistributeOptions": "doc",
    "tensorflow.compat.v1.data.experimental.OptionalStructure": "doc",
    "tensorflow.math.logical_or": "doc",
    "tensorflow.compat.v1.SessionLog": "doc",
    "tensorflow.compat.v1.logical_or": "doc",
    "tensorflow.compat.v1.math.logical_or": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_or": "doc",
    "tensorflow.compat.v1.summary.SessionLog": "doc",
    "tensorflow.experimental.numpy.bitwise_or": "doc",
    "tensorflow.experimental.numpy.logical_or": "doc",
    "tensorflow.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.data.experimental.RandomDataset": "doc",
    "tensorflow.data.experimental.ignore_errors": "doc",
    "tensorflow.data.experimental.latency_stats": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.compat.v1.data.experimental.RandomDataset": "doc",
    "tensorflow.compat.v1.data.experimental.ignore_errors": "doc",
    "tensorflow.compat.v1.data.experimental.latency_stats": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.MethodNameUpdater": "doc",
    "tensorflow.nest": "doc",
    "tensorflow.sets": "doc",
    "tensorflow.einsum": "doc",
    "tensorflow.is_tensor": "doc",
    "tensorflow.sets.size": "doc",
    "tensorflow.linalg.inv": "doc",
    "tensorflow.sets.union": "doc",
    "tensorflow.signal.idct": "doc",
    "tensorflow.signal.ifft": "doc",
    "tensorflow.nest.flatten": "doc",
    "tensorflow.raw_ops.Rint": "doc",
    "tensorflow.signal.irfft": "doc",
    "tensorflow.linalg.einsum": "doc",
    "tensorflow.raw_ops.Empty": "doc",
    "tensorflow.compat.v1.tpu": "doc",
    "tensorflow.math.is_finite": "doc",
    "tensorflow.nest.is_nested": "doc",
    "tensorflow.compat.v1.ifft": "doc",
    "tensorflow.compat.v1.nest": "doc",
    "tensorflow.compat.v1.ones": "doc",
    "tensorflow.compat.v1.rint": "doc",
    "tensorflow.compat.v1.sets": "doc",
    "tensorflow.image.transpose": "doc",
    "tensorflow.sets.difference": "doc",
    "tensorflow.compat.v1.types": "doc",
    "tensorflow.config.optimizer": "doc",
    "tensorflow.compat.v1.einsum": "doc",
    "tensorflow.compat.v1.tpu.core": "doc",
    "tensorflow.compat.v1.is_tensor": "doc",
    "tensorflow.compat.v1.lin_space": "doc",
    "tensorflow.compat.v1.sets.size": "doc",
    "tensorflow.compat.v1.tpu.shard": "doc",
    "tensorflow.keras.datasets.mnist": "doc",
    "tensorflow.compat.v1.linalg.inv": "doc",
    "tensorflow.compat.v1.sets.union": "doc",
    "tensorflow.nest.pack_sequence_as": "doc",
    "tensorflow.compat.v1.signal.idct": "doc",
    "tensorflow.compat.v1.signal.ifft": "doc",
    "tensorflow.compat.v1.tpu.rewrite": "doc",
    "tensorflow.compat.v1.gfile.Exists": "doc",
    "tensorflow.compat.v1.logging.info": "doc",
    "tensorflow.compat.v1.nest.flatten": "doc",
    "tensorflow.compat.v1.signal.irfft": "doc",
    "tensorflow.compat.v1.linalg.einsum": "doc",
    "tensorflow.compat.v1.sets.set_size": "doc",
    "tensorflow.compat.v1.spectral.idct": "doc",
    "tensorflow.compat.v1.spectral.ifft": "doc",
    "tensorflow.config.optimizer.get_jit": "doc",
    "tensorflow.config.optimizer.set_jit": "doc",
    "tensorflow.compat.v1.bitwise.invert": "doc",
    "tensorflow.compat.v1.lite.constants": "doc",
    "tensorflow.compat.v1.math.is_finite": "doc",
    "tensorflow.compat.v1.nest.is_nested": "doc",
    "tensorflow.compat.v1.spectral.irfft": "doc",
    "tensorflow.compat.v1.tpu.XLAOptions": "doc",
    "tensorflow.compat.v1.image.transpose": "doc",
    "tensorflow.compat.v1.sets.difference": "doc",
    "tensorflow.compat.v1.tpu.PaddingSpec": "doc",
    "tensorflow.experimental.numpy.iscomplex": "doc",
    "tensorflow.experimental.numpy.transpose": "doc",
    "tensorflow.compat.v1.tpu.batch_parallel": "doc",
    "tensorflow.compat.v1.tpu.bfloat16_scope": "doc",
    "tensorflow.compat.v1.sets.set_difference": "doc",
    "tensorflow.compat.v1.tpu.shutdown_system": "doc",
    "tensorflow.keras.datasets.mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist": "doc",
    "tensorflow.experimental.tensorrt.Converter": "doc",
    "tensorflow.compat.v1.nest.pack_sequence_as": "doc",
    "tensorflow.compat.v1.saved_model.constants": "doc",
    "tensorflow.compat.v1.tpu.cross_replica_sum": "doc",
    "tensorflow.compat.v1.tpu.initialize_system": "doc",
    "tensorflow.compat.v1.data.experimental.Structure": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist.load_data": "doc",
    "tensorflow.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.compat.v1.image.resize_images": "doc",
    "tensorflow.data.experimental.get_structure": "doc",
    "tensorflow.compat.v1.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.compat.v1.data.experimental.get_structure": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental.RunHandlerPoolOptions": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.predict_signature_def": "doc",
    "tensorflow.keras.backend.set_image_data_format": "doc",
    "tensorflow.data.experimental.service.DispatchServer": "doc",
    "tensorflow.compat.v1.keras.backend.set_image_data_format": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.lite.Interpreter": "doc",
    "tensorflow.compat.v1.lite.Interpreter": "doc",
    "tensorflow.keras.constraints.deserialize": "doc",
    "tensorflow.compat.v1.keras.constraints.deserialize": "doc",
    "tensorflow.image.random_jpeg_quality": "doc",
    "tensorflow.compat.v1.image.random_jpeg_quality": "doc",
    "tensorflow.data.experimental.OptimizationOptions": "doc",
    "tensorflow.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.compat.v1.data.experimental.OptimizationOptions": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.bitwise.bitwise_or": "doc",
    "tensorflow.raw_ops.BitwiseXor": "doc",
    "tensorflow.raw_ops.IteratorV2": "doc",
    "tensorflow.raw_ops.OneShotIterator": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.is_valid_signature": "doc",
    "tensorflow.raw_ops.TensorDataset": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.compat.v1.graph_util.extract_sub_graph": "doc",
    "tensorflow.compat.v1.sparse_to_indicator": "doc",
    "tensorflow.compat.v1.train.ChiefSessionCreator": "doc",
    "tensorflow.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto.InputShapesEntry": "doc",
    "tensorflow.tpu": "doc",
    "tensorflow.ones": "doc",
    "tensorflow.types": "doc",
    "tensorflow.bitwise.invert": "doc",
    "tensorflow.raw_ops.Einsum": "doc",
    "tensorflow.raw_ops.Unpack": "doc",
    "tensorflow.math.reduce_std": "doc",
    "tensorflow.math.reduce_sum": "doc",
    "tensorflow.image.adjust_hue": "doc",
    "tensorflow.image.rgb_to_hsv": "doc",
    "tensorflow.image.adjust_contrast": "doc",
    "tensorflow.image.extract_patches": "doc",
    "tensorflow.image.image_gradients": "doc",
    "tensorflow.image.random_contrast": "doc",
    "tensorflow.raw_ops.OptimizeDataset": "doc",
    "tensorflow.raw_ops.RegisterDataset": "doc",
    "tensorflow.compat.v1.math.reduce_std": "doc",
    "tensorflow.compat.v1.math.reduce_sum": "doc",
    "tensorflow.compat.v1.image.adjust_hue": "doc",
    "tensorflow.compat.v1.image.rgb_to_hsv": "doc",
    "tensorflow.data.experimental.CsvDataset": "doc",
    "tensorflow.data.experimental.SqlDataset": "doc",
    "tensorflow.keras.layers.TimeDistributed": "doc",
    "tensorflow.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.summary.FileWriter": "doc",
    "tensorflow.compat.v1.summary.initialize": "doc",
    "tensorflow.keras.backend.is_keras_tensor": "doc",
    "tensorflow.compat.v1.image.adjust_contrast": "doc",
    "tensorflow.compat.v1.image.extract_patches": "doc",
    "tensorflow.compat.v1.image.image_gradients": "doc",
    "tensorflow.compat.v1.image.random_contrast": "doc",
    "tensorflow.keras.mixed_precision.experimental": "doc",
    "tensorflow.profiler.experimental.ProfilerOptions": "doc",
    "tensorflow.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.compat.v1.data.experimental.CsvDataset": "doc",
    "tensorflow.compat.v1.data.experimental.SqlDataset": "doc",
    "tensorflow.compat.v1.keras.layers.TimeDistributed": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.keras.backend.is_keras_tensor": "doc",
    "tensorflow.keras.mixed_precision.experimental.Policy": "doc",
    "tensorflow.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.data.experimental.TensorStructure": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental": "doc",
    "tensorflow.keras.mixed_precision.experimental.set_policy": "doc",
    "tensorflow.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.keras.mixed_precision.experimental.global_policy": "doc",
    "tensorflow.compat.v1.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.keras.mixed_precision.experimental.get_layer_policy": "doc",
    "tensorflow.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.math.logical_xor": "doc",
    "tensorflow.compat.v1.logical_xor": "doc",
    "tensorflow.compat.v1.math.logical_xor": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_xor": "doc",
    "tensorflow.experimental.numpy.bitwise_xor": "doc",
    "tensorflow.experimental.numpy.logical_xor": "doc",
    "tensorflow.compat.v1.data.make_one_shot_iterator": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.raw_ops.AnonymousIterator": "doc",
    "tensorflow.raw_ops.InvertPermutation": "doc",
    "tensorflow.debugging.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.debugging.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.initializers.tables_initializer": "doc",
    "tensorflow.raw_ops.NextIteration": "doc",
    "tensorflow.linalg.LinearOperatorZeros": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorZeros": "doc",
    "tensorflow.compat.v1.image.extract_image_patches": "doc",
    "tensorflow.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.compat.v1.IdentityReader": "doc",
    "tensorflow.compat.v1.TextLineReader": "doc",
    "tensorflow.compat.v1.assert_greater": "doc",
    "tensorflow.compat.v1.train.SessionManager": "doc",
    "tensorflow.compat.v1.debugging.assert_greater": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.initializers.Initializer": "doc",
    "tensorflow.initializers.deserialize": "doc",
    "tensorflow.keras.initializers.Initializer": "doc",
    "tensorflow.keras.initializers.deserialize": "doc",
    "tensorflow.compat.v1.keras.initializers.Initializer": "doc",
    "tensorflow.compat.v1.keras.initializers.deserialize": "doc",
    "tensorflow.sparse.map_values": "doc",
    "tensorflow.compat.v1.RunOptions": "doc",
    "tensorflow.compat.v1.graph_util": "doc",
    "tensorflow.compat.v1.identity_n": "doc",
    "tensorflow.compat.v1.init_scope": "doc",
    "tensorflow.compat.v1.losses.hinge_loss": "doc",
    "tensorflow.compat.v1.SummaryMetadata.PluginData": "doc",
    "tensorflow.compat.v1.graph_util.must_run_on_cpu": "doc",
    "tensorflow.compat.v1.graph_util.import_graph_def": "doc",
    "tensorflow.compat.v1.graph_util.remove_training_nodes": "doc",
    "tensorflow.compat.v1.graph_util.convert_variables_to_constants": "doc",
    "tensorflow.compat.v1.graph_util.tensor_shape_from_node_def_name": "doc",
    "tensorflow.math.confusion_matrix": "doc",
    "tensorflow.test.TestCase.failureException": "doc",
    "tensorflow.compat.v1.math.confusion_matrix": "doc",
    "tensorflow.mlir.experimental.convert_function": "doc",
    "tensorflow.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.experimental.tensorrt.ConversionParams": "doc",
    "tensorflow.autograph.experimental.set_loop_options": "doc",
    "tensorflow.compat.v1.test.TestCase.failureException": "doc",
    "tensorflow.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.data.experimental.service.register_dataset": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_function": "doc",
    "tensorflow.compat.v1.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.compat.v1.autograph.experimental.set_loop_options": "doc",
    "tensorflow.compat.v1.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.compat.v1.data.experimental.service.register_dataset": "doc",
    "tensorflow.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.compat.v1.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.raw_ops.CollectiveGather": "doc",
    "tensorflow.raw_ops.TensorListGather": "doc",
    "tensorflow.initializers.TruncatedNormal": "doc",
    "tensorflow.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.compat.v1.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.errors.UnauthenticatedError": "doc",
    "tensorflow.compat.v1.train.WorkerSessionCreator": "doc",
    "tensorflow.compat.v1.train.checkpoints_iterator": "doc",
    "tensorflow.compat.v1.errors.UnauthenticatedError": "doc",
    "tensorflow.math.segment_sum": "doc",
    "tensorflow.math.special.fresnel_cos": "doc",
    "tensorflow.math.special.fresnel_sin": "doc",
    "tensorflow.compat.v1.math.segment_sum": "doc",
    "tensorflow.experimental.numpy.bitwise_not": "doc",
    "tensorflow.experimental.numpy.concatenate": "doc",
    "tensorflow.experimental.numpy.expand_dims": "doc",
    "tensorflow.experimental.numpy.result_type": "doc",
    "tensorflow.keras.experimental.CosineDecay": "doc",
    "tensorflow.keras.experimental.LinearModel": "doc",
    "tensorflow.train.experimental.PythonState": "doc",
    "tensorflow.compat.v1.math.special.fresnel_cos": "doc",
    "tensorflow.compat.v1.math.special.fresnel_sin": "doc",
    "tensorflow.experimental.function_executor_type": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecay": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearModel": "doc",
    "tensorflow.compat.v1.train.experimental.PythonState": "doc",
    "tensorflow.compat.v1.experimental.function_executor_type": "doc",
    "tensorflow.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.regression_signature_def": "doc",
    "tensorflow.raw_ops.DeserializeIterator": "doc",
    "tensorflow.math.is_non_decreasing": "doc",
    "tensorflow.image.adjust_brightness": "doc",
    "tensorflow.image.adjust_saturation": "doc",
    "tensorflow.image.random_brightness": "doc",
    "tensorflow.image.random_saturation": "doc",
    "tensorflow.compat.v1.math.is_non_decreasing": "doc",
    "tensorflow.compat.v1.image.adjust_brightness": "doc",
    "tensorflow.compat.v1.image.adjust_saturation": "doc",
    "tensorflow.compat.v1.image.random_brightness": "doc",
    "tensorflow.compat.v1.image.random_saturation": "doc",
    "tensorflow.data.experimental.enumerate_dataset": "doc",
    "tensorflow.experimental.numpy.ascontiguousarray": "doc",
    "tensorflow.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.compat.v1.data.experimental.enumerate_dataset": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.bitcast": "doc",
    "tensorflow.eigvals": "doc",
    "tensorflow.minimum": "doc",
    "tensorflow.linalg.eigvals": "doc",
    "tensorflow.signal.irfft2d": "doc",
    "tensorflow.signal.irfft3d": "doc",
    "tensorflow.sparse.minimum": "doc",
    "tensorflow.raw_ops.Bitcast": "doc",
    "tensorflow.raw_ops.Minimum": "doc",
    "tensorflow.raw_ops.Unbatch": "doc",
    "tensorflow.compat.v1.bitcast": "doc",
    "tensorflow.compat.v1.minimum": "doc",
    "tensorflow.keras.layers.Minimum": "doc",
    "tensorflow.keras.layers.Permute": "doc",
    "tensorflow.keras.layers.minimum": "doc",
    "tensorflow.compat.v1.nn.dropout": "doc",
    "tensorflow.compat.v1.nn.moments": "doc",
    "tensorflow.keras.datasets.reuters": "doc",
    "tensorflow.compat.v1.layers.Dropout": "doc",
    "tensorflow.compat.v1.layers.dropout": "doc",
    "tensorflow.compat.v1.signal.irfft2d": "doc",
    "tensorflow.compat.v1.signal.irfft3d": "doc",
    "tensorflow.compat.v1.sparse.minimum": "doc",
    "tensorflow.compat.v1.spectral.irfft2d": "doc",
    "tensorflow.compat.v1.spectral.irfft3d": "doc",
    "tensorflow.compat.v1.keras.layers.Dropout": "doc",
    "tensorflow.compat.v1.keras.layers.Minimum": "doc",
    "tensorflow.compat.v1.keras.layers.Permute": "doc",
    "tensorflow.compat.v1.keras.layers.minimum": "doc",
    "tensorflow.keras.datasets.reuters.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters": "doc",
    "tensorflow.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.raw_ops.StringSplitV2": "doc",
    "tensorflow.raw_ops.UniqueDataset": "doc",
    "tensorflow.raw_ops.WindowDataset": "doc",
    "tensorflow.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.bitwise.bitwise_xor": "doc",
    "tensorflow.math": "doc",
    "tensorflow.image": "doc",
    "tensorflow.math.abs": "doc",
    "tensorflow.math.add": "doc",
    "tensorflow.math.cos": "doc",
    "tensorflow.math.erf": "doc",
    "tensorflow.math.exp": "doc",
    "tensorflow.math.log": "doc",
    "tensorflow.math.mod": "doc",
    "tensorflow.math.pow": "doc",
    "tensorflow.math.sin": "doc",
    "tensorflow.math.tan": "doc",
    "tensorflow.math.acos": "doc",
    "tensorflow.math.asin": "doc",
    "tensorflow.math.atan": "doc",
    "tensorflow.math.ceil": "doc",
    "tensorflow.math.conj": "doc",
    "tensorflow.math.cosh": "doc",
    "tensorflow.math.erfc": "doc",
    "tensorflow.math.imag": "doc",
    "tensorflow.math.less": "doc",
    "tensorflow.math.real": "doc",
    "tensorflow.math.sign": "doc",
    "tensorflow.math.sinh": "doc",
    "tensorflow.math.sqrt": "doc",
    "tensorflow.math.tanh": "doc",
    "tensorflow.math.zeta": "doc",
    "tensorflow.graph_util": "doc",
    "tensorflow.identity_n": "doc",
    "tensorflow.image.psnr": "doc",
    "tensorflow.image.ssim": "doc",
    "tensorflow.init_scope": "doc",
    "tensorflow.logical_or": "doc",
    "tensorflow.math.acosh": "doc",
    "tensorflow.math.add_n": "doc",
    "tensorflow.math.angle": "doc",
    "tensorflow.math.asinh": "doc",
    "tensorflow.math.atan2": "doc",
    "tensorflow.math.atanh": "doc",
    "tensorflow.math.equal": "doc",
    "tensorflow.math.expm1": "doc",
    "tensorflow.math.floor": "doc",
    "tensorflow.math.lbeta": "doc",
    "tensorflow.math.log1p": "doc",
    "tensorflow.math.ndtri": "doc",
    "tensorflow.math.round": "doc",
    "tensorflow.math.rsqrt": "doc",
    "tensorflow.math.top_k": "doc",
    "tensorflow.math.xdivy": "doc",
    "tensorflow.math.xlogy": "doc",
    "tensorflow.image.rot90": "doc",
    "tensorflow.math.argmax": "doc",
    "tensorflow.math.argmin": "doc",
    "tensorflow.math.cumsum": "doc",
    "tensorflow.math.divide": "doc",
    "tensorflow.math.erfinv": "doc",
    "tensorflow.math.igamma": "doc",
    "tensorflow.math.is_inf": "doc",
    "tensorflow.math.is_nan": "doc",
    "tensorflow.math.lgamma": "doc",
    "tensorflow.math.square": "doc",
    "tensorflow.signal.stft": "doc",
    "tensorflow.experimental": "doc",
    "tensorflow.image.resize": "doc",
    "tensorflow.initializers": "doc",
    "tensorflow.math.betainc": "doc",
    "tensorflow.math.cumprod": "doc",
    "tensorflow.math.digamma": "doc",
    "tensorflow.math.erfcinv": "doc",
    "tensorflow.math.greater": "doc",
    "tensorflow.math.igammac": "doc",
    "tensorflow.math.maximum": "doc",
    "tensorflow.math.polyval": "doc",
    "tensorflow.math.sigmoid": "doc",
    "tensorflow.math.softmax": "doc",
    "tensorflow.math.special": "doc",
    "tensorflow.math.truediv": "doc",
    "tensorflow.math.xlog1py": "doc",
    "tensorflow.summary.text": "doc",
    "tensorflow.compat.as_str": "doc",
    "tensorflow.image.is_jpeg": "doc",
    "tensorflow.lite.Optimize": "doc",
    "tensorflow.math.floordiv": "doc",
    "tensorflow.math.floormod": "doc",
    "tensorflow.math.multiply": "doc",
    "tensorflow.math.negative": "doc",
    "tensorflow.math.softsign": "doc",
    "tensorflow.math.subtract": "doc",
    "tensorflow.summary.flush": "doc",
    "tensorflow.summary.image": "doc",
    "tensorflow.summary.write": "doc",
    "tensorflow.test.TestCase": "doc",
    "tensorflow.io.gfile.isdir": "doc",
    "tensorflow.math.bessel_i0": "doc",
    "tensorflow.math.bessel_i1": "doc",
    "tensorflow.math.nextafter": "doc",
    "tensorflow.math.not_equal": "doc",
    "tensorflow.math.polygamma": "doc",
    "tensorflow.strings.substr": "doc",
    "tensorflow.compat.v1.imag": "doc",
    "tensorflow.compat.v1.math": "doc",
    "tensorflow.math.bessel_i0e": "doc",
    "tensorflow.math.bessel_i1e": "doc",
    "tensorflow.math.less_equal": "doc",
    "tensorflow.math.reciprocal": "doc",
    "tensorflow.math.reduce_all": "doc",
    "tensorflow.math.reduce_any": "doc",
    "tensorflow.math.reduce_max": "doc",
    "tensorflow.math.reduce_min": "doc",
    "tensorflow.math.scalar_mul": "doc",
    "tensorflow.compat.v1.image": "doc",
    "tensorflow.compat.v1.stack": "doc",
    "tensorflow.image.decode_bmp": "doc",
    "tensorflow.image.decode_gif": "doc",
    "tensorflow.image.decode_png": "doc",
    "tensorflow.image.encode_png": "doc",
    "tensorflow.image.hsv_to_rgb": "doc",
    "tensorflow.image.random_hue": "doc",
    "tensorflow.image.rgb_to_yiq": "doc",
    "tensorflow.image.rgb_to_yuv": "doc",
    "tensorflow.image.yiq_to_rgb": "doc",
    "tensorflow.image.yuv_to_rgb": "doc",
    "tensorflow.initializers.get": "doc",
    "tensorflow.math.log_sigmoid": "doc",
    "tensorflow.math.log_softmax": "doc",
    "tensorflow.math.logical_and": "doc",
    "tensorflow.math.logical_not": "doc",
    "tensorflow.math.reduce_mean": "doc",
    "tensorflow.math.reduce_prod": "doc",
    "tensorflow.math.segment_max": "doc",
    "tensorflow.math.segment_min": "doc",
    "tensorflow.xla.experimental": "doc",
    "tensorflow.compat.v1.substr": "doc",
    "tensorflow.data.IteratorSpec": "doc",
    "tensorflow.data.experimental": "doc",
    "tensorflow.image.decode_jpeg": "doc",
    "tensorflow.image.encode_jpeg": "doc",
    "tensorflow.image.random_crop": "doc",
    "tensorflow.image.sobel_edges": "doc",
    "tensorflow.lite.experimental": "doc",
    "tensorflow.math.accumulate_n": "doc",
    "tensorflow.math.l2_normalize": "doc",
    "tensorflow.math.segment_mean": "doc",
    "tensorflow.math.segment_prod": "doc",
    "tensorflow.math.sobol_sample": "doc",
    "tensorflow.mlir.experimental": "doc",
    "tensorflow.compat.v1.Session": "doc",
    "tensorflow.compat.v1.greater": "doc",
    "tensorflow.compat.v1.summary": "doc",
    "tensorflow.experimental.numpy": "doc",
    "tensorflow.image.ResizeMethod": "doc",
    "tensorflow.image.adjust_gamma": "doc",
    "tensorflow.image.central_crop": "doc",
    "tensorflow.image.decode_image": "doc",
    "tensorflow.image.flip_up_down": "doc",
    "tensorflow.initializers.Zeros": "doc",
    "tensorflow.initializers.zeros": "doc",
    "tensorflow.keras.experimental": "doc",
    "tensorflow.keras.initializers": "doc",
    "tensorflow.math.count_nonzero": "doc",
    "tensorflow.math.divide_no_nan": "doc",
    "tensorflow.math.greater_equal": "doc",
    "tensorflow.math.special.dawsn": "doc",
    "tensorflow.math.zero_fraction": "doc",
    "tensorflow.metrics.MeanTensor": "doc",
    "tensorflow.raw_ops.MapDataset": "doc",
    "tensorflow.raw_ops.ZipDataset": "doc",
    "tensorflow.train.experimental": "doc",
    "tensorflow.compat.v1.hessians": "doc",
    "tensorflow.compat.v1.math.abs": "doc",
    "tensorflow.compat.v1.math.add": "doc",
    "tensorflow.compat.v1.math.cos": "doc",
    "tensorflow.compat.v1.math.erf": "doc",
    "tensorflow.compat.v1.math.exp": "doc",
    "tensorflow.compat.v1.math.log": "doc",
    "tensorflow.compat.v1.math.mod": "doc",
    "tensorflow.compat.v1.math.pow": "doc",
    "tensorflow.compat.v1.math.sin": "doc",
    "tensorflow.compat.v1.math.tan": "doc",
    "tensorflow.config.experimental": "doc",
    "tensorflow.experimental.dlpack": "doc",
    "tensorflow.io.serialize_tensor": "doc",
    "tensorflow.linalg.experimental": "doc",
    "tensorflow.lookup.experimental": "doc",
    "tensorflow.math.special.expint": "doc",
    "tensorflow.math.special.spence": "doc",
    "tensorflow.random.experimental": "doc",
    "tensorflow.compat.v1.math.acos": "doc",
    "tensorflow.compat.v1.math.asin": "doc",
    "tensorflow.compat.v1.math.atan": "doc",
    "tensorflow.compat.v1.math.ceil": "doc",
    "tensorflow.compat.v1.math.conj": "doc",
    "tensorflow.compat.v1.math.cosh": "doc",
    "tensorflow.compat.v1.math.erfc": "doc",
    "tensorflow.compat.v1.math.imag": "doc",
    "tensorflow.compat.v1.math.less": "doc",
    "tensorflow.compat.v1.math.real": "doc",
    "tensorflow.compat.v1.math.sign": "doc",
    "tensorflow.compat.v1.math.sinh": "doc",
    "tensorflow.compat.v1.math.sqrt": "doc",
    "tensorflow.compat.v1.math.tanh": "doc",
    "tensorflow.compat.v1.math.zeta": "doc",
    "tensorflow.math.multiply_no_nan": "doc",
    "tensorflow.math.reduce_variance": "doc",
    "tensorflow.raw_ops.OptionalNone": "doc",
    "tensorflow.summary.experimental": "doc",
    "tensorflow.compat.v1.gfile.Stat": "doc",
    "tensorflow.compat.v1.image.psnr": "doc",
    "tensorflow.compat.v1.image.ssim": "doc",
    "tensorflow.compat.v1.math.acosh": "doc",
    "tensorflow.compat.v1.math.add_n": "doc",
    "tensorflow.compat.v1.math.angle": "doc",
    "tensorflow.compat.v1.math.asinh": "doc",
    "tensorflow.compat.v1.math.atan2": "doc",
    "tensorflow.compat.v1.math.atanh": "doc",
    "tensorflow.compat.v1.math.equal": "doc",
    "tensorflow.compat.v1.math.expm1": "doc",
    "tensorflow.compat.v1.math.floor": "doc",
    "tensorflow.compat.v1.math.lbeta": "doc",
    "tensorflow.compat.v1.math.log1p": "doc",
    "tensorflow.compat.v1.math.ndtri": "doc",
    "tensorflow.compat.v1.math.round": "doc",
    "tensorflow.compat.v1.math.rsqrt": "doc",
    "tensorflow.compat.v1.math.top_k": "doc",
    "tensorflow.compat.v1.math.xdivy": "doc",
    "tensorflow.compat.v1.math.xlogy": "doc",
    "tensorflow.experimental.Optional": "doc",
    "tensorflow.experimental.tensorrt": "doc",
    "tensorflow.image.crop_and_resize": "doc",
    "tensorflow.image.extract_glimpse": "doc",
    "tensorflow.image.flip_left_right": "doc",
    "tensorflow.image.resize_with_pad": "doc",
    "tensorflow.image.total_variation": "doc",
    "tensorflow.initializers.Constant": "doc",
    "tensorflow.initializers.HeNormal": "doc",
    "tensorflow.initializers.Identity": "doc",
    "tensorflow.initializers.constant": "doc",
    "tensorflow.keras.backend.epsilon": "doc",
    "tensorflow.math.reduce_logsumexp": "doc",
    "tensorflow.profiler.experimental": "doc",
    "tensorflow.compat.v1.image.rot90": "doc",
    "tensorflow.compat.v1.math.argmax": "doc",
    "tensorflow.compat.v1.math.argmin": "doc",
    "tensorflow.compat.v1.math.cumsum": "doc",
    "tensorflow.compat.v1.math.divide": "doc",
    "tensorflow.compat.v1.math.erfinv": "doc",
    "tensorflow.compat.v1.math.igamma": "doc",
    "tensorflow.compat.v1.math.is_inf": "doc",
    "tensorflow.compat.v1.math.is_nan": "doc",
    "tensorflow.compat.v1.math.lgamma": "doc",
    "tensorflow.compat.v1.math.square": "doc",
    "tensorflow.compat.v1.signal.stft": "doc",
    "tensorflow.autograph.experimental": "doc",
    "tensorflow.data.experimental.load": "doc",
    "tensorflow.data.experimental.save": "doc",
    "tensorflow.data.experimental.scan": "doc",
    "tensorflow.debugging.experimental": "doc",
    "tensorflow.experimental.numpy.abs": "doc",
    "tensorflow.experimental.numpy.add": "doc",
    "tensorflow.experimental.numpy.all": "doc",
    "tensorflow.experimental.numpy.any": "doc",
    "tensorflow.experimental.numpy.cos": "doc",
    "tensorflow.experimental.numpy.dot": "doc",
    "tensorflow.experimental.numpy.exp": "doc",
    "tensorflow.experimental.numpy.eye": "doc",
    "tensorflow.experimental.numpy.fix": "doc",
    "tensorflow.experimental.numpy.gcd": "doc",
    "tensorflow.experimental.numpy.ix_": "doc",
    "tensorflow.experimental.numpy.lcm": "doc",
    "tensorflow.experimental.numpy.log": "doc",
    "tensorflow.experimental.numpy.max": "doc",
    "tensorflow.experimental.numpy.min": "doc",
    "tensorflow.experimental.numpy.mod": "doc",
    "tensorflow.experimental.numpy.pad": "doc",
    "tensorflow.experimental.numpy.sin": "doc",
    "tensorflow.experimental.numpy.std": "doc",
    "tensorflow.experimental.numpy.sum": "doc",
    "tensorflow.experimental.numpy.tan": "doc",
    "tensorflow.experimental.numpy.tri": "doc",
    "tensorflow.experimental.numpy.var": "doc",
    "tensorflow.image.grayscale_to_rgb": "doc",
    "tensorflow.image.rgb_to_grayscale": "doc",
    "tensorflow.initializers.HeUniform": "doc",
    "tensorflow.initializers.he_normal": "doc",
    "tensorflow.initializers.serialize": "doc",
    "tensorflow.keras.initializers.get": "doc",
    "tensorflow.math.reciprocal_no_nan": "doc",
    "tensorflow.math.special.bessel_i0": "doc",
    "tensorflow.math.special.bessel_i1": "doc",
    "tensorflow.math.special.bessel_j0": "doc",
    "tensorflow.math.special.bessel_j1": "doc",
    "tensorflow.math.special.bessel_k0": "doc",
    "tensorflow.math.special.bessel_k1": "doc",
    "tensorflow.math.special.bessel_y0": "doc",
    "tensorflow.math.special.bessel_y1": "doc",
    "tensorflow.raw_ops.FusedBatchNorm": "doc",
    "tensorflow.raw_ops.IdentityReader": "doc",
    "tensorflow.raw_ops.ResourceGather": "doc",
    "tensorflow.raw_ops.TextLineReader": "doc",
    "tensorflow.compat.v1.batch_gather": "doc",
    "tensorflow.compat.v1.experimental": "doc",
    "tensorflow.compat.v1.image.resize": "doc",
    "tensorflow.compat.v1.initializers": "doc",
    "tensorflow.compat.v1.math.betainc": "doc",
    "tensorflow.compat.v1.math.cumprod": "doc",
    "tensorflow.compat.v1.math.digamma": "doc",
    "tensorflow.compat.v1.math.erfcinv": "doc",
    "tensorflow.compat.v1.math.greater": "doc",
    "tensorflow.compat.v1.math.igammac": "doc",
    "tensorflow.compat.v1.math.maximum": "doc",
    "tensorflow.compat.v1.math.polyval": "doc",
    "tensorflow.compat.v1.math.sigmoid": "doc",
    "tensorflow.compat.v1.math.softmax": "doc",
    "tensorflow.compat.v1.math.special": "doc",
    "tensorflow.compat.v1.math.truediv": "doc",
    "tensorflow.compat.v1.math.xlog1py": "doc",
    "tensorflow.compat.v1.ragged.stack": "doc",
    "tensorflow.compat.v1.string_strip": "doc",
    "tensorflow.compat.v1.summary.text": "doc",
    "tensorflow.experimental.numpy.amax": "doc",
    "tensorflow.experimental.numpy.amin": "doc",
    "tensorflow.experimental.numpy.cbrt": "doc",
    "tensorflow.experimental.numpy.ceil": "doc",
    "tensorflow.experimental.numpy.clip": "doc",
    "tensorflow.experimental.numpy.conj": "doc",
    "tensorflow.experimental.numpy.copy": "doc",
    "tensorflow.experimental.numpy.cosh": "doc",
    "tensorflow.experimental.numpy.diag": "doc",
    "tensorflow.experimental.numpy.diff": "doc",
    "tensorflow.experimental.numpy.exp2": "doc",
    "tensorflow.experimental.numpy.fabs": "doc",
    "tensorflow.experimental.numpy.flip": "doc",
    "tensorflow.experimental.numpy.full": "doc",
    "tensorflow.experimental.numpy.imag": "doc",
    "tensorflow.experimental.numpy.kron": "doc",
    "tensorflow.experimental.numpy.less": "doc",
    "tensorflow.experimental.numpy.log2": "doc",
    "tensorflow.experimental.numpy.mean": "doc",
    "tensorflow.experimental.numpy.ndim": "doc",
    "tensorflow.experimental.numpy.prod": "doc",
    "tensorflow.experimental.numpy.real": "doc",
    "tensorflow.experimental.numpy.roll": "doc",
    "tensorflow.experimental.numpy.sign": "doc",
    "tensorflow.experimental.numpy.sinc": "doc",
    "tensorflow.experimental.numpy.sinh": "doc",
    "tensorflow.experimental.numpy.size": "doc",
    "tensorflow.experimental.numpy.sort": "doc",
    "tensorflow.experimental.numpy.sqrt": "doc",
    "tensorflow.experimental.numpy.take": "doc",
    "tensorflow.experimental.numpy.tanh": "doc",
    "tensorflow.experimental.numpy.tile": "doc",
    "tensorflow.experimental.numpy.tril": "doc",
    "tensorflow.experimental.numpy.triu": "doc",
    "tensorflow.experimental.numpy.vdot": "doc",
    "tensorflow.initializers.Orthogonal": "doc",
    "tensorflow.initializers.he_uniform": "doc",
    "tensorflow.initializers.orthogonal": "doc",
    "tensorflow.keras.callbacks.History": "doc",
    "tensorflow.math.special.bessel_i0e": "doc",
    "tensorflow.math.special.bessel_i1e": "doc",
    "tensorflow.math.special.bessel_k0e": "doc",
    "tensorflow.math.special.bessel_k1e": "doc",
    "tensorflow.math.squared_difference": "doc",
    "tensorflow.compat.v1.compat.as_str": "doc",
    "tensorflow.compat.v1.image.is_jpeg": "doc",
    "tensorflow.compat.v1.lite.Optimize": "doc",
    "tensorflow.compat.v1.logging.error": "doc",
    "tensorflow.compat.v1.math.floordiv": "doc",
    "tensorflow.compat.v1.math.floormod": "doc",
    "tensorflow.compat.v1.math.multiply": "doc",
    "tensorflow.compat.v1.math.negative": "doc",
    "tensorflow.compat.v1.math.softsign": "doc",
    "tensorflow.compat.v1.math.subtract": "doc",
    "tensorflow.compat.v1.summary.Event": "doc",
    "tensorflow.compat.v1.summary.audio": "doc",
    "tensorflow.compat.v1.summary.image": "doc",
    "tensorflow.compat.v1.summary.merge": "doc",
    "tensorflow.compat.v1.test.TestCase": "doc",
    "tensorflow.data.experimental.unique": "doc",
    "tensorflow.experimental.async_scope": "doc",
    "tensorflow.experimental.numpy.angle": "doc",
    "tensorflow.experimental.numpy.array": "doc",
    "tensorflow.experimental.numpy.bool_": "doc",
    "tensorflow.experimental.numpy.cross": "doc",
    "tensorflow.experimental.numpy.equal": "doc",
    "tensorflow.experimental.numpy.expm1": "doc",
    "tensorflow.experimental.numpy.finfo": "doc",
    "tensorflow.experimental.numpy.floor": "doc",
    "tensorflow.experimental.numpy.iinfo": "doc",
    "tensorflow.experimental.numpy.isinf": "doc",
    "tensorflow.experimental.numpy.isnan": "doc",
    "tensorflow.experimental.numpy.log10": "doc",
    "tensorflow.experimental.numpy.log1p": "doc",
    "tensorflow.experimental.numpy.outer": "doc",
    "tensorflow.experimental.numpy.power": "doc",
    "tensorflow.experimental.numpy.ravel": "doc",
    "tensorflow.experimental.numpy.rot90": "doc",
    "tensorflow.experimental.numpy.round": "doc",
    "tensorflow.experimental.numpy.shape": "doc",
    "tensorflow.experimental.numpy.split": "doc",
    "tensorflow.experimental.numpy.stack": "doc",
    "tensorflow.experimental.numpy.trace": "doc",
    "tensorflow.experimental.numpy.where": "doc",
    "tensorflow.experimental.numpy.zeros": "doc",
    "tensorflow.image.extract_jpeg_shape": "doc",
    "tensorflow.initializers.LecunNormal": "doc",
    "tensorflow.keras.initializers.Zeros": "doc",
    "tensorflow.keras.initializers.zeros": "doc",
    "tensorflow.keras.metrics.MeanTensor": "doc",
    "tensorflow.raw_ops.GetSessionTensor": "doc",
    "tensorflow.saved_model.experimental": "doc",
    "tensorflow.xla.experimental.compile": "doc",
    "tensorflow.compat.v1.io.gfile.isdir": "doc",
    "tensorflow.compat.v1.math.bessel_i0": "doc",
    "tensorflow.compat.v1.math.bessel_i1": "doc",
    "tensorflow.compat.v1.math.nextafter": "doc",
    "tensorflow.compat.v1.math.not_equal": "doc",
    "tensorflow.compat.v1.math.polygamma": "doc",
    "tensorflow.compat.v1.strings.format": "doc",
    "tensorflow.compat.v1.strings.substr": "doc",
    "tensorflow.compat.v1.summary.scalar": "doc",
    "tensorflow.data.experimental.Counter": "doc",
    "tensorflow.data.experimental.Reducer": "doc",
    "tensorflow.data.experimental.service": "doc",
    "tensorflow.experimental.numpy.append": "doc",
    "tensorflow.experimental.numpy.arange": "doc",
    "tensorflow.experimental.numpy.arccos": "doc",
    "tensorflow.experimental.numpy.arcsin": "doc",
    "tensorflow.experimental.numpy.arctan": "doc",
    "tensorflow.experimental.numpy.argmax": "doc",
    "tensorflow.experimental.numpy.argmin": "doc",
    "tensorflow.experimental.numpy.around": "doc",
    "tensorflow.experimental.numpy.cumsum": "doc",
    "tensorflow.experimental.numpy.divide": "doc",
    "tensorflow.experimental.numpy.divmod": "doc",
    "tensorflow.experimental.numpy.dsplit": "doc",
    "tensorflow.experimental.numpy.dstack": "doc",
    "tensorflow.experimental.numpy.fliplr": "doc",
    "tensorflow.experimental.numpy.flipud": "doc",
    "tensorflow.experimental.numpy.float_": "doc",
    "tensorflow.experimental.numpy.hsplit": "doc",
    "tensorflow.experimental.numpy.hstack": "doc",
    "tensorflow.experimental.numpy.isreal": "doc",
    "tensorflow.experimental.numpy.matmul": "doc",
    "tensorflow.experimental.numpy.nansum": "doc",
    "tensorflow.experimental.numpy.random": "doc",
    "tensorflow.experimental.numpy.repeat": "doc",
    "tensorflow.experimental.numpy.select": "doc",
    "tensorflow.experimental.numpy.square": "doc",
    "tensorflow.experimental.numpy.uint16": "doc",
    "tensorflow.experimental.numpy.uint32": "doc",
    "tensorflow.experimental.numpy.uint64": "doc",
    "tensorflow.experimental.numpy.vander": "doc",
    "tensorflow.experimental.numpy.vsplit": "doc",
    "tensorflow.experimental.numpy.vstack": "doc",
    "tensorflow.image.adjust_jpeg_quality": "doc",
    "tensorflow.image.convert_image_dtype": "doc",
    "tensorflow.image.draw_bounding_boxes": "doc",
    "tensorflow.image.non_max_suppression": "doc",
    "tensorflow.image.pad_to_bounding_box": "doc",
    "tensorflow.image.random_flip_up_down": "doc",
    "tensorflow.initializers.GlorotNormal": "doc",
    "tensorflow.initializers.LecunUniform": "doc",
    "tensorflow.initializers.RandomNormal": "doc",
    "tensorflow.initializers.lecun_normal": "doc",
    "tensorflow.keras.layers.experimental": "doc",
    "tensorflow.keras.preprocessing.image": "doc",
    "tensorflow.linalg.LinearOperatorDiag": "doc",
    "tensorflow.math.cumulative_logsumexp": "doc",
    "tensorflow.math.unsorted_segment_max": "doc",
    "tensorflow.math.unsorted_segment_min": "doc",
    "tensorflow.math.unsorted_segment_sum": "doc",
    "tensorflow.compat.v1.CriticalSection": "doc",
    "tensorflow.compat.v1.math.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.less_equal": "doc",
    "tensorflow.compat.v1.math.reciprocal": "doc",
    "tensorflow.compat.v1.math.reduce_all": "doc",
    "tensorflow.compat.v1.math.reduce_any": "doc",
    "tensorflow.compat.v1.math.reduce_max": "doc",
    "tensorflow.compat.v1.math.reduce_min": "doc",
    "tensorflow.compat.v1.math.scalar_mul": "doc",
    "tensorflow.compat.v1.summary.Summary": "doc",
    "tensorflow.data.experimental.Optional": "doc",
    "tensorflow.experimental.numpy.arccosh": "doc",
    "tensorflow.experimental.numpy.arcsinh": "doc",
    "tensorflow.experimental.numpy.arctan2": "doc",
    "tensorflow.experimental.numpy.arctanh": "doc",
    "tensorflow.experimental.numpy.argsort": "doc",
    "tensorflow.experimental.numpy.asarray": "doc",
    "tensorflow.experimental.numpy.average": "doc",
    "tensorflow.experimental.numpy.cumprod": "doc",
    "tensorflow.experimental.numpy.deg2rad": "doc",
    "tensorflow.experimental.numpy.float16": "doc",
    "tensorflow.experimental.numpy.float32": "doc",
    "tensorflow.experimental.numpy.float64": "doc",
    "tensorflow.experimental.numpy.greater": "doc",
    "tensorflow.experimental.numpy.maximum": "doc",
    "tensorflow.experimental.numpy.nanmean": "doc",
    "tensorflow.experimental.numpy.ndarray": "doc",
    "tensorflow.experimental.numpy.nonzero": "doc",
    "tensorflow.experimental.numpy.object_": "doc",
    "tensorflow.experimental.numpy.polyval": "doc",
    "tensorflow.experimental.numpy.rad2deg": "doc",
    "tensorflow.experimental.numpy.reshape": "doc",
    "tensorflow.experimental.numpy.squeeze": "doc",
    "tensorflow.experimental.numpy.string_": "doc",
    "tensorflow.image.crop_to_bounding_box": "doc",
    "tensorflow.image.decode_and_crop_jpeg": "doc",
    "tensorflow.image.stateless_random_hue": "doc",
    "tensorflow.initializers.GlorotUniform": "doc",
    "tensorflow.initializers.RandomUniform": "doc",
    "tensorflow.initializers.glorot_normal": "doc",
    "tensorflow.initializers.lecun_uniform": "doc",
    "tensorflow.initializers.random_normal": "doc",
    "tensorflow.math.reduce_euclidean_norm": "doc",
    "tensorflow.math.unsorted_segment_mean": "doc",
    "tensorflow.math.unsorted_segment_prod": "doc",
    "tensorflow.profiler.experimental.stop": "doc",
    "tensorflow.summary.create_noop_writer": "doc",
    "tensorflow.train.checkpoints_iterator": "doc",
    "tensorflow.xla.experimental.jit_scope": "doc",
    "tensorflow.compat.v1.OptimizerOptions": "doc",
    "tensorflow.compat.v1.flags.ListParser": "doc",
    "tensorflow.compat.v1.image.decode_bmp": "doc",
    "tensorflow.compat.v1.image.decode_gif": "doc",
    "tensorflow.compat.v1.image.decode_png": "doc",
    "tensorflow.compat.v1.image.encode_png": "doc",
    "tensorflow.compat.v1.image.hsv_to_rgb": "doc",
    "tensorflow.compat.v1.image.random_hue": "doc",
    "tensorflow.compat.v1.image.rgb_to_yiq": "doc",
    "tensorflow.compat.v1.image.rgb_to_yuv": "doc",
    "tensorflow.compat.v1.image.yiq_to_rgb": "doc",
    "tensorflow.compat.v1.image.yuv_to_rgb": "doc",
    "tensorflow.compat.v1.math.log_sigmoid": "doc",
    "tensorflow.compat.v1.math.log_softmax": "doc",
    "tensorflow.compat.v1.math.logical_and": "doc",
    "tensorflow.compat.v1.math.logical_not": "doc",
    "tensorflow.compat.v1.math.reduce_mean": "doc",
    "tensorflow.compat.v1.math.reduce_prod": "doc",
    "tensorflow.compat.v1.math.segment_max": "doc",
    "tensorflow.compat.v1.math.segment_min": "doc",
    "tensorflow.compat.v1.serialize_tensor": "doc",
    "tensorflow.compat.v1.string_to_number": "doc",
    "tensorflow.compat.v1.xla.experimental": "doc",
    "tensorflow.experimental.numpy.allclose": "doc",
    "tensorflow.experimental.numpy.complex_": "doc",
    "tensorflow.experimental.numpy.diagflat": "doc",
    "tensorflow.experimental.numpy.diagonal": "doc",
    "tensorflow.experimental.numpy.isscalar": "doc",
    "tensorflow.experimental.numpy.logspace": "doc",
    "tensorflow.experimental.numpy.meshgrid": "doc",
    "tensorflow.experimental.numpy.moveaxis": "doc",
    "tensorflow.experimental.numpy.multiply": "doc",
    "tensorflow.experimental.numpy.negative": "doc",
    "tensorflow.experimental.numpy.positive": "doc",
    "tensorflow.experimental.numpy.subtract": "doc",
    "tensorflow.experimental.numpy.unicode_": "doc",
    "tensorflow.graph_util.import_graph_def": "doc",
    "tensorflow.image.stateless_random_crop": "doc",
    "tensorflow.initializers.glorot_uniform": "doc",
    "tensorflow.initializers.random_uniform": "doc",
    "tensorflow.keras.initializers.Constant": "doc",
    "tensorflow.keras.initializers.HeNormal": "doc",
    "tensorflow.keras.initializers.Identity": "doc",
    "tensorflow.keras.initializers.constant": "doc",
    "tensorflow.keras.wrappers.scikit_learn": "doc",
    "tensorflow.math.is_strictly_increasing": "doc",
    "tensorflow.profiler.experimental.Trace": "doc",
    "tensorflow.train.Features.FeatureEntry": "doc",
    "tensorflow.compat.v1.data.experimental": "doc",
    "tensorflow.compat.v1.image.decode_jpeg": "doc",
    "tensorflow.compat.v1.image.encode_jpeg": "doc",
    "tensorflow.compat.v1.image.random_crop": "doc",
    "tensorflow.compat.v1.image.resize_area": "doc",
    "tensorflow.compat.v1.image.sobel_edges": "doc",
    "tensorflow.compat.v1.lite.experimental": "doc",
    "tensorflow.compat.v1.math.accumulate_n": "doc",
    "tensorflow.compat.v1.math.l2_normalize": "doc",
    "tensorflow.compat.v1.math.segment_mean": "doc",
    "tensorflow.compat.v1.math.segment_prod": "doc",
    "tensorflow.compat.v1.math.sobol_sample": "doc",
    "tensorflow.compat.v1.mlir.experimental": "doc",
    "tensorflow.compat.v1.summary.histogram": "doc",
    "tensorflow.compat.v1.summary.merge_all": "doc",
    "tensorflow.compat.v1.test.get_temp_dir": "doc",
    "tensorflow.data.experimental.take_while": "doc",
    "tensorflow.data.experimental.to_variant": "doc",
    "tensorflow.experimental.numpy.complex64": "doc",
    "tensorflow.experimental.numpy.full_like": "doc",
    "tensorflow.experimental.numpy.geomspace": "doc",
    "tensorflow.experimental.numpy.heaviside": "doc",
    "tensorflow.experimental.numpy.isrealobj": "doc",
    "tensorflow.experimental.numpy.logaddexp": "doc",
    "tensorflow.experimental.numpy.nextafter": "doc",
    "tensorflow.experimental.numpy.not_equal": "doc",
    "tensorflow.experimental.numpy.ones_like": "doc",
    "tensorflow.experimental.numpy.remainder": "doc",
    "tensorflow.experimental.numpy.tensordot": "doc",
    "tensorflow.image.random_flip_left_right": "doc",
    "tensorflow.initializers.VarianceScaling": "doc",
    "tensorflow.keras.callbacks.experimental": "doc",
    "tensorflow.keras.initializers.he_normal": "doc",
    "tensorflow.keras.initializers.serialize": "doc",
    "tensorflow.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.profiler.experimental.client": "doc",
    "tensorflow.profiler.experimental.server": "doc",
    "tensorflow.train.experimental.LossScale": "doc",
    "tensorflow.compat.v1.flags.tf_decorator": "doc",
    "tensorflow.compat.v1.get_session_tensor": "doc",
    "tensorflow.compat.v1.image.ResizeMethod": "doc",
    "tensorflow.compat.v1.image.adjust_gamma": "doc",
    "tensorflow.compat.v1.image.central_crop": "doc",
    "tensorflow.compat.v1.image.decode_image": "doc",
    "tensorflow.compat.v1.image.flip_up_down": "doc",
    "tensorflow.compat.v1.initializers.zeros": "doc",
    "tensorflow.compat.v1.keras.experimental": "doc",
    "tensorflow.compat.v1.keras.initializers": "doc",
    "tensorflow.compat.v1.math.count_nonzero": "doc",
    "tensorflow.compat.v1.math.divide_no_nan": "doc",
    "tensorflow.compat.v1.math.greater_equal": "doc",
    "tensorflow.compat.v1.math.special.dawsn": "doc",
    "tensorflow.compat.v1.math.zero_fraction": "doc",
    "tensorflow.compat.v1.train.experimental": "doc",
    "tensorflow.experimental.dlpack.to_dlpack": "doc",
    "tensorflow.experimental.numpy.asanyarray": "doc",
    "tensorflow.experimental.numpy.atleast_1d": "doc",
    "tensorflow.experimental.numpy.atleast_2d": "doc",
    "tensorflow.experimental.numpy.atleast_3d": "doc",
    "tensorflow.experimental.numpy.complex128": "doc",
    "tensorflow.experimental.numpy.empty_like": "doc",
    "tensorflow.experimental.numpy.less_equal": "doc",
    "tensorflow.experimental.numpy.logaddexp2": "doc",
    "tensorflow.experimental.numpy.reciprocal": "doc",
    "tensorflow.experimental.numpy.zeros_like": "doc",
    "tensorflow.image.resize_with_crop_or_pad": "doc",
    "tensorflow.initializers.truncated_normal": "doc",
    "tensorflow.initializers.variance_scaling": "doc",
    "tensorflow.keras.initializers.Orthogonal": "doc",
    "tensorflow.keras.initializers.he_uniform": "doc",
    "tensorflow.keras.initializers.orthogonal": "doc",
    "tensorflow.profiler.experimental.Profile": "doc",
    "tensorflow.random.experimental.Algorithm": "doc",
    "tensorflow.summary.experimental.get_step": "doc",
    "tensorflow.summary.experimental.set_step": "doc",
    "tensorflow.compat.v1.config.experimental": "doc",
    "tensorflow.compat.v1.io.serialize_tensor": "doc",
    "tensorflow.compat.v1.layers.experimental": "doc",
    "tensorflow.compat.v1.linalg.experimental": "doc",
    "tensorflow.compat.v1.lookup.experimental": "doc",
    "tensorflow.compat.v1.math.special.expint": "doc",
    "tensorflow.compat.v1.math.special.spence": "doc",
    "tensorflow.compat.v1.random.experimental": "doc",
    "tensorflow.autograph.experimental.Feature": "doc",
    "tensorflow.data.experimental.StatsOptions": "doc",
    "tensorflow.data.experimental.from_variant": "doc",
    "tensorflow.experimental.async_clear_error": "doc",
    "tensorflow.experimental.numpy.array_equal": "doc",
    "tensorflow.experimental.numpy.bitwise_and": "doc",
    "tensorflow.experimental.numpy.float_power": "doc",
    "tensorflow.experimental.numpy.logical_and": "doc",
    "tensorflow.experimental.numpy.logical_not": "doc",
    "tensorflow.experimental.numpy.random.rand": "doc",
    "tensorflow.experimental.numpy.random.seed": "doc",
    "tensorflow.experimental.numpy.true_divide": "doc",
    "tensorflow.keras.initializers.LecunNormal": "doc",
    "tensorflow.raw_ops.ConditionalAccumulator": "doc",
    "tensorflow.compat.v1.app.flags.ListParser": "doc",
    "tensorflow.compat.v1.image.resize_bicubic": "doc",
    "tensorflow.compat.v1.lite.experimental.nn": "doc",
    "tensorflow.compat.v1.math.multiply_no_nan": "doc",
    "tensorflow.compat.v1.math.reduce_variance": "doc",
    "tensorflow.compat.v1.train.SessionRunHook": "doc",
    "tensorflow.data.experimental.map_and_batch": "doc",
    "tensorflow.experimental.dlpack.from_dlpack": "doc",
    "tensorflow.experimental.numpy.broadcast_to": "doc",
    "tensorflow.experimental.numpy.floor_divide": "doc",
    "tensorflow.experimental.numpy.iscomplexobj": "doc",
    "tensorflow.experimental.numpy.random.randn": "doc",
    "tensorflow.feature_column.indicator_column": "doc",
    "tensorflow.image.per_image_standardization": "doc",
    "tensorflow.image.stateless_random_contrast": "doc",
    "tensorflow.keras.initializers.GlorotNormal": "doc",
    "tensorflow.keras.initializers.LecunUniform": "doc",
    "tensorflow.keras.initializers.RandomNormal": "doc",
    "tensorflow.keras.initializers.lecun_normal": "doc",
    "tensorflow.lite.experimental.load_delegate": "doc",
    "tensorflow.compat.v1.experimental.Optional": "doc",
    "tensorflow.compat.v1.flags.ValidationError": "doc",
    "tensorflow.compat.v1.image.crop_and_resize": "doc",
    "tensorflow.compat.v1.image.extract_glimpse": "doc",
    "tensorflow.compat.v1.image.flip_left_right": "doc",
    "tensorflow.compat.v1.image.resize_bilinear": "doc",
    "tensorflow.compat.v1.image.total_variation": "doc",
    "tensorflow.compat.v1.image.transpose_image": "doc",
    "tensorflow.compat.v1.initializers.constant": "doc",
    "tensorflow.compat.v1.io.tf_record_iterator": "doc",
    "tensorflow.compat.v1.keras.backend.epsilon": "doc",
    "tensorflow.compat.v1.math.reduce_logsumexp": "doc",
    "tensorflow.compat.v1.summary.Summary.Audio": "doc",
    "tensorflow.compat.v1.summary.Summary.Image": "doc",
    "tensorflow.compat.v1.summary.Summary.Value": "doc",
    "tensorflow.data.experimental.TFRecordWriter": "doc",
    "tensorflow.data.experimental.copy_to_device": "doc",
    "tensorflow.experimental.numpy.count_nonzero": "doc",
    "tensorflow.experimental.numpy.greater_equal": "doc",
    "tensorflow.experimental.numpy.promote_types": "doc",
    "tensorflow.experimental.numpy.random.random": "doc",
    "tensorflow.image.non_max_suppression_padded": "doc",
    "tensorflow.keras.experimental.WideDeepModel": "doc",
    "tensorflow.keras.initializers.GlorotUniform": "doc",
    "tensorflow.keras.initializers.RandomUniform": "doc",
    "tensorflow.keras.initializers.glorot_normal": "doc",
    "tensorflow.keras.initializers.lecun_uniform": "doc",
    "tensorflow.keras.initializers.random_normal": "doc",
    "tensorflow.compat.v1.ConditionalAccumulator": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator": "doc",
    "tensorflow.compat.v1.autograph.experimental": "doc",
    "tensorflow.compat.v1.data.experimental.scan": "doc",
    "tensorflow.compat.v1.debugging.experimental": "doc",
    "tensorflow.compat.v1.image.grayscale_to_rgb": "doc",
    "tensorflow.compat.v1.image.rgb_to_grayscale": "doc",
    "tensorflow.compat.v1.initializers.he_normal": "doc",
    "tensorflow.compat.v1.initializers.variables": "doc",
    "tensorflow.compat.v1.keras.initializers.get": "doc",
    "tensorflow.compat.v1.math.reciprocal_no_nan": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1": "doc",
    "tensorflow.compat.v1.math.special.bessel_j0": "doc",
    "tensorflow.compat.v1.math.special.bessel_j1": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1": "doc",
    "tensorflow.compat.v1.math.special.bessel_y0": "doc",
    "tensorflow.compat.v1.math.special.bessel_y1": "doc",
    "tensorflow.compat.v1.metrics.precision_at_k": "doc",
    "tensorflow.compat.v1.summary.tensor_summary": "doc",
    "tensorflow.compat.v1.train.SessionRunValues": "doc",
    "tensorflow.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.data.experimental.StatsAggregator": "doc",
    "tensorflow.data.experimental.group_by_window": "doc",
    "tensorflow.experimental.numpy.random.randint": "doc",
    "tensorflow.experimental.numpy.random.uniform": "doc",
    "tensorflow.image.stateless_random_brightness": "doc",
    "tensorflow.image.stateless_random_saturation": "doc",
    "tensorflow.keras.initializers.glorot_uniform": "doc",
    "tensorflow.keras.initializers.random_uniform": "doc",
    "tensorflow.summary.experimental.write_raw_pb": "doc",
    "tensorflow.train.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.keras.callbacks.History": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1e": "doc",
    "tensorflow.compat.v1.math.squared_difference": "doc",
    "tensorflow.compat.v1.summary.FileWriterCache": "doc",
    "tensorflow.data.experimental.group_by_reducer": "doc",
    "tensorflow.data.experimental.make_csv_dataset": "doc",
    "tensorflow.experimental.numpy.take_along_axis": "doc",
    "tensorflow.image.combined_non_max_suppression": "doc",
    "tensorflow.image.non_max_suppression_overlaps": "doc",
    "tensorflow.keras.initializers.VarianceScaling": "doc",
    "tensorflow.keras.preprocessing.image.load_img": "doc",
    "tensorflow.keras.preprocessing.image.save_img": "doc",
    "tensorflow.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.profiler.experimental.client.trace": "doc",
    "tensorflow.summary.experimental.summary_scope": "doc",
    "tensorflow.compat.v1.data.experimental.unique": "doc",
    "tensorflow.compat.v1.experimental.async_scope": "doc",
    "tensorflow.compat.v1.image.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.keras.initializers.Zeros": "doc",
    "tensorflow.compat.v1.keras.initializers.zeros": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanTensor": "doc",
    "tensorflow.compat.v1.saved_model.experimental": "doc",
    "tensorflow.compat.v1.xla.experimental.compile": "doc",
    "tensorflow.experimental.numpy.broadcast_arrays": "doc",
    "tensorflow.image.sample_distorted_bounding_box": "doc",
    "tensorflow.image.stateless_random_flip_up_down": "doc",
    "tensorflow.image.stateless_random_jpeg_quality": "doc",
    "tensorflow.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.keras.initializers.truncated_normal": "doc",
    "tensorflow.keras.initializers.variance_scaling": "doc",
    "tensorflow.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.random.experimental.stateless_split": "doc",
    "tensorflow.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.train.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.app.flags.ValidationError": "doc",
    "tensorflow.compat.v1.data.experimental.Counter": "doc",
    "tensorflow.compat.v1.data.experimental.Reducer": "doc",
    "tensorflow.compat.v1.data.experimental.service": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.image.adjust_jpeg_quality": "doc",
    "tensorflow.compat.v1.image.convert_image_dtype": "doc",
    "tensorflow.compat.v1.image.draw_bounding_boxes": "doc",
    "tensorflow.compat.v1.image.non_max_suppression": "doc",
    "tensorflow.compat.v1.image.pad_to_bounding_box": "doc",
    "tensorflow.compat.v1.image.random_flip_up_down": "doc",
    "tensorflow.compat.v1.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.normal": "doc",
    "tensorflow.compat.v1.keras.layers.experimental": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorDiag": "doc",
    "tensorflow.compat.v1.math.cumulative_logsumexp": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sum": "doc",
    "tensorflow.compat.v1.summary.TaggedRunMetadata": "doc",
    "tensorflow.config.experimental.get_memory_usage": "doc",
    "tensorflow.data.experimental.assert_cardinality": "doc",
    "tensorflow.data.experimental.get_single_element": "doc",
    "tensorflow.data.experimental.prefetch_to_device": "doc",
    "tensorflow.data.experimental.rejection_resample": "doc",
    "tensorflow.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.random.experimental.create_rng_state": "doc",
    "tensorflow.compat.v1.data.experimental.Optional": "doc",
    "tensorflow.compat.v1.image.crop_to_bounding_box": "doc",
    "tensorflow.compat.v1.image.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.initializers.random_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.uniform": "doc",
    "tensorflow.compat.v1.math.reduce_euclidean_norm": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_prod": "doc",
    "tensorflow.compat.v1.summary.SummaryDescription": "doc",
    "tensorflow.compat.v1.summary.all_v2_summary_ops": "doc",
    "tensorflow.compat.v1.train.slice_input_producer": "doc",
    "tensorflow.compat.v1.xla.experimental.jit_scope": "doc",
    "tensorflow.autograph.experimental.do_not_convert": "doc",
    "tensorflow.config.experimental.get_device_policy": "doc",
    "tensorflow.config.experimental.get_memory_growth": "doc",
    "tensorflow.config.experimental.set_device_policy": "doc",
    "tensorflow.config.experimental.set_memory_growth": "doc",
    "tensorflow.data.experimental.parallel_interleave": "doc",
    "tensorflow.image.generate_bounding_box_proposals": "doc",
    "tensorflow.image.non_max_suppression_with_scores": "doc",
    "tensorflow.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.random.experimental.stateless_fold_in": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.compat.v1.image.resize_image_with_pad": "doc",
    "tensorflow.compat.v1.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.Constant": "doc",
    "tensorflow.compat.v1.keras.initializers.Identity": "doc",
    "tensorflow.compat.v1.keras.initializers.constant": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn": "doc",
    "tensorflow.compat.v1.math.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.train.Features.FeatureEntry": "doc",
    "tensorflow.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.config.experimental.get_device_details": "doc",
    "tensorflow.data.experimental.choose_from_datasets": "doc",
    "tensorflow.data.experimental.get_next_as_optional": "doc",
    "tensorflow.data.experimental.sample_from_datasets": "doc",
    "tensorflow.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.data.experimental.service.WorkerServer": "doc",
    "tensorflow.image.stateless_random_flip_left_right": "doc",
    "tensorflow.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.keras.preprocessing.image.smart_resize": "doc",
    "tensorflow.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.compat.v1.data.experimental.take_while": "doc",
    "tensorflow.compat.v1.data.experimental.to_variant": "doc",
    "tensorflow.compat.v1.image.random_flip_left_right": "doc",
    "tensorflow.compat.v1.initializers.local_variables": "doc",
    "tensorflow.compat.v1.keras.initializers.he_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.serialize": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.python_io.tf_record_iterator": "doc",
    "tensorflow.compat.v1.train.experimental.LossScale": "doc",
    "tensorflow.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.config.experimental.get_visible_devices": "doc",
    "tensorflow.config.experimental.set_visible_devices": "doc",
    "tensorflow.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.data.experimental.parse_example_dataset": "doc",
    "tensorflow.experimental.register_filesystem_plugin": "doc",
    "tensorflow.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.image.resize_nearest_neighbor": "doc",
    "tensorflow.compat.v1.image.resize_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.initializers.global_variables": "doc",
    "tensorflow.compat.v1.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.keras.initializers.Orthogonal": "doc",
    "tensorflow.compat.v1.keras.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.random.experimental.Algorithm": "doc",
    "tensorflow.compat.v1.saved_model.experimental.save": "doc",
    "tensorflow.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.config.experimental.list_logical_devices": "doc",
    "tensorflow.random.experimental.get_global_generator": "doc",
    "tensorflow.random.experimental.set_global_generator": "doc",
    "tensorflow.compat.v1.autograph.experimental.Feature": "doc",
    "tensorflow.compat.v1.data.experimental.StatsOptions": "doc",
    "tensorflow.compat.v1.data.experimental.from_variant": "doc",
    "tensorflow.compat.v1.experimental.async_clear_error": "doc",
    "tensorflow.config.experimental.list_physical_devices": "doc",
    "tensorflow.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch": "doc",
    "tensorflow.compat.v1.feature_column.indicator_column": "doc",
    "tensorflow.compat.v1.image.per_image_standardization": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomNormal": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.lite.experimental.load_delegate": "doc",
    "tensorflow.compat.v1.summary.get_summary_description": "doc",
    "tensorflow.compat.v1.data.experimental.TFRecordWriter": "doc",
    "tensorflow.compat.v1.data.experimental.copy_to_device": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_padded": "doc",
    "tensorflow.compat.v1.keras.experimental.WideDeepModel": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomUniform": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.random_normal": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.dynamic_rnn": "doc",
    "tensorflow.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.compat.v1.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.compat.v1.data.experimental.StatsAggregator": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_window": "doc",
    "tensorflow.compat.v1.initializers.uniform_unit_scaling": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.train.experimental.FixedLossScale": "doc",
    "tensorflow.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.compat.v1.data.experimental.DatasetStructure": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_reducer": "doc",
    "tensorflow.compat.v1.data.experimental.make_csv_dataset": "doc",
    "tensorflow.compat.v1.image.combined_non_max_suppression": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_overlaps": "doc",
    "tensorflow.compat.v1.keras.initializers.VarianceScaling": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.load_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.save_img": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TfLiteRNNCell": "doc",
    "tensorflow.compat.v1.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.image.stateless_sample_distorted_bounding_box": "doc",
    "tensorflow.keras.callbacks.experimental.BackupAndRestore": "doc",
    "tensorflow.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.compat.v1.image.resize_image_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.image.sample_distorted_bounding_box": "doc",
    "tensorflow.compat.v1.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.compat.v1.keras.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.layers.experimental.set_keras_style": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TFLiteLSTMCell": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_split": "doc",
    "tensorflow.compat.v1.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.compat.v1.train.experimental.DynamicLossScale": "doc",
    "tensorflow.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_usage": "doc",
    "tensorflow.compat.v1.data.experimental.assert_cardinality": "doc",
    "tensorflow.compat.v1.data.experimental.get_single_element": "doc",
    "tensorflow.compat.v1.data.experimental.prefetch_to_device": "doc",
    "tensorflow.compat.v1.data.experimental.rejection_resample": "doc",
    "tensorflow.compat.v1.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.compat.v1.random.experimental.create_rng_state": "doc",
    "tensorflow.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.compat.v1.autograph.experimental.do_not_convert": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_growth": "doc",
    "tensorflow.compat.v1.config.experimental.set_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.set_memory_growth": "doc",
    "tensorflow.compat.v1.data.experimental.parallel_interleave": "doc",
    "tensorflow.compat.v1.experimental.output_all_intermediates": "doc",
    "tensorflow.compat.v1.image.generate_bounding_box_proposals": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_with_scores": "doc",
    "tensorflow.compat.v1.keras.experimental.export_saved_model": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.compat.v1.layers.experimental.keras_style_scope": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_fold_in": "doc",
    "tensorflow.keras.layers.experimental.SyncBatchNormalization": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_details": "doc",
    "tensorflow.compat.v1.data.experimental.TensorArrayStructure": "doc",
    "tensorflow.compat.v1.data.experimental.choose_from_datasets": "doc",
    "tensorflow.compat.v1.data.experimental.get_next_as_optional": "doc",
    "tensorflow.compat.v1.data.experimental.sample_from_datasets": "doc",
    "tensorflow.compat.v1.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.compat.v1.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.compat.v1.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.compat.v1.config.experimental.get_visible_devices": "doc",
    "tensorflow.compat.v1.config.experimental.set_visible_devices": "doc",
    "tensorflow.compat.v1.data.experimental.RaggedTensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.SparseTensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.compat.v1.data.experimental.parse_example_dataset": "doc",
    "tensorflow.compat.v1.experimental.register_filesystem_plugin": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.compat.v1.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.compat.v1.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.compat.v1.config.experimental.list_logical_devices": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.compat.v1.keras.experimental.load_from_saved_model": "doc",
    "tensorflow.compat.v1.random.experimental.get_global_generator": "doc",
    "tensorflow.compat.v1.random.experimental.set_global_generator": "doc",
    "tensorflow.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.list_physical_devices": "doc",
    "tensorflow.compat.v1.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.compat.v1.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.compat.v1.lite.experimental.convert_op_hints_to_stubs": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.compat.v1.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.compat.v1.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.compat.v1.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.compat.v1.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.compat.v1.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.compat.v1.lite.experimental.get_potentially_supported_ops": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.train.experimental.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.compat.v1.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.compat.v1.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch_with_legacy_function": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.compat.v1.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.compat.v1.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.compat.v1.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.raw_ops.SerializeIterator": "doc",
    "tensorflow.raw_ops.TensorListScatter": "doc",
    "tensorflow.compat.v1.count_up_to": "doc",
    "tensorflow.compat.v1.fingerprint": "doc",
    "tensorflow.compat.v1.nn.convolution": "doc",
    "tensorflow.keras.constraints.UnitNorm": "doc",
    "tensorflow.keras.constraints.serialize": "doc",
    "tensorflow.keras.constraints.unit_norm": "doc",
    "tensorflow.compat.v1.keras.constraints": "doc",
    "tensorflow.compat.v1.keras.constraints.get": "doc",
    "tensorflow.compat.v1.sysconfig.get_include": "doc",
    "tensorflow.compat.v1.saved_model.simple_save": "doc",
    "tensorflow.compat.v1.keras.constraints.NonNeg": "doc",
    "tensorflow.compat.v1.keras.constraints.MaxNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.non_neg": "doc",
    "tensorflow.compat.v1.keras.constraints.UnitNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.max_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.serialize": "doc",
    "tensorflow.compat.v1.keras.constraints.unit_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.Constraint": "doc",
    "tensorflow.compat.v1.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.RadialConstraint": "doc",
    "tensorflow.compat.v1.keras.constraints.radial_constraint": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianDropout": "doc",
    "tensorflow.nn.dropout": "doc",
    "tensorflow.nn.moments": "doc",
    "tensorflow.keras.layers.Dropout": "doc",
    "tensorflow.compat.v1.saved_model.signature_constants": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.build_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.classification_signature_def": "doc",
    "tensorflow.compat.v1.reset_default_graph": "doc",
    "tensorflow.keras.datasets.fashion_mnist": "doc",
    "tensorflow.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.compat.v1.get_static_value": "doc",
    "tensorflow.compat.v1.ones_initializer": "doc",
    "tensorflow.compat.v1.nn.fused_batch_norm": "doc",
    "tensorflow.compat.v1.train.summary_iterator": "doc",
    "tensorflow.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.greater": "doc",
    "tensorflow.strings.format": "doc",
    "tensorflow.raw_ops.Greater": "doc",
    "tensorflow.raw_ops.Restore": "doc",
    "tensorflow.raw_ops.LogicalOr": "doc",
    "tensorflow.raw_ops.NextAfter": "doc",
    "tensorflow.raw_ops.CollectiveGatherV2": "doc",
    "tensorflow.compat.v1.extract_image_patches": "doc",
    "tensorflow.compat.v1.train.string_input_producer": "doc",
    "tensorflow.io.SparseFeature": "doc",
    "tensorflow.nn.zero_fraction": "doc",
    "tensorflow.errors.InternalError": "doc",
    "tensorflow.compat.v1.SparseFeature": "doc",
    "tensorflow.compat.v1.assert_scalar": "doc",
    "tensorflow.compat.v1.edit_distance": "doc",
    "tensorflow.compat.v1.make_template": "doc",
    "tensorflow.compat.v1.sparse_matmul": "doc",
    "tensorflow.compat.v1.io.SparseFeature": "doc",
    "tensorflow.compat.v1.nn.zero_fraction": "doc",
    "tensorflow.compat.v1.train.AdamOptimizer": "doc",
    "tensorflow.compat.v1.train.FtrlOptimizer": "doc",
    "tensorflow.compat.v1.errors.InternalError": "doc",
    "tensorflow.compat.v1.debugging.assert_scalar": "doc",
    "tensorflow.raw_ops.AnonymousIteratorV2": "doc",
    "tensorflow.fingerprint": "doc",
    "tensorflow.nn.convolution": "doc",
    "tensorflow.keras.constraints": "doc",
    "tensorflow.raw_ops.Fingerprint": "doc",
    "tensorflow.raw_ops.RecordInput": "doc",
    "tensorflow.raw_ops.ScanDataset": "doc",
    "tensorflow.raw_ops.SkipDataset": "doc",
    "tensorflow.raw_ops.StringSplit": "doc",
    "tensorflow.raw_ops.StringStrip": "doc",
    "tensorflow.raw_ops.StringUpper": "doc",
    "tensorflow.keras.constraints.get": "doc",
    "tensorflow.sysconfig.get_include": "doc",
    "tensorflow.keras.constraints.NonNeg": "doc",
    "tensorflow.keras.constraints.MaxNorm": "doc",
    "tensorflow.keras.constraints.non_neg": "doc",
    "tensorflow.keras.constraints.max_norm": "doc",
    "tensorflow.keras.constraints.Constraint": "doc",
    "tensorflow.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.keras.constraints.RadialConstraint": "doc",
    "tensorflow.keras.constraints.radial_constraint": "doc",
    "tensorflow.keras.datasets": "doc",
    "tensorflow.train.Features": "doc",
    "tensorflow.compat.as_bytes": "doc",
    "tensorflow.io.encode_proto": "doc",
    "tensorflow.linalg.eigvalsh": "doc",
    "tensorflow.raw_ops.ConcatV2": "doc",
    "tensorflow.raw_ops.Identity": "doc",
    "tensorflow.train.FeatureLists": "doc",
    "tensorflow.keras.datasets.imdb": "doc",
    "tensorflow.signal.inverse_mdct": "doc",
    "tensorflow.signal.inverse_stft": "doc",
    "tensorflow.compat.v1.nn.in_top_k": "doc",
    "tensorflow.compat.v1.nn.softplus": "doc",
    "tensorflow.keras.datasets.cifar10": "doc",
    "tensorflow.compat.v1.GraphOptions": "doc",
    "tensorflow.compat.v1.ensure_shape": "doc",
    "tensorflow.compat.v1.string_split": "doc",
    "tensorflow.keras.datasets.cifar100": "doc",
    "tensorflow.linalg.triangular_solve": "doc",
    "tensorflow.compat.v1.keras.datasets": "doc",
    "tensorflow.compat.v1.keras.wrappers": "doc",
    "tensorflow.compat.v1.train.Features": "doc",
    "tensorflow.compat.v1.compat.as_bytes": "doc",
    "tensorflow.compat.v1.io.encode_proto": "doc",
    "tensorflow.compat.v1.linalg.eigvalsh": "doc",
    "tensorflow.compat.v1.train.FeatureLists": "doc",
    "tensorflow.compat.v1.train.FinalOpsHook": "doc",
    "tensorflow.compat.v1.train.limit_epochs": "doc",
    "tensorflow.keras.datasets.boston_housing": "doc",
    "tensorflow.keras.datasets.imdb.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb": "doc",
    "tensorflow.compat.v1.signal.inverse_mdct": "doc",
    "tensorflow.compat.v1.signal.inverse_stft": "doc",
    "tensorflow.compat.v1.data.get_output_types": "doc",
    "tensorflow.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10": "doc",
    "tensorflow.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100": "doc",
    "tensorflow.compat.v1.linalg.triangular_solve": "doc",
    "tensorflow.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.compat.v1.train.range_input_producer": "doc",
    "tensorflow.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.load_data": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_proximity": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine_proximity": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.compat.v1.saved_model.main_op_with_restore": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op_with_restore": "doc",
    "tensorflow.AggregationMethod": "doc",
    "tensorflow.convert_to_tensor": "doc",
    "tensorflow.train.CheckpointOptions": "doc",
    "tensorflow.losses.MeanAbsoluteError": "doc",
    "tensorflow.metrics.MeanAbsoluteError": "doc",
    "tensorflow.raw_ops.OptimizeDatasetV2": "doc",
    "tensorflow.raw_ops.SnapshotDatasetV2": "doc",
    "tensorflow.compat.v1.AggregationMethod": "doc",
    "tensorflow.compat.v1.convert_to_tensor": "doc",
    "tensorflow.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.test.test_src_dir_path": "doc",
    "tensorflow.compat.v1.train.CheckpointOptions": "doc",
    "tensorflow.compat.v1.train.MomentumOptimizer": "doc",
    "tensorflow.compat.v1.train.SessionRunContext": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.debugging.assert_greater": "doc",
    "tensorflow.CriticalSection": "doc",
    "tensorflow.inside_function": "doc",
    "tensorflow.io.FixedLenFeature": "doc",
    "tensorflow.raw_ops.SamplingDataset": "doc",
    "tensorflow.raw_ops.SnapshotDataset": "doc",
    "tensorflow.compat.v1.nn.relu_layer": "doc",
    "tensorflow.keras.backend.set_floatx": "doc",
    "tensorflow.compat.v1.FixedLenFeature": "doc",
    "tensorflow.keras.layers.GaussianDropout": "doc",
    "tensorflow.compat.v1.io.FixedLenFeature": "doc",
    "tensorflow.compat.v1.keras.backend.set_floatx": "doc",
    "tensorflow.compat.v1.TensorInfo.CompositeTensor": "doc",
    "tensorflow.compat.v1.random.set_global_generator": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental.VirtualDevices": "doc",
    "tensorflow.edit_distance": "doc",
    "tensorflow.raw_ops.EuclideanNorm": "doc",
    "tensorflow.debugging.assert_scalar": "doc",
    "tensorflow.compat.v1.ConditionalAccumulatorBase": "doc",
    "tensorflow.saturate_cast": "doc",
    "tensorflow.dtypes.saturate_cast": "doc",
    "tensorflow.raw_ops.DenseBincount": "doc",
    "tensorflow.raw_ops.FilterDataset": "doc",
    "tensorflow.raw_ops.MatrixInverse": "doc",
    "tensorflow.raw_ops.RandomDataset": "doc",
    "tensorflow.raw_ops.ReduceDataset": "doc",
    "tensorflow.raw_ops.RepeatDataset": "doc",
    "tensorflow.compat.v1.saturate_cast": "doc",
    "tensorflow.keras.layers.GaussianNoise": "doc",
    "tensorflow.compat.v1.dtypes.saturate_cast": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianNoise": "doc",
    "tensorflow.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.compat.v1.executing_eagerly": "doc",
    "tensorflow.compat.v1.zeros_initializer": "doc",
    "tensorflow.keras.utils.CustomObjectScope": "doc",
    "tensorflow.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.compat.v1.train.AdadeltaOptimizer": "doc",
    "tensorflow.compat.v1.train.export_meta_graph": "doc",
    "tensorflow.compat.v1.keras.utils.CustomObjectScope": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.raw_ops.DeleteSeedGenerator": "doc",
    "tensorflow.raw_ops.MultiDeviceIterator": "doc",
    "tensorflow.raw_ops.RequantizationRange": "doc",
    "tensorflow.raw_ops.TensorListScatterV2": "doc",
    "tensorflow.hessians": "doc",
    "tensorflow.compat.v1.data.get_output_shapes": "doc",
    "tensorflow.compat.v1.train.checkpoint_exists": "doc",
    "tensorflow.compat.v1.MetaGraphDef.SignatureDefEntry": "doc",
    "tensorflow.assert_greater": "doc",
    "tensorflow.raw_ops.AdjustSaturation": "doc",
    "tensorflow.raw_ops.FusedBatchNormV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormV3": "doc",
    "tensorflow.raw_ops.IdentityReaderV2": "doc",
    "tensorflow.raw_ops.RefNextIteration": "doc",
    "tensorflow.raw_ops.ResourceGatherNd": "doc",
    "tensorflow.raw_ops.TensorScatterAdd": "doc",
    "tensorflow.raw_ops.TensorScatterMax": "doc",
    "tensorflow.raw_ops.TensorScatterMin": "doc",
    "tensorflow.raw_ops.TensorScatterSub": "doc",
    "tensorflow.raw_ops.TextLineReaderV2": "doc",
    "tensorflow.truncatemod": "doc",
    "tensorflow.compat.path_to_str": "doc",
    "tensorflow.sparse.reset_shape": "doc",
    "tensorflow.raw_ops.StringLower": "doc",
    "tensorflow.raw_ops.TruncateMod": "doc",
    "tensorflow.compat.v1.string_join": "doc",
    "tensorflow.compat.v1.truncatemod": "doc",
    "tensorflow.compat.v1.compat.path_to_str": "doc",
    "tensorflow.compat.v1.sparse.reset_shape": "doc",
    "tensorflow.compat.v1.metrics.mean_tensor": "doc",
    "tensorflow.compat.v1.wrap_function": "doc",
    "tensorflow.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.compat.v1.saved_model.tag_constants": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3D": "doc",
    "tensorflow.nn.space_to_batch": "doc",
    "tensorflow.compat.v1.HistogramProto": "doc",
    "tensorflow.compat.v1.assert_integer": "doc",
    "tensorflow.compat.v1.space_to_batch": "doc",
    "tensorflow.lite.RepresentativeDataset": "doc",
    "tensorflow.compat.v1.nn.space_to_batch": "doc",
    "tensorflow.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.compat.v1.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.train.sdca_optimizer": "doc",
    "tensorflow.compat.v1.delete_session_tensor": "doc",
    "tensorflow.compat.v1.losses.get_total_loss": "doc",
    "tensorflow.compat.v1.app.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.app.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.debugging.assert_integer": "doc",
    "tensorflow.compat.v1.lite.RepresentativeDataset": "doc",
    "tensorflow.compat.v1.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.train.SyncReplicasOptimizer": "doc",
    "tensorflow.compat.v1.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.random.stateless_categorical": "doc",
    "tensorflow.compat.v1.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.compat.v1.app.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.saved_model.predict_signature_def": "doc",
    "tensorflow.compat.v1.sparse.SparseConditionalAccumulator": "doc",
    "tensorflow.raw_ops.SdcaOptimizer": "doc",
    "tensorflow.raw_ops.TensorListFromTensor": "doc",
    "tensorflow.nn.in_top_k": "doc",
    "tensorflow.nn.softplus": "doc",
    "tensorflow.ensure_shape": "doc",
    "tensorflow.keras.wrappers": "doc",
    "tensorflow.raw_ops.CopyHost": "doc",
    "tensorflow.raw_ops.InTopKV2": "doc",
    "tensorflow.raw_ops.MapStage": "doc",
    "tensorflow.raw_ops.Snapshot": "doc",
    "tensorflow.raw_ops.Softplus": "doc",
    "tensorflow.raw_ops.UniqueV2": "doc",
    "tensorflow.raw_ops.ConcatOffset": "doc",
    "tensorflow.raw_ops.RangeDataset": "doc",
    "tensorflow.raw_ops.SleepDataset": "doc",
    "tensorflow.raw_ops.StringLength": "doc",
    "tensorflow.raw_ops.StringNGrams": "doc",
    "tensorflow.raw_ops.UniqueWithCounts": "doc",
    "tensorflow.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental": "doc",
    "tensorflow.timestamp": "doc",
    "tensorflow.train.FloatList": "doc",
    "tensorflow.train.Int64List": "doc",
    "tensorflow.linalg.band_part": "doc",
    "tensorflow.linalg.diag_part": "doc",
    "tensorflow.signal.ifftshift": "doc",
    "tensorflow.sparse.transpose": "doc",
    "tensorflow.raw_ops.AssignSub": "doc",
    "tensorflow.raw_ops.IdentityN": "doc",
    "tensorflow.summary.histogram": "doc",
    "tensorflow.compat.v1.Dimension": "doc",
    "tensorflow.compat.v1.GraphKeys": "doc",
    "tensorflow.compat.v1.QueueBase": "doc",
    "tensorflow.compat.v1.diag_part": "doc",
    "tensorflow.compat.v1.gradients": "doc",
    "tensorflow.compat.v1.is_finite": "doc",
    "tensorflow.compat.v1.timestamp": "doc",
    "tensorflow.compat.v1.transpose": "doc",
    "tensorflow.compat.v1.io.QueueBase": "doc",
    "tensorflow.compat.v1.nn.xw_plus_b": "doc",
    "tensorflow.errors.AlreadyExistsError": "doc",
    "tensorflow.compat.v1.queue.QueueBase": "doc",
    "tensorflow.compat.v1.train.FloatList": "doc",
    "tensorflow.compat.v1.train.Int64List": "doc",
    "tensorflow.raw_ops.TPUOrdinalSelector": "doc",
    "tensorflow.raw_ops.TPUReplicatedInput": "doc",
    "tensorflow.raw_ops.TensorListConcatV2": "doc",
    "tensorflow.raw_ops.TensorSliceDataset": "doc",
    "tensorflow.summary.create_file_writer": "doc",
    "tensorflow.compat.v1.linalg.band_part": "doc",
    "tensorflow.compat.v1.linalg.diag_part": "doc",
    "tensorflow.compat.v1.linalg.transpose": "doc",
    "tensorflow.compat.v1.losses.Reduction": "doc",
    "tensorflow.compat.v1.signal.ifftshift": "doc",
    "tensorflow.compat.v1.sparse.transpose": "doc",
    "tensorflow.compat.v1.tables_initializer": "doc",
    "tensorflow.compat.v1.tensor_scatter_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_sub": "doc",
    "tensorflow.compat.v1.unique_with_counts": "doc",
    "tensorflow.compat.v1.debugging.is_finite": "doc",
    "tensorflow.keras.utils.get_custom_objects": "doc",
    "tensorflow.compat.v1.TensorInfo.CooSparse": "doc",
    "tensorflow.keras.layers.BatchNormalization": "doc",
    "tensorflow.keras.layers.LayerNormalization": "doc",
    "tensorflow.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.compat.v1.nn.quantized_max_pool": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNN": "doc",
    "tensorflow.compat.v1.data.get_output_classes": "doc",
    "tensorflow.compat.v1.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.train.inverse_time_decay": "doc",
    "tensorflow.compat.v1.errors.AlreadyExistsError": "doc",
    "tensorflow.compat.v1.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.metrics.precision_at_top_k": "doc",
    "tensorflow.compat.v1.app.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.keras.utils.get_custom_objects": "doc",
    "tensorflow.compat.v1.saved_model.is_valid_signature": "doc",
    "tensorflow.compat.v1.keras.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.keras.layers.LayerNormalization": "doc",
    "tensorflow.compat.v1.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.raw_ops.LogicalNot": "doc",
    "tensorflow.raw_ops.ResourceConditionalAccumulator": "doc",
    "tensorflow.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.linalg.LinearOperatorInversion": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorInversion": "doc",
    "tensorflow.losses.deserialize": "doc",
    "tensorflow.compat.v1.logical_not": "doc",
    "tensorflow.keras.layers.deserialize": "doc",
    "tensorflow.keras.losses.deserialize": "doc",
    "tensorflow.keras.backend.set_epsilon": "doc",
    "tensorflow.keras.metrics.deserialize": "doc",
    "tensorflow.keras.callbacks.TensorBoard": "doc",
    "tensorflow.errors.ResourceExhaustedError": "doc",
    "tensorflow.compat.v1.metrics.recall_at_k": "doc",
    "tensorflow.keras.regularizers.deserialize": "doc",
    "tensorflow.compat.v1.fixed_size_partitioner": "doc",
    "tensorflow.compat.v1.keras.layers.deserialize": "doc",
    "tensorflow.compat.v1.keras.losses.deserialize": "doc",
    "tensorflow.compat.v1.keras.backend.get_session": "doc",
    "tensorflow.compat.v1.keras.backend.set_epsilon": "doc",
    "tensorflow.compat.v1.keras.backend.set_session": "doc",
    "tensorflow.compat.v1.keras.metrics.deserialize": "doc",
    "tensorflow.compat.v1.keras.callbacks.TensorBoard": "doc",
    "tensorflow.compat.v1.errors.ResourceExhaustedError": "doc",
    "tensorflow.compat.v1.keras.regularizers.deserialize": "doc",
    "tensorflow.ones_initializer": "doc",
    "tensorflow.linalg.matrix_transpose": "doc",
    "tensorflow.losses.CosineSimilarity": "doc",
    "tensorflow.metrics.CosineSimilarity": "doc",
    "tensorflow.raw_ops.AdjustContrastv2": "doc",
    "tensorflow.raw_ops.AudioSpectrogram": "doc",
    "tensorflow.raw_ops.GeneratorDataset": "doc",
    "tensorflow.raw_ops.OptionalGetValue": "doc",
    "tensorflow.raw_ops.TakeWhileDataset": "doc",
    "tensorflow.compat.v1.confusion_matrix": "doc",
    "tensorflow.compat.v1.matrix_band_part": "doc",
    "tensorflow.compat.v1.matrix_transpose": "doc",
    "tensorflow.keras.losses.CosineSimilarity": "doc",
    "tensorflow.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.compat.v1.linalg.matrix_transpose": "doc",
    "tensorflow.compat.v1.keras.losses.CosineSimilarity": "doc",
    "tensorflow.compat.v1.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.metrics.MeanRelativeError": "doc",
    "tensorflow.raw_ops.DestroyResourceOp": "doc",
    "tensorflow.raw_ops.TensorArrayGather": "doc",
    "tensorflow.io.matching_files": "doc",
    "tensorflow.compat.v1.depth_to_space": "doc",
    "tensorflow.compat.v1.matching_files": "doc",
    "tensorflow.compat.v1.matrix_inverse": "doc",
    "tensorflow.compat.v1.numpy_function": "doc",
    "tensorflow.compat.v1.random_poisson": "doc",
    "tensorflow.compat.v1.recompute_grad": "doc",
    "tensorflow.compat.v1.io.matching_files": "doc",
    "tensorflow.compat.v1.nn.conv_transpose": "doc",
    "tensorflow.compat.v1.nn.depth_to_space": "doc",
    "tensorflow.compat.v1.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.metrics.true_negatives": "doc",
    "tensorflow.compat.v1.metrics.true_positives": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.sysconfig.get_link_flags": "doc",
    "tensorflow.compat.v1.RunMetadata.FunctionGraphs": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DropoutWrapper": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.compat.v1.random.stateless_truncated_normal": "doc",
    "tensorflow.keras.mixed_precision.set_global_policy": "doc",
    "tensorflow.io.deserialize_many_sparse": "doc",
    "tensorflow.raw_ops.TPUEmbeddingActivations": "doc",
    "tensorflow.compat.v1.deserialize_many_sparse": "doc",
    "tensorflow.compat.v1.io.deserialize_many_sparse": "doc",
    "tensorflow.stack": "doc",
    "tensorflow.summary": "doc",
    "tensorflow.ragged.stack": "doc",
    "tensorflow.summary.audio": "doc",
    "tensorflow.summary.scalar": "doc",
    "tensorflow.summary.trace_on": "doc",
    "tensorflow.summary.record_if": "doc",
    "tensorflow.summary.trace_off": "doc",
    "tensorflow.summary.trace_export": "doc",
    "tensorflow.summary.SummaryWriter": "doc",
    "tensorflow.errors.OutOfRangeError": "doc",
    "tensorflow.compat.v1.assert_negative": "doc",
    "tensorflow.compat.v1.custom_gradient": "doc",
    "tensorflow.compat.v1.resource_loader": "doc",
    "tensorflow.compat.v1.set_random_seed": "doc",
    "tensorflow.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.summary.should_record_summaries": "doc",
    "tensorflow.compat.v1.errors.OutOfRangeError": "doc",
    "tensorflow.compat.v1.random.set_random_seed": "doc",
    "tensorflow.compat.v1.metrics.recall_at_top_k": "doc",
    "tensorflow.compat.v1.debugging.assert_negative": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.ResidualWrapper": "doc",
    "tensorflow.compat.v1.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.compat.v1.resource_loader.load_resource": "doc",
    "tensorflow.compat.v1.resource_loader.get_data_files_path": "doc",
    "tensorflow.compat.v1.resource_loader.readahead_file_path": "doc",
    "tensorflow.compat.v1.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.resource_loader.get_path_to_datafile": "doc",
    "tensorflow.compat.v1.app.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.resource_loader.get_root_dir_with_all_resources": "doc",
    "tensorflow.compat.v1.ConfigProto.Experimental": "doc",
    "tensorflow.raw_ops.InplaceUpdate": "doc",
    "tensorflow.raw_ops.MatchingFiles": "doc",
    "tensorflow.keras.layers.Convolution1D": "doc",
    "tensorflow.keras.layers.Convolution2D": "doc",
    "tensorflow.keras.layers.Convolution3D": "doc",
    "tensorflow.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession.StepContext": "doc",
    "tensorflow.nn.batch_normalization": "doc",
    "tensorflow.nn.fractional_max_pool": "doc",
    "tensorflow.losses.mean_absolute_error": "doc",
    "tensorflow.sparse.sparse_dense_matmul": "doc",
    "tensorflow.keras.utils.custom_object_scope": "doc",
    "tensorflow.keras.losses.mean_absolute_error": "doc",
    "tensorflow.compat.v1.nn.batch_normalization": "doc",
    "tensorflow.compat.v1.nn.fractional_max_pool": "doc",
    "tensorflow.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.layers.batch_normalization": "doc",
    "tensorflow.compat.v1.lookup.TextFileInitializer": "doc",
    "tensorflow.compat.v1.sparse.sparse_dense_matmul": "doc",
    "tensorflow.compat.v1.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.metrics.mean_relative_error": "doc",
    "tensorflow.compat.v1.profiler.MultiGraphNodeProto": "doc",
    "tensorflow.compat.v1.keras.utils.custom_object_scope": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_error": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.recompute_grad": "doc",
    "tensorflow.nn.depth_to_space": "doc",
    "tensorflow.raw_ops.AdjustContrast": "doc",
    "tensorflow.raw_ops.DatasetToGraph": "doc",
    "tensorflow.raw_ops.FlatMapDataset": "doc",
    "tensorflow.raw_ops.MatrixBandPart": "doc",
    "tensorflow.raw_ops.MatrixDiagPart": "doc",
    "tensorflow.raw_ops.RebatchDataset": "doc",
    "tensorflow.raw_ops.ResizeBilinear": "doc",
    "tensorflow.raw_ops.StringToNumber": "doc",
    "tensorflow.raw_ops.UnbatchDataset": "doc",
    "tensorflow.debugging.assert_integer": "doc",
    "tensorflow.io.serialize_many_sparse": "doc",
    "tensorflow.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.raw_ops.CreateSummaryDbWriter": "doc",
    "tensorflow.raw_ops.DeserializeManySparse": "doc",
    "tensorflow.raw_ops.DummyIterationCounter": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighbor": "doc",
    "tensorflow.raw_ops.TensorListConcatLists": "doc",
    "tensorflow.compat.v1.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.io.serialize_many_sparse": "doc",
    "tensorflow.raw_ops.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.raw_ops.ExperimentalMapDataset": "doc",
    "tensorflow.raw_ops.StringToHashBucketFast": "doc",
    "tensorflow.compat.v1.data.make_initializable_iterator": "doc",
    "tensorflow.keras.preprocessing.text_dataset_from_directory": "doc",
    "tensorflow.raw_ops.DeleteMultiDeviceIterator": "doc",
    "tensorflow.raw_ops.DeleteRandomSeedGenerator": "doc",
    "tensorflow.gradients": "doc",
    "tensorflow.transpose": "doc",
    "tensorflow.queue.QueueBase": "doc",
    "tensorflow.losses.Reduction": "doc",
    "tensorflow.raw_ops.AdjustHue": "doc",
    "tensorflow.raw_ops.ApplyFtrl": "doc",
    "tensorflow.raw_ops.Timestamp": "doc",
    "tensorflow.raw_ops.Transpose": "doc",
    "tensorflow.sparse.reduce_sum": "doc",
    "tensorflow.unique_with_counts": "doc",
    "tensorflow.lite.TFLiteConverter": "doc",
    "tensorflow.compat.v1.GPUOptions": "doc",
    "tensorflow.compat.v1.assign_add": "doc",
    "tensorflow.compat.v1.assign_sub": "doc",
    "tensorflow.compat.v1.dequantize": "doc",
    "tensorflow.compat.v1.div_no_nan": "doc",
    "tensorflow.compat.v1.reduce_sum": "doc",
    "tensorflow.keras.layers.SimpleRNN": "doc",
    "tensorflow.keras.losses.Reduction": "doc",
    "tensorflow.sparse.fill_empty_rows": "doc",
    "tensorflow.compat.v1.mixed_precision": "doc",
    "tensorflow.raw_ops.ConjugateTranspose": "doc",
    "tensorflow.raw_ops.UniqueWithCountsV2": "doc",
    "tensorflow.compat.v1.flags.EnumParser": "doc",
    "tensorflow.compat.v1.flags.FlagValues": "doc",
    "tensorflow.compat.v1.keras.Sequential": "doc",
    "tensorflow.compat.v1.train.Supervisor": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum": "doc",
    "tensorflow.compat.v1.app.flags.EnumParser": "doc",
    "tensorflow.compat.v1.app.flags.FlagValues": "doc",
    "tensorflow.compat.v1.lite.TFLiteConverter": "doc",
    "tensorflow.compat.v1.keras.mixed_precision": "doc",
    "tensorflow.compat.v1.train.StepCounterHook": "doc",
    "tensorflow.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.linalg.LinearOperatorComposition": "doc",
    "tensorflow.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.compat.v1.losses.cosine_distance": "doc",
    "tensorflow.compat.v1.ragged.map_flat_values": "doc",
    "tensorflow.compat.v1.sparse.fill_empty_rows": "doc",
    "tensorflow.compat.v1.keras.models.Sequential": "doc",
    "tensorflow.compat.v1.metrics.false_negatives": "doc",
    "tensorflow.compat.v1.metrics.false_positives": "doc",
    "tensorflow.compat.v1.nn.compute_average_loss": "doc",
    "tensorflow.compat.v1.keras.backend.reset_uids": "doc",
    "tensorflow.compat.v1.mixed_precision.LossScale": "doc",
    "tensorflow.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_accuracy": "doc",
    "tensorflow.compat.v1.mixed_precision.FixedLossScale": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorComposition": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.compat.v1.mixed_precision.DynamicLossScale": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto.IdToStringEntry": "doc",
    "tensorflow.compat.v1.mixed_precision.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.compat.v1.mixed_precision.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.mixed_precision.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.metrics.mean_absolute_error": "doc",
    "tensorflow.raw_ops.DeleteSessionTensor": "doc",
    "tensorflow.raw_ops.SerializeManySparse": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRows": "doc",
    "tensorflow.raw_ops.TensorScatterUpdate": "doc",
    "tensorflow.raw_ops.CloseSummaryWriter": "doc",
    "tensorflow.raw_ops.DummySeedGenerator": "doc",
    "tensorflow.raw_ops.FlushSummaryWriter": "doc",
    "tensorflow.raw_ops.FusedBatchNormGrad": "doc",
    "tensorflow.raw_ops.ResizeBilinearGrad": "doc",
    "tensorflow.raw_ops.ResourceScatterAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterDiv": "doc",
    "tensorflow.raw_ops.ResourceScatterMax": "doc",
    "tensorflow.raw_ops.ResourceScatterMin": "doc",
    "tensorflow.raw_ops.ResourceScatterMul": "doc",
    "tensorflow.raw_ops.ResourceScatterSub": "doc",
    "tensorflow.raw_ops.SparseMatrixMatMul": "doc",
    "tensorflow.raw_ops.TensorArrayScatter": "doc",
    "tensorflow.OptionalSpec": "doc",
    "tensorflow.io.decode_image": "doc",
    "tensorflow.io.parse_tensor": "doc",
    "tensorflow.errors.AbortedError": "doc",
    "tensorflow.nn.depthwise_conv2d": "doc",
    "tensorflow.sparse.SparseTensor": "doc",
    "tensorflow.raw_ops.BatchDataset": "doc",
    "tensorflow.raw_ops.EditDistance": "doc",
    "tensorflow.raw_ops.StringFormat": "doc",
    "tensorflow.test.benchmark_config": "doc",
    "tensorflow.compat.v1.OptionalSpec": "doc",
    "tensorflow.compat.v1.SparseTensor": "doc",
    "tensorflow.compat.v1.accumulate_n": "doc",
    "tensorflow.compat.v1.matrix_solve": "doc",
    "tensorflow.compat.v1.parse_tensor": "doc",
    "tensorflow.compat.v1.searchsorted": "doc",
    "tensorflow.compat.v1.segment_prod": "doc",
    "tensorflow.errors.UnavailableError": "doc",
    "tensorflow.linalg.tensor_diag_part": "doc",
    "tensorflow.losses.MeanSquaredError": "doc",
    "tensorflow.nn.sampled_softmax_loss": "doc",
    "tensorflow.test.create_local_cluster": "doc",
    "tensorflow.compat.v1.io.decode_image": "doc",
    "tensorflow.compat.v1.io.parse_tensor": "doc",
    "tensorflow.compat.v1.RegisterGradient": "doc",
    "tensorflow.compat.v1.matrix_diag_part": "doc",
    "tensorflow.compat.v1.truncated_normal": "doc",
    "tensorflow.errors.InvalidArgumentError": "doc",
    "tensorflow.keras.losses.MeanSquaredError": "doc",
    "tensorflow.compat.v1.errors.AbortedError": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d": "doc",
    "tensorflow.compat.v1.sparse.SparseTensor": "doc",
    "tensorflow.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.assert_greater_equal": "doc",
    "tensorflow.compat.v1.constant_initializer": "doc",
    "tensorflow.compat.v1.test.benchmark_config": "doc",
    "tensorflow.compat.v1.train.AdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.RMSPropOptimizer": "doc",
    "tensorflow.compat.v1.train.basic_train_loop": "doc",
    "tensorflow.compat.v1.errors.UnavailableError": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag_part": "doc",
    "tensorflow.compat.v1.nn.sampled_softmax_loss": "doc",
    "tensorflow.compat.v1.random.truncated_normal": "doc",
    "tensorflow.compat.v1.strings.regex_full_match": "doc",
    "tensorflow.compat.v1.test.create_local_cluster": "doc",
    "tensorflow.compat.v1.errors.InvalidArgumentError": "doc",
    "tensorflow.compat.v1.random.get_global_generator": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredError": "doc",
    "tensorflow.compat.v1.debugging.assert_greater_equal": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.train.GradientDescentOptimizer": "doc",
    "tensorflow.compat.v1.metrics.true_positives_at_thresholds": "doc",
    "tensorflow.compat.v1.saved_model.regression_signature_def": "doc",
    "tensorflow.keras.preprocessing.image_dataset_from_directory": "doc",
    "tensorflow.metrics.deserialize": "doc",
    "tensorflow.raw_ops.BatchMatMul": "doc",
    "tensorflow.raw_ops.ParseTensor": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_fast": "doc",
    "tensorflow.numpy_function": "doc",
    "tensorflow.nn.conv_transpose": "doc",
    "tensorflow.metrics.BinaryAccuracy": "doc",
    "tensorflow.raw_ops.ImmutableConst": "doc",
    "tensorflow.raw_ops.RaggedBincount": "doc",
    "tensorflow.raw_ops.SparseBincount": "doc",
    "tensorflow.sysconfig.get_link_flags": "doc",
    "tensorflow.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.compat.v1.initialize_all_tables": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.nn.sufficient_statistics": "doc",
    "tensorflow.compat.v1.train.cosine_decay_restarts": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_mtimes": "doc",
    "tensorflow.compat.v1.config.run_functions_eagerly": "doc",
    "tensorflow.compat.v1.losses.compute_weighted_loss": "doc",
    "tensorflow.compat.v1.lite.OpHint.OpHintArgumentTracker": "doc",
    "tensorflow.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.get_static_value": "doc",
    "tensorflow.dynamic_partition": "doc",
    "tensorflow.executing_eagerly": "doc",
    "tensorflow.zeros_initializer": "doc",
    "tensorflow.losses.cosine_similarity": "doc",
    "tensorflow.raw_ops.CollectivePermute": "doc",
    "tensorflow.raw_ops.DeserializeSparse": "doc",
    "tensorflow.raw_ops.TensorListReserve": "doc",
    "tensorflow.compat.v1.dynamic_partition": "doc",
    "tensorflow.keras.losses.cosine_similarity": "doc",
    "tensorflow.compat.v1.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.train.import_meta_graph": "doc",
    "tensorflow.compat.v1.app.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_similarity": "doc",
    "tensorflow.io.serialize_sparse": "doc",
    "tensorflow.test.compute_gradient": "doc",
    "tensorflow.test.is_gpu_available": "doc",
    "tensorflow.compat.v1.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.import_graph_def": "doc",
    "tensorflow.compat.v1.serialize_sparse": "doc",
    "tensorflow.compat.v1.io.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.io.serialize_sparse": "doc",
    "tensorflow.compat.v1.nn.conv1d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv3d_transpose": "doc",
    "tensorflow.compat.v1.nn.log_poisson_loss": "doc",
    "tensorflow.compat.v1.nn.weighted_moments": "doc",
    "tensorflow.compat.v1.test.compute_gradient": "doc",
    "tensorflow.compat.v1.test.is_gpu_available": "doc",
    "tensorflow.compat.v1.queue.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.layers.conv2d_transpose": "doc",
    "tensorflow.compat.v1.layers.conv3d_transpose": "doc",
    "tensorflow.compat.v1.ConfigProto.DeviceCountEntry": "doc",
    "tensorflow.compat.v1.feature_column.embedding_column": "doc",
    "tensorflow.raw_ops.IteratorGetNext": "doc",
    "tensorflow.raw_ops.MatrixLogarithm": "doc",
    "tensorflow.raw_ops.PrefetchDataset": "doc",
    "tensorflow.raw_ops.QuantizedMatMul": "doc",
    "tensorflow.raw_ops.SdcaOptimizerV2": "doc",
    "tensorflow.raw_ops.SerializeTensor": "doc",
    "tensorflow.raw_ops.TensorArrayGrad": "doc",
    "tensorflow.raw_ops.TensorListStack": "doc",
    "tensorflow.raw_ops.TensorSummaryV2": "doc",
    "tensorflow.raw_ops.TruncatedNormal": "doc",
    "tensorflow.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.raw_ops.DenseCountSparseOutput": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.raw_ops.ExperimentalSleepDataset": "doc",
    "tensorflow.compat.v1.metrics.false_positives_at_thresholds": "doc",
    "tensorflow.keras.preprocessing.timeseries_dataset_from_array": "doc",
    "tensorflow.compat.v1.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.raw_ops.CollectiveBcastRecv": "doc",
    "tensorflow.raw_ops.CollectiveBcastSend": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV2": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV3": "doc",
    "tensorflow.raw_ops.UnsortedSegmentJoin": "doc",
    "tensorflow.raw_ops.UnsortedSegmentProd": "doc",
    "tensorflow.errors.PermissionDeniedError": "doc",
    "tensorflow.compat.v1.sparse_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_max": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_min": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_sub": "doc",
    "tensorflow.compat.v1.tensor_scatter_update": "doc",
    "tensorflow.compat.v1.unsorted_segment_prod": "doc",
    "tensorflow.compat.v1.variables_initializer": "doc",
    "tensorflow.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.compat.v1.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.train.replica_device_setter": "doc",
    "tensorflow.compat.v1.errors.PermissionDeniedError": "doc",
    "tensorflow.compat.v1.random.stateless_multinomial": "doc",
    "tensorflow.compat.v1.strings.unsorted_segment_join": "doc",
    "tensorflow.compat.v1.app.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.train.FeatureList": "doc",
    "tensorflow.sparse.expand_dims": "doc",
    "tensorflow.sparse.segment_sum": "doc",
    "tensorflow.compat.v1.ConfigProto": "doc",
    "tensorflow.compat.v1.RunMetadata": "doc",
    "tensorflow.compat.v1.assert_less": "doc",
    "tensorflow.compat.v1.expand_dims": "doc",
    "tensorflow.compat.v1.multinomial": "doc",
    "tensorflow.compat.v1.py_function": "doc",
    "tensorflow.compat.v1.scatter_sub": "doc",
    "tensorflow.compat.v1.segment_sum": "doc",
    "tensorflow.compat.v1.switch_case": "doc",
    "tensorflow.compat.v1.truncatediv": "doc",
    "tensorflow.compat.v1.flags.FloatParser": "doc",
    "tensorflow.compat.v1.train.FeatureList": "doc",
    "tensorflow.compat.v1.random.multinomial": "doc",
    "tensorflow.compat.v1.sparse.expand_dims": "doc",
    "tensorflow.compat.v1.sparse.segment_sum": "doc",
    "tensorflow.compat.v1.bitwise.right_shift": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto": "doc",
    "tensorflow.compat.v1.app.flags.FloatParser": "doc",
    "tensorflow.compat.v1.debugging.assert_less": "doc",
    "tensorflow.compat.v1.saved_model.SaveOptions": "doc",
    "tensorflow.compat.v1.keras.layers.Concatenate": "doc",
    "tensorflow.compat.v1.keras.layers.concatenate": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.Checker": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.CheckersEntry": "doc",
    "tensorflow.compat.v1.train.MonitoredSession.StepContext": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.raw_ops.CreateSummaryFileWriter": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorInit": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRowsGrad": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmaxGrad": "doc",
    "tensorflow.compat.v1.get_default_graph": "doc",
    "tensorflow.compat.v1.space_to_batch_nd": "doc",
    "tensorflow.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.keras.layers.AdditiveAttention": "doc",
    "tensorflow.keras.backend.image_data_format": "doc",
    "tensorflow.compat.v1.flags.CsvListSerializer": "doc",
    "tensorflow.compat.v1.manip.space_to_batch_nd": "doc",
    "tensorflow.compat.v1.train.CheckpointManager": "doc",
    "tensorflow.compat.v1.train.latest_checkpoint": "doc",
    "tensorflow.compat.v1.random.stateless_uniform": "doc",
    "tensorflow.compat.v1.sparse.reduce_max_sparse": "doc",
    "tensorflow.compat.v1.app.flags.CsvListSerializer": "doc",
    "tensorflow.compat.v1.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.compat.v1.keras.layers.AdditiveAttention": "doc",
    "tensorflow.compat.v1.keras.backend.image_data_format": "doc",
    "tensorflow.feature_column.embedding_column": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_strong": "doc",
    "tensorflow.reduce_sum": "doc",
    "tensorflow.mixed_precision": "doc",
    "tensorflow.keras.Sequential": "doc",
    "tensorflow.raw_ops.CSVDataset": "doc",
    "tensorflow.raw_ops.ComplexAbs": "doc",
    "tensorflow.raw_ops.Dequantize": "doc",
    "tensorflow.raw_ops.ExpandDims": "doc",
    "tensorflow.raw_ops.FresnelCos": "doc",
    "tensorflow.raw_ops.InplaceAdd": "doc",
    "tensorflow.raw_ops.InplaceSub": "doc",
    "tensorflow.raw_ops.MapUnstage": "doc",
    "tensorflow.raw_ops.QueueClose": "doc",
    "tensorflow.raw_ops.Requantize": "doc",
    "tensorflow.raw_ops.SqlDataset": "doc",
    "tensorflow.raw_ops.StringJoin": "doc",
    "tensorflow.raw_ops.UpperBound": "doc",
    "tensorflow.keras.mixed_precision": "doc",
    "tensorflow.ragged.map_flat_values": "doc",
    "tensorflow.keras.models.Sequential": "doc",
    "tensorflow.metrics.binary_accuracy": "doc",
    "tensorflow.nn.compute_average_loss": "doc",
    "tensorflow.raw_ops.PopulationCount": "doc",
    "tensorflow.raw_ops.PyFuncStateless": "doc",
    "tensorflow.raw_ops.SerializeSparse": "doc",
    "tensorflow.keras.backend.reset_uids": "doc",
    "tensorflow.debugging.assert_negative": "doc",
    "tensorflow.random.set_global_generator": "doc",
    "tensorflow.keras.mixed_precision.Policy": "doc",
    "tensorflow.raw_ops.GroupByWindowDataset": "doc",
    "tensorflow.raw_ops.MatchingFilesDataset": "doc",
    "tensorflow.raw_ops.NonDeterministicInts": "doc",
    "tensorflow.raw_ops.SlidingWindowDataset": "doc",
    "tensorflow.raw_ops.UnwrapDatasetVariant": "doc",
    "tensorflow.keras.metrics.binary_accuracy": "doc",
    "tensorflow.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.raw_ops.ExperimentalUniqueDataset": "doc",
    "tensorflow.keras.mixed_precision.global_policy": "doc",
    "tensorflow.compat.v1.variable_axis_size_partitioner": "doc",
    "tensorflow.test.is_built_with_xla": "doc",
    "tensorflow.linalg.lu_matrix_inverse": "doc",
    "tensorflow.linalg.tridiagonal_solve": "doc",
    "tensorflow.strings.unicode_transcode": "doc",
    "tensorflow.compat.v1.is_non_decreasing": "doc",
    "tensorflow.compat.v1.make_tensor_proto": "doc",
    "tensorflow.compat.v1.scatter_nd_update": "doc",
    "tensorflow.compat.v1.nn.ctc_unique_labels": "doc",
    "tensorflow.compat.v1.nn.normalize_moments": "doc",
    "tensorflow.compat.v1.test.StubOutForTesting": "doc",
    "tensorflow.compat.v1.test.is_built_with_xla": "doc",
    "tensorflow.compat.v1.train.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.linalg.lu_matrix_inverse": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_solve": "doc",
    "tensorflow.compat.v1.strings.unicode_transcode": "doc",
    "tensorflow.compat.v1.debugging.is_non_decreasing": "doc",
    "tensorflow.compat.v1.saved_model.build_tensor_info": "doc",
    "tensorflow.compat.v1.saved_model.utils.build_tensor_info": "doc",
    "tensorflow.io.RaggedFeature": "doc",
    "tensorflow.io.VarLenFeature": "doc",
    "tensorflow.errors.DataLossError": "doc",
    "tensorflow.errors.NotFoundError": "doc",
    "tensorflow.compat.v1.VarLenFeature": "doc",
    "tensorflow.compat.v1.random_normal": "doc",
    "tensorflow.keras.layers.Bidirectional": "doc",
    "tensorflow.compat.v1.io.RaggedFeature": "doc",
    "tensorflow.compat.v1.io.VarLenFeature": "doc",
    "tensorflow.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.compat.v1.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.errors.DataLossError": "doc",
    "tensorflow.compat.v1.errors.NotFoundError": "doc",
    "tensorflow.compat.v1.lookup.TextFileIndex": "doc",
    "tensorflow.compat.v1.logging.set_verbosity": "doc",
    "tensorflow.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.compat.v1.app.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.autograph.set_verbosity": "doc",
    "tensorflow.compat.v1.debugging.assert_shapes": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DeviceWrapper": "doc",
    "tensorflow.compat.v1.keras.layers.Bidirectional": "doc",
    "tensorflow.compat.v1.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.compat.v1.metrics.sensitivity_at_specificity": "doc",
    "tensorflow.io.FixedLenSequenceFeature": "doc",
    "tensorflow.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.linalg.banded_triangular_solve": "doc",
    "tensorflow.compat.v1.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.disable_tensor_equality": "doc",
    "tensorflow.compat.v1.matrix_triangular_solve": "doc",
    "tensorflow.compat.v1.io.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.nn.compute_accidental_hits": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.compat.v1.metrics.precision_at_thresholds": "doc",
    "tensorflow.compat.v1.extract_volume_patches": "doc",
    "tensorflow.compat.v1.sparse_fill_empty_rows": "doc",
    "tensorflow.compat.v1.variable_creator_scope": "doc",
    "tensorflow.keras.layers.ActivityRegularization": "doc",
    "tensorflow.compat.v1.test.compute_gradient_error": "doc",
    "tensorflow.compat.v1.keras.layers.ActivityRegularization": "doc",
    "tensorflow.raw_ops.MatrixDiagV2": "doc",
    "tensorflow.raw_ops.MatrixDiagV3": "doc",
    "tensorflow.raw_ops.RaggedGather": "doc",
    "tensorflow.raw_ops.RestoreSlice": "doc",
    "tensorflow.metrics.MeanSquaredError": "doc",
    "tensorflow.raw_ops.ApproximateEqual": "doc",
    "tensorflow.raw_ops.BatchMatrixSolve": "doc",
    "tensorflow.raw_ops.DataFormatDimMap": "doc",
    "tensorflow.raw_ops.DatasetFromGraph": "doc",
    "tensorflow.raw_ops.DatasetToGraphV2": "doc",
    "tensorflow.raw_ops.DynamicPartition": "doc",
    "tensorflow.raw_ops.GetSessionHandle": "doc",
    "tensorflow.raw_ops.HistogramSummary": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV2": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV3": "doc",
    "tensorflow.raw_ops.MatrixSquareRoot": "doc",
    "tensorflow.raw_ops.QuantizedMaxPool": "doc",
    "tensorflow.raw_ops.RebatchDatasetV2": "doc",
    "tensorflow.raw_ops.TensorArrayClose": "doc",
    "tensorflow.raw_ops.TensorArrayWrite": "doc",
    "tensorflow.raw_ops.TensorListConcat": "doc",
    "tensorflow.strings.regex_full_match": "doc",
    "tensorflow.raw_ops.ChooseFastestDataset": "doc",
    "tensorflow.raw_ops.DataFormatVecPermute": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV3": "doc",
    "tensorflow.raw_ops.ReaderRestoreStateV2": "doc",
    "tensorflow.raw_ops.ResourceScatterNdAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMax": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMin": "doc",
    "tensorflow.raw_ops.ResourceScatterNdSub": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV2": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV3": "doc",
    "tensorflow.raw_ops.WriteRawProtoSummary": "doc",
    "tensorflow.raw_ops.DenseToDenseSetOperation": "doc",
    "tensorflow.raw_ops.DestroyTemporaryVariable": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormal": "doc",
    "tensorflow.raw_ops.AnonymousMultiDeviceIterator": "doc",
    "tensorflow.raw_ops.ExperimentalAutoShardDataset": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_cluster": "doc",
    "tensorflow.nn.sufficient_statistics": "doc",
    "tensorflow.config.run_functions_eagerly": "doc",
    "tensorflow.raw_ops.BarrierIncompleteSize": "doc",
    "tensorflow.raw_ops.ComputeAccidentalHits": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInputV2": "doc",
    "tensorflow.raw_ops.GroupByReducerDataset": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantize": "doc",
    "tensorflow.autodiff.ForwardAccumulator": "doc",
    "tensorflow.io": "doc",
    "tensorflow.sin": "doc",
    "tensorflow.acos": "doc",
    "tensorflow.cast": "doc",
    "tensorflow.data": "doc",
    "tensorflow.lite": "doc",
    "tensorflow.sinh": "doc",
    "tensorflow.sort": "doc",
    "tensorflow.sqrt": "doc",
    "tensorflow.test": "doc",
    "tensorflow.equal": "doc",
    "tensorflow.print": "doc",
    "tensorflow.split": "doc",
    "tensorflow.compat": "doc",
    "tensorflow.concat": "doc",
    "tensorflow.errors": "doc",
    "tensorflow.linalg": "doc",
    "tensorflow.repeat": "doc",
    "tensorflow.sparse": "doc",
    "tensorflow.nn.silu": "doc",
    "tensorflow.nn.tanh": "doc",
    "tensorflow.io.gfile": "doc",
    "tensorflow.nn.swish": "doc",
    "tensorflow.linalg.lu": "doc",
    "tensorflow.linalg.qr": "doc",
    "tensorflow.test.main": "doc",
    "tensorflow.compat.v1": "doc",
    "tensorflow.io.is_jpeg": "doc",
    "tensorflow.linalg.det": "doc",
    "tensorflow.linalg.eig": "doc",
    "tensorflow.linalg.eye": "doc",
    "tensorflow.linalg.svd": "doc",
    "tensorflow.losses.mae": "doc",
    "tensorflow.nn.sigmoid": "doc",
    "tensorflow.nn.softmax": "doc",
    "tensorflow.signal.dct": "doc",
    "tensorflow.signal.fft": "doc",
    "tensorflow.sparse.add": "doc",
    "tensorflow.sparse.eye": "doc",
    "tensorflow.dtypes.cast": "doc",
    "tensorflow.keras.utils": "doc",
    "tensorflow.linalg.diag": "doc",
    "tensorflow.linalg.eigh": "doc",
    "tensorflow.linalg.expm": "doc",
    "tensorflow.linalg.logm": "doc",
    "tensorflow.linalg.norm": "doc",
    "tensorflow.linalg.pinv": "doc",
    "tensorflow.lite.OpsSet": "doc",
    "tensorflow.losses.mape": "doc",
    "tensorflow.signal.mdct": "doc",
    "tensorflow.signal.rfft": "doc",
    "tensorflow.sparse.mask": "doc",
    "tensorflow.data.Dataset": "doc",
    "tensorflow.data.Options": "doc",
    "tensorflow.io.read_file": "doc",
    "tensorflow.linalg.cross": "doc",
    "tensorflow.linalg.lstsq": "doc",
    "tensorflow.linalg.solve": "doc",
    "tensorflow.linalg.sqrtm": "doc",
    "tensorflow.linalg.trace": "doc",
    "tensorflow.metrics.mape": "doc",
    "tensorflow.raw_ops.Cast": "doc",
    "tensorflow.raw_ops.Exit": "doc",
    "tensorflow.raw_ops.Zeta": "doc",
    "tensorflow.sparse.cross": "doc",
    "tensorflow.sparse.slice": "doc",
    "tensorflow.sparse.split": "doc",
    "tensorflow.compat.v1.io": "doc",
    "tensorflow.compat.v1.nn": "doc",
    "tensorflow.compat.v1.qr": "doc",
    "tensorflow.io.decode_bmp": "doc",
    "tensorflow.io.decode_csv": "doc",
    "tensorflow.io.decode_gif": "doc",
    "tensorflow.io.decode_png": "doc",
    "tensorflow.io.decode_raw": "doc",
    "tensorflow.io.encode_png": "doc",
    "tensorflow.io.gfile.copy": "doc",
    "tensorflow.io.gfile.glob": "doc",
    "tensorflow.io.gfile.walk": "doc",
    "tensorflow.io.write_file": "doc",
    "tensorflow.linalg.logdet": "doc",
    "tensorflow.linalg.matmul": "doc",
    "tensorflow.linalg.matvec": "doc",
    "tensorflow.raw_ops.Enter": "doc",
    "tensorflow.raw_ops.Print": "doc",
    "tensorflow.raw_ops.Rsqrt": "doc",
    "tensorflow.raw_ops.Split": "doc",
    "tensorflow.signal.ifft2d": "doc",
    "tensorflow.signal.ifft3d": "doc",
    "tensorflow.sparse.concat": "doc",
    "tensorflow.sparse.retain": "doc",
    "tensorflow.strings.split": "doc",
    "tensorflow.strings.upper": "doc",
    "tensorflow.compat.v1.abs": "doc",
    "tensorflow.compat.v1.add": "doc",
    "tensorflow.compat.v1.app": "doc",
    "tensorflow.compat.v1.cos": "doc",
    "tensorflow.compat.v1.div": "doc",
    "tensorflow.compat.v1.erf": "doc",
    "tensorflow.compat.v1.exp": "doc",
    "tensorflow.compat.v1.eye": "doc",
    "tensorflow.compat.v1.fft": "doc",
    "tensorflow.compat.v1.log": "doc",
    "tensorflow.compat.v1.mod": "doc",
    "tensorflow.compat.v1.pad": "doc",
    "tensorflow.compat.v1.pow": "doc",
    "tensorflow.compat.v1.sin": "doc",
    "tensorflow.compat.v1.svd": "doc",
    "tensorflow.compat.v1.tan": "doc",
    "tensorflow.compat.v1.xla": "doc",
    "tensorflow.compat.as_text": "doc",
    "tensorflow.errors.OpError": "doc",
    "tensorflow.io.decode_jpeg": "doc",
    "tensorflow.io.encode_jpeg": "doc",
    "tensorflow.io.gfile.GFile": "doc",
    "tensorflow.io.gfile.mkdir": "doc",
    "tensorflow.io.write_graph": "doc",
    "tensorflow.linalg.adjoint": "doc",
    "tensorflow.linalg.slogdet": "doc",
    "tensorflow.losses.Poisson": "doc",
    "tensorflow.losses.poisson": "doc",
    "tensorflow.raw_ops.Concat": "doc",
    "tensorflow.raw_ops.Expint": "doc",
    "tensorflow.raw_ops.SplitV": "doc",
    "tensorflow.raw_ops.Substr": "doc",
    "tensorflow.sparse.maximum": "doc",
    "tensorflow.sparse.reorder": "doc",
    "tensorflow.sparse.reshape": "doc",
    "tensorflow.sparse.softmax": "doc",
    "tensorflow.strings.length": "doc",
    "tensorflow.strings.ngrams": "doc",
    "tensorflow.test.Benchmark": "doc",
    "tensorflow.compat.v1.acos": "doc",
    "tensorflow.compat.v1.asin": "doc",
    "tensorflow.compat.v1.atan": "doc",
    "tensorflow.compat.v1.case": "doc",
    "tensorflow.compat.v1.cast": "doc",
    "tensorflow.compat.v1.ceil": "doc",
    "tensorflow.compat.v1.cond": "doc",
    "tensorflow.compat.v1.conj": "doc",
    "tensorflow.compat.v1.cosh": "doc",
    "tensorflow.compat.v1.data": "doc",
    "tensorflow.compat.v1.diag": "doc",
    "tensorflow.compat.v1.erfc": "doc",
    "tensorflow.compat.v1.fill": "doc",
    "tensorflow.compat.v1.less": "doc",
    "tensorflow.compat.v1.lite": "doc",
    "tensorflow.compat.v1.mlir": "doc",
    "tensorflow.compat.v1.norm": "doc",
    "tensorflow.compat.v1.rank": "doc",
    "tensorflow.compat.v1.real": "doc",
    "tensorflow.compat.v1.roll": "doc",
    "tensorflow.compat.v1.scan": "doc",
    "tensorflow.compat.v1.sign": "doc",
    "tensorflow.compat.v1.sinh": "doc",
    "tensorflow.compat.v1.size": "doc",
    "tensorflow.compat.v1.sort": "doc",
    "tensorflow.compat.v1.sqrt": "doc",
    "tensorflow.compat.v1.tanh": "doc",
    "tensorflow.compat.v1.test": "doc",
    "tensorflow.compat.v1.tile": "doc",
    "tensorflow.compat.v1.zeta": "doc",
    "tensorflow.io.decode_proto": "doc",
    "tensorflow.io.gfile.remove": "doc",
    "tensorflow.io.gfile.rename": "doc",
    "tensorflow.io.gfile.rmtree": "doc",
    "tensorflow.linalg.cholesky": "doc",
    "tensorflow.linalg.lu_solve": "doc",
    "tensorflow.linalg.set_diag": "doc",
    "tensorflow.lite.TargetSpec": "doc",
    "tensorflow.sparse.to_dense": "doc",
    "tensorflow.compat.v1.DType": "doc",
    "tensorflow.compat.v1.Event": "doc",
    "tensorflow.compat.v1.Graph": "doc",
    "tensorflow.compat.v1.Print": "doc",
    "tensorflow.compat.v1.acosh": "doc",
    "tensorflow.compat.v1.add_n": "doc",
    "tensorflow.compat.v1.angle": "doc",
    "tensorflow.compat.v1.asinh": "doc",
    "tensorflow.compat.v1.atan2": "doc",
    "tensorflow.compat.v1.atanh": "doc",
    "tensorflow.compat.v1.audio": "doc",
    "tensorflow.compat.v1.cross": "doc",
    "tensorflow.compat.v1.equal": "doc",
    "tensorflow.compat.v1.expm1": "doc",
    "tensorflow.compat.v1.fft2d": "doc",
    "tensorflow.compat.v1.fft3d": "doc",
    "tensorflow.compat.v1.flags": "doc",
    "tensorflow.compat.v1.floor": "doc",
    "tensorflow.compat.v1.foldl": "doc",
    "tensorflow.compat.v1.foldr": "doc",
    "tensorflow.compat.v1.gfile": "doc",
    "tensorflow.compat.v1.group": "doc",
    "tensorflow.compat.v1.keras": "doc",
    "tensorflow.compat.v1.lbeta": "doc",
    "tensorflow.compat.v1.log1p": "doc",
    "tensorflow.compat.v1.manip": "doc",
    "tensorflow.compat.v1.no_op": "doc",
    "tensorflow.compat.v1.print": "doc",
    "tensorflow.compat.v1.queue": "doc",
    "tensorflow.compat.v1.range": "doc",
    "tensorflow.compat.v1.round": "doc",
    "tensorflow.compat.v1.rsqrt": "doc",
    "tensorflow.compat.v1.shape": "doc",
    "tensorflow.compat.v1.slice": "doc",
    "tensorflow.compat.v1.split": "doc",
    "tensorflow.compat.v1.trace": "doc",
    "tensorflow.compat.v1.train": "doc",
    "tensorflow.compat.v1.tuple": "doc",
    "tensorflow.compat.v1.where": "doc",
    "tensorflow.compat.v1.zeros": "doc",
    "tensorflow.data.DatasetSpec": "doc",
    "tensorflow.io.decode_base64": "doc",
    "tensorflow.io.encode_base64": "doc",
    "tensorflow.io.gfile.listdir": "doc",
    "tensorflow.io.parse_example": "doc",
    "tensorflow.keras.losses.mae": "doc",
    "tensorflow.linalg.normalize": "doc",
    "tensorflow.linalg.tensordot": "doc",
    "tensorflow.losses.serialize": "doc",
    "tensorflow.compat.v1.Assert": "doc",
    "tensorflow.compat.v1.Module": "doc",
    "tensorflow.compat.v1.Tensor": "doc",
    "tensorflow.compat.v1.argmax": "doc",
    "tensorflow.compat.v1.argmin": "doc",
    "tensorflow.compat.v1.assign": "doc",
    "tensorflow.compat.v1.compat": "doc",
    "tensorflow.compat.v1.concat": "doc",
    "tensorflow.compat.v1.config": "doc",
    "tensorflow.compat.v1.cumsum": "doc",
    "tensorflow.compat.v1.device": "doc",
    "tensorflow.compat.v1.divide": "doc",
    "tensorflow.compat.v1.dtypes": "doc",
    "tensorflow.compat.v1.errors": "doc",
    "tensorflow.compat.v1.gather": "doc",
    "tensorflow.compat.v1.ifft2d": "doc",
    "tensorflow.compat.v1.ifft3d": "doc",
    "tensorflow.compat.v1.igamma": "doc",
    "tensorflow.compat.v1.is_inf": "doc",
    "tensorflow.compat.v1.is_nan": "doc",
    "tensorflow.compat.v1.layers": "doc",
    "tensorflow.compat.v1.lgamma": "doc",
    "tensorflow.compat.v1.linalg": "doc",
    "tensorflow.compat.v1.lookup": "doc",
    "tensorflow.compat.v1.losses": "doc",
    "tensorflow.compat.v1.map_fn": "doc",
    "tensorflow.compat.v1.matmul": "doc",
    "tensorflow.compat.v1.nn.elu": "doc",
    "tensorflow.compat.v1.nn.lrn": "doc",
    "tensorflow.compat.v1.ragged": "doc",
    "tensorflow.compat.v1.random": "doc",
    "tensorflow.compat.v1.repeat": "doc",
    "tensorflow.compat.v1.signal": "doc",
    "tensorflow.compat.v1.sparse": "doc",
    "tensorflow.compat.v1.square": "doc",
    "tensorflow.compat.v1.unique": "doc",
    "tensorflow.compat.as_str_any": "doc",
    "tensorflow.io.TFRecordWriter": "doc",
    "tensorflow.io.gfile.makedirs": "doc",
    "tensorflow.keras.losses.mape": "doc",
    "tensorflow.keras.metrics.mae": "doc",
    "tensorflow.saved_model.Asset": "doc",
    "tensorflow.sparse.from_dense": "doc",
    "tensorflow.sparse.reduce_max": "doc",
    "tensorflow.compat.v1.NodeDef": "doc",
    "tensorflow.compat.v1.OpError": "doc",
    "tensorflow.compat.v1.Summary": "doc",
    "tensorflow.compat.v1.app.run": "doc",
    "tensorflow.compat.v1.arg_max": "doc",
    "tensorflow.compat.v1.arg_min": "doc",
    "tensorflow.compat.v1.argsort": "doc",
    "tensorflow.compat.v1.betainc": "doc",
    "tensorflow.compat.v1.bitwise": "doc",
    "tensorflow.compat.v1.complex": "doc",
    "tensorflow.compat.v1.cumprod": "doc",
    "tensorflow.compat.v1.digamma": "doc",
    "tensorflow.compat.v1.igammac": "doc",
    "tensorflow.compat.v1.logging": "doc",
    "tensorflow.compat.v1.maximum": "doc",
    "tensorflow.compat.v1.metrics": "doc",
    "tensorflow.compat.v1.nn.pool": "doc",
    "tensorflow.compat.v1.nn.relu": "doc",
    "tensorflow.compat.v1.nn.selu": "doc",
    "tensorflow.compat.v1.nn.silu": "doc",
    "tensorflow.compat.v1.nn.tanh": "doc",
    "tensorflow.compat.v1.one_hot": "doc",
    "tensorflow.compat.v1.py_func": "doc",
    "tensorflow.compat.v1.realdiv": "doc",
    "tensorflow.compat.v1.reshape": "doc",
    "tensorflow.compat.v1.reverse": "doc",
    "tensorflow.compat.v1.shape_n": "doc",
    "tensorflow.compat.v1.sigmoid": "doc",
    "tensorflow.compat.v1.squeeze": "doc",
    "tensorflow.compat.v1.strings": "doc",
    "tensorflow.compat.v1.truediv": "doc",
    "tensorflow.compat.v1.unstack": "doc",
    "tensorflow.compat.v1.version": "doc",
    "tensorflow.io.TFRecordOptions": "doc",
    "tensorflow.keras.layers.Layer": "doc",
    "tensorflow.keras.metrics.mape": "doc",
    "tensorflow.linalg.global_norm": "doc",
    "tensorflow.linalg.matrix_rank": "doc",
    "tensorflow.linalg.tensor_diag": "doc",
    "tensorflow.compat.v1.GraphDef": "doc",
    "tensorflow.compat.v1.TypeSpec": "doc",
    "tensorflow.compat.v1.Variable": "doc",
    "tensorflow.compat.v1.as_dtype": "doc",
    "tensorflow.compat.v1.cholesky": "doc",
    "tensorflow.compat.v1.constant": "doc",
    "tensorflow.compat.v1.floordiv": "doc",
    "tensorflow.compat.v1.floormod": "doc",
    "tensorflow.compat.v1.function": "doc",
    "tensorflow.compat.v1.get_seed": "doc",
    "tensorflow.compat.v1.io.gfile": "doc",
    "tensorflow.compat.v1.meshgrid": "doc",
    "tensorflow.compat.v1.multiply": "doc",
    "tensorflow.compat.v1.negative": "doc",
    "tensorflow.compat.v1.nn.crelu": "doc",
    "tensorflow.compat.v1.nn.relu6": "doc",
    "tensorflow.compat.v1.nn.swish": "doc",
    "tensorflow.compat.v1.nn.top_k": "doc",
    "tensorflow.compat.v1.op_scope": "doc",
    "tensorflow.compat.v1.profiler": "doc",
    "tensorflow.compat.v1.quantize": "doc",
    "tensorflow.compat.v1.spectral": "doc",
    "tensorflow.compat.v1.subtract": "doc",
    "tensorflow.compat.v1.to_float": "doc",
    "tensorflow.compat.v1.to_int32": "doc",
    "tensorflow.compat.v1.to_int64": "doc",
    "tensorflow.compat.v1.user_ops": "doc",
    "tensorflow.compat.v1.where_v2": "doc",
    "tensorflow.errors.UnknownError": "doc",
    "tensorflow.keras.utils.Progbar": "doc",
    "tensorflow.linalg.l2_normalize": "doc",
    "tensorflow.sparse.cross_hashed": "doc",
    "tensorflow.sparse.segment_mean": "doc",
    "tensorflow.compat.v1.AttrValue": "doc",
    "tensorflow.compat.v1.FIFOQueue": "doc",
    "tensorflow.compat.v1.Operation": "doc",
    "tensorflow.compat.v1.app.flags": "doc",
    "tensorflow.compat.v1.as_string": "doc",
    "tensorflow.compat.v1.autograph": "doc",
    "tensorflow.compat.v1.container": "doc",
    "tensorflow.compat.v1.debugging": "doc",
    "tensorflow.compat.v1.floor_div": "doc",
    "tensorflow.compat.v1.gather_nd": "doc",
    "tensorflow.compat.v1.linalg.lu": "doc",
    "tensorflow.compat.v1.linalg.qr": "doc",
    "tensorflow.compat.v1.nn.conv1d": "doc",
    "tensorflow.compat.v1.nn.conv2d": "doc",
    "tensorflow.compat.v1.nn.conv3d": "doc",
    "tensorflow.compat.v1.not_equal": "doc",
    "tensorflow.compat.v1.ones_like": "doc",
    "tensorflow.compat.v1.polygamma": "doc",
    "tensorflow.compat.v1.python_io": "doc",
    "tensorflow.compat.v1.read_file": "doc",
    "tensorflow.compat.v1.setdiff1d": "doc",
    "tensorflow.compat.v1.sysconfig": "doc",
    "tensorflow.compat.v1.tensordot": "doc",
    "tensorflow.compat.v1.test.main": "doc",
    "tensorflow.compat.v1.to_double": "doc",
    "tensorflow.data.TFRecordDataset": "doc",
    "tensorflow.io.decode_compressed": "doc",
    "tensorflow.keras.backend.floatx": "doc",
    "tensorflow.keras.layers.Flatten": "doc",
    "tensorflow.keras.layers.Maximum": "doc",
    "tensorflow.keras.layers.Reshape": "doc",
    "tensorflow.keras.layers.Softmax": "doc",
    "tensorflow.keras.layers.maximum": "doc",
    "tensorflow.keras.losses.Poisson": "doc",
    "tensorflow.keras.losses.poisson": "doc",
    "tensorflow.keras.utils.Sequence": "doc",
    "tensorflow.keras.utils.get_file": "doc",
    "tensorflow.test.gpu_device_name": "doc",
    "tensorflow.compat.v1.DeviceSpec": "doc",
    "tensorflow.compat.v1.LMDBReader": "doc",
    "tensorflow.compat.v1.LogMessage": "doc",
    "tensorflow.compat.v1.NoGradient": "doc",
    "tensorflow.compat.v1.ReaderBase": "doc",
    "tensorflow.compat.v1.TensorInfo": "doc",
    "tensorflow.compat.v1.TensorSpec": "doc",
    "tensorflow.compat.v1.decode_csv": "doc",
    "tensorflow.compat.v1.decode_raw": "doc",
    "tensorflow.compat.v1.flags.Flag": "doc",
    "tensorflow.compat.v1.get_logger": "doc",
    "tensorflow.compat.v1.gfile.Copy": "doc",
    "tensorflow.compat.v1.gfile.Glob": "doc",
    "tensorflow.compat.v1.gfile.Open": "doc",
    "tensorflow.compat.v1.gfile.Walk": "doc",
    "tensorflow.compat.v1.io.is_jpeg": "doc",
    "tensorflow.compat.v1.less_equal": "doc",
    "tensorflow.compat.v1.linalg.det": "doc",
    "tensorflow.compat.v1.linalg.eye": "doc",
    "tensorflow.compat.v1.linalg.svd": "doc",
    "tensorflow.compat.v1.manip.roll": "doc",
    "tensorflow.compat.v1.manip.tile": "doc",
    "tensorflow.compat.v1.name_scope": "doc",
    "tensorflow.compat.v1.nn.l2_loss": "doc",
    "tensorflow.compat.v1.nn.raw_rnn": "doc",
    "tensorflow.compat.v1.nn.sigmoid": "doc",
    "tensorflow.compat.v1.nn.softmax": "doc",
    "tensorflow.compat.v1.reciprocal": "doc",
    "tensorflow.compat.v1.reduce_all": "doc",
    "tensorflow.compat.v1.reduce_any": "doc",
    "tensorflow.compat.v1.reduce_max": "doc",
    "tensorflow.compat.v1.reduce_min": "doc",
    "tensorflow.compat.v1.reverse_v2": "doc",
    "tensorflow.compat.v1.scalar_mul": "doc",
    "tensorflow.compat.v1.scatter_nd": "doc",
    "tensorflow.compat.v1.signal.dct": "doc",
    "tensorflow.compat.v1.signal.fft": "doc",
    "tensorflow.compat.v1.sparse.add": "doc",
    "tensorflow.compat.v1.sparse.eye": "doc",
    "tensorflow.compat.v1.sparse_add": "doc",
    "tensorflow.compat.v1.while_loop": "doc",
    "tensorflow.compat.v1.write_file": "doc",
    "tensorflow.compat.v1.zeros_like": "doc",
    "tensorflow.errors.CancelledError": "doc",
    "tensorflow.io.extract_jpeg_shape": "doc",
    "tensorflow.keras.metrics.Poisson": "doc",
    "tensorflow.keras.metrics.poisson": "doc",
    "tensorflow.keras.utils.normalize": "doc",
    "tensorflow.linalg.cholesky_solve": "doc",
    "tensorflow.linalg.lu_reconstruct": "doc",
    "tensorflow.sparse.segment_sqrt_n": "doc",
    "tensorflow.compat.v1.TensorArray": "doc",
    "tensorflow.compat.v1.TensorShape": "doc",
    "tensorflow.compat.v1.assert_near": "doc",
    "tensorflow.compat.v1.assert_rank": "doc",
    "tensorflow.compat.v1.assert_type": "doc",
    "tensorflow.compat.v1.dtypes.cast": "doc",
    "tensorflow.compat.v1.flags.Error": "doc",
    "tensorflow.compat.v1.flags.FLAGS": "doc",
    "tensorflow.compat.v1.gfile.GFile": "doc",
    "tensorflow.compat.v1.gfile.MkDir": "doc",
    "tensorflow.compat.v1.global_norm": "doc",
    "tensorflow.compat.v1.keras.Model": "doc",
    "tensorflow.compat.v1.keras.utils": "doc",
    "tensorflow.compat.v1.linalg.diag": "doc",
    "tensorflow.compat.v1.linalg.eigh": "doc",
    "tensorflow.compat.v1.linalg.expm": "doc",
    "tensorflow.compat.v1.linalg.logm": "doc",
    "tensorflow.compat.v1.linalg.norm": "doc",
    "tensorflow.compat.v1.linalg.pinv": "doc",
    "tensorflow.compat.v1.lite.OpHint": "doc",
    "tensorflow.compat.v1.lite.OpsSet": "doc",
    "tensorflow.compat.v1.log_sigmoid": "doc",
    "tensorflow.compat.v1.logging.log": "doc",
    "tensorflow.compat.v1.logical_and": "doc",
    "tensorflow.compat.v1.matrix_diag": "doc",
    "tensorflow.compat.v1.metrics.auc": "doc",
    "tensorflow.compat.v1.nn.avg_pool": "doc",
    "tensorflow.compat.v1.nn.bias_add": "doc",
    "tensorflow.compat.v1.nn.ctc_loss": "doc",
    "tensorflow.compat.v1.nn.max_pool": "doc",
    "tensorflow.compat.v1.nn.nce_loss": "doc",
    "tensorflow.compat.v1.nn.rnn_cell": "doc",
    "tensorflow.compat.v1.nn.softsign": "doc",
    "tensorflow.compat.v1.no_gradient": "doc",
    "tensorflow.compat.v1.placeholder": "doc",
    "tensorflow.compat.v1.quantize_v2": "doc",
    "tensorflow.compat.v1.random_crop": "doc",
    "tensorflow.compat.v1.reduce_join": "doc",
    "tensorflow.compat.v1.reduce_mean": "doc",
    "tensorflow.compat.v1.reduce_prod": "doc",
    "tensorflow.compat.v1.saved_model": "doc",
    "tensorflow.compat.v1.scatter_add": "doc",
    "tensorflow.compat.v1.scatter_div": "doc",
    "tensorflow.compat.v1.scatter_max": "doc",
    "tensorflow.compat.v1.scatter_min": "doc",
    "tensorflow.compat.v1.scatter_mul": "doc",
    "tensorflow.compat.v1.segment_max": "doc",
    "tensorflow.compat.v1.segment_min": "doc",
    "tensorflow.compat.v1.signal.mdct": "doc",
    "tensorflow.compat.v1.signal.rfft": "doc",
    "tensorflow.compat.v1.sparse.mask": "doc",
    "tensorflow.compat.v1.sparse_mask": "doc",
    "tensorflow.compat.v1.to_bfloat16": "doc",
    "tensorflow.compat.v1.train.Saver": "doc",
    "tensorflow.compat.v1.train.batch": "doc",
    "tensorflow.compat.dimension_value": "doc",
    "tensorflow.io.decode_json_example": "doc",
    "tensorflow.keras.layers.Attention": "doc",
    "tensorflow.keras.layers.serialize": "doc",
    "tensorflow.keras.losses.serialize": "doc",
    "tensorflow.keras.utils.plot_model": "doc",
    "tensorflow.compat.v1.GradientTape": "doc",
    "tensorflow.compat.v1.MetaGraphDef": "doc",
    "tensorflow.compat.v1.NameAttrList": "doc",
    "tensorflow.compat.v1.RaggedTensor": "doc",
    "tensorflow.compat.v1.assert_equal": "doc",
    "tensorflow.compat.v1.boolean_mask": "doc",
    "tensorflow.compat.v1.broadcast_to": "doc",
    "tensorflow.compat.v1.clip_by_norm": "doc",
    "tensorflow.compat.v1.data.Dataset": "doc",
    "tensorflow.compat.v1.data.Options": "doc",
    "tensorflow.compat.v1.dtypes.DType": "doc",
    "tensorflow.compat.v1.flags.DEFINE": "doc",
    "tensorflow.compat.v1.get_variable": "doc",
    "tensorflow.compat.v1.gfile.Remove": "doc",
    "tensorflow.compat.v1.gfile.Rename": "doc",
    "tensorflow.compat.v1.io.read_file": "doc",
    "tensorflow.compat.v1.keras.layers": "doc",
    "tensorflow.compat.v1.keras.losses": "doc",
    "tensorflow.compat.v1.keras.models": "doc",
    "tensorflow.compat.v1.layers.Dense": "doc",
    "tensorflow.compat.v1.layers.Layer": "doc",
    "tensorflow.compat.v1.layers.dense": "doc",
    "tensorflow.compat.v1.linalg.cross": "doc",
    "tensorflow.compat.v1.linalg.lstsq": "doc",
    "tensorflow.compat.v1.linalg.solve": "doc",
    "tensorflow.compat.v1.linalg.sqrtm": "doc",
    "tensorflow.compat.v1.linalg.trace": "doc",
    "tensorflow.compat.v1.load_library": "doc",
    "tensorflow.compat.v1.logging.vlog": "doc",
    "tensorflow.compat.v1.logging.warn": "doc",
    "tensorflow.compat.v1.make_ndarray": "doc",
    "tensorflow.compat.v1.metrics.mean": "doc",
    "tensorflow.compat.v1.nn.erosion2d": "doc",
    "tensorflow.compat.v1.ragged.cross": "doc",
    "tensorflow.compat.v1.ragged.range": "doc",
    "tensorflow.compat.v1.random.gamma": "doc",
    "tensorflow.compat.v1.random_gamma": "doc",
    "tensorflow.compat.v1.segment_mean": "doc",
    "tensorflow.compat.v1.signal.fft2d": "doc",
    "tensorflow.compat.v1.signal.fft3d": "doc",
    "tensorflow.compat.v1.signal.frame": "doc",
    "tensorflow.compat.v1.sparse.cross": "doc",
    "tensorflow.compat.v1.sparse.merge": "doc",
    "tensorflow.compat.v1.sparse.slice": "doc",
    "tensorflow.compat.v1.sparse.split": "doc",
    "tensorflow.compat.v1.sparse_merge": "doc",
    "tensorflow.compat.v1.sparse_slice": "doc",
    "tensorflow.compat.v1.sparse_split": "doc",
    "tensorflow.compat.v1.spectral.dct": "doc",
    "tensorflow.compat.v1.spectral.fft": "doc",
    "tensorflow.compat.v1.strings.join": "doc",
    "tensorflow.compat.v1.to_complex64": "doc",
    "tensorflow.compat.v1.train.JobDef": "doc",
    "tensorflow.compat.v1.train.Server": "doc",
    "tensorflow.io.decode_and_crop_jpeg": "doc",
    "tensorflow.io.match_filenames_once": "doc",
    "tensorflow.io.parse_single_example": "doc",
    "tensorflow.keras.metrics.serialize": "doc",
    "tensorflow.test.is_built_with_cuda": "doc",
    "tensorflow.test.is_built_with_rocm": "doc",
    "tensorflow.compat.v1.IndexedSlices": "doc",
    "tensorflow.compat.v1.PriorityQueue": "doc",
    "tensorflow.compat.v1.Summary.Audio": "doc",
    "tensorflow.compat.v1.Summary.Image": "doc",
    "tensorflow.compat.v1.Summary.Value": "doc",
    "tensorflow.compat.v1.VariableScope": "doc",
    "tensorflow.compat.v1.all_variables": "doc",
    "tensorflow.compat.v1.clip_by_value": "doc",
    "tensorflow.compat.v1.colocate_with": "doc",
    "tensorflow.compat.v1.count_nonzero": "doc",
    "tensorflow.compat.v1.decode_base64": "doc",
    "tensorflow.compat.v1.encode_base64": "doc",
    "tensorflow.compat.v1.greater_equal": "doc",
    "tensorflow.compat.v1.io.decode_bmp": "doc",
    "tensorflow.compat.v1.io.decode_csv": "doc",
    "tensorflow.compat.v1.io.decode_gif": "doc",
    "tensorflow.compat.v1.io.decode_png": "doc",
    "tensorflow.compat.v1.io.decode_raw": "doc",
    "tensorflow.compat.v1.io.encode_png": "doc",
    "tensorflow.compat.v1.io.gfile.copy": "doc",
    "tensorflow.compat.v1.io.gfile.glob": "doc",
    "tensorflow.compat.v1.io.gfile.walk": "doc",
    "tensorflow.compat.v1.io.write_file": "doc",
    "tensorflow.compat.v1.keras.backend": "doc",
    "tensorflow.compat.v1.keras.metrics": "doc",
    "tensorflow.compat.v1.layers.Conv1D": "doc",
    "tensorflow.compat.v1.layers.Conv2D": "doc",
    "tensorflow.compat.v1.layers.Conv3D": "doc",
    "tensorflow.compat.v1.layers.conv1d": "doc",
    "tensorflow.compat.v1.layers.conv2d": "doc",
    "tensorflow.compat.v1.layers.conv3d": "doc",
    "tensorflow.compat.v1.linalg.logdet": "doc",
    "tensorflow.compat.v1.linalg.matmul": "doc",
    "tensorflow.compat.v1.linalg.matvec": "doc",
    "tensorflow.compat.v1.logging.debug": "doc",
    "tensorflow.compat.v1.logging.fatal": "doc",
    "tensorflow.compat.v1.logging.flush": "doc",
    "tensorflow.compat.v1.manip.reshape": "doc",
    "tensorflow.compat.v1.manip.reverse": "doc",
    "tensorflow.compat.v1.nn.avg_pool1d": "doc",
    "tensorflow.compat.v1.nn.avg_pool2d": "doc",
    "tensorflow.compat.v1.nn.avg_pool3d": "doc",
    "tensorflow.compat.v1.nn.dilation2d": "doc",
    "tensorflow.compat.v1.nn.leaky_relu": "doc",
    "tensorflow.compat.v1.nn.max_pool1d": "doc",
    "tensorflow.compat.v1.nn.max_pool2d": "doc",
    "tensorflow.compat.v1.nn.max_pool3d": "doc",
    "tensorflow.compat.v1.nn.static_rnn": "doc",
    "tensorflow.compat.v1.parse_example": "doc",
    "tensorflow.compat.v1.random.normal": "doc",
    "tensorflow.compat.v1.regex_replace": "doc",
    "tensorflow.compat.v1.sequence_mask": "doc",
    "tensorflow.compat.v1.signal.ifft2d": "doc",
    "tensorflow.compat.v1.signal.ifft3d": "doc",
    "tensorflow.compat.v1.signal.rfft2d": "doc",
    "tensorflow.compat.v1.signal.rfft3d": "doc",
    "tensorflow.compat.v1.sparse.concat": "doc",
    "tensorflow.compat.v1.sparse.matmul": "doc",
    "tensorflow.compat.v1.sparse.retain": "doc",
    "tensorflow.compat.v1.sparse_concat": "doc",
    "tensorflow.compat.v1.sparse_retain": "doc",
    "tensorflow.compat.v1.spectral.rfft": "doc",
    "tensorflow.compat.v1.stop_gradient": "doc",
    "tensorflow.compat.v1.strided_slice": "doc",
    "tensorflow.compat.v1.strings.lower": "doc",
    "tensorflow.compat.v1.strings.split": "doc",
    "tensorflow.compat.v1.strings.strip": "doc",
    "tensorflow.compat.v1.strings.upper": "doc",
    "tensorflow.compat.v1.to_complex128": "doc",
    "tensorflow.compat.v1.train.Example": "doc",
    "tensorflow.compat.v1.train.Feature": "doc",
    "tensorflow.compat.v1.unravel_index": "doc",
    "tensorflow.keras.preprocessing.text": "doc",
    "tensorflow.keras.utils.model_to_dot": "doc",
    "tensorflow.compat.v1.TFRecordReader": "doc",
    "tensorflow.compat.v1.app.flags.Flag": "doc",
    "tensorflow.compat.v1.assert_rank_in": "doc",
    "tensorflow.compat.v1.batch_to_space": "doc",
    "tensorflow.compat.v1.check_numerics": "doc",
    "tensorflow.compat.v1.cholesky_solve": "doc",
    "tensorflow.compat.v1.compat.as_text": "doc",
    "tensorflow.compat.v1.dtypes.complex": "doc",
    "tensorflow.compat.v1.dynamic_stitch": "doc",
    "tensorflow.compat.v1.errors.OpError": "doc",
    "tensorflow.compat.v1.feature_column": "doc",
    "tensorflow.compat.v1.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.get_collection": "doc",
    "tensorflow.compat.v1.gfile.MakeDirs": "doc",
    "tensorflow.compat.v1.io.decode_jpeg": "doc",
    "tensorflow.compat.v1.io.encode_jpeg": "doc",
    "tensorflow.compat.v1.io.gfile.GFile": "doc",
    "tensorflow.compat.v1.io.gfile.mkdir": "doc",
    "tensorflow.compat.v1.io.write_graph": "doc",
    "tensorflow.compat.v1.layers.Flatten": "doc",
    "tensorflow.compat.v1.layers.flatten": "doc",
    "tensorflow.compat.v1.linalg.adjoint": "doc",
    "tensorflow.compat.v1.linalg.slogdet": "doc",
    "tensorflow.compat.v1.logging.log_if": "doc",
    "tensorflow.compat.v1.metrics.recall": "doc",
    "tensorflow.compat.v1.nn.avg_pool_v2": "doc",
    "tensorflow.compat.v1.nn.ctc_loss_v2": "doc",
    "tensorflow.compat.v1.nn.dynamic_rnn": "doc",
    "tensorflow.compat.v1.nn.log_softmax": "doc",
    "tensorflow.compat.v1.nn.max_pool_v2": "doc",
    "tensorflow.compat.v1.no_regularizer": "doc",
    "tensorflow.compat.v1.parallel_stack": "doc",
    "tensorflow.compat.v1.random.poisson": "doc",
    "tensorflow.compat.v1.random.shuffle": "doc",
    "tensorflow.compat.v1.random.uniform": "doc",
    "tensorflow.compat.v1.random_shuffle": "doc",
    "tensorflow.compat.v1.random_uniform": "doc",
    "tensorflow.compat.v1.scatter_nd_add": "doc",
    "tensorflow.compat.v1.scatter_nd_sub": "doc",
    "tensorflow.compat.v1.scatter_update": "doc",
    "tensorflow.compat.v1.space_to_depth": "doc",
    "tensorflow.compat.v1.sparse.maximum": "doc",
    "tensorflow.compat.v1.sparse.reorder": "doc",
    "tensorflow.compat.v1.sparse.reshape": "doc",
    "tensorflow.compat.v1.sparse.softmax": "doc",
    "tensorflow.compat.v1.sparse_maximum": "doc",
    "tensorflow.compat.v1.sparse_minimum": "doc",
    "tensorflow.compat.v1.sparse_reorder": "doc",
    "tensorflow.compat.v1.sparse_reshape": "doc",
    "tensorflow.compat.v1.sparse_softmax": "doc",
    "tensorflow.compat.v1.spectral.fft2d": "doc",
    "tensorflow.compat.v1.spectral.fft3d": "doc",
    "tensorflow.compat.v1.strings.length": "doc",
    "tensorflow.compat.v1.strings.ngrams": "doc",
    "tensorflow.compat.v1.test.Benchmark": "doc",
    "tensorflow.compat.v1.train.SaverDef": "doc",
    "tensorflow.compat.v1.train.Scaffold": "doc",
    "tensorflow.compat.v1.variable_scope": "doc",
    "tensorflow.compat.v1.vectorized_map": "doc",
    "tensorflow.compat.dimension_at_index": "doc",
    "tensorflow.compat.forward_compatible": "doc",
    "tensorflow.errors.UnimplementedError": "doc",
    "tensorflow.io.parse_sequence_example": "doc",
    "tensorflow.linalg.tridiagonal_matmul": "doc",
    "tensorflow.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.SummaryMetadata": "doc",
    "tensorflow.compat.v1.TensorArraySpec": "doc",
    "tensorflow.compat.v1.WholeFileReader": "doc",
    "tensorflow.compat.v1.app.flags.Error": "doc",
    "tensorflow.compat.v1.app.flags.FLAGS": "doc",
    "tensorflow.compat.v1.assert_positive": "doc",
    "tensorflow.compat.v1.autograph.trace": "doc",
    "tensorflow.compat.v1.dimension_value": "doc",
    "tensorflow.compat.v1.dtypes.as_dtype": "doc",
    "tensorflow.compat.v1.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.flags.text_wrap": "doc",
    "tensorflow.compat.v1.gfile.FastGFile": "doc",
    "tensorflow.compat.v1.guarantee_const": "doc",
    "tensorflow.compat.v1.io.decode_proto": "doc",
    "tensorflow.compat.v1.io.gfile.remove": "doc",
    "tensorflow.compat.v1.io.gfile.rename": "doc",
    "tensorflow.compat.v1.io.gfile.rmtree": "doc",
    "tensorflow.compat.v1.keras.callbacks": "doc",
    "tensorflow.compat.v1.linalg.cholesky": "doc",
    "tensorflow.compat.v1.linalg.lu_solve": "doc",
    "tensorflow.compat.v1.linalg.set_diag": "doc",
    "tensorflow.compat.v1.lite.TargetSpec": "doc",
    "tensorflow.compat.v1.load_op_library": "doc",
    "tensorflow.compat.v1.local_variables": "doc",
    "tensorflow.compat.v1.logging.warning": "doc",
    "tensorflow.compat.v1.losses.add_loss": "doc",
    "tensorflow.compat.v1.losses.log_loss": "doc",
    "tensorflow.compat.v1.manip.gather_nd": "doc",
    "tensorflow.compat.v1.matrix_set_diag": "doc",
    "tensorflow.compat.v1.matrix_solve_ls": "doc",
    "tensorflow.compat.v1.model_variables": "doc",
    "tensorflow.compat.v1.nn.l2_normalize": "doc",
    "tensorflow.compat.v1.profiler.advise": "doc",
    "tensorflow.compat.v1.queue.FIFOQueue": "doc",
    "tensorflow.compat.v1.ragged.constant": "doc",
    "tensorflow.compat.v1.random.get_seed": "doc",
    "tensorflow.compat.v1.signal.fftshift": "doc",
    "tensorflow.compat.v1.sparse.to_dense": "doc",
    "tensorflow.compat.v1.sparse_to_dense": "doc",
    "tensorflow.compat.v1.spectral.ifft2d": "doc",
    "tensorflow.compat.v1.spectral.ifft3d": "doc",
    "tensorflow.compat.v1.spectral.rfft2d": "doc",
    "tensorflow.compat.v1.spectral.rfft3d": "doc",
    "tensorflow.compat.v1.train.BytesList": "doc",
    "tensorflow.compat.v1.train.ServerDef": "doc",
    "tensorflow.compat.v1.train.VocabInfo": "doc",
    "tensorflow.keras.utils.to_categorical": "doc",
    "tensorflow.raw_ops.BatchMatrixInverse": "doc",
    "tensorflow.raw_ops.ConcatenateDataset": "doc",
    "tensorflow.raw_ops.DataServiceDataset": "doc",
    "tensorflow.raw_ops.DatasetCardinality": "doc",
    "tensorflow.raw_ops.TensorArraySplitV2": "doc",
    "tensorflow.raw_ops.TensorArraySplitV3": "doc",
    "tensorflow.raw_ops.TensorListPushBack": "doc",
    "tensorflow.compat.v1.RaggedTensorSpec": "doc",
    "tensorflow.compat.v1.SparseTensorSpec": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE": "doc",
    "tensorflow.compat.v1.audio.decode_wav": "doc",
    "tensorflow.compat.v1.audio.encode_wav": "doc",
    "tensorflow.compat.v1.config.threading": "doc",
    "tensorflow.compat.v1.data.DatasetSpec": "doc",
    "tensorflow.compat.v1.debugging.Assert": "doc",
    "tensorflow.compat.v1.debugging.is_inf": "doc",
    "tensorflow.compat.v1.debugging.is_nan": "doc",
    "tensorflow.compat.v1.dtypes.as_string": "doc",
    "tensorflow.compat.v1.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.global_variables": "doc",
    "tensorflow.compat.v1.io.PriorityQueue": "doc",
    "tensorflow.compat.v1.io.decode_base64": "doc",
    "tensorflow.compat.v1.io.encode_base64": "doc",
    "tensorflow.compat.v1.io.gfile.listdir": "doc",
    "tensorflow.compat.v1.io.parse_example": "doc",
    "tensorflow.compat.v1.keras.layers.Add": "doc",
    "tensorflow.compat.v1.keras.layers.Dot": "doc",
    "tensorflow.compat.v1.keras.layers.ELU": "doc",
    "tensorflow.compat.v1.keras.layers.GRU": "doc",
    "tensorflow.compat.v1.keras.layers.RNN": "doc",
    "tensorflow.compat.v1.keras.layers.add": "doc",
    "tensorflow.compat.v1.keras.layers.dot": "doc",
    "tensorflow.compat.v1.keras.losses.KLD": "doc",
    "tensorflow.compat.v1.keras.losses.MAE": "doc",
    "tensorflow.compat.v1.keras.losses.MSE": "doc",
    "tensorflow.compat.v1.keras.losses.get": "doc",
    "tensorflow.compat.v1.keras.losses.kld": "doc",
    "tensorflow.compat.v1.keras.losses.mae": "doc",
    "tensorflow.compat.v1.keras.losses.mse": "doc",
    "tensorflow.compat.v1.linalg.normalize": "doc",
    "tensorflow.compat.v1.linalg.tensordot": "doc",
    "tensorflow.compat.v1.manip.scatter_nd": "doc",
    "tensorflow.compat.v1.metrics.accuracy": "doc",
    "tensorflow.compat.v1.metrics.mean_iou": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d": "doc",
    "tensorflow.compat.v1.profiler.profile": "doc",
    "tensorflow.compat.v1.quantized_concat": "doc",
    "tensorflow.compat.v1.random.Algorithm": "doc",
    "tensorflow.compat.v1.reduce_logsumexp": "doc",
    "tensorflow.compat.v1.reverse_sequence": "doc",
    "tensorflow.compat.v1.saved_model.load": "doc",
    "tensorflow.compat.v1.saved_model.save": "doc",
    "tensorflow.compat.v1.self_adjoint_eig": "doc",
    "tensorflow.compat.v1.sparse_transpose": "doc",
    "tensorflow.compat.v1.train.Checkpoint": "doc",
    "tensorflow.compat.v1.train.ClusterDef": "doc",
    "tensorflow.compat.v1.train.FeedFnHook": "doc",
    "tensorflow.compat.v1.train.batch_join": "doc",
    "tensorflow.compat.v1.train.warm_start": "doc",
    "tensorflow.compat.v1.user_ops.my_fact": "doc",
    "tensorflow.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.test.assert_equal_graph_def": "doc",
    "tensorflow.compat.v1.IndexedSlicesSpec": "doc",
    "tensorflow.compat.v1.NodeDef.AttrEntry": "doc",
    "tensorflow.compat.v1.NotDifferentiable": "doc",
    "tensorflow.compat.v1.SparseTensorValue": "doc",
    "tensorflow.compat.v1.add_to_collection": "doc",
    "tensorflow.compat.v1.assert_less_equal": "doc",
    "tensorflow.compat.v1.assert_none_equal": "doc",
    "tensorflow.compat.v1.autograph.to_code": "doc",
    "tensorflow.compat.v1.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.compat.as_str_any": "doc",
    "tensorflow.compat.v1.decode_compressed": "doc",
    "tensorflow.compat.v1.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.grad_pass_through": "doc",
    "tensorflow.compat.v1.io.TFRecordWriter": "doc",
    "tensorflow.compat.v1.io.gfile.makedirs": "doc",
    "tensorflow.compat.v1.keras.backend.rnn": "doc",
    "tensorflow.compat.v1.keras.layers.LSTM": "doc",
    "tensorflow.compat.v1.keras.layers.ReLU": "doc",
    "tensorflow.compat.v1.keras.losses.Loss": "doc",
    "tensorflow.compat.v1.keras.losses.MAPE": "doc",
    "tensorflow.compat.v1.keras.losses.MSLE": "doc",
    "tensorflow.compat.v1.keras.losses.mape": "doc",
    "tensorflow.compat.v1.keras.losses.msle": "doc",
    "tensorflow.compat.v1.keras.metrics.AUC": "doc",
    "tensorflow.compat.v1.keras.metrics.KLD": "doc",
    "tensorflow.compat.v1.keras.metrics.MAE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSE": "doc",
    "tensorflow.compat.v1.keras.metrics.Sum": "doc",
    "tensorflow.compat.v1.keras.metrics.get": "doc",
    "tensorflow.compat.v1.keras.metrics.kld": "doc",
    "tensorflow.compat.v1.keras.metrics.mae": "doc",
    "tensorflow.compat.v1.keras.metrics.mse": "doc",
    "tensorflow.compat.v1.lite.toco_convert": "doc",
    "tensorflow.compat.v1.losses.get_losses": "doc",
    "tensorflow.compat.v1.losses.huber_loss": "doc",
    "tensorflow.compat.v1.metrics.precision": "doc",
    "tensorflow.compat.v1.nn.space_to_depth": "doc",
    "tensorflow.compat.v1.profiler.Profiler": "doc",
    "tensorflow.compat.v1.saved_model.Asset": "doc",
    "tensorflow.compat.v1.saved_model.utils": "doc",
    "tensorflow.compat.v1.sparse.from_dense": "doc",
    "tensorflow.compat.v1.sparse.reduce_max": "doc",
    "tensorflow.compat.v1.sparse_reduce_max": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum": "doc",
    "tensorflow.compat.v1.strings.as_string": "doc",
    "tensorflow.compat.v1.strings.to_number": "doc",
    "tensorflow.compat.v1.sysconfig.get_lib": "doc",
    "tensorflow.compat.v1.train.ClusterSpec": "doc",
    "tensorflow.compat.v1.train.QueueRunner": "doc",
    "tensorflow.compat.v1.train.global_step": "doc",
    "tensorflow.compat.v1.train.maybe_batch": "doc",
    "tensorflow.compat.v1.train.sdca_fprint": "doc",
    "tensorflow.compat.v1.train.write_graph": "doc",
    "tensorflow.compat.v1.variable_op_scope": "doc",
    "tensorflow.errors.DeadlineExceededError": "doc",
    "tensorflow.keras.regularizers.serialize": "doc",
    "tensorflow.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.compat.v1.InteractiveSession": "doc",
    "tensorflow.compat.v1.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.add_to_collections": "doc",
    "tensorflow.compat.v1.app.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.autograph.to_graph": "doc",
    "tensorflow.compat.v1.bitwise.left_shift": "doc",
    "tensorflow.compat.v1.dimension_at_index": "doc",
    "tensorflow.compat.v1.enable_v2_behavior": "doc",
    "tensorflow.compat.v1.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.get_collection_ref": "doc",
    "tensorflow.compat.v1.get_local_variable": "doc",
    "tensorflow.compat.v1.get_session_handle": "doc",
    "tensorflow.compat.v1.get_variable_scope": "doc",
    "tensorflow.compat.v1.io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.keras.layers.Dense": "doc",
    "tensorflow.compat.v1.keras.layers.Layer": "doc",
    "tensorflow.compat.v1.keras.layers.PReLU": "doc",
    "tensorflow.compat.v1.keras.losses.Hinge": "doc",
    "tensorflow.compat.v1.keras.losses.Huber": "doc",
    "tensorflow.compat.v1.keras.losses.hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.MAPE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSLE": "doc",
    "tensorflow.compat.v1.keras.metrics.Mean": "doc",
    "tensorflow.compat.v1.keras.metrics.mape": "doc",
    "tensorflow.compat.v1.keras.metrics.msle": "doc",
    "tensorflow.compat.v1.keras.models.Model": "doc",
    "tensorflow.compat.v1.keras.regularizers": "doc",
    "tensorflow.compat.v1.linalg.global_norm": "doc",
    "tensorflow.compat.v1.linalg.matrix_rank": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag": "doc",
    "tensorflow.compat.v1.lite.TocoConverter": "doc",
    "tensorflow.compat.v1.matrix_determinant": "doc",
    "tensorflow.compat.v1.matrix_square_root": "doc",
    "tensorflow.compat.v1.ragged.placeholder": "doc",
    "tensorflow.compat.v1.random.categorical": "doc",
    "tensorflow.compat.v1.saved_model.loader": "doc",
    "tensorflow.compat.v1.signal.hann_window": "doc",
    "tensorflow.compat.v1.sparse.placeholder": "doc",
    "tensorflow.compat.v1.sparse_placeholder": "doc",
    "tensorflow.compat.v1.sparse_reset_shape": "doc",
    "tensorflow.compat.v1.sparse_segment_sum": "doc",
    "tensorflow.compat.v1.squared_difference": "doc",
    "tensorflow.compat.v1.train.LooperThread": "doc",
    "tensorflow.compat.v1.train.ProfilerHook": "doc",
    "tensorflow.compat.v1.train.cosine_decay": "doc",
    "tensorflow.compat.v1.train.queue_runner": "doc",
    "tensorflow.data.FixedLengthRecordDataset": "doc",
    "tensorflow.compat.v1.AttrValue.ListValue": "doc",
    "tensorflow.compat.v1.VariableAggregation": "doc",
    "tensorflow.compat.v1.app.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.app.flags.text_wrap": "doc",
    "tensorflow.compat.v1.assert_non_negative": "doc",
    "tensorflow.compat.v1.assert_non_positive": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_and": "doc",
    "tensorflow.compat.v1.clip_by_global_norm": "doc",
    "tensorflow.compat.v1.decode_json_example": "doc",
    "tensorflow.compat.v1.disable_v2_behavior": "doc",
    "tensorflow.compat.v1.errors.UnknownError": "doc",
    "tensorflow.compat.v1.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.get_default_session": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3D": "doc",
    "tensorflow.compat.v1.keras.layers.Lambda": "doc",
    "tensorflow.compat.v1.keras.losses.cosine": "doc",
    "tensorflow.compat.v1.keras.metrics.Hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.hinge": "doc",
    "tensorflow.compat.v1.keras.preprocessing": "doc",
    "tensorflow.compat.v1.keras.utils.Progbar": "doc",
    "tensorflow.compat.v1.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.linalg.l2_normalize": "doc",
    "tensorflow.compat.v1.logging.log_every_n": "doc",
    "tensorflow.compat.v1.logging.log_first_n": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup": "doc",
    "tensorflow.compat.v1.nn.quantized_conv2d": "doc",
    "tensorflow.compat.v1.nn.quantized_relu_x": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.GRUCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.RNNCell": "doc",
    "tensorflow.compat.v1.nn.separable_conv2d": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto": "doc",
    "tensorflow.compat.v1.queue.PriorityQueue": "doc",
    "tensorflow.compat.v1.ragged.boolean_mask": "doc",
    "tensorflow.compat.v1.ragged.cross_hashed": "doc",
    "tensorflow.compat.v1.saved_model.Builder": "doc",
    "tensorflow.compat.v1.saved_model.builder": "doc",
    "tensorflow.compat.v1.saved_model.load_v2": "doc",
    "tensorflow.compat.v1.saved_model.main_op": "doc",
    "tensorflow.compat.v1.sparse.cross_hashed": "doc",
    "tensorflow.compat.v1.sparse.segment_mean": "doc",
    "tensorflow.compat.v1.sparse_segment_mean": "doc",
    "tensorflow.compat.v1.strings.bytes_split": "doc",
    "tensorflow.compat.v1.strings.reduce_join": "doc",
    "tensorflow.compat.v1.train.NanTensorHook": "doc",
    "tensorflow.compat.v1.train.load_variable": "doc",
    "tensorflow.compat.v1.train.shuffle_batch": "doc",
    "tensorflow.compat.v1.trainable_variables": "doc",
    "tensorflow.errors.FailedPreconditionError": "doc",
    "tensorflow.test.is_built_with_gpu_support": "doc",
    "tensorflow.compat.v1.UnconnectedGradients": "doc",
    "tensorflow.compat.v1.app.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.batch_scatter_update": "doc",
    "tensorflow.compat.v1.clip_by_average_norm": "doc",
    "tensorflow.compat.v1.config.LogicalDevice": "doc",
    "tensorflow.compat.v1.control_dependencies": "doc",
    "tensorflow.compat.v1.data.TFRecordDataset": "doc",
    "tensorflow.compat.v1.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.flags.get_help_width": "doc",
    "tensorflow.compat.v1.initialize_variables": "doc",
    "tensorflow.compat.v1.io.decode_compressed": "doc",
    "tensorflow.compat.v1.keras.backend.floatx": "doc",
    "tensorflow.compat.v1.keras.layers.Average": "doc",
    "tensorflow.compat.v1.keras.layers.Flatten": "doc",
    "tensorflow.compat.v1.keras.layers.GRUCell": "doc",
    "tensorflow.compat.v1.keras.layers.Masking": "doc",
    "tensorflow.compat.v1.keras.layers.Maximum": "doc",
    "tensorflow.compat.v1.keras.layers.Reshape": "doc",
    "tensorflow.compat.v1.keras.layers.Softmax": "doc",
    "tensorflow.compat.v1.keras.layers.Wrapper": "doc",
    "tensorflow.compat.v1.keras.layers.average": "doc",
    "tensorflow.compat.v1.keras.layers.maximum": "doc",
    "tensorflow.compat.v1.keras.losses.LogCosh": "doc",
    "tensorflow.compat.v1.keras.losses.Poisson": "doc",
    "tensorflow.compat.v1.keras.losses.logcosh": "doc",
    "tensorflow.compat.v1.keras.losses.poisson": "doc",
    "tensorflow.compat.v1.keras.metrics.Metric": "doc",
    "tensorflow.compat.v1.keras.metrics.Recall": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine": "doc",
    "tensorflow.compat.v1.keras.utils.Sequence": "doc",
    "tensorflow.compat.v1.keras.utils.get_file": "doc",
    "tensorflow.compat.v1.layers.max_pooling1d": "doc",
    "tensorflow.compat.v1.layers.max_pooling2d": "doc",
    "tensorflow.compat.v1.layers.max_pooling3d": "doc",
    "tensorflow.compat.v1.nn.collapse_repeated": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMCell": "doc",
    "tensorflow.compat.v1.parse_single_example": "doc",
    "tensorflow.compat.v1.self_adjoint_eigvals": "doc",
    "tensorflow.compat.v1.signal.kaiser_window": "doc",
    "tensorflow.compat.v1.signal.vorbis_window": "doc",
    "tensorflow.compat.v1.test.gpu_device_name": "doc",
    "tensorflow.compat.v1.train.StopAtStepHook": "doc",
    "tensorflow.compat.v1.train.list_variables": "doc",
    "tensorflow.compat.v1.train.sdca_shrink_l1": "doc",
    "tensorflow.compat.v1.type_spec_from_value": "doc",
    "tensorflow.compat.v1.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.unsorted_segment_sum": "doc",
    "tensorflow.keras.losses.mean_squared_error": "doc",
    "tensorflow.keras.utils.get_registered_name": "doc",
    "tensorflow.compat.v1.app.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.app.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.config.PhysicalDevice": "doc",
    "tensorflow.compat.v1.debugging.assert_near": "doc",
    "tensorflow.compat.v1.debugging.assert_rank": "doc",
    "tensorflow.compat.v1.debugging.assert_type": "doc",
    "tensorflow.compat.v1.enable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.errors.CancelledError": "doc",
    "tensorflow.compat.v1.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.histogram_fixed_width": "doc",
    "tensorflow.compat.v1.io.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.io.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.keras.backend.get_uid": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNGRU": "doc",
    "tensorflow.compat.v1.keras.layers.LSTMCell": "doc",
    "tensorflow.compat.v1.keras.layers.Multiply": "doc",
    "tensorflow.compat.v1.keras.layers.Subtract": "doc",
    "tensorflow.compat.v1.keras.layers.multiply": "doc",
    "tensorflow.compat.v1.keras.layers.subtract": "doc",
    "tensorflow.compat.v1.keras.losses.log_cosh": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanIoU": "doc",
    "tensorflow.compat.v1.keras.metrics.Poisson": "doc",
    "tensorflow.compat.v1.keras.metrics.logcosh": "doc",
    "tensorflow.compat.v1.keras.metrics.poisson": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1": "doc",
    "tensorflow.compat.v1.keras.regularizers.L2": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1": "doc",
    "tensorflow.compat.v1.keras.regularizers.l2": "doc",
    "tensorflow.compat.v1.keras.utils.normalize": "doc",
    "tensorflow.compat.v1.linalg.cholesky_solve": "doc",
    "tensorflow.compat.v1.linalg.lu_reconstruct": "doc",
    "tensorflow.compat.v1.logging.get_verbosity": "doc",
    "tensorflow.compat.v1.nn.ctc_greedy_decoder": "doc",
    "tensorflow.compat.v1.nn.quantized_avg_pool": "doc",
    "tensorflow.compat.v1.profiler.write_op_log": "doc",
    "tensorflow.compat.v1.ragged.constant_value": "doc",
    "tensorflow.compat.v1.signal.hamming_window": "doc",
    "tensorflow.compat.v1.sparse.segment_sqrt_n": "doc",
    "tensorflow.compat.v1.strings.regex_replace": "doc",
    "tensorflow.compat.v1.strings.unicode_split": "doc",
    "tensorflow.compat.v1.train.SequenceExample": "doc",
    "tensorflow.compat.v1.train.get_global_step": "doc",
    "tensorflow.compat.v1.train.load_checkpoint": "doc",
    "tensorflow.compat.v1.unsorted_segment_mean": "doc",
    "tensorflow.io.parse_single_sequence_example": "doc",
    "tensorflow.keras.metrics.mean_squared_error": "doc",
    "tensorflow.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.compat.v1.NameAttrList.AttrEntry": "doc",
    "tensorflow.compat.v1.Variable.SaveSliceInfo": "doc",
    "tensorflow.compat.v1.add_check_numerics_ops": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.broadcast_static_shape": "doc",
    "tensorflow.compat.v1.compat.dimension_value": "doc",
    "tensorflow.compat.v1.debugging.assert_equal": "doc",
    "tensorflow.compat.v1.disable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.enable_control_flow_v2": "doc",
    "tensorflow.compat.v1.enable_eager_execution": "doc",
    "tensorflow.compat.v1.enable_tensor_equality": "doc",
    "tensorflow.compat.v1.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.io.decode_json_example": "doc",
    "tensorflow.compat.v1.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.keras.layers.Attention": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNLSTM": "doc",
    "tensorflow.compat.v1.keras.layers.Embedding": "doc",
    "tensorflow.compat.v1.keras.layers.LeakyReLU": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.serialize": "doc",
    "tensorflow.compat.v1.keras.losses.serialize": "doc",
    "tensorflow.compat.v1.keras.metrics.Accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.log_cosh": "doc",
    "tensorflow.compat.v1.keras.regularizers.get": "doc",
    "tensorflow.compat.v1.keras.utils.plot_model": "doc",
    "tensorflow.compat.v1.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.lookup.StaticHashTable": "doc",
    "tensorflow.compat.v1.nn.fractional_avg_pool": "doc",
    "tensorflow.compat.v1.nn.with_space_to_batch": "doc",
    "tensorflow.compat.v1.orthogonal_initializer": "doc",
    "tensorflow.compat.v1.random.stateless_gamma": "doc",
    "tensorflow.compat.v1.signal.overlap_and_add": "doc",
    "tensorflow.compat.v1.sparse_tensor_to_dense": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket": "doc",
    "tensorflow.compat.v1.strings.unicode_decode": "doc",
    "tensorflow.compat.v1.strings.unicode_encode": "doc",
    "tensorflow.compat.v1.strings.unicode_script": "doc",
    "tensorflow.compat.v1.train.MonitoredSession": "doc",
    "tensorflow.compat.v1.train.SummarySaverHook": "doc",
    "tensorflow.compat.v1.train.add_queue_runner": "doc",
    "tensorflow.compat.v1.train.maybe_batch_join": "doc",
    "tensorflow.compat.v1.train.polynomial_decay": "doc",
    "tensorflow.keras.utils.get_registered_object": "doc",
    "tensorflow.compat.v1.FixedLengthRecordReader": "doc",
    "tensorflow.compat.v1.VariableSynchronization": "doc",
    "tensorflow.compat.v1.app.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.broadcast_dynamic_shape": "doc",
    "tensorflow.compat.v1.control_flow_v2_enabled": "doc",
    "tensorflow.compat.v1.disable_control_flow_v2": "doc",
    "tensorflow.compat.v1.disable_eager_execution": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.gfile.DeleteRecursively": "doc",
    "tensorflow.compat.v1.io.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.io.match_filenames_once": "doc",
    "tensorflow.compat.v1.io.parse_single_example": "doc",
    "tensorflow.compat.v1.is_variable_initialized": "doc",
    "tensorflow.compat.v1.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping1D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping2D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping3D": "doc",
    "tensorflow.compat.v1.keras.metrics.Precision": "doc",
    "tensorflow.compat.v1.keras.metrics.serialize": "doc",
    "tensorflow.compat.v1.keras.models.load_model": "doc",
    "tensorflow.compat.v1.keras.models.save_model": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1L2": "doc",
    "tensorflow.compat.v1.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling3D": "doc",
    "tensorflow.compat.v1.layers.separable_conv1d": "doc",
    "tensorflow.compat.v1.layers.separable_conv2d": "doc",
    "tensorflow.compat.v1.manip.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.nn.max_pool_with_argmax": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto": "doc",
    "tensorflow.compat.v1.random.create_rng_state": "doc",
    "tensorflow.compat.v1.random.stateless_normal": "doc",
    "tensorflow.compat.v1.saved_model.loader.load": "doc",
    "tensorflow.compat.v1.test.is_built_with_cuda": "doc",
    "tensorflow.compat.v1.test.is_built_with_rocm": "doc",
    "tensorflow.compat.v1.train.JobDef.TasksEntry": "doc",
    "tensorflow.compat.v1.train.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.train.exponential_decay": "doc",
    "tensorflow.compat.v1.train.natural_exp_decay": "doc",
    "tensorflow.compat.v1.train.remove_checkpoint": "doc",
    "tensorflow.compat.v1.unsorted_segment_sqrt_n": "doc",
    "tensorflow.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.keras.utils.pack_x_y_sample_weight": "doc",
    "tensorflow.keras.utils.serialize_keras_object": "doc",
    "tensorflow.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.app.flags.get_help_width": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_in": "doc",
    "tensorflow.compat.v1.debugging.check_numerics": "doc",
    "tensorflow.compat.v1.flags.ArgumentSerializer": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.initialize_all_variables": "doc",
    "tensorflow.compat.v1.keras.backend.name_scope": "doc",
    "tensorflow.compat.v1.keras.callbacks.Callback": "doc",
    "tensorflow.compat.v1.keras.models.clone_model": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1_l2": "doc",
    "tensorflow.compat.v1.keras.utils.model_to_dot": "doc",
    "tensorflow.compat.v1.layers.average_pooling1d": "doc",
    "tensorflow.compat.v1.layers.average_pooling2d": "doc",
    "tensorflow.compat.v1.layers.average_pooling3d": "doc",
    "tensorflow.compat.v1.load_file_system_library": "doc",
    "tensorflow.compat.v1.metrics.percentage_below": "doc",
    "tensorflow.compat.v1.moving_average_variables": "doc",
    "tensorflow.compat.v1.nn.all_candidate_sampler": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicRNNCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.MultiRNNCell": "doc",
    "tensorflow.compat.v1.placeholder_with_default": "doc",
    "tensorflow.compat.v1.python_io.TFRecordWriter": "doc",
    "tensorflow.compat.v1.queue.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.ragged.RaggedTensorValue": "doc",
    "tensorflow.compat.v1.random.stateless_poisson": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum_sparse": "doc",
    "tensorflow.compat.v1.sparse_reduce_max_sparse": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum_sparse": "doc",
    "tensorflow.compat.v1.sysconfig.get_build_info": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_update": "doc",
    "tensorflow.compat.v1.train.AdagradDAOptimizer": "doc",
    "tensorflow.compat.v1.train.assert_global_step": "doc",
    "tensorflow.compat.v1.train.create_global_step": "doc",
    "tensorflow.compat.v1.train.piecewise_constant": "doc",
    "tensorflow.compat.v1.train.shuffle_batch_join": "doc",
    "tensorflow.compat.v1.verify_tensor_all_finite": "doc",
    "tensorflow.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.compat.dimension_at_index": "doc",
    "tensorflow.compat.v1.compat.forward_compatible": "doc",
    "tensorflow.compat.v1.debugging.assert_positive": "doc",
    "tensorflow.compat.v1.enable_resource_variables": "doc",
    "tensorflow.compat.v1.errors.UnimplementedError": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_string": "doc",
    "tensorflow.compat.v1.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.glorot_normal_initializer": "doc",
    "tensorflow.compat.v1.io.parse_sequence_example": "doc",
    "tensorflow.compat.v1.keras.callbacks.CSVLogger": "doc",
    "tensorflow.compat.v1.keras.layers.AlphaDropout": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling1D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling2D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling3D": "doc",
    "tensorflow.compat.v1.keras.losses.KLDivergence": "doc",
    "tensorflow.compat.v1.keras.losses.SquaredHinge": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_matmul": "doc",
    "tensorflow.compat.v1.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicLSTMCell": "doc",
    "tensorflow.compat.v1.python_io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.random.stateless_binomial": "doc",
    "tensorflow.compat.v1.random_normal_initializer": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.train.NewCheckpointReader": "doc",
    "tensorflow.compat.v1.train.linear_cosine_decay": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch": "doc",
    "tensorflow.compat.v1.train.start_queue_runners": "doc",
    "tensorflow.compat.forward_compatibility_horizon": "doc",
    "tensorflow.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.keras.utils.unpack_x_y_sample_weight": "doc",
    "tensorflow.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.compat.v1.app.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.config.get_visible_devices": "doc",
    "tensorflow.compat.v1.config.set_visible_devices": "doc",
    "tensorflow.compat.v1.disable_resource_variables": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.glorot_uniform_initializer": "doc",
    "tensorflow.compat.v1.histogram_fixed_width_bins": "doc",
    "tensorflow.compat.v1.initialize_local_variables": "doc",
    "tensorflow.compat.v1.io.TFRecordCompressionType": "doc",
    "tensorflow.compat.v1.keras.callbacks.BaseLogger": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.compat.v1.keras.losses.kl_divergence": "doc",
    "tensorflow.compat.v1.keras.losses.squared_hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.KLDivergence": "doc",
    "tensorflow.compat.v1.keras.metrics.LogCoshError": "doc",
    "tensorflow.compat.v1.keras.metrics.SquaredHinge": "doc",
    "tensorflow.compat.v1.keras.utils.to_categorical": "doc",
    "tensorflow.compat.v1.losses.absolute_difference": "doc",
    "tensorflow.compat.v1.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMStateTuple": "doc",
    "tensorflow.compat.v1.nn.static_state_saving_rnn": "doc",
    "tensorflow.compat.v1.quantize_and_dequantize_v4": "doc",
    "tensorflow.compat.v1.random_uniform_initializer": "doc",
    "tensorflow.compat.v1.resource_variables_enabled": "doc",
    "tensorflow.compat.v1.sparse_tensor_dense_matmul": "doc",
    "tensorflow.compat.v1.train.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_state": "doc",
    "tensorflow.compat.v1.train.init_from_checkpoint": "doc",
    "tensorflow.compat.v1.train.match_filenames_once": "doc",
    "tensorflow.errors.OperatorNotAllowedInGraphError": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.config.list_logical_devices": "doc",
    "tensorflow.compat.v1.debugging.assert_all_finite": "doc",
    "tensorflow.compat.v1.debugging.assert_less_equal": "doc",
    "tensorflow.compat.v1.debugging.assert_none_equal": "doc",
    "tensorflow.compat.v1.feature_column.linear_model": "doc",
    "tensorflow.compat.v1.flags.CantOpenFlagFileError": "doc",
    "tensorflow.compat.v1.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.keras.backend.clear_session": "doc",
    "tensorflow.compat.v1.keras.metrics.TrueNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.TruePositives": "doc",
    "tensorflow.compat.v1.keras.metrics.kl_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.squared_hinge": "doc",
    "tensorflow.compat.v1.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.compat.v1.local_variables_initializer": "doc",
    "tensorflow.compat.v1.nn.static_bidirectional_rnn": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.sysconfig.get_compile_flags": "doc",
    "tensorflow.compat.v1.test.assert_equal_graph_def": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentSerializer": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.app.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.app.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.assert_variables_initialized": "doc",
    "tensorflow.compat.v1.config.functions_run_eagerly": "doc",
    "tensorflow.compat.v1.config.list_physical_devices": "doc",
    "tensorflow.compat.v1.create_partitioned_variables": "doc",
    "tensorflow.compat.v1.errors.DeadlineExceededError": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.global_variables_initializer": "doc",
    "tensorflow.compat.v1.keras.callbacks.CallbackList": "doc",
    "tensorflow.compat.v1.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.StackedRNNCells": "doc",
    "tensorflow.compat.v1.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.compat.v1.keras.metrics.FalseNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.FalsePositives": "doc",
    "tensorflow.compat.v1.keras.models.model_from_json": "doc",
    "tensorflow.compat.v1.keras.models.model_from_yaml": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence": "doc",
    "tensorflow.compat.v1.keras.regularizers.serialize": "doc",
    "tensorflow.compat.v1.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.compat.v1.lookup.StaticVocabularyTable": "doc",
    "tensorflow.compat.v1.losses.sigmoid_cross_entropy": "doc",
    "tensorflow.compat.v1.losses.softmax_cross_entropy": "doc",
    "tensorflow.compat.v1.metrics.mean_cosine_distance": "doc",
    "tensorflow.compat.v1.metrics.recall_at_thresholds": "doc",
    "tensorflow.compat.v1.min_max_variable_partitioner": "doc",
    "tensorflow.compat.v1.nn.bidirectional_dynamic_rnn": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter_v2": "doc",
    "tensorflow.compat.v1.nn.scale_regularization_loss": "doc",
    "tensorflow.compat.v1.nn.uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.all_candidate_sampler": "doc",
    "tensorflow.compat.v1.truncated_normal_initializer": "doc",
    "tensorflow.compat.v1.variance_scaling_initializer": "doc",
    "tensorflow.keras.utils.register_keras_serializable": "doc",
    "tensorflow.compat.v1.NodeDef.ExperimentalDebugInfo": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_string": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.data.FixedLengthRecordDataset": "doc",
    "tensorflow.compat.v1.debugging.assert_non_negative": "doc",
    "tensorflow.compat.v1.debugging.assert_non_positive": "doc",
    "tensorflow.compat.v1.feature_column.crossed_column": "doc",
    "tensorflow.compat.v1.feature_column.numeric_column": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling3D": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalHinge": "doc",
    "tensorflow.compat.v1.metrics.sparse_precision_at_k": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder_v2": "doc",
    "tensorflow.compat.v1.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.profiler.ProfileOptionBuilder": "doc",
    "tensorflow.compat.v1.signal.inverse_stft_window_fn": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_strong": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.train.update_checkpoint_state": "doc",
    "tensorflow.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.errors.FailedPreconditionError": "doc",
    "tensorflow.compat.v1.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.compat.v1.keras.models.model_from_config": "doc",
    "tensorflow.compat.v1.keras.regularizers.Regularizer": "doc",
    "tensorflow.compat.v1.logging.TaskLevelStatusMessage": "doc",
    "tensorflow.compat.v1.losses.get_regularization_loss": "doc",
    "tensorflow.compat.v1.metrics.average_precision_at_k": "doc",
    "tensorflow.compat.v1.report_uninitialized_variables": "doc",
    "tensorflow.compat.v1.test.is_built_with_gpu_support": "doc",
    "tensorflow.compat.v1.train.ExponentialMovingAverage": "doc",
    "tensorflow.compat.v1.train.MonitoredTrainingSession": "doc",
    "tensorflow.compat.v1.train.ProximalAdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch_join": "doc",
    "tensorflow.compat.v1.train.piecewise_constant_decay": "doc",
    "tensorflow.compat.v1.train.queue_runner.QueueRunner": "doc",
    "tensorflow.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.compat.v1.MetaGraphDef.CollectionDefEntry": "doc",
    "tensorflow.compat.v1.app.flags.CantOpenFlagFileError": "doc",
    "tensorflow.compat.v1.app.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.app.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.debugging.enable_check_numerics": "doc",
    "tensorflow.compat.v1.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.compat.v1.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.compat.v1.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_name": "doc",
    "tensorflow.compat.v1.metrics.mean_per_class_accuracy": "doc",
    "tensorflow.compat.v1.metrics.root_mean_squared_error": "doc",
    "tensorflow.compat.v1.nn.local_response_normalization": "doc",
    "tensorflow.compat.v1.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.compat.v1.saved_model.build_signature_def": "doc",
    "tensorflow.compat.v1.train.get_or_create_global_step": "doc",
    "tensorflow.compat.v1.train.noisy_linear_cosine_decay": "doc",
    "tensorflow.compat.v1.app.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.config.get_soft_device_placement": "doc",
    "tensorflow.compat.v1.config.set_soft_device_placement": "doc",
    "tensorflow.compat.v1.debugging.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.debugging.disable_check_numerics": "doc",
    "tensorflow.compat.v1.debugging.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.feature_column.bucketized_column": "doc",
    "tensorflow.compat.v1.io.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.keras.losses.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.compat.v1.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.compat.v1.losses.get_regularization_losses": "doc",
    "tensorflow.compat.v1.nn.log_uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.nondifferentiable_batch_function": "doc",
    "tensorflow.compat.v1.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.compat.v1.random.uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.required_space_to_batch_paddings": "doc",
    "tensorflow.compat.v1.saved_model.contains_saved_model": "doc",
    "tensorflow.compat.v1.train.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.uniform_unit_scaling_initializer": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.app.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.compat.v1.debugging.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_object": "doc",
    "tensorflow.compat.v1.python_io.TFRecordCompressionType": "doc",
    "tensorflow.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_sparse_tensor": "doc",
    "tensorflow.compat.v1.debugging.get_log_device_placement": "doc",
    "tensorflow.compat.v1.debugging.set_log_device_placement": "doc",
    "tensorflow.compat.v1.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.compat.v1.keras.utils.serialize_keras_object": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.compat.v1.losses.mean_pairwise_squared_error": "doc",
    "tensorflow.compat.v1.metrics.specificity_at_sensitivity": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.compat.v1.strings.unicode_split_with_offsets": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_host": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_indexed_slices": "doc",
    "tensorflow.compat.v1.executing_eagerly_outside_functions": "doc",
    "tensorflow.compat.v1.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.compat.v1.losses.sparse_softmax_cross_entropy": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.register_tensor_conversion_function": "doc",
    "tensorflow.compat.v1.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.compat.v1.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.compat.v1.train.queue_runner.add_queue_runner": "doc",
    "tensorflow.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.compat.v1.compat.forward_compatibility_horizon": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.compat.v1.metrics.true_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.errors.error_code_from_exception_type": "doc",
    "tensorflow.compat.v1.errors.exception_type_from_error_code": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.compat.v1.keras.layers.enable_v2_dtype_behavior": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.metrics.false_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.sparse_average_precision_at_k": "doc",
    "tensorflow.compat.v1.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.saved_model.builder.SavedModelBuilder": "doc",
    "tensorflow.compat.v1.train.generate_checkpoint_state_proto": "doc",
    "tensorflow.compat.v1.feature_column.make_parse_example_spec": "doc",
    "tensorflow.compat.v1.feature_column.sequence_numeric_column": "doc",
    "tensorflow.compat.v1.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.compat.v1.keras.layers.disable_v2_dtype_behavior": "doc",
    "tensorflow.compat.v1.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.compat.v1.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.compat.v1.train.ProximalGradientDescentOptimizer": "doc",
    "tensorflow.compat.v1.train.do_quantize_training_on_graphdef": "doc",
    "tensorflow.compat.v1.train.queue_runner.start_queue_runners": "doc",
    "tensorflow.compat.v1.app.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.compat.v1.config.get_logical_device_configuration": "doc",
    "tensorflow.compat.v1.config.set_logical_device_configuration": "doc",
    "tensorflow.compat.v1.errors.raise_exception_on_not_ok_status": "doc",
    "tensorflow.compat.v1.feature_column.shared_embedding_columns": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.utils.register_keras_serializable": "doc",
    "tensorflow.compat.v1.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits_v2": "doc",
    "tensorflow.compat.v1.saved_model.get_tensor_from_tensor_info": "doc",
    "tensorflow.compat.v1.saved_model.maybe_saved_model_directory": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.saved_model.classification_signature_def": "doc",
    "tensorflow.compat.v1.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.compat.v1.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.compat.v1.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_input": "doc",
    "tensorflow.compat.v1.app.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.compat.v1.feature_column.weighted_categorical_column": "doc",
    "tensorflow.compat.v1.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_filter": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry": "doc",
    "tensorflow.compat.v1.app.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.saved_model.utils.get_tensor_from_tensor_info": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.compat.v1.saved_model.loader.maybe_saved_model_directory": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.compat.v1.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.import_graph_def": "doc",
    "tensorflow.nn.conv1d_transpose": "doc",
    "tensorflow.nn.conv2d_transpose": "doc",
    "tensorflow.nn.conv3d_transpose": "doc",
    "tensorflow.nn.log_poisson_loss": "doc",
    "tensorflow.nn.weighted_moments": "doc",
    "tensorflow.queue.PaddingFIFOQueue": "doc",
    "tensorflow.raw_ops.ComputeBatchSize": "doc",
    "tensorflow.raw_ops.ConsumeMutexLock": "doc",
    "tensorflow.raw_ops.OptionalHasValue": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueue": "doc",
    "tensorflow.raw_ops.TensorListResize": "doc",
    "tensorflow.space_to_batch": "doc",
    "tensorflow.random.stateless_categorical": "doc",
    "tensorflow.raw_ops.AccumulateNV2": "doc",
    "tensorflow.raw_ops.BatchFunction": "doc",
    "tensorflow.raw_ops.BroadcastArgs": "doc",
    "tensorflow.raw_ops.DebugNanCount": "doc",
    "tensorflow.raw_ops.MatrixSetDiag": "doc",
    "tensorflow.raw_ops.ResizeBicubic": "doc",
    "tensorflow.raw_ops.TensorSummary": "doc",
    "tensorflow.debugging.assert_shapes": "doc",
    "tensorflow.raw_ops.RequantizationRangePerChannel": "doc",
    "tensorflow.losses.CategoricalCrossentropy": "doc",
    "tensorflow.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.raw_ops.DenseToSparseSetOperation": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighborGrad": "doc",
    "tensorflow.raw_ops.SetStatsAggregatorDataset": "doc",
    "tensorflow.assert_less": "doc",
    "tensorflow.expand_dims": "doc",
    "tensorflow.py_function": "doc",
    "tensorflow.switch_case": "doc",
    "tensorflow.truncatediv": "doc",
    "tensorflow.bitwise.right_shift": "doc",
    "tensorflow.raw_ops.ApplyFtrlV2": "doc",
    "tensorflow.raw_ops.EncodeProto": "doc",
    "tensorflow.raw_ops.EnsureShape": "doc",
    "tensorflow.raw_ops.ImportEvent": "doc",
    "tensorflow.raw_ops.LMDBDataset": "doc",
    "tensorflow.raw_ops.LoadDataset": "doc",
    "tensorflow.raw_ops.Multinomial": "doc",
    "tensorflow.raw_ops.RefIdentity": "doc",
    "tensorflow.raw_ops.SaveDataset": "doc",
    "tensorflow.raw_ops.TakeDataset": "doc",
    "tensorflow.raw_ops.TruncateDiv": "doc",
    "tensorflow.raw_ops.UnbatchGrad": "doc",
    "tensorflow.debugging.assert_less": "doc",
    "tensorflow.saved_model.LoadOptions": "doc",
    "tensorflow.saved_model.SaveOptions": "doc",
    "tensorflow.keras.layers.Concatenate": "doc",
    "tensorflow.keras.layers.concatenate": "doc",
    "tensorflow.raw_ops.ExperimentalCSVDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSqlDataset": "doc",
    "tensorflow.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByReducerDataset": "doc",
    "tensorflow.tensor_scatter_nd_sub": "doc",
    "tensorflow.keras.metrics.FalseNegatives": "doc",
    "tensorflow.raw_ops.BroadcastGradientArgs": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNative": "doc",
    "tensorflow.raw_ops.FractionalAvgPoolGrad": "doc",
    "tensorflow.raw_ops.FractionalMaxPoolGrad": "doc",
    "tensorflow.raw_ops.QuantizedInstanceNorm": "doc",
    "tensorflow.raw_ops.ResourceScatterUpdate": "doc",
    "tensorflow.raw_ops.SparseMatrixTranspose": "doc",
    "tensorflow.raw_ops.StatelessRandomNormal": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandle": "doc",
    "tensorflow.raw_ops.WriteHistogramSummary": "doc",
    "tensorflow.strings.unsorted_segment_join": "doc",
    "tensorflow.nn.local_response_normalization": "doc",
    "tensorflow.strings.to_hash_bucket_fast": "doc",
    "tensorflow.raw_ops.AssertNextDataset": "doc",
    "tensorflow.raw_ops.DatasetToTFRecord": "doc",
    "tensorflow.raw_ops.DeleteMemoryCache": "doc",
    "tensorflow.raw_ops.FractionalAvgPool": "doc",
    "tensorflow.raw_ops.FractionalMaxPool": "doc",
    "tensorflow.raw_ops.IteratorGetDevice": "doc",
    "tensorflow.raw_ops.MatrixDeterminant": "doc",
    "tensorflow.raw_ops.OptionalFromValue": "doc",
    "tensorflow.raw_ops.ResizeBicubicGrad": "doc",
    "tensorflow.raw_ops.SparseMatrixZeros": "doc",
    "tensorflow.raw_ops.TensorArrayConcat": "doc",
    "tensorflow.raw_ops.TensorArrayGradV2": "doc",
    "tensorflow.raw_ops.TensorArrayGradV3": "doc",
    "tensorflow.raw_ops.TensorListGetItem": "doc",
    "tensorflow.raw_ops.TensorListPopBack": "doc",
    "tensorflow.raw_ops.TensorListSetItem": "doc",
    "tensorflow.raw_ops.WriteImageSummary": "doc",
    "tensorflow.nn.fractional_avg_pool": "doc",
    "tensorflow.nn.isotonic_regression": "doc",
    "tensorflow.nn.with_space_to_batch": "doc",
    "tensorflow.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.make_tensor_proto": "doc",
    "tensorflow.nn.ctc_unique_labels": "doc",
    "tensorflow.nn.normalize_moments": "doc",
    "tensorflow.raw_ops.BarrierInsertMany": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxes": "doc",
    "tensorflow.raw_ops.InterleaveDataset": "doc",
    "tensorflow.raw_ops.MapIncompleteSize": "doc",
    "tensorflow.raw_ops.MatrixExponential": "doc",
    "tensorflow.raw_ops.NonMaxSuppression": "doc",
    "tensorflow.raw_ops.PrelinearizeTuple": "doc",
    "tensorflow.raw_ops.TridiagonalMatMul": "doc",
    "tensorflow.raw_ops.UncompressElement": "doc",
    "tensorflow.raw_ops.WriteGraphSummary": "doc",
    "tensorflow.strings.unicode_split": "doc",
    "tensorflow.strings.unicode_split_with_offsets": "doc",
    "tensorflow.random.truncated_normal": "doc",
    "tensorflow.losses.categorical_crossentropy": "doc",
    "tensorflow.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.raw_ops.AssertCardinalityDataset": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropFilter": "doc",
    "tensorflow.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.nn.compute_accidental_hits": "doc",
    "tensorflow.nn.embedding_lookup_sparse": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropInput": "doc",
    "tensorflow.raw_ops.ExperimentalLMDBDataset": "doc",
    "tensorflow.raw_ops.ExperimentalScanDataset": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV3": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBias": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBias": "doc",
    "tensorflow.raw_ops.RaggedCountSparseOutput": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDataset": "doc",
    "tensorflow.raw_ops.SparseCountSparseOutput": "doc",
    "tensorflow.raw_ops.BatchMatMulV2": "doc",
    "tensorflow.raw_ops.DecodeProtoV2": "doc",
    "tensorflow.raw_ops.RandomUniform": "doc",
    "tensorflow.raw_ops.SummaryWriter": "doc",
    "tensorflow.raw_ops.TensorArrayV2": "doc",
    "tensorflow.raw_ops.TensorArrayV3": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV2": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV3": "doc",
    "tensorflow.raw_ops.SparseToSparseSetOperation": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormalV2": "doc",
    "tensorflow.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.logical_not": "doc",
    "tensorflow.train.get_checkpoint_state": "doc",
    "tensorflow.raw_ops.RecvTPUEmbeddingActivations": "doc",
    "tensorflow.raw_ops.AnonymousSeedGenerator": "doc",
    "tensorflow.raw_ops.StatefulStandardNormal": "doc",
    "tensorflow.raw_ops.StatelessRandomUniform": "doc",
    "tensorflow.raw_ops.StatsAggregatorSummary": "doc",
    "tensorflow.raw_ops.TensorListElementShape": "doc",
    "tensorflow.random.stateless_truncated_normal": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorTakeGradient": "doc",
    "tensorflow.lookup.TextFileInitializer": "doc",
    "tensorflow.raw_ops.LatencyStatsDataset": "doc",
    "tensorflow.raw_ops.ParseExampleDataset": "doc",
    "tensorflow.raw_ops.TPUReplicatedOutput": "doc",
    "tensorflow.custom_gradient": "doc",
    "tensorflow.nn": "doc",
    "tensorflow.abs": "doc",
    "tensorflow.cos": "doc",
    "tensorflow.exp": "doc",
    "tensorflow.pad": "doc",
    "tensorflow.pow": "doc",
    "tensorflow.less": "doc",
    "tensorflow.norm": "doc",
    "tensorflow.group": "doc",
    "tensorflow.keras": "doc",
    "tensorflow.no_op": "doc",
    "tensorflow.queue": "doc",
    "tensorflow.round": "doc",
    "tensorflow.tuple": "doc",
    "tensorflow.zeros": "doc",
    "tensorflow.Module": "doc",
    "tensorflow.dtypes": "doc",
    "tensorflow.losses": "doc",
    "tensorflow.map_fn": "doc",
    "tensorflow.nn.elu": "doc",
    "tensorflow.nn.lrn": "doc",
    "tensorflow.unique": "doc",
    "tensorflow.nn.gelu": "doc",
    "tensorflow.nn.pool": "doc",
    "tensorflow.nn.relu": "doc",
    "tensorflow.nn.selu": "doc",
    "tensorflow.nn.crelu": "doc",
    "tensorflow.nn.relu6": "doc",
    "tensorflow.nn.top_k": "doc",
    "tensorflow.nn.conv1d": "doc",
    "tensorflow.nn.conv2d": "doc",
    "tensorflow.nn.conv3d": "doc",
    "tensorflow.losses.KLD": "doc",
    "tensorflow.losses.MAE": "doc",
    "tensorflow.losses.MSE": "doc",
    "tensorflow.losses.get": "doc",
    "tensorflow.losses.kld": "doc",
    "tensorflow.losses.mse": "doc",
    "tensorflow.nn.l2_loss": "doc",
    "tensorflow.raw_ops.Lu": "doc",
    "tensorflow.keras.Model": "doc",
    "tensorflow.losses.Loss": "doc",
    "tensorflow.losses.MAPE": "doc",
    "tensorflow.losses.MSLE": "doc",
    "tensorflow.losses.msle": "doc",
    "tensorflow.metrics.Sum": "doc",
    "tensorflow.metrics.get": "doc",
    "tensorflow.nn.avg_pool": "doc",
    "tensorflow.nn.bias_add": "doc",
    "tensorflow.nn.ctc_loss": "doc",
    "tensorflow.nn.max_pool": "doc",
    "tensorflow.nn.nce_loss": "doc",
    "tensorflow.nn.softsign": "doc",
    "tensorflow.raw_ops.Abs": "doc",
    "tensorflow.raw_ops.Any": "doc",
    "tensorflow.raw_ops.Cos": "doc",
    "tensorflow.raw_ops.Elu": "doc",
    "tensorflow.raw_ops.Exp": "doc",
    "tensorflow.raw_ops.Inv": "doc",
    "tensorflow.raw_ops.Min": "doc",
    "tensorflow.raw_ops.Mul": "doc",
    "tensorflow.raw_ops.Sin": "doc",
    "tensorflow.raw_ops.Sub": "doc",
    "tensorflow.raw_ops.Sum": "doc",
    "tensorflow.GradientTape": "doc",
    "tensorflow.boolean_mask": "doc",
    "tensorflow.clip_by_norm": "doc",
    "tensorflow.dtypes.DType": "doc",
    "tensorflow.keras.layers": "doc",
    "tensorflow.keras.losses": "doc",
    "tensorflow.keras.models": "doc",
    "tensorflow.losses.Hinge": "doc",
    "tensorflow.losses.Huber": "doc",
    "tensorflow.losses.hinge": "doc",
    "tensorflow.losses.huber": "doc",
    "tensorflow.nn.erosion2d": "doc",
    "tensorflow.ragged.cross": "doc",
    "tensorflow.raw_ops.Acos": "doc",
    "tensorflow.raw_ops.Copy": "doc",
    "tensorflow.raw_ops.Fact": "doc",
    "tensorflow.raw_ops.Less": "doc",
    "tensorflow.raw_ops.Relu": "doc",
    "tensorflow.raw_ops.Selu": "doc",
    "tensorflow.raw_ops.Sinh": "doc",
    "tensorflow.raw_ops.Sqrt": "doc",
    "tensorflow.raw_ops.TopK": "doc",
    "tensorflow.keras.backend": "doc",
    "tensorflow.keras.metrics": "doc",
    "tensorflow.metrics.Hinge": "doc",
    "tensorflow.metrics.hinge": "doc",
    "tensorflow.nn.avg_pool1d": "doc",
    "tensorflow.nn.avg_pool2d": "doc",
    "tensorflow.nn.avg_pool3d": "doc",
    "tensorflow.nn.dilation2d": "doc",
    "tensorflow.nn.leaky_relu": "doc",
    "tensorflow.nn.max_pool1d": "doc",
    "tensorflow.nn.max_pool2d": "doc",
    "tensorflow.nn.max_pool3d": "doc",
    "tensorflow.raw_ops.Abort": "doc",
    "tensorflow.raw_ops.Angle": "doc",
    "tensorflow.raw_ops.Const": "doc",
    "tensorflow.raw_ops.Cross": "doc",
    "tensorflow.raw_ops.Equal": "doc",
    "tensorflow.raw_ops.Expm1": "doc",
    "tensorflow.raw_ops.Relu6": "doc",
    "tensorflow.raw_ops.Round": "doc",
    "tensorflow.dtypes.complex": "doc",
    "tensorflow.losses.LogCosh": "doc",
    "tensorflow.losses.logcosh": "doc",
    "tensorflow.nn.log_softmax": "doc",
    "tensorflow.raw_ops.InTopK": "doc",
    "tensorflow.raw_ops.Invert": "doc",
    "tensorflow.raw_ops.L2Loss": "doc",
    "tensorflow.raw_ops.OneHot": "doc",
    "tensorflow.raw_ops.PyFunc": "doc",
    "tensorflow.raw_ops.TopKV2": "doc",
    "tensorflow.raw_ops.Unique": "doc",
    "tensorflow.dtypes.as_dtype": "doc",
    "tensorflow.keras.callbacks": "doc",
    "tensorflow.losses.log_cosh": "doc",
    "tensorflow.nn.l2_normalize": "doc",
    "tensorflow.queue.FIFOQueue": "doc",
    "tensorflow.keras.layers.Add": "doc",
    "tensorflow.keras.layers.Dot": "doc",
    "tensorflow.keras.layers.ELU": "doc",
    "tensorflow.keras.layers.GRU": "doc",
    "tensorflow.keras.layers.RNN": "doc",
    "tensorflow.keras.layers.add": "doc",
    "tensorflow.keras.layers.dot": "doc",
    "tensorflow.keras.losses.KLD": "doc",
    "tensorflow.keras.losses.MAE": "doc",
    "tensorflow.keras.losses.MSE": "doc",
    "tensorflow.keras.losses.get": "doc",
    "tensorflow.keras.losses.kld": "doc",
    "tensorflow.keras.losses.mse": "doc",
    "tensorflow.nn.atrous_conv2d": "doc",
    "tensorflow.keras.backend.rnn": "doc",
    "tensorflow.keras.layers.LSTM": "doc",
    "tensorflow.keras.layers.ReLU": "doc",
    "tensorflow.keras.losses.Loss": "doc",
    "tensorflow.keras.losses.MAPE": "doc",
    "tensorflow.keras.losses.MSLE": "doc",
    "tensorflow.keras.losses.msle": "doc",
    "tensorflow.keras.metrics.AUC": "doc",
    "tensorflow.keras.metrics.KLD": "doc",
    "tensorflow.keras.metrics.MAE": "doc",
    "tensorflow.keras.metrics.MSE": "doc",
    "tensorflow.keras.metrics.Sum": "doc",
    "tensorflow.keras.metrics.get": "doc",
    "tensorflow.keras.metrics.kld": "doc",
    "tensorflow.keras.metrics.mse": "doc",
    "tensorflow.nn.space_to_depth": "doc",
    "tensorflow.keras.layers.Dense": "doc",
    "tensorflow.keras.layers.PReLU": "doc",
    "tensorflow.keras.losses.Hinge": "doc",
    "tensorflow.keras.losses.Huber": "doc",
    "tensorflow.keras.losses.hinge": "doc",
    "tensorflow.keras.losses.huber": "doc",
    "tensorflow.keras.metrics.MAPE": "doc",
    "tensorflow.keras.metrics.MSLE": "doc",
    "tensorflow.keras.metrics.Mean": "doc",
    "tensorflow.keras.metrics.msle": "doc",
    "tensorflow.keras.models.Model": "doc",
    "tensorflow.keras.regularizers": "doc",
    "tensorflow.keras.layers.Conv1D": "doc",
    "tensorflow.keras.layers.Conv2D": "doc",
    "tensorflow.keras.layers.Conv3D": "doc",
    "tensorflow.keras.layers.Lambda": "doc",
    "tensorflow.keras.metrics.Hinge": "doc",
    "tensorflow.keras.metrics.hinge": "doc",
    "tensorflow.keras.preprocessing": "doc",
    "tensorflow.losses.KLDivergence": "doc",
    "tensorflow.losses.SquaredHinge": "doc",
    "tensorflow.nn.embedding_lookup": "doc",
    "tensorflow.nn.separable_conv2d": "doc",
    "tensorflow.queue.PriorityQueue": "doc",
    "tensorflow.ragged.boolean_mask": "doc",
    "tensorflow.keras.layers.Average": "doc",
    "tensorflow.keras.layers.GRUCell": "doc",
    "tensorflow.keras.layers.Masking": "doc",
    "tensorflow.keras.layers.Wrapper": "doc",
    "tensorflow.keras.layers.average": "doc",
    "tensorflow.keras.losses.LogCosh": "doc",
    "tensorflow.keras.losses.logcosh": "doc",
    "tensorflow.keras.metrics.Metric": "doc",
    "tensorflow.keras.metrics.Recall": "doc",
    "tensorflow.losses.kl_divergence": "doc",
    "tensorflow.losses.squared_hinge": "doc",
    "tensorflow.nn.collapse_repeated": "doc",
    "tensorflow.raw_ops.AudioSummary": "doc",
    "tensorflow.raw_ops.BarrierClose": "doc",
    "tensorflow.raw_ops.CSVDatasetV2": "doc",
    "tensorflow.raw_ops.CacheDataset": "doc",
    "tensorflow.raw_ops.EncodeBase64": "doc",
    "tensorflow.raw_ops.ModelDataset": "doc",
    "tensorflow.raw_ops.Prelinearize": "doc",
    "tensorflow.raw_ops.QueueCloseV2": "doc",
    "tensorflow.raw_ops.QueueEnqueue": "doc",
    "tensorflow.raw_ops.ShardDataset": "doc",
    "tensorflow.raw_ops.SoftplusGrad": "doc",
    "tensorflow.raw_ops.SoftsignGrad": "doc",
    "tensorflow.raw_ops.WriteSummary": "doc",
    "tensorflow.autodiff.GradientTape": "doc",
    "tensorflow.keras.backend.get_uid": "doc",
    "tensorflow.keras.layers.LSTMCell": "doc",
    "tensorflow.keras.layers.Multiply": "doc",
    "tensorflow.keras.layers.Subtract": "doc",
    "tensorflow.keras.layers.multiply": "doc",
    "tensorflow.keras.layers.subtract": "doc",
    "tensorflow.keras.losses.log_cosh": "doc",
    "tensorflow.keras.metrics.MeanIoU": "doc",
    "tensorflow.keras.metrics.logcosh": "doc",
    "tensorflow.keras.regularizers.L1": "doc",
    "tensorflow.keras.regularizers.L2": "doc",
    "tensorflow.keras.regularizers.l1": "doc",
    "tensorflow.keras.regularizers.l2": "doc",
    "tensorflow.nn.ctc_greedy_decoder": "doc",
    "tensorflow.keras.layers.AvgPool1D": "doc",
    "tensorflow.keras.layers.AvgPool2D": "doc",
    "tensorflow.keras.layers.AvgPool3D": "doc",
    "tensorflow.keras.layers.Embedding": "doc",
    "tensorflow.keras.layers.LeakyReLU": "doc",
    "tensorflow.keras.layers.MaxPool1D": "doc",
    "tensorflow.keras.layers.MaxPool2D": "doc",
    "tensorflow.keras.layers.MaxPool3D": "doc",
    "tensorflow.keras.metrics.Accuracy": "doc",
    "tensorflow.keras.metrics.log_cosh": "doc",
    "tensorflow.keras.regularizers.get": "doc",
    "tensorflow.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.keras.layers.Cropping1D": "doc",
    "tensorflow.keras.layers.Cropping2D": "doc",
    "tensorflow.keras.layers.Cropping3D": "doc",
    "tensorflow.keras.metrics.Precision": "doc",
    "tensorflow.keras.models.load_model": "doc",
    "tensorflow.keras.models.save_model": "doc",
    "tensorflow.keras.regularizers.L1L2": "doc",
    "tensorflow.losses.CategoricalHinge": "doc",
    "tensorflow.nn.RNNCellDeviceWrapper": "doc",
    "tensorflow.nn.max_pool_with_argmax": "doc",
    "tensorflow.keras.callbacks.Callback": "doc",
    "tensorflow.keras.models.clone_model": "doc",
    "tensorflow.keras.regularizers.l1_l2": "doc",
    "tensorflow.losses.categorical_hinge": "doc",
    "tensorflow.nn.RNNCellDropoutWrapper": "doc",
    "tensorflow.nn.all_candidate_sampler": "doc",
    "tensorflow.queue.RandomShuffleQueue": "doc",
    "tensorflow.keras.callbacks.CSVLogger": "doc",
    "tensorflow.keras.layers.AlphaDropout": "doc",
    "tensorflow.keras.layers.MaxPooling1D": "doc",
    "tensorflow.keras.layers.MaxPooling2D": "doc",
    "tensorflow.keras.layers.MaxPooling3D": "doc",
    "tensorflow.keras.layers.UpSampling1D": "doc",
    "tensorflow.keras.layers.UpSampling2D": "doc",
    "tensorflow.keras.layers.UpSampling3D": "doc",
    "tensorflow.keras.losses.KLDivergence": "doc",
    "tensorflow.keras.losses.SquaredHinge": "doc",
    "tensorflow.losses.BinaryCrossentropy": "doc",
    "tensorflow.nn.RNNCellResidualWrapper": "doc",
    "tensorflow.keras.callbacks.BaseLogger": "doc",
    "tensorflow.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.keras.losses.kl_divergence": "doc",
    "tensorflow.keras.losses.squared_hinge": "doc",
    "tensorflow.keras.metrics.KLDivergence": "doc",
    "tensorflow.keras.metrics.LogCoshError": "doc",
    "tensorflow.keras.metrics.SquaredHinge": "doc",
    "tensorflow.losses.binary_crossentropy": "doc",
    "tensorflow.metrics.BinaryCrossentropy": "doc",
    "tensorflow.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.raw_ops.LoadAndRemapMatrix": "doc",
    "tensorflow.raw_ops.MapAndBatchDataset": "doc",
    "tensorflow.raw_ops.MergeV2Checkpoints": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueueV2": "doc",
    "tensorflow.raw_ops.ParallelMapDataset": "doc",
    "tensorflow.raw_ops.StringToHashBucket": "doc",
    "tensorflow.raw_ops.WrapDatasetVariant": "doc",
    "tensorflow.keras.backend.clear_session": "doc",
    "tensorflow.keras.metrics.TrueNegatives": "doc",
    "tensorflow.keras.metrics.TruePositives": "doc",
    "tensorflow.keras.metrics.kl_divergence": "doc",
    "tensorflow.keras.metrics.squared_hinge": "doc",
    "tensorflow.keras.callbacks.CallbackList": "doc",
    "tensorflow.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.keras.layers.SeparableConv1D": "doc",
    "tensorflow.keras.layers.SeparableConv2D": "doc",
    "tensorflow.keras.layers.StackedRNNCells": "doc",
    "tensorflow.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.keras.metrics.FalsePositives": "doc",
    "tensorflow.keras.models.model_from_json": "doc",
    "tensorflow.keras.models.model_from_yaml": "doc",
    "tensorflow.keras.preprocessing.sequence": "doc",
    "tensorflow.nn.scale_regularization_loss": "doc",
    "tensorflow.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.keras.layers.AveragePooling1D": "doc",
    "tensorflow.keras.layers.AveragePooling2D": "doc",
    "tensorflow.keras.layers.AveragePooling3D": "doc",
    "tensorflow.keras.losses.CategoricalHinge": "doc",
    "tensorflow.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.keras.losses.categorical_hinge": "doc",
    "tensorflow.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.keras.models.model_from_config": "doc",
    "tensorflow.keras.regularizers.Regularizer": "doc",
    "tensorflow.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.keras.losses.binary_crossentropy": "doc",
    "tensorflow.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDataset": "doc",
    "tensorflow.raw_ops.StringToHashBucketStrong": "doc",
    "tensorflow.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.losses.kullback_leibler_divergence": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.raw_ops.ExperimentalMapAndBatchDataset": "doc",
    "tensorflow.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.sigmoid": "doc",
    "tensorflow.strings": "doc",
    "tensorflow.unstack": "doc",
    "tensorflow.metrics.mae": "doc",
    "tensorflow.raw_ops.For": "doc",
    "tensorflow.raw_ops.Asin": "doc",
    "tensorflow.raw_ops.Atan": "doc",
    "tensorflow.raw_ops.Diag": "doc",
    "tensorflow.raw_ops.Imag": "doc",
    "tensorflow.strings.join": "doc",
    "tensorflow.raw_ops.Asinh": "doc",
    "tensorflow.raw_ops.Atan2": "doc",
    "tensorflow.raw_ops.Atanh": "doc",
    "tensorflow.raw_ops.Batch": "doc",
    "tensorflow.raw_ops.Floor": "doc",
    "tensorflow.raw_ops.IsNan": "doc",
    "tensorflow.raw_ops.Ndtri": "doc",
    "tensorflow.raw_ops.Stack": "doc",
    "tensorflow.raw_ops.Stage": "doc",
    "tensorflow.strings.lower": "doc",
    "tensorflow.strings.strip": "doc",
    "tensorflow.train.Feature": "doc",
    "tensorflow.random.uniform": "doc",
    "tensorflow.raw_ops.Assert": "doc",
    "tensorflow.raw_ops.Assign": "doc",
    "tensorflow.raw_ops.Gather": "doc",
    "tensorflow.raw_ops.Igamma": "doc",
    "tensorflow.raw_ops.Lgamma": "doc",
    "tensorflow.raw_ops.Switch": "doc",
    "tensorflow.metrics.Poisson": "doc",
    "tensorflow.metrics.poisson": "doc",
    "tensorflow.raw_ops.Betainc": "doc",
    "tensorflow.raw_ops.Cumprod": "doc",
    "tensorflow.raw_ops.Digamma": "doc",
    "tensorflow.raw_ops.Igammac": "doc",
    "tensorflow.raw_ops.Maximum": "doc",
    "tensorflow.raw_ops.PrintV2": "doc",
    "tensorflow.raw_ops.Reshape": "doc",
    "tensorflow.raw_ops.Softmax": "doc",
    "tensorflow.raw_ops.Unstage": "doc",
    "tensorflow.raw_ops.DiagPart": "doc",
    "tensorflow.raw_ops.RefEnter": "doc",
    "tensorflow.raw_ops.StackPop": "doc",
    "tensorflow.raw_ops.Variable": "doc",
    "tensorflow.metrics.serialize": "doc",
    "tensorflow.raw_ops.AssignAdd": "doc",
    "tensorflow.raw_ops.BitwiseOr": "doc",
    "tensorflow.raw_ops.RestoreV2": "doc",
    "tensorflow.strings.as_string": "doc",
    "tensorflow.strings.to_number": "doc",
    "tensorflow.strings.bytes_split": "doc",
    "tensorflow.strings.reduce_join": "doc",
    "tensorflow.train.list_variables": "doc",
    "tensorflow.signal.hamming_window": "doc",
    "tensorflow.strings.regex_replace": "doc",
    "tensorflow.strings.to_hash_bucket": "doc",
    "tensorflow.strings.unicode_decode": "doc",
    "tensorflow.strings.unicode_encode": "doc",
    "tensorflow.strings.unicode_script": "doc",
    "tensorflow.metrics.mean_squared_error": "doc",
    "tensorflow.raw_ops.BatchMatrixSolveLs": "doc",
    "tensorflow.raw_ops.GetSessionHandleV2": "doc",
    "tensorflow.raw_ops.IsotonicRegression": "doc",
    "tensorflow.raw_ops.PaddedBatchDataset": "doc",
    "tensorflow.raw_ops.ReaderRestoreState": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtN": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV2": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV3": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV2": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV3": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMax": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMin": "doc",
    "tensorflow.raw_ops.UnsortedSegmentSum": "doc",
    "tensorflow.strings.to_hash_bucket_strong": "doc",
    "tensorflow.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.extract_volume_patches": "doc",
    "tensorflow.variable_creator_scope": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorApplyGradient": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorSetGlobalStep": "doc",
    "tensorflow.raw_ops.ExperimentalParseExampleDataset": "doc",
    "tensorflow.debugging.assert_greater_equal": "doc",
    "tensorflow.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.raw_ops.AccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.ConfigureDistributedTPU": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgs": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVars": "doc",
    "tensorflow.raw_ops.ResourceScatterNdUpdate": "doc",
    "tensorflow.raw_ops.StatefulTruncatedNormal": "doc",
    "tensorflow.raw_ops.StatelessRandomNormalV2": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandleV2": "doc",
    "tensorflow.raw_ops.TensorListPushBackBatch": "doc",
    "tensorflow.random.uniform_candidate_sampler": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixComponents": "doc",
    "tensorflow.raw_ops.CombinedNonMaxSuppression": "doc",
    "tensorflow.raw_ops.DenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.DirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.EncodeJpegVariableQuality": "doc",
    "tensorflow.raw_ops.ExperimentalRandomDataset": "doc",
    "tensorflow.raw_ops.SendTPUEmbeddingGradients": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDatasetV2": "doc",
    "tensorflow.raw_ops.StatelessParameterizedTruncatedNormal": "doc",
    "tensorflow.signal.inverse_stft_window_fn": "doc",
    "tensorflow.metrics.binary_crossentropy": "doc",
    "tensorflow.raw_ops.AssignSubVariableOp": "doc",
    "tensorflow.raw_ops.Conv2DBackpropInput": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInput": "doc",
    "tensorflow.raw_ops.CumulativeLogsumexp": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxesV2": "doc",
    "tensorflow.raw_ops.IgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV3": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV4": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV5": "doc",
    "tensorflow.debugging.assert_non_positive": "doc",
    "tensorflow.batch_to_space": "doc",
    "tensorflow.metrics.FalseNegatives": "doc",
    "tensorflow.raw_ops.AudioSummaryV2": "doc",
    "tensorflow.raw_ops.BatchDatasetV2": "doc",
    "tensorflow.raw_ops.CacheDatasetV2": "doc",
    "tensorflow.raw_ops.FusedPadConv2D": "doc",
    "tensorflow.raw_ops.ReciprocalGrad": "doc",
    "tensorflow.raw_ops.RegexFullMatch": "doc",
    "tensorflow.raw_ops.TFRecordReader": "doc",
    "tensorflow.feature_column.numeric_column": "doc",
    "tensorflow.config.experimental_connect_to_host": "doc",
    "tensorflow.raw_ops.AnonymousRandomSeedGenerator": "doc",
    "tensorflow.raw_ops.FilterByLastComponentDataset": "doc",
    "tensorflow.raw_ops.FixedUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.ParameterizedTruncatedNormal": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByWindowDataset": "doc",
    "tensorflow.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorNumAccumulated": "doc",
    "tensorflow.config.experimental_connect_to_cluster": "doc",
    "tensorflow.IndexedSlices": "doc",
    "tensorflow.sequence_mask": "doc",
    "tensorflow.strided_slice": "doc",
    "tensorflow.metrics.TrueNegatives": "doc",
    "tensorflow.metrics.TruePositives": "doc",
    "tensorflow.raw_ops.ApplyAdadelta": "doc",
    "tensorflow.raw_ops.ApplyMomentum": "doc",
    "tensorflow.raw_ops.CheckNumerics": "doc",
    "tensorflow.raw_ops.CropAndResize": "doc",
    "tensorflow.raw_ops.DebugIdentity": "doc",
    "tensorflow.raw_ops.DynamicStitch": "doc",
    "tensorflow.raw_ops.InfeedDequeue": "doc",
    "tensorflow.raw_ops.InfeedEnqueue": "doc",
    "tensorflow.raw_ops.MatrixSolveLs": "doc",
    "tensorflow.raw_ops.PriorityQueue": "doc",
    "tensorflow.raw_ops.QueueIsClosed": "doc",
    "tensorflow.raw_ops.RandomPoisson": "doc",
    "tensorflow.raw_ops.RandomShuffle": "doc",
    "tensorflow.raw_ops.ScatterUpdate": "doc",
    "tensorflow.raw_ops.UnicodeEncode": "doc",
    "tensorflow.quantize_and_dequantize_v4": "doc",
    "tensorflow.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.raw_ops.ExperimentalRebatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalUnbatchDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDatasetV2": "doc",
    "tensorflow.metrics.CategoricalAccuracy": "doc",
    "tensorflow.raw_ops.AllCandidateSampler": "doc",
    "tensorflow.raw_ops.BatchMatrixBandPart": "doc",
    "tensorflow.raw_ops.BatchMatrixDiagPart": "doc",
    "tensorflow.raw_ops.ExtractImagePatches": "doc",
    "tensorflow.raw_ops.IteratorGetNextSync": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmax": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV2": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV3": "doc",
    "tensorflow.train.CheckpointManager": "doc",
    "tensorflow.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.metrics.categorical_crossentropy": "doc",
    "tensorflow.raw_ops.AccumulatorApplyGradient": "doc",
    "tensorflow.raw_ops.AccumulatorSetGlobalStep": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseMatMul": "doc",
    "tensorflow.raw_ops.SparseTensorSliceDataset": "doc",
    "tensorflow.raw_ops.StatefulStandardNormalV2": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformV2": "doc",
    "tensorflow.raw_ops.TensorStridedSliceUpdate": "doc",
    "tensorflow.SparseTensor": "doc",
    "tensorflow.searchsorted": "doc",
    "tensorflow.RegisterGradient": "doc",
    "tensorflow.UnconnectedGradients": "doc",
    "tensorflow.constant_initializer": "doc",
    "tensorflow.control_dependencies": "doc",
    "tensorflow.random.get_global_generator": "doc",
    "tensorflow.raw_ops.ApplyGradientDescent": "doc",
    "tensorflow.raw_ops.Conv2DBackpropFilter": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilter": "doc",
    "tensorflow.raw_ops.ExtractVolumePatches": "doc",
    "tensorflow.raw_ops.ParallelMapDatasetV2": "doc",
    "tensorflow.raw_ops.RaggedTensorToSparse": "doc",
    "tensorflow.raw_ops.StaticRegexFullMatch": "doc",
    "tensorflow.raw_ops.TPUCompilationResult": "doc",
    "tensorflow.debugging.assert_rank_at_least": "doc",
    "tensorflow.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.raw_ops.BoostedTreesGetEnsembleStates": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToSparseTensor": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetToTFRecord": "doc",
    "tensorflow.raw_ops.ExperimentalIteratorGetDevice": "doc",
    "tensorflow.raw_ops.SparseAccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4Grad": "doc",
    "tensorflow.VariableSynchronization": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.bitwise": "doc",
    "tensorflow.complex": "doc",
    "tensorflow.metrics": "doc",
    "tensorflow.one_hot": "doc",
    "tensorflow.raw_ops": "doc",
    "tensorflow.reverse": "doc",
    "tensorflow.shape_n": "doc",
    "tensorflow.raw_ops.If": "doc",
    "tensorflow.raw_ops.Qr": "doc",
    "tensorflow.metrics.AUC": "doc",
    "tensorflow.metrics.KLD": "doc",
    "tensorflow.metrics.MAE": "doc",
    "tensorflow.metrics.MSE": "doc",
    "tensorflow.metrics.kld": "doc",
    "tensorflow.metrics.mse": "doc",
    "tensorflow.raw_ops.Add": "doc",
    "tensorflow.raw_ops.All": "doc",
    "tensorflow.raw_ops.Div": "doc",
    "tensorflow.raw_ops.Eig": "doc",
    "tensorflow.raw_ops.Erf": "doc",
    "tensorflow.raw_ops.FFT": "doc",
    "tensorflow.raw_ops.LRN": "doc",
    "tensorflow.raw_ops.Log": "doc",
    "tensorflow.raw_ops.Max": "doc",
    "tensorflow.raw_ops.Mod": "doc",
    "tensorflow.raw_ops.Neg": "doc",
    "tensorflow.raw_ops.Pad": "doc",
    "tensorflow.raw_ops.Pow": "doc",
    "tensorflow.raw_ops.Svd": "doc",
    "tensorflow.raw_ops.Tan": "doc",
    "tensorflow.metrics.MAPE": "doc",
    "tensorflow.metrics.MSLE": "doc",
    "tensorflow.metrics.Mean": "doc",
    "tensorflow.metrics.msle": "doc",
    "tensorflow.raw_ops.AddN": "doc",
    "tensorflow.raw_ops.Case": "doc",
    "tensorflow.raw_ops.Ceil": "doc",
    "tensorflow.raw_ops.Conj": "doc",
    "tensorflow.raw_ops.Cosh": "doc",
    "tensorflow.raw_ops.Erfc": "doc",
    "tensorflow.raw_ops.Fill": "doc",
    "tensorflow.raw_ops.IFFT": "doc",
    "tensorflow.raw_ops.Mean": "doc",
    "tensorflow.raw_ops.Mfcc": "doc",
    "tensorflow.raw_ops.NoOp": "doc",
    "tensorflow.raw_ops.Pack": "doc",
    "tensorflow.raw_ops.Prod": "doc",
    "tensorflow.raw_ops.RFFT": "doc",
    "tensorflow.raw_ops.Rank": "doc",
    "tensorflow.raw_ops.Real": "doc",
    "tensorflow.raw_ops.Recv": "doc",
    "tensorflow.raw_ops.Roll": "doc",
    "tensorflow.raw_ops.Save": "doc",
    "tensorflow.raw_ops.Send": "doc",
    "tensorflow.raw_ops.Sign": "doc",
    "tensorflow.raw_ops.Size": "doc",
    "tensorflow.raw_ops.Tanh": "doc",
    "tensorflow.raw_ops.Tile": "doc",
    "tensorflow.raw_ops.Acosh": "doc",
    "tensorflow.raw_ops.AddV2": "doc",
    "tensorflow.raw_ops.Dawsn": "doc",
    "tensorflow.raw_ops.FFT2D": "doc",
    "tensorflow.raw_ops.FFT3D": "doc",
    "tensorflow.raw_ops.IRFFT": "doc",
    "tensorflow.raw_ops.IsInf": "doc",
    "tensorflow.raw_ops.Log1p": "doc",
    "tensorflow.raw_ops.Merge": "doc",
    "tensorflow.raw_ops.PadV2": "doc",
    "tensorflow.raw_ops.Range": "doc",
    "tensorflow.raw_ops.Shape": "doc",
    "tensorflow.raw_ops.Slice": "doc",
    "tensorflow.raw_ops.Where": "doc",
    "tensorflow.raw_ops.While": "doc",
    "tensorflow.raw_ops.Xdivy": "doc",
    "tensorflow.raw_ops.Xlogy": "doc",
    "tensorflow.dynamic_stitch": "doc",
    "tensorflow.metrics.Metric": "doc",
    "tensorflow.metrics.Recall": "doc",
    "tensorflow.raw_ops.ArgMax": "doc",
    "tensorflow.raw_ops.ArgMin": "doc",
    "tensorflow.raw_ops.Conv2D": "doc",
    "tensorflow.raw_ops.Conv3D": "doc",
    "tensorflow.raw_ops.Cumsum": "doc",
    "tensorflow.raw_ops.Erfinv": "doc",
    "tensorflow.raw_ops.IFFT2D": "doc",
    "tensorflow.raw_ops.IFFT3D": "doc",
    "tensorflow.raw_ops.MatMul": "doc",
    "tensorflow.raw_ops.RFFT2D": "doc",
    "tensorflow.raw_ops.RFFT3D": "doc",
    "tensorflow.raw_ops.SaveV2": "doc",
    "tensorflow.raw_ops.Select": "doc",
    "tensorflow.raw_ops.ShapeN": "doc",
    "tensorflow.raw_ops.Spence": "doc",
    "tensorflow.raw_ops.Square": "doc",
    "tensorflow.raw_ops.ToBool": "doc",
    "tensorflow.metrics.MeanIoU": "doc",
    "tensorflow.metrics.logcosh": "doc",
    "tensorflow.raw_ops.AvgPool": "doc",
    "tensorflow.raw_ops.Barrier": "doc",
    "tensorflow.raw_ops.BiasAdd": "doc",
    "tensorflow.raw_ops.CTCLoss": "doc",
    "tensorflow.raw_ops.Complex": "doc",
    "tensorflow.raw_ops.EluGrad": "doc",
    "tensorflow.raw_ops.IRFFT2D": "doc",
    "tensorflow.raw_ops.IRFFT3D": "doc",
    "tensorflow.raw_ops.InvGrad": "doc",
    "tensorflow.raw_ops.LRNGrad": "doc",
    "tensorflow.raw_ops.MapPeek": "doc",
    "tensorflow.raw_ops.MapSize": "doc",
    "tensorflow.raw_ops.MaxPool": "doc",
    "tensorflow.raw_ops.MutexV2": "doc",
    "tensorflow.raw_ops.RealDiv": "doc",
    "tensorflow.raw_ops.RefExit": "doc",
    "tensorflow.raw_ops.Reverse": "doc",
    "tensorflow.raw_ops.RngSkip": "doc",
    "tensorflow.raw_ops.SetSize": "doc",
    "tensorflow.raw_ops.Sigmoid": "doc",
    "tensorflow.raw_ops.Squeeze": "doc",
    "tensorflow.raw_ops.StackV2": "doc",
    "tensorflow.raw_ops.Xlog1py": "doc",
    "tensorflow.metrics.Accuracy": "doc",
    "tensorflow.metrics.log_cosh": "doc",
    "tensorflow.raw_ops.AllToAll": "doc",
    "tensorflow.raw_ops.AsString": "doc",
    "tensorflow.raw_ops.BatchFFT": "doc",
    "tensorflow.raw_ops.BatchSvd": "doc",
    "tensorflow.raw_ops.BesselI0": "doc",
    "tensorflow.raw_ops.BesselI1": "doc",
    "tensorflow.raw_ops.BesselJ0": "doc",
    "tensorflow.raw_ops.BesselJ1": "doc",
    "tensorflow.raw_ops.BesselK0": "doc",
    "tensorflow.raw_ops.BesselK1": "doc",
    "tensorflow.raw_ops.BesselY0": "doc",
    "tensorflow.raw_ops.BesselY1": "doc",
    "tensorflow.raw_ops.Cholesky": "doc",
    "tensorflow.raw_ops.CudnnRNN": "doc",
    "tensorflow.raw_ops.DeepCopy": "doc",
    "tensorflow.raw_ops.DivNoNan": "doc",
    "tensorflow.raw_ops.FloorDiv": "doc",
    "tensorflow.raw_ops.FloorMod": "doc",
    "tensorflow.raw_ops.GatherNd": "doc",
    "tensorflow.raw_ops.GatherV2": "doc",
    "tensorflow.raw_ops.HSVToRGB": "doc",
    "tensorflow.raw_ops.ListDiff": "doc",
    "tensorflow.raw_ops.LoopCond": "doc",
    "tensorflow.raw_ops.MapClear": "doc",
    "tensorflow.raw_ops.MapDefun": "doc",
    "tensorflow.raw_ops.MulNoNan": "doc",
    "tensorflow.raw_ops.NotEqual": "doc",
    "tensorflow.raw_ops.OnesLike": "doc",
    "tensorflow.raw_ops.RGBToHSV": "doc",
    "tensorflow.raw_ops.ReadFile": "doc",
    "tensorflow.raw_ops.RefMerge": "doc",
    "tensorflow.raw_ops.ReluGrad": "doc",
    "tensorflow.raw_ops.SelectV2": "doc",
    "tensorflow.raw_ops.SeluGrad": "doc",
    "tensorflow.raw_ops.Softsign": "doc",
    "tensorflow.raw_ops.SqrtGrad": "doc",
    "tensorflow.raw_ops.TanhGrad": "doc",
    "tensorflow.raw_ops.TileGrad": "doc",
    "tensorflow.metrics.Precision": "doc",
    "tensorflow.raw_ops.ApplyAdam": "doc",
    "tensorflow.raw_ops.AvgPool3D": "doc",
    "tensorflow.raw_ops.BatchIFFT": "doc",
    "tensorflow.raw_ops.BesselI0e": "doc",
    "tensorflow.raw_ops.BesselI1e": "doc",
    "tensorflow.raw_ops.BesselK0e": "doc",
    "tensorflow.raw_ops.BesselK1e": "doc",
    "tensorflow.raw_ops.BiasAddV1": "doc",
    "tensorflow.raw_ops.BlockLSTM": "doc",
    "tensorflow.raw_ops.Bucketize": "doc",
    "tensorflow.raw_ops.CTCLossV2": "doc",
    "tensorflow.raw_ops.CountUpTo": "doc",
    "tensorflow.raw_ops.DecodeBmp": "doc",
    "tensorflow.raw_ops.DecodeCSV": "doc",
    "tensorflow.raw_ops.DecodeGif": "doc",
    "tensorflow.raw_ops.DecodePng": "doc",
    "tensorflow.raw_ops.DecodeRaw": "doc",
    "tensorflow.raw_ops.DecodeWav": "doc",
    "tensorflow.raw_ops.EncodePng": "doc",
    "tensorflow.raw_ops.EncodeWav": "doc",
    "tensorflow.raw_ops.FIFOQueue": "doc",
    "tensorflow.raw_ops.FakeParam": "doc",
    "tensorflow.raw_ops.FakeQueue": "doc",
    "tensorflow.raw_ops.HashTable": "doc",
    "tensorflow.raw_ops.LeakyRelu": "doc",
    "tensorflow.raw_ops.LeftShift": "doc",
    "tensorflow.raw_ops.LessEqual": "doc",
    "tensorflow.raw_ops.MaxPool3D": "doc",
    "tensorflow.raw_ops.MaxPoolV2": "doc",
    "tensorflow.raw_ops.MirrorPad": "doc",
    "tensorflow.raw_ops.MutexLock": "doc",
    "tensorflow.raw_ops.Polygamma": "doc",
    "tensorflow.raw_ops.QueueSize": "doc",
    "tensorflow.raw_ops.RefSelect": "doc",
    "tensorflow.raw_ops.RefSwitch": "doc",
    "tensorflow.raw_ops.Relu6Grad": "doc",
    "tensorflow.raw_ops.ReverseV2": "doc",
    "tensorflow.raw_ops.RsqrtGrad": "doc",
    "tensorflow.raw_ops.ScatterNd": "doc",
    "tensorflow.raw_ops.SparseAdd": "doc",
    "tensorflow.raw_ops.StackPush": "doc",
    "tensorflow.raw_ops.StagePeek": "doc",
    "tensorflow.raw_ops.StageSize": "doc",
    "tensorflow.raw_ops.WriteFile": "doc",
    "tensorflow.raw_ops.ZerosLike": "doc",
    "tensorflow.bitwise.left_shift": "doc",
    "tensorflow.raw_ops.BatchFFT2D": "doc",
    "tensorflow.raw_ops.BatchFFT3D": "doc",
    "tensorflow.raw_ops.BitwiseAnd": "doc",
    "tensorflow.raw_ops.CudnnRNNV2": "doc",
    "tensorflow.raw_ops.CudnnRNNV3": "doc",
    "tensorflow.raw_ops.DecodeJpeg": "doc",
    "tensorflow.raw_ops.Dilation2D": "doc",
    "tensorflow.raw_ops.EncodeJpeg": "doc",
    "tensorflow.raw_ops.FresnelSin": "doc",
    "tensorflow.raw_ops.LMDBReader": "doc",
    "tensorflow.raw_ops.LogSoftmax": "doc",
    "tensorflow.raw_ops.LogicalAnd": "doc",
    "tensorflow.raw_ops.LowerBound": "doc",
    "tensorflow.raw_ops.MatrixDiag": "doc",
    "tensorflow.raw_ops.NcclReduce": "doc",
    "tensorflow.raw_ops.NthElement": "doc",
    "tensorflow.raw_ops.QuantizeV2": "doc",
    "tensorflow.raw_ops.RandomCrop": "doc",
    "tensorflow.raw_ops.ReaderRead": "doc",
    "tensorflow.raw_ops.Reciprocal": "doc",
    "tensorflow.raw_ops.ReduceJoin": "doc",
    "tensorflow.raw_ops.RemoteCall": "doc",
    "tensorflow.raw_ops.ResizeArea": "doc",
    "tensorflow.raw_ops.RightShift": "doc",
    "tensorflow.raw_ops.SaveSlices": "doc",
    "tensorflow.raw_ops.ScatterAdd": "doc",
    "tensorflow.raw_ops.ScatterDiv": "doc",
    "tensorflow.raw_ops.ScatterMax": "doc",
    "tensorflow.raw_ops.ScatterMin": "doc",
    "tensorflow.raw_ops.ScatterMul": "doc",
    "tensorflow.raw_ops.ScatterSub": "doc",
    "tensorflow.raw_ops.SdcaFprint": "doc",
    "tensorflow.raw_ops.SegmentMax": "doc",
    "tensorflow.raw_ops.SegmentMin": "doc",
    "tensorflow.raw_ops.SegmentSum": "doc",
    "tensorflow.raw_ops.StackClose": "doc",
    "tensorflow.raw_ops.StackPopV2": "doc",
    "tensorflow.raw_ops.StageClear": "doc",
    "tensorflow.raw_ops.VariableV2": "doc",
    "tensorflow.bitwise.bitwise_and": "doc",
    "tensorflow.raw_ops.ApplyAdaMax": "doc",
    "tensorflow.raw_ops.AvgPoolGrad": "doc",
    "tensorflow.raw_ops.BatchIFFT2D": "doc",
    "tensorflow.raw_ops.BatchIFFT3D": "doc",
    "tensorflow.raw_ops.BiasAddGrad": "doc",
    "tensorflow.raw_ops.BlockLSTMV2": "doc",
    "tensorflow.raw_ops.BroadcastTo": "doc",
    "tensorflow.raw_ops.ClipByValue": "doc",
    "tensorflow.raw_ops.DecodeImage": "doc",
    "tensorflow.raw_ops.DeviceIndex": "doc",
    "tensorflow.raw_ops.EagerPyFunc": "doc",
    "tensorflow.raw_ops.FIFOQueueV2": "doc",
    "tensorflow.raw_ops.HashTableV2": "doc",
    "tensorflow.raw_ops.IgammaGradA": "doc",
    "tensorflow.raw_ops.MatrixSolve": "doc",
    "tensorflow.raw_ops.MaxPoolGrad": "doc",
    "tensorflow.raw_ops.Placeholder": "doc",
    "tensorflow.raw_ops.QueueSizeV2": "doc",
    "tensorflow.raw_ops.RaggedCross": "doc",
    "tensorflow.raw_ops.RaggedRange": "doc",
    "tensorflow.raw_ops.RandomGamma": "doc",
    "tensorflow.raw_ops.ReaderReset": "doc",
    "tensorflow.raw_ops.SegmentMean": "doc",
    "tensorflow.raw_ops.SegmentProd": "doc",
    "tensorflow.raw_ops.SigmoidGrad": "doc",
    "tensorflow.raw_ops.SobolSample": "doc",
    "tensorflow.raw_ops.SparseCross": "doc",
    "tensorflow.raw_ops.SparseSlice": "doc",
    "tensorflow.raw_ops.SparseSplit": "doc",
    "tensorflow.raw_ops.StackPushV2": "doc",
    "tensorflow.raw_ops.StatelessIf": "doc",
    "tensorflow.raw_ops.TensorArray": "doc",
    "tensorflow.raw_ops.VarHandleOp": "doc",
    "tensorflow.metrics.KLDivergence": "doc",
    "tensorflow.metrics.LogCoshError": "doc",
    "tensorflow.metrics.SquaredHinge": "doc",
    "tensorflow.raw_ops.ApplyAdagrad": "doc",
    "tensorflow.raw_ops.ApplyAddSign": "doc",
    "tensorflow.raw_ops.ApplyRMSProp": "doc",
    "tensorflow.raw_ops.BatchToSpace": "doc",
    "tensorflow.raw_ops.CholeskyGrad": "doc",
    "tensorflow.raw_ops.DecodeBase64": "doc",
    "tensorflow.raw_ops.DepthToSpace": "doc",
    "tensorflow.raw_ops.GRUBlockCell": "doc",
    "tensorflow.raw_ops.GreaterEqual": "doc",
    "tensorflow.raw_ops.ImageSummary": "doc",
    "tensorflow.raw_ops.MergeSummary": "doc",
    "tensorflow.raw_ops.ParseExample": "doc",
    "tensorflow.raw_ops.QuantizedAdd": "doc",
    "tensorflow.raw_ops.QuantizedMul": "doc",
    "tensorflow.raw_ops.QueueDequeue": "doc",
    "tensorflow.raw_ops.ReaderReadV2": "doc",
    "tensorflow.raw_ops.RegexReplace": "doc",
    "tensorflow.raw_ops.ScatterNdAdd": "doc",
    "tensorflow.raw_ops.ScatterNdMax": "doc",
    "tensorflow.raw_ops.ScatterNdMin": "doc",
    "tensorflow.raw_ops.ScatterNdSub": "doc",
    "tensorflow.raw_ops.SdcaShrinkL1": "doc",
    "tensorflow.raw_ops.SpaceToBatch": "doc",
    "tensorflow.raw_ops.SpaceToDepth": "doc",
    "tensorflow.raw_ops.SparseConcat": "doc",
    "tensorflow.raw_ops.SparseMatMul": "doc",
    "tensorflow.raw_ops.StackCloseV2": "doc",
    "tensorflow.raw_ops.StopGradient": "doc",
    "tensorflow.raw_ops.StridedSlice": "doc",
    "tensorflow.raw_ops.UnravelIndex": "doc",
    "tensorflow.metrics.kl_divergence": "doc",
    "tensorflow.metrics.squared_hinge": "doc",
    "tensorflow.raw_ops.AvgPool3DGrad": "doc",
    "tensorflow.raw_ops.BatchCholesky": "doc",
    "tensorflow.raw_ops.BlockLSTMGrad": "doc",
    "tensorflow.raw_ops.LSTMBlockCell": "doc",
    "tensorflow.raw_ops.LeakyReluGrad": "doc",
    "tensorflow.raw_ops.MaxPool3DGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradV2": "doc",
    "tensorflow.raw_ops.MirrorPadGrad": "doc",
    "tensorflow.raw_ops.NcclAllReduce": "doc",
    "tensorflow.raw_ops.NcclBroadcast": "doc",
    "tensorflow.raw_ops.PlaceholderV2": "doc",
    "tensorflow.raw_ops.QuantizedRelu": "doc",
    "tensorflow.raw_ops.ReaderResetV2": "doc",
    "tensorflow.raw_ops.ScalarSummary": "doc",
    "tensorflow.raw_ops.SparseAddGrad": "doc",
    "tensorflow.raw_ops.SparseCrossV2": "doc",
    "tensorflow.raw_ops.SparseReorder": "doc",
    "tensorflow.raw_ops.SparseReshape": "doc",
    "tensorflow.raw_ops.SparseSoftmax": "doc",
    "tensorflow.raw_ops.SparseToDense": "doc",
    "tensorflow.raw_ops.StatelessCase": "doc",
    "tensorflow.raw_ops.UnicodeDecode": "doc",
    "tensorflow.raw_ops.UnicodeScript": "doc",
    "tensorflow.raw_ops.VariableShape": "doc",
    "tensorflow.metrics.FalsePositives": "doc",
    "tensorflow.raw_ops.ApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ApplyAdagradV2": "doc",
    "tensorflow.raw_ops.ApplyPowerSign": "doc",
    "tensorflow.raw_ops.BatchToSpaceND": "doc",
    "tensorflow.raw_ops.ControlTrigger": "doc",
    "tensorflow.raw_ops.ExtractGlimpse": "doc",
    "tensorflow.raw_ops.GuaranteeConst": "doc",
    "tensorflow.raw_ops.OrderedMapPeek": "doc",
    "tensorflow.raw_ops.OrderedMapSize": "doc",
    "tensorflow.raw_ops.OutfeedDequeue": "doc",
    "tensorflow.raw_ops.OutfeedEnqueue": "doc",
    "tensorflow.raw_ops.ParallelConcat": "doc",
    "tensorflow.raw_ops.ParseExampleV2": "doc",
    "tensorflow.raw_ops.QuantizedRelu6": "doc",
    "tensorflow.raw_ops.QuantizedReluX": "doc",
    "tensorflow.raw_ops.QueueDequeueV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueV2": "doc",
    "tensorflow.raw_ops.ReadVariableOp": "doc",
    "tensorflow.raw_ops.ReaderReadUpTo": "doc",
    "tensorflow.raw_ops.RngReadAndSkip": "doc",
    "tensorflow.raw_ops.SelfAdjointEig": "doc",
    "tensorflow.raw_ops.ShuffleDataset": "doc",
    "tensorflow.raw_ops.SpaceToBatchND": "doc",
    "tensorflow.raw_ops.StatelessWhile": "doc",
    "tensorflow.raw_ops.BarrierTakeMany": "doc",
    "tensorflow.raw_ops.BatchMatrixDiag": "doc",
    "tensorflow.raw_ops.BlockLSTMGradV2": "doc",
    "tensorflow.raw_ops.CheckNumericsV2": "doc",
    "tensorflow.raw_ops.CompressElement": "doc",
    "tensorflow.raw_ops.CrossReplicaSum": "doc",
    "tensorflow.raw_ops.DebugIdentityV2": "doc",
    "tensorflow.raw_ops.DecodePaddedRaw": "doc",
    "tensorflow.raw_ops.EmptyTensorList": "doc",
    "tensorflow.raw_ops.InitializeTable": "doc",
    "tensorflow.raw_ops.LookupTableFind": "doc",
    "tensorflow.raw_ops.LookupTableSize": "doc",
    "tensorflow.raw_ops.MapUnstageNoKey": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV2": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV3": "doc",
    "tensorflow.raw_ops.MaxPoolGradGrad": "doc",
    "tensorflow.raw_ops.OrderedMapClear": "doc",
    "tensorflow.raw_ops.OrderedMapStage": "doc",
    "tensorflow.raw_ops.PartitionedCall": "doc",
    "tensorflow.raw_ops.PreventGradient": "doc",
    "tensorflow.raw_ops.PriorityQueueV2": "doc",
    "tensorflow.raw_ops.QuantizedConcat": "doc",
    "tensorflow.raw_ops.QuantizedConv2D": "doc",
    "tensorflow.raw_ops.QueueIsClosedV2": "doc",
    "tensorflow.raw_ops.RandomGammaGrad": "doc",
    "tensorflow.raw_ops.RandomPoissonV2": "doc",
    "tensorflow.raw_ops.ReverseSequence": "doc",
    "tensorflow.raw_ops.ScatterNdUpdate": "doc",
    "tensorflow.raw_ops.ShardedFilename": "doc",
    "tensorflow.raw_ops.ShardedFilespec": "doc",
    "tensorflow.raw_ops.SparseApplyFtrl": "doc",
    "tensorflow.raw_ops.SparseMatrixAdd": "doc",
    "tensorflow.raw_ops.SparseMatrixMul": "doc",
    "tensorflow.raw_ops.SparseMatrixNNZ": "doc",
    "tensorflow.raw_ops.SparseReduceMax": "doc",
    "tensorflow.raw_ops.SparseReduceSum": "doc",
    "tensorflow.raw_ops.SparseSliceGrad": "doc",
    "tensorflow.raw_ops.StatefulUniform": "doc",
    "tensorflow.raw_ops.TFRecordDataset": "doc",
    "tensorflow.raw_ops.TensorArrayPack": "doc",
    "tensorflow.raw_ops.TensorArrayRead": "doc",
    "tensorflow.raw_ops.TensorArraySize": "doc",
    "tensorflow.raw_ops.TensorListSplit": "doc",
    "tensorflow.raw_ops.WholeFileReader": "doc",
    "tensorflow.raw_ops.WorkerHeartbeat": "doc",
    "tensorflow.debugging.check_numerics": "doc",
    "tensorflow.metrics.CategoricalHinge": "doc",
    "tensorflow.raw_ops.AssignVariableOp": "doc",
    "tensorflow.raw_ops.AutoShardDataset": "doc",
    "tensorflow.raw_ops.BarrierReadySize": "doc",
    "tensorflow.raw_ops.CTCGreedyDecoder": "doc",
    "tensorflow.raw_ops.CollectiveReduce": "doc",
    "tensorflow.raw_ops.CudnnRNNBackprop": "doc",
    "tensorflow.raw_ops.DecodeCompressed": "doc",
    "tensorflow.raw_ops.DummyMemoryCache": "doc",
    "tensorflow.raw_ops.ExtractGlimpseV2": "doc",
    "tensorflow.raw_ops.ExtractJpegShape": "doc",
    "tensorflow.raw_ops.GRUBlockCellGrad": "doc",
    "tensorflow.raw_ops.MutableHashTable": "doc",
    "tensorflow.raw_ops.OutfeedDequeueV2": "doc",
    "tensorflow.raw_ops.QuantizedAvgPool": "doc",
    "tensorflow.raw_ops.QuantizedBiasAdd": "doc",
    "tensorflow.raw_ops.QuantizedReshape": "doc",
    "tensorflow.raw_ops.QueueDequeueMany": "doc",
    "tensorflow.raw_ops.QueueDequeueUpTo": "doc",
    "tensorflow.raw_ops.QueueEnqueueMany": "doc",
    "tensorflow.raw_ops.RandomUniformInt": "doc",
    "tensorflow.raw_ops.ReaderReadUpToV2": "doc",
    "tensorflow.raw_ops.SelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV2": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV3": "doc",
    "tensorflow.raw_ops.SparseSegmentSum": "doc",
    "tensorflow.raw_ops.StridedSliceGrad": "doc",
    "tensorflow.raw_ops.SymbolicGradient": "doc",
    "tensorflow.raw_ops.TFRecordReaderV2": "doc",
    "tensorflow.raw_ops.TensorArraySplit": "doc",
    "tensorflow.raw_ops.TensorListLength": "doc",
    "tensorflow.raw_ops.ThreadPoolHandle": "doc",
    "tensorflow.raw_ops.TridiagonalSolve": "doc",
    "tensorflow.raw_ops.UnicodeTranscode": "doc",
    "tensorflow.metrics.PrecisionAtRecall": "doc",
    "tensorflow.metrics.RecallAtPrecision": "doc",
    "tensorflow.raw_ops.BatchCholeskyGrad": "doc",
    "tensorflow.raw_ops.CompareAndBitpack": "doc",
    "tensorflow.raw_ops.DecodeAndCropJpeg": "doc",
    "tensorflow.raw_ops.DecodeJSONExample": "doc",
    "tensorflow.raw_ops.InitializeTableV2": "doc",
    "tensorflow.raw_ops.LSTMBlockCellGrad": "doc",
    "tensorflow.raw_ops.LookupTableExport": "doc",
    "tensorflow.raw_ops.LookupTableFindV2": "doc",
    "tensorflow.raw_ops.LookupTableImport": "doc",
    "tensorflow.raw_ops.LookupTableInsert": "doc",
    "tensorflow.raw_ops.LookupTableSizeV2": "doc",
    "tensorflow.raw_ops.MaxPool3DGradGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradV2": "doc",
    "tensorflow.raw_ops.MaxPoolWithArgmax": "doc",
    "tensorflow.raw_ops.OrderedMapUnstage": "doc",
    "tensorflow.raw_ops.ResourceApplyAdam": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrl": "doc",
    "tensorflow.raw_ops.ResourceCountUpTo": "doc",
    "tensorflow.raw_ops.ScaleAndTranslate": "doc",
    "tensorflow.raw_ops.SparseApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SparseCrossHashed": "doc",
    "tensorflow.raw_ops.SparseSegmentMean": "doc",
    "tensorflow.raw_ops.SquaredDifference": "doc",
    "tensorflow.raw_ops.TemporaryVariable": "doc",
    "tensorflow.raw_ops.TensorArrayReadV2": "doc",
    "tensorflow.raw_ops.TensorArrayReadV3": "doc",
    "tensorflow.raw_ops.TensorArraySizeV2": "doc",
    "tensorflow.raw_ops.TensorArraySizeV3": "doc",
    "tensorflow.raw_ops.TensorArrayUnpack": "doc",
    "tensorflow.raw_ops.ThreadPoolDataset": "doc",
    "tensorflow.raw_ops.WholeFileReaderV2": "doc",
    "tensorflow.raw_ops.WriteAudioSummary": "doc",
    "tensorflow.raw_ops.BatchMatrixSetDiag": "doc",
    "tensorflow.raw_ops.CollectiveReduceV2": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV2": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV3": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsSize": "doc",
    "tensorflow.raw_ops.InfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.InfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.MutableHashTableV2": "doc",
    "tensorflow.raw_ops.ParseSingleExample": "doc",
    "tensorflow.raw_ops.QueueDequeueManyV2": "doc",
    "tensorflow.raw_ops.QueueDequeueUpToV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueManyV2": "doc",
    "tensorflow.raw_ops.RandomShuffleQueue": "doc",
    "tensorflow.raw_ops.SparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.SparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.StatefulUniformInt": "doc",
    "tensorflow.raw_ops.StaticRegexReplace": "doc",
    "tensorflow.raw_ops.StridedSliceAssign": "doc",
    "tensorflow.raw_ops.TPUPartitionedCall": "doc",
    "tensorflow.raw_ops.VarIsInitializedOp": "doc",
    "tensorflow.raw_ops.WriteScalarSummary": "doc",
    "tensorflow.raw_ops.AssignAddVariableOp": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEig": "doc",
    "tensorflow.raw_ops.BoostedTreesPredict": "doc",
    "tensorflow.raw_ops.DebugNumericSummary": "doc",
    "tensorflow.raw_ops.HistogramFixedWidth": "doc",
    "tensorflow.raw_ops.LookupTableExportV2": "doc",
    "tensorflow.raw_ops.LookupTableImportV2": "doc",
    "tensorflow.raw_ops.LookupTableInsertV2": "doc",
    "tensorflow.raw_ops.LookupTableRemoveV2": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.OutfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.ResourceApplyAdaMax": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SparseApplyAdadelta": "doc",
    "tensorflow.raw_ops.SparseApplyMomentum": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseAdd": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseDiv": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseMul": "doc",
    "tensorflow.raw_ops.SparseSparseMaximum": "doc",
    "tensorflow.raw_ops.SparseSparseMinimum": "doc",
    "tensorflow.config.functions_run_eagerly": "doc",
    "tensorflow.config.list_physical_devices": "doc",
    "tensorflow.metrics.RootMeanSquaredError": "doc",
    "tensorflow.metrics.categorical_accuracy": "doc",
    "tensorflow.random.all_candidate_sampler": "doc",
    "tensorflow.raw_ops.AnonymousMemoryCache": "doc",
    "tensorflow.raw_ops.ApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.CTCBeamSearchDecoder": "doc",
    "tensorflow.raw_ops.LogMatrixDeterminant": "doc",
    "tensorflow.raw_ops.PaddedBatchDatasetV2": "doc",
    "tensorflow.raw_ops.ParseSequenceExample": "doc",
    "tensorflow.raw_ops.RaggedTensorToTensor": "doc",
    "tensorflow.raw_ops.RandomShuffleQueueV2": "doc",
    "tensorflow.raw_ops.RandomStandardNormal": "doc",
    "tensorflow.raw_ops.ReaderSerializeState": "doc",
    "tensorflow.raw_ops.RequantizePerChannel": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagrad": "doc",
    "tensorflow.raw_ops.ResourceApplyAddSign": "doc",
    "tensorflow.raw_ops.ResourceApplyRMSProp": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.SparseTensorDenseAdd": "doc",
    "tensorflow.raw_ops.StatelessMultinomial": "doc",
    "tensorflow.raw_ops.TPUReplicateMetadata": "doc",
    "tensorflow.raw_ops.AddSparseToTensorsMap": "doc",
    "tensorflow.raw_ops.BandedTriangularSolve": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.BoostedTreesBucketize": "doc",
    "tensorflow.raw_ops.ConfigureTPUEmbedding": "doc",
    "tensorflow.raw_ops.DebugGradientIdentity": "doc",
    "tensorflow.raw_ops.DebugNumericSummaryV2": "doc",
    "tensorflow.raw_ops.IsVariableInitialized": "doc",
    "tensorflow.raw_ops.MatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.MaxPoolGradWithArgmax": "doc",
    "tensorflow.raw_ops.MutableDenseHashTable": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTupleV2": "doc",
    "tensorflow.raw_ops.ParallelDynamicStitch": "doc",
    "tensorflow.raw_ops.ParseExampleDatasetV2": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariant": "doc",
    "tensorflow.raw_ops.ResourceApplyAdadelta": "doc",
    "tensorflow.raw_ops.ResourceApplyMomentum": "doc",
    "tensorflow.raw_ops.ScaleAndTranslateGrad": "doc",
    "tensorflow.raw_ops.SparseReduceMaxSparse": "doc",
    "tensorflow.raw_ops.SparseReduceSumSparse": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanGrad": "doc",
    "tensorflow.raw_ops.BatchMatrixDeterminant": "doc",
    "tensorflow.raw_ops.BoostedTreesCenterBias": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToDense": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilterV2": "doc",
    "tensorflow.raw_ops.CropAndResizeGradBoxes": "doc",
    "tensorflow.raw_ops.CropAndResizeGradImage": "doc",
    "tensorflow.raw_ops.DatasetToSingleElement": "doc",
    "tensorflow.raw_ops.DenseToCSRSparseMatrix": "doc",
    "tensorflow.raw_ops.GenerateVocabRemapping": "doc",
    "tensorflow.raw_ops.IteratorToStringHandle": "doc",
    "tensorflow.raw_ops.NonSerializableDataset": "doc",
    "tensorflow.raw_ops.OrderedMapUnstageNoKey": "doc",
    "tensorflow.raw_ops.ParseSequenceExampleV2": "doc",
    "tensorflow.raw_ops.PlaceholderWithDefault": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRelu": "doc",
    "tensorflow.raw_ops.ReaderSerializeStateV2": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradV2": "doc",
    "tensorflow.raw_ops.ResourceApplyPowerSign": "doc",
    "tensorflow.raw_ops.ShutdownDistributedTPU": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNGrad": "doc",
    "tensorflow.raw_ops.StatefulRandomBinomial": "doc",
    "tensorflow.raw_ops.StatefulUniformFullInt": "doc",
    "tensorflow.raw_ops.StatelessRandomGammaV2": "doc",
    "tensorflow.raw_ops.StatelessRandomPoisson": "doc",
    "tensorflow.debugging.enable_check_numerics": "doc",
    "tensorflow.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReader": "doc",
    "tensorflow.raw_ops.FusedResizeAndPadConv2D": "doc",
    "tensorflow.raw_ops.MutableDenseHashTableV2": "doc",
    "tensorflow.raw_ops.QuantizedResizeBilinear": "doc",
    "tensorflow.raw_ops.RaggedTensorFromVariant": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrl": "doc",
    "tensorflow.raw_ops.ScatterNdNonAliasingAdd": "doc",
    "tensorflow.raw_ops.SparseMatrixOrderingAMD": "doc",
    "tensorflow.raw_ops.SparseTensorDenseMatMul": "doc",
    "tensorflow.raw_ops.StatefulPartitionedCall": "doc",
    "tensorflow.raw_ops.StatelessRandomBinomial": "doc",
    "tensorflow.raw_ops.UniformCandidateSampler": "doc",
    "tensorflow.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.raw_ops.DebugGradientRefIdentity": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandle": "doc",
    "tensorflow.raw_ops.OrderedMapIncompleteSize": "doc",
    "tensorflow.raw_ops.PrivateThreadPoolDataset": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2D": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProduced": "doc",
    "tensorflow.raw_ops.TensorArrayGradWithShape": "doc",
    "tensorflow.raw_ops.UnicodeDecodeWithOffsets": "doc",
    "tensorflow.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.raw_ops.AccumulatorNumAccumulated": "doc",
    "tensorflow.raw_ops.AddManySparseToTensorsMap": "doc",
    "tensorflow.raw_ops.BytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParams": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonical": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReaderV2": "doc",
    "tensorflow.raw_ops.IteratorGetNextAsOptional": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradWithArgmax": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensors": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DPerChannel": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrlV2": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformInt": "doc",
    "tensorflow.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.raw_ops.BatchMatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.BoostedTreesAggregateStats": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateEnsemble": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsemble": "doc",
    "tensorflow.raw_ops.ChooseFastestBranchDataset": "doc",
    "tensorflow.raw_ops.InitializeTableFromDataset": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandleV2": "doc",
    "tensorflow.raw_ops.LogUniformCandidateSampler": "doc",
    "tensorflow.raw_ops.ParseSingleSequenceExample": "doc",
    "tensorflow.raw_ops.QuantizeDownAndShrinkRange": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProducedV2": "doc",
    "tensorflow.raw_ops.ResourceApplyKerasMomentum": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.ResourceStridedSliceAssign": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBox": "doc",
    "tensorflow.raw_ops.SparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.SparseApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseCholesky": "doc",
    "tensorflow.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.raw_ops.BoostedTreesTrainingPredict": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParamsV2": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonicalV2": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFile": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensorsV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV3": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV4": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompleted": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdadelta": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyMomentum": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformIntV2": "doc",
    "tensorflow.raw_ops.ApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeStatsSummary": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsembleV2": "doc",
    "tensorflow.raw_ops.ExperimentalTakeWhileDataset": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolHandle": "doc",
    "tensorflow.raw_ops.GenerateBoundingBoxProposals": "doc",
    "tensorflow.raw_ops.MaxIntraOpParallelismDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRequantize": "doc",
    "tensorflow.raw_ops.ResourceApplyAdamWithAmsgrad": "doc",
    "tensorflow.raw_ops.ResourceApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ResourceApplyGradientDescent": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBoxV2": "doc",
    "tensorflow.raw_ops.TakeManySparseFromTensorsMap": "doc",
    "tensorflow.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.raw_ops.BoostedTreesSerializeEnsemble": "doc",
    "tensorflow.raw_ops.ExperimentalAssertNextDataset": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolDataset": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFileV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionWithOverlaps": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariantGradient": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompletedV2": "doc",
    "tensorflow.raw_ops.SoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.SparseTensorToCSRSparseMatrix": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullInt": "doc",
    "tensorflow.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseBatch": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetCardinality": "doc",
    "tensorflow.raw_ops.LearnedUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRelu": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRelu": "doc",
    "tensorflow.raw_ops.SparseAccumulatorApplyGradient": "doc",
    "tensorflow.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.raw_ops.BoostedTreesDeserializeEnsemble": "doc",
    "tensorflow.raw_ops.BoostedTreesExampleDebugOutputs": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingIntegerBatch": "doc",
    "tensorflow.raw_ops.ExperimentalIgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalLatencyStatsDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgsGradient": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsGradient": "doc",
    "tensorflow.raw_ops.SparseSegmentSumWithNumSegments": "doc",
    "tensorflow.raw_ops.StatelessRandomGetKeyCounterAlg": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullIntV2": "doc",
    "tensorflow.raw_ops.StatsAggregatorSetSummaryWriter": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalization": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseAggregateStats": "doc",
    "tensorflow.raw_ops.ExperimentalChooseFastestDataset": "doc",
    "tensorflow.raw_ops.ExperimentalMatchingFilesDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSlidingWindowDataset": "doc",
    "tensorflow.raw_ops.InfeedEnqueuePrelinearizedBuffer": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBias": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyKerasMomentum": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanWithNumSegments": "doc",
    "tensorflow.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeQuantileSummaries": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorHandle": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannel": "doc",
    "tensorflow.raw_ops.IsBoostedTreesEnsembleInitialized": "doc",
    "tensorflow.raw_ops.LegacyParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorToStringHandle": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndRelu": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNWithNumSegments": "doc",
    "tensorflow.raw_ops.TensorListScatterIntoExistingList": "doc",
    "tensorflow.raw_ops.BoostedTreesFlushQuantileSummaries": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropInput": "doc",
    "tensorflow.raw_ops.ExperimentalNonSerializableDataset": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorSummary": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.raw_ops.SparseApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropFilter": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorFromStringHandle": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorGetNextFromShard": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.SparseSoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.StatelessSampleDistortedBoundingBox": "doc",
    "tensorflow.raw_ops.ThreadUnsafeUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalizationGrad": "doc",
    "tensorflow.raw_ops.BoostedTreesEnsembleResourceHandleOp": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingRaggedTensorBatch": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseTensorBatch": "doc",
    "tensorflow.raw_ops.ExperimentalPrivateThreadPoolDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndDequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRequantize": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.ExperimentalBytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.ExperimentalParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSetStatsAggregatorDataset": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplitV2": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceFlush": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndRelu": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestGainsPerFeature": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateQuantileStreamResource": "doc",
    "tensorflow.raw_ops.ExperimentalMaxIntraOpParallelismDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannelGradient": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.raw_ops.QuantizedBatchNormWithGlobalNormalization": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceHandleOp": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceDeserialize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceAddSummaries": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.IsBoostedTreesQuantileStreamResourceInitialized": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSignedSumAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceGetBucketBoundaries": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc",
    "tensorflow.tensor_scatter_nd_add": "doc",
    "tensorflow.tensor_scatter_nd_max": "doc",
    "tensorflow.tensor_scatter_nd_min": "doc",
    "tensorflow.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.debugging.disable_check_numerics": "doc",
    "tensorflow.space_to_batch_nd": "doc",
    "tensorflow.train.latest_checkpoint": "doc",
    "tensorflow.random.stateless_uniform": "doc",
    "tensorflow.Operation": "doc",
    "tensorflow.guarantee_const": "doc",
    "tensorflow.train.BytesList": "doc",
    "tensorflow.debugging.Assert": "doc",
    "tensorflow.matrix_square_root": "doc",
    "tensorflow.tensor_scatter_nd_update": "doc",
    "tensorflow.debugging.assert_positive": "doc",
    "tensorflow.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.feature_column.bucketized_column": "doc",
    "tensorflow.lookup.TextFileIndex": "doc",
    "tensorflow.autograph.set_verbosity": "doc",
    "tensorflow.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.debugging.assert_same_float_dtype": "doc",
    "tensorflow.debugging.assert_rank_in": "doc",
    "tensorflow.TypeSpec": "doc",
    "tensorflow.as_dtype": "doc",
    "tensorflow.constant": "doc",
    "tensorflow.function": "doc",
    "tensorflow.negative": "doc",
    "tensorflow.ragged.constant": "doc",
    "tensorflow.reduce_logsumexp": "doc",
    "tensorflow.random.create_rng_state": "doc",
    "tensorflow.nondifferentiable_batch_function": "doc",
    "tensorflow.required_space_to_batch_paddings": "doc",
    "tensorflow.config.get_logical_device_configuration": "doc",
    "tensorflow.config.set_logical_device_configuration": "doc",
    "tensorflow.eig": "doc",
    "tensorflow.tan": "doc",
    "tensorflow.asin": "doc",
    "tensorflow.atan": "doc",
    "tensorflow.mlir": "doc",
    "tensorflow.scan": "doc",
    "tensorflow.sign": "doc",
    "tensorflow.size": "doc",
    "tensorflow.tanh": "doc",
    "tensorflow.tile": "doc",
    "tensorflow.asinh": "doc",
    "tensorflow.atan2": "doc",
    "tensorflow.atanh": "doc",
    "tensorflow.audio": "doc",
    "tensorflow.floor": "doc",
    "tensorflow.shape": "doc",
    "tensorflow.slice": "doc",
    "tensorflow.train": "doc",
    "tensorflow.Assert": "doc",
    "tensorflow.Tensor": "doc",
    "tensorflow.argmax": "doc",
    "tensorflow.gather": "doc",
    "tensorflow.matmul": "doc",
    "tensorflow.signal": "doc",
    "tensorflow.square": "doc",
    "tensorflow.maximum": "doc",
    "tensorflow.reshape": "doc",
    "tensorflow.version": "doc",
    "tensorflow.Variable": "doc",
    "tensorflow.random.gamma": "doc",
    "tensorflow.signal.fft2d": "doc",
    "tensorflow.signal.fft3d": "doc",
    "tensorflow.signal.frame": "doc",
    "tensorflow.train.JobDef": "doc",
    "tensorflow.random.normal": "doc",
    "tensorflow.signal.rfft2d": "doc",
    "tensorflow.signal.rfft3d": "doc",
    "tensorflow.train.Example": "doc",
    "tensorflow.random.poisson": "doc",
    "tensorflow.autograph.trace": "doc",
    "tensorflow.random.set_seed": "doc",
    "tensorflow.signal.fftshift": "doc",
    "tensorflow.train.ServerDef": "doc",
    "tensorflow.audio.decode_wav": "doc",
    "tensorflow.audio.encode_wav": "doc",
    "tensorflow.saved_model.save": "doc",
    "tensorflow.train.Checkpoint": "doc",
    "tensorflow.train.ClusterDef": "doc",
    "tensorflow.train.ClusterSpec": "doc",
    "tensorflow.signal.hann_window": "doc",
    "tensorflow.train.load_variable": "doc",
    "tensorflow.signal.kaiser_window": "doc",
    "tensorflow.signal.vorbis_window": "doc",
    "tensorflow.train.SequenceExample": "doc",
    "tensorflow.train.load_checkpoint": "doc",
    "tensorflow.Variable.SaveSliceInfo": "doc",
    "tensorflow.signal.overlap_and_add": "doc",
    "tensorflow.train.JobDef.TasksEntry": "doc",
    "tensorflow.train.ExponentialMovingAverage": "doc",
    "tensorflow.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.feature_column.weighted_categorical_column": "doc",
    "tensorflow.debugging.assert_non_negative": "doc",
    "tensorflow.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.IndexedSlicesSpec": "doc",
    "tensorflow.grad_pass_through": "doc",
    "tensorflow.random.stateless_poisson": "doc",
    "tensorflow.debugging.assert_all_finite": "doc",
    "tensorflow.debugging.assert_less_equal": "doc",
    "tensorflow.debugging.assert_none_equal": "doc",
    "tensorflow.sysconfig.get_compile_flags": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.VariableAggregation": "doc",
    "tensorflow.histogram_fixed_width_bins": "doc",
    "tensorflow.random_uniform_initializer": "doc",
    "tensorflow.feature_column": "doc",
    "tensorflow.vectorized_map": "doc",
    "tensorflow.feature_column.crossed_column": "doc",
    "tensorflow.feature_column.shared_embeddings": "doc",
    "tensorflow.register_tensor_conversion_function": "doc",
    "tensorflow.feature_column.make_parse_example_spec": "doc",
    "tensorflow.feature_column.sequence_numeric_column": "doc",
    "tensorflow.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.as_string": "doc",
    "tensorflow.debugging": "doc",
    "tensorflow.not_equal": "doc",
    "tensorflow.ones_like": "doc",
    "tensorflow.tensordot": "doc",
    "tensorflow.random.Algorithm": "doc",
    "tensorflow.debugging.assert_near": "doc",
    "tensorflow.debugging.assert_rank": "doc",
    "tensorflow.debugging.assert_type": "doc",
    "tensorflow.debugging.assert_equal": "doc",
    "tensorflow.random.stateless_binomial": "doc",
    "tensorflow.debugging.assert_proper_iterable": "doc",
    "tensorflow.debugging.get_log_device_placement": "doc",
    "tensorflow.debugging.set_log_device_placement": "doc",
    "tensorflow.clip_by_global_norm": "doc",
    "tensorflow.config.get_visible_devices": "doc",
    "tensorflow.config.set_visible_devices": "doc",
    "tensorflow.add": "doc",
    "tensorflow.eye": "doc",
    "tensorflow.xla": "doc",
    "tensorflow.case": "doc",
    "tensorflow.cond": "doc",
    "tensorflow.cosh": "doc",
    "tensorflow.fill": "doc",
    "tensorflow.rank": "doc",
    "tensorflow.roll": "doc",
    "tensorflow.DType": "doc",
    "tensorflow.Graph": "doc",
    "tensorflow.acosh": "doc",
    "tensorflow.add_n": "doc",
    "tensorflow.foldl": "doc",
    "tensorflow.foldr": "doc",
    "tensorflow.range": "doc",
    "tensorflow.where": "doc",
    "tensorflow.argmin": "doc",
    "tensorflow.config": "doc",
    "tensorflow.cumsum": "doc",
    "tensorflow.device": "doc",
    "tensorflow.divide": "doc",
    "tensorflow.lookup": "doc",
    "tensorflow.ragged": "doc",
    "tensorflow.random": "doc",
    "tensorflow.argsort": "doc",
    "tensorflow.realdiv": "doc",
    "tensorflow.squeeze": "doc",
    "tensorflow.truediv": "doc",
    "tensorflow.autodiff": "doc",
    "tensorflow.meshgrid": "doc",
    "tensorflow.multiply": "doc",
    "tensorflow.profiler": "doc",
    "tensorflow.subtract": "doc",
    "tensorflow.autograph": "doc",
    "tensorflow.gather_nd": "doc",
    "tensorflow.sysconfig": "doc",
    "tensorflow.DeviceSpec": "doc",
    "tensorflow.TensorSpec": "doc",
    "tensorflow.get_logger": "doc",
    "tensorflow.less_equal": "doc",
    "tensorflow.name_scope": "doc",
    "tensorflow.reduce_all": "doc",
    "tensorflow.reduce_any": "doc",
    "tensorflow.reduce_max": "doc",
    "tensorflow.reduce_min": "doc",
    "tensorflow.scalar_mul": "doc",
    "tensorflow.scatter_nd": "doc",
    "tensorflow.while_loop": "doc",
    "tensorflow.zeros_like": "doc",
    "tensorflow.TensorArray": "doc",
    "tensorflow.TensorShape": "doc",
    "tensorflow.assert_rank": "doc",
    "tensorflow.logical_and": "doc",
    "tensorflow.no_gradient": "doc",
    "tensorflow.reduce_mean": "doc",
    "tensorflow.reduce_prod": "doc",
    "tensorflow.saved_model": "doc",
    "tensorflow.RaggedTensor": "doc",
    "tensorflow.assert_equal": "doc",
    "tensorflow.broadcast_to": "doc",
    "tensorflow.load_library": "doc",
    "tensorflow.make_ndarray": "doc",
    "tensorflow.ragged.range": "doc",
    "tensorflow.clip_by_value": "doc",
    "tensorflow.greater_equal": "doc",
    "tensorflow.stop_gradient": "doc",
    "tensorflow.unravel_index": "doc",
    "tensorflow.parallel_stack": "doc",
    "tensorflow.random.shuffle": "doc",
    "tensorflow.TensorArraySpec": "doc",
    "tensorflow.load_op_library": "doc",
    "tensorflow.RaggedTensorSpec": "doc",
    "tensorflow.SparseTensorSpec": "doc",
    "tensorflow.config.threading": "doc",
    "tensorflow.reverse_sequence": "doc",
    "tensorflow.saved_model.load": "doc",
    "tensorflow.autograph.to_code": "doc",
    "tensorflow.sysconfig.get_lib": "doc",
    "tensorflow.autograph.to_graph": "doc",
    "tensorflow.random.categorical": "doc",
    "tensorflow.ragged.cross_hashed": "doc",
    "tensorflow.config.LogicalDevice": "doc",
    "tensorflow.type_spec_from_value": "doc",
    "tensorflow.config.PhysicalDevice": "doc",
    "tensorflow.histogram_fixed_width": "doc",
    "tensorflow.broadcast_static_shape": "doc",
    "tensorflow.lookup.StaticHashTable": "doc",
    "tensorflow.random.stateless_gamma": "doc",
    "tensorflow.broadcast_dynamic_shape": "doc",
    "tensorflow.random.stateless_normal": "doc",
    "tensorflow.sysconfig.get_build_info": "doc",
    "tensorflow.random_normal_initializer": "doc",
    "tensorflow.config.list_logical_devices": "doc",
    "tensorflow.lookup.StaticVocabularyTable": "doc",
    "tensorflow.config.get_soft_device_placement": "doc",
    "tensorflow.config.set_soft_device_placement": "doc",
    "tensorflow.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.saved_model.contains_saved_model": "doc",
    "tensorflow.random.stateless_parameterized_truncated_normal": "doc"
  },
  "pandas.scatter_matrix": {
    "pandas.plotting.scatter_matrix": "doc",
    "pandas.DataFrame.plot.scatter": "doc",
    "pandas.Series.dt.is_quarter_start": "doc",
    "pandas.Timestamp.is_quarter_start": "doc",
    "pandas.DatetimeIndex.is_quarter_start": "doc",
    "pandas.DataFrame.sparse.from_spmatrix": "doc",
    "pandas.Series.cat.reorder_categories": "doc",
    "pandas.CategoricalIndex.reorder_categories": "doc",
    "pandas.date_range": "doc",
    "pandas.bdate_range": "doc",
    "pandas.Index.argmax": "doc",
    "pandas.Series.argmax": "doc",
    "pandas.Series.set_axis": "doc",
    "pandas.Series.to_latex": "doc",
    "pandas.Period.start_time": "doc",
    "pandas.DataFrame.set_axis": "doc",
    "pandas.DataFrame.to_latex": "doc",
    "pandas.Series.dt.start_time": "doc",
    "pandas.Series.cat.categories": "doc",
    "pandas.api.types.is_iterator": "doc",
    "pandas.Categorical.categories": "doc",
    "pandas.PeriodIndex.start_time": "doc",
    "pandas.CategoricalDtype.categories": "doc",
    "pandas.CategoricalIndex.categories": "doc",
    "pandas.tseries.offsets.QuarterBegin": "doc",
    "pandas.tseries.offsets.QuarterBegin.kwds": "doc",
    "pandas.tseries.offsets.QuarterBegin.name": "doc",
    "pandas.tseries.offsets.QuarterBegin.copy": "doc",
    "pandas.tseries.offsets.QuarterBegin.nanos": "doc",
    "pandas.tseries.offsets.QuarterBegin.apply": "doc",
    "pandas.io.formats.style.Styler.set_na_rep": "doc",
    "pandas.tseries.offsets.QuarterBegin.freqstr": "doc",
    "pandas.tseries.offsets.QuarterBegin.onOffset": "doc",
    "pandas.tseries.offsets.QuarterBegin.__call__": "doc",
    "pandas.tseries.offsets.QuarterBegin.normalize": "doc",
    "pandas.tseries.offsets.QuarterBegin.rule_code": "doc",
    "pandas.tseries.offsets.QuarterBegin.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.apply_index": "doc",
    "pandas.tseries.offsets.QuarterBegin.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.is_on_offset": "doc",
    "pandas.api.types.is_categorical_dtype": "doc",
    "pandas.DatetimeIndex.indexer_at_time": "doc",
    "pandas.api.types.is_datetime64_ns_dtype": "doc",
    "pandas.api.types.is_datetime64_dtype": "doc",
    "pandas.api.types.is_integer_dtype": "doc",
    "pandas.api.types.is_datetime64_any_dtype": "doc",
    "pandas.io.formats.style.Styler.set_table_attributes": "doc",
    "pandas.api.types.is_interval_dtype": "doc",
    "pandas.Series.cat.rename_categories": "doc",
    "pandas.Series.cat.remove_categories": "doc",
    "pandas.CategoricalIndex.rename_categories": "doc",
    "pandas.CategoricalIndex.remove_categories": "doc",
    "pandas.Interval": "doc",
    "pandas.DataFrame": "doc",
    "pandas.to_numeric": "doc",
    "pandas.infer_freq": "doc",
    "pandas.set_option": "doc",
    "pandas.DataFrame.T": "doc",
    "pandas.Series.attrs": "doc",
    "pandas.DataFrame.at": "doc",
    "pandas.DataFrame.xs": "doc",
    "pandas.DataFrame.lt": "doc",
    "pandas.DataFrame.gt": "doc",
    "pandas.DataFrame.le": "doc",
    "pandas.DataFrame.ge": "doc",
    "pandas.DataFrame.ne": "doc",
    "pandas.DataFrame.eq": "doc",
    "pandas.Interval.mid": "doc",
    "pandas.Index.argmin": "doc",
    "pandas.Series.cummax": "doc",
    "pandas.Series.argmin": "doc",
    "pandas.DataFrame.iat": "doc",
    "pandas.DataFrame.loc": "doc",
    "pandas.DataFrame.pop": "doc",
    "pandas.DataFrame.get": "doc",
    "pandas.DataFrame.add": "doc",
    "pandas.DataFrame.sub": "doc",
    "pandas.DataFrame.mul": "doc",
    "pandas.DataFrame.div": "doc",
    "pandas.DataFrame.mod": "doc",
    "pandas.DataFrame.pow": "doc",
    "pandas.DataFrame.dot": "doc",
    "pandas.DataFrame.agg": "doc",
    "pandas.DataFrame.ewm": "doc",
    "pandas.DataFrame.abs": "doc",
    "pandas.DataFrame.all": "doc",
    "pandas.DataFrame.any": "doc",
    "pandas.DataFrame.cov": "doc",
    "pandas.DataFrame.mad": "doc",
    "pandas.DataFrame.max": "doc",
    "pandas.DataFrame.min": "doc",
    "pandas.DataFrame.sem": "doc",
    "pandas.DataFrame.sum": "doc",
    "pandas.DataFrame.std": "doc",
    "pandas.DataFrame.var": "doc",
    "pandas.Interval.left": "doc",
    "pandas.DatetimeIndex": "doc",
    "pandas.Series.at_time": "doc",
    "pandas.DataFrame.axes": "doc",
    "pandas.DataFrame.ndim": "doc",
    "pandas.DataFrame.size": "doc",
    "pandas.DataFrame.copy": "doc",
    "pandas.DataFrame.isna": "doc",
    "pandas.DataFrame.bool": "doc",
    "pandas.DataFrame.head": "doc",
    "pandas.DataFrame.iloc": "doc",
    "pandas.DataFrame.keys": "doc",
    "pandas.DataFrame.tail": "doc",
    "pandas.DataFrame.isin": "doc",
    "pandas.DataFrame.mask": "doc",
    "pandas.DataFrame.radd": "doc",
    "pandas.DataFrame.rsub": "doc",
    "pandas.DataFrame.rmul": "doc",
    "pandas.DataFrame.rdiv": "doc",
    "pandas.DataFrame.rmod": "doc",
    "pandas.DataFrame.rpow": "doc",
    "pandas.DataFrame.pipe": "doc",
    "pandas.DataFrame.clip": "doc",
    "pandas.DataFrame.corr": "doc",
    "pandas.DataFrame.diff": "doc",
    "pandas.DataFrame.eval": "doc",
    "pandas.DataFrame.kurt": "doc",
    "pandas.DataFrame.mean": "doc",
    "pandas.DataFrame.mode": "doc",
    "pandas.DataFrame.prod": "doc",
    "pandas.DataFrame.rank": "doc",
    "pandas.DataFrame.skew": "doc",
    "pandas.DataFrame.drop": "doc",
    "pandas.DataFrame.last": "doc",
    "pandas.DataFrame.take": "doc",
    "pandas.DataFrame.melt": "doc",
    "pandas.DataFrame.join": "doc",
    "pandas.DataFrame.asof": "doc",
    "pandas.DataFrame.plot": "doc",
    "pandas.DataFrame.hist": "doc",
    "pandas.DataFrame.info": "doc",
    "pandas.Period.quarter": "doc",
    "pandas.Interval.right": "doc",
    "pandas.util.hash_array": "doc",
    "pandas.Series.__iter__": "doc",
    "pandas.DataFrame.index": "doc",
    "pandas.DataFrame.shape": "doc",
    "pandas.DataFrame.empty": "doc",
    "pandas.DataFrame.notna": "doc",
    "pandas.DataFrame.items": "doc",
    "pandas.DataFrame.where": "doc",
    "pandas.DataFrame.query": "doc",
    "pandas.DataFrame.apply": "doc",
    "pandas.DataFrame.count": "doc",
    "pandas.DataFrame.round": "doc",
    "pandas.DataFrame.align": "doc",
    "pandas.DataFrame.first": "doc",
    "pandas.DataFrame.pivot": "doc",
    "pandas.DataFrame.stack": "doc",
    "pandas.DataFrame.merge": "doc",
    "pandas.DataFrame.shift": "doc",
    "pandas.DataFrame.attrs": "doc",
    "pandas.DataFrame.style": "doc",
    "pandas.Period.strftime": "doc",
    "pandas.Interval.closed": "doc",
    "pandas.Interval.length": "doc",
    "pandas.Index.set_names": "doc",
    "pandas.Series.iteritems": "doc",
    "pandas.Series.aggregate": "doc",
    "pandas.Series.str.strip": "doc",
    "pandas.Series.to_xarray": "doc",
    "pandas.Series.to_string": "doc",
    "pandas.DataFrame.dtypes": "doc",
    "pandas.DataFrame.values": "doc",
    "pandas.DataFrame.astype": "doc",
    "pandas.DataFrame.insert": "doc",
    "pandas.DataFrame.lookup": "doc",
    "pandas.DataFrame.cummax": "doc",
    "pandas.DataFrame.cummin": "doc",
    "pandas.DataFrame.cumsum": "doc",
    "pandas.DataFrame.median": "doc",
    "pandas.DataFrame.equals": "doc",
    "pandas.DataFrame.filter": "doc",
    "pandas.DataFrame.idxmax": "doc",
    "pandas.DataFrame.idxmin": "doc",
    "pandas.DataFrame.rename": "doc",
    "pandas.DataFrame.sample": "doc",
    "pandas.DataFrame.dropna": "doc",
    "pandas.DataFrame.fillna": "doc",
    "pandas.DataFrame.append": "doc",
    "pandas.DataFrame.assign": "doc",
    "pandas.DataFrame.update": "doc",
    "pandas.DataFrame.asfreq": "doc",
    "pandas.DataFrame.tshift": "doc",
    "pandas.DataFrame.to_csv": "doc",
    "pandas.DataFrame.to_hdf": "doc",
    "pandas.DataFrame.to_sql": "doc",
    "pandas.DataFrame.to_gbq": "doc",
    "pandas.RangeIndex.start": "doc",
    "pandas.DatetimeIndex.tz": "doc",
    "pandas.Series.add_prefix": "doc",
    "pandas.Series.add_suffix": "doc",
    "pandas.Series.sort_index": "doc",
    "pandas.Series.dt.quarter": "doc",
    "pandas.Series.str.center": "doc",
    "pandas.Series.str.rstrip": "doc",
    "pandas.DataFrame.columns": "doc",
    "pandas.DataFrame.truediv": "doc",
    "pandas.DataFrame.combine": "doc",
    "pandas.DataFrame.groupby": "doc",
    "pandas.DataFrame.rolling": "doc",
    "pandas.DataFrame.cumprod": "doc",
    "pandas.DataFrame.product": "doc",
    "pandas.DataFrame.nunique": "doc",
    "pandas.DataFrame.at_time": "doc",
    "pandas.DataFrame.reindex": "doc",
    "pandas.DataFrame.replace": "doc",
    "pandas.DataFrame.unstack": "doc",
    "pandas.DataFrame.explode": "doc",
    "pandas.DataFrame.squeeze": "doc",
    "pandas.DataFrame.boxplot": "doc",
    "pandas.DataFrame.to_dict": "doc",
    "pandas.DataFrame.to_json": "doc",
    "pandas.DataFrame.to_html": "doc",
    "pandas.Timestamp.quarter": "doc",
    "pandas.Interval.is_empty": "doc",
    "pandas.Interval.overlaps": "doc",
    "pandas.Index.is_interval": "doc",
    "pandas.Index.sort_values": "doc",
    "pandas.DatetimeIndex.day": "doc",
    "pandas.Series.rename_axis": "doc",
    "pandas.Series.interpolate": "doc",
    "pandas.Series.sort_values": "doc",
    "pandas.Series.dt.strftime": "doc",
    "pandas.DataFrame.__iter__": "doc",
    "pandas.DataFrame.iterrows": "doc",
    "pandas.DataFrame.floordiv": "doc",
    "pandas.DataFrame.rtruediv": "doc",
    "pandas.DataFrame.applymap": "doc",
    "pandas.DataFrame.corrwith": "doc",
    "pandas.DataFrame.describe": "doc",
    "pandas.DataFrame.kurtosis": "doc",
    "pandas.DataFrame.quantile": "doc",
    "pandas.DataFrame.truncate": "doc",
    "pandas.DataFrame.nlargest": "doc",
    "pandas.DataFrame.swapaxes": "doc",
    "pandas.DataFrame.resample": "doc",
    "pandas.DataFrame.plot.bar": "doc",
    "pandas.DataFrame.plot.box": "doc",
    "pandas.DataFrame.plot.kde": "doc",
    "pandas.DataFrame.plot.pie": "doc",
    "pandas.DataFrame.to_excel": "doc",
    "pandas.DataFrame.to_stata": "doc",
    "pandas.Timestamp.strftime": "doc",
    "pandas.Timestamp.strptime": "doc",
    "pandas.Interval.open_left": "doc",
    "pandas.Index.is_all_dates": "doc",
    "pandas.Index.intersection": "doc",
    "pandas.DatetimeIndex.year": "doc",
    "pandas.DatetimeIndex.hour": "doc",
    "pandas.DatetimeIndex.date": "doc",
    "pandas.DatetimeIndex.time": "doc",
    "pandas.DatetimeIndex.week": "doc",
    "pandas.DatetimeIndex.freq": "doc",
    "pandas.DatetimeIndex.snap": "doc",
    "pandas.DatetimeIndex.ceil": "doc",
    "pandas.DatetimeIndex.mean": "doc",
    "pandas.errors.ParserError": "doc",
    "pandas.DataFrame.iteritems": "doc",
    "pandas.DataFrame.rfloordiv": "doc",
    "pandas.DataFrame.aggregate": "doc",
    "pandas.DataFrame.transform": "doc",
    "pandas.DataFrame.expanding": "doc",
    "pandas.DataFrame.set_index": "doc",
    "pandas.DataFrame.droplevel": "doc",
    "pandas.DataFrame.nsmallest": "doc",
    "pandas.DataFrame.swaplevel": "doc",
    "pandas.DataFrame.to_xarray": "doc",
    "pandas.DataFrame.transpose": "doc",
    "pandas.DataFrame.to_period": "doc",
    "pandas.DataFrame.plot.area": "doc",
    "pandas.DataFrame.plot.barh": "doc",
    "pandas.DataFrame.plot.hist": "doc",
    "pandas.DataFrame.plot.line": "doc",
    "pandas.DataFrame.from_dict": "doc",
    "pandas.DataFrame.to_pickle": "doc",
    "pandas.DataFrame.to_string": "doc",
    "pandas.Timestamp.isoformat": "doc",
    "pandas.Timedelta.isoformat": "doc",
    "pandas.Interval.open_right": "doc",
    "pandas.DatetimeIndex.month": "doc",
    "pandas.DatetimeIndex.round": "doc",
    "pandas.DatetimeIndex.floor": "doc",
    "pandas.PeriodIndex.quarter": "doc",
    "pandas.DataFrame.itertuples": "doc",
    "pandas.DataFrame.pct_change": "doc",
    "pandas.DataFrame.add_prefix": "doc",
    "pandas.DataFrame.add_suffix": "doc",
    "pandas.DataFrame.duplicated": "doc",
    "pandas.DataFrame.sort_index": "doc",
    "pandas.DataFrame.tz_convert": "doc",
    "pandas.DataFrame.to_parquet": "doc",
    "pandas.DataFrame.to_feather": "doc",
    "pandas.DataFrame.to_records": "doc",
    "pandas.arrays.DatetimeArray": "doc",
    "pandas.Interval.closed_left": "doc",
    "pandas.DatetimeIndex.minute": "doc",
    "pandas.DatetimeIndex.second": "doc",
    "pandas.DatetimeIndex.timetz": "doc",
    "pandas.PeriodIndex.strftime": "doc",
    "pandas.errors.ParserWarning": "doc",
    "pandas.Series.str.startswith": "doc",
    "pandas.DataFrame.rename_axis": "doc",
    "pandas.DataFrame.reset_index": "doc",
    "pandas.DataFrame.interpolate": "doc",
    "pandas.DataFrame.pivot_table": "doc",
    "pandas.DataFrame.sort_values": "doc",
    "pandas.DataFrame.slice_shift": "doc",
    "pandas.DataFrame.tz_localize": "doc",
    "pandas.DataFrame.plot.hexbin": "doc",
    "pandas.DataFrame.to_markdown": "doc",
    "pandas.Timestamp.isocalendar": "doc",
    "pandas.Interval.closed_right": "doc",
    "pandas.DatetimeIndex.weekday": "doc",
    "pandas.DatetimeIndex.quarter": "doc",
    "pandas.DatetimeIndex.freqstr": "doc",
    "pandas.api.types.infer_dtype": "doc",
    "pandas.api.types.is_interval": "doc",
    "pandas.DataFrame.memory_usage": "doc",
    "pandas.DataFrame.between_time": "doc",
    "pandas.DataFrame.reindex_like": "doc",
    "pandas.DataFrame.to_timestamp": "doc",
    "pandas.DataFrame.plot.density": "doc",
    "pandas.DataFrame.from_records": "doc",
    "pandas.DataFrame.to_clipboard": "doc",
    "pandas.DatetimeIndex.strftime": "doc",
    "pandas.DatetimeIndex.day_name": "doc",
    "pandas.DatetimeIndex.to_frame": "doc",
    "pandas.tseries.offsets.Easter": "doc",
    "pandas.Series.dt.is_year_start": "doc",
    "pandas.DataFrame.select_dtypes": "doc",
    "pandas.DataFrame.infer_objects": "doc",
    "pandas.DataFrame.combine_first": "doc",
    "pandas.DataFrame.sparse.to_coo": "doc",
    "pandas.Timestamp.is_year_start": "doc",
    "pandas.DatetimeIndex.dayofyear": "doc",
    "pandas.DatetimeIndex.dayofweek": "doc",
    "pandas.DatetimeIndex.normalize": "doc",
    "pandas.DatetimeIndex.to_period": "doc",
    "pandas.DatetimeIndex.to_series": "doc",
    "pandas.io.formats.style.Styler": "doc",
    "pandas.DataFrame.convert_dtypes": "doc",
    "pandas.DataFrame.reorder_levels": "doc",
    "pandas.DataFrame.sparse.density": "doc",
    "pandas.DatetimeIndex.nanosecond": "doc",
    "pandas.DatetimeIndex.weekofyear": "doc",
    "pandas.DatetimeIndex.tz_convert": "doc",
    "pandas.DatetimeIndex.month_name": "doc",
    "pandas.DataFrame.drop_duplicates": "doc",
    "pandas.DataFrame.sparse.to_dense": "doc",
    "pandas.DatetimeIndex.microsecond": "doc",
    "pandas.DatetimeIndex.is_year_end": "doc",
    "pandas.DatetimeIndex.tz_localize": "doc",
    "pandas.DataFrame.last_valid_index": "doc",
    "pandas.DatetimeIndex.is_month_end": "doc",
    "pandas.DatetimeIndex.is_leap_year": "doc",
    "pandas.tseries.offsets.QuarterEnd": "doc",
    "pandas.DataFrame.first_valid_index": "doc",
    "pandas.DatetimeIndex.is_year_start": "doc",
    "pandas.DatetimeIndex.inferred_freq": "doc",
    "pandas.DatetimeIndex.to_pydatetime": "doc",
    "pandas.tseries.offsets.Easter.kwds": "doc",
    "pandas.tseries.offsets.Easter.name": "doc",
    "pandas.tseries.offsets.Easter.copy": "doc",
    "pandas.core.groupby.GroupBy.cummax": "doc",
    "pandas.io.formats.style.Styler.env": "doc",
    "pandas.io.formats.style.Styler.bar": "doc",
    "pandas.io.formats.style.Styler.use": "doc",
    "pandas.DatetimeIndex.is_month_start": "doc",
    "pandas.DatetimeIndex.is_quarter_end": "doc",
    "pandas.DatetimeIndex.to_perioddelta": "doc",
    "pandas.tseries.offsets.Easter.nanos": "doc",
    "pandas.tseries.offsets.Easter.apply": "doc",
    "pandas.io.formats.style.Styler.pipe": "doc",
    "pandas.tseries.offsets.QuarterOffset": "doc",
    "pandas.tseries.offsets.BQuarterBegin": "doc",
    "pandas.core.groupby.GroupBy.__iter__": "doc",
    "pandas.io.formats.style.Styler.apply": "doc",
    "pandas.io.formats.style.Styler.where": "doc",
    "pandas.io.formats.style.Styler.clear": "doc",
    "pandas.tseries.offsets.Easter.freqstr": "doc",
    "pandas.core.groupby.GroupBy.aggregate": "doc",
    "pandas.io.formats.style.Styler.loader": "doc",
    "pandas.io.formats.style.Styler.format": "doc",
    "pandas.io.formats.style.Styler.render": "doc",
    "pandas.io.formats.style.Styler.export": "doc",
    "pandas.io.stata.StataReader.data_label": "doc",
    "pandas.io.stata.StataWriter.write_file": "doc",
    "pandas.tseries.offsets.QuarterEnd.kwds": "doc",
    "pandas.tseries.offsets.QuarterEnd.name": "doc",
    "pandas.tseries.offsets.QuarterEnd.copy": "doc",
    "pandas.tseries.offsets.Easter.onOffset": "doc",
    "pandas.tseries.offsets.Easter.__call__": "doc",
    "pandas.api.types.is_datetime64tz_dtype": "doc",
    "pandas.tseries.offsets.QuarterEnd.nanos": "doc",
    "pandas.tseries.offsets.QuarterEnd.apply": "doc",
    "pandas.tseries.offsets.Easter.normalize": "doc",
    "pandas.tseries.offsets.Easter.rule_code": "doc",
    "pandas.core.resample.Resampler.__iter__": "doc",
    "pandas.io.formats.style.Styler.template": "doc",
    "pandas.io.formats.style.Styler.applymap": "doc",
    "pandas.io.formats.style.Styler.set_uuid": "doc",
    "pandas.io.formats.style.Styler.to_excel": "doc",
    "pandas.io.stata.StataReader.value_labels": "doc",
    "pandas.tseries.offsets.Easter.isAnchored": "doc",
    "pandas.core.resample.Resampler.aggregate": "doc",
    "pandas.DatetimeIndex.indexer_between_time": "doc",
    "pandas.tseries.offsets.QuarterOffset.kwds": "doc",
    "pandas.tseries.offsets.QuarterOffset.name": "doc",
    "pandas.tseries.offsets.QuarterOffset.copy": "doc",
    "pandas.tseries.offsets.BQuarterBegin.kwds": "doc",
    "pandas.tseries.offsets.BQuarterBegin.name": "doc",
    "pandas.tseries.offsets.BQuarterBegin.copy": "doc",
    "pandas.tseries.offsets.QuarterEnd.freqstr": "doc",
    "pandas.tseries.offsets.Easter.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterOffset.nanos": "doc",
    "pandas.tseries.offsets.QuarterOffset.apply": "doc",
    "pandas.tseries.offsets.BQuarterBegin.nanos": "doc",
    "pandas.tseries.offsets.BQuarterBegin.apply": "doc",
    "pandas.tseries.offsets.QuarterEnd.onOffset": "doc",
    "pandas.tseries.offsets.QuarterEnd.__call__": "doc",
    "pandas.tseries.offsets.Easter.is_on_offset": "doc",
    "pandas.core.resample.Resampler.interpolate": "doc",
    "pandas.io.formats.style.Styler.set_caption": "doc",
    "pandas.io.stata.StataReader.variable_labels": "doc",
    "pandas.tseries.offsets.QuarterEnd.normalize": "doc",
    "pandas.tseries.offsets.QuarterEnd.rule_code": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cummax": "doc",
    "pandas.tseries.offsets.QuarterOffset.freqstr": "doc",
    "pandas.tseries.offsets.BQuarterBegin.freqstr": "doc",
    "pandas.tseries.offsets.QuarterEnd.isAnchored": "doc",
    "pandas.core.window.rolling.Rolling.aggregate": "doc",
    "pandas.io.formats.style.Styler.set_precision": "doc",
    "pandas.io.formats.style.Styler.highlight_max": "doc",
    "pandas.io.formats.style.Styler.highlight_min": "doc",
    "pandas.tseries.offsets.QuarterOffset.onOffset": "doc",
    "pandas.tseries.offsets.QuarterOffset.__call__": "doc",
    "pandas.tseries.offsets.BQuarterBegin.onOffset": "doc",
    "pandas.tseries.offsets.BQuarterBegin.__call__": "doc",
    "pandas.tseries.offsets.QuarterEnd.apply_index": "doc",
    "pandas.tseries.offsets.QuarterEnd.is_anchored": "doc",
    "pandas.io.formats.style.Styler.set_properties": "doc",
    "pandas.io.formats.style.Styler.highlight_null": "doc",
    "pandas.tseries.offsets.QuarterOffset.normalize": "doc",
    "pandas.tseries.offsets.QuarterOffset.rule_code": "doc",
    "pandas.tseries.offsets.BQuarterBegin.normalize": "doc",
    "pandas.tseries.offsets.BQuarterBegin.rule_code": "doc",
    "pandas.tseries.offsets.QuarterEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.QuarterOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BQuarterBegin.isAnchored": "doc",
    "pandas.io.formats.style.Styler.set_table_styles": "doc",
    "pandas.tseries.offsets.QuarterOffset.apply_index": "doc",
    "pandas.tseries.offsets.QuarterOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BQuarterBegin.apply_index": "doc",
    "pandas.tseries.offsets.BQuarterBegin.is_anchored": "doc",
    "pandas.core.window.expanding.Expanding.aggregate": "doc",
    "pandas.tseries.offsets.QuarterOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BQuarterBegin.is_on_offset": "doc",
    "pandas.io.formats.style.Styler.background_gradient": "doc",
    "pandas.io.formats.style.Styler.from_custom_template": "doc",
    "pandas.describe_option": "doc",
    "pandas.plotting.register_matplotlib_converters": "doc",
    "pandas.api.extensions.register_dataframe_accessor": "doc",
    "pandas.CategoricalDtype": "doc",
    "pandas.CategoricalIndex": "doc",
    "pandas.CategoricalIndex.map": "doc",
    "pandas.CategoricalIndex.codes": "doc",
    "pandas.CategoricalIndex.equals": "doc",
    "pandas.CategoricalDtype.ordered": "doc",
    "pandas.CategoricalIndex.ordered": "doc",
    "pandas.Index.symmetric_difference": "doc",
    "pandas.api.types.is_complex_dtype": "doc",
    "pandas.api.types.is_numeric_dtype": "doc",
    "pandas.CategoricalIndex.as_ordered": "doc",
    "pandas.CategoricalIndex.as_unordered": "doc",
    "pandas.plotting.parallel_coordinates": "doc",
    "pandas.CategoricalIndex.add_categories": "doc",
    "pandas.CategoricalIndex.set_categories": "doc",
    "pandas.core.groupby.DataFrameGroupBy.all": "doc",
    "pandas.core.groupby.DataFrameGroupBy.any": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cov": "doc",
    "pandas.core.groupby.DataFrameGroupBy.mad": "doc",
    "pandas.core.groupby.DataFrameGroupBy.corr": "doc",
    "pandas.core.groupby.DataFrameGroupBy.diff": "doc",
    "pandas.core.groupby.DataFrameGroupBy.hist": "doc",
    "pandas.core.groupby.DataFrameGroupBy.plot": "doc",
    "pandas.core.groupby.DataFrameGroupBy.rank": "doc",
    "pandas.core.groupby.DataFrameGroupBy.size": "doc",
    "pandas.core.groupby.DataFrameGroupBy.skew": "doc",
    "pandas.core.groupby.DataFrameGroupBy.take": "doc",
    "pandas.api.types.is_extension_array_dtype": "doc",
    "pandas.Series.cat.remove_unused_categories": "doc",
    "pandas.core.groupby.DataFrameGroupBy.bfill": "doc",
    "pandas.core.groupby.DataFrameGroupBy.count": "doc",
    "pandas.core.groupby.DataFrameGroupBy.ffill": "doc",
    "pandas.core.groupby.DataFrameGroupBy.shift": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cummin": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cumsum": "doc",
    "pandas.core.groupby.DataFrameGroupBy.fillna": "doc",
    "pandas.core.groupby.DataFrameGroupBy.filter": "doc",
    "pandas.core.groupby.DataFrameGroupBy.idxmax": "doc",
    "pandas.core.groupby.DataFrameGroupBy.idxmin": "doc",
    "pandas.core.groupby.DataFrameGroupBy.tshift": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cumprod": "doc",
    "pandas.core.groupby.DataFrameGroupBy.nunique": "doc",
    "pandas.core.groupby.DataFrameGroupBy.boxplot": "doc",
    "pandas.core.groupby.DataFrameGroupBy.describe": "doc",
    "pandas.core.groupby.DataFrameGroupBy.quantile": "doc",
    "pandas.core.groupby.DataFrameGroupBy.resample": "doc",
    "pandas.core.groupby.DataFrameGroupBy.corrwith": "doc",
    "pandas.api.extensions.register_extension_dtype": "doc",
    "pandas.core.groupby.DataFrameGroupBy.pct_change": "doc",
    "pandas.CategoricalIndex.remove_unused_categories": "doc",
    "pandas.plotting.deregister_matplotlib_converters": "doc",
    "pandas.IntervalIndex.is_non_overlapping_monotonic": "doc",
    "pandas.api.types.is_extension_type": "doc",
    "pandas.testing.assert_frame_equal": "doc",
    "pandas.Index.is_monotonic_increasing": "doc",
    "pandas.Index.is_monotonic_decreasing": "doc",
    "pandas.Series.is_monotonic_increasing": "doc",
    "pandas.Series.is_monotonic_decreasing": "doc",
    "pandas.api.types.is_signed_integer_dtype": "doc",
    "pandas.api.extensions.register_index_accessor": "doc",
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing": "doc",
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing": "doc",
    "pandas.test": "doc",
    "pandas.array": "doc",
    "pandas.concat": "doc",
    "pandas.read_orc": "doc",
    "pandas.read_sas": "doc",
    "pandas.crosstab": "doc",
    "pandas.read_html": "doc",
    "pandas.factorize": "doc",
    "pandas.Index.max": "doc",
    "pandas.read_table": "doc",
    "pandas.read_stata": "doc",
    "pandas.merge_asof": "doc",
    "pandas.Series.max": "doc",
    "pandas.Series.sem": "doc",
    "pandas.Index.item": "doc",
    "pandas.RangeIndex": "doc",
    "pandas.get_option": "doc",
    "pandas.pivot_table": "doc",
    "pandas.to_datetime": "doc",
    "pandas.Series.item": "doc",
    "pandas.Series.corr": "doc",
    "pandas.Series.tail": "doc",
    "pandas.Period.year": "doc",
    "pandas.Categorical": "doc",
    "pandas.SparseDtype": "doc",
    "pandas.Index.shape": "doc",
    "pandas.Index.empty": "doc",
    "pandas.read_feather": "doc",
    "pandas.Series.array": "doc",
    "pandas.Series.shape": "doc",
    "pandas.Series.empty": "doc",
    "pandas.Series.items": "doc",
    "pandas.Period.qyear": "doc",
    "pandas.Index.insert": "doc",
    "pandas.Index.repeat": "doc",
    "pandas.reset_option": "doc",
    "pandas.Series.cummin": "doc",
    "pandas.Series.idxmax": "doc",
    "pandas.Series.sample": "doc",
    "pandas.Series.filter": "doc",
    "pandas.Series.repeat": "doc",
    "pandas.Timestamp.max": "doc",
    "pandas.Timedelta.max": "doc",
    "pandas.IntervalDtype": "doc",
    "pandas.Index.putmask": "doc",
    "pandas.Index.argsort": "doc",
    "pandas.IntervalIndex": "doc",
    "pandas.json_normalize": "doc",
    "pandas.Series.truediv": "doc",
    "pandas.Series.cumprod": "doc",
    "pandas.Series.argsort": "doc",
    "pandas.Series.dt.date": "doc",
    "pandas.Series.dt.year": "doc",
    "pandas.Series.dt.ceil": "doc",
    "pandas.Series.str.cat": "doc",
    "pandas.Series.str.get": "doc",
    "pandas.Series.str.len": "doc",
    "pandas.Series.str.pad": "doc",
    "pandas.Timestamp.year": "doc",
    "pandas.Timestamp.ceil": "doc",
    "pandas.Timestamp.date": "doc",
    "pandas.Timedelta.ceil": "doc",
    "pandas.Period.freqstr": "doc",
    "pandas.Index.to_frame": "doc",
    "pandas.HDFStore.select": "doc",
    "pandas.Series.rtruediv": "doc",
    "pandas.Series.autocorr": "doc",
    "pandas.Series.nlargest": "doc",
    "pandas.Series.truncate": "doc",
    "pandas.Series.dt.qyear": "doc",
    "pandas.Series.str.find": "doc",
    "pandas.Series.str.join": "doc",
    "pandas.Series.str.wrap": "doc",
    "pandas.Series.to_frame": "doc",
    "pandas.Timestamp.ctime": "doc",
    "pandas.Index.factorize": "doc",
    "pandas.Index.to_series": "doc",
    "pandas.Index.get_value": "doc",
    "pandas.RangeIndex.stop": "doc",
    "pandas.RangeIndex.step": "doc",
    "pandas.plotting.radviz": "doc",
    "pandas.Series.to_period": "doc",
    "pandas.Series.__array__": "doc",
    "pandas.Series.factorize": "doc",
    "pandas.Series.nsmallest": "doc",
    "pandas.Series.swaplevel": "doc",
    "pandas.Series.dt.timetz": "doc",
    "pandas.Series.str.count": "doc",
    "pandas.Series.str.index": "doc",
    "pandas.Series.str.ljust": "doc",
    "pandas.Series.str.lower": "doc",
    "pandas.Series.str.match": "doc",
    "pandas.Series.str.rfind": "doc",
    "pandas.Series.str.rjust": "doc",
    "pandas.Series.str.slice": "doc",
    "pandas.Series.str.split": "doc",
    "pandas.Series.str.title": "doc",
    "pandas.Series.str.upper": "doc",
    "pandas.Series.str.zfill": "doc",
    "pandas.Series.cat.codes": "doc",
    "pandas.Series.plot.area": "doc",
    "pandas.Timestamp.timetz": "doc",
    "pandas.Period.dayofyear": "doc",
    "pandas.Index.is_integer": "doc",
    "pandas.Index.is_numeric": "doc",
    "pandas.Index.slice_locs": "doc",
    "pandas.PeriodIndex.year": "doc",
    "pandas.Series.pct_change": "doc",
    "pandas.Series.str.decode": "doc",
    "pandas.Series.str.encode": "doc",
    "pandas.Series.str.lstrip": "doc",
    "pandas.Series.str.repeat": "doc",
    "pandas.Series.str.rindex": "doc",
    "pandas.Series.str.rsplit": "doc",
    "pandas.Timestamp.freqstr": "doc",
    "pandas.Categorical.dtype": "doc",
    "pandas.Categorical.codes": "doc",
    "pandas.IntervalIndex.mid": "doc",
    "pandas.PeriodIndex.qyear": "doc",
    "pandas.Series.reset_index": "doc",
    "pandas.Series.slice_shift": "doc",
    "pandas.Series.dt.day_name": "doc",
    "pandas.Series.str.extract": "doc",
    "pandas.Series.str.findall": "doc",
    "pandas.Series.str.replace": "doc",
    "pandas.Series.str.isalnum": "doc",
    "pandas.Series.str.isalpha": "doc",
    "pandas.Series.str.isdigit": "doc",
    "pandas.Series.str.isspace": "doc",
    "pandas.Series.str.islower": "doc",
    "pandas.Series.str.isupper": "doc",
    "pandas.Series.str.istitle": "doc",
    "pandas.Series.cat.ordered": "doc",
    "pandas.Timestamp.day_name": "doc",
    "pandas.arrays.PeriodArray": "doc",
    "pandas.arrays.SparseArray": "doc",
    "pandas.arrays.StringArray": "doc",
    "pandas.Index.value_counts": "doc",
    "pandas.Index.searchsorted": "doc",
    "pandas.IntervalIndex.left": "doc",
    "pandas.arrays.PandasArray": "doc",
    "pandas.Series.to_timestamp": "doc",
    "pandas.Series.value_counts": "doc",
    "pandas.Series.searchsorted": "doc",
    "pandas.Series.between_time": "doc",
    "pandas.Series.dt.dayofyear": "doc",
    "pandas.Series.dt.to_period": "doc",
    "pandas.Series.dt.normalize": "doc",
    "pandas.Series.str.casefold": "doc",
    "pandas.Series.str.contains": "doc",
    "pandas.Series.str.endswith": "doc",
    "pandas.Series.str.swapcase": "doc",
    "pandas.Timestamp.dayofyear": "doc",
    "pandas.Timestamp.normalize": "doc",
    "pandas.Timestamp.timestamp": "doc",
    "pandas.Timestamp.to_period": "doc",
    "pandas.Period.to_timestamp": "doc",
    "pandas.arrays.IntegerArray": "doc",
    "pandas.Categorical.ordered": "doc",
    "pandas.arrays.BooleanArray": "doc",
    "pandas.IntervalIndex.right": "doc",
    "pandas.MultiIndex.to_frame": "doc",
    "pandas.TimedeltaIndex.ceil": "doc",
    "pandas.PeriodIndex.freqstr": "doc",
    "pandas.tseries.offsets.Day": "doc",
    "pandas.errors.DtypeWarning": "doc",
    "pandas.Series.dt.month_name": "doc",
    "pandas.Series.str.normalize": "doc",
    "pandas.Series.str.partition": "doc",
    "pandas.Series.str.translate": "doc",
    "pandas.Series.str.isnumeric": "doc",
    "pandas.Series.str.isdecimal": "doc",
    "pandas.Series.sparse.to_coo": "doc",
    "pandas.Timestamp.astimezone": "doc",
    "pandas.Timestamp.month_name": "doc",
    "pandas.arrays.IntervalArray": "doc",
    "pandas.Index.is_categorical": "doc",
    "pandas.IntervalIndex.closed": "doc",
    "pandas.IntervalIndex.length": "doc",
    "pandas.IntervalIndex.values": "doc",
    "pandas.MultiIndex.set_codes": "doc",
    "pandas.MultiIndex.sortlevel": "doc",
    "pandas.MultiIndex.swaplevel": "doc",
    "pandas.tseries.offsets.Week": "doc",
    "pandas.tseries.offsets.Tick": "doc",
    "pandas.tseries.offsets.Hour": "doc",
    "pandas.tseries.offsets.Nano": "doc",
    "pandas.tseries.offsets.BDay": "doc",
    "pandas.tseries.offsets.CDay": "doc",
    "pandas.plotting.plot_params": "doc",
    "pandas.api.types.is_integer": "doc",
    "pandas.Series.convert_dtypes": "doc",
    "pandas.Series.reorder_levels": "doc",
    "pandas.Series.str.capitalize": "doc",
    "pandas.Series.str.extractall": "doc",
    "pandas.Series.str.rpartition": "doc",
    "pandas.Series.cat.as_ordered": "doc",
    "pandas.Series.sparse.npoints": "doc",
    "pandas.Series.sparse.density": "doc",
    "pandas.arrays.TimedeltaArray": "doc",
    "pandas.Categorical.__array__": "doc",
    "pandas.RangeIndex.from_range": "doc",
    "pandas.IntervalIndex.get_loc": "doc",
    "pandas.MultiIndex.set_levels": "doc",
    "pandas.PeriodIndex.dayofyear": "doc",
    "pandas.tseries.offsets.Milli": "doc",
    "pandas.tseries.offsets.Micro": "doc",
    "pandas.errors.EmptyDataError": "doc",
    "pandas.Series.str.get_dummies": "doc",
    "pandas.Series.sparse.from_coo": "doc",
    "pandas.Timestamp.utctimetuple": "doc",
    "pandas.Categorical.from_codes": "doc",
    "pandas.IntervalIndex.is_empty": "doc",
    "pandas.IntervalIndex.contains": "doc",
    "pandas.IntervalIndex.overlaps": "doc",
    "pandas.tseries.offsets.FY5253": "doc",
    "pandas.tseries.offsets.Minute": "doc",
    "pandas.tseries.offsets.Second": "doc",
    "pandas.api.types.pandas_dtype": "doc",
    "pandas.Series.cat.as_unordered": "doc",
    "pandas.Series.sparse.sp_values": "doc",
    "pandas.IntervalIndex.to_tuples": "doc",
    "pandas.TimedeltaIndex.to_frame": "doc",
    "pandas.tseries.offsets.YearEnd": "doc",
    "pandas.Series.dt.is_month_start": "doc",
    "pandas.Series.dt.is_quarter_end": "doc",
    "pandas.Series.str.slice_replace": "doc",
    "pandas.Series.sparse.fill_value": "doc",
    "pandas.Timestamp.is_month_start": "doc",
    "pandas.Timestamp.is_quarter_end": "doc",
    "pandas.IntervalIndex.set_closed": "doc",
    "pandas.TimedeltaIndex.to_series": "doc",
    "pandas.PeriodIndex.to_timestamp": "doc",
    "pandas.tseries.offsets.MonthEnd": "doc",
    "pandas.tseries.offsets.BYearEnd": "doc",
    "pandas.tseries.offsets.Day.kwds": "doc",
    "pandas.tseries.offsets.Day.name": "doc",
    "pandas.tseries.offsets.Day.copy": "doc",
    "pandas.core.window.ewm.EWM.corr": "doc",
    "pandas.core.groupby.GroupBy.max": "doc",
    "pandas.core.groupby.GroupBy.sem": "doc",
    "pandas.api.types.is_int64_dtype": "doc",
    "pandas.api.types.is_categorical": "doc",
    "pandas.Series.cat.add_categories": "doc",
    "pandas.Series.cat.set_categories": "doc",
    "pandas.IntervalIndex.from_arrays": "doc",
    "pandas.IntervalIndex.from_tuples": "doc",
    "pandas.IntervalIndex.from_breaks": "doc",
    "pandas.IntervalIndex.get_indexer": "doc",
    "pandas.MultiIndex.reorder_levels": "doc",
    "pandas.tseries.offsets.Week.kwds": "doc",
    "pandas.tseries.offsets.Week.name": "doc",
    "pandas.tseries.offsets.Week.copy": "doc",
    "pandas.tseries.offsets.YearBegin": "doc",
    "pandas.tseries.offsets.Tick.kwds": "doc",
    "pandas.tseries.offsets.Tick.name": "doc",
    "pandas.tseries.offsets.Tick.copy": "doc",
    "pandas.tseries.offsets.Day.delta": "doc",
    "pandas.tseries.offsets.Day.nanos": "doc",
    "pandas.tseries.offsets.Hour.kwds": "doc",
    "pandas.tseries.offsets.Hour.name": "doc",
    "pandas.tseries.offsets.Hour.copy": "doc",
    "pandas.tseries.offsets.Nano.kwds": "doc",
    "pandas.tseries.offsets.Nano.name": "doc",
    "pandas.tseries.offsets.Nano.copy": "doc",
    "pandas.tseries.offsets.BDay.base": "doc",
    "pandas.tseries.offsets.BDay.kwds": "doc",
    "pandas.tseries.offsets.BDay.name": "doc",
    "pandas.tseries.offsets.BDay.copy": "doc",
    "pandas.tseries.offsets.BMonthEnd": "doc",
    "pandas.tseries.offsets.CDay.base": "doc",
    "pandas.tseries.offsets.CDay.kwds": "doc",
    "pandas.tseries.offsets.CDay.name": "doc",
    "pandas.tseries.offsets.CDay.copy": "doc",
    "pandas.core.groupby.GroupBy.tail": "doc",
    "pandas.errors.PerformanceWarning": "doc",
    "pandas.errors.UnsortedIndexError": "doc",
    "pandas.tseries.offsets.DateOffset": "doc",
    "pandas.tseries.offsets.MonthBegin": "doc",
    "pandas.tseries.offsets.Week.nanos": "doc",
    "pandas.tseries.offsets.Week.apply": "doc",
    "pandas.tseries.offsets.YearOffset": "doc",
    "pandas.tseries.offsets.BYearBegin": "doc",
    "pandas.tseries.offsets.Tick.delta": "doc",
    "pandas.tseries.offsets.Tick.nanos": "doc",
    "pandas.tseries.offsets.Hour.delta": "doc",
    "pandas.tseries.offsets.Hour.nanos": "doc",
    "pandas.tseries.offsets.Milli.kwds": "doc",
    "pandas.tseries.offsets.Milli.name": "doc",
    "pandas.tseries.offsets.Milli.copy": "doc",
    "pandas.tseries.offsets.Micro.kwds": "doc",
    "pandas.tseries.offsets.Micro.name": "doc",
    "pandas.tseries.offsets.Micro.copy": "doc",
    "pandas.tseries.offsets.Nano.delta": "doc",
    "pandas.tseries.offsets.Nano.nanos": "doc",
    "pandas.tseries.offsets.BDay.nanos": "doc",
    "pandas.tseries.offsets.BDay.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd": "doc",
    "pandas.tseries.offsets.CDay.nanos": "doc",
    "pandas.tseries.offsets.CDay.apply": "doc",
    "pandas.testing.assert_index_equal": "doc",
    "pandas.errors.OutOfBoundsDatetime": "doc",
    "pandas.tseries.offsets.BusinessDay": "doc",
    "pandas.tseries.offsets.MonthOffset": "doc",
    "pandas.tseries.offsets.WeekOfMonth": "doc",
    "pandas.tseries.offsets.BQuarterEnd": "doc",
    "pandas.tseries.offsets.FY5253.kwds": "doc",
    "pandas.tseries.offsets.FY5253.name": "doc",
    "pandas.tseries.offsets.FY5253.copy": "doc",
    "pandas.tseries.offsets.Day.freqstr": "doc",
    "pandas.tseries.offsets.Minute.kwds": "doc",
    "pandas.tseries.offsets.Minute.name": "doc",
    "pandas.tseries.offsets.Minute.copy": "doc",
    "pandas.tseries.offsets.Second.kwds": "doc",
    "pandas.tseries.offsets.Second.name": "doc",
    "pandas.tseries.offsets.Second.copy": "doc",
    "pandas.tseries.offsets.Milli.delta": "doc",
    "pandas.tseries.offsets.Milli.nanos": "doc",
    "pandas.tseries.offsets.Micro.delta": "doc",
    "pandas.tseries.offsets.Micro.nanos": "doc",
    "pandas.tseries.offsets.BDay.offset": "doc",
    "pandas.tseries.offsets.BMonthBegin": "doc",
    "pandas.tseries.offsets.CDay.offset": "doc",
    "pandas.core.groupby.GroupBy.cummin": "doc",
    "pandas.core.resample.Resampler.max": "doc",
    "pandas.core.resample.Resampler.sem": "doc",
    "pandas.testing.assert_series_equal": "doc",
    "pandas.IntervalIndex.is_overlapping": "doc",
    "pandas.tseries.offsets.BusinessHour": "doc",
    "pandas.tseries.offsets.SemiMonthEnd": "doc",
    "pandas.tseries.offsets.Week.freqstr": "doc",
    "pandas.tseries.offsets.YearEnd.kwds": "doc",
    "pandas.tseries.offsets.YearEnd.name": "doc",
    "pandas.tseries.offsets.YearEnd.copy": "doc",
    "pandas.tseries.offsets.FY5253.nanos": "doc",
    "pandas.tseries.offsets.FY5253.apply": "doc",
    "pandas.tseries.offsets.Tick.freqstr": "doc",
    "pandas.tseries.offsets.Day.onOffset": "doc",
    "pandas.tseries.offsets.Day.__call__": "doc",
    "pandas.tseries.offsets.Hour.freqstr": "doc",
    "pandas.tseries.offsets.Minute.delta": "doc",
    "pandas.tseries.offsets.Minute.nanos": "doc",
    "pandas.tseries.offsets.Second.delta": "doc",
    "pandas.tseries.offsets.Second.nanos": "doc",
    "pandas.tseries.offsets.Nano.freqstr": "doc",
    "pandas.tseries.offsets.BDay.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthBegin": "doc",
    "pandas.tseries.offsets.CDay.freqstr": "doc",
    "pandas.core.groupby.GroupBy.cumprod": "doc",
    "pandas.tseries.offsets.MonthEnd.kwds": "doc",
    "pandas.tseries.offsets.MonthEnd.name": "doc",
    "pandas.tseries.offsets.MonthEnd.copy": "doc",
    "pandas.tseries.offsets.Week.onOffset": "doc",
    "pandas.tseries.offsets.Week.__call__": "doc",
    "pandas.tseries.offsets.BYearEnd.kwds": "doc",
    "pandas.tseries.offsets.BYearEnd.name": "doc",
    "pandas.tseries.offsets.BYearEnd.copy": "doc",
    "pandas.tseries.offsets.YearEnd.nanos": "doc",
    "pandas.tseries.offsets.YearEnd.apply": "doc",
    "pandas.tseries.offsets.FY5253Quarter": "doc",
    "pandas.tseries.offsets.Tick.onOffset": "doc",
    "pandas.tseries.offsets.Tick.__call__": "doc",
    "pandas.tseries.offsets.Day.normalize": "doc",
    "pandas.tseries.offsets.Day.rule_code": "doc",
    "pandas.tseries.offsets.Hour.onOffset": "doc",
    "pandas.tseries.offsets.Hour.__call__": "doc",
    "pandas.tseries.offsets.Milli.freqstr": "doc",
    "pandas.tseries.offsets.Micro.freqstr": "doc",
    "pandas.tseries.offsets.Nano.onOffset": "doc",
    "pandas.tseries.offsets.Nano.__call__": "doc",
    "pandas.tseries.offsets.BDay.onOffset": "doc",
    "pandas.tseries.offsets.BDay.rollback": "doc",
    "pandas.tseries.offsets.BDay.__call__": "doc",
    "pandas.tseries.offsets.CDay.onOffset": "doc",
    "pandas.tseries.offsets.CDay.rollback": "doc",
    "pandas.tseries.offsets.CDay.__call__": "doc",
    "pandas.tseries.offsets.MonthEnd.nanos": "doc",
    "pandas.tseries.offsets.MonthEnd.apply": "doc",
    "pandas.tseries.offsets.SemiMonthBegin": "doc",
    "pandas.tseries.offsets.Week.normalize": "doc",
    "pandas.tseries.offsets.Week.rule_code": "doc",
    "pandas.tseries.offsets.BYearEnd.nanos": "doc",
    "pandas.tseries.offsets.BYearEnd.apply": "doc",
    "pandas.tseries.offsets.YearBegin.kwds": "doc",
    "pandas.tseries.offsets.YearBegin.name": "doc",
    "pandas.tseries.offsets.YearBegin.copy": "doc",
    "pandas.tseries.offsets.FY5253.freqstr": "doc",
    "pandas.tseries.offsets.Tick.normalize": "doc",
    "pandas.tseries.offsets.Tick.rule_code": "doc",
    "pandas.tseries.offsets.Day.isAnchored": "doc",
    "pandas.tseries.offsets.Hour.normalize": "doc",
    "pandas.tseries.offsets.Hour.rule_code": "doc",
    "pandas.tseries.offsets.Minute.freqstr": "doc",
    "pandas.tseries.offsets.Second.freqstr": "doc",
    "pandas.tseries.offsets.Milli.onOffset": "doc",
    "pandas.tseries.offsets.Milli.__call__": "doc",
    "pandas.tseries.offsets.Micro.onOffset": "doc",
    "pandas.tseries.offsets.Micro.__call__": "doc",
    "pandas.tseries.offsets.Nano.normalize": "doc",
    "pandas.tseries.offsets.Nano.rule_code": "doc",
    "pandas.tseries.offsets.BDay.normalize": "doc",
    "pandas.tseries.offsets.BDay.rule_code": "doc",
    "pandas.tseries.offsets.BMonthEnd.base": "doc",
    "pandas.tseries.offsets.BMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.BMonthEnd.name": "doc",
    "pandas.tseries.offsets.BMonthEnd.copy": "doc",
    "pandas.tseries.offsets.CDay.normalize": "doc",
    "pandas.tseries.offsets.CDay.rule_code": "doc",
    "pandas.errors.UnsupportedFunctionCall": "doc",
    "pandas.tseries.offsets.DateOffset.kwds": "doc",
    "pandas.tseries.offsets.DateOffset.name": "doc",
    "pandas.tseries.offsets.DateOffset.copy": "doc",
    "pandas.tseries.offsets.MonthBegin.kwds": "doc",
    "pandas.tseries.offsets.MonthBegin.name": "doc",
    "pandas.tseries.offsets.MonthBegin.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset": "doc",
    "pandas.tseries.offsets.Week.isAnchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth": "doc",
    "pandas.tseries.offsets.YearOffset.kwds": "doc",
    "pandas.tseries.offsets.YearOffset.name": "doc",
    "pandas.tseries.offsets.YearOffset.copy": "doc",
    "pandas.tseries.offsets.BYearBegin.kwds": "doc",
    "pandas.tseries.offsets.BYearBegin.name": "doc",
    "pandas.tseries.offsets.BYearBegin.copy": "doc",
    "pandas.tseries.offsets.YearEnd.freqstr": "doc",
    "pandas.tseries.offsets.YearBegin.nanos": "doc",
    "pandas.tseries.offsets.YearBegin.apply": "doc",
    "pandas.tseries.offsets.FY5253.onOffset": "doc",
    "pandas.tseries.offsets.FY5253.__call__": "doc",
    "pandas.tseries.offsets.Tick.isAnchored": "doc",
    "pandas.tseries.offsets.Day.is_anchored": "doc",
    "pandas.tseries.offsets.Hour.isAnchored": "doc",
    "pandas.tseries.offsets.Minute.onOffset": "doc",
    "pandas.tseries.offsets.Minute.__call__": "doc",
    "pandas.tseries.offsets.Second.onOffset": "doc",
    "pandas.tseries.offsets.Second.__call__": "doc",
    "pandas.tseries.offsets.Milli.normalize": "doc",
    "pandas.tseries.offsets.Milli.rule_code": "doc",
    "pandas.tseries.offsets.Micro.normalize": "doc",
    "pandas.tseries.offsets.Micro.rule_code": "doc",
    "pandas.tseries.offsets.Nano.isAnchored": "doc",
    "pandas.tseries.offsets.BDay.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.BMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd.base": "doc",
    "pandas.tseries.offsets.CBMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.CBMonthEnd.name": "doc",
    "pandas.tseries.offsets.CBMonthEnd.copy": "doc",
    "pandas.tseries.offsets.CDay.isAnchored": "doc",
    "pandas.core.window.rolling.Rolling.max": "doc",
    "pandas.core.groupby.GroupBy.pct_change": "doc",
    "pandas.core.resample.Resampler.nearest": "doc",
    "pandas.tseries.offsets.DateOffset.nanos": "doc",
    "pandas.tseries.offsets.DateOffset.apply": "doc",
    "pandas.tseries.offsets.BusinessDay.kwds": "doc",
    "pandas.tseries.offsets.BusinessDay.name": "doc",
    "pandas.tseries.offsets.BusinessDay.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.kwds": "doc",
    "pandas.tseries.offsets.MonthOffset.name": "doc",
    "pandas.tseries.offsets.MonthOffset.copy": "doc",
    "pandas.tseries.offsets.MonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.MonthBegin.nanos": "doc",
    "pandas.tseries.offsets.MonthBegin.apply": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd": "doc",
    "pandas.tseries.offsets.Week.apply_index": "doc",
    "pandas.tseries.offsets.Week.is_anchored": "doc",
    "pandas.tseries.offsets.WeekOfMonth.kwds": "doc",
    "pandas.tseries.offsets.WeekOfMonth.name": "doc",
    "pandas.tseries.offsets.WeekOfMonth.copy": "doc",
    "pandas.tseries.offsets.BQuarterEnd.kwds": "doc",
    "pandas.tseries.offsets.BQuarterEnd.name": "doc",
    "pandas.tseries.offsets.BQuarterEnd.copy": "doc",
    "pandas.tseries.offsets.YearOffset.nanos": "doc",
    "pandas.tseries.offsets.YearOffset.apply": "doc",
    "pandas.tseries.offsets.BYearEnd.freqstr": "doc",
    "pandas.tseries.offsets.BYearBegin.nanos": "doc",
    "pandas.tseries.offsets.BYearBegin.apply": "doc",
    "pandas.tseries.offsets.YearEnd.onOffset": "doc",
    "pandas.tseries.offsets.YearEnd.__call__": "doc",
    "pandas.tseries.offsets.FY5253.normalize": "doc",
    "pandas.tseries.offsets.FY5253.rule_code": "doc",
    "pandas.tseries.offsets.Tick.is_anchored": "doc",
    "pandas.tseries.offsets.Day.is_on_offset": "doc",
    "pandas.tseries.offsets.Hour.is_anchored": "doc",
    "pandas.tseries.offsets.Minute.normalize": "doc",
    "pandas.tseries.offsets.Minute.rule_code": "doc",
    "pandas.tseries.offsets.Second.normalize": "doc",
    "pandas.tseries.offsets.Second.rule_code": "doc",
    "pandas.tseries.offsets.Milli.isAnchored": "doc",
    "pandas.tseries.offsets.Micro.isAnchored": "doc",
    "pandas.tseries.offsets.Nano.is_anchored": "doc",
    "pandas.tseries.offsets.BDay.apply_index": "doc",
    "pandas.tseries.offsets.BDay.is_anchored": "doc",
    "pandas.tseries.offsets.BDay.rollforward": "doc",
    "pandas.tseries.offsets.BMonthBegin.base": "doc",
    "pandas.tseries.offsets.BMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.BMonthBegin.name": "doc",
    "pandas.tseries.offsets.BMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CBMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.CBMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CDay.apply_index": "doc",
    "pandas.tseries.offsets.CDay.is_anchored": "doc",
    "pandas.tseries.offsets.CDay.rollforward": "doc",
    "pandas.core.window.rolling.Rolling.corr": "doc",
    "pandas.tseries.offsets.BusinessDay.nanos": "doc",
    "pandas.tseries.offsets.BusinessDay.apply": "doc",
    "pandas.tseries.offsets.BusinessHour.kwds": "doc",
    "pandas.tseries.offsets.BusinessHour.name": "doc",
    "pandas.tseries.offsets.BusinessHour.copy": "doc",
    "pandas.tseries.offsets.CustomBusinessDay": "doc",
    "pandas.tseries.offsets.MonthOffset.nanos": "doc",
    "pandas.tseries.offsets.MonthOffset.apply": "doc",
    "pandas.tseries.offsets.MonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.MonthEnd.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.name": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.copy": "doc",
    "pandas.tseries.offsets.Week.is_on_offset": "doc",
    "pandas.tseries.offsets.WeekOfMonth.nanos": "doc",
    "pandas.tseries.offsets.WeekOfMonth.apply": "doc",
    "pandas.tseries.offsets.BQuarterEnd.nanos": "doc",
    "pandas.tseries.offsets.BQuarterEnd.apply": "doc",
    "pandas.tseries.offsets.BYearEnd.onOffset": "doc",
    "pandas.tseries.offsets.BYearEnd.__call__": "doc",
    "pandas.tseries.offsets.YearEnd.normalize": "doc",
    "pandas.tseries.offsets.YearEnd.rule_code": "doc",
    "pandas.tseries.offsets.YearBegin.freqstr": "doc",
    "pandas.tseries.offsets.FY5253.isAnchored": "doc",
    "pandas.tseries.offsets.Tick.is_on_offset": "doc",
    "pandas.tseries.offsets.Hour.is_on_offset": "doc",
    "pandas.tseries.offsets.Minute.isAnchored": "doc",
    "pandas.tseries.offsets.Second.isAnchored": "doc",
    "pandas.tseries.offsets.Milli.is_anchored": "doc",
    "pandas.tseries.offsets.Micro.is_anchored": "doc",
    "pandas.tseries.offsets.Nano.is_on_offset": "doc",
    "pandas.tseries.offsets.BDay.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.BMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.BMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd.offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.base": "doc",
    "pandas.tseries.offsets.CBMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.CBMonthBegin.name": "doc",
    "pandas.tseries.offsets.CBMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CDay.is_on_offset": "doc",
    "pandas.tseries.offsets.DateOffset.freqstr": "doc",
    "pandas.tseries.offsets.BusinessHour.nanos": "doc",
    "pandas.tseries.offsets.BusinessHour.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour": "doc",
    "pandas.tseries.offsets.MonthEnd.normalize": "doc",
    "pandas.tseries.offsets.MonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.MonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.apply": "doc",
    "pandas.tseries.offsets.YearOffset.freqstr": "doc",
    "pandas.tseries.offsets.BYearEnd.normalize": "doc",
    "pandas.tseries.offsets.BYearEnd.rule_code": "doc",
    "pandas.tseries.offsets.BYearBegin.freqstr": "doc",
    "pandas.tseries.offsets.YearEnd.isAnchored": "doc",
    "pandas.tseries.offsets.YearBegin.onOffset": "doc",
    "pandas.tseries.offsets.YearBegin.__call__": "doc",
    "pandas.tseries.offsets.FY5253.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.kwds": "doc",
    "pandas.tseries.offsets.FY5253Quarter.name": "doc",
    "pandas.tseries.offsets.FY5253Quarter.copy": "doc",
    "pandas.tseries.offsets.Minute.is_anchored": "doc",
    "pandas.tseries.offsets.Second.is_anchored": "doc",
    "pandas.tseries.offsets.Milli.is_on_offset": "doc",
    "pandas.tseries.offsets.Micro.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.BMonthEnd.rollback": "doc",
    "pandas.tseries.offsets.BMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CBMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.CBMonthBegin.apply": "doc",
    "pandas.tseries.offsets.DateOffset.onOffset": "doc",
    "pandas.tseries.offsets.DateOffset.__call__": "doc",
    "pandas.tseries.offsets.BusinessDay.freqstr": "doc",
    "pandas.tseries.offsets.MonthOffset.freqstr": "doc",
    "pandas.tseries.offsets.MonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.MonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.MonthBegin.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.name": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.copy": "doc",
    "pandas.tseries.offsets.WeekOfMonth.freqstr": "doc",
    "pandas.tseries.offsets.BQuarterEnd.freqstr": "doc",
    "pandas.tseries.offsets.YearOffset.onOffset": "doc",
    "pandas.tseries.offsets.YearOffset.__call__": "doc",
    "pandas.tseries.offsets.BYearEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BYearBegin.onOffset": "doc",
    "pandas.tseries.offsets.BYearBegin.__call__": "doc",
    "pandas.tseries.offsets.YearEnd.apply_index": "doc",
    "pandas.tseries.offsets.YearEnd.is_anchored": "doc",
    "pandas.tseries.offsets.YearBegin.normalize": "doc",
    "pandas.tseries.offsets.YearBegin.rule_code": "doc",
    "pandas.tseries.offsets.FY5253.get_year_end": "doc",
    "pandas.tseries.offsets.FY5253.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.nanos": "doc",
    "pandas.tseries.offsets.FY5253Quarter.apply": "doc",
    "pandas.tseries.offsets.Minute.is_on_offset": "doc",
    "pandas.tseries.offsets.Second.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.BMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.BMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthEnd.m_offset": "doc",
    "pandas.tseries.offsets.CBMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rollback": "doc",
    "pandas.tseries.offsets.CBMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CBMonthBegin.offset": "doc",
    "pandas.core.window.expanding.Expanding.max": "doc",
    "pandas.core.groupby.SeriesGroupBy.nlargest": "doc",
    "pandas.tseries.offsets.DateOffset.normalize": "doc",
    "pandas.tseries.offsets.DateOffset.rule_code": "doc",
    "pandas.tseries.offsets.BusinessDay.onOffset": "doc",
    "pandas.tseries.offsets.BusinessDay.__call__": "doc",
    "pandas.tseries.offsets.BusinessHour.freqstr": "doc",
    "pandas.tseries.offsets.MonthOffset.onOffset": "doc",
    "pandas.tseries.offsets.MonthOffset.__call__": "doc",
    "pandas.tseries.offsets.MonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.MonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.MonthBegin.normalize": "doc",
    "pandas.tseries.offsets.MonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.name": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.copy": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.apply": "doc",
    "pandas.tseries.offsets.WeekOfMonth.onOffset": "doc",
    "pandas.tseries.offsets.WeekOfMonth.__call__": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.kwds": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.name": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.copy": "doc",
    "pandas.tseries.offsets.BQuarterEnd.onOffset": "doc",
    "pandas.tseries.offsets.BQuarterEnd.__call__": "doc",
    "pandas.tseries.offsets.YearOffset.normalize": "doc",
    "pandas.tseries.offsets.YearOffset.rule_code": "doc",
    "pandas.tseries.offsets.BYearEnd.apply_index": "doc",
    "pandas.tseries.offsets.BYearEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BYearBegin.normalize": "doc",
    "pandas.tseries.offsets.BYearBegin.rule_code": "doc",
    "pandas.tseries.offsets.YearEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.YearBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.BMonthBegin.rollback": "doc",
    "pandas.tseries.offsets.BMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.CBMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.CBMonthBegin.freqstr": "doc",
    "pandas.core.window.expanding.Expanding.corr": "doc",
    "pandas.core.groupby.SeriesGroupBy.nsmallest": "doc",
    "pandas.testing.assert_extension_array_equal": "doc",
    "pandas.tseries.offsets.DateOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessDay.normalize": "doc",
    "pandas.tseries.offsets.BusinessDay.rule_code": "doc",
    "pandas.tseries.offsets.BusinessHour.onOffset": "doc",
    "pandas.tseries.offsets.BusinessHour.__call__": "doc",
    "pandas.tseries.offsets.MonthOffset.normalize": "doc",
    "pandas.tseries.offsets.MonthOffset.rule_code": "doc",
    "pandas.tseries.offsets.MonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.MonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.name": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.apply": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.WeekOfMonth.normalize": "doc",
    "pandas.tseries.offsets.WeekOfMonth.rule_code": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.nanos": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.apply": "doc",
    "pandas.tseries.offsets.BQuarterEnd.normalize": "doc",
    "pandas.tseries.offsets.BQuarterEnd.rule_code": "doc",
    "pandas.tseries.offsets.YearOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BYearEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BYearBegin.isAnchored": "doc",
    "pandas.tseries.offsets.YearBegin.apply_index": "doc",
    "pandas.tseries.offsets.YearBegin.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.freqstr": "doc",
    "pandas.tseries.offsets.BMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.BMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.rollforward": "doc",
    "pandas.tseries.offsets.BMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.BMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CBMonthEnd.cbday_roll": "doc",
    "pandas.tseries.offsets.CBMonthEnd.month_roll": "doc",
    "pandas.tseries.offsets.CBMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.m_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rollback": "doc",
    "pandas.tseries.offsets.CBMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.DateOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessDay.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessHour.normalize": "doc",
    "pandas.tseries.offsets.BusinessHour.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.name": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.isAnchored": "doc",
    "pandas.tseries.offsets.MonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.MonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.WeekOfMonth.isAnchored": "doc",
    "pandas.tseries.offsets.BQuarterEnd.isAnchored": "doc",
    "pandas.tseries.offsets.YearOffset.apply_index": "doc",
    "pandas.tseries.offsets.YearOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BYearBegin.apply_index": "doc",
    "pandas.tseries.offsets.BYearBegin.is_anchored": "doc",
    "pandas.tseries.offsets.YearBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.onOffset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.__call__": "doc",
    "pandas.tseries.offsets.BMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CBMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.CBMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rollforward": "doc",
    "pandas.tseries.offsets.CBMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.DateOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessDay.apply_index": "doc",
    "pandas.tseries.offsets.BusinessDay.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessHour.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.name": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.apply_index": "doc",
    "pandas.tseries.offsets.MonthOffset.is_anchored": "doc",
    "pandas.tseries.offsets.MonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.name": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.WeekOfMonth.is_anchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.freqstr": "doc",
    "pandas.tseries.offsets.BQuarterEnd.apply_index": "doc",
    "pandas.tseries.offsets.BQuarterEnd.is_anchored": "doc",
    "pandas.tseries.offsets.YearOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BYearBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.normalize": "doc",
    "pandas.tseries.offsets.FY5253Quarter.rule_code": "doc",
    "pandas.tseries.offsets.FY5253Quarter.get_weeks": "doc",
    "pandas.tseries.offsets.BMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.BMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.rollforward": "doc",
    "pandas.tseries.offsets.CBMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.cbday_roll": "doc",
    "pandas.tseries.offsets.CBMonthBegin.month_roll": "doc",
    "pandas.tseries.offsets.CBMonthBegin.isAnchored": "doc",
    "pandas.core.groupby.SeriesGroupBy.value_counts": "doc",
    "pandas.tseries.offsets.BusinessDay.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessHour.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.apply": "doc",
    "pandas.tseries.offsets.MonthOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.WeekOfMonth.is_on_offset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.onOffset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.__call__": "doc",
    "pandas.tseries.offsets.BQuarterEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.CBMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rollforward": "doc",
    "pandas.tseries.offsets.BusinessHour.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.normalize": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.rule_code": "doc",
    "pandas.tseries.offsets.FY5253Quarter.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.isAnchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.__call__": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.name": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.is_anchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253.get_rule_code_suffix": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.rule_code": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.apply": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.name": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.FY5253Quarter.year_has_extra_week": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset": "doc",
    "pandas.api.indexers.check_array_indexer": "doc",
    "pandas.api.extensions.register_series_accessor": "doc",
    "pandas.DatetimeTZDtype": "doc",
    "pandas.api.types.is_object_dtype": "doc",
    "pandas.api.types.is_string_dtype": "doc",
    "pandas.api.types.is_timedelta64_dtype": "doc",
    "pandas.api.types.is_unsigned_integer_dtype": "doc",
    "pandas.Index.get_level_values": "doc",
    "pandas.Series.last_valid_index": "doc",
    "pandas.Timestamp.utcfromtimestamp": "doc",
    "pandas.MultiIndex.get_level_values": "doc",
    "pandas.Index.get_indexer_non_unique": "doc",
    "pandas.Series.first_valid_index": "doc",
    "pandas.api.types.is_timedelta64_ns_dtype": "doc",
    "pandas.util.hash_pandas_object": "doc",
    "pandas.api.types.union_categoricals": "doc",
    "pandas.plotting.autocorrelation_plot": "doc",
    "pandas.cut": "doc",
    "pandas.melt": "doc",
    "pandas.qcut": "doc",
    "pandas.isna": "doc",
    "pandas.eval": "doc",
    "pandas.pivot": "doc",
    "pandas.merge": "doc",
    "pandas.notna": "doc",
    "pandas.Index": "doc",
    "pandas.unique": "doc",
    "pandas.isnull": "doc",
    "pandas.Series": "doc",
    "pandas.Period": "doc",
    "pandas.notnull": "doc",
    "pandas.Index.T": "doc",
    "pandas.Grouper": "doc",
    "pandas.read_csv": "doc",
    "pandas.read_fwf": "doc",
    "pandas.read_hdf": "doc",
    "pandas.read_sql": "doc",
    "pandas.read_gbq": "doc",
    "pandas.Series.T": "doc",
    "pandas.plotting": "doc",
    "pandas.read_json": "doc",
    "pandas.read_spss": "doc",
    "pandas.Series.at": "doc",
    "pandas.Series.xs": "doc",
    "pandas.Series.lt": "doc",
    "pandas.Series.gt": "doc",
    "pandas.Series.le": "doc",
    "pandas.Series.ge": "doc",
    "pandas.Series.ne": "doc",
    "pandas.Series.eq": "doc",
    "pandas.Timestamp": "doc",
    "pandas.Timedelta": "doc",
    "pandas.Int8Dtype": "doc",
    "pandas.Index.all": "doc",
    "pandas.Index.any": "doc",
    "pandas.Index.is_": "doc",
    "pandas.Index.min": "doc",
    "pandas.Index.map": "doc",
    "pandas.read_excel": "doc",
    "pandas.Series.get": "doc",
    "pandas.Series.iat": "doc",
    "pandas.Series.loc": "doc",
    "pandas.Series.pop": "doc",
    "pandas.Series.add": "doc",
    "pandas.Series.sub": "doc",
    "pandas.Series.mul": "doc",
    "pandas.Series.div": "doc",
    "pandas.Series.mod": "doc",
    "pandas.Series.pow": "doc",
    "pandas.Series.dot": "doc",
    "pandas.Series.agg": "doc",
    "pandas.Series.map": "doc",
    "pandas.Series.ewm": "doc",
    "pandas.Series.abs": "doc",
    "pandas.Series.all": "doc",
    "pandas.Series.any": "doc",
    "pandas.Series.cov": "doc",
    "pandas.Series.mad": "doc",
    "pandas.Series.min": "doc",
    "pandas.Series.std": "doc",
    "pandas.Series.sum": "doc",
    "pandas.Series.var": "doc",
    "pandas.Period.day": "doc",
    "pandas.Period.now": "doc",
    "pandas.Int16Dtype": "doc",
    "pandas.Int32Dtype": "doc",
    "pandas.Int64Dtype": "doc",
    "pandas.UInt8Dtype": "doc",
    "pandas.Index.name": "doc",
    "pandas.Index.ndim": "doc",
    "pandas.Index.size": "doc",
    "pandas.Index.copy": "doc",
    "pandas.Index.drop": "doc",
    "pandas.Index.take": "doc",
    "pandas.Index.isna": "doc",
    "pandas.Index.view": "doc",
    "pandas.Index.join": "doc",
    "pandas.Index.asof": "doc",
    "pandas.Index.isin": "doc",
    "pandas.Int64Index": "doc",
    "pandas.MultiIndex": "doc",
    "pandas.IndexSlice": "doc",
    "pandas.read_pickle": "doc",
    "pandas.ExcelWriter": "doc",
    "pandas.get_dummies": "doc",
    "pandas.Series.ndim": "doc",
    "pandas.Series.size": "doc",
    "pandas.Series.name": "doc",
    "pandas.Series.copy": "doc",
    "pandas.Series.bool": "doc",
    "pandas.Series.iloc": "doc",
    "pandas.Series.keys": "doc",
    "pandas.Series.radd": "doc",
    "pandas.Series.rsub": "doc",
    "pandas.Series.rmul": "doc",
    "pandas.Series.rdiv": "doc",
    "pandas.Series.rmod": "doc",
    "pandas.Series.rpow": "doc",
    "pandas.Series.pipe": "doc",
    "pandas.Series.clip": "doc",
    "pandas.Series.diff": "doc",
    "pandas.Series.kurt": "doc",
    "pandas.Series.mean": "doc",
    "pandas.Series.mode": "doc",
    "pandas.Series.prod": "doc",
    "pandas.Series.rank": "doc",
    "pandas.Series.skew": "doc",
    "pandas.Series.drop": "doc",
    "pandas.Series.head": "doc",
    "pandas.Series.isin": "doc",
    "pandas.Series.last": "doc",
    "pandas.Series.take": "doc",
    "pandas.Series.mask": "doc",
    "pandas.Series.isna": "doc",
    "pandas.Series.view": "doc",
    "pandas.Series.asof": "doc",
    "pandas.Series.plot": "doc",
    "pandas.Series.hist": "doc",
    "pandas.Period.freq": "doc",
    "pandas.Period.hour": "doc",
    "pandas.Period.week": "doc",
    "pandas.PeriodDtype": "doc",
    "pandas.UInt16Dtype": "doc",
    "pandas.UInt32Dtype": "doc",
    "pandas.UInt64Dtype": "doc",
    "pandas.StringDtype": "doc",
    "pandas.Index.dtype": "doc",
    "pandas.Index.names": "doc",
    "pandas.Index.where": "doc",
    "pandas.Index.notna": "doc",
    "pandas.Index.ravel": "doc",
    "pandas.Index.shift": "doc",
    "pandas.Index.union": "doc",
    "pandas.UInt64Index": "doc",
    "pandas.PeriodIndex": "doc",
    "pandas.HDFStore.put": "doc",
    "pandas.HDFStore.get": "doc",
    "pandas.read_parquet": "doc",
    "pandas.wide_to_long": "doc",
    "pandas.to_timedelta": "doc",
    "pandas.period_range": "doc",
    "pandas.Series.index": "doc",
    "pandas.Series.dtype": "doc",
    "pandas.Series.round": "doc",
    "pandas.Series.apply": "doc",
    "pandas.Series.count": "doc",
    "pandas.Series.align": "doc",
    "pandas.Series.first": "doc",
    "pandas.Series.where": "doc",
    "pandas.Series.notna": "doc",
    "pandas.Series.ravel": "doc",
    "pandas.Series.shift": "doc",
    "pandas.Series.dt.tz": "doc",
    "pandas.Timestamp.tz": "doc",
    "pandas.Period.month": "doc",
    "pandas.BooleanDtype": "doc",
    "pandas.Index.values": "doc",
    "pandas.Index.nbytes": "doc",
    "pandas.Index.delete": "doc",
    "pandas.Index.equals": "doc",
    "pandas.Index.rename": "doc",
    "pandas.Index.unique": "doc",
    "pandas.Index.fillna": "doc",
    "pandas.Index.dropna": "doc",
    "pandas.Index.astype": "doc",
    "pandas.Index.append": "doc",
    "pandas.Float64Index": "doc",
    "pandas.HDFStore.info": "doc",
    "pandas.HDFStore.keys": "doc",
    "pandas.HDFStore.walk": "doc",
    "pandas.merge_ordered": "doc",
    "pandas.Series.values": "doc",
    "pandas.Series.nbytes": "doc",
    "pandas.Series.dtypes": "doc",
    "pandas.Series.astype": "doc",
    "pandas.Series.cumsum": "doc",
    "pandas.Series.median": "doc",
    "pandas.Series.unique": "doc",
    "pandas.Series.equals": "doc",
    "pandas.Series.idxmin": "doc",
    "pandas.Series.rename": "doc",
    "pandas.Series.dropna": "doc",
    "pandas.Series.fillna": "doc",
    "pandas.Series.append": "doc",
    "pandas.Series.update": "doc",
    "pandas.Series.asfreq": "doc",
    "pandas.Series.tshift": "doc",
    "pandas.Series.dt.day": "doc",
    "pandas.Series.to_csv": "doc",
    "pandas.Series.to_hdf": "doc",
    "pandas.Series.to_sql": "doc",
    "pandas.Timestamp.day": "doc",
    "pandas.Timestamp.min": "doc",
    "pandas.Timestamp.dst": "doc",
    "pandas.Timestamp.now": "doc",
    "pandas.Timedelta.min": "doc",
    "pandas.Period.minute": "doc",
    "pandas.Period.second": "doc",
    "pandas.Period.asfreq": "doc",
    "pandas.Index.hasnans": "doc",
    "pandas.Index.reindex": "doc",
    "pandas.Index.nunique": "doc",
    "pandas.Index.to_list": "doc",
    "pandas.Index.get_loc": "doc",
    "pandas.read_clipboard": "doc",
    "pandas.read_sql_table": "doc",
    "pandas.read_sql_query": "doc",
    "pandas.interval_range": "doc",
    "pandas.Series.hasnans": "doc",
    "pandas.Series.to_list": "doc",
    "pandas.Series.combine": "doc",
    "pandas.Series.product": "doc",
    "pandas.Series.groupby": "doc",
    "pandas.Series.rolling": "doc",
    "pandas.Series.between": "doc",
    "pandas.Series.nunique": "doc",
    "pandas.Series.reindex": "doc",
    "pandas.Series.unstack": "doc",
    "pandas.Series.explode": "doc",
    "pandas.Series.squeeze": "doc",
    "pandas.Series.replace": "doc",
    "pandas.Series.dt.time": "doc",
    "pandas.Series.dt.hour": "doc",
    "pandas.Series.dt.week": "doc",
    "pandas.Series.dt.freq": "doc",
    "pandas.Series.dt.days": "doc",
    "pandas.Series.to_dict": "doc",
    "pandas.Series.to_json": "doc",
    "pandas.Timestamp.asm8": "doc",
    "pandas.Timestamp.fold": "doc",
    "pandas.Timestamp.hour": "doc",
    "pandas.Timestamp.week": "doc",
    "pandas.Timestamp.freq": "doc",
    "pandas.Timestamp.time": "doc",
    "pandas.Timedelta.asm8": "doc",
    "pandas.Timedelta.days": "doc",
    "pandas.Timedelta.freq": "doc",
    "pandas.Timedelta.view": "doc",
    "pandas.Period.ordinal": "doc",
    "pandas.Period.weekday": "doc",
    "pandas.Index.is_mixed": "doc",
    "pandas.TimedeltaIndex": "doc",
    "pandas.plotting.table": "doc",
    "pandas.option_context": "doc",
    "pandas.ExcelFile.parse": "doc",
    "pandas.HDFStore.append": "doc",
    "pandas.HDFStore.groups": "doc",
    "pandas.timedelta_range": "doc",
    "pandas.Series.to_numpy": "doc",
    "pandas.Series.floordiv": "doc",
    "pandas.Series.describe": "doc",
    "pandas.Series.quantile": "doc",
    "pandas.Series.kurtosis": "doc",
    "pandas.Series.resample": "doc",
    "pandas.Series.dt.month": "doc",
    "pandas.Series.dt.round": "doc",
    "pandas.Series.dt.floor": "doc",
    "pandas.Series.plot.bar": "doc",
    "pandas.Series.plot.box": "doc",
    "pandas.Series.plot.kde": "doc",
    "pandas.Series.plot.pie": "doc",
    "pandas.Series.to_excel": "doc",
    "pandas.Timestamp.month": "doc",
    "pandas.Timestamp.value": "doc",
    "pandas.Timestamp.floor": "doc",
    "pandas.Timestamp.round": "doc",
    "pandas.Timestamp.today": "doc",
    "pandas.Timedelta.delta": "doc",
    "pandas.Timedelta.value": "doc",
    "pandas.Timedelta.floor": "doc",
    "pandas.Timedelta.round": "doc",
    "pandas.Period.end_time": "doc",
    "pandas.Index.is_unique": "doc",
    "pandas.Index.identical": "doc",
    "pandas.Index.is_object": "doc",
    "pandas.Index.droplevel": "doc",
    "pandas.Index.asof_locs": "doc",
    "pandas.PeriodIndex.day": "doc",
    "pandas.api.types.is_re": "doc",
    "pandas.Series.rfloordiv": "doc",
    "pandas.Series.transform": "doc",
    "pandas.Series.expanding": "doc",
    "pandas.Series.is_unique": "doc",
    "pandas.Series.droplevel": "doc",
    "pandas.Series.dt.minute": "doc",
    "pandas.Series.dt.second": "doc",
    "pandas.Series.plot.barh": "doc",
    "pandas.Series.plot.hist": "doc",
    "pandas.Series.plot.line": "doc",
    "pandas.Series.to_pickle": "doc",
    "pandas.Timestamp.minute": "doc",
    "pandas.Timestamp.second": "doc",
    "pandas.Timestamp.tzinfo": "doc",
    "pandas.Timestamp.tzname": "doc",
    "pandas.Timestamp.utcnow": "doc",
    "pandas.Period.dayofweek": "doc",
    "pandas.Index.duplicated": "doc",
    "pandas.Index.is_boolean": "doc",
    "pandas.Index.difference": "doc",
    "pandas.MultiIndex.names": "doc",
    "pandas.MultiIndex.codes": "doc",
    "pandas.PeriodIndex.freq": "doc",
    "pandas.PeriodIndex.hour": "doc",
    "pandas.PeriodIndex.week": "doc",
    "pandas.plotting.boxplot": "doc",
    "pandas.Series.duplicated": "doc",
    "pandas.Series.tz_convert": "doc",
    "pandas.Series.dt.weekday": "doc",
    "pandas.Series.dt.seconds": "doc",
    "pandas.Timestamp.combine": "doc",
    "pandas.Timestamp.replace": "doc",
    "pandas.Timestamp.weekday": "doc",
    "pandas.Timedelta.seconds": "doc",
    "pandas.Period.weekofyear": "doc",
    "pandas.Index.is_floating": "doc",
    "pandas.Index.get_indexer": "doc",
    "pandas.MultiIndex.levels": "doc",
    "pandas.PeriodIndex.month": "doc",
    "pandas.plotting.lag_plot": "doc",
    "pandas.api.types.is_bool": "doc",
    "pandas.Series.tz_localize": "doc",
    "pandas.Series.dt.end_time": "doc",
    "pandas.Series.to_markdown": "doc",
    "pandas.Timestamp.to_numpy": "doc",
    "pandas.Timedelta.to_numpy": "doc",
    "pandas.Period.daysinmonth": "doc",
    "pandas.Index.is_monotonic": "doc",
    "pandas.Index.memory_usage": "doc",
    "pandas.MultiIndex.nlevels": "doc",
    "pandas.MultiIndex.get_loc": "doc",
    "pandas.PeriodIndex.minute": "doc",
    "pandas.PeriodIndex.second": "doc",
    "pandas.PeriodIndex.asfreq": "doc",
    "pandas.api.types.is_float": "doc",
    "pandas.Series.memory_usage": "doc",
    "pandas.Series.is_monotonic": "doc",
    "pandas.Series.reindex_like": "doc",
    "pandas.Series.dt.dayofweek": "doc",
    "pandas.Series.plot.density": "doc",
    "pandas.Series.to_clipboard": "doc",
    "pandas.Timestamp.dayofweek": "doc",
    "pandas.Timestamp.timetuple": "doc",
    "pandas.Timestamp.toordinal": "doc",
    "pandas.Timestamp.utcoffset": "doc",
    "pandas.Period.is_leap_year": "doc",
    "pandas.Index.inferred_type": "doc",
    "pandas.Index.slice_indexer": "doc",
    "pandas.MultiIndex.levshape": "doc",
    "pandas.MultiIndex.get_locs": "doc",
    "pandas.TimedeltaIndex.days": "doc",
    "pandas.TimedeltaIndex.mean": "doc",
    "pandas.PeriodIndex.weekday": "doc",
    "pandas.api.types.is_sparse": "doc",
    "pandas.api.types.is_number": "doc",
    "pandas.api.types.is_scalar": "doc",
    "pandas.Series.infer_objects": "doc",
    "pandas.Series.combine_first": "doc",
    "pandas.Series.dt.nanosecond": "doc",
    "pandas.Series.dt.weekofyear": "doc",
    "pandas.Series.dt.tz_convert": "doc",
    "pandas.Series.dt.components": "doc",
    "pandas.Timestamp.nanosecond": "doc",
    "pandas.Timestamp.resolution": "doc",
    "pandas.Timestamp.weekofyear": "doc",
    "pandas.Timestamp.isoweekday": "doc",
    "pandas.Timestamp.tz_convert": "doc",
    "pandas.Timedelta.components": "doc",
    "pandas.Timedelta.resolution": "doc",
    "pandas.Period.days_in_month": "doc",
    "pandas.Index.has_duplicates": "doc",
    "pandas.MultiIndex.droplevel": "doc",
    "pandas.TimedeltaIndex.round": "doc",
    "pandas.TimedeltaIndex.floor": "doc",
    "pandas.PeriodIndex.end_time": "doc",
    "pandas.api.types.is_complex": "doc",
    "pandas.Series.dt.microsecond": "doc",
    "pandas.Series.dt.is_year_end": "doc",
    "pandas.Series.dt.daysinmonth": "doc",
    "pandas.Series.dt.tz_localize": "doc",
    "pandas.Series.dt.nanoseconds": "doc",
    "pandas.Timestamp.daysinmonth": "doc",
    "pandas.Timestamp.is_year_end": "doc",
    "pandas.Timestamp.microsecond": "doc",
    "pandas.Timestamp.fromordinal": "doc",
    "pandas.Timestamp.tz_localize": "doc",
    "pandas.Timedelta.nanoseconds": "doc",
    "pandas.Index.drop_duplicates": "doc",
    "pandas.Index.to_native_types": "doc",
    "pandas.Index.get_indexer_for": "doc",
    "pandas.Index.get_slice_bound": "doc",
    "pandas.MultiIndex.from_frame": "doc",
    "pandas.PeriodIndex.dayofweek": "doc",
    "pandas.api.types.is_hashable": "doc",
    "pandas.Series.drop_duplicates": "doc",
    "pandas.Series.dt.is_month_end": "doc",
    "pandas.Series.dt.is_leap_year": "doc",
    "pandas.Series.dt.microseconds": "doc",
    "pandas.Timestamp.is_leap_year": "doc",
    "pandas.Timestamp.is_month_end": "doc",
    "pandas.Timedelta.is_populated": "doc",
    "pandas.Timedelta.microseconds": "doc",
    "pandas.MultiIndex.from_arrays": "doc",
    "pandas.MultiIndex.from_tuples": "doc",
    "pandas.MultiIndex.get_indexer": "doc",
    "pandas.TimedeltaIndex.seconds": "doc",
    "pandas.PeriodIndex.weekofyear": "doc",
    "pandas.api.types.is_dict_like": "doc",
    "pandas.api.types.is_file_like": "doc",
    "pandas.api.types.is_list_like": "doc",
    "pandas.Series.dt.days_in_month": "doc",
    "pandas.Series.dt.to_pydatetime": "doc",
    "pandas.Series.dt.total_seconds": "doc",
    "pandas.Timestamp.days_in_month": "doc",
    "pandas.Timestamp.fromtimestamp": "doc",
    "pandas.Timestamp.to_datetime64": "doc",
    "pandas.Timestamp.to_pydatetime": "doc",
    "pandas.Timedelta.total_seconds": "doc",
    "pandas.MultiIndex.from_product": "doc",
    "pandas.MultiIndex.is_lexsorted": "doc",
    "pandas.PeriodIndex.daysinmonth": "doc",
    "pandas.core.window.ewm.EWM.std": "doc",
    "pandas.core.window.ewm.EWM.var": "doc",
    "pandas.core.window.ewm.EWM.cov": "doc",
    "pandas.plotting.andrews_curves": "doc",
    "pandas.plotting.bootstrap_plot": "doc",
    "pandas.api.types.is_bool_dtype": "doc",
    "pandas.Series.dt.to_pytimedelta": "doc",
    "pandas.Timestamp.to_julian_date": "doc",
    "pandas.Timedelta.to_pytimedelta": "doc",
    "pandas.Timedelta.to_timedelta64": "doc",
    "pandas.MultiIndex.to_flat_index": "doc",
    "pandas.MultiIndex.get_loc_level": "doc",
    "pandas.PeriodIndex.is_leap_year": "doc",
    "pandas.core.window.ewm.EWM.mean": "doc",
    "pandas.api.indexers.BaseIndexer": "doc",
    "pandas.core.groupby.GroupBy.agg": "doc",
    "pandas.core.groupby.GroupBy.all": "doc",
    "pandas.core.groupby.GroupBy.any": "doc",
    "pandas.core.groupby.GroupBy.min": "doc",
    "pandas.core.groupby.GroupBy.nth": "doc",
    "pandas.core.groupby.GroupBy.std": "doc",
    "pandas.core.groupby.GroupBy.sum": "doc",
    "pandas.core.groupby.GroupBy.var": "doc",
    "pandas.api.types.is_float_dtype": "doc",
    "pandas.api.types.is_named_tuple": "doc",
    "pandas.TimedeltaIndex.components": "doc",
    "pandas.PeriodIndex.days_in_month": "doc",
    "pandas.core.groupby.GroupBy.pipe": "doc",
    "pandas.core.groupby.GroupBy.head": "doc",
    "pandas.core.groupby.GroupBy.last": "doc",
    "pandas.core.groupby.GroupBy.mean": "doc",
    "pandas.core.groupby.GroupBy.ohlc": "doc",
    "pandas.core.groupby.GroupBy.prod": "doc",
    "pandas.core.groupby.GroupBy.rank": "doc",
    "pandas.core.groupby.GroupBy.size": "doc",
    "pandas.api.types.is_period_dtype": "doc",
    "pandas.io.json.build_table_schema": "doc",
    "pandas.TimedeltaIndex.nanoseconds": "doc",
    "pandas.core.groupby.GroupBy.apply": "doc",
    "pandas.core.groupby.GroupBy.bfill": "doc",
    "pandas.core.groupby.GroupBy.count": "doc",
    "pandas.core.groupby.GroupBy.ffill": "doc",
    "pandas.core.groupby.GroupBy.first": "doc",
    "pandas.api.types.is_re_compilable": "doc",
    "pandas.TimedeltaIndex.microseconds": "doc",
    "pandas.core.groupby.GroupBy.groups": "doc",
    "pandas.core.groupby.GroupBy.cumsum": "doc",
    "pandas.core.groupby.GroupBy.median": "doc",
    "pandas.core.groupby.GroupBy.ngroup": "doc",
    "pandas.core.resample.Resampler.pad": "doc",
    "pandas.core.resample.Resampler.min": "doc",
    "pandas.core.resample.Resampler.std": "doc",
    "pandas.core.resample.Resampler.sum": "doc",
    "pandas.core.resample.Resampler.var": "doc",
    "pandas.TimedeltaIndex.inferred_freq": "doc",
    "pandas.core.groupby.GroupBy.indices": "doc",
    "pandas.core.resample.Resampler.pipe": "doc",
    "pandas.core.resample.Resampler.last": "doc",
    "pandas.core.resample.Resampler.mean": "doc",
    "pandas.core.resample.Resampler.ohlc": "doc",
    "pandas.core.resample.Resampler.prod": "doc",
    "pandas.core.resample.Resampler.size": "doc",
    "pandas.TimedeltaIndex.to_pytimedelta": "doc",
    "pandas.core.groupby.GroupBy.cumcount": "doc",
    "pandas.core.resample.Resampler.apply": "doc",
    "pandas.core.resample.Resampler.ffill": "doc",
    "pandas.core.resample.Resampler.bfill": "doc",
    "pandas.core.resample.Resampler.count": "doc",
    "pandas.core.resample.Resampler.first": "doc",
    "pandas.api.extensions.ExtensionDtype": "doc",
    "pandas.api.extensions.ExtensionArray": "doc",
    "pandas.core.window.rolling.Window.sum": "doc",
    "pandas.core.window.rolling.Window.var": "doc",
    "pandas.core.window.rolling.Window.std": "doc",
    "pandas.core.groupby.GroupBy.get_group": "doc",
    "pandas.core.groupby.GroupBy.transform": "doc",
    "pandas.core.resample.Resampler.groups": "doc",
    "pandas.core.resample.Resampler.fillna": "doc",
    "pandas.core.resample.Resampler.asfreq": "doc",
    "pandas.core.resample.Resampler.median": "doc",
    "pandas.MultiIndex.remove_unused_levels": "doc",
    "pandas.core.window.rolling.Rolling.sum": "doc",
    "pandas.core.window.rolling.Rolling.var": "doc",
    "pandas.core.window.rolling.Rolling.std": "doc",
    "pandas.core.window.rolling.Rolling.min": "doc",
    "pandas.core.window.rolling.Rolling.cov": "doc",
    "pandas.core.window.rolling.Window.mean": "doc",
    "pandas.core.resample.Resampler.indices": "doc",
    "pandas.core.resample.Resampler.nunique": "doc",
    "pandas.core.window.rolling.Rolling.mean": "doc",
    "pandas.core.window.rolling.Rolling.skew": "doc",
    "pandas.core.window.rolling.Rolling.kurt": "doc",
    "pandas.core.resample.Resampler.backfill": "doc",
    "pandas.core.resample.Resampler.quantile": "doc",
    "pandas.core.window.rolling.Rolling.count": "doc",
    "pandas.core.window.rolling.Rolling.apply": "doc",
    "pandas.core.groupby.SeriesGroupBy.unique": "doc",
    "pandas.core.resample.Resampler.get_group": "doc",
    "pandas.core.resample.Resampler.transform": "doc",
    "pandas.core.window.rolling.Rolling.median": "doc",
    "pandas.core.groupby.SeriesGroupBy.nunique": "doc",
    "pandas.core.window.expanding.Expanding.sum": "doc",
    "pandas.core.window.expanding.Expanding.var": "doc",
    "pandas.core.window.expanding.Expanding.std": "doc",
    "pandas.core.window.expanding.Expanding.min": "doc",
    "pandas.core.window.expanding.Expanding.cov": "doc",
    "pandas.core.window.rolling.Rolling.quantile": "doc",
    "pandas.core.window.expanding.Expanding.mean": "doc",
    "pandas.core.window.expanding.Expanding.skew": "doc",
    "pandas.core.window.expanding.Expanding.kurt": "doc",
    "pandas.core.window.expanding.Expanding.count": "doc",
    "pandas.core.window.expanding.Expanding.apply": "doc",
    "pandas.core.window.expanding.Expanding.median": "doc",
    "pandas.core.window.expanding.Expanding.quantile": "doc",
    "pandas.Index.to_numpy": "doc"
  },
  "keras.backend.tensorflow_backend": {
    "keras.backend.rnn": "doc",
    "keras.backend.floatx": "doc",
    "keras.backend.epsilon": "doc",
    "keras.backend.get_uid": "doc",
    "keras.backend.set_floatx": "doc",
    "keras.backend.set_epsilon": "doc",
    "keras.backend.clear_session": "doc",
    "keras.backend.is_keras_tensor": "doc",
    "keras.backend.image_data_format": "doc",
    "keras.backend.set_image_data_format": "doc",
    "keras.layers.Masking": "doc",
    "keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "keras.Model.test_on_batch": "doc",
    "keras.layers.Dense": "doc",
    "keras.layers.Reshape": "doc",
    "keras.layers.Flatten": "doc",
    "keras.layers.Layer.trainable": "doc",
    "keras.layers.experimental.preprocessing.Rescaling": "doc",
    "keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "keras.layers.experimental.preprocessing.Normalization": "doc",
    "keras.layers.experimental.preprocessing.Discretization": "doc",
    "keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "keras.Model.save": "doc",
    "keras.layers.GRU": "doc",
    "keras.layers.RNN": "doc",
    "keras.layers.Add": "doc",
    "keras.layers.Dot": "doc",
    "keras.layers.ELU": "doc",
    "keras.layers.LSTM": "doc",
    "keras.layers.ReLU": "doc",
    "keras.layers.Layer": "doc",
    "keras.layers.PReLU": "doc",
    "keras.layers.Lambda": "doc",
    "keras.layers.Conv1D": "doc",
    "keras.layers.Conv2D": "doc",
    "keras.layers.Conv3D": "doc",
    "keras.Sequential.add": "doc",
    "keras.layers.Dropout": "doc",
    "keras.layers.Permute": "doc",
    "keras.layers.Average": "doc",
    "keras.layers.Maximum": "doc",
    "keras.layers.Minimum": "doc",
    "keras.layers.Softmax": "doc",
    "keras.layers.Subtract": "doc",
    "keras.layers.Multiply": "doc",
    "keras.activations.tanh": "doc",
    "keras.layers.Embedding": "doc",
    "keras.layers.SimpleRNN": "doc",
    "keras.layers.Attention": "doc",
    "keras.layers.LeakyReLU": "doc",
    "keras.layers.Activation": "doc",
    "keras.layers.ConvLSTM2D": "doc",
    "keras.layers.Cropping1D": "doc",
    "keras.layers.Cropping2D": "doc",
    "keras.layers.Cropping3D": "doc",
    "keras.layers.Concatenate": "doc",
    "keras.layers.Layer.losses": "doc",
    "keras.layers.MaxPooling1D": "doc",
    "keras.layers.MaxPooling2D": "doc",
    "keras.layers.MaxPooling3D": "doc",
    "keras.layers.AlphaDropout": "doc",
    "keras.layers.RepeatVector": "doc",
    "keras.layers.UpSampling1D": "doc",
    "keras.layers.UpSampling2D": "doc",
    "keras.layers.UpSampling3D": "doc",
    "keras.layers.Layer.weights": "doc",
    "keras.layers.Layer.metrics": "doc",
    "keras.layers.Layer.dynamic": "doc",
    "keras.layers.Bidirectional": "doc",
    "keras.layers.GaussianNoise": "doc",
    "keras.layers.ZeroPadding1D": "doc",
    "keras.layers.ZeroPadding2D": "doc",
    "keras.layers.ZeroPadding3D": "doc",
    "keras.layers.Layer.add_loss": "doc",
    "keras.layers.SeparableConv1D": "doc",
    "keras.layers.SeparableConv2D": "doc",
    "keras.layers.DepthwiseConv2D": "doc",
    "keras.layers.Conv2DTranspose": "doc",
    "keras.layers.Conv3DTranspose": "doc",
    "keras.layers.TimeDistributed": "doc",
    "keras.layers.GaussianDropout": "doc",
    "keras.layers.ThresholdedReLU": "doc",
    "keras.layers.Layer.get_config": "doc",
    "keras.layers.Layer.add_metric": "doc",
    "keras.layers.AveragePooling1D": "doc",
    "keras.layers.AveragePooling2D": "doc",
    "keras.layers.AveragePooling3D": "doc",
    "keras.layers.SpatialDropout1D": "doc",
    "keras.layers.SpatialDropout2D": "doc",
    "keras.layers.SpatialDropout3D": "doc",
    "keras.layers.Layer.get_weights": "doc",
    "keras.layers.Layer.set_weights": "doc",
    "keras.layers.AdditiveAttention": "doc",
    "keras.layers.GlobalMaxPooling1D": "doc",
    "keras.layers.GlobalMaxPooling2D": "doc",
    "keras.layers.GlobalMaxPooling3D": "doc",
    "keras.layers.BatchNormalization": "doc",
    "keras.layers.LayerNormalization": "doc",
    "keras.layers.MultiHeadAttention": "doc",
    "keras.layers.LocallyConnected1D": "doc",
    "keras.layers.LocallyConnected2D": "doc",
    "keras.layers.GlobalAveragePooling1D": "doc",
    "keras.layers.GlobalAveragePooling2D": "doc",
    "keras.layers.GlobalAveragePooling3D": "doc",
    "keras.layers.ActivityRegularization": "doc",
    "keras.layers.Layer.trainable_weights": "doc",
    "keras.layers.Layer.non_trainable_weights": "doc",
    "keras.layers.experimental.preprocessing.Hashing": "doc",
    "keras.layers.experimental.preprocessing.Resizing": "doc",
    "keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "keras.layers.experimental.preprocessing.StringLookup": "doc",
    "keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "keras.utils.normalize": "doc",
    "keras.Model.train_on_batch": "doc",
    "keras.utils.Sequence": "doc",
    "keras.activations.softmax": "doc",
    "keras.activations.softsign": "doc",
    "keras.utils.deserialize_keras_object": "doc",
    "keras.initializers.Constant": "doc",
    "keras.initializers.RandomNormal": "doc",
    "keras.Sequential": "doc",
    "keras.Sequential.pop": "doc",
    "keras.models.save_model": "doc",
    "keras.models.load_model": "doc",
    "keras.initializers.VarianceScaling": "doc",
    "keras.Model.to_json": "doc",
    "keras.utils.Progbar": "doc",
    "keras.Model.evaluate": "doc",
    "keras.Model.get_layer": "doc",
    "keras.utils.plot_model": "doc",
    "keras.constraints.NonNeg": "doc",
    "keras.constraints.MaxNorm": "doc",
    "keras.constraints.UnitNorm": "doc",
    "keras.Model.predict_on_batch": "doc",
    "keras.models.model_from_json": "doc",
    "keras.constraints.MinMaxNorm": "doc",
    "keras.utils.get_custom_objects": "doc",
    "keras.constraints.RadialConstraint": "doc",
    "keras.activations.elu": "doc",
    "keras.activations.relu": "doc",
    "keras.activations.selu": "doc",
    "keras.models.clone_model": "doc",
    "keras.activations.sigmoid": "doc",
    "keras.activations.softplus": "doc",
    "keras.activations.exponential": "doc",
    "keras.regularizers.l1": "doc",
    "keras.regularizers.l2": "doc",
    "keras.initializers.Ones": "doc",
    "keras.Model.save_weights": "doc",
    "keras.Model.load_weights": "doc",
    "keras.initializers.Zeros": "doc",
    "keras.regularizers.l1_l2": "doc",
    "keras.initializers.Identity": "doc",
    "keras.initializers.Orthogonal": "doc",
    "keras.initializers.GlorotNormal": "doc",
    "keras.initializers.RandomUniform": "doc",
    "keras.initializers.GlorotUniform": "doc",
    "keras.initializers.TruncatedNormal": "doc",
    "keras.utils.register_keras_serializable": "doc",
    "keras.Model": "doc",
    "keras.Input": "doc",
    "keras.Model.fit": "doc",
    "keras.Model.summary": "doc",
    "keras.Model.compile": "doc",
    "keras.Model.predict": "doc",
    "keras.utils.get_file": "doc",
    "keras.Model.get_config": "doc",
    "keras.Model.run_eagerly": "doc",
    "keras.Model.get_weights": "doc",
    "keras.Model.set_weights": "doc",
    "keras.Model.from_config": "doc",
    "keras.utils.model_to_dot": "doc",
    "keras.utils.to_categorical": "doc",
    "keras.models.model_from_config": "doc",
    "keras.utils.custom_object_scope": "doc",
    "keras.utils.serialize_keras_object": "doc"
  },
  "tensorflow.keras.initializers.HeUniform": {
    "tensorflow.keras.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.he_uniform": "doc",
    "tensorflow.keras.initializers.LecunUniform": "doc",
    "tensorflow.compat.v1.keras.initializers.uniform": "doc",
    "tensorflow.keras.initializers.GlorotUniform": "doc",
    "tensorflow.keras.initializers.RandomUniform": "doc",
    "tensorflow.keras.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomUniform": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_uniform": "doc",
    "tensorflow.keras.initializers.glorot_uniform": "doc",
    "tensorflow.keras.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.keras.initializers.random_uniform": "doc",
    "tensorflow.keras.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.lecun_normal": "doc",
    "tensorflow.keras.initializers.LecunNormal": "doc",
    "tensorflow.keras.initializers.HeNormal": "doc",
    "tensorflow.keras.initializers.he_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.he_normal": "doc",
    "tensorflow.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.compat.v1.keras.initializers.TruncatedNormal": "doc",
    "tensorflow.keras.initializers.GlorotNormal": "doc",
    "tensorflow.keras.initializers.RandomNormal": "doc",
    "tensorflow.keras.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.RandomNormal": "doc",
    "tensorflow.compat.v1.keras.initializers.truncated_normal": "doc",
    "tensorflow.keras.initializers.glorot_normal": "doc",
    "tensorflow.keras.initializers.random_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.keras.initializers.random_normal": "doc",
    "tensorflow.keras.initializers.Zeros": "doc",
    "tensorflow.keras.initializers.zeros": "doc",
    "tensorflow.compat.v1.keras.initializers.Zeros": "doc",
    "tensorflow.compat.v1.keras.initializers.zeros": "doc",
    "tensorflow.compat.v1.keras.initializers.normal": "doc",
    "tensorflow.keras.initializers": "doc",
    "tensorflow.initializers.HeUniform": "doc",
    "tensorflow.keras.initializers.get": "doc",
    "tensorflow.keras.initializers.Ones": "doc",
    "tensorflow.keras.initializers.ones": "doc",
    "tensorflow.keras.initializers.Constant": "doc",
    "tensorflow.keras.initializers.Identity": "doc",
    "tensorflow.keras.initializers.constant": "doc",
    "tensorflow.keras.initializers.identity": "doc",
    "tensorflow.keras.initializers.serialize": "doc",
    "tensorflow.compat.v1.keras.initializers": "doc",
    "tensorflow.keras.initializers.Orthogonal": "doc",
    "tensorflow.keras.initializers.orthogonal": "doc",
    "tensorflow.keras.initializers.Initializer": "doc",
    "tensorflow.keras.initializers.deserialize": "doc",
    "tensorflow.compat.v1.keras.initializers.get": "doc",
    "tensorflow.compat.v1.keras.initializers.Ones": "doc",
    "tensorflow.compat.v1.keras.initializers.ones": "doc",
    "tensorflow.keras.initializers.VarianceScaling": "doc",
    "tensorflow.keras.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.keras.initializers.Constant": "doc",
    "tensorflow.compat.v1.keras.initializers.Identity": "doc",
    "tensorflow.compat.v1.keras.initializers.constant": "doc",
    "tensorflow.compat.v1.keras.initializers.identity": "doc",
    "tensorflow.compat.v1.keras.initializers.serialize": "doc",
    "tensorflow.compat.v1.keras.initializers.Orthogonal": "doc",
    "tensorflow.compat.v1.keras.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.keras.initializers.Initializer": "doc",
    "tensorflow.compat.v1.keras.initializers.deserialize": "doc",
    "tensorflow.compat.v1.keras.initializers.VarianceScaling": "doc",
    "tensorflow.initializers.he_uniform": "doc",
    "tensorflow.compat.v1.initializers.he_uniform": "doc",
    "tensorflow.keras.constraints.UnitNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.UnitNorm": "doc",
    "tensorflow.initializers.LecunUniform": "doc",
    "tensorflow.initializers.Zeros": "doc",
    "tensorflow.initializers.zeros": "doc",
    "tensorflow.compat.v1.initializers.zeros": "doc",
    "tensorflow.keras.optimizers": "doc",
    "tensorflow.keras.optimizers.SGD": "doc",
    "tensorflow.keras.optimizers.get": "doc",
    "tensorflow.keras.optimizers.Adam": "doc",
    "tensorflow.keras.optimizers.Ftrl": "doc",
    "tensorflow.keras.optimizers.Nadam": "doc",
    "tensorflow.keras.optimizers.Adamax": "doc",
    "tensorflow.keras.optimizers.Adagrad": "doc",
    "tensorflow.keras.optimizers.RMSprop": "doc",
    "tensorflow.keras.optimizers.Adadelta": "doc",
    "tensorflow.keras.optimizers.Optimizer": "doc",
    "tensorflow.keras.optimizers.schedules": "doc",
    "tensorflow.keras.optimizers.serialize": "doc",
    "tensorflow.compat.v1.keras.optimizers": "doc",
    "tensorflow.keras.optimizers.deserialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.SGD": "doc",
    "tensorflow.compat.v1.keras.optimizers.get": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adam": "doc",
    "tensorflow.compat.v1.keras.optimizers.Ftrl": "doc",
    "tensorflow.compat.v1.keras.optimizers.Nadam": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adamax": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adagrad": "doc",
    "tensorflow.compat.v1.keras.optimizers.RMSprop": "doc",
    "tensorflow.compat.v1.keras.optimizers.Adadelta": "doc",
    "tensorflow.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.Optimizer": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules": "doc",
    "tensorflow.compat.v1.keras.optimizers.serialize": "doc",
    "tensorflow.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.compat.v1.keras.optimizers.deserialize": "doc",
    "tensorflow.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.serialize": "doc",
    "tensorflow.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.deserialize": "doc",
    "tensorflow.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.compat.v1.keras.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.keras.regularizers": "doc",
    "tensorflow.keras.regularizers.L1": "doc",
    "tensorflow.keras.regularizers.L2": "doc",
    "tensorflow.keras.regularizers.l1": "doc",
    "tensorflow.keras.regularizers.l2": "doc",
    "tensorflow.keras.regularizers.get": "doc",
    "tensorflow.keras.regularizers.L1L2": "doc",
    "tensorflow.keras.regularizers.l1_l2": "doc",
    "tensorflow.keras.regularizers.serialize": "doc",
    "tensorflow.compat.v1.keras.regularizers": "doc",
    "tensorflow.keras.regularizers.Regularizer": "doc",
    "tensorflow.keras.regularizers.deserialize": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1": "doc",
    "tensorflow.compat.v1.keras.regularizers.L2": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1": "doc",
    "tensorflow.compat.v1.keras.regularizers.l2": "doc",
    "tensorflow.compat.v1.keras.regularizers.get": "doc",
    "tensorflow.compat.v1.keras.regularizers.L1L2": "doc",
    "tensorflow.compat.v1.keras.regularizers.l1_l2": "doc",
    "tensorflow.compat.v1.keras.regularizers.serialize": "doc",
    "tensorflow.compat.v1.keras.regularizers.Regularizer": "doc",
    "tensorflow.compat.v1.keras.regularizers.deserialize": "doc",
    "tensorflow.initializers.GlorotUniform": "doc",
    "tensorflow.initializers.RandomUniform": "doc",
    "tensorflow.initializers.lecun_uniform": "doc",
    "tensorflow.compat.v1.initializers.lecun_uniform": "doc",
    "tensorflow.keras.metrics.serialize": "doc",
    "tensorflow.compat.v1.keras.metrics.serialize": "doc",
    "tensorflow.initializers.HeNormal": "doc",
    "tensorflow.keras.utils.normalize": "doc",
    "tensorflow.keras.layers.serialize": "doc",
    "tensorflow.keras.losses.serialize": "doc",
    "tensorflow.keras.activations.serialize": "doc",
    "tensorflow.keras.constraints.serialize": "doc",
    "tensorflow.compat.v1.keras.utils.normalize": "doc",
    "tensorflow.compat.v1.keras.layers.serialize": "doc",
    "tensorflow.compat.v1.keras.losses.serialize": "doc",
    "tensorflow.compat.v1.keras.activations.serialize": "doc",
    "tensorflow.compat.v1.keras.constraints.serialize": "doc",
    "tensorflow.keras.layers.Minimum": "doc",
    "tensorflow.keras.layers.minimum": "doc",
    "tensorflow.initializers.he_normal": "doc",
    "tensorflow.keras.constraints.MaxNorm": "doc",
    "tensorflow.keras.constraints.max_norm": "doc",
    "tensorflow.keras.constraints.unit_norm": "doc",
    "tensorflow.compat.v1.keras.layers.Minimum": "doc",
    "tensorflow.compat.v1.keras.layers.minimum": "doc",
    "tensorflow.compat.v1.initializers.he_normal": "doc",
    "tensorflow.compat.v1.keras.constraints.MaxNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.max_norm": "doc",
    "tensorflow.compat.v1.keras.constraints.unit_norm": "doc",
    "tensorflow.initializers.lecun_normal": "doc",
    "tensorflow.compat.v1.initializers.lecun_normal": "doc",
    "tensorflow.keras.metrics.deserialize": "doc",
    "tensorflow.compat.v1.keras.metrics.deserialize": "doc",
    "tensorflow.initializers.LecunNormal": "doc",
    "tensorflow.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.compat.v1.keras.constraints.MinMaxNorm": "doc",
    "tensorflow.initializers.glorot_uniform": "doc",
    "tensorflow.initializers.random_uniform": "doc",
    "tensorflow.compat.v1.initializers.glorot_uniform": "doc",
    "tensorflow.compat.v1.initializers.random_uniform": "doc",
    "tensorflow.keras.layers.deserialize": "doc",
    "tensorflow.keras.losses.deserialize": "doc",
    "tensorflow.keras.activations.deserialize": "doc",
    "tensorflow.keras.constraints.deserialize": "doc",
    "tensorflow.compat.v1.keras.layers.deserialize": "doc",
    "tensorflow.compat.v1.keras.losses.deserialize": "doc",
    "tensorflow.compat.v1.keras.activations.deserialize": "doc",
    "tensorflow.compat.v1.keras.constraints.deserialize": "doc",
    "tensorflow.keras.metrics.MeanIoU": "doc",
    "tensorflow.keras.constraints.min_max_norm": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanIoU": "doc",
    "tensorflow.compat.v1.keras.constraints.min_max_norm": "doc",
    "tensorflow.keras.layers.Dense": "doc",
    "tensorflow.keras.datasets.mnist": "doc",
    "tensorflow.keras.layers.Maximum": "doc",
    "tensorflow.keras.layers.maximum": "doc",
    "tensorflow.keras.utils.get_file": "doc",
    "tensorflow.keras.datasets.cifar10": "doc",
    "tensorflow.keras.datasets.reuters": "doc",
    "tensorflow.keras.activations.linear": "doc",
    "tensorflow.compat.v1.keras.layers.Dense": "doc",
    "tensorflow.keras.datasets.mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist": "doc",
    "tensorflow.compat.v1.keras.layers.Maximum": "doc",
    "tensorflow.compat.v1.keras.layers.maximum": "doc",
    "tensorflow.compat.v1.keras.utils.get_file": "doc",
    "tensorflow.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.keras.datasets.reuters.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters": "doc",
    "tensorflow.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.compat.v1.keras.activations.linear": "doc",
    "tensorflow.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.compat.v1.keras.datasets.mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar10.load_data": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.load_data": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.Tokenizer": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.compat.v1.keras.datasets.reuters.get_word_index": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Hashing": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Resizing": "doc",
    "tensorflow.keras.metrics.MeanTensor": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanTensor": "doc",
    "tensorflow.keras.utils.get_registered_name": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_name": "doc",
    "tensorflow.keras.utils": "doc",
    "tensorflow.keras.layers": "doc",
    "tensorflow.keras.datasets": "doc",
    "tensorflow.keras.wrappers": "doc",
    "tensorflow.keras.layers.Add": "doc",
    "tensorflow.keras.layers.Dot": "doc",
    "tensorflow.keras.layers.ELU": "doc",
    "tensorflow.keras.layers.GRU": "doc",
    "tensorflow.keras.layers.RNN": "doc",
    "tensorflow.keras.layers.add": "doc",
    "tensorflow.keras.layers.dot": "doc",
    "tensorflow.keras.activations": "doc",
    "tensorflow.keras.constraints": "doc",
    "tensorflow.keras.layers.LSTM": "doc",
    "tensorflow.keras.layers.ReLU": "doc",
    "tensorflow.keras.layers.Input": "doc",
    "tensorflow.keras.layers.Layer": "doc",
    "tensorflow.keras.layers.PReLU": "doc",
    "tensorflow.keras.datasets.imdb": "doc",
    "tensorflow.keras.layers.Conv1D": "doc",
    "tensorflow.keras.layers.Conv2D": "doc",
    "tensorflow.keras.layers.Conv3D": "doc",
    "tensorflow.keras.layers.Lambda": "doc",
    "tensorflow.keras.utils.Progbar": "doc",
    "tensorflow.keras.layers.Average": "doc",
    "tensorflow.keras.layers.Dropout": "doc",
    "tensorflow.keras.layers.Flatten": "doc",
    "tensorflow.keras.layers.GRUCell": "doc",
    "tensorflow.keras.layers.Masking": "doc",
    "tensorflow.keras.layers.Permute": "doc",
    "tensorflow.keras.layers.Reshape": "doc",
    "tensorflow.keras.layers.Softmax": "doc",
    "tensorflow.keras.layers.Wrapper": "doc",
    "tensorflow.keras.layers.average": "doc",
    "tensorflow.keras.utils.Sequence": "doc",
    "tensorflow.keras.activations.elu": "doc",
    "tensorflow.keras.activations.get": "doc",
    "tensorflow.keras.constraints.get": "doc",
    "tensorflow.keras.layers.LSTMCell": "doc",
    "tensorflow.keras.layers.Multiply": "doc",
    "tensorflow.keras.layers.Subtract": "doc",
    "tensorflow.keras.layers.multiply": "doc",
    "tensorflow.keras.layers.subtract": "doc",
    "tensorflow.compat.v1.keras.utils": "doc",
    "tensorflow.initializers.serialize": "doc",
    "tensorflow.keras.activations.gelu": "doc",
    "tensorflow.keras.activations.relu": "doc",
    "tensorflow.keras.activations.selu": "doc",
    "tensorflow.keras.activations.tanh": "doc",
    "tensorflow.keras.layers.Attention": "doc",
    "tensorflow.keras.layers.AvgPool1D": "doc",
    "tensorflow.keras.layers.AvgPool2D": "doc",
    "tensorflow.keras.layers.AvgPool3D": "doc",
    "tensorflow.keras.layers.Embedding": "doc",
    "tensorflow.keras.layers.InputSpec": "doc",
    "tensorflow.keras.layers.LeakyReLU": "doc",
    "tensorflow.keras.layers.MaxPool1D": "doc",
    "tensorflow.keras.layers.MaxPool2D": "doc",
    "tensorflow.keras.layers.MaxPool3D": "doc",
    "tensorflow.keras.layers.SimpleRNN": "doc",
    "tensorflow.keras.utils.plot_model": "doc",
    "tensorflow.compat.v1.keras.layers": "doc",
    "tensorflow.keras.activations.swish": "doc",
    "tensorflow.keras.datasets.cifar100": "doc",
    "tensorflow.keras.layers.Activation": "doc",
    "tensorflow.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.keras.layers.Cropping1D": "doc",
    "tensorflow.keras.layers.Cropping2D": "doc",
    "tensorflow.keras.layers.Cropping3D": "doc",
    "tensorflow.keras.layers.InputLayer": "doc",
    "tensorflow.keras.constraints.NonNeg": "doc",
    "tensorflow.keras.layers.Concatenate": "doc",
    "tensorflow.keras.layers.concatenate": "doc",
    "tensorflow.keras.utils.model_to_dot": "doc",
    "tensorflow.compat.v1.keras.datasets": "doc",
    "tensorflow.compat.v1.keras.wrappers": "doc",
    "tensorflow.keras.activations.sigmoid": "doc",
    "tensorflow.keras.activations.softmax": "doc",
    "tensorflow.keras.constraints.non_neg": "doc",
    "tensorflow.keras.layers.AlphaDropout": "doc",
    "tensorflow.keras.layers.MaxPooling1D": "doc",
    "tensorflow.keras.layers.MaxPooling2D": "doc",
    "tensorflow.keras.layers.MaxPooling3D": "doc",
    "tensorflow.keras.layers.RepeatVector": "doc",
    "tensorflow.keras.layers.UpSampling1D": "doc",
    "tensorflow.keras.layers.UpSampling2D": "doc",
    "tensorflow.keras.layers.UpSampling3D": "doc",
    "tensorflow.keras.layers.experimental": "doc",
    "tensorflow.keras.activations.softplus": "doc",
    "tensorflow.keras.activations.softsign": "doc",
    "tensorflow.keras.layers.Bidirectional": "doc",
    "tensorflow.keras.layers.Convolution1D": "doc",
    "tensorflow.keras.layers.Convolution2D": "doc",
    "tensorflow.keras.layers.Convolution3D": "doc",
    "tensorflow.keras.layers.DenseFeatures": "doc",
    "tensorflow.keras.layers.GaussianNoise": "doc",
    "tensorflow.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.keras.utils.to_categorical": "doc",
    "tensorflow.compat.v1.keras.layers.Add": "doc",
    "tensorflow.compat.v1.keras.layers.Dot": "doc",
    "tensorflow.compat.v1.keras.layers.ELU": "doc",
    "tensorflow.compat.v1.keras.layers.GRU": "doc",
    "tensorflow.compat.v1.keras.layers.RNN": "doc",
    "tensorflow.compat.v1.keras.layers.add": "doc",
    "tensorflow.compat.v1.keras.layers.dot": "doc",
    "tensorflow.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.keras.wrappers.scikit_learn": "doc",
    "tensorflow.compat.v1.keras.activations": "doc",
    "tensorflow.compat.v1.keras.constraints": "doc",
    "tensorflow.compat.v1.keras.layers.LSTM": "doc",
    "tensorflow.compat.v1.keras.layers.ReLU": "doc",
    "tensorflow.keras.constraints.Constraint": "doc",
    "tensorflow.keras.datasets.fashion_mnist": "doc",
    "tensorflow.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.keras.layers.GaussianDropout": "doc",
    "tensorflow.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.keras.layers.SeparableConv1D": "doc",
    "tensorflow.keras.layers.SeparableConv2D": "doc",
    "tensorflow.keras.layers.StackedRNNCells": "doc",
    "tensorflow.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.keras.layers.TimeDistributed": "doc",
    "tensorflow.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.compat.v1.keras.layers.Input": "doc",
    "tensorflow.compat.v1.keras.layers.Layer": "doc",
    "tensorflow.compat.v1.keras.layers.PReLU": "doc",
    "tensorflow.keras.activations.exponential": "doc",
    "tensorflow.keras.datasets.boston_housing": "doc",
    "tensorflow.keras.datasets.imdb.load_data": "doc",
    "tensorflow.keras.layers.AveragePooling1D": "doc",
    "tensorflow.keras.layers.AveragePooling2D": "doc",
    "tensorflow.keras.layers.AveragePooling3D": "doc",
    "tensorflow.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.keras.utils.CustomObjectScope": "doc",
    "tensorflow.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.keras.utils.get_source_inputs": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2D": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3D": "doc",
    "tensorflow.compat.v1.keras.layers.Lambda": "doc",
    "tensorflow.compat.v1.keras.utils.Progbar": "doc",
    "tensorflow.keras.activations.hard_sigmoid": "doc",
    "tensorflow.keras.layers.AdditiveAttention": "doc",
    "tensorflow.keras.utils.get_custom_objects": "doc",
    "tensorflow.compat.v1.keras.layers.Average": "doc",
    "tensorflow.compat.v1.keras.layers.Dropout": "doc",
    "tensorflow.compat.v1.keras.layers.Flatten": "doc",
    "tensorflow.compat.v1.keras.layers.GRUCell": "doc",
    "tensorflow.compat.v1.keras.layers.Masking": "doc",
    "tensorflow.compat.v1.keras.layers.Permute": "doc",
    "tensorflow.compat.v1.keras.layers.Reshape": "doc",
    "tensorflow.compat.v1.keras.layers.Softmax": "doc",
    "tensorflow.compat.v1.keras.layers.Wrapper": "doc",
    "tensorflow.compat.v1.keras.layers.average": "doc",
    "tensorflow.compat.v1.keras.utils.Sequence": "doc",
    "tensorflow.keras.layers.BatchNormalization": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.keras.layers.LayerNormalization": "doc",
    "tensorflow.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.keras.utils.custom_object_scope": "doc",
    "tensorflow.compat.v1.keras.activations.elu": "doc",
    "tensorflow.compat.v1.keras.activations.get": "doc",
    "tensorflow.compat.v1.keras.constraints.get": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNGRU": "doc",
    "tensorflow.compat.v1.keras.layers.LSTMCell": "doc",
    "tensorflow.compat.v1.keras.layers.Multiply": "doc",
    "tensorflow.compat.v1.keras.layers.Subtract": "doc",
    "tensorflow.compat.v1.keras.layers.multiply": "doc",
    "tensorflow.compat.v1.keras.layers.subtract": "doc",
    "tensorflow.compat.v1.initializers.variables": "doc",
    "tensorflow.compat.v1.keras.activations.relu": "doc",
    "tensorflow.compat.v1.keras.activations.selu": "doc",
    "tensorflow.compat.v1.keras.activations.tanh": "doc",
    "tensorflow.compat.v1.keras.layers.Attention": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.AvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.CuDNNLSTM": "doc",
    "tensorflow.compat.v1.keras.layers.Embedding": "doc",
    "tensorflow.compat.v1.keras.layers.InputSpec": "doc",
    "tensorflow.compat.v1.keras.layers.LeakyReLU": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNN": "doc",
    "tensorflow.compat.v1.keras.utils.plot_model": "doc",
    "tensorflow.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.keras.utils.get_registered_object": "doc",
    "tensorflow.compat.v1.keras.activations.swish": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100": "doc",
    "tensorflow.compat.v1.keras.layers.Activation": "doc",
    "tensorflow.compat.v1.keras.layers.ConvLSTM2D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping1D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping2D": "doc",
    "tensorflow.compat.v1.keras.layers.Cropping3D": "doc",
    "tensorflow.compat.v1.keras.layers.InputLayer": "doc",
    "tensorflow.keras.constraints.RadialConstraint": "doc",
    "tensorflow.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.keras.utils.pack_x_y_sample_weight": "doc",
    "tensorflow.keras.utils.serialize_keras_object": "doc",
    "tensorflow.compat.v1.keras.constraints.NonNeg": "doc",
    "tensorflow.compat.v1.keras.layers.Concatenate": "doc",
    "tensorflow.compat.v1.keras.layers.concatenate": "doc",
    "tensorflow.compat.v1.keras.utils.model_to_dot": "doc",
    "tensorflow.keras.constraints.radial_constraint": "doc",
    "tensorflow.keras.layers.ActivityRegularization": "doc",
    "tensorflow.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.compat.v1.keras.activations.sigmoid": "doc",
    "tensorflow.compat.v1.keras.activations.softmax": "doc",
    "tensorflow.compat.v1.keras.constraints.non_neg": "doc",
    "tensorflow.compat.v1.keras.layers.AlphaDropout": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.RepeatVector": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling1D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling2D": "doc",
    "tensorflow.compat.v1.keras.layers.UpSampling3D": "doc",
    "tensorflow.compat.v1.keras.layers.experimental": "doc",
    "tensorflow.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.keras.utils.unpack_x_y_sample_weight": "doc",
    "tensorflow.compat.v1.keras.activations.softplus": "doc",
    "tensorflow.compat.v1.keras.activations.softsign": "doc",
    "tensorflow.compat.v1.keras.layers.Bidirectional": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2D": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3D": "doc",
    "tensorflow.compat.v1.keras.layers.DenseFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianNoise": "doc",
    "tensorflow.compat.v1.keras.layers.SimpleRNNCell": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding1D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding2D": "doc",
    "tensorflow.compat.v1.keras.layers.ZeroPadding3D": "doc",
    "tensorflow.compat.v1.keras.utils.to_categorical": "doc",
    "tensorflow.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.compat.v1.keras.utils.OrderedEnqueuer": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn": "doc",
    "tensorflow.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.constraints.Constraint": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist": "doc",
    "tensorflow.compat.v1.keras.layers.AbstractRNNCell": "doc",
    "tensorflow.compat.v1.keras.layers.Conv1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.DepthwiseConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.GaussianDropout": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAvgPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPool3D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.keras.layers.StackedRNNCells": "doc",
    "tensorflow.compat.v1.keras.layers.ThresholdedReLU": "doc",
    "tensorflow.compat.v1.keras.layers.TimeDistributed": "doc",
    "tensorflow.compat.v1.keras.utils.SequenceEnqueuer": "doc",
    "tensorflow.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.keras.utils.register_keras_serializable": "doc",
    "tensorflow.compat.v1.keras.activations.exponential": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.load_data": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.AveragePooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout1D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout2D": "doc",
    "tensorflow.compat.v1.keras.layers.SpatialDropout3D": "doc",
    "tensorflow.compat.v1.keras.utils.CustomObjectScope": "doc",
    "tensorflow.compat.v1.keras.utils.GeneratorEnqueuer": "doc",
    "tensorflow.compat.v1.keras.utils.get_source_inputs": "doc",
    "tensorflow.compat.v1.keras.activations.hard_sigmoid": "doc",
    "tensorflow.compat.v1.keras.layers.AdditiveAttention": "doc",
    "tensorflow.compat.v1.keras.utils.get_custom_objects": "doc",
    "tensorflow.compat.v1.keras.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalMaxPooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.LayerNormalization": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected1D": "doc",
    "tensorflow.compat.v1.keras.layers.LocallyConnected2D": "doc",
    "tensorflow.compat.v1.keras.layers.MultiHeadAttention": "doc",
    "tensorflow.compat.v1.keras.utils.custom_object_scope": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.compat.v1.keras.datasets.cifar100.load_data": "doc",
    "tensorflow.compat.v1.keras.utils.get_registered_object": "doc",
    "tensorflow.compat.v1.keras.constraints.RadialConstraint": "doc",
    "tensorflow.compat.v1.keras.datasets.imdb.get_word_index": "doc",
    "tensorflow.compat.v1.keras.utils.serialize_keras_object": "doc",
    "tensorflow.compat.v1.keras.constraints.radial_constraint": "doc",
    "tensorflow.compat.v1.keras.layers.ActivityRegularization": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution1DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution2DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.Convolution3DTranspose": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling1D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling2D": "doc",
    "tensorflow.compat.v1.keras.layers.GlobalAveragePooling3D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution1D": "doc",
    "tensorflow.compat.v1.keras.layers.SeparableConvolution2D": "doc",
    "tensorflow.compat.v1.keras.utils.deserialize_keras_object": "doc",
    "tensorflow.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.compat.v1.keras.layers.enable_v2_dtype_behavior": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.EinsumDense": "doc",
    "tensorflow.keras.layers.experimental.SyncBatchNormalization": "doc",
    "tensorflow.compat.v1.keras.datasets.fashion_mnist.load_data": "doc",
    "tensorflow.compat.v1.keras.layers.disable_v2_dtype_behavior": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.compat.v1.keras.datasets.boston_housing.load_data": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing": "doc",
    "tensorflow.compat.v1.keras.utils.register_keras_serializable": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasRegressor": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.compat.v1.keras.wrappers.scikit_learn.KerasClassifier": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.RandomFourierFeatures": "doc",
    "tensorflow.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Rescaling": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.StringLookup": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Normalization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.Discretization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomContrast": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "tensorflow.compat.v1.keras.layers.experimental.preprocessing.PreprocessingLayer": "doc",
    "tensorflow.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanRelativeError": "doc",
    "tensorflow.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_affine_transform": "doc",
    "tensorflow.keras.backend.epsilon": "doc",
    "tensorflow.keras.callbacks.History": "doc",
    "tensorflow.compat.v1.keras.backend.epsilon": "doc",
    "tensorflow.compat.v1.keras.callbacks.History": "doc",
    "tensorflow.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsoluteError": "doc",
    "tensorflow.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.LossScaleOptimizer": "doc",
    "tensorflow.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental.LossScaleOptimizer": "doc",
    "tensorflow.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.compat.v1.keras.callbacks.RemoteMonitor": "doc",
    "tensorflow.initializers.deserialize": "doc",
    "tensorflow.keras.metrics": "doc",
    "tensorflow.keras.estimator": "doc",
    "tensorflow.keras.metrics.AUC": "doc",
    "tensorflow.keras.metrics.KLD": "doc",
    "tensorflow.keras.metrics.MAE": "doc",
    "tensorflow.keras.metrics.MSE": "doc",
    "tensorflow.keras.metrics.Sum": "doc",
    "tensorflow.keras.metrics.get": "doc",
    "tensorflow.keras.metrics.kld": "doc",
    "tensorflow.keras.metrics.mae": "doc",
    "tensorflow.keras.metrics.mse": "doc",
    "tensorflow.keras.metrics.MAPE": "doc",
    "tensorflow.keras.metrics.MSLE": "doc",
    "tensorflow.keras.metrics.Mean": "doc",
    "tensorflow.keras.metrics.mape": "doc",
    "tensorflow.keras.metrics.msle": "doc",
    "tensorflow.keras.metrics.Hinge": "doc",
    "tensorflow.keras.metrics.hinge": "doc",
    "tensorflow.keras.metrics.Metric": "doc",
    "tensorflow.keras.metrics.Recall": "doc",
    "tensorflow.keras.metrics.Poisson": "doc",
    "tensorflow.keras.metrics.logcosh": "doc",
    "tensorflow.keras.metrics.poisson": "doc",
    "tensorflow.keras.metrics.Accuracy": "doc",
    "tensorflow.keras.metrics.log_cosh": "doc",
    "tensorflow.keras.metrics.Precision": "doc",
    "tensorflow.compat.v1.keras.metrics": "doc",
    "tensorflow.keras.applications.resnet": "doc",
    "tensorflow.compat.v1.keras.estimator": "doc",
    "tensorflow.keras.metrics.KLDivergence": "doc",
    "tensorflow.keras.metrics.LogCoshError": "doc",
    "tensorflow.keras.metrics.SquaredHinge": "doc",
    "tensorflow.keras.applications.Xception": "doc",
    "tensorflow.keras.applications.densenet": "doc",
    "tensorflow.keras.applications.resnet50": "doc",
    "tensorflow.keras.applications.xception": "doc",
    "tensorflow.keras.metrics.TrueNegatives": "doc",
    "tensorflow.keras.metrics.TruePositives": "doc",
    "tensorflow.keras.metrics.kl_divergence": "doc",
    "tensorflow.keras.metrics.squared_hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.AUC": "doc",
    "tensorflow.compat.v1.keras.metrics.KLD": "doc",
    "tensorflow.compat.v1.keras.metrics.MAE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSE": "doc",
    "tensorflow.compat.v1.keras.metrics.Sum": "doc",
    "tensorflow.compat.v1.keras.metrics.get": "doc",
    "tensorflow.compat.v1.keras.metrics.kld": "doc",
    "tensorflow.compat.v1.keras.metrics.mae": "doc",
    "tensorflow.compat.v1.keras.metrics.mse": "doc",
    "tensorflow.keras.applications.resnet_v2": "doc",
    "tensorflow.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.keras.metrics.FalseNegatives": "doc",
    "tensorflow.keras.metrics.FalsePositives": "doc",
    "tensorflow.compat.v1.keras.metrics.MAPE": "doc",
    "tensorflow.compat.v1.keras.metrics.MSLE": "doc",
    "tensorflow.compat.v1.keras.metrics.Mean": "doc",
    "tensorflow.compat.v1.keras.metrics.mape": "doc",
    "tensorflow.compat.v1.keras.metrics.msle": "doc",
    "tensorflow.keras.metrics.binary_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.Hinge": "doc",
    "tensorflow.compat.v1.keras.metrics.hinge": "doc",
    "tensorflow.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.metrics.Metric": "doc",
    "tensorflow.compat.v1.keras.metrics.Recall": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine": "doc",
    "tensorflow.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.compat.v1.keras.metrics.Poisson": "doc",
    "tensorflow.compat.v1.keras.metrics.logcosh": "doc",
    "tensorflow.compat.v1.keras.metrics.poisson": "doc",
    "tensorflow.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.keras.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.keras.metrics.Accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.log_cosh": "doc",
    "tensorflow.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.keras.metrics.Precision": "doc",
    "tensorflow.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.keras.estimator.model_to_estimator": "doc",
    "tensorflow.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.compat.v1.keras.applications.resnet": "doc",
    "tensorflow.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.keras.applications.xception.Xception": "doc",
    "tensorflow.compat.v1.keras.metrics.KLDivergence": "doc",
    "tensorflow.compat.v1.keras.metrics.LogCoshError": "doc",
    "tensorflow.compat.v1.keras.metrics.SquaredHinge": "doc",
    "tensorflow.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.applications.Xception": "doc",
    "tensorflow.compat.v1.keras.applications.densenet": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50": "doc",
    "tensorflow.compat.v1.keras.applications.xception": "doc",
    "tensorflow.compat.v1.keras.metrics.TrueNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.TruePositives": "doc",
    "tensorflow.compat.v1.keras.metrics.kl_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.squared_hinge": "doc",
    "tensorflow.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.FalseNegatives": "doc",
    "tensorflow.compat.v1.keras.metrics.FalsePositives": "doc",
    "tensorflow.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_accuracy": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalHinge": "doc",
    "tensorflow.compat.v1.keras.metrics.CosineSimilarity": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.metrics.cosine_proximity": "doc",
    "tensorflow.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.PrecisionAtRecall": "doc",
    "tensorflow.compat.v1.keras.metrics.RecallAtPrecision": "doc",
    "tensorflow.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.metrics.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_error": "doc",
    "tensorflow.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_error": "doc",
    "tensorflow.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet50": "doc",
    "tensorflow.compat.v1.keras.estimator.model_to_estimator": "doc",
    "tensorflow.compat.v1.keras.metrics.RootMeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.Iterator": "doc",
    "tensorflow.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.ResNet152": "doc",
    "tensorflow.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.ResNet50": "doc",
    "tensorflow.compat.v1.keras.applications.xception.Xception": "doc",
    "tensorflow.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.compat.v1.keras.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.compat.v1.keras.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet50V2": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.ResNet152V2": "doc",
    "tensorflow.compat.v1.keras.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.keras.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.resnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.xception.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.applications.densenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet50.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.xception.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.keras.backend.image_data_format": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsoluteError": "doc",
    "tensorflow.compat.v1.keras.backend.image_data_format": "doc",
    "tensorflow.initializers.TruncatedNormal": "doc",
    "tensorflow.keras.backend.is_keras_tensor": "doc",
    "tensorflow.compat.v1.keras.backend.is_keras_tensor": "doc",
    "tensorflow.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecayRestarts": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.InceptionResNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.inception_resnet_v2.decode_predictions": "doc",
    "tensorflow.keras.backend.set_image_data_format": "doc",
    "tensorflow.compat.v1.keras.backend.set_image_data_format": "doc",
    "tensorflow.keras.applications": "doc",
    "tensorflow.keras.applications.VGG16": "doc",
    "tensorflow.keras.applications.VGG19": "doc",
    "tensorflow.keras.applications.vgg16": "doc",
    "tensorflow.keras.applications.vgg19": "doc",
    "tensorflow.initializers.GlorotNormal": "doc",
    "tensorflow.initializers.RandomNormal": "doc",
    "tensorflow.keras.applications.nasnet": "doc",
    "tensorflow.keras.preprocessing.image": "doc",
    "tensorflow.keras.applications.ResNet50": "doc",
    "tensorflow.keras.applications.MobileNet": "doc",
    "tensorflow.keras.applications.ResNet101": "doc",
    "tensorflow.keras.applications.ResNet152": "doc",
    "tensorflow.keras.applications.mobilenet": "doc",
    "tensorflow.compat.v1.keras.applications": "doc",
    "tensorflow.initializers.truncated_normal": "doc",
    "tensorflow.keras.applications.ResNet50V2": "doc",
    "tensorflow.keras.losses.CosineSimilarity": "doc",
    "tensorflow.keras.applications.DenseNet121": "doc",
    "tensorflow.keras.applications.DenseNet169": "doc",
    "tensorflow.keras.applications.DenseNet201": "doc",
    "tensorflow.keras.applications.InceptionV3": "doc",
    "tensorflow.keras.applications.MobileNetV2": "doc",
    "tensorflow.keras.applications.NASNetLarge": "doc",
    "tensorflow.keras.applications.ResNet101V2": "doc",
    "tensorflow.keras.applications.ResNet152V2": "doc",
    "tensorflow.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.keras.applications.NASNetMobile": "doc",
    "tensorflow.keras.applications.efficientnet": "doc",
    "tensorflow.keras.applications.inception_v3": "doc",
    "tensorflow.keras.applications.mobilenet_v2": "doc",
    "tensorflow.keras.applications.mobilenet_v3": "doc",
    "tensorflow.keras.applications.EfficientNetB0": "doc",
    "tensorflow.keras.applications.EfficientNetB1": "doc",
    "tensorflow.keras.applications.EfficientNetB2": "doc",
    "tensorflow.keras.applications.EfficientNetB3": "doc",
    "tensorflow.keras.applications.EfficientNetB4": "doc",
    "tensorflow.keras.applications.EfficientNetB5": "doc",
    "tensorflow.keras.applications.EfficientNetB6": "doc",
    "tensorflow.keras.applications.EfficientNetB7": "doc",
    "tensorflow.keras.applications.imagenet_utils": "doc",
    "tensorflow.keras.preprocessing.image.load_img": "doc",
    "tensorflow.keras.preprocessing.image.save_img": "doc",
    "tensorflow.compat.v1.keras.applications.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.VGG19": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19": "doc",
    "tensorflow.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image": "doc",
    "tensorflow.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50": "doc",
    "tensorflow.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.keras.preprocessing.image.smart_resize": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNet": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet": "doc",
    "tensorflow.compat.v1.initializers.truncated_normal": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet50V2": "doc",
    "tensorflow.compat.v1.keras.losses.CosineSimilarity": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet121": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet169": "doc",
    "tensorflow.compat.v1.keras.applications.DenseNet201": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetLarge": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet101V2": "doc",
    "tensorflow.compat.v1.keras.applications.ResNet152V2": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.VGG16": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.VGG19": "doc",
    "tensorflow.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.compat.v1.keras.applications.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3": "doc",
    "tensorflow.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils": "doc",
    "tensorflow.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.load_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.save_img": "doc",
    "tensorflow.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Large": "doc",
    "tensorflow.compat.v1.keras.applications.MobileNetV3Small": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.compat.v1.keras.applications.InceptionResNetV2": "doc",
    "tensorflow.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetLarge": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_zoom": "doc",
    "tensorflow.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.MobileNet": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.NASNetMobile": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.array_to_img": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.img_to_array": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shear": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_shift": "doc",
    "tensorflow.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_rotation": "doc",
    "tensorflow.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.InceptionV3": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.MobileNetV2": "doc",
    "tensorflow.compat.v1.keras.applications.vgg16.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.vgg19.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.DirectoryIterator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_brightness": "doc",
    "tensorflow.compat.v1.keras.applications.nasnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.ImageDataGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.NumpyArrayIterator": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_channel_shift": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB0": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB1": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB2": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB3": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB4": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB5": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB6": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.EfficientNetB7": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.random_channel_shift": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.preprocessing.image.apply_brightness_shift": "doc",
    "tensorflow.compat.v1.keras.applications.efficientnet.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.preprocess_input": "doc",
    "tensorflow.compat.v1.keras.applications.inception_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v2.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.mobilenet_v3.decode_predictions": "doc",
    "tensorflow.compat.v1.keras.applications.imagenet_utils.decode_predictions": "doc",
    "tensorflow.keras.callbacks.TensorBoard": "doc",
    "tensorflow.compat.v1.keras.callbacks.TensorBoard": "doc",
    "tensorflow.keras.losses.cosine_similarity": "doc",
    "tensorflow.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_similarity": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearCosineDecay": "doc",
    "tensorflow.initializers.glorot_normal": "doc",
    "tensorflow.initializers.random_normal": "doc",
    "tensorflow.compat.v1.initializers.glorot_normal": "doc",
    "tensorflow.compat.v1.initializers.random_normal": "doc",
    "tensorflow.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.tokenizer_from_json": "doc",
    "tensorflow.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.compat.v1.keras.experimental.NoisyLinearCosineDecay": "doc",
    "tensorflow.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.keras.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.keras.losses.BinaryCrossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_error": "doc",
    "tensorflow.keras.losses.mean_absolute_error": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_error": "doc",
    "tensorflow.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalCrossentropy": "doc",
    "tensorflow.keras.losses.binary_crossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.binary_crossentropy": "doc",
    "tensorflow.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.TimeseriesGenerator": "doc",
    "tensorflow.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_crossentropy": "doc",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.initializers": "doc",
    "tensorflow.initializers.get": "doc",
    "tensorflow.initializers.Ones": "doc",
    "tensorflow.initializers.ones": "doc",
    "tensorflow.initializers.Constant": "doc",
    "tensorflow.initializers.Identity": "doc",
    "tensorflow.initializers.constant": "doc",
    "tensorflow.initializers.identity": "doc",
    "tensorflow.compat.v1.initializers": "doc",
    "tensorflow.initializers.Orthogonal": "doc",
    "tensorflow.initializers.orthogonal": "doc",
    "tensorflow.initializers.Initializer": "doc",
    "tensorflow.compat.v1.initializers.ones": "doc",
    "tensorflow.initializers.VarianceScaling": "doc",
    "tensorflow.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.initializers.constant": "doc",
    "tensorflow.compat.v1.initializers.identity": "doc",
    "tensorflow.compat.v1.initializers.orthogonal": "doc",
    "tensorflow.compat.v1.initializers.local_variables": "doc",
    "tensorflow.compat.v1.initializers.global_variables": "doc",
    "tensorflow.compat.v1.initializers.variance_scaling": "doc",
    "tensorflow.compat.v1.initializers.tables_initializer": "doc",
    "tensorflow.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.initializers.uniform_unit_scaling": "doc",
    "tensorflow.compat.v1.keras.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.keras.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.compat.v1.keras.callbacks.LearningRateScheduler": "doc",
    "tensorflow.keras.losses.Hinge": "doc",
    "tensorflow.keras.losses.Huber": "doc",
    "tensorflow.compat.v1.keras.losses.Hinge": "doc",
    "tensorflow.compat.v1.keras.losses.Huber": "doc",
    "tensorflow.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.one_hot": "doc",
    "tensorflow.keras.losses.CategoricalHinge": "doc",
    "tensorflow.keras.losses.MeanSquaredError": "doc",
    "tensorflow.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.compat.v1.keras.losses.CategoricalHinge": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredError": "doc",
    "tensorflow.compat.v1.keras.losses.cosine_proximity": "doc",
    "tensorflow.compat.v1.keras.experimental.SequenceFeatures": "doc",
    "tensorflow.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.keras.preprocessing.text_dataset_from_directory": "doc",
    "tensorflow.compat.v1.keras.losses.kullback_leibler_divergence": "doc",
    "tensorflow.keras.preprocessing.image_dataset_from_directory": "doc",
    "tensorflow.keras.losses.categorical_hinge": "doc",
    "tensorflow.compat.v1.keras.losses.categorical_hinge": "doc",
    "tensorflow.keras.preprocessing.timeseries_dataset_from_array": "doc",
    "tensorflow.keras": "doc",
    "tensorflow.keras.Input": "doc",
    "tensorflow.keras.Model": "doc",
    "tensorflow.keras.losses": "doc",
    "tensorflow.keras.models": "doc",
    "tensorflow.keras.backend": "doc",
    "tensorflow.keras.callbacks": "doc",
    "tensorflow.compat.v1.keras": "doc",
    "tensorflow.keras.Sequential": "doc",
    "tensorflow.keras.losses.KLD": "doc",
    "tensorflow.keras.losses.MAE": "doc",
    "tensorflow.keras.losses.MSE": "doc",
    "tensorflow.keras.losses.get": "doc",
    "tensorflow.keras.losses.kld": "doc",
    "tensorflow.keras.losses.mae": "doc",
    "tensorflow.keras.losses.mse": "doc",
    "tensorflow.keras.backend.rnn": "doc",
    "tensorflow.keras.losses.Loss": "doc",
    "tensorflow.keras.losses.MAPE": "doc",
    "tensorflow.keras.losses.MSLE": "doc",
    "tensorflow.keras.losses.mape": "doc",
    "tensorflow.keras.losses.msle": "doc",
    "tensorflow.keras.experimental": "doc",
    "tensorflow.keras.losses.hinge": "doc",
    "tensorflow.keras.losses.huber": "doc",
    "tensorflow.keras.models.Model": "doc",
    "tensorflow.keras.preprocessing": "doc",
    "tensorflow.keras.backend.floatx": "doc",
    "tensorflow.keras.losses.LogCosh": "doc",
    "tensorflow.keras.losses.Poisson": "doc",
    "tensorflow.keras.losses.logcosh": "doc",
    "tensorflow.keras.losses.poisson": "doc",
    "tensorflow.keras.backend.get_uid": "doc",
    "tensorflow.keras.losses.log_cosh": "doc",
    "tensorflow.keras.mixed_precision": "doc",
    "tensorflow.compat.v1.keras.Input": "doc",
    "tensorflow.compat.v1.keras.Model": "doc",
    "tensorflow.keras.losses.Reduction": "doc",
    "tensorflow.compat.v1.keras.losses": "doc",
    "tensorflow.compat.v1.keras.models": "doc",
    "tensorflow.keras.models.Sequential": "doc",
    "tensorflow.keras.models.load_model": "doc",
    "tensorflow.keras.models.save_model": "doc",
    "tensorflow.compat.v1.keras.backend": "doc",
    "tensorflow.keras.backend.reset_uids": "doc",
    "tensorflow.keras.backend.set_floatx": "doc",
    "tensorflow.keras.callbacks.Callback": "doc",
    "tensorflow.keras.models.clone_model": "doc",
    "tensorflow.keras.preprocessing.text": "doc",
    "tensorflow.keras.backend.set_epsilon": "doc",
    "tensorflow.keras.callbacks.CSVLogger": "doc",
    "tensorflow.keras.losses.KLDivergence": "doc",
    "tensorflow.keras.losses.SquaredHinge": "doc",
    "tensorflow.compat.v1.keras.callbacks": "doc",
    "tensorflow.keras.callbacks.BaseLogger": "doc",
    "tensorflow.keras.losses.kl_divergence": "doc",
    "tensorflow.keras.losses.squared_hinge": "doc",
    "tensorflow.compat.v1.keras.Sequential": "doc",
    "tensorflow.compat.v1.keras.losses.KLD": "doc",
    "tensorflow.compat.v1.keras.losses.MAE": "doc",
    "tensorflow.compat.v1.keras.losses.MSE": "doc",
    "tensorflow.compat.v1.keras.losses.get": "doc",
    "tensorflow.compat.v1.keras.losses.kld": "doc",
    "tensorflow.compat.v1.keras.losses.mae": "doc",
    "tensorflow.compat.v1.keras.losses.mse": "doc",
    "tensorflow.keras.backend.clear_session": "doc",
    "tensorflow.compat.v1.keras.backend.rnn": "doc",
    "tensorflow.compat.v1.keras.losses.Loss": "doc",
    "tensorflow.compat.v1.keras.losses.MAPE": "doc",
    "tensorflow.compat.v1.keras.losses.MSLE": "doc",
    "tensorflow.compat.v1.keras.losses.mape": "doc",
    "tensorflow.compat.v1.keras.losses.msle": "doc",
    "tensorflow.keras.callbacks.CallbackList": "doc",
    "tensorflow.keras.callbacks.experimental": "doc",
    "tensorflow.keras.mixed_precision.Policy": "doc",
    "tensorflow.keras.models.model_from_json": "doc",
    "tensorflow.keras.models.model_from_yaml": "doc",
    "tensorflow.keras.preprocessing.sequence": "doc",
    "tensorflow.compat.v1.keras.experimental": "doc",
    "tensorflow.compat.v1.keras.losses.hinge": "doc",
    "tensorflow.compat.v1.keras.models.Model": "doc",
    "tensorflow.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.compat.v1.keras.losses.cosine": "doc",
    "tensorflow.compat.v1.keras.preprocessing": "doc",
    "tensorflow.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.keras.experimental.CosineDecay": "doc",
    "tensorflow.keras.experimental.LinearModel": "doc",
    "tensorflow.keras.models.model_from_config": "doc",
    "tensorflow.compat.v1.keras.backend.floatx": "doc",
    "tensorflow.compat.v1.keras.losses.LogCosh": "doc",
    "tensorflow.compat.v1.keras.losses.Poisson": "doc",
    "tensorflow.compat.v1.keras.losses.logcosh": "doc",
    "tensorflow.compat.v1.keras.losses.poisson": "doc",
    "tensorflow.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.compat.v1.keras.backend.get_uid": "doc",
    "tensorflow.compat.v1.keras.losses.log_cosh": "doc",
    "tensorflow.compat.v1.keras.mixed_precision": "doc",
    "tensorflow.keras.experimental.WideDeepModel": "doc",
    "tensorflow.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.compat.v1.keras.models.Sequential": "doc",
    "tensorflow.compat.v1.keras.models.load_model": "doc",
    "tensorflow.compat.v1.keras.models.save_model": "doc",
    "tensorflow.keras.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.keras.backend.name_scope": "doc",
    "tensorflow.compat.v1.keras.backend.reset_uids": "doc",
    "tensorflow.compat.v1.keras.backend.set_floatx": "doc",
    "tensorflow.compat.v1.keras.callbacks.Callback": "doc",
    "tensorflow.compat.v1.keras.models.clone_model": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text": "doc",
    "tensorflow.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.keras.mixed_precision.global_policy": "doc",
    "tensorflow.compat.v1.keras.backend.get_session": "doc",
    "tensorflow.compat.v1.keras.backend.set_epsilon": "doc",
    "tensorflow.compat.v1.keras.backend.set_session": "doc",
    "tensorflow.compat.v1.keras.callbacks.CSVLogger": "doc",
    "tensorflow.compat.v1.keras.losses.KLDivergence": "doc",
    "tensorflow.compat.v1.keras.losses.SquaredHinge": "doc",
    "tensorflow.compat.v1.keras.callbacks.BaseLogger": "doc",
    "tensorflow.compat.v1.keras.losses.kl_divergence": "doc",
    "tensorflow.compat.v1.keras.losses.squared_hinge": "doc",
    "tensorflow.compat.v1.keras.backend.clear_session": "doc",
    "tensorflow.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.compat.v1.keras.callbacks.CallbackList": "doc",
    "tensorflow.compat.v1.keras.models.model_from_json": "doc",
    "tensorflow.compat.v1.keras.models.model_from_yaml": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence": "doc",
    "tensorflow.keras.mixed_precision.set_global_policy": "doc",
    "tensorflow.compat.v1.keras.callbacks.EarlyStopping": "doc",
    "tensorflow.compat.v1.keras.callbacks.ProgbarLogger": "doc",
    "tensorflow.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.compat.v1.keras.callbacks.LambdaCallback": "doc",
    "tensorflow.compat.v1.keras.callbacks.TerminateOnNaN": "doc",
    "tensorflow.compat.v1.keras.experimental.CosineDecay": "doc",
    "tensorflow.compat.v1.keras.experimental.LinearModel": "doc",
    "tensorflow.compat.v1.keras.models.model_from_config": "doc",
    "tensorflow.keras.mixed_precision.experimental.Policy": "doc",
    "tensorflow.compat.v1.keras.callbacks.ModelCheckpoint": "doc",
    "tensorflow.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.compat.v1.keras.experimental.WideDeepModel": "doc",
    "tensorflow.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.callbacks.ReduceLROnPlateau": "doc",
    "tensorflow.compat.v1.keras.mixed_precision.experimental": "doc",
    "tensorflow.keras.callbacks.experimental.BackupAndRestore": "doc",
    "tensorflow.keras.mixed_precision.experimental.set_policy": "doc",
    "tensorflow.compat.v1.keras.experimental.PeepholeLSTMCell": "doc",
    "tensorflow.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.compat.v1.keras.experimental.export_saved_model": "doc",
    "tensorflow.keras.mixed_precision.experimental.global_policy": "doc",
    "tensorflow.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.skipgrams": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.hashing_trick": "doc",
    "tensorflow.compat.v1.keras.experimental.load_from_saved_model": "doc",
    "tensorflow.compat.v1.keras.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.compat.v1.keras.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.keras.mixed_precision.experimental.get_layer_policy": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.pad_sequences": "doc",
    "tensorflow.compat.v1.keras.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.compat.v1.keras.preprocessing.text.text_to_word_sequence": "doc",
    "tensorflow.compat.v1.keras.preprocessing.sequence.make_sampling_table": "doc",
    "tensorflow.compat.v1.summary.initialize": "doc",
    "tensorflow.compat.v1.distributions.Uniform": "doc",
    "tensorflow.experimental.numpy.random.uniform": "doc",
    "tensorflow.metrics.serialize": "doc",
    "tensorflow.random.uniform": "doc",
    "tensorflow.optimizers.serialize": "doc",
    "tensorflow.compat.v1.random.uniform": "doc",
    "tensorflow.optimizers.schedules.serialize": "doc",
    "tensorflow.zeros": "doc",
    "tensorflow.compat.v1.zeros": "doc",
    "tensorflow.experimental.numpy.zeros": "doc",
    "tensorflow.optimizers.Adagrad": "doc",
    "tensorflow.metrics.deserialize": "doc",
    "tensorflow.optimizers.deserialize": "doc",
    "tensorflow.optimizers.schedules.deserialize": "doc",
    "tensorflow.compat.v1.tpu.initialize_system": "doc",
    "tensorflow.losses.serialize": "doc",
    "tensorflow.profiler.experimental.client.monitor": "doc",
    "tensorflow.ones_initializer": "doc",
    "tensorflow.compat.v1.ones_initializer": "doc",
    "tensorflow.metrics.MeanIoU": "doc",
    "tensorflow.compat.v1.metrics.mean_iou": "doc",
    "tensorflow.optimizers.schedules": "doc",
    "tensorflow.optimizers.schedules.PolynomialDecay": "doc",
    "tensorflow.optimizers.schedules.ExponentialDecay": "doc",
    "tensorflow.optimizers.schedules.InverseTimeDecay": "doc",
    "tensorflow.optimizers.schedules.LearningRateSchedule": "doc",
    "tensorflow.optimizers.schedules.PiecewiseConstantDecay": "doc",
    "tensorflow.raw_ops.InitializeTable": "doc",
    "tensorflow.raw_ops.StatefulUniform": "doc",
    "tensorflow.compat.v1.initialize_variables": "doc",
    "tensorflow.zeros_initializer": "doc",
    "tensorflow.compat.v1.zeros_initializer": "doc",
    "tensorflow.optimizers": "doc",
    "tensorflow.optimizers.SGD": "doc",
    "tensorflow.optimizers.get": "doc",
    "tensorflow.optimizers.Adam": "doc",
    "tensorflow.optimizers.Ftrl": "doc",
    "tensorflow.optimizers.Nadam": "doc",
    "tensorflow.optimizers.Adamax": "doc",
    "tensorflow.optimizers.RMSprop": "doc",
    "tensorflow.optimizers.Adadelta": "doc",
    "tensorflow.optimizers.Optimizer": "doc",
    "tensorflow.errors.UnavailableError": "doc",
    "tensorflow.compat.v1.errors.UnavailableError": "doc",
    "tensorflow.metrics.MeanTensor": "doc",
    "tensorflow.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.compat.v1.tpu.experimental.initialize_tpu_system": "doc",
    "tensorflow.raw_ops.RandomUniform": "doc",
    "tensorflow.metrics.MeanRelativeError": "doc",
    "tensorflow.compat.v1.tables_initializer": "doc",
    "tensorflow.compat.v1.metrics.mean_tensor": "doc",
    "tensorflow.strings.ngrams": "doc",
    "tensorflow.compat.v1.strings.ngrams": "doc",
    "tensorflow.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.compat.v1.lookup.experimental.DatasetInitializer": "doc",
    "tensorflow.raw_ops.SerializeSparse": "doc",
    "tensorflow.compat.v1.sets.set_size": "doc",
    "tensorflow.raw_ops.InitializeTableV2": "doc",
    "tensorflow.lookup.TextFileInitializer": "doc",
    "tensorflow.compat.v1.lookup.TextFileInitializer": "doc",
    "tensorflow.compat.v1.initialize_all_tables": "doc",
    "tensorflow.config.optimizer": "doc",
    "tensorflow.linalg.normalize": "doc",
    "tensorflow.config.optimizer.get_jit": "doc",
    "tensorflow.config.optimizer.set_jit": "doc",
    "tensorflow.compat.v1.config.optimizer": "doc",
    "tensorflow.compat.v1.linalg.normalize": "doc",
    "tensorflow.compat.v1.config.optimizer.get_jit": "doc",
    "tensorflow.compat.v1.config.optimizer.set_jit": "doc",
    "tensorflow.config.optimizer.get_experimental_options": "doc",
    "tensorflow.config.optimizer.set_experimental_options": "doc",
    "tensorflow.compat.v1.config.optimizer.get_experimental_options": "doc",
    "tensorflow.compat.v1.config.optimizer.set_experimental_options": "doc",
    "tensorflow.random.normal": "doc",
    "tensorflow.compat.v1.random.normal": "doc",
    "tensorflow.errors.UnauthenticatedError": "doc",
    "tensorflow.compat.v1.errors.UnauthenticatedError": "doc",
    "tensorflow.distribute.experimental.partitioners": "doc",
    "tensorflow.distribute.experimental.partitioners.Partitioner": "doc",
    "tensorflow.distribute.experimental.partitioners.MaxSizePartitioner": "doc",
    "tensorflow.distribute.experimental.partitioners.MinSizePartitioner": "doc",
    "tensorflow.distribute.experimental.partitioners.FixedShardsPartitioner": "doc",
    "tensorflow.compat.v1.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.app.flags.ListSerializer": "doc",
    "tensorflow.compat.v1.metrics.mean_relative_error": "doc",
    "tensorflow.metrics.MeanAbsoluteError": "doc",
    "tensorflow.io.serialize_sparse": "doc",
    "tensorflow.compat.v1.io.serialize_sparse": "doc",
    "tensorflow.raw_ops.DeserializeSparse": "doc",
    "tensorflow.metrics": "doc",
    "tensorflow.metrics.AUC": "doc",
    "tensorflow.metrics.KLD": "doc",
    "tensorflow.metrics.MAE": "doc",
    "tensorflow.metrics.MSE": "doc",
    "tensorflow.metrics.Sum": "doc",
    "tensorflow.metrics.get": "doc",
    "tensorflow.metrics.kld": "doc",
    "tensorflow.metrics.mae": "doc",
    "tensorflow.metrics.mse": "doc",
    "tensorflow.metrics.MAPE": "doc",
    "tensorflow.metrics.MSLE": "doc",
    "tensorflow.metrics.Mean": "doc",
    "tensorflow.metrics.mape": "doc",
    "tensorflow.metrics.msle": "doc",
    "tensorflow.metrics.Hinge": "doc",
    "tensorflow.metrics.hinge": "doc",
    "tensorflow.metrics.Metric": "doc",
    "tensorflow.metrics.Recall": "doc",
    "tensorflow.metrics.Poisson": "doc",
    "tensorflow.metrics.logcosh": "doc",
    "tensorflow.metrics.poisson": "doc",
    "tensorflow.metrics.Accuracy": "doc",
    "tensorflow.metrics.log_cosh": "doc",
    "tensorflow.metrics.Precision": "doc",
    "tensorflow.compat.v1.metrics": "doc",
    "tensorflow.metrics.KLDivergence": "doc",
    "tensorflow.metrics.LogCoshError": "doc",
    "tensorflow.metrics.SquaredHinge": "doc",
    "tensorflow.metrics.TrueNegatives": "doc",
    "tensorflow.metrics.TruePositives": "doc",
    "tensorflow.metrics.kl_divergence": "doc",
    "tensorflow.metrics.squared_hinge": "doc",
    "tensorflow.compat.v1.metrics.auc": "doc",
    "tensorflow.metrics.BinaryAccuracy": "doc",
    "tensorflow.metrics.FalseNegatives": "doc",
    "tensorflow.metrics.FalsePositives": "doc",
    "tensorflow.compat.v1.metrics.mean": "doc",
    "tensorflow.metrics.binary_accuracy": "doc",
    "tensorflow.metrics.CategoricalHinge": "doc",
    "tensorflow.metrics.CosineSimilarity": "doc",
    "tensorflow.metrics.MeanSquaredError": "doc",
    "tensorflow.compat.v1.metrics.recall": "doc",
    "tensorflow.metrics.PrecisionAtRecall": "doc",
    "tensorflow.metrics.RecallAtPrecision": "doc",
    "tensorflow.metrics.BinaryCrossentropy": "doc",
    "tensorflow.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.metrics.accuracy": "doc",
    "tensorflow.metrics.CategoricalAccuracy": "doc",
    "tensorflow.metrics.binary_crossentropy": "doc",
    "tensorflow.metrics.mean_absolute_error": "doc",
    "tensorflow.compat.v1.metrics.precision": "doc",
    "tensorflow.metrics.RootMeanSquaredError": "doc",
    "tensorflow.metrics.categorical_accuracy": "doc",
    "tensorflow.compat.v1.metrics.recall_at_k": "doc",
    "tensorflow.metrics.CategoricalCrossentropy": "doc",
    "tensorflow.metrics.TopKCategoricalAccuracy": "doc",
    "tensorflow.metrics.SensitivityAtSpecificity": "doc",
    "tensorflow.metrics.SpecificityAtSensitivity": "doc",
    "tensorflow.metrics.categorical_crossentropy": "doc",
    "tensorflow.compat.v1.metrics.precision_at_k": "doc",
    "tensorflow.compat.v1.metrics.true_negatives": "doc",
    "tensorflow.compat.v1.metrics.true_positives": "doc",
    "tensorflow.metrics.SparseCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.metrics.false_negatives": "doc",
    "tensorflow.compat.v1.metrics.false_positives": "doc",
    "tensorflow.compat.v1.metrics.recall_at_top_k": "doc",
    "tensorflow.metrics.top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.metrics.percentage_below": "doc",
    "tensorflow.metrics.MeanAbsolutePercentageError": "doc",
    "tensorflow.metrics.MeanSquaredLogarithmicError": "doc",
    "tensorflow.metrics.kullback_leibler_divergence": "doc",
    "tensorflow.metrics.sparse_categorical_accuracy": "doc",
    "tensorflow.compat.v1.metrics.mean_squared_error": "doc",
    "tensorflow.compat.v1.metrics.precision_at_top_k": "doc",
    "tensorflow.metrics.SparseCategoricalCrossentropy": "doc",
    "tensorflow.metrics.SparseTopKCategoricalAccuracy": "doc",
    "tensorflow.compat.v1.metrics.mean_absolute_error": "doc",
    "tensorflow.metrics.mean_absolute_percentage_error": "doc",
    "tensorflow.metrics.mean_squared_logarithmic_error": "doc",
    "tensorflow.compat.v1.metrics.mean_cosine_distance": "doc",
    "tensorflow.compat.v1.metrics.recall_at_thresholds": "doc",
    "tensorflow.metrics.sparse_categorical_crossentropy": "doc",
    "tensorflow.compat.v1.metrics.sparse_precision_at_k": "doc",
    "tensorflow.compat.v1.metrics.average_precision_at_k": "doc",
    "tensorflow.metrics.sparse_top_k_categorical_accuracy": "doc",
    "tensorflow.compat.v1.metrics.mean_per_class_accuracy": "doc",
    "tensorflow.compat.v1.metrics.precision_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.root_mean_squared_error": "doc",
    "tensorflow.compat.v1.metrics.sensitivity_at_specificity": "doc",
    "tensorflow.compat.v1.metrics.specificity_at_sensitivity": "doc",
    "tensorflow.compat.v1.metrics.true_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.true_positives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.false_negatives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.false_positives_at_thresholds": "doc",
    "tensorflow.compat.v1.metrics.sparse_average_precision_at_k": "doc",
    "tensorflow.sets.union": "doc",
    "tensorflow.constant_initializer": "doc",
    "tensorflow.compat.v1.sets.union": "doc",
    "tensorflow.compat.v1.train.Optimizer": "doc",
    "tensorflow.raw_ops.VarIsInitializedOp": "doc",
    "tensorflow.compat.v1.constant_initializer": "doc",
    "tensorflow.compat.v1.initialize_all_variables": "doc",
    "tensorflow.errors.InternalError": "doc",
    "tensorflow.compat.v1.errors.InternalError": "doc",
    "tensorflow.linalg.norm": "doc",
    "tensorflow.compat.v1.linalg.norm": "doc",
    "tensorflow.losses.deserialize": "doc",
    "tensorflow.compat.v1.layers.Dense": "doc",
    "tensorflow.compat.v1.layers.dense": "doc",
    "tensorflow.errors.UnimplementedError": "doc",
    "tensorflow.profiler.experimental.server": "doc",
    "tensorflow.profiler.experimental.server.start": "doc",
    "tensorflow.compat.v1.errors.UnimplementedError": "doc",
    "tensorflow.compat.v1.serialize_sparse": "doc",
    "tensorflow.errors.FailedPreconditionError": "doc",
    "tensorflow.compat.v1.errors.FailedPreconditionError": "doc",
    "tensorflow.compat.v1.variables_initializer": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry": "doc",
    "tensorflow.estimator.Head": "doc",
    "tensorflow.compat.v1.estimator.Head": "doc",
    "tensorflow.compat.v1.flags.CsvListSerializer": "doc",
    "tensorflow.compat.v1.app.flags.CsvListSerializer": "doc",
    "tensorflow.compat.v1.layers": "doc",
    "tensorflow.sparse.map_values": "doc",
    "tensorflow.compat.v1.layers.Layer": "doc",
    "tensorflow.raw_ops.SerializeTensor": "doc",
    "tensorflow.compat.v1.layers.Conv1D": "doc",
    "tensorflow.compat.v1.layers.Conv2D": "doc",
    "tensorflow.compat.v1.layers.Conv3D": "doc",
    "tensorflow.compat.v1.layers.conv1d": "doc",
    "tensorflow.compat.v1.layers.conv2d": "doc",
    "tensorflow.compat.v1.layers.conv3d": "doc",
    "tensorflow.compat.v1.layers.Dropout": "doc",
    "tensorflow.compat.v1.layers.Flatten": "doc",
    "tensorflow.compat.v1.layers.dropout": "doc",
    "tensorflow.compat.v1.layers.flatten": "doc",
    "tensorflow.raw_ops.StatefulUniformInt": "doc",
    "tensorflow.compat.v1.layers.InputSpec": "doc",
    "tensorflow.errors.InvalidArgumentError": "doc",
    "tensorflow.compat.v1.layers.MaxPooling1D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling2D": "doc",
    "tensorflow.compat.v1.layers.MaxPooling3D": "doc",
    "tensorflow.compat.v1.layers.experimental": "doc",
    "tensorflow.compat.v1.layers.max_pooling1d": "doc",
    "tensorflow.compat.v1.layers.max_pooling2d": "doc",
    "tensorflow.compat.v1.layers.max_pooling3d": "doc",
    "tensorflow.compat.v1.layers.Conv2DTranspose": "doc",
    "tensorflow.compat.v1.layers.Conv3DTranspose": "doc",
    "tensorflow.compat.v1.layers.SeparableConv1D": "doc",
    "tensorflow.compat.v1.layers.SeparableConv2D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling1D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling2D": "doc",
    "tensorflow.compat.v1.layers.AveragePooling3D": "doc",
    "tensorflow.compat.v1.layers.conv2d_transpose": "doc",
    "tensorflow.compat.v1.layers.conv3d_transpose": "doc",
    "tensorflow.compat.v1.layers.separable_conv1d": "doc",
    "tensorflow.compat.v1.layers.separable_conv2d": "doc",
    "tensorflow.compat.v1.layers.average_pooling1d": "doc",
    "tensorflow.compat.v1.layers.average_pooling2d": "doc",
    "tensorflow.compat.v1.layers.average_pooling3d": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.layers.BatchNormalization": "doc",
    "tensorflow.compat.v1.layers.batch_normalization": "doc",
    "tensorflow.compat.v1.errors.InvalidArgumentError": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.rewrap": "doc",
    "tensorflow.compat.v1.layers.experimental.set_keras_style": "doc",
    "tensorflow.compat.v1.layers.experimental.keras_style_scope": "doc",
    "tensorflow.compat.v1.initialize_local_variables": "doc",
    "tensorflow.errors.DeadlineExceededError": "doc",
    "tensorflow.errors.PermissionDeniedError": "doc",
    "tensorflow.compat.v1.errors.DeadlineExceededError": "doc",
    "tensorflow.compat.v1.errors.PermissionDeniedError": "doc",
    "tensorflow.compat.v1.orthogonal_initializer": "doc",
    "tensorflow.compat.v1.sets.set_difference": "doc",
    "tensorflow.less": "doc",
    "tensorflow.math.less": "doc",
    "tensorflow.sets.size": "doc",
    "tensorflow.compat.v1.less": "doc",
    "tensorflow.compat.v1.math.less": "doc",
    "tensorflow.compat.v1.sets.size": "doc",
    "tensorflow.experimental.numpy.less": "doc",
    "tensorflow.compat.v1.train.Supervisor": "doc",
    "tensorflow.hessians": "doc",
    "tensorflow.io.gfile.makedirs": "doc",
    "tensorflow.compat.v1.hessians": "doc",
    "tensorflow.io.serialize_tensor": "doc",
    "tensorflow.compat.v1.io.gfile.makedirs": "doc",
    "tensorflow.compat.v1.io.serialize_tensor": "doc",
    "tensorflow.compat.v1.random_uniform": "doc",
    "tensorflow.errors": "doc",
    "tensorflow.errors.OpError": "doc",
    "tensorflow.sparse.minimum": "doc",
    "tensorflow.random.Generator": "doc",
    "tensorflow.compat.v1.errors": "doc",
    "tensorflow.errors.AbortedError": "doc",
    "tensorflow.errors.UnknownError": "doc",
    "tensorflow.errors.DataLossError": "doc",
    "tensorflow.errors.NotFoundError": "doc",
    "tensorflow.errors.CancelledError": "doc",
    "tensorflow.errors.OutOfRangeError": "doc",
    "tensorflow.compat.v1.errors.OpError": "doc",
    "tensorflow.compat.v1.sparse.minimum": "doc",
    "tensorflow.errors.AlreadyExistsError": "doc",
    "tensorflow.compat.v1.random.Generator": "doc",
    "tensorflow.errors.ResourceExhaustedError": "doc",
    "tensorflow.random.experimental.Generator": "doc",
    "tensorflow.compat.v1.errors.AbortedError": "doc",
    "tensorflow.compat.v1.errors.UnknownError": "doc",
    "tensorflow.compat.v1.errors.DataLossError": "doc",
    "tensorflow.compat.v1.errors.NotFoundError": "doc",
    "tensorflow.compat.v1.errors.CancelledError": "doc",
    "tensorflow.compat.v1.errors.OutOfRangeError": "doc",
    "tensorflow.compat.v1.errors.AlreadyExistsError": "doc",
    "tensorflow.errors.OperatorNotAllowedInGraphError": "doc",
    "tensorflow.compat.v1.errors.ResourceExhaustedError": "doc",
    "tensorflow.compat.v1.random.experimental.Generator": "doc",
    "tensorflow.compat.v1.errors.error_code_from_exception_type": "doc",
    "tensorflow.compat.v1.errors.exception_type_from_error_code": "doc",
    "tensorflow.compat.v1.errors.raise_exception_on_not_ok_status": "doc",
    "tensorflow.compat.v1.feature_column.input_layer": "doc",
    "tensorflow.compat.v1.distributions.Beta": "doc",
    "tensorflow.raw_ops.IsVariableInitialized": "doc",
    "tensorflow.test.TestCase": "doc",
    "tensorflow.train.Features": "doc",
    "tensorflow.compat.v1.test.TestCase": "doc",
    "tensorflow.raw_ops.RandomUniformInt": "doc",
    "tensorflow.compat.v1.gfile.MakeDirs": "doc",
    "tensorflow.compat.v1.train.Features": "doc",
    "tensorflow.compat.v1.serialize_tensor": "doc",
    "tensorflow.train.Features.FeatureEntry": "doc",
    "tensorflow.test.TestCase.failureException": "doc",
    "tensorflow.compat.v1.train.Features.FeatureEntry": "doc",
    "tensorflow.compat.v1.test.TestCase.failureException": "doc",
    "tensorflow.raw_ops.InitializeTableFromDataset": "doc",
    "tensorflow.eigvals": "doc",
    "tensorflow.linalg.eigvals": "doc",
    "tensorflow.init_scope": "doc",
    "tensorflow.lite.Optimize": "doc",
    "tensorflow.compat.v1.container": "doc",
    "tensorflow.compat.v1.init_scope": "doc",
    "tensorflow.compat.v1.lite.Optimize": "doc",
    "tensorflow.random_uniform_initializer": "doc",
    "tensorflow.compat.v1.glorot_uniform_initializer": "doc",
    "tensorflow.compat.v1.random_uniform_initializer": "doc",
    "tensorflow.norm": "doc",
    "tensorflow.compat.v1.norm": "doc",
    "tensorflow.raw_ops.FakeParam": "doc",
    "tensorflow.compat.v1.data.make_initializable_iterator": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental.VirtualDevices": "doc",
    "tensorflow.sparse.retain": "doc",
    "tensorflow.strings.format": "doc",
    "tensorflow.io.gfile.rename": "doc",
    "tensorflow.profiler.experimental": "doc",
    "tensorflow.compat.v1.gfile.Rename": "doc",
    "tensorflow.compat.v1.train.Server": "doc",
    "tensorflow.compat.v1.sparse.retain": "doc",
    "tensorflow.experimental.numpy.inner": "doc",
    "tensorflow.compat.v1.strings.format": "doc",
    "tensorflow.compat.v1.io.gfile.rename": "doc",
    "tensorflow.experimental.numpy.nonzero": "doc",
    "tensorflow.profiler.experimental.stop": "doc",
    "tensorflow.profiler.experimental.Trace": "doc",
    "tensorflow.profiler.experimental.start": "doc",
    "tensorflow.experimental.numpy.nextafter": "doc",
    "tensorflow.profiler.experimental.client": "doc",
    "tensorflow.profiler.experimental.Profile": "doc",
    "tensorflow.profiler.experimental.client.trace": "doc",
    "tensorflow.profiler.experimental.ProfilerOptions": "doc",
    "tensorflow.compat.v1.estimator.experimental.KMeans": "doc",
    "tensorflow.random_normal_initializer": "doc",
    "tensorflow.compat.v1.glorot_normal_initializer": "doc",
    "tensorflow.compat.v1.random_normal_initializer": "doc",
    "tensorflow.compat.v1.report_uninitialized_variables": "doc",
    "tensorflow.experimental.numpy.average": "doc",
    "tensorflow.compat.v1.is_variable_initialized": "doc",
    "tensorflow.math.erf": "doc",
    "tensorflow.raw_ops.Mean": "doc",
    "tensorflow.compat.v1.erf": "doc",
    "tensorflow.compat.v1.math.erf": "doc",
    "tensorflow.compat.v1.sets.set_union": "doc",
    "tensorflow.compat.v1.flags.ArgumentSerializer": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentSerializer": "doc",
    "tensorflow.data.experimental.ignore_errors": "doc",
    "tensorflow.experimental.numpy.count_nonzero": "doc",
    "tensorflow.compat.v1.data.experimental.ignore_errors": "doc",
    "tensorflow.random.stateless_uniform": "doc",
    "tensorflow.compat.v1.random.stateless_uniform": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.CheckersEntry": "doc",
    "tensorflow.estimator.LinearClassifier": "doc",
    "tensorflow.compat.v1.estimator.LinearClassifier": "doc",
    "tensorflow.negative": "doc",
    "tensorflow.sparse.slice": "doc",
    "tensorflow.linalg.einsum": "doc",
    "tensorflow.math.negative": "doc",
    "tensorflow.raw_ops.Unique": "doc",
    "tensorflow.estimator.export": "doc",
    "tensorflow.compat.v1.negative": "doc",
    "tensorflow.compat.v1.sparse.slice": "doc",
    "tensorflow.experimental.numpy.tile": "doc",
    "tensorflow.compat.v1.linalg.einsum": "doc",
    "tensorflow.compat.v1.math.negative": "doc",
    "tensorflow.experimental.numpy.isreal": "doc",
    "tensorflow.compat.v1.estimator.export": "doc",
    "tensorflow.experimental.numpy.isfinite": "doc",
    "tensorflow.experimental.numpy.isscalar": "doc",
    "tensorflow.experimental.numpy.negative": "doc",
    "tensorflow.experimental.numpy.ones_like": "doc",
    "tensorflow.estimator.export.ExportOutput": "doc",
    "tensorflow.experimental.numpy.empty_like": "doc",
    "tensorflow.estimator.export.PredictOutput": "doc",
    "tensorflow.experimental.numpy.diag_indices": "doc",
    "tensorflow.estimator.export.RegressionOutput": "doc",
    "tensorflow.estimator.export.ClassificationOutput": "doc",
    "tensorflow.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.compat.v1.estimator.export.ExportOutput": "doc",
    "tensorflow.random.experimental.get_global_generator": "doc",
    "tensorflow.random.experimental.set_global_generator": "doc",
    "tensorflow.compat.v1.estimator.export.PredictOutput": "doc",
    "tensorflow.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.compat.v1.estimator.export.RegressionOutput": "doc",
    "tensorflow.compat.v1.estimator.export.ClassificationOutput": "doc",
    "tensorflow.compat.v1.estimator.export.ServingInputReceiver": "doc",
    "tensorflow.compat.v1.random.experimental.get_global_generator": "doc",
    "tensorflow.compat.v1.random.experimental.set_global_generator": "doc",
    "tensorflow.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.export.TensorServingInputReceiver": "doc",
    "tensorflow.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.export.build_raw_serving_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.export.build_parsing_serving_input_receiver_fn": "doc",
    "tensorflow.raw_ops.DeserializeManySparse": "doc",
    "tensorflow.raw_ops.SerializeManySparse": "doc",
    "tensorflow.math.nextafter": "doc",
    "tensorflow.compat.v1.math.nextafter": "doc",
    "tensorflow.random.uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.uniform_candidate_sampler": "doc",
    "tensorflow.sparse.segment_sum": "doc",
    "tensorflow.compat.v1.sparse.segment_sum": "doc",
    "tensorflow.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.config.experimental.list_logical_devices": "doc",
    "tensorflow.compat.v1.config.experimental.ClusterDeviceFilters": "doc",
    "tensorflow.compat.v1.config.experimental.list_logical_devices": "doc",
    "tensorflow.random.all_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.all_candidate_sampler": "doc",
    "tensorflow.experimental.tensorrt.ConversionParams": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFile": "doc",
    "tensorflow.compat.v1.local_variables_initializer": "doc",
    "tensorflow.io.deserialize_many_sparse": "doc",
    "tensorflow.compat.v1.io.deserialize_many_sparse": "doc",
    "tensorflow.raw_ops.DeserializeIterator": "doc",
    "tensorflow.sets": "doc",
    "tensorflow.math.real": "doc",
    "tensorflow.math.zeta": "doc",
    "tensorflow.raw_ops.Less": "doc",
    "tensorflow.raw_ops.Real": "doc",
    "tensorflow.raw_ops.Zeta": "doc",
    "tensorflow.raw_ops.Merge": "doc",
    "tensorflow.compat.v1.real": "doc",
    "tensorflow.compat.v1.sets": "doc",
    "tensorflow.compat.v1.zeta": "doc",
    "tensorflow.sets.difference": "doc",
    "tensorflow.sets.intersection": "doc",
    "tensorflow.compat.v1.math.real": "doc",
    "tensorflow.compat.v1.math.zeta": "doc",
    "tensorflow.compat.v1.sparse.merge": "doc",
    "tensorflow.experimental.numpy.real": "doc",
    "tensorflow.compat.v1.summary.merge": "doc",
    "tensorflow.compat.v1.sets.difference": "doc",
    "tensorflow.compat.v1.sets.intersection": "doc",
    "tensorflow.compat.v1.sets.set_intersection": "doc",
    "tensorflow.compat.v1.distributions.Normal": "doc",
    "tensorflow.data.Iterator": "doc",
    "tensorflow.raw_ops.Iterator": "doc",
    "tensorflow.compat.v1.data.Iterator": "doc",
    "tensorflow.compat.v1.spectral.ifft": "doc",
    "tensorflow.raw_ops.NonSerializableDataset": "doc",
    "tensorflow.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.compat.v1.lookup.KeyValueTensorInitializer": "doc",
    "tensorflow.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.math.betainc": "doc",
    "tensorflow.train.Feature": "doc",
    "tensorflow.strings.length": "doc",
    "tensorflow.raw_ops.Betainc": "doc",
    "tensorflow.compat.v1.betainc": "doc",
    "tensorflow.math.special.expint": "doc",
    "tensorflow.compat.v1.math.betainc": "doc",
    "tensorflow.compat.v1.train.Feature": "doc",
    "tensorflow.compat.v1.strings.length": "doc",
    "tensorflow.compat.v1.math.special.expint": "doc",
    "tensorflow.config.experimental.list_physical_devices": "doc",
    "tensorflow.compat.v1.config.experimental.list_physical_devices": "doc",
    "tensorflow.compat.v1.matrix_inverse": "doc",
    "tensorflow.compat.v1.global_variables_initializer": "doc",
    "tensorflow.compat.v1.truncated_normal_initializer": "doc",
    "tensorflow.compat.v1.variance_scaling_initializer": "doc",
    "tensorflow.profiler": "doc",
    "tensorflow.io.write_file": "doc",
    "tensorflow.raw_ops.Enter": "doc",
    "tensorflow.bitwise.invert": "doc",
    "tensorflow.raw_ops.SetSize": "doc",
    "tensorflow.raw_ops.Unstage": "doc",
    "tensorflow.compat.v1.profiler": "doc",
    "tensorflow.compat.v1.manip.tile": "doc",
    "tensorflow.compat.v1.io.write_file": "doc",
    "tensorflow.io.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.bitwise.invert": "doc",
    "tensorflow.compat.v1.profiler.advise": "doc",
    "tensorflow.compat.v1.profiler.profile": "doc",
    "tensorflow.compat.v1.profiler.Profiler": "doc",
    "tensorflow.compat.v1.AttrValue.ListValue": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto": "doc",
    "tensorflow.compat.v1.profiler.write_op_log": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto": "doc",
    "tensorflow.compat.v1.io.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.profiler.AdviceProto.Checker": "doc",
    "tensorflow.compat.v1.profiler.MultiGraphNodeProto": "doc",
    "tensorflow.compat.v1.profiler.ProfileOptionBuilder": "doc",
    "tensorflow.compat.v1.profiler.OpLogProto.IdToStringEntry": "doc",
    "tensorflow.compat.v1.profiler.GraphNodeProto.InputShapesEntry": "doc",
    "tensorflow.nn.normalize_moments": "doc",
    "tensorflow.linalg.lu_matrix_inverse": "doc",
    "tensorflow.raw_ops.SerializeIterator": "doc",
    "tensorflow.compat.v1.nn.normalize_moments": "doc",
    "tensorflow.compat.v1.train.exponential_decay": "doc",
    "tensorflow.compat.v1.linalg.lu_matrix_inverse": "doc",
    "tensorflow.zeros_like": "doc",
    "tensorflow.random.set_seed": "doc",
    "tensorflow.sparse.to_indicator": "doc",
    "tensorflow.compat.v1.zeros_like": "doc",
    "tensorflow.experimental.tensorrt": "doc",
    "tensorflow.experimental.numpy.iinfo": "doc",
    "tensorflow.compat.v1.random.get_seed": "doc",
    "tensorflow.experimental.numpy.minimum": "doc",
    "tensorflow.experimental.numpy.zeros_like": "doc",
    "tensorflow.compat.v1.sparse.to_indicator": "doc",
    "tensorflow.experimental.tensorrt.Converter": "doc",
    "tensorflow.experimental.numpy.random.randint": "doc",
    "tensorflow.autograph.experimental.do_not_convert": "doc",
    "tensorflow.compat.v1.autograph.experimental.do_not_convert": "doc",
    "tensorflow.compat.v1.deserialize_many_sparse": "doc",
    "tensorflow.compat.v1.sparse.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceTransform": "doc",
    "tensorflow.raw_ops.StatefulUniformFullInt": "doc",
    "tensorflow.raw_ops.StatelessRandomUniform": "doc",
    "tensorflow.estimator.add_metrics": "doc",
    "tensorflow.compat.v1.estimator.add_metrics": "doc",
    "tensorflow.raw_ops.InitializeTableFromTextFileV2": "doc",
    "tensorflow.raw_ops.ReluGrad": "doc",
    "tensorflow.raw_ops.SeluGrad": "doc",
    "tensorflow.raw_ops.TileGrad": "doc",
    "tensorflow.compat.v1.spectral": "doc",
    "tensorflow.compat.v1.spectral.dct": "doc",
    "tensorflow.compat.v1.spectral.fft": "doc",
    "tensorflow.compat.v1.spectral.idct": "doc",
    "tensorflow.compat.v1.spectral.rfft": "doc",
    "tensorflow.compat.v1.spectral.fft2d": "doc",
    "tensorflow.compat.v1.spectral.fft3d": "doc",
    "tensorflow.compat.v1.spectral.irfft": "doc",
    "tensorflow.compat.v1.spectral.ifft2d": "doc",
    "tensorflow.compat.v1.spectral.ifft3d": "doc",
    "tensorflow.compat.v1.spectral.rfft2d": "doc",
    "tensorflow.compat.v1.spectral.rfft3d": "doc",
    "tensorflow.compat.v1.spectral.irfft2d": "doc",
    "tensorflow.compat.v1.spectral.irfft3d": "doc",
    "tensorflow.compat.v1.experimental.output_all_intermediates": "doc",
    "tensorflow.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.log_uniform_candidate_sampler": "doc",
    "tensorflow.math.count_nonzero": "doc",
    "tensorflow.compat.v1.count_nonzero": "doc",
    "tensorflow.compat.v1.math.count_nonzero": "doc",
    "tensorflow.compat.v1.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.app.flags.IntegerParser": "doc",
    "tensorflow.compat.v1.estimator.tpu.InputPipelineConfig": "doc",
    "tensorflow.bitcast": "doc",
    "tensorflow.greater": "doc",
    "tensorflow.strings": "doc",
    "tensorflow.data.Dataset": "doc",
    "tensorflow.math.greater": "doc",
    "tensorflow.math.special": "doc",
    "tensorflow.strings.join": "doc",
    "tensorflow.strings.lower": "doc",
    "tensorflow.strings.split": "doc",
    "tensorflow.strings.strip": "doc",
    "tensorflow.strings.upper": "doc",
    "tensorflow.strings.substr": "doc",
    "tensorflow.raw_ops.Bitcast": "doc",
    "tensorflow.raw_ops.Greater": "doc",
    "tensorflow.strings.as_string": "doc",
    "tensorflow.strings.to_number": "doc",
    "tensorflow.compat.v1.bitcast": "doc",
    "tensorflow.compat.v1.greater": "doc",
    "tensorflow.compat.v1.strings": "doc",
    "tensorflow.math.special.dawsn": "doc",
    "tensorflow.math.special.spence": "doc",
    "tensorflow.strings.bytes_split": "doc",
    "tensorflow.strings.reduce_join": "doc",
    "tensorflow.strings.regex_replace": "doc",
    "tensorflow.strings.unicode_split": "doc",
    "tensorflow.math.special.bessel_i0": "doc",
    "tensorflow.math.special.bessel_i1": "doc",
    "tensorflow.math.special.bessel_j0": "doc",
    "tensorflow.math.special.bessel_j1": "doc",
    "tensorflow.math.special.bessel_k0": "doc",
    "tensorflow.math.special.bessel_k1": "doc",
    "tensorflow.math.special.bessel_y0": "doc",
    "tensorflow.math.special.bessel_y1": "doc",
    "tensorflow.strings.to_hash_bucket": "doc",
    "tensorflow.strings.unicode_decode": "doc",
    "tensorflow.strings.unicode_encode": "doc",
    "tensorflow.strings.unicode_script": "doc",
    "tensorflow.compat.v1.data.Dataset": "doc",
    "tensorflow.compat.v1.math.greater": "doc",
    "tensorflow.compat.v1.math.special": "doc",
    "tensorflow.compat.v1.strings.join": "doc",
    "tensorflow.math.special.bessel_i0e": "doc",
    "tensorflow.math.special.bessel_i1e": "doc",
    "tensorflow.math.special.bessel_k0e": "doc",
    "tensorflow.math.special.bessel_k1e": "doc",
    "tensorflow.compat.v1.strings.lower": "doc",
    "tensorflow.compat.v1.strings.split": "doc",
    "tensorflow.compat.v1.strings.strip": "doc",
    "tensorflow.compat.v1.strings.upper": "doc",
    "tensorflow.math.special.fresnel_cos": "doc",
    "tensorflow.math.special.fresnel_sin": "doc",
    "tensorflow.strings.regex_full_match": "doc",
    "tensorflow.compat.v1.strings.substr": "doc",
    "tensorflow.strings.unicode_transcode": "doc",
    "tensorflow.experimental.numpy.greater": "doc",
    "tensorflow.experimental.numpy.inexact": "doc",
    "tensorflow.strings.to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.strings.as_string": "doc",
    "tensorflow.compat.v1.strings.to_number": "doc",
    "tensorflow.compat.v1.math.special.dawsn": "doc",
    "tensorflow.strings.to_hash_bucket_strong": "doc",
    "tensorflow.strings.unsorted_segment_join": "doc",
    "tensorflow.compat.v1.math.special.spence": "doc",
    "tensorflow.compat.v1.strings.bytes_split": "doc",
    "tensorflow.compat.v1.strings.reduce_join": "doc",
    "tensorflow.compat.v1.strings.regex_replace": "doc",
    "tensorflow.compat.v1.strings.unicode_split": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1": "doc",
    "tensorflow.compat.v1.math.special.bessel_j0": "doc",
    "tensorflow.compat.v1.math.special.bessel_j1": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1": "doc",
    "tensorflow.compat.v1.math.special.bessel_y0": "doc",
    "tensorflow.compat.v1.math.special.bessel_y1": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket": "doc",
    "tensorflow.compat.v1.strings.unicode_decode": "doc",
    "tensorflow.compat.v1.strings.unicode_encode": "doc",
    "tensorflow.compat.v1.strings.unicode_script": "doc",
    "tensorflow.compat.v1.math.special.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_i1e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k0e": "doc",
    "tensorflow.compat.v1.math.special.bessel_k1e": "doc",
    "tensorflow.strings.unicode_split_with_offsets": "doc",
    "tensorflow.compat.v1.math.special.fresnel_cos": "doc",
    "tensorflow.compat.v1.math.special.fresnel_sin": "doc",
    "tensorflow.compat.v1.strings.regex_full_match": "doc",
    "tensorflow.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.compat.v1.strings.unicode_transcode": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_fast": "doc",
    "tensorflow.compat.v1.strings.to_hash_bucket_strong": "doc",
    "tensorflow.compat.v1.strings.unsorted_segment_join": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdamParameters": "doc",
    "tensorflow.compat.v1.tpu.experimental.FtrlParameters": "doc",
    "tensorflow.compat.v1.strings.unicode_split_with_offsets": "doc",
    "tensorflow.compat.v1.strings.unicode_decode_with_offsets": "doc",
    "tensorflow.config.experimental.get_visible_devices": "doc",
    "tensorflow.config.experimental.set_visible_devices": "doc",
    "tensorflow.compat.v1.config.experimental.get_visible_devices": "doc",
    "tensorflow.compat.v1.config.experimental.set_visible_devices": "doc",
    "tensorflow.tile": "doc",
    "tensorflow.bitwise": "doc",
    "tensorflow.ones_like": "doc",
    "tensorflow.math.is_finite": "doc",
    "tensorflow.compat.v1.tile": "doc",
    "tensorflow.CriticalSection": "doc",
    "tensorflow.nn.l2_normalize": "doc",
    "tensorflow.math.l2_normalize": "doc",
    "tensorflow.raw_ops.BitwiseOr": "doc",
    "tensorflow.raw_ops.WriteFile": "doc",
    "tensorflow.compat.v1.bitwise": "doc",
    "tensorflow.bitwise.bitwise_or": "doc",
    "tensorflow.bitwise.left_shift": "doc",
    "tensorflow.raw_ops.SaveSlices": "doc",
    "tensorflow.bitwise.bitwise_and": "doc",
    "tensorflow.bitwise.bitwise_xor": "doc",
    "tensorflow.bitwise.right_shift": "doc",
    "tensorflow.linalg.l2_normalize": "doc",
    "tensorflow.compat.v1.is_finite": "doc",
    "tensorflow.compat.v1.ones_like": "doc",
    "tensorflow.compat.v1.write_file": "doc",
    "tensorflow.image.image_gradients": "doc",
    "tensorflow.sparse.fill_empty_rows": "doc",
    "tensorflow.raw_ops.SdcaOptimizerV2": "doc",
    "tensorflow.compat.v1.math.is_finite": "doc",
    "tensorflow.compat.v1.CriticalSection": "doc",
    "tensorflow.compat.v1.nn.l2_normalize": "doc",
    "tensorflow.compat.v1.flags.EnumParser": "doc",
    "tensorflow.compat.v1.flags.FlagValues": "doc",
    "tensorflow.compat.v1.flags.ListParser": "doc",
    "tensorflow.random.get_global_generator": "doc",
    "tensorflow.random.set_global_generator": "doc",
    "tensorflow.compat.v1.math.l2_normalize": "doc",
    "tensorflow.compat.v1.saved_model.utils": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_or": "doc",
    "tensorflow.compat.v1.bitwise.left_shift": "doc",
    "tensorflow.compat.v1.summary.FileWriter": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_and": "doc",
    "tensorflow.compat.v1.bitwise.bitwise_xor": "doc",
    "tensorflow.compat.v1.bitwise.right_shift": "doc",
    "tensorflow.compat.v1.debugging.is_finite": "doc",
    "tensorflow.compat.v1.linalg.l2_normalize": "doc",
    "tensorflow.compat.v1.saved_model.Builder": "doc",
    "tensorflow.compat.v1.saved_model.builder": "doc",
    "tensorflow.train.ExponentialMovingAverage": "doc",
    "tensorflow.compat.v1.app.flags.EnumParser": "doc",
    "tensorflow.compat.v1.app.flags.FlagValues": "doc",
    "tensorflow.compat.v1.app.flags.ListParser": "doc",
    "tensorflow.compat.v1.image.image_gradients": "doc",
    "tensorflow.compat.v1.serialize_many_sparse": "doc",
    "tensorflow.compat.v1.random.set_random_seed": "doc",
    "tensorflow.compat.v1.sparse.fill_empty_rows": "doc",
    "tensorflow.compat.v1.random.get_global_generator": "doc",
    "tensorflow.compat.v1.random.set_global_generator": "doc",
    "tensorflow.compat.v1.train.ExponentialMovingAverage": "doc",
    "tensorflow.compat.v1.saved_model.utils.build_tensor_info": "doc",
    "tensorflow.compat.v1.saved_model.builder.SavedModelBuilder": "doc",
    "tensorflow.compat.v1.saved_model.utils.get_tensor_from_tensor_info": "doc",
    "tensorflow.compat.v1.estimator.experimental.linear_logit_fn_builder": "doc",
    "tensorflow.raw_ops.TakeDataset": "doc",
    "tensorflow.Tensor": "doc",
    "tensorflow.compat.v1.Tensor": "doc",
    "tensorflow.linalg.LinearOperatorZeros": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorZeros": "doc",
    "tensorflow.train.FeatureList": "doc",
    "tensorflow.linalg.global_norm": "doc",
    "tensorflow.linalg.tensor_diag": "doc",
    "tensorflow.raw_ops.SkipDataset": "doc",
    "tensorflow.compat.v1.global_norm": "doc",
    "tensorflow.compat.v1.train.FeatureList": "doc",
    "tensorflow.compat.v1.train.write_graph": "doc",
    "tensorflow.compat.v1.linalg.global_norm": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag": "doc",
    "tensorflow.sparse.maximum": "doc",
    "tensorflow.sparse.reorder": "doc",
    "tensorflow.sparse.transpose": "doc",
    "tensorflow.distribute.Server": "doc",
    "tensorflow.mlir.experimental": "doc",
    "tensorflow.estimator.ModeKeys": "doc",
    "tensorflow.estimator.DNNRegressor": "doc",
    "tensorflow.estimator.experimental": "doc",
    "tensorflow.data.experimental.unique": "doc",
    "tensorflow.compat.v1.sparse.maximum": "doc",
    "tensorflow.compat.v1.sparse.reorder": "doc",
    "tensorflow.experimental.numpy.fliplr": "doc",
    "tensorflow.experimental.numpy.vander": "doc",
    "tensorflow.compat.v1.sparse.transpose": "doc",
    "tensorflow.config.list_logical_devices": "doc",
    "tensorflow.experimental.numpy.unicode_": "doc",
    "tensorflow.compat.v1.distribute.Server": "doc",
    "tensorflow.compat.v1.mlir.experimental": "doc",
    "tensorflow.experimental.numpy.heaviside": "doc",
    "tensorflow.experimental.numpy.remainder": "doc",
    "tensorflow.compat.v1.estimator.ModeKeys": "doc",
    "tensorflow.compat.v1.estimator.DNNRegressor": "doc",
    "tensorflow.compat.v1.estimator.experimental": "doc",
    "tensorflow.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.mlir.experimental.convert_function": "doc",
    "tensorflow.compat.v1.data.experimental.unique": "doc",
    "tensorflow.estimator.experimental.RNNEstimator": "doc",
    "tensorflow.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.estimator.experimental.RNNClassifier": "doc",
    "tensorflow.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental": "doc",
    "tensorflow.compat.v1.config.list_logical_devices": "doc",
    "tensorflow.data.experimental.service.DispatchServer": "doc",
    "tensorflow.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.LinearSDCA": "doc",
    "tensorflow.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_function": "doc",
    "tensorflow.compat.v1.mlir.experimental.convert_graph_def": "doc",
    "tensorflow.compat.v1.estimator.experimental.call_logit_fn": "doc",
    "tensorflow.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_lower_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_higher_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.dnn_logit_fn_builder": "doc",
    "tensorflow.compat.v1.estimator.experimental.InMemoryEvaluatorHook": "doc",
    "tensorflow.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.compat.v1.estimator.tpu.experimental.EmbeddingConfigSpec": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_early_stopping_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_decrease_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.stop_if_no_increase_hook": "doc",
    "tensorflow.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.compat.v1.estimator.experimental.make_stop_at_checkpoint_step_hook": "doc",
    "tensorflow.compat.v1.estimator.experimental.build_raw_supervised_input_receiver_fn": "doc",
    "tensorflow.compat.v1.assert_variables_initialized": "doc",
    "tensorflow.compat.v1.nn.bidirectional_dynamic_rnn": "doc",
    "tensorflow.math.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.math.is_strictly_increasing": "doc",
    "tensorflow.compat.v1.debugging.is_strictly_increasing": "doc",
    "tensorflow.random.experimental.stateless_split": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_split": "doc",
    "tensorflow.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.random.learned_unigram_candidate_sampler": "doc",
    "tensorflow.sparse.segment_sqrt_n": "doc",
    "tensorflow.debugging.check_numerics": "doc",
    "tensorflow.compat.v1.check_numerics": "doc",
    "tensorflow.compat.v1.sparse.segment_sqrt_n": "doc",
    "tensorflow.compat.v1.debugging.check_numerics": "doc",
    "tensorflow.data.experimental.OptimizationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.OptimizationOptions": "doc",
    "tensorflow.raw_ops.IdentityReaderV2": "doc",
    "tensorflow.raw_ops.StridedSliceGrad": "doc",
    "tensorflow.compat.v1.OptimizerOptions": "doc",
    "tensorflow.compat.v1.train.MonitoredSession": "doc",
    "tensorflow.compat.v1.train.polynomial_decay": "doc",
    "tensorflow.compat.v1.uniform_unit_scaling_initializer": "doc",
    "tensorflow.compat.v1.train.MonitoredSession.StepContext": "doc",
    "tensorflow.experimental.numpy.deg2rad": "doc",
    "tensorflow.compat.v1.sparse.reduce_max_sparse": "doc",
    "tensorflow.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.compat.v1.data.experimental.CheckpointInputPipelineHook": "doc",
    "tensorflow.estimator.MultiClassHead": "doc",
    "tensorflow.estimator.MultiLabelHead": "doc",
    "tensorflow.config.list_physical_devices": "doc",
    "tensorflow.compat.v1.estimator.MultiClassHead": "doc",
    "tensorflow.compat.v1.estimator.MultiLabelHead": "doc",
    "tensorflow.compat.v1.config.list_physical_devices": "doc",
    "tensorflow.IndexedSlices": "doc",
    "tensorflow.raw_ops.MatrixInverse": "doc",
    "tensorflow.raw_ops.SdcaOptimizer": "doc",
    "tensorflow.compat.v1.IndexedSlices": "doc",
    "tensorflow.compat.v1.train.AdamOptimizer": "doc",
    "tensorflow.compat.v1.train.FtrlOptimizer": "doc",
    "tensorflow.compat.v1.ConditionalAccumulatorBase": "doc",
    "tensorflow.math.erfc": "doc",
    "tensorflow.compat.v1.erfc": "doc",
    "tensorflow.compat.v1.math.erfc": "doc",
    "tensorflow.experimental.numpy.mean": "doc",
    "tensorflow.compat.v1.distributions.Categorical": "doc",
    "tensorflow.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.compat.v1.config.experimental.VirtualDeviceConfiguration": "doc",
    "tensorflow.version": "doc",
    "tensorflow.compat.v1.version": "doc",
    "tensorflow.sparse": "doc",
    "tensorflow.minimum": "doc",
    "tensorflow.Variable": "doc",
    "tensorflow.Operation": "doc",
    "tensorflow.sparse.add": "doc",
    "tensorflow.sparse.eye": "doc",
    "tensorflow.nn.nce_loss": "doc",
    "tensorflow.sparse.mask": "doc",
    "tensorflow.math.minimum": "doc",
    "tensorflow.sparse.cross": "doc",
    "tensorflow.sparse.split": "doc",
    "tensorflow.sparse.concat": "doc",
    "tensorflow.random.shuffle": "doc",
    "tensorflow.sparse.reshape": "doc",
    "tensorflow.sparse.softmax": "doc",
    "tensorflow.linalg.eigvalsh": "doc",
    "tensorflow.linalg.set_diag": "doc",
    "tensorflow.raw_ops.Minimum": "doc",
    "tensorflow.raw_ops.Restore": "doc",
    "tensorflow.sparse.bincount": "doc",
    "tensorflow.sparse.to_dense": "doc",
    "tensorflow.raw_ops.Variable": "doc",
    "tensorflow.compat.v1.sparse": "doc",
    "tensorflow.lite.experimental": "doc",
    "tensorflow.raw_ops.Relu6Grad": "doc",
    "tensorflow.raw_ops.ZerosLike": "doc",
    "tensorflow.sparse.from_dense": "doc",
    "tensorflow.sparse.reduce_max": "doc",
    "tensorflow.sparse.reduce_sum": "doc",
    "tensorflow.compat.v1.minimum": "doc",
    "tensorflow.image.central_crop": "doc",
    "tensorflow.sparse.expand_dims": "doc",
    "tensorflow.sparse.reset_shape": "doc",
    "tensorflow.train.FeatureLists": "doc",
    "tensorflow.train.experimental": "doc",
    "tensorflow.types.experimental": "doc",
    "tensorflow.compat.v1.Variable": "doc",
    "tensorflow.distribute.Strategy": "doc",
    "tensorflow.linalg.experimental": "doc",
    "tensorflow.signal.inverse_stft": "doc",
    "tensorflow.sparse.SparseTensor": "doc",
    "tensorflow.sparse.cross_hashed": "doc",
    "tensorflow.sparse.segment_mean": "doc",
    "tensorflow.compat.v1.Operation": "doc",
    "tensorflow.compat.v1.setdiff1d": "doc",
    "tensorflow.raw_ops.MakeIterator": "doc",
    "tensorflow.raw_ops.Prelinearize": "doc",
    "tensorflow.raw_ops.StringFormat": "doc",
    "tensorflow.train.list_variables": "doc",
    "tensorflow.compat.v1.sparse.add": "doc",
    "tensorflow.compat.v1.sparse.eye": "doc",
    "tensorflow.compat.v1.nn.nce_loss": "doc",
    "tensorflow.compat.v1.sparse.mask": "doc",
    "tensorflow.Variable.SaveSliceInfo": "doc",
    "tensorflow.estimator.BestExporter": "doc",
    "tensorflow.compat.v1.logging.info": "doc",
    "tensorflow.compat.v1.math.minimum": "doc",
    "tensorflow.compat.v1.sparse.cross": "doc",
    "tensorflow.compat.v1.sparse.split": "doc",
    "tensorflow.experimental.numpy.int8": "doc",
    "tensorflow.experimental.numpy.int_": "doc",
    "tensorflow.experimental.numpy.ones": "doc",
    "tensorflow.experimental.numpy.size": "doc",
    "tensorflow.experimental.numpy.take": "doc",
    "tensorflow.compat.v1.sparse.concat": "doc",
    "tensorflow.compat.v1.sparse.matmul": "doc",
    "tensorflow.experimental.numpy.angle": "doc",
    "tensorflow.experimental.numpy.int16": "doc",
    "tensorflow.experimental.numpy.int32": "doc",
    "tensorflow.experimental.numpy.int64": "doc",
    "tensorflow.experimental.numpy.outer": "doc",
    "tensorflow.experimental.numpy.trace": "doc",
    "tensorflow.xla.experimental.compile": "doc",
    "tensorflow.compat.v1.random.shuffle": "doc",
    "tensorflow.compat.v1.sparse.reshape": "doc",
    "tensorflow.compat.v1.sparse.softmax": "doc",
    "tensorflow.compat.v1.train.SaverDef": "doc",
    "tensorflow.experimental.numpy.divide": "doc",
    "tensorflow.compat.v1.flags.text_wrap": "doc",
    "tensorflow.compat.v1.linalg.eigvalsh": "doc",
    "tensorflow.compat.v1.linalg.set_diag": "doc",
    "tensorflow.compat.v1.sparse.bincount": "doc",
    "tensorflow.compat.v1.sparse.to_dense": "doc",
    "tensorflow.experimental.numpy.isclose": "doc",
    "tensorflow.experimental.numpy.nanmean": "doc",
    "tensorflow.raw_ops.TensorSliceDataset": "doc",
    "tensorflow.sparse.sparse_dense_matmul": "doc",
    "tensorflow.xla.experimental.jit_scope": "doc",
    "tensorflow.experimental.numpy.linspace": "doc",
    "tensorflow.experimental.numpy.moveaxis": "doc",
    "tensorflow.experimental.numpy.multiply": "doc",
    "tensorflow.experimental.numpy.positive": "doc",
    "tensorflow.experimental.numpy.swapaxes": "doc",
    "tensorflow.compat.v1.lite.experimental": "doc",
    "tensorflow.compat.v1.sparse.from_dense": "doc",
    "tensorflow.compat.v1.sparse.reduce_max": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum": "doc",
    "tensorflow.compat.v1.summary.merge_all": "doc",
    "tensorflow.estimator.BaselineClassifier": "doc",
    "tensorflow.experimental.numpy.full_like": "doc",
    "tensorflow.experimental.numpy.iscomplex": "doc",
    "tensorflow.experimental.numpy.isrealobj": "doc",
    "tensorflow.raw_ops.ReaderSerializeState": "doc",
    "tensorflow.train.experimental.LossScale": "doc",
    "tensorflow.compat.v1.InteractiveSession": "doc",
    "tensorflow.compat.v1.image.central_crop": "doc",
    "tensorflow.compat.v1.random.multinomial": "doc",
    "tensorflow.compat.v1.sparse.expand_dims": "doc",
    "tensorflow.compat.v1.sparse.placeholder": "doc",
    "tensorflow.compat.v1.sparse.reset_shape": "doc",
    "tensorflow.compat.v1.train.FeatureLists": "doc",
    "tensorflow.compat.v1.train.LooperThread": "doc",
    "tensorflow.compat.v1.train.experimental": "doc",
    "tensorflow.compat.v1.types.experimental": "doc",
    "tensorflow.data.experimental.cardinality": "doc",
    "tensorflow.experimental.numpy.bitwise_or": "doc",
    "tensorflow.experimental.numpy.logical_or": "doc",
    "tensorflow.types.experimental.TensorLike": "doc",
    "tensorflow.compat.v1.app.flags.text_wrap": "doc",
    "tensorflow.compat.v1.distribute.Strategy": "doc",
    "tensorflow.compat.v1.linalg.experimental": "doc",
    "tensorflow.compat.v1.signal.inverse_stft": "doc",
    "tensorflow.compat.v1.sparse.SparseTensor": "doc",
    "tensorflow.compat.v1.sparse.cross_hashed": "doc",
    "tensorflow.compat.v1.sparse.segment_mean": "doc",
    "tensorflow.experimental.numpy.bitwise_xor": "doc",
    "tensorflow.experimental.numpy.logical_xor": "doc",
    "tensorflow.train.experimental.PythonState": "doc",
    "tensorflow.compat.v1.lite.experimental.nn": "doc",
    "tensorflow.compat.v1.train.list_variables": "doc",
    "tensorflow.lite.experimental.load_delegate": "doc",
    "tensorflow.compat.v1.losses.get_total_loss": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformV2": "doc",
    "tensorflow.compat.v1.Variable.SaveSliceInfo": "doc",
    "tensorflow.compat.v1.estimator.BestExporter": "doc",
    "tensorflow.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.train.experimental.FixedLossScale": "doc",
    "tensorflow.raw_ops.LogUniformCandidateSampler": "doc",
    "tensorflow.compat.v1.sparse.reduce_sum_sparse": "doc",
    "tensorflow.compat.v1.xla.experimental.compile": "doc",
    "tensorflow.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.train.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.RunMetadata.FunctionGraphs": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimator": "doc",
    "tensorflow.compat.v1.sparse.sparse_dense_matmul": "doc",
    "tensorflow.compat.v1.xla.experimental.jit_scope": "doc",
    "tensorflow.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.compat.v1.estimator.BaselineClassifier": "doc",
    "tensorflow.compat.v1.train.experimental.LossScale": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.unwrap": "doc",
    "tensorflow.compat.v1.data.experimental.cardinality": "doc",
    "tensorflow.compat.v1.types.experimental.TensorLike": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec": "doc",
    "tensorflow.compat.v1.train.experimental.PythonState": "doc",
    "tensorflow.compat.v1.lite.experimental.load_delegate": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.dynamic_rnn": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.UniformRowLength": "doc",
    "tensorflow.compat.v1.train.experimental.FixedLossScale": "doc",
    "tensorflow.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TfLiteRNNCell": "doc",
    "tensorflow.compat.v1.lite.experimental.nn.TFLiteLSTMCell": "doc",
    "tensorflow.compat.v1.train.FeatureLists.FeatureListEntry": "doc",
    "tensorflow.compat.v1.train.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.linalg.experimental.conjugate_gradient": "doc",
    "tensorflow.distribute.experimental.coordinator.PerWorkerValues": "doc",
    "tensorflow.compat.v1.lite.experimental.convert_op_hints_to_stubs": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationOptions": "doc",
    "tensorflow.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.lite.experimental.get_potentially_supported_ops": "doc",
    "tensorflow.compat.v1.train.experimental.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.compat.v1.train.experimental.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.compat.v1.train.experimental.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.data.experimental.service.register_dataset": "doc",
    "tensorflow.compat.v1.data.experimental.service.DispatcherConfig": "doc",
    "tensorflow.compat.v1.data.experimental.service.register_dataset": "doc",
    "tensorflow.image.transpose": "doc",
    "tensorflow.linalg.tensordot": "doc",
    "tensorflow.compat.v1.image.transpose": "doc",
    "tensorflow.compat.v1.linalg.tensordot": "doc",
    "tensorflow.compat.v1.linalg.transpose": "doc",
    "tensorflow.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_bridge": "doc",
    "tensorflow.nn.ctc_unique_labels": "doc",
    "tensorflow.raw_ops.LookupTableSizeV2": "doc",
    "tensorflow.raw_ops.PrelinearizeTuple": "doc",
    "tensorflow.raw_ops.SparseMatrixZeros": "doc",
    "tensorflow.raw_ops.TensorArraySizeV2": "doc",
    "tensorflow.raw_ops.TensorArraySizeV3": "doc",
    "tensorflow.distribute.DistributedValues": "doc",
    "tensorflow.compat.v1.nn.ctc_unique_labels": "doc",
    "tensorflow.compat.v1.train.AdadeltaOptimizer": "doc",
    "tensorflow.compat.v1.train.MomentumOptimizer": "doc",
    "tensorflow.compat.v1.train.MonitoredTrainingSession": "doc",
    "tensorflow.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.config.experimental.get_virtual_device_configuration": "doc",
    "tensorflow.compat.v1.config.experimental.set_virtual_device_configuration": "doc",
    "tensorflow.random.categorical": "doc",
    "tensorflow.compat.v1.random.categorical": "doc",
    "tensorflow.estimator.BinaryClassHead": "doc",
    "tensorflow.estimator.LinearRegressor": "doc",
    "tensorflow.compat.v1.estimator.BinaryClassHead": "doc",
    "tensorflow.compat.v1.estimator.LinearRegressor": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformInt": "doc",
    "tensorflow.estimator.RegressionHead": "doc",
    "tensorflow.estimator.SessionRunArgs": "doc",
    "tensorflow.compat.v1.estimator.RegressionHead": "doc",
    "tensorflow.compat.v1.estimator.SessionRunArgs": "doc",
    "tensorflow.raw_ops.ControlTrigger": "doc",
    "tensorflow.raw_ops.IdentityReader": "doc",
    "tensorflow.raw_ops.ResizeBilinear": "doc",
    "tensorflow.nn.sufficient_statistics": "doc",
    "tensorflow.compat.v1.IdentityReader": "doc",
    "tensorflow.compat.v1.no_regularizer": "doc",
    "tensorflow.compat.v1.train.input_producer": "doc",
    "tensorflow.compat.v1.train.sdca_optimizer": "doc",
    "tensorflow.compat.v1.nn.sufficient_statistics": "doc",
    "tensorflow.compat.v1.train.SyncReplicasOptimizer": "doc",
    "tensorflow.compat.v1.train.cosine_decay_restarts": "doc",
    "tensorflow.config.get_visible_devices": "doc",
    "tensorflow.config.set_visible_devices": "doc",
    "tensorflow.compat.v1.config.get_visible_devices": "doc",
    "tensorflow.compat.v1.config.set_visible_devices": "doc",
    "tensorflow.estimator.BaselineEstimator": "doc",
    "tensorflow.experimental.async_clear_error": "doc",
    "tensorflow.data.experimental.DistributeOptions": "doc",
    "tensorflow.compat.v1.estimator.BaselineEstimator": "doc",
    "tensorflow.compat.v1.MetaGraphDef.SignatureDefEntry": "doc",
    "tensorflow.compat.v1.experimental.async_clear_error": "doc",
    "tensorflow.compat.v1.tpu.experimental.AdagradParameters": "doc",
    "tensorflow.compat.v1.data.experimental.DistributeOptions": "doc",
    "tensorflow.compat.v1.data.experimental.OptionalStructure": "doc",
    "tensorflow.compat.v1.ReaderBase": "doc",
    "tensorflow.experimental.numpy.kron": "doc",
    "tensorflow.experimental.numpy.array": "doc",
    "tensorflow.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.compat.v1.random.stateless_parameterized_truncated_normal": "doc",
    "tensorflow.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_bridge": "doc",
    "tensorflow.dtypes.saturate_cast": "doc",
    "tensorflow.signal.kaiser_window": "doc",
    "tensorflow.compat.v1.gfile.ListDirectory": "doc",
    "tensorflow.compat.v1.image.resize_images": "doc",
    "tensorflow.compat.v1.dtypes.saturate_cast": "doc",
    "tensorflow.compat.v1.signal.kaiser_window": "doc",
    "tensorflow.compat.v1.train.SessionCreator": "doc",
    "tensorflow.compat.v1.train.SessionRunArgs": "doc",
    "tensorflow.raw_ops.UniformCandidateSampler": "doc",
    "tensorflow.compat.dimension_at_index": "doc",
    "tensorflow.raw_ops.BatchMatrixInverse": "doc",
    "tensorflow.raw_ops.ResizeBilinearGrad": "doc",
    "tensorflow.raw_ops.StridedSliceAssign": "doc",
    "tensorflow.raw_ops.WriteScalarSummary": "doc",
    "tensorflow.compat.v1.dimension_at_index": "doc",
    "tensorflow.compat.v1.flags.register_validator": "doc",
    "tensorflow.compat.v1.train.inverse_time_decay": "doc",
    "tensorflow.compat.v1.compat.dimension_at_index": "doc",
    "tensorflow.compat.v1.app.flags.register_validator": "doc",
    "tensorflow.experimental.function_executor_type": "doc",
    "tensorflow.compat.v1.experimental.function_executor_type": "doc",
    "tensorflow.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.compat.v1.distribute.experimental.CentralStorageStrategy": "doc",
    "tensorflow.random.stateless_categorical": "doc",
    "tensorflow.compat.v1.random.stateless_categorical": "doc",
    "tensorflow.compat.v1.random.stateless_multinomial": "doc",
    "tensorflow.raw_ops.BoostedTreesSerializeEnsemble": "doc",
    "tensorflow.compat.v1.distributions.Bernoulli": "doc",
    "tensorflow.compat.v1.tpu.rewrite": "doc",
    "tensorflow.compat.v1.manip.reshape": "doc",
    "tensorflow.compat.v1.manip.reverse": "doc",
    "tensorflow.data.experimental.service": "doc",
    "tensorflow.autograph.experimental.Feature": "doc",
    "tensorflow.compat.v1.data.experimental.service": "doc",
    "tensorflow.data.experimental.service.distribute": "doc",
    "tensorflow.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.data.experimental.service.WorkerServer": "doc",
    "tensorflow.compat.v1.autograph.experimental.Feature": "doc",
    "tensorflow.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.compat.v1.data.experimental.service.distribute": "doc",
    "tensorflow.compat.v1.data.experimental.service.WorkerConfig": "doc",
    "tensorflow.compat.v1.data.experimental.service.from_dataset_id": "doc",
    "tensorflow.raw_ops.CheckNumerics": "doc",
    "tensorflow.raw_ops.EuclideanNorm": "doc",
    "tensorflow.raw_ops.FilterDataset": "doc",
    "tensorflow.raw_ops.LeakyReluGrad": "doc",
    "tensorflow.raw_ops.TensorDataset": "doc",
    "tensorflow.compat.v1.trainable_variables": "doc",
    "tensorflow.raw_ops.ConditionalAccumulator": "doc",
    "tensorflow.raw_ops.ReaderSerializeStateV2": "doc",
    "tensorflow.compat.v1.ConditionalAccumulator": "doc",
    "tensorflow.mlir": "doc",
    "tensorflow.unique": "doc",
    "tensorflow.io.gfile": "doc",
    "tensorflow.estimator": "doc",
    "tensorflow.gradients": "doc",
    "tensorflow.image.psnr": "doc",
    "tensorflow.image.ssim": "doc",
    "tensorflow.linalg.eig": "doc",
    "tensorflow.math.ndtri": "doc",
    "tensorflow.linalg.eigh": "doc",
    "tensorflow.linalg.expm": "doc",
    "tensorflow.linalg.logm": "doc",
    "tensorflow.signal.ifft": "doc",
    "tensorflow.data.Options": "doc",
    "tensorflow.image.resize": "doc",
    "tensorflow.io.gfile.copy": "doc",
    "tensorflow.io.gfile.glob": "doc",
    "tensorflow.io.gfile.stat": "doc",
    "tensorflow.io.gfile.walk": "doc",
    "tensorflow.io.gfile.GFile": "doc",
    "tensorflow.io.gfile.isdir": "doc",
    "tensorflow.io.gfile.mkdir": "doc",
    "tensorflow.raw_ops.Invert": "doc",
    "tensorflow.compat.v1.mlir": "doc",
    "tensorflow.autograph.trace": "doc",
    "tensorflow.io.gfile.exists": "doc",
    "tensorflow.io.gfile.remove": "doc",
    "tensorflow.io.gfile.rmtree": "doc",
    "tensorflow.raw_ops.Barrier": "doc",
    "tensorflow.train.BytesList": "doc",
    "tensorflow.train.FloatList": "doc",
    "tensorflow.train.ServerDef": "doc",
    "tensorflow.io.gfile.listdir": "doc",
    "tensorflow.raw_ops.UniqueV2": "doc",
    "tensorflow.compat.v1.unique": "doc",
    "tensorflow.raw_ops.Bucketize": "doc",
    "tensorflow.raw_ops.NextAfter": "doc",
    "tensorflow.estimator.EvalSpec": "doc",
    "tensorflow.estimator.Exporter": "doc",
    "tensorflow.compat.v1.io.gfile": "doc",
    "tensorflow.estimator.Estimator": "doc",
    "tensorflow.estimator.MultiHead": "doc",
    "tensorflow.estimator.RunConfig": "doc",
    "tensorflow.estimator.TrainSpec": "doc",
    "tensorflow.estimator.VocabInfo": "doc",
    "tensorflow.compat.v1.AttrValue": "doc",
    "tensorflow.compat.v1.GraphKeys": "doc",
    "tensorflow.compat.v1.estimator": "doc",
    "tensorflow.compat.v1.gradients": "doc",
    "tensorflow.estimator.FeedFnHook": "doc",
    "tensorflow.compat.v1.image.psnr": "doc",
    "tensorflow.compat.v1.image.ssim": "doc",
    "tensorflow.compat.v1.math.ndtri": "doc",
    "tensorflow.compat.v1.gfile.MkDir": "doc",
    "tensorflow.compat.v1.linalg.eigh": "doc",
    "tensorflow.compat.v1.linalg.expm": "doc",
    "tensorflow.compat.v1.linalg.logm": "doc",
    "tensorflow.compat.v1.signal.ifft": "doc",
    "tensorflow.estimator.DNNEstimator": "doc",
    "tensorflow.estimator.FinalOpsHook": "doc",
    "tensorflow.estimator.ProfilerHook": "doc",
    "tensorflow.compat.v1.data.Options": "doc",
    "tensorflow.compat.v1.gfile.Remove": "doc",
    "tensorflow.compat.v1.image.resize": "doc",
    "tensorflow.estimator.DNNClassifier": "doc",
    "tensorflow.estimator.EstimatorSpec": "doc",
    "tensorflow.estimator.FinalExporter": "doc",
    "tensorflow.estimator.NanTensorHook": "doc",
    "tensorflow.compat.v1.estimator.tpu": "doc",
    "tensorflow.compat.v1.io.gfile.copy": "doc",
    "tensorflow.compat.v1.io.gfile.glob": "doc",
    "tensorflow.compat.v1.io.gfile.stat": "doc",
    "tensorflow.compat.v1.io.gfile.walk": "doc",
    "tensorflow.estimator.LatestExporter": "doc",
    "tensorflow.estimator.SessionRunHook": "doc",
    "tensorflow.estimator.StopAtStepHook": "doc",
    "tensorflow.compat.v1.io.gfile.GFile": "doc",
    "tensorflow.compat.v1.io.gfile.isdir": "doc",
    "tensorflow.compat.v1.io.gfile.mkdir": "doc",
    "tensorflow.compat.v1.lite.constants": "doc",
    "tensorflow.compat.v1.train.Scaffold": "doc",
    "tensorflow.estimator.LinearEstimator": "doc",
    "tensorflow.estimator.StepCounterHook": "doc",
    "tensorflow.compat.v1.autograph.trace": "doc",
    "tensorflow.compat.v1.io.gfile.exists": "doc",
    "tensorflow.compat.v1.io.gfile.remove": "doc",
    "tensorflow.compat.v1.io.gfile.rmtree": "doc",
    "tensorflow.compat.v1.train.BytesList": "doc",
    "tensorflow.compat.v1.train.FloatList": "doc",
    "tensorflow.compat.v1.train.ServerDef": "doc",
    "tensorflow.estimator.SessionRunValues": "doc",
    "tensorflow.estimator.SummarySaverHook": "doc",
    "tensorflow.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.compat.v1.estimator.inputs": "doc",
    "tensorflow.compat.v1.io.gfile.listdir": "doc",
    "tensorflow.estimator.BaselineRegressor": "doc",
    "tensorflow.estimator.LoggingTensorHook": "doc",
    "tensorflow.estimator.SecondOrStepTimer": "doc",
    "tensorflow.estimator.SessionRunContext": "doc",
    "tensorflow.estimator.WarmStartSettings": "doc",
    "tensorflow.estimator.train_and_evaluate": "doc",
    "tensorflow.compat.v1.estimator.EvalSpec": "doc",
    "tensorflow.compat.v1.estimator.Exporter": "doc",
    "tensorflow.estimator.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.estimator.Estimator": "doc",
    "tensorflow.compat.v1.estimator.MultiHead": "doc",
    "tensorflow.compat.v1.estimator.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.TrainSpec": "doc",
    "tensorflow.compat.v1.estimator.VocabInfo": "doc",
    "tensorflow.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.estimator.FeedFnHook": "doc",
    "tensorflow.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.estimator.PoissonRegressionHead": "doc",
    "tensorflow.compat.v1.saved_model.constants": "doc",
    "tensorflow.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.estimator.LogisticRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.DNNEstimator": "doc",
    "tensorflow.compat.v1.estimator.FinalOpsHook": "doc",
    "tensorflow.compat.v1.estimator.ProfilerHook": "doc",
    "tensorflow.estimator.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.estimator.DNNClassifier": "doc",
    "tensorflow.compat.v1.estimator.EstimatorSpec": "doc",
    "tensorflow.compat.v1.estimator.FinalExporter": "doc",
    "tensorflow.compat.v1.estimator.NanTensorHook": "doc",
    "tensorflow.compat.v1.estimator.tpu.RunConfig": "doc",
    "tensorflow.compat.v1.estimator.tpu.TPUConfig": "doc",
    "tensorflow.compat.v1.estimator.LatestExporter": "doc",
    "tensorflow.compat.v1.estimator.SessionRunHook": "doc",
    "tensorflow.compat.v1.estimator.StopAtStepHook": "doc",
    "tensorflow.compat.v1.train.assert_global_step": "doc",
    "tensorflow.compat.v1.estimator.LinearEstimator": "doc",
    "tensorflow.compat.v1.estimator.StepCounterHook": "doc",
    "tensorflow.data.experimental.get_single_element": "doc",
    "tensorflow.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.estimator.SessionRunValues": "doc",
    "tensorflow.compat.v1.estimator.SummarySaverHook": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLimits": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowSplits": "doc",
    "tensorflow.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.compat.v1.estimator.BaselineRegressor": "doc",
    "tensorflow.compat.v1.estimator.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.estimator.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.estimator.SessionRunContext": "doc",
    "tensorflow.compat.v1.estimator.WarmStartSettings": "doc",
    "tensorflow.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.compat.v1.estimator.train_and_evaluate": "doc",
    "tensorflow.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.estimator.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesEstimator": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesRegressor": "doc",
    "tensorflow.compat.v1.estimator.PoissonRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.inputs.numpy_input_fn": "doc",
    "tensorflow.compat.v1.estimator.BoostedTreesClassifier": "doc",
    "tensorflow.compat.v1.estimator.LogisticRegressionHead": "doc",
    "tensorflow.compat.v1.estimator.inputs.pandas_input_fn": "doc",
    "tensorflow.compat.v1.estimator.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.data.experimental.get_single_element": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedEstimator": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedRegressor": "doc",
    "tensorflow.compat.v1.estimator.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.estimator.DNNLinearCombinedClassifier": "doc",
    "tensorflow.compat.v1.estimator.regressor_parse_example_spec": "doc",
    "tensorflow.compat.v1.estimator.classifier_parse_example_spec": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op_with_restore": "doc",
    "tensorflow.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.compat.v1.distribute.experimental.CommunicationImplementation": "doc",
    "tensorflow.math.is_non_decreasing": "doc",
    "tensorflow.losses.MeanAbsoluteError": "doc",
    "tensorflow.raw_ops.InterleaveDataset": "doc",
    "tensorflow.compat.v1.is_non_decreasing": "doc",
    "tensorflow.compat.v1.math.is_non_decreasing": "doc",
    "tensorflow.compat.v1.debugging.is_non_decreasing": "doc",
    "tensorflow.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.compat.v1.data.experimental.MapVectorizationOptions": "doc",
    "tensorflow.make_ndarray": "doc",
    "tensorflow.random.experimental": "doc",
    "tensorflow.compat.v1.make_ndarray": "doc",
    "tensorflow.experimental.numpy.finfo": "doc",
    "tensorflow.experimental.numpy.einsum": "doc",
    "tensorflow.experimental.numpy.random": "doc",
    "tensorflow.random.experimental.Algorithm": "doc",
    "tensorflow.compat.v1.random.experimental": "doc",
    "tensorflow.experimental.numpy.random.rand": "doc",
    "tensorflow.experimental.numpy.random.seed": "doc",
    "tensorflow.experimental.numpy.random.randn": "doc",
    "tensorflow.experimental.numpy.random.random": "doc",
    "tensorflow.random.experimental.create_rng_state": "doc",
    "tensorflow.random.experimental.stateless_fold_in": "doc",
    "tensorflow.compat.v1.random.experimental.Algorithm": "doc",
    "tensorflow.compat.v1.random.experimental.create_rng_state": "doc",
    "tensorflow.compat.v1.random.experimental.stateless_fold_in": "doc",
    "tensorflow.raw_ops.IteratorV2": "doc",
    "tensorflow.raw_ops.ReaderRead": "doc",
    "tensorflow.raw_ops.Reciprocal": "doc",
    "tensorflow.raw_ops.ScatterMax": "doc",
    "tensorflow.lite.TFLiteConverter": "doc",
    "tensorflow.raw_ops.StringNGrams": "doc",
    "tensorflow.raw_ops.OptimizeDataset": "doc",
    "tensorflow.raw_ops.PriorityQueueV2": "doc",
    "tensorflow.raw_ops.PyFuncStateless": "doc",
    "tensorflow.raw_ops.RegisterDataset": "doc",
    "tensorflow.raw_ops.SparseSliceGrad": "doc",
    "tensorflow.compat.v1.model_variables": "doc",
    "tensorflow.compat.v1.losses.huber_loss": "doc",
    "tensorflow.compat.v1.lite.TFLiteConverter": "doc",
    "tensorflow.compat.v1.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.image.resize_bilinear": "doc",
    "tensorflow.experimental.numpy.take_along_axis": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassParser": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.ResidualWrapper": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.make_decorator": "doc",
    "tensorflow.raw_ops.ExperimentalNonSerializableDataset": "doc",
    "tensorflow.linalg.LinearOperator": "doc",
    "tensorflow.compat.v1.train.SessionRunHook": "doc",
    "tensorflow.feature_column.indicator_column": "doc",
    "tensorflow.compat.v1.linalg.LinearOperator": "doc",
    "tensorflow.compat.v1.feature_column.indicator_column": "doc",
    "tensorflow.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.get_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.get_intra_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_inter_op_parallelism_threads": "doc",
    "tensorflow.compat.v1.config.threading.set_intra_op_parallelism_threads": "doc",
    "tensorflow.nn.batch_normalization": "doc",
    "tensorflow.nn.isotonic_regression": "doc",
    "tensorflow.raw_ops.AllCandidateSampler": "doc",
    "tensorflow.raw_ops.AssignAddVariableOp": "doc",
    "tensorflow.raw_ops.AssignSubVariableOp": "doc",
    "tensorflow.raw_ops.MultiDeviceIterator": "doc",
    "tensorflow.raw_ops.TensorListScatterV2": "doc",
    "tensorflow.compat.v1.nn.batch_normalization": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.MethodNameUpdater": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.is_valid_signature": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.build_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.predict_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.regression_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.signature_def_utils.classification_signature_def": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformIntV2": "doc",
    "tensorflow.experimental.numpy.ascontiguousarray": "doc",
    "tensorflow.io.write_graph": "doc",
    "tensorflow.compat.v1.io.write_graph": "doc",
    "tensorflow.raw_ops.UniqueDataset": "doc",
    "tensorflow.debugging.assert_shapes": "doc",
    "tensorflow.compat.v1.all_variables": "doc",
    "tensorflow.compat.v1.debugging.assert_shapes": "doc",
    "tensorflow.compat.v1.distributions.kl_divergence": "doc",
    "tensorflow.linalg.LinearOperatorInversion": "doc",
    "tensorflow.linalg.banded_triangular_solve": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgs": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVars": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV2": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV3": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBias": "doc",
    "tensorflow.raw_ops.QuantizedResizeBilinear": "doc",
    "tensorflow.raw_ops.TPUEmbeddingActivations": "doc",
    "tensorflow.compat.v1.matrix_triangular_solve": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorInversion": "doc",
    "tensorflow.data.experimental.parallel_interleave": "doc",
    "tensorflow.compat.v1.data.experimental.parallel_interleave": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.CurrentModuleFilter": "doc",
    "tensorflow.config.functions_run_eagerly": "doc",
    "tensorflow.config.run_functions_eagerly": "doc",
    "tensorflow.compat.v1.config.functions_run_eagerly": "doc",
    "tensorflow.compat.v1.config.run_functions_eagerly": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantizeV4Grad": "doc",
    "tensorflow.compat.v1.user_ops": "doc",
    "tensorflow.random.stateless_normal": "doc",
    "tensorflow.random.truncated_normal": "doc",
    "tensorflow.compat.v1.user_ops.my_fact": "doc",
    "tensorflow.compat.v1.random.stateless_normal": "doc",
    "tensorflow.compat.v1.random.truncated_normal": "doc",
    "tensorflow.raw_ops.BoostedTreesDeserializeEnsemble": "doc",
    "tensorflow.compat.v1.resource_loader.get_root_dir_with_all_resources": "doc",
    "tensorflow.compat.v1.io.PriorityQueue": "doc",
    "tensorflow.reshape": "doc",
    "tensorflow.reverse": "doc",
    "tensorflow.raw_ops.EluGrad": "doc",
    "tensorflow.raw_ops.InvGrad": "doc",
    "tensorflow.raw_ops.LRNGrad": "doc",
    "tensorflow.raw_ops.Reshape": "doc",
    "tensorflow.raw_ops.Reverse": "doc",
    "tensorflow.compat.v1.reshape": "doc",
    "tensorflow.compat.v1.reverse": "doc",
    "tensorflow.raw_ops.FusedBatchNorm": "doc",
    "tensorflow.experimental.numpy.ndarray": "doc",
    "tensorflow.experimental.numpy.reshape": "doc",
    "tensorflow.random.stateless_poisson": "doc",
    "tensorflow.compat.v1.random.stateless_poisson": "doc",
    "tensorflow.lite": "doc",
    "tensorflow.ones": "doc",
    "tensorflow.size": "doc",
    "tensorflow.image": "doc",
    "tensorflow.slice": "doc",
    "tensorflow.train": "doc",
    "tensorflow.tuple": "doc",
    "tensorflow.types": "doc",
    "tensorflow.divide": "doc",
    "tensorflow.dtypes": "doc",
    "tensorflow.gather": "doc",
    "tensorflow.linalg": "doc",
    "tensorflow.signal": "doc",
    "tensorflow.unstack": "doc",
    "tensorflow.linspace": "doc",
    "tensorflow.multiply": "doc",
    "tensorflow.is_tensor": "doc",
    "tensorflow.linalg.lu": "doc",
    "tensorflow.linalg.qr": "doc",
    "tensorflow.get_logger": "doc",
    "tensorflow.linalg.det": "doc",
    "tensorflow.linalg.eye": "doc",
    "tensorflow.linalg.inv": "doc",
    "tensorflow.linalg.svd": "doc",
    "tensorflow.logical_or": "doc",
    "tensorflow.math.angle": "doc",
    "tensorflow.signal.dct": "doc",
    "tensorflow.signal.fft": "doc",
    "tensorflow.dtypes.cast": "doc",
    "tensorflow.image.rot90": "doc",
    "tensorflow.linalg.diag": "doc",
    "tensorflow.linalg.pinv": "doc",
    "tensorflow.lite.OpsSet": "doc",
    "tensorflow.math.divide": "doc",
    "tensorflow.nn.ctc_loss": "doc",
    "tensorflow.nn.in_top_k": "doc",
    "tensorflow.nn.softplus": "doc",
    "tensorflow.no_gradient": "doc",
    "tensorflow.signal.idct": "doc",
    "tensorflow.signal.mdct": "doc",
    "tensorflow.signal.rfft": "doc",
    "tensorflow.signal.stft": "doc",
    "tensorflow.switch_case": "doc",
    "tensorflow.OptionalSpec": "doc",
    "tensorflow.dtypes.DType": "doc",
    "tensorflow.linalg.cross": "doc",
    "tensorflow.linalg.lstsq": "doc",
    "tensorflow.linalg.solve": "doc",
    "tensorflow.linalg.sqrtm": "doc",
    "tensorflow.linalg.trace": "doc",
    "tensorflow.raw_ops.Size": "doc",
    "tensorflow.raw_ops.Tile": "doc",
    "tensorflow.signal.fft2d": "doc",
    "tensorflow.signal.fft3d": "doc",
    "tensorflow.signal.frame": "doc",
    "tensorflow.signal.irfft": "doc",
    "tensorflow.train.JobDef": "doc",
    "tensorflow.image.is_jpeg": "doc",
    "tensorflow.linalg.logdet": "doc",
    "tensorflow.linalg.matmul": "doc",
    "tensorflow.linalg.matvec": "doc",
    "tensorflow.math.in_top_k": "doc",
    "tensorflow.math.multiply": "doc",
    "tensorflow.math.softplus": "doc",
    "tensorflow.nn.dilation2d": "doc",
    "tensorflow.raw_ops.Angle": "doc",
    "tensorflow.raw_ops.Slice": "doc",
    "tensorflow.raw_ops.Stage": "doc",
    "tensorflow.raw_ops.While": "doc",
    "tensorflow.signal.ifft2d": "doc",
    "tensorflow.signal.ifft3d": "doc",
    "tensorflow.signal.rfft2d": "doc",
    "tensorflow.signal.rfft3d": "doc",
    "tensorflow.summary.image": "doc",
    "tensorflow.summary.write": "doc",
    "tensorflow.train.Example": "doc",
    "tensorflow.dtypes.complex": "doc",
    "tensorflow.linalg.adjoint": "doc",
    "tensorflow.linalg.slogdet": "doc",
    "tensorflow.raw_ops.Gather": "doc",
    "tensorflow.signal.irfft2d": "doc",
    "tensorflow.signal.irfft3d": "doc",
    "tensorflow.summary.scalar": "doc",
    "tensorflow.compat.v1.lite": "doc",
    "tensorflow.compat.v1.ones": "doc",
    "tensorflow.compat.v1.size": "doc",
    "tensorflow.dtypes.as_dtype": "doc",
    "tensorflow.linalg.cholesky": "doc",
    "tensorflow.linalg.lu_solve": "doc",
    "tensorflow.lite.TargetSpec": "doc",
    "tensorflow.math.logical_or": "doc",
    "tensorflow.raw_ops.MapSize": "doc",
    "tensorflow.signal.fftshift": "doc",
    "tensorflow.train.Int64List": "doc",
    "tensorflow.compat.v1.angle": "doc",
    "tensorflow.compat.v1.gfile": "doc",
    "tensorflow.compat.v1.image": "doc",
    "tensorflow.compat.v1.slice": "doc",
    "tensorflow.compat.v1.trace": "doc",
    "tensorflow.compat.v1.train": "doc",
    "tensorflow.compat.v1.tuple": "doc",
    "tensorflow.compat.v1.types": "doc",
    "tensorflow.RegisterGradient": "doc",
    "tensorflow.image.adjust_hue": "doc",
    "tensorflow.image.decode_bmp": "doc",
    "tensorflow.image.decode_gif": "doc",
    "tensorflow.image.decode_png": "doc",
    "tensorflow.image.encode_png": "doc",
    "tensorflow.image.hsv_to_rgb": "doc",
    "tensorflow.image.random_hue": "doc",
    "tensorflow.image.rgb_to_hsv": "doc",
    "tensorflow.image.rgb_to_yiq": "doc",
    "tensorflow.image.rgb_to_yuv": "doc",
    "tensorflow.image.yiq_to_rgb": "doc",
    "tensorflow.image.yuv_to_rgb": "doc",
    "tensorflow.linalg.band_part": "doc",
    "tensorflow.linalg.diag_part": "doc",
    "tensorflow.lite.Interpreter": "doc",
    "tensorflow.math.logical_xor": "doc",
    "tensorflow.raw_ops.DiagPart": "doc",
    "tensorflow.raw_ops.IsFinite": "doc",
    "tensorflow.raw_ops.LinSpace": "doc",
    "tensorflow.raw_ops.OnesLike": "doc",
    "tensorflow.raw_ops.Softplus": "doc",
    "tensorflow.signal.ifftshift": "doc",
    "tensorflow.train.Checkpoint": "doc",
    "tensorflow.train.ClusterDef": "doc",
    "tensorflow.compat.v1.divide": "doc",
    "tensorflow.compat.v1.dtypes": "doc",
    "tensorflow.compat.v1.gather": "doc",
    "tensorflow.compat.v1.linalg": "doc",
    "tensorflow.compat.v1.signal": "doc",
    "tensorflow.image.decode_jpeg": "doc",
    "tensorflow.image.encode_jpeg": "doc",
    "tensorflow.image.random_crop": "doc",
    "tensorflow.image.sobel_edges": "doc",
    "tensorflow.raw_ops.LogicalOr": "doc",
    "tensorflow.raw_ops.QueueSize": "doc",
    "tensorflow.raw_ops.StagePeek": "doc",
    "tensorflow.raw_ops.StageSize": "doc",
    "tensorflow.sysconfig.get_lib": "doc",
    "tensorflow.train.ClusterSpec": "doc",
    "tensorflow.train.Coordinator": "doc",
    "tensorflow.compat.v1.unstack": "doc",
    "tensorflow.image.ResizeMethod": "doc",
    "tensorflow.image.adjust_gamma": "doc",
    "tensorflow.image.decode_image": "doc",
    "tensorflow.image.flip_up_down": "doc",
    "tensorflow.linalg.matrix_rank": "doc",
    "tensorflow.raw_ops.BitwiseAnd": "doc",
    "tensorflow.raw_ops.BitwiseXor": "doc",
    "tensorflow.raw_ops.Dequantize": "doc",
    "tensorflow.raw_ops.Dilation2D": "doc",
    "tensorflow.raw_ops.NthElement": "doc",
    "tensorflow.raw_ops.QuantizeV2": "doc",
    "tensorflow.raw_ops.Requantize": "doc",
    "tensorflow.raw_ops.VariableV2": "doc",
    "tensorflow.raw_ops.ZipDataset": "doc",
    "tensorflow.signal.hann_window": "doc",
    "tensorflow.compat.v1.linspace": "doc",
    "tensorflow.compat.v1.multiply": "doc",
    "tensorflow.compat.v1.quantize": "doc",
    "tensorflow.nn.weighted_moments": "doc",
    "tensorflow.raw_ops.QueueSizeV2": "doc",
    "tensorflow.signal.inverse_mdct": "doc",
    "tensorflow.train.load_variable": "doc",
    "tensorflow.compat.v1.diag_part": "doc",
    "tensorflow.compat.v1.is_tensor": "doc",
    "tensorflow.compat.v1.lin_space": "doc",
    "tensorflow.compat.v1.linalg.lu": "doc",
    "tensorflow.compat.v1.linalg.qr": "doc",
    "tensorflow.UnconnectedGradients": "doc",
    "tensorflow.raw_ops.WriteSummary": "doc",
    "tensorflow.signal.vorbis_window": "doc",
    "tensorflow.compat.v1.NoGradient": "doc",
    "tensorflow.compat.v1.dequantize": "doc",
    "tensorflow.compat.v1.get_logger": "doc",
    "tensorflow.compat.v1.gfile.Copy": "doc",
    "tensorflow.compat.v1.gfile.Glob": "doc",
    "tensorflow.compat.v1.gfile.Open": "doc",
    "tensorflow.compat.v1.gfile.Stat": "doc",
    "tensorflow.compat.v1.gfile.Walk": "doc",
    "tensorflow.compat.v1.linalg.det": "doc",
    "tensorflow.compat.v1.linalg.eye": "doc",
    "tensorflow.compat.v1.linalg.inv": "doc",
    "tensorflow.compat.v1.linalg.svd": "doc",
    "tensorflow.compat.v1.logical_or": "doc",
    "tensorflow.compat.v1.math.angle": "doc",
    "tensorflow.compat.v1.signal.dct": "doc",
    "tensorflow.compat.v1.signal.fft": "doc",
    "tensorflow.image.adjust_contrast": "doc",
    "tensorflow.image.crop_and_resize": "doc",
    "tensorflow.image.extract_glimpse": "doc",
    "tensorflow.image.extract_patches": "doc",
    "tensorflow.image.flip_left_right": "doc",
    "tensorflow.image.random_contrast": "doc",
    "tensorflow.image.resize_with_pad": "doc",
    "tensorflow.image.ssim_multiscale": "doc",
    "tensorflow.image.total_variation": "doc",
    "tensorflow.linalg.cholesky_solve": "doc",
    "tensorflow.linalg.lu_reconstruct": "doc",
    "tensorflow.quantization.quantize": "doc",
    "tensorflow.signal.hamming_window": "doc",
    "tensorflow.train.SequenceExample": "doc",
    "tensorflow.train.load_checkpoint": "doc",
    "tensorflow.compat.v1.dtypes.cast": "doc",
    "tensorflow.compat.v1.gfile.GFile": "doc",
    "tensorflow.compat.v1.image.rot90": "doc",
    "tensorflow.compat.v1.linalg.diag": "doc",
    "tensorflow.compat.v1.linalg.pinv": "doc",
    "tensorflow.compat.v1.lite.OpHint": "doc",
    "tensorflow.compat.v1.lite.OpsSet": "doc",
    "tensorflow.compat.v1.logical_xor": "doc",
    "tensorflow.compat.v1.math.divide": "doc",
    "tensorflow.compat.v1.nn.ctc_loss": "doc",
    "tensorflow.compat.v1.nn.in_top_k": "doc",
    "tensorflow.compat.v1.nn.softplus": "doc",
    "tensorflow.compat.v1.no_gradient": "doc",
    "tensorflow.compat.v1.signal.idct": "doc",
    "tensorflow.compat.v1.signal.mdct": "doc",
    "tensorflow.compat.v1.signal.rfft": "doc",
    "tensorflow.compat.v1.signal.stft": "doc",
    "tensorflow.compat.v1.switch_case": "doc",
    "tensorflow.compat.v1.train.Saver": "doc",
    "tensorflow.compat.v1.train.batch": "doc",
    "tensorflow.image.grayscale_to_rgb": "doc",
    "tensorflow.image.rgb_to_grayscale": "doc",
    "tensorflow.signal.overlap_and_add": "doc",
    "tensorflow.compat.v1.OptionalSpec": "doc",
    "tensorflow.compat.v1.dtypes.DType": "doc",
    "tensorflow.compat.v1.gfile.Exists": "doc",
    "tensorflow.compat.v1.linalg.cross": "doc",
    "tensorflow.compat.v1.linalg.lstsq": "doc",
    "tensorflow.compat.v1.linalg.solve": "doc",
    "tensorflow.compat.v1.linalg.sqrtm": "doc",
    "tensorflow.compat.v1.linalg.trace": "doc",
    "tensorflow.compat.v1.signal.fft2d": "doc",
    "tensorflow.compat.v1.signal.fft3d": "doc",
    "tensorflow.compat.v1.signal.frame": "doc",
    "tensorflow.compat.v1.signal.irfft": "doc",
    "tensorflow.compat.v1.train.JobDef": "doc",
    "tensorflow.distribute.InputOptions": "doc",
    "tensorflow.image.adjust_brightness": "doc",
    "tensorflow.image.adjust_saturation": "doc",
    "tensorflow.image.random_brightness": "doc",
    "tensorflow.image.random_saturation": "doc",
    "tensorflow.linalg.matrix_transpose": "doc",
    "tensorflow.linalg.tensor_diag_part": "doc",
    "tensorflow.linalg.triangular_solve": "doc",
    "tensorflow.losses.CosineSimilarity": "doc",
    "tensorflow.quantization.dequantize": "doc",
    "tensorflow.train.CheckpointManager": "doc",
    "tensorflow.train.CheckpointOptions": "doc",
    "tensorflow.train.JobDef.TasksEntry": "doc",
    "tensorflow.train.latest_checkpoint": "doc",
    "tensorflow.compat.v1.Summary.Value": "doc",
    "tensorflow.compat.v1.image.is_jpeg": "doc",
    "tensorflow.compat.v1.linalg.logdet": "doc",
    "tensorflow.compat.v1.linalg.matmul": "doc",
    "tensorflow.compat.v1.linalg.matvec": "doc",
    "tensorflow.compat.v1.logging.fatal": "doc",
    "tensorflow.compat.v1.math.in_top_k": "doc",
    "tensorflow.compat.v1.math.multiply": "doc",
    "tensorflow.compat.v1.math.softplus": "doc",
    "tensorflow.compat.v1.nn.dilation2d": "doc",
    "tensorflow.compat.v1.nn.relu_layer": "doc",
    "tensorflow.compat.v1.nn.static_rnn": "doc",
    "tensorflow.compat.v1.signal.ifft2d": "doc",
    "tensorflow.compat.v1.signal.ifft3d": "doc",
    "tensorflow.compat.v1.signal.rfft2d": "doc",
    "tensorflow.compat.v1.signal.rfft3d": "doc",
    "tensorflow.compat.v1.summary.image": "doc",
    "tensorflow.compat.v1.train.Example": "doc",
    "tensorflow.image.extract_jpeg_shape": "doc",
    "tensorflow.linalg.tridiagonal_solve": "doc",
    "tensorflow.raw_ops.AssignVariableOp": "doc",
    "tensorflow.raw_ops.DynamicPartition": "doc",
    "tensorflow.raw_ops.ExtractGlimpseV2": "doc",
    "tensorflow.raw_ops.TensorListGather": "doc",
    "tensorflow.raw_ops.TensorListResize": "doc",
    "tensorflow.raw_ops.TextLineReaderV2": "doc",
    "tensorflow.raw_ops.TridiagonalSolve": "doc",
    "tensorflow.raw_ops.UniqueWithCounts": "doc",
    "tensorflow.compat.v1.dtypes.complex": "doc",
    "tensorflow.compat.v1.linalg.adjoint": "doc",
    "tensorflow.compat.v1.linalg.slogdet": "doc",
    "tensorflow.compat.v1.signal.irfft2d": "doc",
    "tensorflow.compat.v1.signal.irfft3d": "doc",
    "tensorflow.compat.v1.summary.scalar": "doc",
    "tensorflow.image.adjust_jpeg_quality": "doc",
    "tensorflow.image.convert_image_dtype": "doc",
    "tensorflow.image.draw_bounding_boxes": "doc",
    "tensorflow.image.non_max_suppression": "doc",
    "tensorflow.image.pad_to_bounding_box": "doc",
    "tensorflow.image.random_flip_up_down": "doc",
    "tensorflow.image.random_jpeg_quality": "doc",
    "tensorflow.linalg.LinearOperatorDiag": "doc",
    "tensorflow.linalg.tridiagonal_matmul": "doc",
    "tensorflow.compat.v1.dtypes.as_dtype": "doc",
    "tensorflow.compat.v1.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.gfile.FastGFile": "doc",
    "tensorflow.compat.v1.linalg.cholesky": "doc",
    "tensorflow.compat.v1.linalg.lu_solve": "doc",
    "tensorflow.compat.v1.lite.TargetSpec": "doc",
    "tensorflow.compat.v1.math.logical_or": "doc",
    "tensorflow.compat.v1.signal.fftshift": "doc",
    "tensorflow.compat.v1.train.Int64List": "doc",
    "tensorflow.compat.v1.train.VocabInfo": "doc",
    "tensorflow.image.crop_to_bounding_box": "doc",
    "tensorflow.image.decode_and_crop_jpeg": "doc",
    "tensorflow.image.stateless_random_hue": "doc",
    "tensorflow.lite.RepresentativeDataset": "doc",
    "tensorflow.train.checkpoints_iterator": "doc",
    "tensorflow.train.get_checkpoint_state": "doc",
    "tensorflow.compat.v1.RegisterGradient": "doc",
    "tensorflow.compat.v1.dtypes.as_string": "doc",
    "tensorflow.compat.v1.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.image.adjust_hue": "doc",
    "tensorflow.compat.v1.image.decode_bmp": "doc",
    "tensorflow.compat.v1.image.decode_gif": "doc",
    "tensorflow.compat.v1.image.decode_png": "doc",
    "tensorflow.compat.v1.image.encode_png": "doc",
    "tensorflow.compat.v1.image.hsv_to_rgb": "doc",
    "tensorflow.compat.v1.image.random_hue": "doc",
    "tensorflow.compat.v1.image.rgb_to_hsv": "doc",
    "tensorflow.compat.v1.image.rgb_to_yiq": "doc",
    "tensorflow.compat.v1.image.rgb_to_yuv": "doc",
    "tensorflow.compat.v1.image.yiq_to_rgb": "doc",
    "tensorflow.compat.v1.image.yuv_to_rgb": "doc",
    "tensorflow.compat.v1.linalg.band_part": "doc",
    "tensorflow.compat.v1.linalg.diag_part": "doc",
    "tensorflow.compat.v1.lite.Interpreter": "doc",
    "tensorflow.compat.v1.math.logical_xor": "doc",
    "tensorflow.compat.v1.matrix_diag_part": "doc",
    "tensorflow.compat.v1.signal.ifftshift": "doc",
    "tensorflow.compat.v1.string_to_number": "doc",
    "tensorflow.compat.v1.train.Checkpoint": "doc",
    "tensorflow.compat.v1.train.ClusterDef": "doc",
    "tensorflow.compat.v1.train.FeedFnHook": "doc",
    "tensorflow.compat.v1.train.batch_join": "doc",
    "tensorflow.compat.v1.train.warm_start": "doc",
    "tensorflow.image.stateless_random_crop": "doc",
    "tensorflow.compat.v1.flags.FloatParser": "doc",
    "tensorflow.compat.v1.gfile.IsDirectory": "doc",
    "tensorflow.compat.v1.image.decode_jpeg": "doc",
    "tensorflow.compat.v1.image.encode_jpeg": "doc",
    "tensorflow.compat.v1.image.random_crop": "doc",
    "tensorflow.compat.v1.image.resize_area": "doc",
    "tensorflow.compat.v1.image.sobel_edges": "doc",
    "tensorflow.compat.v1.lite.toco_convert": "doc",
    "tensorflow.compat.v1.losses.get_losses": "doc",
    "tensorflow.compat.v1.losses.hinge_loss": "doc",
    "tensorflow.compat.v1.sysconfig.get_lib": "doc",
    "tensorflow.compat.v1.train.ClusterSpec": "doc",
    "tensorflow.compat.v1.train.Coordinator": "doc",
    "tensorflow.compat.v1.train.QueueRunner": "doc",
    "tensorflow.compat.v1.train.global_step": "doc",
    "tensorflow.compat.v1.train.maybe_batch": "doc",
    "tensorflow.compat.v1.train.sdca_fprint": "doc",
    "tensorflow.image.random_flip_left_right": "doc",
    "tensorflow.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.raw_ops.NonDeterministicInts": "doc",
    "tensorflow.raw_ops.TensorListFromTensor": "doc",
    "tensorflow.compat.v1.image.ResizeMethod": "doc",
    "tensorflow.compat.v1.image.adjust_gamma": "doc",
    "tensorflow.compat.v1.image.decode_image": "doc",
    "tensorflow.compat.v1.image.flip_up_down": "doc",
    "tensorflow.compat.v1.linalg.matrix_rank": "doc",
    "tensorflow.compat.v1.lite.TocoConverter": "doc",
    "tensorflow.compat.v1.saved_model.loader": "doc",
    "tensorflow.compat.v1.signal.hann_window": "doc",
    "tensorflow.compat.v1.train.FinalOpsHook": "doc",
    "tensorflow.compat.v1.train.ProfilerHook": "doc",
    "tensorflow.compat.v1.train.cosine_decay": "doc",
    "tensorflow.compat.v1.train.limit_epochs": "doc",
    "tensorflow.compat.v1.train.queue_runner": "doc",
    "tensorflow.image.resize_with_crop_or_pad": "doc",
    "tensorflow.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.signal.inverse_stft_window_fn": "doc",
    "tensorflow.compat.v1.app.flags.MultiFlag": "doc",
    "tensorflow.compat.v1.nn.weighted_moments": "doc",
    "tensorflow.compat.v1.signal.inverse_mdct": "doc",
    "tensorflow.compat.v1.train.NanTensorHook": "doc",
    "tensorflow.compat.v1.train.load_variable": "doc",
    "tensorflow.compat.v1.train.shuffle_batch": "doc",
    "tensorflow.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.compat.v1.UnconnectedGradients": "doc",
    "tensorflow.compat.v1.app.flags.FlagHolder": "doc",
    "tensorflow.compat.v1.image.resize_bicubic": "doc",
    "tensorflow.compat.v1.signal.vorbis_window": "doc",
    "tensorflow.compat.v1.train.SessionManager": "doc",
    "tensorflow.compat.v1.train.StopAtStepHook": "doc",
    "tensorflow.compat.v1.train.sdca_shrink_l1": "doc",
    "tensorflow.distribute.InputReplicationMode": "doc",
    "tensorflow.image.per_image_standardization": "doc",
    "tensorflow.image.stateless_random_contrast": "doc",
    "tensorflow.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.compat.v1.app.flags.FloatParser": "doc",
    "tensorflow.compat.v1.image.adjust_contrast": "doc",
    "tensorflow.compat.v1.image.crop_and_resize": "doc",
    "tensorflow.compat.v1.image.extract_glimpse": "doc",
    "tensorflow.compat.v1.image.extract_patches": "doc",
    "tensorflow.compat.v1.image.flip_left_right": "doc",
    "tensorflow.compat.v1.image.random_contrast": "doc",
    "tensorflow.compat.v1.image.ssim_multiscale": "doc",
    "tensorflow.compat.v1.image.total_variation": "doc",
    "tensorflow.compat.v1.image.transpose_image": "doc",
    "tensorflow.compat.v1.linalg.cholesky_solve": "doc",
    "tensorflow.compat.v1.linalg.lu_reconstruct": "doc",
    "tensorflow.compat.v1.quantization.quantize": "doc",
    "tensorflow.compat.v1.signal.hamming_window": "doc",
    "tensorflow.compat.v1.summary.Summary.Value": "doc",
    "tensorflow.compat.v1.train.SequenceExample": "doc",
    "tensorflow.compat.v1.train.StepCounterHook": "doc",
    "tensorflow.compat.v1.train.get_global_step": "doc",
    "tensorflow.compat.v1.train.load_checkpoint": "doc",
    "tensorflow.image.non_max_suppression_padded": "doc",
    "tensorflow.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.linalg.LinearOperatorComposition": "doc",
    "tensorflow.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.raw_ops.AssertCardinalityDataset": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropFilter": "doc",
    "tensorflow.raw_ops.TensorStridedSliceUpdate": "doc",
    "tensorflow.compat.v1.image.grayscale_to_rgb": "doc",
    "tensorflow.compat.v1.image.rgb_to_grayscale": "doc",
    "tensorflow.compat.v1.signal.overlap_and_add": "doc",
    "tensorflow.compat.v1.train.AdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.RMSPropOptimizer": "doc",
    "tensorflow.compat.v1.train.SessionRunValues": "doc",
    "tensorflow.compat.v1.train.SummarySaverHook": "doc",
    "tensorflow.compat.v1.train.add_queue_runner": "doc",
    "tensorflow.compat.v1.train.basic_train_loop": "doc",
    "tensorflow.compat.v1.train.maybe_batch_join": "doc",
    "tensorflow.compat.v1.train.summary_iterator": "doc",
    "tensorflow.image.stateless_random_brightness": "doc",
    "tensorflow.image.stateless_random_saturation": "doc",
    "tensorflow.compat.v1.distributions.Dirichlet": "doc",
    "tensorflow.compat.v1.gfile.DeleteRecursively": "doc",
    "tensorflow.compat.v1.image.adjust_brightness": "doc",
    "tensorflow.compat.v1.image.adjust_saturation": "doc",
    "tensorflow.compat.v1.image.random_brightness": "doc",
    "tensorflow.compat.v1.image.random_saturation": "doc",
    "tensorflow.compat.v1.linalg.matrix_transpose": "doc",
    "tensorflow.compat.v1.linalg.tensor_diag_part": "doc",
    "tensorflow.compat.v1.linalg.triangular_solve": "doc",
    "tensorflow.compat.v1.quantization.dequantize": "doc",
    "tensorflow.compat.v1.saved_model.loader.load": "doc",
    "tensorflow.compat.v1.train.CheckpointManager": "doc",
    "tensorflow.compat.v1.train.CheckpointOptions": "doc",
    "tensorflow.compat.v1.train.JobDef.TasksEntry": "doc",
    "tensorflow.compat.v1.train.LoggingTensorHook": "doc",
    "tensorflow.compat.v1.train.SecondOrStepTimer": "doc",
    "tensorflow.compat.v1.train.SessionRunContext": "doc",
    "tensorflow.compat.v1.train.checkpoint_exists": "doc",
    "tensorflow.compat.v1.train.export_meta_graph": "doc",
    "tensorflow.compat.v1.train.import_meta_graph": "doc",
    "tensorflow.compat.v1.train.latest_checkpoint": "doc",
    "tensorflow.compat.v1.train.natural_exp_decay": "doc",
    "tensorflow.compat.v1.train.remove_checkpoint": "doc",
    "tensorflow.image.combined_non_max_suppression": "doc",
    "tensorflow.image.non_max_suppression_overlaps": "doc",
    "tensorflow.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.compat.v1.image.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_solve": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.MultiRNNCell": "doc",
    "tensorflow.compat.v1.train.AdagradDAOptimizer": "doc",
    "tensorflow.compat.v1.train.create_global_step": "doc",
    "tensorflow.compat.v1.train.piecewise_constant": "doc",
    "tensorflow.compat.v1.train.shuffle_batch_join": "doc",
    "tensorflow.image.sample_distorted_bounding_box": "doc",
    "tensorflow.image.stateless_random_flip_up_down": "doc",
    "tensorflow.image.stateless_random_jpeg_quality": "doc",
    "tensorflow.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.compat.v1.image.adjust_jpeg_quality": "doc",
    "tensorflow.compat.v1.image.convert_image_dtype": "doc",
    "tensorflow.compat.v1.image.draw_bounding_boxes": "doc",
    "tensorflow.compat.v1.image.non_max_suppression": "doc",
    "tensorflow.compat.v1.image.pad_to_bounding_box": "doc",
    "tensorflow.compat.v1.image.random_flip_up_down": "doc",
    "tensorflow.compat.v1.image.random_jpeg_quality": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorDiag": "doc",
    "tensorflow.compat.v1.linalg.tridiagonal_matmul": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverHook": "doc",
    "tensorflow.compat.v1.train.ChiefSessionCreator": "doc",
    "tensorflow.compat.v1.train.NewCheckpointReader": "doc",
    "tensorflow.compat.v1.train.linear_cosine_decay": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch": "doc",
    "tensorflow.compat.v1.train.start_queue_runners": "doc",
    "tensorflow.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.compat.v1.image.crop_to_bounding_box": "doc",
    "tensorflow.compat.v1.image.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.lite.RepresentativeDataset": "doc",
    "tensorflow.compat.v1.train.GlobalStepWaiterHook": "doc",
    "tensorflow.compat.v1.train.WorkerSessionCreator": "doc",
    "tensorflow.compat.v1.train.checkpoints_iterator": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_state": "doc",
    "tensorflow.compat.v1.train.init_from_checkpoint": "doc",
    "tensorflow.compat.v1.train.match_filenames_once": "doc",
    "tensorflow.compat.v1.train.range_input_producer": "doc",
    "tensorflow.compat.v1.train.slice_input_producer": "doc",
    "tensorflow.image.generate_bounding_box_proposals": "doc",
    "tensorflow.image.non_max_suppression_with_scores": "doc",
    "tensorflow.compat.v1.image.extract_image_patches": "doc",
    "tensorflow.compat.v1.image.resize_image_with_pad": "doc",
    "tensorflow.compat.v1.train.get_checkpoint_mtimes": "doc",
    "tensorflow.compat.v1.train.replica_device_setter": "doc",
    "tensorflow.compat.v1.train.string_input_producer": "doc",
    "tensorflow.data.experimental.get_next_as_optional": "doc",
    "tensorflow.image.stateless_random_flip_left_right": "doc",
    "tensorflow.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.image.random_flip_left_right": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorAdjoint": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorTridiag": "doc",
    "tensorflow.compat.v1.min_max_variable_partitioner": "doc",
    "tensorflow.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.compat.v1.image.resize_nearest_neighbor": "doc",
    "tensorflow.compat.v1.image.resize_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorIdentity": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorToeplitz": "doc",
    "tensorflow.compat.v1.signal.inverse_stft_window_fn": "doc",
    "tensorflow.compat.v1.train.CheckpointSaverListener": "doc",
    "tensorflow.compat.v1.train.update_checkpoint_state": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockDiag": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorKronecker": "doc",
    "tensorflow.compat.v1.train.GradientDescentOptimizer": "doc",
    "tensorflow.compat.v1.train.ProximalAdagradOptimizer": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession": "doc",
    "tensorflow.compat.v1.train.maybe_shuffle_batch_join": "doc",
    "tensorflow.compat.v1.train.piecewise_constant_decay": "doc",
    "tensorflow.compat.v1.train.queue_runner.QueueRunner": "doc",
    "tensorflow.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.distribute.InputReplicationMode": "doc",
    "tensorflow.compat.v1.image.per_image_standardization": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorFullMatrix": "doc",
    "tensorflow.compat.v1.train.get_or_create_global_step": "doc",
    "tensorflow.compat.v1.train.noisy_linear_cosine_decay": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_padded": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant2D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorCirculant3D": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorComposition": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorHouseholder": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorPermutation": "doc",
    "tensorflow.compat.v1.saved_model.main_op_with_restore": "doc",
    "tensorflow.compat.v1.train.NanLossDuringTrainingError": "doc",
    "tensorflow.compat.v1.lite.OpHint.OpHintArgumentTracker": "doc",
    "tensorflow.compat.v1.distributions.DirichletMultinomial": "doc",
    "tensorflow.compat.v1.image.combined_non_max_suppression": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_overlaps": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowRankUpdate": "doc",
    "tensorflow.compat.v1.signal.linear_to_mel_weight_matrix": "doc",
    "tensorflow.image.stateless_sample_distorted_bounding_box": "doc",
    "tensorflow.compat.v1.image.resize_image_with_crop_or_pad": "doc",
    "tensorflow.compat.v1.image.sample_distorted_bounding_box": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorScaledIdentity": "doc",
    "tensorflow.compat.v1.signal.kaiser_bessel_derived_window": "doc",
    "tensorflow.compat.v1.train.queue_runner.add_queue_runner": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorLowerTriangular": "doc",
    "tensorflow.compat.v1.image.generate_bounding_box_proposals": "doc",
    "tensorflow.compat.v1.image.non_max_suppression_with_scores": "doc",
    "tensorflow.compat.v1.train.generate_checkpoint_state_proto": "doc",
    "tensorflow.compat.v1.data.experimental.get_next_as_optional": "doc",
    "tensorflow.compat.v1.signal.mfccs_from_log_mel_spectrograms": "doc",
    "tensorflow.compat.v1.train.ProximalGradientDescentOptimizer": "doc",
    "tensorflow.compat.v1.train.do_quantize_training_on_graphdef": "doc",
    "tensorflow.compat.v1.train.queue_runner.start_queue_runners": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveHints": "doc",
    "tensorflow.compat.v1.linalg.LinearOperatorBlockLowerTriangular": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars": "doc",
    "tensorflow.compat.v1.train.SingularMonitoredSession.StepContext": "doc",
    "tensorflow.compat.v1.saved_model.loader.maybe_saved_model_directory": "doc",
    "tensorflow.compat.v1.mixed_precision.MixedPrecisionLossScaleOptimizer": "doc",
    "tensorflow.compat.v1.tpu.experimental.StochasticGradientDescentParameters": "doc",
    "tensorflow.random.stateless_truncated_normal": "doc",
    "tensorflow.compat.v1.random.stateless_truncated_normal": "doc",
    "tensorflow.random.stateless_binomial": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV2": "doc",
    "tensorflow.raw_ops.TensorArrayCloseV3": "doc",
    "tensorflow.compat.v1.get_variable_scope": "doc",
    "tensorflow.compat.v1.tensor_scatter_sub": "doc",
    "tensorflow.compat.v1.flags.disclaim_key_flags": "doc",
    "tensorflow.compat.v1.random.stateless_binomial": "doc",
    "tensorflow.compat.v1.app.flags.disclaim_key_flags": "doc",
    "tensorflow.vectorized_map": "doc",
    "tensorflow.compat.v1.vectorized_map": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullInt": "doc",
    "tensorflow.raw_ops.IsBoostedTreesEnsembleInitialized": "doc",
    "tensorflow.experimental.register_filesystem_plugin": "doc",
    "tensorflow.compat.v1.experimental.register_filesystem_plugin": "doc",
    "tensorflow.raw_ops.RequantizationRangePerChannel": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParams": "doc",
    "tensorflow.raw_ops.ExperimentalUniqueDataset": "doc",
    "tensorflow.compat.v1.nn.uniform_candidate_sampler": "doc",
    "tensorflow.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.KubernetesClusterResolver": "doc",
    "tensorflow.assert_less": "doc",
    "tensorflow.raw_ops.RaggedCross": "doc",
    "tensorflow.raw_ops.ReaderReset": "doc",
    "tensorflow.raw_ops.SaveDataset": "doc",
    "tensorflow.raw_ops.SegmentProd": "doc",
    "tensorflow.raw_ops.SparseCross": "doc",
    "tensorflow.raw_ops.TensorArray": "doc",
    "tensorflow.debugging.assert_less": "doc",
    "tensorflow.compat.v1.assert_less": "doc",
    "tensorflow.compat.v1.debugging.assert_less": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.TFDecorator": "doc",
    "tensorflow.compat.v1.io.QueueBase": "doc",
    "tensorflow.experimental.numpy.ceil": "doc",
    "tensorflow.experimental.numpy.ndim": "doc",
    "tensorflow.experimental.numpy.floor": "doc",
    "tensorflow.experimental.numpy.isinf": "doc",
    "tensorflow.data.experimental.Counter": "doc",
    "tensorflow.data.experimental.Reducer": "doc",
    "tensorflow.experimental.numpy.nansum": "doc",
    "tensorflow.experimental.numpy.argsort": "doc",
    "tensorflow.experimental.numpy.maximum": "doc",
    "tensorflow.experimental.numpy.nanprod": "doc",
    "tensorflow.experimental.numpy.transpose": "doc",
    "tensorflow.compat.v1.data.experimental.Counter": "doc",
    "tensorflow.compat.v1.data.experimental.Reducer": "doc",
    "tensorflow.data.experimental.rejection_resample": "doc",
    "tensorflow.config.experimental.get_device_details": "doc",
    "tensorflow.compat.v1.MetaGraphDef.CollectionDefEntry": "doc",
    "tensorflow.compat.v1.data.experimental.rejection_resample": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_details": "doc",
    "tensorflow.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.enable_mlir_graph_optimization": "doc",
    "tensorflow.nn.all_candidate_sampler": "doc",
    "tensorflow.raw_ops.BroadcastGradientArgs": "doc",
    "tensorflow.raw_ops.FractionalAvgPoolGrad": "doc",
    "tensorflow.raw_ops.FractionalMaxPoolGrad": "doc",
    "tensorflow.raw_ops.ScaleAndTranslateGrad": "doc",
    "tensorflow.raw_ops.TensorListConcatLists": "doc",
    "tensorflow.raw_ops.WriteHistogramSummary": "doc",
    "tensorflow.compat.v1.nn.all_candidate_sampler": "doc",
    "tensorflow.compat.v1.flags.CantOpenFlagFileError": "doc",
    "tensorflow.compat.v1.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.app.flags.CantOpenFlagFileError": "doc",
    "tensorflow.compat.v1.app.flags.UnrecognizedFlagError": "doc",
    "tensorflow.compat.v1.app.flags.multi_flags_validator": "doc",
    "tensorflow.compat.v1.saved_model.predict_signature_def": "doc",
    "tensorflow.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SimpleClusterResolver": "doc",
    "tensorflow.raw_ops.GeneratorDataset": "doc",
    "tensorflow.raw_ops.UnicodeTranscode": "doc",
    "tensorflow.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.experimental.numpy.broadcast_arrays": "doc",
    "tensorflow.compat.v1.tpu.experimental.DeviceAssignment": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceFilter": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.io.matching_files": "doc",
    "tensorflow.config.PhysicalDevice": "doc",
    "tensorflow.compat.v1.io.matching_files": "doc",
    "tensorflow.compat.v1.config.PhysicalDevice": "doc",
    "tensorflow.IndexedSlicesSpec": "doc",
    "tensorflow.convert_to_tensor": "doc",
    "tensorflow.dynamic_partition": "doc",
    "tensorflow.executing_eagerly": "doc",
    "tensorflow.losses.cosine_similarity": "doc",
    "tensorflow.raw_ops.FractionalAvgPool": "doc",
    "tensorflow.raw_ops.FractionalMaxPool": "doc",
    "tensorflow.raw_ops.LookupTableInsert": "doc",
    "tensorflow.raw_ops.OptimizeDatasetV2": "doc",
    "tensorflow.raw_ops.ResizeBicubicGrad": "doc",
    "tensorflow.raw_ops.SnapshotDatasetV2": "doc",
    "tensorflow.raw_ops.TensorListReserve": "doc",
    "tensorflow.raw_ops.TensorListScatter": "doc",
    "tensorflow.raw_ops.TridiagonalMatMul": "doc",
    "tensorflow.raw_ops.WriteAudioSummary": "doc",
    "tensorflow.raw_ops.WriteGraphSummary": "doc",
    "tensorflow.raw_ops.WriteImageSummary": "doc",
    "tensorflow.debugging.assert_all_finite": "doc",
    "tensorflow.debugging.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.IndexedSlicesSpec": "doc",
    "tensorflow.compat.v1.convert_to_tensor": "doc",
    "tensorflow.compat.v1.dynamic_partition": "doc",
    "tensorflow.compat.v1.executing_eagerly": "doc",
    "tensorflow.compat.v1.is_numeric_tensor": "doc",
    "tensorflow.compat.v1.debugging.assert_all_finite": "doc",
    "tensorflow.compat.v1.debugging.is_numeric_tensor": "doc",
    "tensorflow.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.compat.v1.data.experimental.make_saveable_from_iterator": "doc",
    "tensorflow.compat.v1.distribute.experimental.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.compat.v1.config.experimental.disable_mlir_graph_optimization": "doc",
    "tensorflow.data.TFRecordDataset": "doc",
    "tensorflow.raw_ops.CheckNumericsV2": "doc",
    "tensorflow.raw_ops.MatrixLogarithm": "doc",
    "tensorflow.raw_ops.TFRecordDataset": "doc",
    "tensorflow.raw_ops.TruncatedNormal": "doc",
    "tensorflow.raw_ops.WorkerHeartbeat": "doc",
    "tensorflow.compat.v1.data.TFRecordDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRelu": "doc",
    "tensorflow.unravel_index": "doc",
    "tensorflow.queue.PriorityQueue": "doc",
    "tensorflow.raw_ops.MatchingFiles": "doc",
    "tensorflow.raw_ops.MatrixSolveLs": "doc",
    "tensorflow.raw_ops.PriorityQueue": "doc",
    "tensorflow.raw_ops.QuantizedRelu": "doc",
    "tensorflow.raw_ops.WindowDataset": "doc",
    "tensorflow.compat.v1.PriorityQueue": "doc",
    "tensorflow.compat.v1.distributions": "doc",
    "tensorflow.compat.v1.unravel_index": "doc",
    "tensorflow.quantize_and_dequantize_v4": "doc",
    "tensorflow.compat.v1.distributions.Gamma": "doc",
    "tensorflow.compat.v1.queue.PriorityQueue": "doc",
    "tensorflow.compat.v1.distributions.Laplace": "doc",
    "tensorflow.compat.v1.distributions.StudentT": "doc",
    "tensorflow.raw_ops.ResourceStridedSliceAssign": "doc",
    "tensorflow.compat.v1.distributions.RegisterKL": "doc",
    "tensorflow.compat.v1.distributions.Exponential": "doc",
    "tensorflow.compat.v1.distributions.Multinomial": "doc",
    "tensorflow.compat.v1.distributions.Distribution": "doc",
    "tensorflow.compat.v1.quantize_and_dequantize_v4": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_fast": "doc",
    "tensorflow.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.compat.v1.distributions.ReparameterizationType": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize_v2": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.UnionResolver": "doc",
    "tensorflow.nn.conv_transpose": "doc",
    "tensorflow.raw_ops.ExtractGlimpse": "doc",
    "tensorflow.raw_ops.ReadVariableOp": "doc",
    "tensorflow.raw_ops.StringToNumber": "doc",
    "tensorflow.distribute.ReplicaContext": "doc",
    "tensorflow.math.reduce_euclidean_norm": "doc",
    "tensorflow.compat.v1.nn.conv_transpose": "doc",
    "tensorflow.raw_ops.QuantizedInstanceNorm": "doc",
    "tensorflow.compat.v1.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.app.flags.BaseListParser": "doc",
    "tensorflow.compat.v1.distribute.ReplicaContext": "doc",
    "tensorflow.compat.v1.math.reduce_euclidean_norm": "doc",
    "tensorflow.raw_ops.TensorSummary": "doc",
    "tensorflow.variable_creator_scope": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilterV2": "doc",
    "tensorflow.raw_ops.CropAndResizeGradBoxes": "doc",
    "tensorflow.raw_ops.StringToHashBucketFast": "doc",
    "tensorflow.compat.v1.fixed_size_partitioner": "doc",
    "tensorflow.compat.v1.variable_creator_scope": "doc",
    "tensorflow.compat.v1.test.compute_gradient_error": "doc",
    "tensorflow.data.experimental.enumerate_dataset": "doc",
    "tensorflow.compat.v1.data.experimental.enumerate_dataset": "doc",
    "tensorflow.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.nn.fixed_unigram_candidate_sampler": "doc",
    "tensorflow.raw_ops.StatelessRandomUniformFullIntV2": "doc",
    "tensorflow.unique_with_counts": "doc",
    "tensorflow.test.is_built_with_cuda": "doc",
    "tensorflow.test.is_built_with_rocm": "doc",
    "tensorflow.losses.BinaryCrossentropy": "doc",
    "tensorflow.losses.mean_squared_error": "doc",
    "tensorflow.raw_ops.BatchMatrixSolveLs": "doc",
    "tensorflow.raw_ops.CollectiveGatherV2": "doc",
    "tensorflow.raw_ops.ConcatenateDataset": "doc",
    "tensorflow.raw_ops.IsotonicRegression": "doc",
    "tensorflow.raw_ops.TPUOrdinalSelector": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV2": "doc",
    "tensorflow.raw_ops.TensorArrayWriteV3": "doc",
    "tensorflow.raw_ops.UniqueWithCountsV2": "doc",
    "tensorflow.summary.create_file_writer": "doc",
    "tensorflow.compat.v1.unique_with_counts": "doc",
    "tensorflow.distribute.DistributedDataset": "doc",
    "tensorflow.compat.v1.test.is_built_with_cuda": "doc",
    "tensorflow.compat.v1.test.is_built_with_rocm": "doc",
    "tensorflow.compat.v1.flags.DuplicateFlagError": "doc",
    "tensorflow.raw_ops.CudnnRNNCanonicalToParamsV2": "doc",
    "tensorflow.raw_ops.RecvTPUEmbeddingActivations": "doc",
    "tensorflow.compat.v1.losses.mean_squared_error": "doc",
    "tensorflow.compat.v1.app.flags.DuplicateFlagError": "doc",
    "tensorflow.compat.v1.saved_model.is_valid_signature": "doc",
    "tensorflow.compat.v1.losses.mean_pairwise_squared_error": "doc",
    "tensorflow.losses.mean_absolute_error": "doc",
    "tensorflow.raw_ops.RequantizationRange": "doc",
    "tensorflow.compat.v1.losses.absolute_difference": "doc",
    "tensorflow.raw_ops.ExperimentalMatchingFilesDataset": "doc",
    "tensorflow.nn.compute_accidental_hits": "doc",
    "tensorflow.losses.CategoricalCrossentropy": "doc",
    "tensorflow.raw_ops.ConfigureDistributedTPU": "doc",
    "tensorflow.raw_ops.CreateSummaryFileWriter": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorInit": "doc",
    "tensorflow.compat.v1.nn.compute_accidental_hits": "doc",
    "tensorflow.compat.v1.nn.static_state_saving_rnn": "doc",
    "tensorflow.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TFConfigClusterResolver": "doc",
    "tensorflow.einsum": "doc",
    "tensorflow.random": "doc",
    "tensorflow.repeat": "doc",
    "tensorflow.subtract": "doc",
    "tensorflow.clip_by_norm": "doc",
    "tensorflow.random.gamma": "doc",
    "tensorflow.math.subtract": "doc",
    "tensorflow.random.poisson": "doc",
    "tensorflow.queue.QueueBase": "doc",
    "tensorflow.random.Algorithm": "doc",
    "tensorflow.raw_ops.GatherNd": "doc",
    "tensorflow.raw_ops.GatherV2": "doc",
    "tensorflow.raw_ops.RefMerge": "doc",
    "tensorflow.raw_ops.SqrtGrad": "doc",
    "tensorflow.raw_ops.TanhGrad": "doc",
    "tensorflow.compat.v1.einsum": "doc",
    "tensorflow.compat.v1.random": "doc",
    "tensorflow.compat.v1.repeat": "doc",
    "tensorflow.data.IteratorSpec": "doc",
    "tensorflow.data.experimental": "doc",
    "tensorflow.compat.v1.Session": "doc",
    "tensorflow.compat.v1.get_seed": "doc",
    "tensorflow.compat.v1.subtract": "doc",
    "tensorflow.ragged.boolean_mask": "doc",
    "tensorflow.compat.v1.QueueBase": "doc",
    "tensorflow.raw_ops.BarrierClose": "doc",
    "tensorflow.raw_ops.CacheDataset": "doc",
    "tensorflow.raw_ops.CholeskyGrad": "doc",
    "tensorflow.raw_ops.DecodeBase64": "doc",
    "tensorflow.raw_ops.EncodeBase64": "doc",
    "tensorflow.raw_ops.GreaterEqual": "doc",
    "tensorflow.raw_ops.MergeSummary": "doc",
    "tensorflow.raw_ops.ModelDataset": "doc",
    "tensorflow.raw_ops.RangeDataset": "doc",
    "tensorflow.raw_ops.ReaderReadV2": "doc",
    "tensorflow.raw_ops.ScatterNdMax": "doc",
    "tensorflow.raw_ops.ShardDataset": "doc",
    "tensorflow.raw_ops.SleepDataset": "doc",
    "tensorflow.summary.experimental": "doc",
    "tensorflow.summary.trace_export": "doc",
    "tensorflow.experimental.Optional": "doc",
    "tensorflow.nest.pack_sequence_as": "doc",
    "tensorflow.data.experimental.load": "doc",
    "tensorflow.data.experimental.save": "doc",
    "tensorflow.data.experimental.scan": "doc",
    "tensorflow.experimental.numpy.abs": "doc",
    "tensorflow.experimental.numpy.all": "doc",
    "tensorflow.experimental.numpy.tan": "doc",
    "tensorflow.experimental.numpy.tri": "doc",
    "tensorflow.experimental.numpy.var": "doc",
    "tensorflow.random.stateless_gamma": "doc",
    "tensorflow.compat.v1.clip_by_norm": "doc",
    "tensorflow.compat.v1.get_variable": "doc",
    "tensorflow.compat.v1.random.gamma": "doc",
    "tensorflow.distribute.experimental": "doc",
    "tensorflow.distribute.get_strategy": "doc",
    "tensorflow.experimental.numpy.amin": "doc",
    "tensorflow.experimental.numpy.clip": "doc",
    "tensorflow.experimental.numpy.diag": "doc",
    "tensorflow.experimental.numpy.fabs": "doc",
    "tensorflow.experimental.numpy.flip": "doc",
    "tensorflow.experimental.numpy.imag": "doc",
    "tensorflow.experimental.numpy.tanh": "doc",
    "tensorflow.experimental.numpy.tril": "doc",
    "tensorflow.experimental.numpy.triu": "doc",
    "tensorflow.random.create_rng_state": "doc",
    "tensorflow.compat.v1.logging.error": "doc",
    "tensorflow.compat.v1.math.subtract": "doc",
    "tensorflow.experimental.numpy.equal": "doc",
    "tensorflow.experimental.numpy.isnan": "doc",
    "tensorflow.experimental.numpy.power": "doc",
    "tensorflow.experimental.numpy.ravel": "doc",
    "tensorflow.experimental.numpy.shape": "doc",
    "tensorflow.experimental.numpy.split": "doc",
    "tensorflow.experimental.numpy.stack": "doc",
    "tensorflow.experimental.numpy.uint8": "doc",
    "tensorflow.experimental.numpy.where": "doc",
    "tensorflow.raw_ops.FusedBatchNormV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormV3": "doc",
    "tensorflow.raw_ops.GRUBlockCellGrad": "doc",
    "tensorflow.raw_ops.TakeWhileDataset": "doc",
    "tensorflow.raw_ops.TensorArrayClose": "doc",
    "tensorflow.compat.v1.random.poisson": "doc",
    "tensorflow.data.experimental.unbatch": "doc",
    "tensorflow.experimental.numpy.append": "doc",
    "tensorflow.experimental.numpy.arange": "doc",
    "tensorflow.experimental.numpy.arccos": "doc",
    "tensorflow.experimental.numpy.arctan": "doc",
    "tensorflow.experimental.numpy.dsplit": "doc",
    "tensorflow.experimental.numpy.dstack": "doc",
    "tensorflow.experimental.numpy.flipud": "doc",
    "tensorflow.experimental.numpy.hsplit": "doc",
    "tensorflow.experimental.numpy.hstack": "doc",
    "tensorflow.experimental.numpy.matmul": "doc",
    "tensorflow.experimental.numpy.repeat": "doc",
    "tensorflow.experimental.numpy.select": "doc",
    "tensorflow.experimental.numpy.square": "doc",
    "tensorflow.experimental.numpy.uint16": "doc",
    "tensorflow.experimental.numpy.uint32": "doc",
    "tensorflow.experimental.numpy.uint64": "doc",
    "tensorflow.experimental.numpy.vsplit": "doc",
    "tensorflow.experimental.numpy.vstack": "doc",
    "tensorflow.compat.v1.queue.QueueBase": "doc",
    "tensorflow.data.experimental.Optional": "doc",
    "tensorflow.data.experimental.snapshot": "doc",
    "tensorflow.experimental.numpy.arctan2": "doc",
    "tensorflow.experimental.numpy.arctanh": "doc",
    "tensorflow.experimental.numpy.polyval": "doc",
    "tensorflow.experimental.numpy.rad2deg": "doc",
    "tensorflow.experimental.numpy.signbit": "doc",
    "tensorflow.experimental.numpy.squeeze": "doc",
    "tensorflow.experimental.numpy.string_": "doc",
    "tensorflow.compat.v1.random.Algorithm": "doc",
    "tensorflow.experimental.numpy.absolute": "doc",
    "tensorflow.experimental.numpy.allclose": "doc",
    "tensorflow.experimental.numpy.complex_": "doc",
    "tensorflow.experimental.numpy.compress": "doc",
    "tensorflow.experimental.numpy.diagflat": "doc",
    "tensorflow.experimental.numpy.diagonal": "doc",
    "tensorflow.experimental.numpy.identity": "doc",
    "tensorflow.experimental.numpy.isneginf": "doc",
    "tensorflow.experimental.numpy.isposinf": "doc",
    "tensorflow.experimental.numpy.logspace": "doc",
    "tensorflow.experimental.numpy.subtract": "doc",
    "tensorflow.compat.v1.data.experimental": "doc",
    "tensorflow.data.experimental.CsvDataset": "doc",
    "tensorflow.data.experimental.SqlDataset": "doc",
    "tensorflow.data.experimental.take_while": "doc",
    "tensorflow.data.experimental.to_variant": "doc",
    "tensorflow.experimental.numpy.conjugate": "doc",
    "tensorflow.experimental.numpy.logaddexp": "doc",
    "tensorflow.experimental.numpy.not_equal": "doc",
    "tensorflow.compat.v1.flags.tf_decorator": "doc",
    "tensorflow.experimental.numpy.issubdtype": "doc",
    "tensorflow.summary.experimental.get_step": "doc",
    "tensorflow.summary.experimental.set_step": "doc",
    "tensorflow.compat.v1.ragged.boolean_mask": "doc",
    "tensorflow.data.experimental.StatsOptions": "doc",
    "tensorflow.data.experimental.from_variant": "doc",
    "tensorflow.experimental.numpy.bitwise_and": "doc",
    "tensorflow.experimental.numpy.bitwise_not": "doc",
    "tensorflow.experimental.numpy.float_power": "doc",
    "tensorflow.experimental.numpy.logical_and": "doc",
    "tensorflow.experimental.numpy.logical_not": "doc",
    "tensorflow.data.experimental.RandomDataset": "doc",
    "tensorflow.data.experimental.get_structure": "doc",
    "tensorflow.data.experimental.latency_stats": "doc",
    "tensorflow.data.experimental.map_and_batch": "doc",
    "tensorflow.experimental.numpy.iscomplexobj": "doc",
    "tensorflow.compat.v1.experimental.Optional": "doc",
    "tensorflow.compat.v1.nest.pack_sequence_as": "doc",
    "tensorflow.data.experimental.TFRecordWriter": "doc",
    "tensorflow.data.experimental.copy_to_device": "doc",
    "tensorflow.compat.v1.NameAttrList.AttrEntry": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator": "doc",
    "tensorflow.compat.v1.data.experimental.scan": "doc",
    "tensorflow.compat.v1.random.stateless_gamma": "doc",
    "tensorflow.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.data.experimental.StatsAggregator": "doc",
    "tensorflow.data.experimental.group_by_window": "doc",
    "tensorflow.summary.experimental.write_raw_pb": "doc",
    "tensorflow.compat.v1.GPUOptions.Experimental": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental": "doc",
    "tensorflow.compat.v1.distribute.experimental": "doc",
    "tensorflow.compat.v1.distribute.get_strategy": "doc",
    "tensorflow.compat.v1.random.create_rng_state": "doc",
    "tensorflow.data.experimental.ThreadingOptions": "doc",
    "tensorflow.data.experimental.group_by_reducer": "doc",
    "tensorflow.data.experimental.make_csv_dataset": "doc",
    "tensorflow.summary.experimental.summary_scope": "doc",
    "tensorflow.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.distribute.experimental.coordinator": "doc",
    "tensorflow.compat.v1.data.experimental.unbatch": "doc",
    "tensorflow.data.experimental.assert_cardinality": "doc",
    "tensorflow.data.experimental.prefetch_to_device": "doc",
    "tensorflow.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.distribute.experimental.ValueContext": "doc",
    "tensorflow.compat.v1.data.experimental.Optional": "doc",
    "tensorflow.compat.v1.data.experimental.snapshot": "doc",
    "tensorflow.compat.v1.data.experimental.Structure": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.data.experimental.choose_from_datasets": "doc",
    "tensorflow.data.experimental.sample_from_datasets": "doc",
    "tensorflow.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.compat.v1.data.experimental.CsvDataset": "doc",
    "tensorflow.compat.v1.data.experimental.SqlDataset": "doc",
    "tensorflow.compat.v1.data.experimental.take_while": "doc",
    "tensorflow.compat.v1.data.experimental.to_variant": "doc",
    "tensorflow.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.data.experimental.parse_example_dataset": "doc",
    "tensorflow.compat.v1.saved_model.experimental.save": "doc",
    "tensorflow.compat.v1.data.experimental.StatsOptions": "doc",
    "tensorflow.compat.v1.data.experimental.from_variant": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack": "doc",
    "tensorflow.compat.v1.data.experimental.RandomDataset": "doc",
    "tensorflow.compat.v1.data.experimental.get_structure": "doc",
    "tensorflow.compat.v1.data.experimental.latency_stats": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch": "doc",
    "tensorflow.compat.v1.data.experimental.TFRecordWriter": "doc",
    "tensorflow.compat.v1.data.experimental.copy_to_device": "doc",
    "tensorflow.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.compat.v1.data.experimental.AutoShardPolicy": "doc",
    "tensorflow.compat.v1.data.experimental.StatsAggregator": "doc",
    "tensorflow.compat.v1.data.experimental.TensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_window": "doc",
    "tensorflow.compat.v1.data.experimental.DatasetStructure": "doc",
    "tensorflow.compat.v1.data.experimental.ThreadingOptions": "doc",
    "tensorflow.compat.v1.data.experimental.group_by_reducer": "doc",
    "tensorflow.compat.v1.data.experimental.make_csv_dataset": "doc",
    "tensorflow.compat.v1.distribute.experimental.TPUStrategy": "doc",
    "tensorflow.compat.v1.data.experimental.assert_cardinality": "doc",
    "tensorflow.compat.v1.data.experimental.prefetch_to_device": "doc",
    "tensorflow.compat.v1.data.experimental.shuffle_and_repeat": "doc",
    "tensorflow.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.distribute.experimental.coordinator.RemoteValue": "doc",
    "tensorflow.compat.v1.data.experimental.TensorArrayStructure": "doc",
    "tensorflow.compat.v1.data.experimental.bytes_produced_stats": "doc",
    "tensorflow.compat.v1.data.experimental.choose_from_datasets": "doc",
    "tensorflow.compat.v1.data.experimental.sample_from_datasets": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.LossScale": "doc",
    "tensorflow.compat.v1.data.experimental.RaggedTensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.SparseTensorStructure": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_ragged_batch": "doc",
    "tensorflow.compat.v1.data.experimental.dense_to_sparse_batch": "doc",
    "tensorflow.compat.v1.data.experimental.parse_example_dataset": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.data.experimental.bucket_by_sequence_length": "doc",
    "tensorflow.distribute.experimental.coordinator.ClusterCoordinator": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.FrameSummary": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackSummary": "doc",
    "tensorflow.compat.v1.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.compat.v1.RunOptions.Experimental.RunHandlerPoolOptions": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.extract_stack": "doc",
    "tensorflow.compat.v1.data.experimental.make_batched_features_dataset": "doc",
    "tensorflow.compat.v1.distribute.experimental.CollectiveCommunication": "doc",
    "tensorflow.compat.v1.distribute.experimental.ParameterServerStrategy": "doc",
    "tensorflow.compat.v1.app.flags.tf_decorator.tf_stack.StackTraceMapper": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.serving_embedding_lookup": "doc",
    "tensorflow.compat.v1.data.experimental.map_and_batch_with_legacy_function": "doc",
    "tensorflow.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.compat.v1.config.LogicalDeviceConfiguration": "doc",
    "tensorflow.raw_ops.FlatMapDataset": "doc",
    "tensorflow.raw_ops.ImmutableConst": "doc",
    "tensorflow.raw_ops.MatrixBandPart": "doc",
    "tensorflow.raw_ops.MatrixDiagPart": "doc",
    "tensorflow.raw_ops.QuantizedRelu6": "doc",
    "tensorflow.raw_ops.QuantizedReluX": "doc",
    "tensorflow.raw_ops.TextLineReader": "doc",
    "tensorflow.raw_ops.UnbatchDataset": "doc",
    "tensorflow.debugging.assert_integer": "doc",
    "tensorflow.compat.v1.TextLineReader": "doc",
    "tensorflow.compat.v1.assert_integer": "doc",
    "tensorflow.compat.v1.matching_files": "doc",
    "tensorflow.distribute.CrossDeviceOps": "doc",
    "tensorflow.compat.v1.debugging.assert_integer": "doc",
    "tensorflow.compat.v1.distribute.CrossDeviceOps": "doc",
    "tensorflow.raw_ops.AnonymousMultiDeviceIterator": "doc",
    "tensorflow.raw_ops.ExperimentalTakeWhileDataset": "doc",
    "tensorflow.raw_ops.FixedUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.SparseConditionalAccumulator": "doc",
    "tensorflow.compat.v1.create_partitioned_variables": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket_strong": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParameters": "doc",
    "tensorflow.compat.v1.saved_model.classification_signature_def": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args": "doc",
    "tensorflow.compat.v1.nn.log_uniform_candidate_sampler": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannel": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndRelu": "doc",
    "tensorflow.raw_ops.CollectivePermute": "doc",
    "tensorflow.raw_ops.SquaredDifference": "doc",
    "tensorflow.transpose": "doc",
    "tensorflow.test.Benchmark": "doc",
    "tensorflow.config.threading": "doc",
    "tensorflow.raw_ops.Transpose": "doc",
    "tensorflow.compat.v1.transpose": "doc",
    "tensorflow.compat.v1.tpu.replicate": "doc",
    "tensorflow.compat.v1.test.Benchmark": "doc",
    "tensorflow.compat.v1.manip.gather_nd": "doc",
    "tensorflow.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.compat.v1.config.threading": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowStarts": "doc",
    "tensorflow.clip_by_global_norm": "doc",
    "tensorflow.nn.fractional_avg_pool": "doc",
    "tensorflow.nn.fractional_max_pool": "doc",
    "tensorflow.losses.binary_crossentropy": "doc",
    "tensorflow.raw_ops.BatchMatrixBandPart": "doc",
    "tensorflow.raw_ops.BatchMatrixDiagPart": "doc",
    "tensorflow.raw_ops.CollectiveBcastRecv": "doc",
    "tensorflow.raw_ops.CollectiveBcastSend": "doc",
    "tensorflow.raw_ops.CumulativeLogsumexp": "doc",
    "tensorflow.raw_ops.DeleteSessionTensor": "doc",
    "tensorflow.raw_ops.HistogramFixedWidth": "doc",
    "tensorflow.raw_ops.LookupTableInsertV2": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV2": "doc",
    "tensorflow.raw_ops.TensorArrayGatherV3": "doc",
    "tensorflow.raw_ops.UnsortedSegmentProd": "doc",
    "tensorflow.compat.v1.clip_by_global_norm": "doc",
    "tensorflow.compat.v1.get_default_session": "doc",
    "tensorflow.compat.v1.reset_default_graph": "doc",
    "tensorflow.distribute.DistributedIterator": "doc",
    "tensorflow.compat.v1.nn.fractional_avg_pool": "doc",
    "tensorflow.compat.v1.nn.fractional_max_pool": "doc",
    "tensorflow.compat.v1.tpu.CrossShardOptimizer": "doc",
    "tensorflow.compat.v1.saved_model.build_signature_def": "doc",
    "tensorflow.compat.v1.saved_model.signature_constants": "doc",
    "tensorflow.compat.v1.io.PaddingFIFOQueue": "doc",
    "tensorflow.config.get_logical_device_configuration": "doc",
    "tensorflow.config.set_logical_device_configuration": "doc",
    "tensorflow.compat.v1.config.get_logical_device_configuration": "doc",
    "tensorflow.compat.v1.config.set_logical_device_configuration": "doc",
    "tensorflow.losses.categorical_crossentropy": "doc",
    "tensorflow.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.raw_ops.ExperimentalSleepDataset": "doc",
    "tensorflow.raw_ops.PrivateThreadPoolDataset": "doc",
    "tensorflow.raw_ops.SparseTensorSliceDataset": "doc",
    "tensorflow.raw_ops.StringToHashBucketStrong": "doc",
    "tensorflow.raw_ops.UnicodeDecodeWithOffsets": "doc",
    "tensorflow.compat.v1.load_file_system_library": "doc",
    "tensorflow.compat.v1.moving_average_variables": "doc",
    "tensorflow.compat.v1.verify_tensor_all_finite": "doc",
    "tensorflow.distribute.in_cross_replica_context": "doc",
    "tensorflow.compat.v1.nn.static_bidirectional_rnn": "doc",
    "tensorflow.compat.v1.ragged.stack_dynamic_partitions": "doc",
    "tensorflow.compat.v1.distribute.in_cross_replica_context": "doc",
    "tensorflow.compat.v1.saved_model.regression_signature_def": "doc",
    "tensorflow.losses.SparseCategoricalCrossentropy": "doc",
    "tensorflow.raw_ops.ExperimentalAssertNextDataset": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionWithOverlaps": "doc",
    "tensorflow.compat.v1.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.compat.v1.app.flags.WhitespaceSeparatedListParser": "doc",
    "tensorflow.io.encode_base64": "doc",
    "tensorflow.compat.v1.io.encode_base64": "doc",
    "tensorflow.compat.v1.MetaGraphDef.MetaInfoDef": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.io.decode_raw": "doc",
    "tensorflow.compat.v1.io.decode_raw": "doc",
    "tensorflow.raw_ops.StatelessRandomNormal": "doc",
    "tensorflow.experimental.numpy.promote_types": "doc",
    "tensorflow.raw_ops.AssertNextDataset": "doc",
    "tensorflow.raw_ops.LSTMBlockCellGrad": "doc",
    "tensorflow.raw_ops.OrderedMapUnstage": "doc",
    "tensorflow.raw_ops.ScaleAndTranslate": "doc",
    "tensorflow.raw_ops.SparseCrossHashed": "doc",
    "tensorflow.config.experimental_connect_to_host": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_host": "doc",
    "tensorflow.compat.v1.set_random_seed": "doc",
    "tensorflow.custom_gradient": "doc",
    "tensorflow.inside_function": "doc",
    "tensorflow.load_op_library": "doc",
    "tensorflow.control_dependencies": "doc",
    "tensorflow.data.TextLineDataset": "doc",
    "tensorflow.math.multiply_no_nan": "doc",
    "tensorflow.compat.dimension_value": "doc",
    "tensorflow.lookup.StaticHashTable": "doc",
    "tensorflow.ragged.map_flat_values": "doc",
    "tensorflow.nn.RNNCellDeviceWrapper": "doc",
    "tensorflow.nn.compute_average_loss": "doc",
    "tensorflow.raw_ops.EmptyTensorList": "doc",
    "tensorflow.raw_ops.LookupTableSize": "doc",
    "tensorflow.raw_ops.OneShotIterator": "doc",
    "tensorflow.raw_ops.PartitionedCall": "doc",
    "tensorflow.raw_ops.PreventGradient": "doc",
    "tensorflow.raw_ops.RandomGammaGrad": "doc",
    "tensorflow.raw_ops.SnapshotDataset": "doc",
    "tensorflow.raw_ops.TensorArraySize": "doc",
    "tensorflow.raw_ops.TextLineDataset": "doc",
    "tensorflow.math.cumulative_logsumexp": "doc",
    "tensorflow.math.unsorted_segment_sum": "doc",
    "tensorflow.test.create_local_cluster": "doc",
    "tensorflow.compat.v1.custom_gradient": "doc",
    "tensorflow.compat.v1.dimension_value": "doc",
    "tensorflow.compat.v1.load_op_library": "doc",
    "tensorflow.compat.v1.local_variables": "doc",
    "tensorflow.compat.v1.matrix_solve_ls": "doc",
    "tensorflow.raw_ops.ApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.Conv2DBackpropFilter": "doc",
    "tensorflow.raw_ops.Conv3DBackpropFilter": "doc",
    "tensorflow.raw_ops.ExtractVolumePatches": "doc",
    "tensorflow.raw_ops.LogMatrixDeterminant": "doc",
    "tensorflow.raw_ops.MatchingFilesDataset": "doc",
    "tensorflow.raw_ops.RandomStandardNormal": "doc",
    "tensorflow.raw_ops.RequantizePerChannel": "doc",
    "tensorflow.raw_ops.SlidingWindowDataset": "doc",
    "tensorflow.raw_ops.TPUCompilationResult": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV2": "doc",
    "tensorflow.raw_ops.TensorArrayScatterV3": "doc",
    "tensorflow.raw_ops.UnwrapDatasetVariant": "doc",
    "tensorflow.raw_ops.WriteRawProtoSummary": "doc",
    "tensorflow.debugging.assert_rank_at_least": "doc",
    "tensorflow.test.is_built_with_gpu_support": "doc",
    "tensorflow.compat.v1.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.clip_by_average_norm": "doc",
    "tensorflow.compat.v1.control_dependencies": "doc",
    "tensorflow.compat.v1.data.TextLineDataset": "doc",
    "tensorflow.compat.v1.math.multiply_no_nan": "doc",
    "tensorflow.compat.v1.self_adjoint_eigvals": "doc",
    "tensorflow.compat.v1.unsorted_segment_sum": "doc",
    "tensorflow.compat.v1.flags.ValidationError": "doc",
    "tensorflow.compat.v1.compat.dimension_value": "doc",
    "tensorflow.compat.v1.lookup.StaticHashTable": "doc",
    "tensorflow.compat.v1.ragged.map_flat_values": "doc",
    "tensorflow.raw_ops.AddManySparseToTensorsMap": "doc",
    "tensorflow.raw_ops.CombinedNonMaxSuppression": "doc",
    "tensorflow.raw_ops.DeleteMultiDeviceIterator": "doc",
    "tensorflow.raw_ops.DirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReaderV2": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensors": "doc",
    "tensorflow.raw_ops.SendTPUEmbeddingGradients": "doc",
    "tensorflow.compat.v1.nn.compute_average_loss": "doc",
    "tensorflow.compat.v1.summary.FileWriterCache": "doc",
    "tensorflow.compat.v1.app.flags.ValidationError": "doc",
    "tensorflow.compat.v1.math.cumulative_logsumexp": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sum": "doc",
    "tensorflow.compat.v1.test.create_local_cluster": "doc",
    "tensorflow.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.distribute.experimental_set_strategy": "doc",
    "tensorflow.losses.mean_squared_logarithmic_error": "doc",
    "tensorflow.raw_ops.LearnedUnigramCandidateSampler": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRelu": "doc",
    "tensorflow.raw_ops.ResourceConditionalAccumulator": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter_v2": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_at_least": "doc",
    "tensorflow.compat.v1.test.is_built_with_gpu_support": "doc",
    "tensorflow.compat.v1.variable_axis_size_partitioner": "doc",
    "tensorflow.compat.v1.losses.get_regularization_losses": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropFilter": "doc",
    "tensorflow.compat.v1.executing_eagerly_outside_functions": "doc",
    "tensorflow.compat.v1.distribute.HierarchicalCopyAllReduce": "doc",
    "tensorflow.compat.v1.distribute.experimental_set_strategy": "doc",
    "tensorflow.compat.v1.flags.register_multi_flags_validator": "doc",
    "tensorflow.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.compat.v1.app.flags.register_multi_flags_validator": "doc",
    "tensorflow.compat.v1.graph_util.convert_variables_to_constants": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.SlurmClusterResolver": "doc",
    "tensorflow.feature_column.weighted_categorical_column": "doc",
    "tensorflow.compat.v1.feature_column.weighted_categorical_column": "doc",
    "tensorflow.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.compat.v1.config.experimental_functions_run_eagerly": "doc",
    "tensorflow.compat.v1.config.experimental_run_functions_eagerly": "doc",
    "tensorflow.losses.kl_divergence": "doc",
    "tensorflow.raw_ops.BlockLSTMGrad": "doc",
    "tensorflow.raw_ops.DenseBincount": "doc",
    "tensorflow.raw_ops.NcclBroadcast": "doc",
    "tensorflow.raw_ops.NextIteration": "doc",
    "tensorflow.raw_ops.ReaderResetV2": "doc",
    "tensorflow.raw_ops.ReduceDataset": "doc",
    "tensorflow.raw_ops.RepeatDataset": "doc",
    "tensorflow.raw_ops.ScatterUpdate": "doc",
    "tensorflow.raw_ops.SparseAddGrad": "doc",
    "tensorflow.raw_ops.SparseCrossV2": "doc",
    "tensorflow.raw_ops.StatelessCase": "doc",
    "tensorflow.raw_ops.TensorArrayV2": "doc",
    "tensorflow.raw_ops.TensorArrayV3": "doc",
    "tensorflow.raw_ops.UnicodeScript": "doc",
    "tensorflow.compat.v1.flags.BooleanParser": "doc",
    "tensorflow.compat.v1.app.flags.BooleanParser": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV2": "doc",
    "tensorflow.raw_ops.ImageProjectiveTransformV3": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DeviceWrapper": "doc",
    "tensorflow.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.compat.v1.config.experimental.enable_tensor_float_32_execution": "doc",
    "tensorflow.io.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.io.FixedLenSequenceFeature": "doc",
    "tensorflow.raw_ops.ReciprocalGrad": "doc",
    "tensorflow.compat.v1.summary.tensor_summary": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.raw_ops.QuantizedBatchNormWithGlobalNormalization": "doc",
    "tensorflow.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalizationGrad": "doc",
    "tensorflow.raw_ops.ExperimentalPrivateThreadPoolDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRequantize": "doc",
    "tensorflow.compat.v1.nn.batch_norm_with_global_normalization": "doc",
    "tensorflow.raw_ops.StatefulStandardNormal": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_list": "doc",
    "tensorflow.losses.sparse_categorical_crossentropy": "doc",
    "tensorflow.raw_ops.ExperimentalIgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgsGradient": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsGradient": "doc",
    "tensorflow.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.compat.v1.config.experimental.tensor_float_32_execution_enabled": "doc",
    "tensorflow.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.compat.v1.lookup.experimental.DenseHashTable": "doc",
    "tensorflow.compat.v1.saved_model.experimental.VariablePolicy": "doc",
    "tensorflow.histogram_fixed_width_bins": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDatasetV2": "doc",
    "tensorflow.compat.v1.histogram_fixed_width_bins": "doc",
    "tensorflow.raw_ops.IsBoostedTreesQuantileStreamResourceInitialized": "doc",
    "tensorflow.raw_ops.StatefulTruncatedNormal": "doc",
    "tensorflow.histogram_fixed_width": "doc",
    "tensorflow.tensor_scatter_nd_sub": "doc",
    "tensorflow.math.unsorted_segment_prod": "doc",
    "tensorflow.lookup.StaticVocabularyTable": "doc",
    "tensorflow.raw_ops.AddSparseToTensorsMap": "doc",
    "tensorflow.raw_ops.BandedTriangularSolve": "doc",
    "tensorflow.raw_ops.BarrierIncompleteSize": "doc",
    "tensorflow.raw_ops.ComputeAccidentalHits": "doc",
    "tensorflow.raw_ops.CreateSummaryDbWriter": "doc",
    "tensorflow.raw_ops.DummyIterationCounter": "doc",
    "tensorflow.raw_ops.MatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.QuantizeAndDequantize": "doc",
    "tensorflow.raw_ops.SparseMatrixTranspose": "doc",
    "tensorflow.debugging.enable_check_numerics": "doc",
    "tensorflow.compat.v1.delete_session_tensor": "doc",
    "tensorflow.compat.v1.enable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.extract_image_patches": "doc",
    "tensorflow.compat.v1.histogram_fixed_width": "doc",
    "tensorflow.compat.v1.string_to_hash_bucket": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_sub": "doc",
    "tensorflow.compat.v1.unsorted_segment_prod": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_prod": "doc",
    "tensorflow.compat.v1.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.lookup.StaticVocabularyTable": "doc",
    "tensorflow.compat.v1.losses.compute_weighted_loss": "doc",
    "tensorflow.compat.v1.losses.sigmoid_cross_entropy": "doc",
    "tensorflow.compat.v1.losses.softmax_cross_entropy": "doc",
    "tensorflow.compat.v1.app.flags.IllegalFlagValueError": "doc",
    "tensorflow.compat.v1.debugging.enable_check_numerics": "doc",
    "tensorflow.compat.v1.graph_util.remove_training_nodes": "doc",
    "tensorflow.config.experimental.get_device_policy": "doc",
    "tensorflow.config.experimental.set_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.get_device_policy": "doc",
    "tensorflow.compat.v1.config.experimental.set_device_policy": "doc",
    "tensorflow.raw_ops.ExperimentalDirectedInterleaveDataset": "doc",
    "tensorflow.raw_ops.ExperimentalParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSetStatsAggregatorDataset": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_gradient": "doc",
    "tensorflow.floor": "doc",
    "tensorflow.device": "doc",
    "tensorflow.argsort": "doc",
    "tensorflow.maximum": "doc",
    "tensorflow.math.ceil": "doc",
    "tensorflow.not_equal": "doc",
    "tensorflow.timestamp": "doc",
    "tensorflow.io.is_jpeg": "doc",
    "tensorflow.math.floor": "doc",
    "tensorflow.math.is_inf": "doc",
    "tensorflow.raw_ops.For": "doc",
    "tensorflow.io.read_file": "doc",
    "tensorflow.losses.Hinge": "doc",
    "tensorflow.losses.Huber": "doc",
    "tensorflow.math.maximum": "doc",
    "tensorflow.raw_ops.Ceil": "doc",
    "tensorflow.raw_ops.Send": "doc",
    "tensorflow.raw_ops.Abort": "doc",
    "tensorflow.raw_ops.Floor": "doc",
    "tensorflow.raw_ops.IsInf": "doc",
    "tensorflow.summary.audio": "doc",
    "tensorflow.io.encode_jpeg": "doc",
    "tensorflow.math.not_equal": "doc",
    "tensorflow.raw_ops.Einsum": "doc",
    "tensorflow.raw_ops.InTopK": "doc",
    "tensorflow.raw_ops.OneHot": "doc",
    "tensorflow.raw_ops.Unpack": "doc",
    "tensorflow.compat.v1.ceil": "doc",
    "tensorflow.compat.v1.ifft": "doc",
    "tensorflow.raw_ops.Maximum": "doc",
    "tensorflow.raw_ops.Unbatch": "doc",
    "tensorflow.compat.v1.floor": "doc",
    "tensorflow.compat.v1.manip": "doc",
    "tensorflow.raw_ops.DeepCopy": "doc",
    "tensorflow.raw_ops.RefEnter": "doc",
    "tensorflow.compat.v1.device": "doc",
    "tensorflow.compat.v1.is_inf": "doc",
    "tensorflow.autograph.to_code": "doc",
    "tensorflow.raw_ops.DecodeRaw": "doc",
    "tensorflow.raw_ops.DecodeWav": "doc",
    "tensorflow.raw_ops.EncodeWav": "doc",
    "tensorflow.raw_ops.FakeQueue": "doc",
    "tensorflow.raw_ops.LessEqual": "doc",
    "tensorflow.raw_ops.MirrorPad": "doc",
    "tensorflow.raw_ops.RestoreV2": "doc",
    "tensorflow.raw_ops.ReverseV2": "doc",
    "tensorflow.raw_ops.RsqrtGrad": "doc",
    "tensorflow.raw_ops.ScatterNd": "doc",
    "tensorflow.raw_ops.SparseAdd": "doc",
    "tensorflow.raw_ops.Timestamp": "doc",
    "tensorflow.summary.histogram": "doc",
    "tensorflow.summary.record_if": "doc",
    "tensorflow.compat.v1.argsort": "doc",
    "tensorflow.compat.v1.maximum": "doc",
    "tensorflow.compat.v1.math.ceil": "doc",
    "tensorflow.compat.v1.not_equal": "doc",
    "tensorflow.compat.v1.read_file": "doc",
    "tensorflow.compat.v1.timestamp": "doc",
    "tensorflow.compat.v1.io.is_jpeg": "doc",
    "tensorflow.compat.v1.manip.roll": "doc",
    "tensorflow.compat.v1.math.floor": "doc",
    "tensorflow.io.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.flags.Error": "doc",
    "tensorflow.compat.v1.math.is_inf": "doc",
    "tensorflow.compat.v1.io.read_file": "doc",
    "tensorflow.compat.v1.math.maximum": "doc",
    "tensorflow.math.squared_difference": "doc",
    "tensorflow.compat.v1.Summary.Audio": "doc",
    "tensorflow.compat.v1.summary.audio": "doc",
    "tensorflow.compat.v1.io.encode_jpeg": "doc",
    "tensorflow.compat.v1.math.not_equal": "doc",
    "tensorflow.compat.v1.app.flags.Error": "doc",
    "tensorflow.raw_ops.ConjugateTranspose": "doc",
    "tensorflow.raw_ops.DataServiceDataset": "doc",
    "tensorflow.raw_ops.FusedBatchNormGrad": "doc",
    "tensorflow.compat.v1.debugging.is_inf": "doc",
    "tensorflow.compat.v1.manip.scatter_nd": "doc",
    "tensorflow.compat.v1.autograph.to_code": "doc",
    "tensorflow.compat.v1.summary.histogram": "doc",
    "tensorflow.compat.v1.squared_difference": "doc",
    "tensorflow.compat.v1.saved_model.main_op": "doc",
    "tensorflow.compat.v1.TensorInfo.CooSparse": "doc",
    "tensorflow.compat.v1.io.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.io.extract_jpeg_shape": "doc",
    "tensorflow.compat.v1.io.tf_record_iterator": "doc",
    "tensorflow.compat.v1.summary.Summary.Audio": "doc",
    "tensorflow.compat.v1.manip.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.manip.space_to_batch_nd": "doc",
    "tensorflow.compat.v1.math.squared_difference": "doc",
    "tensorflow.compat.v1.saved_model.main_op.main_op": "doc",
    "tensorflow.import_graph_def": "doc",
    "tensorflow.nn.conv1d_transpose": "doc",
    "tensorflow.nn.conv2d_transpose": "doc",
    "tensorflow.nn.conv3d_transpose": "doc",
    "tensorflow.math.confusion_matrix": "doc",
    "tensorflow.test.compute_gradient": "doc",
    "tensorflow.test.is_gpu_available": "doc",
    "tensorflow.queue.PaddingFIFOQueue": "doc",
    "tensorflow.losses.CategoricalHinge": "doc",
    "tensorflow.losses.MeanSquaredError": "doc",
    "tensorflow.raw_ops.BarrierReadySize": "doc",
    "tensorflow.raw_ops.CollectiveGather": "doc",
    "tensorflow.raw_ops.ComputeBatchSize": "doc",
    "tensorflow.raw_ops.GetSessionTensor": "doc",
    "tensorflow.raw_ops.HistogramSummary": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV2": "doc",
    "tensorflow.raw_ops.MatrixDiagPartV3": "doc",
    "tensorflow.raw_ops.OptionalGetValue": "doc",
    "tensorflow.raw_ops.OptionalHasValue": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueue": "doc",
    "tensorflow.raw_ops.QuantizedBiasAdd": "doc",
    "tensorflow.raw_ops.QuantizedReshape": "doc",
    "tensorflow.raw_ops.RebatchDatasetV2": "doc",
    "tensorflow.raw_ops.SymbolicGradient": "doc",
    "tensorflow.raw_ops.TensorScatterAdd": "doc",
    "tensorflow.raw_ops.TensorScatterMax": "doc",
    "tensorflow.raw_ops.TensorScatterMin": "doc",
    "tensorflow.raw_ops.TensorScatterSub": "doc",
    "tensorflow.compat.v1.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.confusion_matrix": "doc",
    "tensorflow.compat.v1.global_variables": "doc",
    "tensorflow.compat.v1.import_graph_def": "doc",
    "tensorflow.compat.v1.matrix_band_part": "doc",
    "tensorflow.compat.v1.matrix_transpose": "doc",
    "tensorflow.compat.v1.self_adjoint_eig": "doc",
    "tensorflow.graph_util.import_graph_def": "doc",
    "tensorflow.compat.v1.nn.conv1d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.conv3d_transpose": "doc",
    "tensorflow.compat.v1.nn.quantized_relu_x": "doc",
    "tensorflow.compat.v1.math.confusion_matrix": "doc",
    "tensorflow.compat.v1.test.compute_gradient": "doc",
    "tensorflow.compat.v1.test.is_gpu_available": "doc",
    "tensorflow.nondifferentiable_batch_function": "doc",
    "tensorflow.compat.v1.queue.PaddingFIFOQueue": "doc",
    "tensorflow.compat.v1.graph_util.import_graph_def": "doc",
    "tensorflow.raw_ops.BatchNormWithGlobalNormalization": "doc",
    "tensorflow.raw_ops.ExperimentalSlidingWindowDataset": "doc",
    "tensorflow.raw_ops.InfeedEnqueuePrelinearizedBuffer": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBias": "doc",
    "tensorflow.compat.v1.nondifferentiable_batch_function": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.losses.kullback_leibler_divergence": "doc",
    "tensorflow.raw_ops.MutableHashTableOfTensorsV2": "doc",
    "tensorflow.distribute.MultiWorkerMirroredStrategy": "doc",
    "tensorflow.compat.v1.saved_model.maybe_saved_model_directory": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_identity": "doc",
    "tensorflow.saturate_cast": "doc",
    "tensorflow.compat.v1.encode_base64": "doc",
    "tensorflow.compat.v1.saturate_cast": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParameters": "doc",
    "tensorflow.raw_ops.StatelessRandomNormalV2": "doc",
    "tensorflow.config.experimental_connect_to_cluster": "doc",
    "tensorflow.compat.v1.config.experimental_connect_to_cluster": "doc",
    "tensorflow.searchsorted": "doc",
    "tensorflow.math.reciprocal": "doc",
    "tensorflow.compat.v1.decode_raw": "doc",
    "tensorflow.compat.v1.reciprocal": "doc",
    "tensorflow.compat.v1.searchsorted": "doc",
    "tensorflow.compat.v1.math.reciprocal": "doc",
    "tensorflow.experimental.numpy.reciprocal": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding_column": "doc",
    "tensorflow.mixed_precision.experimental": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental": "doc",
    "tensorflow.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.FixedLossScale": "doc",
    "tensorflow.compat.v1.mixed_precision.experimental.DynamicLossScale": "doc",
    "tensorflow.config.get_soft_device_placement": "doc",
    "tensorflow.config.set_soft_device_placement": "doc",
    "tensorflow.compat.v1.config.get_soft_device_placement": "doc",
    "tensorflow.compat.v1.config.set_soft_device_placement": "doc",
    "tensorflow.extract_volume_patches": "doc",
    "tensorflow.nn.RNNCellResidualWrapper": "doc",
    "tensorflow.test.assert_equal_graph_def": "doc",
    "tensorflow.raw_ops.BatchMatrixDeterminant": "doc",
    "tensorflow.raw_ops.BoostedTreesCenterBias": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToDense": "doc",
    "tensorflow.raw_ops.CropAndResizeGradImage": "doc",
    "tensorflow.raw_ops.DatasetToSingleElement": "doc",
    "tensorflow.raw_ops.ExperimentalCSVDataset": "doc",
    "tensorflow.raw_ops.ExperimentalMapDataset": "doc",
    "tensorflow.raw_ops.ExperimentalSqlDataset": "doc",
    "tensorflow.raw_ops.ShutdownDistributedTPU": "doc",
    "tensorflow.raw_ops.TensorListElementShape": "doc",
    "tensorflow.debugging.assert_proper_iterable": "doc",
    "tensorflow.debugging.disable_check_numerics": "doc",
    "tensorflow.compat.v1.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.disable_v2_tensorshape": "doc",
    "tensorflow.compat.v1.extract_volume_patches": "doc",
    "tensorflow.compat.v1.sparse_fill_empty_rows": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.nn.conv3d_backprop_filter": "doc",
    "tensorflow.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.data.make_one_shot_iterator": "doc",
    "tensorflow.compat.v1.test.assert_equal_graph_def": "doc",
    "tensorflow.compat.v1.flags.adopt_module_key_flags": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeQuantileSummaries": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByReducerDataset": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.raw_ops.TensorListScatterIntoExistingList": "doc",
    "tensorflow.compat.v1.app.flags.adopt_module_key_flags": "doc",
    "tensorflow.compat.v1.debugging.assert_proper_iterable": "doc",
    "tensorflow.compat.v1.debugging.disable_check_numerics": "doc",
    "tensorflow.compat.v1.nn.learned_unigram_candidate_sampler": "doc",
    "tensorflow.compat.v1.nn.sigmoid_cross_entropy_with_logits": "doc",
    "tensorflow.raw_ops.AdjustContrast": "doc",
    "tensorflow.raw_ops.CacheDatasetV2": "doc",
    "tensorflow.raw_ops.DatasetToGraph": "doc",
    "tensorflow.raw_ops.DeleteIterator": "doc",
    "tensorflow.raw_ops.GuaranteeConst": "doc",
    "tensorflow.raw_ops.OrderedMapPeek": "doc",
    "tensorflow.raw_ops.OrderedMapSize": "doc",
    "tensorflow.raw_ops.RaggedBincount": "doc",
    "tensorflow.raw_ops.ReaderReadUpTo": "doc",
    "tensorflow.raw_ops.RebatchDataset": "doc",
    "tensorflow.raw_ops.ResourceGather": "doc",
    "tensorflow.raw_ops.ShuffleDataset": "doc",
    "tensorflow.raw_ops.SparseBincount": "doc",
    "tensorflow.raw_ops.TFRecordReader": "doc",
    "tensorflow.compat.v1.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.app.flags.ArgumentParser": "doc",
    "tensorflow.compat.v1.feature_column.linear_model": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_list": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndRelu": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_filter": "doc",
    "tensorflow.nn.local_response_normalization": "doc",
    "tensorflow.raw_ops.ApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.ExperimentalAutoShardDataset": "doc",
    "tensorflow.raw_ops.GenerateBoundingBoxProposals": "doc",
    "tensorflow.raw_ops.MaxIntraOpParallelismDataset": "doc",
    "tensorflow.raw_ops.TakeManySparseFromTensorsMap": "doc",
    "tensorflow.compat.v1.nn.local_response_normalization": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMDLAdagradLightParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParameters": "doc",
    "tensorflow.raw_ops.IgnoreErrorsDataset": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmax": "doc",
    "tensorflow.AggregationMethod": "doc",
    "tensorflow.math.reciprocal_no_nan": "doc",
    "tensorflow.test.is_built_with_xla": "doc",
    "tensorflow.losses.categorical_hinge": "doc",
    "tensorflow.raw_ops.AnonymousIterator": "doc",
    "tensorflow.raw_ops.BarrierInsertMany": "doc",
    "tensorflow.raw_ops.DatasetToTFRecord": "doc",
    "tensorflow.raw_ops.LookupTableExport": "doc",
    "tensorflow.raw_ops.LookupTableFindV2": "doc",
    "tensorflow.raw_ops.LookupTableImport": "doc",
    "tensorflow.raw_ops.MapIncompleteSize": "doc",
    "tensorflow.raw_ops.MatrixDeterminant": "doc",
    "tensorflow.raw_ops.MaxPoolWithArgmax": "doc",
    "tensorflow.raw_ops.NonMaxSuppression": "doc",
    "tensorflow.raw_ops.OptionalFromValue": "doc",
    "tensorflow.raw_ops.TensorArrayGather": "doc",
    "tensorflow.raw_ops.TensorListGetItem": "doc",
    "tensorflow.raw_ops.TensorListSetItem": "doc",
    "tensorflow.raw_ops.UncompressElement": "doc",
    "tensorflow.raw_ops.WholeFileReaderV2": "doc",
    "tensorflow.sysconfig.get_compile_flags": "doc",
    "tensorflow.compat.v1.AggregationMethod": "doc",
    "tensorflow.compat.v1.get_default_graph": "doc",
    "tensorflow.compat.v1.variable_op_scope": "doc",
    "tensorflow.distribute.OneDeviceStrategy": "doc",
    "tensorflow.compat.v1.tpu.cross_replica_sum": "doc",
    "tensorflow.compat.v1.math.reciprocal_no_nan": "doc",
    "tensorflow.compat.v1.test.is_built_with_xla": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.flags.flag_dict_to_args": "doc",
    "tensorflow.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum": "doc",
    "tensorflow.compat.v1.app.flags.flag_dict_to_args": "doc",
    "tensorflow.compat.v1.sysconfig.get_compile_flags": "doc",
    "tensorflow.compat.v1.distribute.OneDeviceStrategy": "doc",
    "tensorflow.raw_ops.BoostedTreesFlushQuantileSummaries": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropInput": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParameters": "doc",
    "tensorflow.compat.v1.nn.weighted_cross_entropy_with_logits": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.config.LogicalDevice": "doc",
    "tensorflow.compat.v1.config.LogicalDevice": "doc",
    "tensorflow.compat.v1.sparse_transpose": "doc",
    "tensorflow.compat.v1.truncated_normal": "doc",
    "tensorflow.compat.v1.nn.fused_batch_norm": "doc",
    "tensorflow.raw_ops.StatefulStandardNormalV2": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormal": "doc",
    "tensorflow.raw_ops.ExperimentalMaxIntraOpParallelismDataset": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.tpu.experimental.shared_embedding_columns": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel": "doc",
    "tensorflow.VariableSynchronization": "doc",
    "tensorflow.nn.embedding_lookup_sparse": "doc",
    "tensorflow.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.raw_ops.Dilation2DBackpropInput": "doc",
    "tensorflow.raw_ops.ExperimentalLMDBDataset": "doc",
    "tensorflow.raw_ops.ExperimentalScanDataset": "doc",
    "tensorflow.raw_ops.FixedLengthRecordReader": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBias": "doc",
    "tensorflow.raw_ops.ScatterNdNonAliasingAdd": "doc",
    "tensorflow.raw_ops.SparseMatrixOrderingAMD": "doc",
    "tensorflow.raw_ops.StatefulPartitionedCall": "doc",
    "tensorflow.raw_ops.TensorListPushBackBatch": "doc",
    "tensorflow.compat.v1.FixedLenSequenceFeature": "doc",
    "tensorflow.compat.v1.FixedLengthRecordReader": "doc",
    "tensorflow.compat.v1.VariableSynchronization": "doc",
    "tensorflow.compat.v1.unsorted_segment_sqrt_n": "doc",
    "tensorflow.quantization.quantize_and_dequantize": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.losses.get_regularization_loss": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_enum_class": "doc",
    "tensorflow.compat.v1.app.flags.UnparsedFlagAccessError": "doc",
    "tensorflow.compat.v1.quantization.quantize_and_dequantize": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndReluAndRequantize": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_hash_bucket": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.compat.forward_compatibility_horizon": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixToSparseTensor": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetToTFRecord": "doc",
    "tensorflow.raw_ops.ExperimentalIteratorGetDevice": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolDataset": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariantGradient": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompletedV2": "doc",
    "tensorflow.compat.v1.compat.forward_compatibility_horizon": "doc",
    "tensorflow.io.match_filenames_once": "doc",
    "tensorflow.io.parse_single_example": "doc",
    "tensorflow.compat.v1.io.match_filenames_once": "doc",
    "tensorflow.compat.v1.io.parse_single_example": "doc",
    "tensorflow.sysconfig.get_link_flags": "doc",
    "tensorflow.compat.v1.sysconfig.get_link_flags": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorGetNextFromShard": "doc",
    "tensorflow.raw_ops.ThreadUnsafeUnigramCandidateSampler": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_indexed_slices": "doc",
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannelGradient": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_identity": "doc",
    "tensorflow.nn.moments": "doc",
    "tensorflow.compat.v1.nn.moments": "doc",
    "tensorflow.experimental.numpy.asarray": "doc",
    "tensorflow.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adagrad": "doc",
    "tensorflow.compat.v1.sparse_to_indicator": "doc",
    "tensorflow.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_file": "doc",
    "tensorflow.abs": "doc",
    "tensorflow.tan": "doc",
    "tensorflow.acos": "doc",
    "tensorflow.asin": "doc",
    "tensorflow.atan": "doc",
    "tensorflow.case": "doc",
    "tensorflow.data": "doc",
    "tensorflow.fill": "doc",
    "tensorflow.nest": "doc",
    "tensorflow.tanh": "doc",
    "tensorflow.test": "doc",
    "tensorflow.asinh": "doc",
    "tensorflow.atan2": "doc",
    "tensorflow.atanh": "doc",
    "tensorflow.equal": "doc",
    "tensorflow.foldr": "doc",
    "tensorflow.range": "doc",
    "tensorflow.shape": "doc",
    "tensorflow.split": "doc",
    "tensorflow.stack": "doc",
    "tensorflow.where": "doc",
    "tensorflow.Assert": "doc",
    "tensorflow.Module": "doc",
    "tensorflow.losses": "doc",
    "tensorflow.matmul": "doc",
    "tensorflow.nn.lrn": "doc",
    "tensorflow.ragged": "doc",
    "tensorflow.square": "doc",
    "tensorflow.complex": "doc",
    "tensorflow.nn.silu": "doc",
    "tensorflow.nn.tanh": "doc",
    "tensorflow.raw_ops": "doc",
    "tensorflow.realdiv": "doc",
    "tensorflow.shape_n": "doc",
    "tensorflow.sigmoid": "doc",
    "tensorflow.squeeze": "doc",
    "tensorflow.summary": "doc",
    "tensorflow.autodiff": "doc",
    "tensorflow.constant": "doc",
    "tensorflow.function": "doc",
    "tensorflow.identity": "doc",
    "tensorflow.math.abs": "doc",
    "tensorflow.math.tan": "doc",
    "tensorflow.math.acos": "doc",
    "tensorflow.math.asin": "doc",
    "tensorflow.math.atan": "doc",
    "tensorflow.math.imag": "doc",
    "tensorflow.math.rint": "doc",
    "tensorflow.math.tanh": "doc",
    "tensorflow.test.main": "doc",
    "tensorflow.DeviceSpec": "doc",
    "tensorflow.distribute": "doc",
    "tensorflow.identity_n": "doc",
    "tensorflow.losses.KLD": "doc",
    "tensorflow.losses.MAE": "doc",
    "tensorflow.losses.MSE": "doc",
    "tensorflow.losses.get": "doc",
    "tensorflow.losses.kld": "doc",
    "tensorflow.losses.mae": "doc",
    "tensorflow.losses.mse": "doc",
    "tensorflow.math.asinh": "doc",
    "tensorflow.math.atan2": "doc",
    "tensorflow.math.atanh": "doc",
    "tensorflow.math.equal": "doc",
    "tensorflow.math.lbeta": "doc",
    "tensorflow.nn.l2_loss": "doc",
    "tensorflow.nn.sigmoid": "doc",
    "tensorflow.nn.softmax": "doc",
    "tensorflow.raw_ops.If": "doc",
    "tensorflow.raw_ops.Lu": "doc",
    "tensorflow.raw_ops.Qr": "doc",
    "tensorflow.while_loop": "doc",
    "tensorflow.fingerprint": "doc",
    "tensorflow.logical_and": "doc",
    "tensorflow.logical_not": "doc",
    "tensorflow.losses.Loss": "doc",
    "tensorflow.losses.MAPE": "doc",
    "tensorflow.losses.MSLE": "doc",
    "tensorflow.losses.mape": "doc",
    "tensorflow.losses.msle": "doc",
    "tensorflow.math.igamma": "doc",
    "tensorflow.math.is_nan": "doc",
    "tensorflow.math.square": "doc",
    "tensorflow.nn.bias_add": "doc",
    "tensorflow.nn.softsign": "doc",
    "tensorflow.raw_ops.Abs": "doc",
    "tensorflow.raw_ops.Add": "doc",
    "tensorflow.raw_ops.All": "doc",
    "tensorflow.raw_ops.Any": "doc",
    "tensorflow.raw_ops.Cos": "doc",
    "tensorflow.raw_ops.Div": "doc",
    "tensorflow.raw_ops.Eig": "doc",
    "tensorflow.raw_ops.Elu": "doc",
    "tensorflow.raw_ops.Erf": "doc",
    "tensorflow.raw_ops.Exp": "doc",
    "tensorflow.raw_ops.FFT": "doc",
    "tensorflow.raw_ops.Inv": "doc",
    "tensorflow.raw_ops.LRN": "doc",
    "tensorflow.raw_ops.Log": "doc",
    "tensorflow.raw_ops.Max": "doc",
    "tensorflow.raw_ops.Min": "doc",
    "tensorflow.raw_ops.Mod": "doc",
    "tensorflow.raw_ops.Mul": "doc",
    "tensorflow.raw_ops.Neg": "doc",
    "tensorflow.raw_ops.Pad": "doc",
    "tensorflow.raw_ops.Pow": "doc",
    "tensorflow.raw_ops.Sin": "doc",
    "tensorflow.raw_ops.Sub": "doc",
    "tensorflow.raw_ops.Sum": "doc",
    "tensorflow.raw_ops.Svd": "doc",
    "tensorflow.raw_ops.Tan": "doc",
    "tensorflow.load_library": "doc",
    "tensorflow.losses.hinge": "doc",
    "tensorflow.losses.huber": "doc",
    "tensorflow.math.digamma": "doc",
    "tensorflow.math.igammac": "doc",
    "tensorflow.math.polyval": "doc",
    "tensorflow.math.sigmoid": "doc",
    "tensorflow.math.softmax": "doc",
    "tensorflow.nest.flatten": "doc",
    "tensorflow.quantization": "doc",
    "tensorflow.ragged.cross": "doc",
    "tensorflow.ragged.range": "doc",
    "tensorflow.ragged.stack": "doc",
    "tensorflow.raw_ops.Acos": "doc",
    "tensorflow.raw_ops.AddN": "doc",
    "tensorflow.raw_ops.Asin": "doc",
    "tensorflow.raw_ops.Atan": "doc",
    "tensorflow.raw_ops.Case": "doc",
    "tensorflow.raw_ops.Cast": "doc",
    "tensorflow.raw_ops.Conj": "doc",
    "tensorflow.raw_ops.Copy": "doc",
    "tensorflow.raw_ops.Cosh": "doc",
    "tensorflow.raw_ops.Diag": "doc",
    "tensorflow.raw_ops.Erfc": "doc",
    "tensorflow.raw_ops.Exit": "doc",
    "tensorflow.raw_ops.Fact": "doc",
    "tensorflow.raw_ops.Fill": "doc",
    "tensorflow.raw_ops.IFFT": "doc",
    "tensorflow.raw_ops.Imag": "doc",
    "tensorflow.raw_ops.Mfcc": "doc",
    "tensorflow.raw_ops.NoOp": "doc",
    "tensorflow.raw_ops.Pack": "doc",
    "tensorflow.raw_ops.Prod": "doc",
    "tensorflow.raw_ops.RFFT": "doc",
    "tensorflow.raw_ops.Rank": "doc",
    "tensorflow.raw_ops.Recv": "doc",
    "tensorflow.raw_ops.Relu": "doc",
    "tensorflow.raw_ops.Rint": "doc",
    "tensorflow.raw_ops.Roll": "doc",
    "tensorflow.raw_ops.Save": "doc",
    "tensorflow.raw_ops.Selu": "doc",
    "tensorflow.raw_ops.Sign": "doc",
    "tensorflow.raw_ops.Sinh": "doc",
    "tensorflow.raw_ops.Sqrt": "doc",
    "tensorflow.raw_ops.Tanh": "doc",
    "tensorflow.raw_ops.TopK": "doc",
    "tensorflow.summary.text": "doc",
    "tensorflow.compat.as_str": "doc",
    "tensorflow.math.softsign": "doc",
    "tensorflow.raw_ops.Acosh": "doc",
    "tensorflow.raw_ops.AddV2": "doc",
    "tensorflow.raw_ops.Asinh": "doc",
    "tensorflow.raw_ops.Atan2": "doc",
    "tensorflow.raw_ops.Atanh": "doc",
    "tensorflow.raw_ops.Batch": "doc",
    "tensorflow.raw_ops.Const": "doc",
    "tensorflow.raw_ops.Cross": "doc",
    "tensorflow.raw_ops.Dawsn": "doc",
    "tensorflow.raw_ops.Empty": "doc",
    "tensorflow.raw_ops.Equal": "doc",
    "tensorflow.raw_ops.Expm1": "doc",
    "tensorflow.raw_ops.FFT2D": "doc",
    "tensorflow.raw_ops.FFT3D": "doc",
    "tensorflow.raw_ops.IRFFT": "doc",
    "tensorflow.raw_ops.IsNan": "doc",
    "tensorflow.raw_ops.Log1p": "doc",
    "tensorflow.raw_ops.Ndtri": "doc",
    "tensorflow.raw_ops.PadV2": "doc",
    "tensorflow.raw_ops.Print": "doc",
    "tensorflow.raw_ops.Range": "doc",
    "tensorflow.raw_ops.Relu6": "doc",
    "tensorflow.raw_ops.Round": "doc",
    "tensorflow.raw_ops.Rsqrt": "doc",
    "tensorflow.raw_ops.Shape": "doc",
    "tensorflow.raw_ops.Split": "doc",
    "tensorflow.raw_ops.Stack": "doc",
    "tensorflow.raw_ops.Where": "doc",
    "tensorflow.raw_ops.Xdivy": "doc",
    "tensorflow.raw_ops.Xlogy": "doc",
    "tensorflow.summary.flush": "doc",
    "tensorflow.compat.v1.abs": "doc",
    "tensorflow.compat.v1.tan": "doc",
    "tensorflow.compat.as_text": "doc",
    "tensorflow.losses.LogCosh": "doc",
    "tensorflow.losses.Poisson": "doc",
    "tensorflow.losses.logcosh": "doc",
    "tensorflow.losses.poisson": "doc",
    "tensorflow.nest.is_nested": "doc",
    "tensorflow.raw_ops.ArgMax": "doc",
    "tensorflow.raw_ops.ArgMin": "doc",
    "tensorflow.raw_ops.Assert": "doc",
    "tensorflow.raw_ops.Assign": "doc",
    "tensorflow.raw_ops.Concat": "doc",
    "tensorflow.raw_ops.Conv2D": "doc",
    "tensorflow.raw_ops.Conv3D": "doc",
    "tensorflow.raw_ops.Cumsum": "doc",
    "tensorflow.raw_ops.Erfinv": "doc",
    "tensorflow.raw_ops.Expint": "doc",
    "tensorflow.raw_ops.IFFT2D": "doc",
    "tensorflow.raw_ops.IFFT3D": "doc",
    "tensorflow.raw_ops.Igamma": "doc",
    "tensorflow.raw_ops.L2Loss": "doc",
    "tensorflow.raw_ops.Lgamma": "doc",
    "tensorflow.raw_ops.MatMul": "doc",
    "tensorflow.raw_ops.PyFunc": "doc",
    "tensorflow.raw_ops.RFFT2D": "doc",
    "tensorflow.raw_ops.RFFT3D": "doc",
    "tensorflow.raw_ops.SaveV2": "doc",
    "tensorflow.raw_ops.Select": "doc",
    "tensorflow.raw_ops.ShapeN": "doc",
    "tensorflow.raw_ops.Spence": "doc",
    "tensorflow.raw_ops.SplitV": "doc",
    "tensorflow.raw_ops.Square": "doc",
    "tensorflow.raw_ops.Substr": "doc",
    "tensorflow.raw_ops.Switch": "doc",
    "tensorflow.raw_ops.ToBool": "doc",
    "tensorflow.raw_ops.TopKV2": "doc",
    "tensorflow.compat.v1.acos": "doc",
    "tensorflow.compat.v1.asin": "doc",
    "tensorflow.compat.v1.atan": "doc",
    "tensorflow.compat.v1.case": "doc",
    "tensorflow.compat.v1.data": "doc",
    "tensorflow.compat.v1.diag": "doc",
    "tensorflow.compat.v1.fill": "doc",
    "tensorflow.compat.v1.imag": "doc",
    "tensorflow.compat.v1.nest": "doc",
    "tensorflow.compat.v1.rint": "doc",
    "tensorflow.compat.v1.tanh": "doc",
    "tensorflow.compat.v1.test": "doc",
    "tensorflow.compat.as_bytes": "doc",
    "tensorflow.losses.log_cosh": "doc",
    "tensorflow.math.bessel_i0e": "doc",
    "tensorflow.math.bessel_i1e": "doc",
    "tensorflow.ragged.constant": "doc",
    "tensorflow.raw_ops.AvgPool": "doc",
    "tensorflow.raw_ops.BiasAdd": "doc",
    "tensorflow.raw_ops.CTCLoss": "doc",
    "tensorflow.raw_ops.Complex": "doc",
    "tensorflow.raw_ops.Cumprod": "doc",
    "tensorflow.raw_ops.Digamma": "doc",
    "tensorflow.raw_ops.IRFFT2D": "doc",
    "tensorflow.raw_ops.IRFFT3D": "doc",
    "tensorflow.raw_ops.Igammac": "doc",
    "tensorflow.raw_ops.MapPeek": "doc",
    "tensorflow.raw_ops.MaxPool": "doc",
    "tensorflow.raw_ops.MutexV2": "doc",
    "tensorflow.raw_ops.PrintV2": "doc",
    "tensorflow.raw_ops.RealDiv": "doc",
    "tensorflow.raw_ops.RefExit": "doc",
    "tensorflow.raw_ops.RngSkip": "doc",
    "tensorflow.raw_ops.Sigmoid": "doc",
    "tensorflow.raw_ops.Softmax": "doc",
    "tensorflow.raw_ops.Squeeze": "doc",
    "tensorflow.raw_ops.StackV2": "doc",
    "tensorflow.raw_ops.Xlog1py": "doc",
    "tensorflow.compat.v1.asinh": "doc",
    "tensorflow.compat.v1.atan2": "doc",
    "tensorflow.compat.v1.atanh": "doc",
    "tensorflow.compat.v1.equal": "doc",
    "tensorflow.compat.v1.flags": "doc",
    "tensorflow.compat.v1.foldr": "doc",
    "tensorflow.compat.v1.lbeta": "doc",
    "tensorflow.compat.v1.range": "doc",
    "tensorflow.compat.v1.shape": "doc",
    "tensorflow.compat.v1.split": "doc",
    "tensorflow.compat.v1.stack": "doc",
    "tensorflow.compat.v1.where": "doc",
    "tensorflow.data.DatasetSpec": "doc",
    "tensorflow.debugging.Assert": "doc",
    "tensorflow.losses.Reduction": "doc",
    "tensorflow.math.logical_and": "doc",
    "tensorflow.math.logical_not": "doc",
    "tensorflow.raw_ops.AllToAll": "doc",
    "tensorflow.raw_ops.AsString": "doc",
    "tensorflow.raw_ops.BatchFFT": "doc",
    "tensorflow.raw_ops.BatchSvd": "doc",
    "tensorflow.raw_ops.BesselI0": "doc",
    "tensorflow.raw_ops.BesselI1": "doc",
    "tensorflow.raw_ops.BesselJ0": "doc",
    "tensorflow.raw_ops.BesselJ1": "doc",
    "tensorflow.raw_ops.BesselK0": "doc",
    "tensorflow.raw_ops.BesselK1": "doc",
    "tensorflow.raw_ops.BesselY0": "doc",
    "tensorflow.raw_ops.BesselY1": "doc",
    "tensorflow.raw_ops.Bincount": "doc",
    "tensorflow.raw_ops.Cholesky": "doc",
    "tensorflow.raw_ops.ConcatV2": "doc",
    "tensorflow.raw_ops.CopyHost": "doc",
    "tensorflow.raw_ops.CudnnRNN": "doc",
    "tensorflow.raw_ops.DivNoNan": "doc",
    "tensorflow.raw_ops.FloorDiv": "doc",
    "tensorflow.raw_ops.FloorMod": "doc",
    "tensorflow.raw_ops.HSVToRGB": "doc",
    "tensorflow.raw_ops.Identity": "doc",
    "tensorflow.raw_ops.InTopKV2": "doc",
    "tensorflow.raw_ops.ListDiff": "doc",
    "tensorflow.raw_ops.LoopCond": "doc",
    "tensorflow.raw_ops.MapClear": "doc",
    "tensorflow.raw_ops.MapDefun": "doc",
    "tensorflow.raw_ops.MapStage": "doc",
    "tensorflow.raw_ops.MulNoNan": "doc",
    "tensorflow.raw_ops.NotEqual": "doc",
    "tensorflow.raw_ops.RGBToHSV": "doc",
    "tensorflow.raw_ops.ReadFile": "doc",
    "tensorflow.raw_ops.SelectV2": "doc",
    "tensorflow.raw_ops.Snapshot": "doc",
    "tensorflow.raw_ops.Softsign": "doc",
    "tensorflow.raw_ops.StackPop": "doc",
    "tensorflow.saved_model.save": "doc",
    "tensorflow.summary.trace_on": "doc",
    "tensorflow.compat.v1.Assert": "doc",
    "tensorflow.compat.v1.Module": "doc",
    "tensorflow.compat.v1.ifft2d": "doc",
    "tensorflow.compat.v1.ifft3d": "doc",
    "tensorflow.compat.v1.igamma": "doc",
    "tensorflow.compat.v1.is_nan": "doc",
    "tensorflow.compat.v1.losses": "doc",
    "tensorflow.compat.v1.matmul": "doc",
    "tensorflow.compat.v1.nn.lrn": "doc",
    "tensorflow.compat.v1.ragged": "doc",
    "tensorflow.compat.v1.square": "doc",
    "tensorflow.math.accumulate_n": "doc",
    "tensorflow.raw_ops.AdjustHue": "doc",
    "tensorflow.raw_ops.ApplyAdam": "doc",
    "tensorflow.raw_ops.ApplyFtrl": "doc",
    "tensorflow.raw_ops.AssignAdd": "doc",
    "tensorflow.raw_ops.AssignSub": "doc",
    "tensorflow.raw_ops.AvgPool3D": "doc",
    "tensorflow.raw_ops.BatchIFFT": "doc",
    "tensorflow.raw_ops.BesselI0e": "doc",
    "tensorflow.raw_ops.BesselI1e": "doc",
    "tensorflow.raw_ops.BesselK0e": "doc",
    "tensorflow.raw_ops.BesselK1e": "doc",
    "tensorflow.raw_ops.BiasAddV1": "doc",
    "tensorflow.raw_ops.BlockLSTM": "doc",
    "tensorflow.raw_ops.CTCLossV2": "doc",
    "tensorflow.raw_ops.CountUpTo": "doc",
    "tensorflow.raw_ops.DecodeBmp": "doc",
    "tensorflow.raw_ops.DecodeCSV": "doc",
    "tensorflow.raw_ops.DecodeGif": "doc",
    "tensorflow.raw_ops.DecodePng": "doc",
    "tensorflow.raw_ops.EncodePng": "doc",
    "tensorflow.raw_ops.FIFOQueue": "doc",
    "tensorflow.raw_ops.HashTable": "doc",
    "tensorflow.raw_ops.IdentityN": "doc",
    "tensorflow.raw_ops.LeakyRelu": "doc",
    "tensorflow.raw_ops.LeftShift": "doc",
    "tensorflow.raw_ops.MaxPool3D": "doc",
    "tensorflow.raw_ops.MaxPoolV2": "doc",
    "tensorflow.raw_ops.MutexLock": "doc",
    "tensorflow.raw_ops.Polygamma": "doc",
    "tensorflow.raw_ops.RefSelect": "doc",
    "tensorflow.raw_ops.RefSwitch": "doc",
    "tensorflow.raw_ops.StackPush": "doc",
    "tensorflow.summary.trace_off": "doc",
    "tensorflow.compat.v1.Summary": "doc",
    "tensorflow.compat.v1.complex": "doc",
    "tensorflow.compat.v1.digamma": "doc",
    "tensorflow.compat.v1.igammac": "doc",
    "tensorflow.compat.v1.nn.silu": "doc",
    "tensorflow.compat.v1.nn.tanh": "doc",
    "tensorflow.compat.v1.realdiv": "doc",
    "tensorflow.compat.v1.shape_n": "doc",
    "tensorflow.compat.v1.sigmoid": "doc",
    "tensorflow.compat.v1.squeeze": "doc",
    "tensorflow.compat.v1.summary": "doc",
    "tensorflow.matrix_square_root": "doc",
    "tensorflow.nest.map_structure": "doc",
    "tensorflow.raw_ops.BatchFFT2D": "doc",
    "tensorflow.raw_ops.BatchFFT3D": "doc",
    "tensorflow.raw_ops.CSVDataset": "doc",
    "tensorflow.raw_ops.ComplexAbs": "doc",
    "tensorflow.raw_ops.CudnnRNNV2": "doc",
    "tensorflow.raw_ops.CudnnRNNV3": "doc",
    "tensorflow.raw_ops.DecodeJpeg": "doc",
    "tensorflow.raw_ops.EncodeJpeg": "doc",
    "tensorflow.raw_ops.ExpandDims": "doc",
    "tensorflow.raw_ops.FresnelCos": "doc",
    "tensorflow.raw_ops.FresnelSin": "doc",
    "tensorflow.raw_ops.InplaceAdd": "doc",
    "tensorflow.raw_ops.InplaceSub": "doc",
    "tensorflow.raw_ops.LMDBReader": "doc",
    "tensorflow.raw_ops.LogSoftmax": "doc",
    "tensorflow.raw_ops.LogicalAnd": "doc",
    "tensorflow.raw_ops.LogicalNot": "doc",
    "tensorflow.raw_ops.LowerBound": "doc",
    "tensorflow.raw_ops.MapDataset": "doc",
    "tensorflow.raw_ops.MapUnstage": "doc",
    "tensorflow.raw_ops.MatrixDiag": "doc",
    "tensorflow.raw_ops.NcclReduce": "doc",
    "tensorflow.raw_ops.QueueClose": "doc",
    "tensorflow.raw_ops.RandomCrop": "doc",
    "tensorflow.raw_ops.ReduceJoin": "doc",
    "tensorflow.raw_ops.RemoteCall": "doc",
    "tensorflow.raw_ops.ResizeArea": "doc",
    "tensorflow.raw_ops.RightShift": "doc",
    "tensorflow.raw_ops.ScatterAdd": "doc",
    "tensorflow.raw_ops.ScatterDiv": "doc",
    "tensorflow.raw_ops.ScatterMin": "doc",
    "tensorflow.raw_ops.ScatterMul": "doc",
    "tensorflow.raw_ops.ScatterSub": "doc",
    "tensorflow.raw_ops.SdcaFprint": "doc",
    "tensorflow.raw_ops.SegmentMax": "doc",
    "tensorflow.raw_ops.SegmentMin": "doc",
    "tensorflow.raw_ops.SegmentSum": "doc",
    "tensorflow.raw_ops.SqlDataset": "doc",
    "tensorflow.raw_ops.StackClose": "doc",
    "tensorflow.raw_ops.StackPopV2": "doc",
    "tensorflow.raw_ops.StageClear": "doc",
    "tensorflow.raw_ops.StringJoin": "doc",
    "tensorflow.raw_ops.UpperBound": "doc",
    "tensorflow.compat.v1.GraphDef": "doc",
    "tensorflow.compat.v1.constant": "doc",
    "tensorflow.compat.v1.function": "doc",
    "tensorflow.compat.v1.identity": "doc",
    "tensorflow.compat.v1.math.abs": "doc",
    "tensorflow.compat.v1.math.tan": "doc",
    "tensorflow.compat.v1.to_int32": "doc",
    "tensorflow.compat.v1.to_int64": "doc",
    "tensorflow.distribute.ReduceOp": "doc",
    "tensorflow.losses.KLDivergence": "doc",
    "tensorflow.losses.SquaredHinge": "doc",
    "tensorflow.ragged.cross_hashed": "doc",
    "tensorflow.raw_ops.ApplyAdaMax": "doc",
    "tensorflow.raw_ops.ApplyFtrlV2": "doc",
    "tensorflow.raw_ops.AvgPoolGrad": "doc",
    "tensorflow.raw_ops.BatchIFFT2D": "doc",
    "tensorflow.raw_ops.BatchIFFT3D": "doc",
    "tensorflow.raw_ops.BatchMatMul": "doc",
    "tensorflow.raw_ops.BiasAddGrad": "doc",
    "tensorflow.raw_ops.BlockLSTMV2": "doc",
    "tensorflow.raw_ops.BroadcastTo": "doc",
    "tensorflow.raw_ops.ClipByValue": "doc",
    "tensorflow.raw_ops.DecodeImage": "doc",
    "tensorflow.raw_ops.DeviceIndex": "doc",
    "tensorflow.raw_ops.EagerPyFunc": "doc",
    "tensorflow.raw_ops.EncodeProto": "doc",
    "tensorflow.raw_ops.EnsureShape": "doc",
    "tensorflow.raw_ops.FIFOQueueV2": "doc",
    "tensorflow.raw_ops.Fingerprint": "doc",
    "tensorflow.raw_ops.HashTableV2": "doc",
    "tensorflow.raw_ops.IgammaGradA": "doc",
    "tensorflow.raw_ops.ImportEvent": "doc",
    "tensorflow.raw_ops.LMDBDataset": "doc",
    "tensorflow.raw_ops.LoadDataset": "doc",
    "tensorflow.raw_ops.MatrixSolve": "doc",
    "tensorflow.raw_ops.MaxPoolGrad": "doc",
    "tensorflow.raw_ops.Multinomial": "doc",
    "tensorflow.raw_ops.ParseTensor": "doc",
    "tensorflow.raw_ops.Placeholder": "doc",
    "tensorflow.raw_ops.RaggedRange": "doc",
    "tensorflow.raw_ops.RandomGamma": "doc",
    "tensorflow.raw_ops.RecordInput": "doc",
    "tensorflow.raw_ops.RefIdentity": "doc",
    "tensorflow.raw_ops.ScanDataset": "doc",
    "tensorflow.raw_ops.SegmentMean": "doc",
    "tensorflow.raw_ops.SigmoidGrad": "doc",
    "tensorflow.raw_ops.SobolSample": "doc",
    "tensorflow.raw_ops.SparseSlice": "doc",
    "tensorflow.raw_ops.SparseSplit": "doc",
    "tensorflow.raw_ops.StackPushV2": "doc",
    "tensorflow.raw_ops.StatelessIf": "doc",
    "tensorflow.raw_ops.StringLower": "doc",
    "tensorflow.raw_ops.StringSplit": "doc",
    "tensorflow.raw_ops.StringStrip": "doc",
    "tensorflow.raw_ops.StringUpper": "doc",
    "tensorflow.raw_ops.TruncateDiv": "doc",
    "tensorflow.raw_ops.TruncateMod": "doc",
    "tensorflow.raw_ops.UnbatchGrad": "doc",
    "tensorflow.raw_ops.VarHandleOp": "doc",
    "tensorflow.compat.v1.Dimension": "doc",
    "tensorflow.compat.v1.app.flags": "doc",
    "tensorflow.compat.v1.math.acos": "doc",
    "tensorflow.compat.v1.math.asin": "doc",
    "tensorflow.compat.v1.math.atan": "doc",
    "tensorflow.compat.v1.math.imag": "doc",
    "tensorflow.compat.v1.math.rint": "doc",
    "tensorflow.compat.v1.math.tanh": "doc",
    "tensorflow.compat.v1.test.main": "doc",
    "tensorflow.compat.v1.tpu.shard": "doc",
    "tensorflow.losses.squared_hinge": "doc",
    "tensorflow.raw_ops.ApplyAdagrad": "doc",
    "tensorflow.raw_ops.ApplyAddSign": "doc",
    "tensorflow.raw_ops.ApplyRMSProp": "doc",
    "tensorflow.raw_ops.AudioSummary": "doc",
    "tensorflow.raw_ops.BatchDataset": "doc",
    "tensorflow.raw_ops.BatchToSpace": "doc",
    "tensorflow.raw_ops.CSVDatasetV2": "doc",
    "tensorflow.raw_ops.ConcatOffset": "doc",
    "tensorflow.raw_ops.DepthToSpace": "doc",
    "tensorflow.raw_ops.EditDistance": "doc",
    "tensorflow.raw_ops.GRUBlockCell": "doc",
    "tensorflow.raw_ops.ImageSummary": "doc",
    "tensorflow.raw_ops.MatrixDiagV2": "doc",
    "tensorflow.raw_ops.MatrixDiagV3": "doc",
    "tensorflow.raw_ops.OptionalNone": "doc",
    "tensorflow.raw_ops.ParseExample": "doc",
    "tensorflow.raw_ops.QuantizedAdd": "doc",
    "tensorflow.raw_ops.QuantizedMul": "doc",
    "tensorflow.raw_ops.QueueCloseV2": "doc",
    "tensorflow.raw_ops.QueueDequeue": "doc",
    "tensorflow.raw_ops.QueueEnqueue": "doc",
    "tensorflow.raw_ops.RaggedGather": "doc",
    "tensorflow.raw_ops.RegexReplace": "doc",
    "tensorflow.raw_ops.RestoreSlice": "doc",
    "tensorflow.raw_ops.ScatterNdAdd": "doc",
    "tensorflow.raw_ops.ScatterNdMin": "doc",
    "tensorflow.raw_ops.ScatterNdSub": "doc",
    "tensorflow.raw_ops.SdcaShrinkL1": "doc",
    "tensorflow.raw_ops.SoftplusGrad": "doc",
    "tensorflow.raw_ops.SoftsignGrad": "doc",
    "tensorflow.raw_ops.SpaceToBatch": "doc",
    "tensorflow.raw_ops.SpaceToDepth": "doc",
    "tensorflow.raw_ops.SparseConcat": "doc",
    "tensorflow.raw_ops.SparseMatMul": "doc",
    "tensorflow.raw_ops.StackCloseV2": "doc",
    "tensorflow.raw_ops.StopGradient": "doc",
    "tensorflow.raw_ops.StridedSlice": "doc",
    "tensorflow.raw_ops.StringLength": "doc",
    "tensorflow.raw_ops.UnravelIndex": "doc",
    "tensorflow.test.gpu_device_name": "doc",
    "tensorflow.compat.v1.DeviceSpec": "doc",
    "tensorflow.compat.v1.GPUOptions": "doc",
    "tensorflow.compat.v1.LMDBReader": "doc",
    "tensorflow.compat.v1.RunOptions": "doc",
    "tensorflow.compat.v1.distribute": "doc",
    "tensorflow.compat.v1.flags.Flag": "doc",
    "tensorflow.compat.v1.identity_n": "doc",
    "tensorflow.compat.v1.math.asinh": "doc",
    "tensorflow.compat.v1.math.atan2": "doc",
    "tensorflow.compat.v1.math.atanh": "doc",
    "tensorflow.compat.v1.math.equal": "doc",
    "tensorflow.compat.v1.math.lbeta": "doc",
    "tensorflow.compat.v1.nn.l2_loss": "doc",
    "tensorflow.compat.v1.nn.sigmoid": "doc",
    "tensorflow.compat.v1.nn.softmax": "doc",
    "tensorflow.compat.v1.while_loop": "doc",
    "tensorflow.autodiff.GradientTape": "doc",
    "tensorflow.distribute.RunOptions": "doc",
    "tensorflow.raw_ops.AccumulateNV2": "doc",
    "tensorflow.raw_ops.ApplyAdadelta": "doc",
    "tensorflow.raw_ops.ApplyMomentum": "doc",
    "tensorflow.raw_ops.AvgPool3DGrad": "doc",
    "tensorflow.raw_ops.BatchCholesky": "doc",
    "tensorflow.raw_ops.BatchFunction": "doc",
    "tensorflow.raw_ops.BatchMatMulV2": "doc",
    "tensorflow.raw_ops.BroadcastArgs": "doc",
    "tensorflow.raw_ops.CropAndResize": "doc",
    "tensorflow.raw_ops.DebugIdentity": "doc",
    "tensorflow.raw_ops.DebugNanCount": "doc",
    "tensorflow.raw_ops.DecodeProtoV2": "doc",
    "tensorflow.raw_ops.DynamicStitch": "doc",
    "tensorflow.raw_ops.InfeedDequeue": "doc",
    "tensorflow.raw_ops.InfeedEnqueue": "doc",
    "tensorflow.raw_ops.InplaceUpdate": "doc",
    "tensorflow.raw_ops.LSTMBlockCell": "doc",
    "tensorflow.raw_ops.MatrixSetDiag": "doc",
    "tensorflow.raw_ops.MaxPool3DGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradV2": "doc",
    "tensorflow.raw_ops.MirrorPadGrad": "doc",
    "tensorflow.raw_ops.NcclAllReduce": "doc",
    "tensorflow.raw_ops.PlaceholderV2": "doc",
    "tensorflow.raw_ops.QueueIsClosed": "doc",
    "tensorflow.raw_ops.RandomDataset": "doc",
    "tensorflow.raw_ops.RandomPoisson": "doc",
    "tensorflow.raw_ops.RandomShuffle": "doc",
    "tensorflow.raw_ops.ResizeBicubic": "doc",
    "tensorflow.raw_ops.ScalarSummary": "doc",
    "tensorflow.raw_ops.SparseReorder": "doc",
    "tensorflow.raw_ops.SparseReshape": "doc",
    "tensorflow.raw_ops.SparseSoftmax": "doc",
    "tensorflow.raw_ops.SparseToDense": "doc",
    "tensorflow.raw_ops.StringSplitV2": "doc",
    "tensorflow.raw_ops.SummaryWriter": "doc",
    "tensorflow.raw_ops.UnicodeDecode": "doc",
    "tensorflow.raw_ops.UnicodeEncode": "doc",
    "tensorflow.raw_ops.VariableShape": "doc",
    "tensorflow.summary.SummaryWriter": "doc",
    "tensorflow.sysconfig.get_include": "doc",
    "tensorflow.test.benchmark_config": "doc",
    "tensorflow.compat.v1.fingerprint": "doc",
    "tensorflow.compat.v1.flags.FLAGS": "doc",
    "tensorflow.compat.v1.logical_and": "doc",
    "tensorflow.compat.v1.logical_not": "doc",
    "tensorflow.compat.v1.math.igamma": "doc",
    "tensorflow.compat.v1.math.is_nan": "doc",
    "tensorflow.compat.v1.math.square": "doc",
    "tensorflow.compat.v1.multinomial": "doc",
    "tensorflow.compat.v1.nn.bias_add": "doc",
    "tensorflow.compat.v1.nn.rnn_cell": "doc",
    "tensorflow.compat.v1.nn.softsign": "doc",
    "tensorflow.compat.v1.placeholder": "doc",
    "tensorflow.compat.v1.quantize_v2": "doc",
    "tensorflow.distribute.TPUStrategy": "doc",
    "tensorflow.raw_ops.ApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ApplyAdagradV2": "doc",
    "tensorflow.raw_ops.ApplyPowerSign": "doc",
    "tensorflow.raw_ops.AudioSummaryV2": "doc",
    "tensorflow.raw_ops.BatchDatasetV2": "doc",
    "tensorflow.raw_ops.BatchToSpaceND": "doc",
    "tensorflow.raw_ops.FusedPadConv2D": "doc",
    "tensorflow.raw_ops.OutfeedDequeue": "doc",
    "tensorflow.raw_ops.OutfeedEnqueue": "doc",
    "tensorflow.raw_ops.ParallelConcat": "doc",
    "tensorflow.raw_ops.ParseExampleV2": "doc",
    "tensorflow.raw_ops.QueueDequeueV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueV2": "doc",
    "tensorflow.raw_ops.RegexFullMatch": "doc",
    "tensorflow.raw_ops.RngReadAndSkip": "doc",
    "tensorflow.raw_ops.SelfAdjointEig": "doc",
    "tensorflow.raw_ops.SpaceToBatchND": "doc",
    "tensorflow.raw_ops.StatelessWhile": "doc",
    "tensorflow.compat.v1.accumulate_n": "doc",
    "tensorflow.compat.v1.flags.DEFINE": "doc",
    "tensorflow.compat.v1.load_library": "doc",
    "tensorflow.compat.v1.logging.warn": "doc",
    "tensorflow.compat.v1.math.digamma": "doc",
    "tensorflow.compat.v1.math.igammac": "doc",
    "tensorflow.compat.v1.math.polyval": "doc",
    "tensorflow.compat.v1.math.sigmoid": "doc",
    "tensorflow.compat.v1.math.softmax": "doc",
    "tensorflow.compat.v1.nest.flatten": "doc",
    "tensorflow.compat.v1.quantization": "doc",
    "tensorflow.compat.v1.ragged.cross": "doc",
    "tensorflow.compat.v1.ragged.range": "doc",
    "tensorflow.compat.v1.ragged.stack": "doc",
    "tensorflow.compat.v1.summary.text": "doc",
    "tensorflow.distribute.InputContext": "doc",
    "tensorflow.distribute.has_strategy": "doc",
    "tensorflow.math.invert_permutation": "doc",
    "tensorflow.raw_ops.BarrierTakeMany": "doc",
    "tensorflow.raw_ops.BatchMatrixDiag": "doc",
    "tensorflow.raw_ops.BlockLSTMGradV2": "doc",
    "tensorflow.raw_ops.CompressElement": "doc",
    "tensorflow.raw_ops.CrossReplicaSum": "doc",
    "tensorflow.raw_ops.DebugIdentityV2": "doc",
    "tensorflow.raw_ops.DecodePaddedRaw": "doc",
    "tensorflow.raw_ops.IteratorGetNext": "doc",
    "tensorflow.raw_ops.LookupTableFind": "doc",
    "tensorflow.raw_ops.MapUnstageNoKey": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV2": "doc",
    "tensorflow.raw_ops.MatrixSetDiagV3": "doc",
    "tensorflow.raw_ops.MaxPoolGradGrad": "doc",
    "tensorflow.raw_ops.OrderedMapClear": "doc",
    "tensorflow.raw_ops.OrderedMapStage": "doc",
    "tensorflow.raw_ops.PopulationCount": "doc",
    "tensorflow.raw_ops.PrefetchDataset": "doc",
    "tensorflow.raw_ops.QuantizedConcat": "doc",
    "tensorflow.raw_ops.QuantizedConv2D": "doc",
    "tensorflow.raw_ops.QuantizedMatMul": "doc",
    "tensorflow.raw_ops.QueueIsClosedV2": "doc",
    "tensorflow.raw_ops.RandomPoissonV2": "doc",
    "tensorflow.raw_ops.ReverseSequence": "doc",
    "tensorflow.raw_ops.SamplingDataset": "doc",
    "tensorflow.raw_ops.ScatterNdUpdate": "doc",
    "tensorflow.raw_ops.ShardedFilename": "doc",
    "tensorflow.raw_ops.ShardedFilespec": "doc",
    "tensorflow.raw_ops.SparseApplyFtrl": "doc",
    "tensorflow.raw_ops.SparseMatrixAdd": "doc",
    "tensorflow.raw_ops.SparseMatrixMul": "doc",
    "tensorflow.raw_ops.SparseMatrixNNZ": "doc",
    "tensorflow.raw_ops.SparseReduceMax": "doc",
    "tensorflow.raw_ops.SparseReduceSum": "doc",
    "tensorflow.raw_ops.TensorArrayGrad": "doc",
    "tensorflow.raw_ops.TensorArrayPack": "doc",
    "tensorflow.raw_ops.TensorArrayRead": "doc",
    "tensorflow.raw_ops.TensorListSplit": "doc",
    "tensorflow.raw_ops.TensorListStack": "doc",
    "tensorflow.raw_ops.TensorSummaryV2": "doc",
    "tensorflow.raw_ops.WholeFileReader": "doc",
    "tensorflow.saved_model.LoadOptions": "doc",
    "tensorflow.saved_model.SaveOptions": "doc",
    "tensorflow.compat.v1.Summary.Image": "doc",
    "tensorflow.compat.v1.compat.as_str": "doc",
    "tensorflow.compat.v1.math.softsign": "doc",
    "tensorflow.compat.v1.summary.Event": "doc",
    "tensorflow.distribute.NcclAllReduce": "doc",
    "tensorflow.queue.RandomShuffleQueue": "doc",
    "tensorflow.raw_ops.AdjustContrastv2": "doc",
    "tensorflow.raw_ops.AdjustSaturation": "doc",
    "tensorflow.raw_ops.ApproximateEqual": "doc",
    "tensorflow.raw_ops.AudioSpectrogram": "doc",
    "tensorflow.raw_ops.AutoShardDataset": "doc",
    "tensorflow.raw_ops.BatchMatrixSolve": "doc",
    "tensorflow.raw_ops.CTCGreedyDecoder": "doc",
    "tensorflow.raw_ops.CollectiveReduce": "doc",
    "tensorflow.raw_ops.ConsumeMutexLock": "doc",
    "tensorflow.raw_ops.CudnnRNNBackprop": "doc",
    "tensorflow.raw_ops.DataFormatDimMap": "doc",
    "tensorflow.raw_ops.DatasetFromGraph": "doc",
    "tensorflow.raw_ops.DatasetToGraphV2": "doc",
    "tensorflow.raw_ops.DecodeCompressed": "doc",
    "tensorflow.raw_ops.DummyMemoryCache": "doc",
    "tensorflow.raw_ops.ExtractJpegShape": "doc",
    "tensorflow.raw_ops.GetSessionHandle": "doc",
    "tensorflow.raw_ops.MatrixSquareRoot": "doc",
    "tensorflow.raw_ops.MutableHashTable": "doc",
    "tensorflow.raw_ops.OutfeedDequeueV2": "doc",
    "tensorflow.raw_ops.QuantizedAvgPool": "doc",
    "tensorflow.raw_ops.QuantizedMaxPool": "doc",
    "tensorflow.raw_ops.QueueDequeueMany": "doc",
    "tensorflow.raw_ops.QueueDequeueUpTo": "doc",
    "tensorflow.raw_ops.QueueEnqueueMany": "doc",
    "tensorflow.raw_ops.ReaderReadUpToV2": "doc",
    "tensorflow.raw_ops.RefNextIteration": "doc",
    "tensorflow.raw_ops.ResourceGatherNd": "doc",
    "tensorflow.raw_ops.SelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV2": "doc",
    "tensorflow.raw_ops.ShuffleDatasetV3": "doc",
    "tensorflow.raw_ops.SparseSegmentSum": "doc",
    "tensorflow.raw_ops.TFRecordReaderV2": "doc",
    "tensorflow.raw_ops.TensorArraySplit": "doc",
    "tensorflow.raw_ops.TensorArrayWrite": "doc",
    "tensorflow.raw_ops.TensorListConcat": "doc",
    "tensorflow.raw_ops.TensorListLength": "doc",
    "tensorflow.raw_ops.ThreadPoolHandle": "doc",
    "tensorflow.compat.v1.app.flags.Flag": "doc",
    "tensorflow.compat.v1.compat.as_text": "doc",
    "tensorflow.compat.v1.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.nest.is_nested": "doc",
    "tensorflow.compat.v1.nn.dynamic_rnn": "doc",
    "tensorflow.compat.v1.tpu.XLAOptions": "doc",
    "tensorflow.raw_ops.BatchCholeskyGrad": "doc",
    "tensorflow.raw_ops.CompareAndBitpack": "doc",
    "tensorflow.raw_ops.DecodeAndCropJpeg": "doc",
    "tensorflow.raw_ops.DecodeJSONExample": "doc",
    "tensorflow.raw_ops.DeleteMemoryCache": "doc",
    "tensorflow.raw_ops.DestroyResourceOp": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxes": "doc",
    "tensorflow.raw_ops.InvertPermutation": "doc",
    "tensorflow.raw_ops.IteratorGetDevice": "doc",
    "tensorflow.raw_ops.MatrixExponential": "doc",
    "tensorflow.raw_ops.MaxPool3DGradGrad": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradV2": "doc",
    "tensorflow.raw_ops.ResourceApplyAdam": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrl": "doc",
    "tensorflow.raw_ops.ResourceCountUpTo": "doc",
    "tensorflow.raw_ops.SparseApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SparseSegmentMean": "doc",
    "tensorflow.raw_ops.TemporaryVariable": "doc",
    "tensorflow.raw_ops.TensorArrayConcat": "doc",
    "tensorflow.raw_ops.TensorArrayGradV2": "doc",
    "tensorflow.raw_ops.TensorArrayGradV3": "doc",
    "tensorflow.raw_ops.TensorArrayReadV2": "doc",
    "tensorflow.raw_ops.TensorArrayReadV3": "doc",
    "tensorflow.raw_ops.TensorArrayUnpack": "doc",
    "tensorflow.raw_ops.TensorListPopBack": "doc",
    "tensorflow.raw_ops.ThreadPoolDataset": "doc",
    "tensorflow.compat.v1.app.flags.FLAGS": "doc",
    "tensorflow.compat.v1.compat.as_bytes": "doc",
    "tensorflow.compat.v1.flags.validator": "doc",
    "tensorflow.compat.v1.losses.add_loss": "doc",
    "tensorflow.compat.v1.losses.log_loss": "doc",
    "tensorflow.compat.v1.math.bessel_i0e": "doc",
    "tensorflow.compat.v1.math.bessel_i1e": "doc",
    "tensorflow.compat.v1.ragged.constant": "doc",
    "tensorflow.compat.v1.summary.Summary": "doc",
    "tensorflow.compat.v1.tpu.PaddingSpec": "doc",
    "tensorflow.nest.assert_same_structure": "doc",
    "tensorflow.raw_ops.BatchMatrixSetDiag": "doc",
    "tensorflow.raw_ops.CloseSummaryWriter": "doc",
    "tensorflow.raw_ops.CollectiveReduceV2": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV2": "doc",
    "tensorflow.raw_ops.CudnnRNNBackpropV3": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsSize": "doc",
    "tensorflow.raw_ops.DatasetCardinality": "doc",
    "tensorflow.raw_ops.DummySeedGenerator": "doc",
    "tensorflow.raw_ops.FlushSummaryWriter": "doc",
    "tensorflow.raw_ops.GetSessionHandleV2": "doc",
    "tensorflow.raw_ops.InfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.InfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.LoadAndRemapMatrix": "doc",
    "tensorflow.raw_ops.MapAndBatchDataset": "doc",
    "tensorflow.raw_ops.MergeV2Checkpoints": "doc",
    "tensorflow.raw_ops.MutableHashTableV2": "doc",
    "tensorflow.raw_ops.PaddedBatchDataset": "doc",
    "tensorflow.raw_ops.PaddingFIFOQueueV2": "doc",
    "tensorflow.raw_ops.ParallelMapDataset": "doc",
    "tensorflow.raw_ops.ParseSingleExample": "doc",
    "tensorflow.raw_ops.QueueDequeueManyV2": "doc",
    "tensorflow.raw_ops.QueueDequeueUpToV2": "doc",
    "tensorflow.raw_ops.QueueEnqueueManyV2": "doc",
    "tensorflow.raw_ops.RandomShuffleQueue": "doc",
    "tensorflow.raw_ops.ReaderRestoreState": "doc",
    "tensorflow.raw_ops.ResourceScatterAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterDiv": "doc",
    "tensorflow.raw_ops.ResourceScatterMax": "doc",
    "tensorflow.raw_ops.ResourceScatterMin": "doc",
    "tensorflow.raw_ops.ResourceScatterMul": "doc",
    "tensorflow.raw_ops.ResourceScatterSub": "doc",
    "tensorflow.raw_ops.SparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.SparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.SparseMatrixMatMul": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtN": "doc",
    "tensorflow.raw_ops.StaticRegexReplace": "doc",
    "tensorflow.raw_ops.StringToHashBucket": "doc",
    "tensorflow.raw_ops.TPUPartitionedCall": "doc",
    "tensorflow.raw_ops.TPUReplicatedInput": "doc",
    "tensorflow.raw_ops.TensorArrayScatter": "doc",
    "tensorflow.raw_ops.TensorArraySplitV2": "doc",
    "tensorflow.raw_ops.TensorArraySplitV3": "doc",
    "tensorflow.raw_ops.TensorListConcatV2": "doc",
    "tensorflow.raw_ops.TensorListPushBack": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMax": "doc",
    "tensorflow.raw_ops.UnsortedSegmentMin": "doc",
    "tensorflow.raw_ops.UnsortedSegmentSum": "doc",
    "tensorflow.raw_ops.WrapDatasetVariant": "doc",
    "tensorflow.summary.create_noop_writer": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE": "doc",
    "tensorflow.compat.v1.data.DatasetSpec": "doc",
    "tensorflow.compat.v1.debugging.Assert": "doc",
    "tensorflow.compat.v1.debugging.is_nan": "doc",
    "tensorflow.compat.v1.losses.Reduction": "doc",
    "tensorflow.compat.v1.math.logical_and": "doc",
    "tensorflow.compat.v1.math.logical_not": "doc",
    "tensorflow.compat.v1.saved_model.save": "doc",
    "tensorflow.autodiff.ForwardAccumulator": "doc",
    "tensorflow.distribute.MirroredStrategy": "doc",
    "tensorflow.distribute.StrategyExtended": "doc",
    "tensorflow.distribute.cluster_resolver": "doc",
    "tensorflow.raw_ops.AnonymousIteratorV2": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEig": "doc",
    "tensorflow.raw_ops.BoostedTreesPredict": "doc",
    "tensorflow.raw_ops.Conv2DBackpropInput": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInput": "doc",
    "tensorflow.raw_ops.DebugNumericSummary": "doc",
    "tensorflow.raw_ops.DeleteSeedGenerator": "doc",
    "tensorflow.raw_ops.DrawBoundingBoxesV2": "doc",
    "tensorflow.raw_ops.ExtractImagePatches": "doc",
    "tensorflow.raw_ops.IteratorGetNextSync": "doc",
    "tensorflow.raw_ops.LatencyStatsDataset": "doc",
    "tensorflow.raw_ops.LookupTableExportV2": "doc",
    "tensorflow.raw_ops.LookupTableImportV2": "doc",
    "tensorflow.raw_ops.LookupTableRemoveV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV2": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV3": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV4": "doc",
    "tensorflow.raw_ops.NonMaxSuppressionV5": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTuple": "doc",
    "tensorflow.raw_ops.OutfeedEnqueueTuple": "doc",
    "tensorflow.raw_ops.ParseExampleDataset": "doc",
    "tensorflow.raw_ops.ResourceApplyAdaMax": "doc",
    "tensorflow.raw_ops.ResourceApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SparseApplyAdadelta": "doc",
    "tensorflow.raw_ops.SparseApplyMomentum": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseAdd": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseDiv": "doc",
    "tensorflow.raw_ops.SparseDenseCwiseMul": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRows": "doc",
    "tensorflow.raw_ops.SparseSparseMaximum": "doc",
    "tensorflow.raw_ops.SparseSparseMinimum": "doc",
    "tensorflow.raw_ops.TPUReplicatedOutput": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV2": "doc",
    "tensorflow.raw_ops.TensorArrayConcatV3": "doc",
    "tensorflow.raw_ops.TensorScatterUpdate": "doc",
    "tensorflow.raw_ops.UnsortedSegmentJoin": "doc",
    "tensorflow.compat.v1.NodeDef.AttrEntry": "doc",
    "tensorflow.compat.v1.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.math.accumulate_n": "doc",
    "tensorflow.compat.v1.test.get_temp_dir": "doc",
    "tensorflow.raw_ops.AnonymousMemoryCache": "doc",
    "tensorflow.raw_ops.ApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ApplyGradientDescent": "doc",
    "tensorflow.raw_ops.CTCBeamSearchDecoder": "doc",
    "tensorflow.raw_ops.ChooseFastestDataset": "doc",
    "tensorflow.raw_ops.DataFormatVecPermute": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV2": "doc",
    "tensorflow.raw_ops.FusedBatchNormGradV3": "doc",
    "tensorflow.raw_ops.GroupByWindowDataset": "doc",
    "tensorflow.raw_ops.PaddedBatchDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelMapDatasetV2": "doc",
    "tensorflow.raw_ops.ParseSequenceExample": "doc",
    "tensorflow.raw_ops.RaggedTensorToSparse": "doc",
    "tensorflow.raw_ops.RaggedTensorToTensor": "doc",
    "tensorflow.raw_ops.RandomShuffleQueueV2": "doc",
    "tensorflow.raw_ops.ReaderRestoreStateV2": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagrad": "doc",
    "tensorflow.raw_ops.ResourceApplyAddSign": "doc",
    "tensorflow.raw_ops.ResourceApplyRMSProp": "doc",
    "tensorflow.raw_ops.ResourceScatterNdAdd": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMax": "doc",
    "tensorflow.raw_ops.ResourceScatterNdMin": "doc",
    "tensorflow.raw_ops.ResourceScatterNdSub": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.SparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.SparseTensorDenseAdd": "doc",
    "tensorflow.raw_ops.StatelessMultinomial": "doc",
    "tensorflow.raw_ops.StaticRegexFullMatch": "doc",
    "tensorflow.raw_ops.TPUReplicateMetadata": "doc",
    "tensorflow.compat.v1.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.add_to_collections": "doc",
    "tensorflow.compat.v1.app.flags.EnumFlag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.get_collection_ref": "doc",
    "tensorflow.compat.v1.get_local_variable": "doc",
    "tensorflow.compat.v1.get_session_tensor": "doc",
    "tensorflow.compat.v1.invert_permutation": "doc",
    "tensorflow.compat.v1.matrix_determinant": "doc",
    "tensorflow.compat.v1.matrix_square_root": "doc",
    "tensorflow.compat.v1.nest.map_structure": "doc",
    "tensorflow.compat.v1.ragged.placeholder": "doc",
    "tensorflow.compat.v1.summary.SessionLog": "doc",
    "tensorflow.compat.v1.tensor_scatter_add": "doc",
    "tensorflow.data.FixedLengthRecordDataset": "doc",
    "tensorflow.quantization.quantized_concat": "doc",
    "tensorflow.raw_ops.BatchSelfAdjointEigV2": "doc",
    "tensorflow.raw_ops.BoostedTreesBucketize": "doc",
    "tensorflow.raw_ops.ConfigureTPUEmbedding": "doc",
    "tensorflow.raw_ops.Conv3DBackpropInputV2": "doc",
    "tensorflow.raw_ops.DebugGradientIdentity": "doc",
    "tensorflow.raw_ops.DebugNumericSummaryV2": "doc",
    "tensorflow.raw_ops.DepthwiseConv2dNative": "doc",
    "tensorflow.raw_ops.GroupByReducerDataset": "doc",
    "tensorflow.raw_ops.MaxPoolGradWithArgmax": "doc",
    "tensorflow.raw_ops.MutableDenseHashTable": "doc",
    "tensorflow.raw_ops.OutfeedDequeueTupleV2": "doc",
    "tensorflow.raw_ops.ParallelDynamicStitch": "doc",
    "tensorflow.raw_ops.ParseExampleDatasetV2": "doc",
    "tensorflow.raw_ops.RaggedTensorToVariant": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighbor": "doc",
    "tensorflow.raw_ops.ResourceApplyAdadelta": "doc",
    "tensorflow.raw_ops.ResourceApplyMomentum": "doc",
    "tensorflow.raw_ops.ResourceScatterUpdate": "doc",
    "tensorflow.raw_ops.SparseReduceMaxSparse": "doc",
    "tensorflow.raw_ops.SparseReduceSumSparse": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanGrad": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandle": "doc",
    "tensorflow.compat.v1.app.flags.validator": "doc",
    "tensorflow.compat.v1.distribute.ReduceOp": "doc",
    "tensorflow.compat.v1.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.GRUCell": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.RNNCell": "doc",
    "tensorflow.compat.v1.ragged.cross_hashed": "doc",
    "tensorflow.distribute.get_replica_context": "doc",
    "tensorflow.raw_ops.AnonymousSeedGenerator": "doc",
    "tensorflow.raw_ops.DenseCountSparseOutput": "doc",
    "tensorflow.raw_ops.DenseToCSRSparseMatrix": "doc",
    "tensorflow.raw_ops.GenerateVocabRemapping": "doc",
    "tensorflow.raw_ops.IteratorToStringHandle": "doc",
    "tensorflow.raw_ops.OrderedMapUnstageNoKey": "doc",
    "tensorflow.raw_ops.ParseSequenceExampleV2": "doc",
    "tensorflow.raw_ops.PlaceholderWithDefault": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRelu": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceApplyAdagradV2": "doc",
    "tensorflow.raw_ops.ResourceApplyPowerSign": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNGrad": "doc",
    "tensorflow.raw_ops.StatefulRandomBinomial": "doc",
    "tensorflow.raw_ops.StatelessRandomGammaV2": "doc",
    "tensorflow.raw_ops.StatelessRandomPoisson": "doc",
    "tensorflow.raw_ops.StatsAggregatorSummary": "doc",
    "tensorflow.compat.v1.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.flags.get_help_width": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMCell": "doc",
    "tensorflow.compat.v1.test.gpu_device_name": "doc",
    "tensorflow.distribute.ReductionToOneDevice": "doc",
    "tensorflow.raw_ops.AccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.FusedResizeAndPadConv2D": "doc",
    "tensorflow.raw_ops.MutableDenseHashTableV2": "doc",
    "tensorflow.raw_ops.RaggedCountSparseOutput": "doc",
    "tensorflow.raw_ops.RaggedTensorFromVariant": "doc",
    "tensorflow.raw_ops.ResourceScatterNdUpdate": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrl": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDataset": "doc",
    "tensorflow.raw_ops.SparseCountSparseOutput": "doc",
    "tensorflow.raw_ops.SparseFillEmptyRowsGrad": "doc",
    "tensorflow.raw_ops.SparseMatrixSoftmaxGrad": "doc",
    "tensorflow.raw_ops.SparseTensorDenseMatMul": "doc",
    "tensorflow.raw_ops.StatelessRandomBinomial": "doc",
    "tensorflow.raw_ops.StatsAggregatorHandleV2": "doc",
    "tensorflow.summary.should_record_summaries": "doc",
    "tensorflow.compat.v1.app.flags.BooleanFlag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_bool": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_flag": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_list": "doc",
    "tensorflow.compat.v1.app.flags.doc_to_help": "doc",
    "tensorflow.compat.v1.data.get_output_types": "doc",
    "tensorflow.compat.v1.distribute.RunOptions": "doc",
    "tensorflow.compat.v1.nn.quantized_avg_pool": "doc",
    "tensorflow.compat.v1.nn.quantized_max_pool": "doc",
    "tensorflow.compat.v1.ragged.constant_value": "doc",
    "tensorflow.compat.v1.summary.Summary.Image": "doc",
    "tensorflow.compat.v1.sysconfig.get_include": "doc",
    "tensorflow.compat.v1.test.benchmark_config": "doc",
    "tensorflow.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.raw_ops.AccumulatorApplyGradient": "doc",
    "tensorflow.raw_ops.AccumulatorSetGlobalStep": "doc",
    "tensorflow.raw_ops.DebugGradientRefIdentity": "doc",
    "tensorflow.raw_ops.DenseToDenseSetOperation": "doc",
    "tensorflow.raw_ops.DestroyTemporaryVariable": "doc",
    "tensorflow.raw_ops.FixedLengthRecordDataset": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandle": "doc",
    "tensorflow.raw_ops.OrderedMapIncompleteSize": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2D": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProduced": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseMatMul": "doc",
    "tensorflow.raw_ops.TensorArrayGradWithShape": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_alias": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_float": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi": "doc",
    "tensorflow.compat.v1.data.get_output_shapes": "doc",
    "tensorflow.compat.v1.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.losses.cosine_distance": "doc",
    "tensorflow.compat.v1.test.StubOutForTesting": "doc",
    "tensorflow.compat.v1.test.test_src_dir_path": "doc",
    "tensorflow.raw_ops.AccumulatorNumAccumulated": "doc",
    "tensorflow.raw_ops.BytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.CSRSparseMatrixComponents": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonical": "doc",
    "tensorflow.raw_ops.DeleteRandomSeedGenerator": "doc",
    "tensorflow.raw_ops.DenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.DenseToSparseSetOperation": "doc",
    "tensorflow.raw_ops.EncodeJpegVariableQuality": "doc",
    "tensorflow.raw_ops.ExperimentalRandomDataset": "doc",
    "tensorflow.raw_ops.IteratorGetNextAsOptional": "doc",
    "tensorflow.raw_ops.MaxPoolGradGradWithArgmax": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDataset": "doc",
    "tensorflow.raw_ops.QuantizedConv2DPerChannel": "doc",
    "tensorflow.raw_ops.ResizeNearestNeighborGrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyFtrlV2": "doc",
    "tensorflow.raw_ops.SetStatsAggregatorDataset": "doc",
    "tensorflow.raw_ops.ShuffleAndRepeatDatasetV2": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_string": "doc",
    "tensorflow.compat.v1.app.flags.EnumClassFlag": "doc",
    "tensorflow.compat.v1.data.get_output_classes": "doc",
    "tensorflow.compat.v1.distribute.InputContext": "doc",
    "tensorflow.compat.v1.distribute.has_strategy": "doc",
    "tensorflow.compat.v1.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.math.invert_permutation": "doc",
    "tensorflow.compat.v1.saved_model.SaveOptions": "doc",
    "tensorflow.losses.MeanAbsolutePercentageError": "doc",
    "tensorflow.losses.MeanSquaredLogarithmicError": "doc",
    "tensorflow.raw_ops.BatchMatrixTriangularSolve": "doc",
    "tensorflow.raw_ops.BoostedTreesAggregateStats": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateEnsemble": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsemble": "doc",
    "tensorflow.raw_ops.ChooseFastestBranchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalRebatchDataset": "doc",
    "tensorflow.raw_ops.ExperimentalUnbatchDataset": "doc",
    "tensorflow.raw_ops.IteratorFromStringHandleV2": "doc",
    "tensorflow.raw_ops.ParseSingleSequenceExample": "doc",
    "tensorflow.raw_ops.QuantizeDownAndShrinkRange": "doc",
    "tensorflow.raw_ops.ReaderNumRecordsProducedV2": "doc",
    "tensorflow.raw_ops.ResourceApplyKerasMomentum": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyRMSProp": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBox": "doc",
    "tensorflow.raw_ops.SparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.SparseApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.SparseMatrixSparseCholesky": "doc",
    "tensorflow.raw_ops.SparseToSparseSetOperation": "doc",
    "tensorflow.raw_ops.StatelessTruncatedNormalV2": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_boolean": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_integer": "doc",
    "tensorflow.compat.v1.app.flags.get_help_width": "doc",
    "tensorflow.compat.v1.distribute.NcclAllReduce": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicRNNCell": "doc",
    "tensorflow.compat.v1.queue.RandomShuffleQueue": "doc",
    "tensorflow.compat.v1.ragged.RaggedTensorValue": "doc",
    "tensorflow.raw_ops.BoostedTreesTrainingPredict": "doc",
    "tensorflow.raw_ops.CudnnRNNParamsToCanonicalV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV3": "doc",
    "tensorflow.raw_ops.ParallelInterleaveDatasetV4": "doc",
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompleted": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdadelta": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyMomentum": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_string": "doc",
    "tensorflow.compat.v1.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.mixed_precision.LossScale": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.BasicLSTMCell": "doc",
    "tensorflow.compat.v1.summary.TaggedRunMetadata": "doc",
    "tensorflow.raw_ops.AnonymousRandomSeedGenerator": "doc",
    "tensorflow.raw_ops.BoostedTreesMakeStatsSummary": "doc",
    "tensorflow.raw_ops.BoostedTreesUpdateEnsembleV2": "doc",
    "tensorflow.raw_ops.ExperimentalThreadPoolHandle": "doc",
    "tensorflow.raw_ops.FilterByLastComponentDataset": "doc",
    "tensorflow.raw_ops.ParameterizedTruncatedNormal": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndRequantize": "doc",
    "tensorflow.raw_ops.ResourceApplyAdamWithAmsgrad": "doc",
    "tensorflow.raw_ops.ResourceApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ResourceApplyGradientDescent": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradDA": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyAdagradV2": "doc",
    "tensorflow.raw_ops.SampleDistortedBoundingBoxV2": "doc",
    "tensorflow.compat.v1.app.flags.declare_key_flag": "doc",
    "tensorflow.compat.v1.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.nest.assert_same_structure": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.DropoutWrapper": "doc",
    "tensorflow.compat.v1.nn.rnn_cell.LSTMStateTuple": "doc",
    "tensorflow.compat.v1.summary.SummaryDescription": "doc",
    "tensorflow.compat.v1.summary.all_v2_summary_ops": "doc",
    "tensorflow.losses.mean_absolute_percentage_error": "doc",
    "tensorflow.raw_ops.BoostedTreesGetEnsembleStates": "doc",
    "tensorflow.raw_ops.SoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.SparseAccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.SparseTensorToCSRSparseMatrix": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_enum_class": "doc",
    "tensorflow.compat.v1.distribute.MirroredStrategy": "doc",
    "tensorflow.compat.v1.distribute.StrategyExtended": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver": "doc",
    "tensorflow.compat.v1.flags.mark_flag_as_required": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseBatch": "doc",
    "tensorflow.raw_ops.ExperimentalDatasetCardinality": "doc",
    "tensorflow.raw_ops.ExperimentalMapAndBatchDataset": "doc",
    "tensorflow.raw_ops.SparseAccumulatorApplyGradient": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_float": "doc",
    "tensorflow.compat.v1.app.flags.MultiEnumClassFlag": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.python_io.tf_record_iterator": "doc",
    "tensorflow.raw_ops.BoostedTreesExampleDebugOutputs": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingIntegerBatch": "doc",
    "tensorflow.raw_ops.ExperimentalLatencyStatsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalParseExampleDataset": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorTakeGradient": "doc",
    "tensorflow.raw_ops.SparseSegmentSumWithNumSegments": "doc",
    "tensorflow.raw_ops.StatelessRandomGetKeyCounterAlg": "doc",
    "tensorflow.raw_ops.StatsAggregatorSetSummaryWriter": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_string": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_spaceseplist": "doc",
    "tensorflow.compat.v1.data.FixedLengthRecordDataset": "doc",
    "tensorflow.compat.v1.distribute.get_loss_reduction": "doc",
    "tensorflow.compat.v1.quantization.quantized_concat": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseAggregateStats": "doc",
    "tensorflow.raw_ops.ExperimentalChooseFastestDataset": "doc",
    "tensorflow.raw_ops.ExperimentalGroupByWindowDataset": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorApplyGradient": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorSetGlobalStep": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyKerasMomentum": "doc",
    "tensorflow.raw_ops.SparseSegmentMeanWithNumSegments": "doc",
    "tensorflow.compat.v1.app.flags.DEFINE_multi_integer": "doc",
    "tensorflow.compat.v1.distribute.get_replica_context": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorHandle": "doc",
    "tensorflow.raw_ops.LegacyParallelInterleaveDatasetV2": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorToStringHandle": "doc",
    "tensorflow.raw_ops.ResourceAccumulatorNumAccumulated": "doc",
    "tensorflow.raw_ops.SparseSegmentSqrtNWithNumSegments": "doc",
    "tensorflow.compat.v1.app.flags.mark_flag_as_required": "doc",
    "tensorflow.compat.v1.distribute.ReductionToOneDevice": "doc",
    "tensorflow.compat.v1.summary.get_summary_description": "doc",
    "tensorflow.raw_ops.ExperimentalStatsAggregatorSummary": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyCenteredRMSProp": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalAdagrad": "doc",
    "tensorflow.raw_ops.SparseApplyProximalGradientDescent": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_required": "doc",
    "tensorflow.compat.v1.ragged.row_splits_to_segment_ids": "doc",
    "tensorflow.compat.v1.ragged.segment_ids_to_row_splits": "doc",
    "tensorflow.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.raw_ops.MultiDeviceIteratorFromStringHandle": "doc",
    "tensorflow.raw_ops.QuantizedConv2DAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.SparseSoftmaxCrossEntropyWithLogits": "doc",
    "tensorflow.raw_ops.StatelessSampleDistortedBoundingBox": "doc",
    "tensorflow.raw_ops.BoostedTreesEnsembleResourceHandleOp": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingRaggedTensorBatch": "doc",
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseTensorBatch": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndDequantize": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRequantize": "doc",
    "tensorflow.raw_ops.ResourceApplyProximalGradientDescent": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.ExperimentalBytesProducedStatsDataset": "doc",
    "tensorflow.raw_ops.ExperimentalDenseToSparseBatchDataset": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParameters": "doc",
    "tensorflow.raw_ops.StatelessParameterizedTruncatedNormal": "doc",
    "tensorflow.compat.v1.losses.sparse_softmax_cross_entropy": "doc",
    "tensorflow.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.compat.v1.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplitV2": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceFlush": "doc",
    "tensorflow.raw_ops.BoostedTreesCalculateBestGainsPerFeature": "doc",
    "tensorflow.raw_ops.BoostedTreesCreateQuantileStreamResource": "doc",
    "tensorflow.compat.v1.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceHandleOp": "doc",
    "tensorflow.raw_ops.ResourceSparseApplyProximalGradientDescent": "doc",
    "tensorflow.compat.v1.app.flags.mark_flags_as_mutual_exclusive": "doc",
    "tensorflow.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit": "doc",
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndReluAndRequantize": "doc",
    "tensorflow.compat.v1.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.app.flags.FlagNameConflictsWithMethodError": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceDeserialize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingCenteredRMSPropParameters": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.ClusterResolver": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceAddSummaries": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.app.flags.mark_bool_flags_as_mutual_exclusive": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.GCEClusterResolver": "doc",
    "tensorflow.compat.v1.distribute.cluster_resolver.TPUClusterResolver": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSignedSumAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceGetBucketBoundaries": "doc",
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.compat.v1.mixed_precision.enable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParameters": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParametersGradAccumDebug": "doc",
    "tensorflow.compat.v1.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc",
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug": "doc",
    "tensorflow.io.TFRecordWriter": "doc",
    "tensorflow.compat.v1.io.TFRecordWriter": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_args_gradient": "doc",
    "tensorflow.compat.v1.mixed_precision.disable_mixed_precision_graph_rewrite": "doc",
    "tensorflow.feature_column.make_parse_example_spec": "doc",
    "tensorflow.compat.v1.feature_column.make_parse_example_spec": "doc",
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.compat.v1.feature_column.sequence_categorical_column_with_vocabulary_file": "doc",
    "tensorflow.nn.scale_regularization_loss": "doc",
    "tensorflow.compat.v1.enable_resource_variables": "doc",
    "tensorflow.compat.v1.nn.scale_regularization_loss": "doc",
    "tensorflow.VariableAggregation": "doc",
    "tensorflow.compat.v1.VariableAggregation": "doc",
    "tensorflow.compat.v1.resource_loader.get_data_files_path": "doc",
    "tensorflow.compat.v1.resource_loader.readahead_file_path": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native_backprop_input": "doc",
    "tensorflow.assert_greater": "doc",
    "tensorflow.debugging.assert_greater": "doc",
    "tensorflow.compat.v1.assert_greater": "doc",
    "tensorflow.compat.v1.scatter_nd_sub": "doc",
    "tensorflow.compat.v1.variable_scope": "doc",
    "tensorflow.compat.v1.debugging.assert_greater": "doc",
    "tensorflow.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.compat.v1.feature_column.categorical_column_with_hash_bucket": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_filter": "doc",
    "tensorflow.TensorArray": "doc",
    "tensorflow.TensorShape": "doc",
    "tensorflow.assert_rank": "doc",
    "tensorflow.math.segment_sum": "doc",
    "tensorflow.debugging.assert_near": "doc",
    "tensorflow.debugging.assert_rank": "doc",
    "tensorflow.compat.v1.TensorArray": "doc",
    "tensorflow.compat.v1.TensorShape": "doc",
    "tensorflow.compat.v1.assert_near": "doc",
    "tensorflow.compat.v1.assert_rank": "doc",
    "tensorflow.compat.v1.scatter_add": "doc",
    "tensorflow.compat.v1.scatter_max": "doc",
    "tensorflow.compat.v1.scatter_sub": "doc",
    "tensorflow.compat.v1.segment_sum": "doc",
    "tensorflow.compat.v1.sparse_mask": "doc",
    "tensorflow.compat.v1.math.segment_sum": "doc",
    "tensorflow.compat.v1.debugging.assert_near": "doc",
    "tensorflow.compat.v1.debugging.assert_rank": "doc",
    "tensorflow.io.FixedLenFeature": "doc",
    "tensorflow.config.experimental": "doc",
    "tensorflow.experimental.numpy.diff": "doc",
    "tensorflow.experimental.numpy.sort": "doc",
    "tensorflow.experimental.numpy.tensordot": "doc",
    "tensorflow.compat.v1.io.FixedLenFeature": "doc",
    "tensorflow.compat.v1.config.experimental": "doc",
    "tensorflow.config.experimental.get_memory_usage": "doc",
    "tensorflow.config.experimental.get_memory_growth": "doc",
    "tensorflow.config.experimental.set_memory_growth": "doc",
    "tensorflow.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_usage": "doc",
    "tensorflow.compat.v1.config.experimental.get_memory_growth": "doc",
    "tensorflow.compat.v1.config.experimental.set_memory_growth": "doc",
    "tensorflow.compat.v1.config.experimental.get_synchronous_execution": "doc",
    "tensorflow.compat.v1.config.experimental.set_synchronous_execution": "doc",
    "tensorflow.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.compat.v1.tpu.experimental.shutdown_tpu_system": "doc",
    "tensorflow.edit_distance": "doc",
    "tensorflow.stop_gradient": "doc",
    "tensorflow.strided_slice": "doc",
    "tensorflow.math.divide_no_nan": "doc",
    "tensorflow.lookup.TextFileIndex": "doc",
    "tensorflow.compat.v1.VariableScope": "doc",
    "tensorflow.compat.v1.edit_distance": "doc",
    "tensorflow.compat.v1.stop_gradient": "doc",
    "tensorflow.compat.v1.strided_slice": "doc",
    "tensorflow.compat.v1.math.divide_no_nan": "doc",
    "tensorflow.compat.v1.lookup.TextFileIndex": "doc",
    "tensorflow.compat.v1.disable_resource_variables": "doc",
    "tensorflow.compat.v1.resource_variables_enabled": "doc",
    "tensorflow.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits": "doc",
    "tensorflow.nn.max_pool_with_argmax": "doc",
    "tensorflow.nn.sampled_softmax_loss": "doc",
    "tensorflow.math.unsorted_segment_max": "doc",
    "tensorflow.math.unsorted_segment_min": "doc",
    "tensorflow.debugging.assert_greater_equal": "doc",
    "tensorflow.compat.v1.assert_greater_equal": "doc",
    "tensorflow.compat.v1.parse_single_example": "doc",
    "tensorflow.compat.v1.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.unsorted_segment_min": "doc",
    "tensorflow.saved_model.contains_saved_model": "doc",
    "tensorflow.compat.v1.nn.max_pool_with_argmax": "doc",
    "tensorflow.compat.v1.nn.sampled_softmax_loss": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_max": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_min": "doc",
    "tensorflow.compat.v1.debugging.assert_greater_equal": "doc",
    "tensorflow.compat.v1.saved_model.contains_saved_model": "doc",
    "tensorflow.compat.v1.convert_to_tensor_or_sparse_tensor": "doc",
    "tensorflow.nn.zero_fraction": "doc",
    "tensorflow.math.zero_fraction": "doc",
    "tensorflow.compat.v1.nn.zero_fraction": "doc",
    "tensorflow.compat.v1.math.zero_fraction": "doc",
    "tensorflow.dynamic_stitch": "doc",
    "tensorflow.tensor_scatter_nd_add": "doc",
    "tensorflow.tensor_scatter_nd_max": "doc",
    "tensorflow.tensor_scatter_nd_min": "doc",
    "tensorflow.compat.v1.HistogramProto": "doc",
    "tensorflow.compat.v1.dynamic_stitch": "doc",
    "tensorflow.compat.v1.random_poisson": "doc",
    "tensorflow.math.unsorted_segment_mean": "doc",
    "tensorflow.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_add": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_max": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_min": "doc",
    "tensorflow.compat.v1.tensor_scatter_update": "doc",
    "tensorflow.compat.v1.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.nn.conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.python_io.TFRecordWriter": "doc",
    "tensorflow.register_tensor_conversion_function": "doc",
    "tensorflow.compat.v1.math.unsorted_segment_mean": "doc",
    "tensorflow.compat.v1.NodeDef.ExperimentalDebugInfo": "doc",
    "tensorflow.compat.v1.nn.safe_embedding_lookup_sparse": "doc",
    "tensorflow.compat.v1.register_tensor_conversion_function": "doc",
    "tensorflow.compat.v1.fake_quant_with_min_max_vars_per_channel_gradient": "doc",
    "tensorflow.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.compat.v1.debugging.experimental.enable_dump_debug_info": "doc",
    "tensorflow.io.decode_compressed": "doc",
    "tensorflow.compat.v1.io.decode_compressed": "doc",
    "tensorflow.compat.v1.feature_column.shared_embedding_columns": "doc",
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits_v2": "doc",
    "tensorflow.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.compat.v1.debugging.experimental.disable_dump_debug_info": "doc",
    "tensorflow.broadcast_static_shape": "doc",
    "tensorflow.compat.v1.add_check_numerics_ops": "doc",
    "tensorflow.compat.v1.broadcast_static_shape": "doc",
    "tensorflow.compat.v1.enable_control_flow_v2": "doc",
    "tensorflow.compat.v1.enable_eager_execution": "doc",
    "tensorflow.compat.v1.enable_tensor_equality": "doc",
    "tensorflow.compat.v1.sparse_tensor_to_dense": "doc",
    "tensorflow.compat.v1.logging.TaskLevelStatusMessage": "doc",
    "tensorflow.io.decode_base64": "doc",
    "tensorflow.compat.v1.io.decode_base64": "doc",
    "tensorflow.meshgrid": "doc",
    "tensorflow.assert_equal": "doc",
    "tensorflow.boolean_mask": "doc",
    "tensorflow.experimental": "doc",
    "tensorflow.TensorArraySpec": "doc",
    "tensorflow.guarantee_const": "doc",
    "tensorflow.mixed_precision": "doc",
    "tensorflow.tpu.experimental": "doc",
    "tensorflow.xla.experimental": "doc",
    "tensorflow.math.segment_prod": "doc",
    "tensorflow.autograph.to_graph": "doc",
    "tensorflow.experimental.numpy": "doc",
    "tensorflow.compat.v1.meshgrid": "doc",
    "tensorflow.compat.v1.where_v2": "doc",
    "tensorflow.experimental.dlpack": "doc",
    "tensorflow.lookup.experimental": "doc",
    "tensorflow.math.reduce_variance": "doc",
    "tensorflow.autograph.experimental": "doc",
    "tensorflow.debugging.assert_equal": "doc",
    "tensorflow.debugging.experimental": "doc",
    "tensorflow.experimental.numpy.add": "doc",
    "tensorflow.experimental.numpy.any": "doc",
    "tensorflow.experimental.numpy.cos": "doc",
    "tensorflow.experimental.numpy.dot": "doc",
    "tensorflow.experimental.numpy.exp": "doc",
    "tensorflow.experimental.numpy.eye": "doc",
    "tensorflow.experimental.numpy.fix": "doc",
    "tensorflow.experimental.numpy.gcd": "doc",
    "tensorflow.experimental.numpy.ix_": "doc",
    "tensorflow.experimental.numpy.lcm": "doc",
    "tensorflow.experimental.numpy.log": "doc",
    "tensorflow.experimental.numpy.max": "doc",
    "tensorflow.experimental.numpy.min": "doc",
    "tensorflow.experimental.numpy.mod": "doc",
    "tensorflow.experimental.numpy.pad": "doc",
    "tensorflow.experimental.numpy.ptp": "doc",
    "tensorflow.experimental.numpy.sin": "doc",
    "tensorflow.experimental.numpy.std": "doc",
    "tensorflow.experimental.numpy.sum": "doc",
    "tensorflow.compat.v1.MetaGraphDef": "doc",
    "tensorflow.compat.v1.NameAttrList": "doc",
    "tensorflow.compat.v1.assert_equal": "doc",
    "tensorflow.compat.v1.boolean_mask": "doc",
    "tensorflow.compat.v1.experimental": "doc",
    "tensorflow.compat.v1.segment_prod": "doc",
    "tensorflow.experimental.numpy.amax": "doc",
    "tensorflow.experimental.numpy.cbrt": "doc",
    "tensorflow.experimental.numpy.conj": "doc",
    "tensorflow.experimental.numpy.copy": "doc",
    "tensorflow.experimental.numpy.cosh": "doc",
    "tensorflow.experimental.numpy.exp2": "doc",
    "tensorflow.experimental.numpy.full": "doc",
    "tensorflow.experimental.numpy.log2": "doc",
    "tensorflow.experimental.numpy.prod": "doc",
    "tensorflow.experimental.numpy.roll": "doc",
    "tensorflow.experimental.numpy.sign": "doc",
    "tensorflow.experimental.numpy.sinc": "doc",
    "tensorflow.experimental.numpy.sinh": "doc",
    "tensorflow.experimental.numpy.sqrt": "doc",
    "tensorflow.experimental.numpy.vdot": "doc",
    "tensorflow.experimental.async_scope": "doc",
    "tensorflow.experimental.numpy.bool_": "doc",
    "tensorflow.experimental.numpy.cross": "doc",
    "tensorflow.experimental.numpy.empty": "doc",
    "tensorflow.experimental.numpy.expm1": "doc",
    "tensorflow.experimental.numpy.hypot": "doc",
    "tensorflow.experimental.numpy.log10": "doc",
    "tensorflow.experimental.numpy.log1p": "doc",
    "tensorflow.experimental.numpy.rot90": "doc",
    "tensorflow.experimental.numpy.round": "doc",
    "tensorflow.saved_model.experimental": "doc",
    "tensorflow.debugging.assert_negative": "doc",
    "tensorflow.debugging.assert_positive": "doc",
    "tensorflow.experimental.numpy.arcsin": "doc",
    "tensorflow.experimental.numpy.argmax": "doc",
    "tensorflow.experimental.numpy.argmin": "doc",
    "tensorflow.experimental.numpy.around": "doc",
    "tensorflow.experimental.numpy.cumsum": "doc",
    "tensorflow.experimental.numpy.divmod": "doc",
    "tensorflow.experimental.numpy.float_": "doc",
    "tensorflow.tpu.experimental.Topology": "doc",
    "tensorflow.compat.v1.FixedLenFeature": "doc",
    "tensorflow.compat.v1.TensorArraySpec": "doc",
    "tensorflow.compat.v1.WholeFileReader": "doc",
    "tensorflow.compat.v1.assert_negative": "doc",
    "tensorflow.compat.v1.assert_positive": "doc",
    "tensorflow.compat.v1.guarantee_const": "doc",
    "tensorflow.compat.v1.mixed_precision": "doc",
    "tensorflow.compat.v1.resource_loader": "doc",
    "tensorflow.compat.v1.sparse_to_dense": "doc",
    "tensorflow.experimental.numpy.arccosh": "doc",
    "tensorflow.experimental.numpy.arcsinh": "doc",
    "tensorflow.experimental.numpy.cumprod": "doc",
    "tensorflow.experimental.numpy.float16": "doc",
    "tensorflow.experimental.numpy.float32": "doc",
    "tensorflow.experimental.numpy.float64": "doc",
    "tensorflow.experimental.numpy.object_": "doc",
    "tensorflow.tpu.experimental.embedding": "doc",
    "tensorflow.compat.v1.tpu.experimental": "doc",
    "tensorflow.compat.v1.xla.experimental": "doc",
    "tensorflow.experimental.numpy.meshgrid": "doc",
    "tensorflow.compat.v1.math.segment_prod": "doc",
    "tensorflow.experimental.numpy.complex64": "doc",
    "tensorflow.experimental.numpy.geomspace": "doc",
    "tensorflow.compat.v1.autograph.to_graph": "doc",
    "tensorflow.experimental.dlpack.to_dlpack": "doc",
    "tensorflow.experimental.numpy.asanyarray": "doc",
    "tensorflow.experimental.numpy.atleast_1d": "doc",
    "tensorflow.experimental.numpy.atleast_2d": "doc",
    "tensorflow.experimental.numpy.atleast_3d": "doc",
    "tensorflow.experimental.numpy.complex128": "doc",
    "tensorflow.experimental.numpy.less_equal": "doc",
    "tensorflow.experimental.numpy.logaddexp2": "doc",
    "tensorflow.compat.v1.lookup.experimental": "doc",
    "tensorflow.compat.v1.tpu.shutdown_system": "doc",
    "tensorflow.experimental.numpy.array_equal": "doc",
    "tensorflow.experimental.numpy.concatenate": "doc",
    "tensorflow.experimental.numpy.expand_dims": "doc",
    "tensorflow.experimental.numpy.result_type": "doc",
    "tensorflow.experimental.numpy.true_divide": "doc",
    "tensorflow.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.compat.v1.math.reduce_variance": "doc",
    "tensorflow.experimental.dlpack.from_dlpack": "doc",
    "tensorflow.experimental.numpy.broadcast_to": "doc",
    "tensorflow.experimental.numpy.floor_divide": "doc",
    "tensorflow.feature_column.embedding_column": "doc",
    "tensorflow.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.experimental.numpy.greater_equal": "doc",
    "tensorflow.compat.v1.autograph.experimental": "doc",
    "tensorflow.compat.v1.debugging.assert_equal": "doc",
    "tensorflow.compat.v1.debugging.experimental": "doc",
    "tensorflow.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.compat.v1.ConfigProto.Experimental": "doc",
    "tensorflow.compat.v1.experimental.async_scope": "doc",
    "tensorflow.compat.v1.saved_model.experimental": "doc",
    "tensorflow.compat.v1.debugging.assert_negative": "doc",
    "tensorflow.compat.v1.debugging.assert_positive": "doc",
    "tensorflow.compat.v1.tpu.experimental.Topology": "doc",
    "tensorflow.compat.v1.TensorInfo.CompositeTensor": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding": "doc",
    "tensorflow.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.autograph.experimental.set_loop_options": "doc",
    "tensorflow.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.compat.v1.resource_loader.load_resource": "doc",
    "tensorflow.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.compat.v1.mixed_precision.FixedLossScale": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.SGD": "doc",
    "tensorflow.compat.v1.feature_column.embedding_column": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.Adam": "doc",
    "tensorflow.compat.v1.mixed_precision.DynamicLossScale": "doc",
    "tensorflow.compat.v1.tpu.experimental.TPUSystemMetadata": "doc",
    "tensorflow.compat.v1.resource_loader.get_path_to_datafile": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TableConfig": "doc",
    "tensorflow.compat.v1.autograph.experimental.set_loop_options": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.TPUEmbedding": "doc",
    "tensorflow.compat.v1.tpu.experimental.embedding.FeatureConfig": "doc",
    "tensorflow.feature_column.bucketized_column": "doc",
    "tensorflow.feature_column.shared_embeddings": "doc",
    "tensorflow.compat.v1.feature_column.bucketized_column": "doc",
    "tensorflow.broadcast_dynamic_shape": "doc",
    "tensorflow.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.debugging.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.assert_same_float_dtype": "doc",
    "tensorflow.compat.v1.broadcast_dynamic_shape": "doc",
    "tensorflow.compat.v1.control_flow_v2_enabled": "doc",
    "tensorflow.compat.v1.disable_control_flow_v2": "doc",
    "tensorflow.compat.v1.disable_eager_execution": "doc",
    "tensorflow.compat.v1.disable_tensor_equality": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d_transpose": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_native": "doc",
    "tensorflow.compat.v1.debugging.assert_same_float_dtype": "doc",
    "tensorflow.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d_backprop_input": "doc",
    "tensorflow.tensordot": "doc",
    "tensorflow.compat.v1.tensordot": "doc",
    "tensorflow.io.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.io.parse_single_sequence_example": "doc",
    "tensorflow.get_static_value": "doc",
    "tensorflow.reduce_logsumexp": "doc",
    "tensorflow.nn.depthwise_conv2d": "doc",
    "tensorflow.nn.embedding_lookup": "doc",
    "tensorflow.nn.log_poisson_loss": "doc",
    "tensorflow.nn.separable_conv2d": "doc",
    "tensorflow.math.reduce_logsumexp": "doc",
    "tensorflow.tensor_scatter_nd_update": "doc",
    "tensorflow.compat.v1.get_static_value": "doc",
    "tensorflow.compat.v1.quantized_concat": "doc",
    "tensorflow.compat.v1.reduce_logsumexp": "doc",
    "tensorflow.compat.v1.nn.depthwise_conv2d": "doc",
    "tensorflow.compat.v1.nn.embedding_lookup": "doc",
    "tensorflow.compat.v1.nn.log_poisson_loss": "doc",
    "tensorflow.compat.v1.nn.quantized_conv2d": "doc",
    "tensorflow.compat.v1.nn.separable_conv2d": "doc",
    "tensorflow.compat.v1.math.reduce_logsumexp": "doc",
    "tensorflow.required_space_to_batch_paddings": "doc",
    "tensorflow.debugging.get_log_device_placement": "doc",
    "tensorflow.debugging.set_log_device_placement": "doc",
    "tensorflow.compat.v1.placeholder_with_default": "doc",
    "tensorflow.compat.v1.sparse_reduce_max_sparse": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum_sparse": "doc",
    "tensorflow.compat.v1.tensor_scatter_nd_update": "doc",
    "tensorflow.compat.v1.ConfigProto.DeviceCountEntry": "doc",
    "tensorflow.compat.v1.required_space_to_batch_paddings": "doc",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.compat.v1.debugging.get_log_device_placement": "doc",
    "tensorflow.compat.v1.debugging.set_log_device_placement": "doc",
    "tensorflow.compat.v1.nn.sparse_softmax_cross_entropy_with_logits": "doc",
    "tensorflow.io.decode_and_crop_jpeg": "doc",
    "tensorflow.compat.v1.io.decode_and_crop_jpeg": "doc",
    "tensorflow.grad_pass_through": "doc",
    "tensorflow.make_tensor_proto": "doc",
    "tensorflow.space_to_batch_nd": "doc",
    "tensorflow.debugging.assert_less_equal": "doc",
    "tensorflow.debugging.assert_none_equal": "doc",
    "tensorflow.compat.v1.NotDifferentiable": "doc",
    "tensorflow.compat.v1.add_to_collection": "doc",
    "tensorflow.compat.v1.assert_less_equal": "doc",
    "tensorflow.compat.v1.assert_none_equal": "doc",
    "tensorflow.compat.v1.batch_to_space_nd": "doc",
    "tensorflow.compat.v1.decode_compressed": "doc",
    "tensorflow.compat.v1.grad_pass_through": "doc",
    "tensorflow.compat.v1.make_tensor_proto": "doc",
    "tensorflow.compat.v1.space_to_batch_nd": "doc",
    "tensorflow.compat.v1.sparse_reduce_sum": "doc",
    "tensorflow.compat.v1.debugging.assert_less_equal": "doc",
    "tensorflow.compat.v1.debugging.assert_none_equal": "doc",
    "tensorflow.compat.v1.graph_util.extract_sub_graph": "doc",
    "tensorflow.compat.v1.saved_model.build_tensor_info": "doc",
    "tensorflow.compat.v1.sparse_tensor_dense_matmul": "doc",
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder_v2": "doc",
    "tensorflow.greater_equal": "doc",
    "tensorflow.sequence_mask": "doc",
    "tensorflow.math.greater_equal": "doc",
    "tensorflow.autograph.set_verbosity": "doc",
    "tensorflow.debugging.assert_scalar": "doc",
    "tensorflow.compat.v1.assert_scalar": "doc",
    "tensorflow.compat.v1.decode_base64": "doc",
    "tensorflow.compat.v1.greater_equal": "doc",
    "tensorflow.compat.v1.make_template": "doc",
    "tensorflow.compat.v1.random_normal": "doc",
    "tensorflow.compat.v1.regex_replace": "doc",
    "tensorflow.compat.v1.sequence_mask": "doc",
    "tensorflow.compat.v1.sparse_retain": "doc",
    "tensorflow.compat.v1.math.greater_equal": "doc",
    "tensorflow.compat.v1.logging.get_verbosity": "doc",
    "tensorflow.compat.v1.logging.set_verbosity": "doc",
    "tensorflow.compat.v1.autograph.set_verbosity": "doc",
    "tensorflow.compat.v1.debugging.assert_scalar": "doc",
    "tensorflow.compat.v1.enable_v2_behavior": "doc",
    "tensorflow.compat.v1.sparse_placeholder": "doc",
    "tensorflow.compat.v1.sparse_reset_shape": "doc",
    "tensorflow.compat.v1.sparse_segment_sum": "doc",
    "tensorflow.compat.v1.saved_model.get_tensor_from_tensor_info": "doc",
    "tensorflow.compat.v1.io.TFRecordCompressionType": "doc",
    "tensorflow.io": "doc",
    "tensorflow.eig": "doc",
    "tensorflow.sort": "doc",
    "tensorflow.audio": "doc",
    "tensorflow.no_op": "doc",
    "tensorflow.config": "doc",
    "tensorflow.one_hot": "doc",
    "tensorflow.autograph": "doc",
    "tensorflow.gather_nd": "doc",
    "tensorflow.math.erfinv": "doc",
    "tensorflow.nn.erosion2d": "doc",
    "tensorflow.compat.v1.io": "doc",
    "tensorflow.io.decode_bmp": "doc",
    "tensorflow.io.decode_csv": "doc",
    "tensorflow.io.decode_gif": "doc",
    "tensorflow.io.decode_png": "doc",
    "tensorflow.io.encode_png": "doc",
    "tensorflow.io.decode_jpeg": "doc",
    "tensorflow.compat.v1.sort": "doc",
    "tensorflow.io.decode_image": "doc",
    "tensorflow.io.decode_proto": "doc",
    "tensorflow.io.encode_proto": "doc",
    "tensorflow.io.parse_tensor": "doc",
    "tensorflow.compat.v1.audio": "doc",
    "tensorflow.compat.v1.no_op": "doc",
    "tensorflow.audio.decode_wav": "doc",
    "tensorflow.audio.encode_wav": "doc",
    "tensorflow.io.RaggedFeature": "doc",
    "tensorflow.io.SparseFeature": "doc",
    "tensorflow.io.VarLenFeature": "doc",
    "tensorflow.io.parse_example": "doc",
    "tensorflow.compat.v1.config": "doc",
    "tensorflow.compat.v1.OpError": "doc",
    "tensorflow.compat.v1.one_hot": "doc",
    "tensorflow.io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.tpu.core": "doc",
    "tensorflow.compat.v1.autograph": "doc",
    "tensorflow.compat.v1.gather_nd": "doc",
    "tensorflow.compat.v1.math.erfinv": "doc",
    "tensorflow.io.decode_json_example": "doc",
    "tensorflow.compat.v1.nn.erosion2d": "doc",
    "tensorflow.compat.v1.io.decode_bmp": "doc",
    "tensorflow.compat.v1.io.decode_csv": "doc",
    "tensorflow.compat.v1.io.decode_gif": "doc",
    "tensorflow.compat.v1.io.decode_png": "doc",
    "tensorflow.compat.v1.io.encode_png": "doc",
    "tensorflow.compat.v1.io.decode_jpeg": "doc",
    "tensorflow.compat.v1.logging.log_if": "doc",
    "tensorflow.io.parse_sequence_example": "doc",
    "tensorflow.compat.v1.io.decode_image": "doc",
    "tensorflow.compat.v1.io.decode_proto": "doc",
    "tensorflow.compat.v1.io.encode_proto": "doc",
    "tensorflow.compat.v1.io.parse_tensor": "doc",
    "tensorflow.compat.v1.logging.warning": "doc",
    "tensorflow.compat.v1.audio.decode_wav": "doc",
    "tensorflow.compat.v1.audio.encode_wav": "doc",
    "tensorflow.compat.v1.io.RaggedFeature": "doc",
    "tensorflow.compat.v1.io.SparseFeature": "doc",
    "tensorflow.compat.v1.io.VarLenFeature": "doc",
    "tensorflow.compat.v1.io.parse_example": "doc",
    "tensorflow.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.compat.v1.io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.io.decode_json_example": "doc",
    "tensorflow.compat.v1.io.parse_sequence_example": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.RowLengths": "doc",
    "tensorflow.compat.v1.io.RaggedFeature.ValueRowIds": "doc",
    "tensorflow.nn.with_space_to_batch": "doc",
    "tensorflow.debugging.assert_non_negative": "doc",
    "tensorflow.debugging.assert_non_positive": "doc",
    "tensorflow.compat.v1.assert_non_negative": "doc",
    "tensorflow.compat.v1.assert_non_positive": "doc",
    "tensorflow.compat.v1.disable_v2_behavior": "doc",
    "tensorflow.compat.v1.nn.with_space_to_batch": "doc",
    "tensorflow.compat.v1.tpu.outside_compilation": "doc",
    "tensorflow.compat.v1.debugging.assert_non_negative": "doc",
    "tensorflow.compat.v1.debugging.assert_non_positive": "doc",
    "tensorflow.feature_column.sequence_numeric_column": "doc",
    "tensorflow.compat.v1.feature_column.sequence_numeric_column": "doc",
    "tensorflow.compat.v1.parse_single_sequence_example": "doc",
    "tensorflow.compat.v1.batch_scatter_update": "doc",
    "tensorflow.feature_column": "doc",
    "tensorflow.parallel_stack": "doc",
    "tensorflow.recompute_grad": "doc",
    "tensorflow.debugging.assert_rank_in": "doc",
    "tensorflow.compat.v1.TFRecordReader": "doc",
    "tensorflow.compat.v1.assert_rank_in": "doc",
    "tensorflow.compat.v1.feature_column": "doc",
    "tensorflow.compat.v1.parallel_stack": "doc",
    "tensorflow.compat.v1.recompute_grad": "doc",
    "tensorflow.compat.v1.scatter_nd_add": "doc",
    "tensorflow.compat.v1.scatter_update": "doc",
    "tensorflow.compat.v1.sparse_minimum": "doc",
    "tensorflow.compat.v1.sparse_reshape": "doc",
    "tensorflow.feature_column.crossed_column": "doc",
    "tensorflow.feature_column.numeric_column": "doc",
    "tensorflow.compat.v1.debugging.assert_rank_in": "doc",
    "tensorflow.compat.v1.feature_column.crossed_column": "doc",
    "tensorflow.compat.v1.feature_column.numeric_column": "doc",
    "tensorflow.compat.v1.graph_util.tensor_shape_from_node_def_name": "doc",
    "tensorflow.nn.RNNCellDropoutWrapper": "doc",
    "tensorflow.compat.v1.sparse_segment_sqrt_n": "doc",
    "tensorflow.compat.v1.python_io.TFRecordCompressionType": "doc",
    "tensorflow.nn": "doc",
    "tensorflow.add": "doc",
    "tensorflow.cos": "doc",
    "tensorflow.exp": "doc",
    "tensorflow.eye": "doc",
    "tensorflow.pad": "doc",
    "tensorflow.pow": "doc",
    "tensorflow.sin": "doc",
    "tensorflow.tpu": "doc",
    "tensorflow.xla": "doc",
    "tensorflow.cast": "doc",
    "tensorflow.cond": "doc",
    "tensorflow.cosh": "doc",
    "tensorflow.math": "doc",
    "tensorflow.rank": "doc",
    "tensorflow.roll": "doc",
    "tensorflow.scan": "doc",
    "tensorflow.sign": "doc",
    "tensorflow.sinh": "doc",
    "tensorflow.sqrt": "doc",
    "tensorflow.DType": "doc",
    "tensorflow.Graph": "doc",
    "tensorflow.acosh": "doc",
    "tensorflow.add_n": "doc",
    "tensorflow.foldl": "doc",
    "tensorflow.group": "doc",
    "tensorflow.print": "doc",
    "tensorflow.queue": "doc",
    "tensorflow.round": "doc",
    "tensorflow.argmax": "doc",
    "tensorflow.argmin": "doc",
    "tensorflow.compat": "doc",
    "tensorflow.concat": "doc",
    "tensorflow.cumsum": "doc",
    "tensorflow.lookup": "doc",
    "tensorflow.map_fn": "doc",
    "tensorflow.nn.elu": "doc",
    "tensorflow.nn.gelu": "doc",
    "tensorflow.nn.pool": "doc",
    "tensorflow.nn.relu": "doc",
    "tensorflow.nn.selu": "doc",
    "tensorflow.truediv": "doc",
    "tensorflow.TypeSpec": "doc",
    "tensorflow.as_dtype": "doc",
    "tensorflow.math.add": "doc",
    "tensorflow.math.cos": "doc",
    "tensorflow.math.exp": "doc",
    "tensorflow.math.log": "doc",
    "tensorflow.math.mod": "doc",
    "tensorflow.math.pow": "doc",
    "tensorflow.math.sin": "doc",
    "tensorflow.nn.crelu": "doc",
    "tensorflow.nn.relu6": "doc",
    "tensorflow.nn.swish": "doc",
    "tensorflow.nn.top_k": "doc",
    "tensorflow.as_string": "doc",
    "tensorflow.debugging": "doc",
    "tensorflow.math.conj": "doc",
    "tensorflow.math.cosh": "doc",
    "tensorflow.math.sign": "doc",
    "tensorflow.math.sinh": "doc",
    "tensorflow.math.sqrt": "doc",
    "tensorflow.nn.conv1d": "doc",
    "tensorflow.nn.conv2d": "doc",
    "tensorflow.nn.conv3d": "doc",
    "tensorflow.sysconfig": "doc",
    "tensorflow.compat.v1": "doc",
    "tensorflow.TensorSpec": "doc",
    "tensorflow.graph_util": "doc",
    "tensorflow.less_equal": "doc",
    "tensorflow.math.acosh": "doc",
    "tensorflow.math.add_n": "doc",
    "tensorflow.math.expm1": "doc",
    "tensorflow.math.log1p": "doc",
    "tensorflow.math.round": "doc",
    "tensorflow.math.rsqrt": "doc",
    "tensorflow.math.top_k": "doc",
    "tensorflow.math.xdivy": "doc",
    "tensorflow.math.xlogy": "doc",
    "tensorflow.name_scope": "doc",
    "tensorflow.nn.dropout": "doc",
    "tensorflow.reduce_all": "doc",
    "tensorflow.reduce_any": "doc",
    "tensorflow.reduce_max": "doc",
    "tensorflow.reduce_min": "doc",
    "tensorflow.reduce_sum": "doc",
    "tensorflow.scalar_mul": "doc",
    "tensorflow.scatter_nd": "doc",
    "tensorflow.expand_dims": "doc",
    "tensorflow.math.argmax": "doc",
    "tensorflow.math.argmin": "doc",
    "tensorflow.math.cumsum": "doc",
    "tensorflow.math.lgamma": "doc",
    "tensorflow.nn.avg_pool": "doc",
    "tensorflow.nn.max_pool": "doc",
    "tensorflow.py_function": "doc",
    "tensorflow.reduce_mean": "doc",
    "tensorflow.reduce_prod": "doc",
    "tensorflow.saved_model": "doc",
    "tensorflow.truncatediv": "doc",
    "tensorflow.truncatemod": "doc",
    "tensorflow.GradientTape": "doc",
    "tensorflow.RaggedTensor": "doc",
    "tensorflow.SparseTensor": "doc",
    "tensorflow.broadcast_to": "doc",
    "tensorflow.ensure_shape": "doc",
    "tensorflow.math.cumprod": "doc",
    "tensorflow.math.erfcinv": "doc",
    "tensorflow.math.truediv": "doc",
    "tensorflow.math.xlog1py": "doc",
    "tensorflow.compat.v1.nn": "doc",
    "tensorflow.compat.v1.qr": "doc",
    "tensorflow.clip_by_value": "doc",
    "tensorflow.math.bincount": "doc",
    "tensorflow.math.floordiv": "doc",
    "tensorflow.math.floormod": "doc",
    "tensorflow.nn.avg_pool1d": "doc",
    "tensorflow.nn.avg_pool2d": "doc",
    "tensorflow.nn.avg_pool3d": "doc",
    "tensorflow.nn.leaky_relu": "doc",
    "tensorflow.nn.max_pool1d": "doc",
    "tensorflow.nn.max_pool2d": "doc",
    "tensorflow.nn.max_pool3d": "doc",
    "tensorflow.compat.v1.add": "doc",
    "tensorflow.compat.v1.app": "doc",
    "tensorflow.compat.v1.cos": "doc",
    "tensorflow.compat.v1.div": "doc",
    "tensorflow.compat.v1.exp": "doc",
    "tensorflow.compat.v1.eye": "doc",
    "tensorflow.compat.v1.fft": "doc",
    "tensorflow.compat.v1.log": "doc",
    "tensorflow.compat.v1.mod": "doc",
    "tensorflow.compat.v1.pad": "doc",
    "tensorflow.compat.v1.pow": "doc",
    "tensorflow.compat.v1.sin": "doc",
    "tensorflow.compat.v1.svd": "doc",
    "tensorflow.compat.v1.tpu": "doc",
    "tensorflow.compat.v1.xla": "doc",
    "tensorflow.batch_to_space": "doc",
    "tensorflow.math.bessel_i0": "doc",
    "tensorflow.math.bessel_i1": "doc",
    "tensorflow.math.polygamma": "doc",
    "tensorflow.nn.convolution": "doc",
    "tensorflow.nn.log_softmax": "doc",
    "tensorflow.numpy_function": "doc",
    "tensorflow.space_to_batch": "doc",
    "tensorflow.compat.v1.cast": "doc",
    "tensorflow.compat.v1.cond": "doc",
    "tensorflow.compat.v1.conj": "doc",
    "tensorflow.compat.v1.cosh": "doc",
    "tensorflow.compat.v1.math": "doc",
    "tensorflow.compat.v1.rank": "doc",
    "tensorflow.compat.v1.roll": "doc",
    "tensorflow.compat.v1.scan": "doc",
    "tensorflow.compat.v1.sign": "doc",
    "tensorflow.compat.v1.sinh": "doc",
    "tensorflow.compat.v1.sqrt": "doc",
    "tensorflow.math.less_equal": "doc",
    "tensorflow.math.reduce_all": "doc",
    "tensorflow.math.reduce_any": "doc",
    "tensorflow.math.reduce_max": "doc",
    "tensorflow.math.reduce_min": "doc",
    "tensorflow.math.reduce_std": "doc",
    "tensorflow.math.reduce_sum": "doc",
    "tensorflow.math.scalar_mul": "doc",
    "tensorflow.queue.FIFOQueue": "doc",
    "tensorflow.compat.v1.DType": "doc",
    "tensorflow.compat.v1.Event": "doc",
    "tensorflow.compat.v1.Graph": "doc",
    "tensorflow.compat.v1.Print": "doc",
    "tensorflow.compat.v1.acosh": "doc",
    "tensorflow.compat.v1.add_n": "doc",
    "tensorflow.compat.v1.cross": "doc",
    "tensorflow.compat.v1.expm1": "doc",
    "tensorflow.compat.v1.fft2d": "doc",
    "tensorflow.compat.v1.fft3d": "doc",
    "tensorflow.compat.v1.foldl": "doc",
    "tensorflow.compat.v1.group": "doc",
    "tensorflow.compat.v1.log1p": "doc",
    "tensorflow.compat.v1.print": "doc",
    "tensorflow.compat.v1.queue": "doc",
    "tensorflow.compat.v1.round": "doc",
    "tensorflow.compat.v1.rsqrt": "doc",
    "tensorflow.RaggedTensorSpec": "doc",
    "tensorflow.SparseTensorSpec": "doc",
    "tensorflow.math.log_sigmoid": "doc",
    "tensorflow.math.log_softmax": "doc",
    "tensorflow.math.reduce_mean": "doc",
    "tensorflow.math.reduce_prod": "doc",
    "tensorflow.math.segment_max": "doc",
    "tensorflow.math.segment_min": "doc",
    "tensorflow.nn.atrous_conv2d": "doc",
    "tensorflow.reverse_sequence": "doc",
    "tensorflow.saved_model.load": "doc",
    "tensorflow.compat.v1.argmax": "doc",
    "tensorflow.compat.v1.argmin": "doc",
    "tensorflow.compat.v1.assign": "doc",
    "tensorflow.compat.v1.compat": "doc",
    "tensorflow.compat.v1.concat": "doc",
    "tensorflow.compat.v1.cumsum": "doc",
    "tensorflow.compat.v1.lgamma": "doc",
    "tensorflow.compat.v1.lookup": "doc",
    "tensorflow.compat.v1.map_fn": "doc",
    "tensorflow.compat.v1.nn.elu": "doc",
    "tensorflow.compat.v1.substr": "doc",
    "tensorflow.compat.as_str_any": "doc",
    "tensorflow.math.segment_mean": "doc",
    "tensorflow.math.sobol_sample": "doc",
    "tensorflow.nn.depth_to_space": "doc",
    "tensorflow.nn.space_to_batch": "doc",
    "tensorflow.nn.space_to_depth": "doc",
    "tensorflow.saved_model.Asset": "doc",
    "tensorflow.compat.v1.NodeDef": "doc",
    "tensorflow.compat.v1.app.run": "doc",
    "tensorflow.compat.v1.arg_max": "doc",
    "tensorflow.compat.v1.arg_min": "doc",
    "tensorflow.compat.v1.cumprod": "doc",
    "tensorflow.compat.v1.logging": "doc",
    "tensorflow.compat.v1.nn.pool": "doc",
    "tensorflow.compat.v1.nn.relu": "doc",
    "tensorflow.compat.v1.nn.selu": "doc",
    "tensorflow.compat.v1.py_func": "doc",
    "tensorflow.compat.v1.truediv": "doc",
    "tensorflow.compat.path_to_str": "doc",
    "tensorflow.compat.v1.TypeSpec": "doc",
    "tensorflow.compat.v1.as_dtype": "doc",
    "tensorflow.compat.v1.bincount": "doc",
    "tensorflow.compat.v1.cholesky": "doc",
    "tensorflow.compat.v1.floordiv": "doc",
    "tensorflow.compat.v1.floormod": "doc",
    "tensorflow.compat.v1.math.add": "doc",
    "tensorflow.compat.v1.math.cos": "doc",
    "tensorflow.compat.v1.math.exp": "doc",
    "tensorflow.compat.v1.math.log": "doc",
    "tensorflow.compat.v1.math.mod": "doc",
    "tensorflow.compat.v1.math.pow": "doc",
    "tensorflow.compat.v1.math.sin": "doc",
    "tensorflow.compat.v1.nn.crelu": "doc",
    "tensorflow.compat.v1.nn.relu6": "doc",
    "tensorflow.compat.v1.nn.swish": "doc",
    "tensorflow.compat.v1.nn.top_k": "doc",
    "tensorflow.compat.v1.op_scope": "doc",
    "tensorflow.compat.v1.to_float": "doc",
    "tensorflow.compat.v1.FIFOQueue": "doc",
    "tensorflow.compat.v1.as_string": "doc",
    "tensorflow.compat.v1.debugging": "doc",
    "tensorflow.compat.v1.floor_div": "doc",
    "tensorflow.compat.v1.math.conj": "doc",
    "tensorflow.compat.v1.math.cosh": "doc",
    "tensorflow.compat.v1.math.sign": "doc",
    "tensorflow.compat.v1.math.sinh": "doc",
    "tensorflow.compat.v1.math.sqrt": "doc",
    "tensorflow.compat.v1.nn.conv1d": "doc",
    "tensorflow.compat.v1.nn.conv2d": "doc",
    "tensorflow.compat.v1.nn.conv3d": "doc",
    "tensorflow.compat.v1.polygamma": "doc",
    "tensorflow.compat.v1.python_io": "doc",
    "tensorflow.compat.v1.sysconfig": "doc",
    "tensorflow.compat.v1.to_double": "doc",
    "tensorflow.nn.collapse_repeated": "doc",
    "tensorflow.type_spec_from_value": "doc",
    "tensorflow.compat.v1.LogMessage": "doc",
    "tensorflow.compat.v1.SessionLog": "doc",
    "tensorflow.compat.v1.TensorInfo": "doc",
    "tensorflow.compat.v1.TensorSpec": "doc",
    "tensorflow.compat.v1.assign_add": "doc",
    "tensorflow.compat.v1.assign_sub": "doc",
    "tensorflow.compat.v1.decode_csv": "doc",
    "tensorflow.compat.v1.div_no_nan": "doc",
    "tensorflow.compat.v1.graph_util": "doc",
    "tensorflow.compat.v1.less_equal": "doc",
    "tensorflow.compat.v1.math.acosh": "doc",
    "tensorflow.compat.v1.math.add_n": "doc",
    "tensorflow.compat.v1.math.expm1": "doc",
    "tensorflow.compat.v1.math.log1p": "doc",
    "tensorflow.compat.v1.math.round": "doc",
    "tensorflow.compat.v1.math.rsqrt": "doc",
    "tensorflow.compat.v1.math.top_k": "doc",
    "tensorflow.compat.v1.math.xdivy": "doc",
    "tensorflow.compat.v1.math.xlogy": "doc",
    "tensorflow.compat.v1.name_scope": "doc",
    "tensorflow.compat.v1.nn.dropout": "doc",
    "tensorflow.compat.v1.nn.raw_rnn": "doc",
    "tensorflow.compat.v1.reduce_all": "doc",
    "tensorflow.compat.v1.reduce_any": "doc",
    "tensorflow.compat.v1.reduce_max": "doc",
    "tensorflow.compat.v1.reduce_min": "doc",
    "tensorflow.compat.v1.reduce_sum": "doc",
    "tensorflow.compat.v1.reverse_v2": "doc",
    "tensorflow.compat.v1.scalar_mul": "doc",
    "tensorflow.compat.v1.scatter_nd": "doc",
    "tensorflow.compat.v1.sparse_add": "doc",
    "tensorflow.debugging.assert_type": "doc",
    "tensorflow.nn.ctc_greedy_decoder": "doc",
    "tensorflow.compat.v1.ConfigProto": "doc",
    "tensorflow.compat.v1.RunMetadata": "doc",
    "tensorflow.compat.v1.assert_type": "doc",
    "tensorflow.compat.v1.count_up_to": "doc",
    "tensorflow.compat.v1.expand_dims": "doc",
    "tensorflow.compat.v1.log_sigmoid": "doc",
    "tensorflow.compat.v1.logging.log": "doc",
    "tensorflow.compat.v1.math.argmax": "doc",
    "tensorflow.compat.v1.math.argmin": "doc",
    "tensorflow.compat.v1.math.cumsum": "doc",
    "tensorflow.compat.v1.math.lgamma": "doc",
    "tensorflow.compat.v1.matrix_diag": "doc",
    "tensorflow.compat.v1.nn.avg_pool": "doc",
    "tensorflow.compat.v1.nn.max_pool": "doc",
    "tensorflow.compat.v1.py_function": "doc",
    "tensorflow.compat.v1.random_crop": "doc",
    "tensorflow.compat.v1.reduce_join": "doc",
    "tensorflow.compat.v1.reduce_mean": "doc",
    "tensorflow.compat.v1.reduce_prod": "doc",
    "tensorflow.compat.v1.saved_model": "doc",
    "tensorflow.compat.v1.scatter_div": "doc",
    "tensorflow.compat.v1.scatter_min": "doc",
    "tensorflow.compat.v1.scatter_mul": "doc",
    "tensorflow.compat.v1.segment_max": "doc",
    "tensorflow.compat.v1.segment_min": "doc",
    "tensorflow.compat.v1.string_join": "doc",
    "tensorflow.compat.v1.to_bfloat16": "doc",
    "tensorflow.compat.v1.truncatediv": "doc",
    "tensorflow.compat.v1.truncatemod": "doc",
    "tensorflow.compat.v1.GradientTape": "doc",
    "tensorflow.compat.v1.GraphOptions": "doc",
    "tensorflow.compat.v1.RaggedTensor": "doc",
    "tensorflow.compat.v1.SparseTensor": "doc",
    "tensorflow.compat.v1.batch_gather": "doc",
    "tensorflow.compat.v1.broadcast_to": "doc",
    "tensorflow.compat.v1.ensure_shape": "doc",
    "tensorflow.compat.v1.logging.vlog": "doc",
    "tensorflow.compat.v1.math.cumprod": "doc",
    "tensorflow.compat.v1.math.erfcinv": "doc",
    "tensorflow.compat.v1.math.truediv": "doc",
    "tensorflow.compat.v1.math.xlog1py": "doc",
    "tensorflow.compat.v1.matrix_solve": "doc",
    "tensorflow.compat.v1.nn.xw_plus_b": "doc",
    "tensorflow.compat.v1.parse_tensor": "doc",
    "tensorflow.compat.v1.random_gamma": "doc",
    "tensorflow.compat.v1.segment_mean": "doc",
    "tensorflow.compat.v1.sparse_merge": "doc",
    "tensorflow.compat.v1.sparse_slice": "doc",
    "tensorflow.compat.v1.sparse_split": "doc",
    "tensorflow.compat.v1.string_split": "doc",
    "tensorflow.compat.v1.string_strip": "doc",
    "tensorflow.compat.v1.to_complex64": "doc",
    "tensorflow.compat.v1.SparseFeature": "doc",
    "tensorflow.compat.v1.VarLenFeature": "doc",
    "tensorflow.compat.v1.clip_by_value": "doc",
    "tensorflow.compat.v1.colocate_with": "doc",
    "tensorflow.compat.v1.logging.debug": "doc",
    "tensorflow.compat.v1.logging.flush": "doc",
    "tensorflow.compat.v1.math.bincount": "doc",
    "tensorflow.compat.v1.math.floordiv": "doc",
    "tensorflow.compat.v1.math.floormod": "doc",
    "tensorflow.compat.v1.nn.avg_pool1d": "doc",
    "tensorflow.compat.v1.nn.avg_pool2d": "doc",
    "tensorflow.compat.v1.nn.avg_pool3d": "doc",
    "tensorflow.compat.v1.nn.leaky_relu": "doc",
    "tensorflow.compat.v1.nn.max_pool1d": "doc",
    "tensorflow.compat.v1.nn.max_pool2d": "doc",
    "tensorflow.compat.v1.nn.max_pool3d": "doc",
    "tensorflow.compat.v1.parse_example": "doc",
    "tensorflow.compat.v1.sparse_concat": "doc",
    "tensorflow.compat.v1.sparse_matmul": "doc",
    "tensorflow.compat.v1.to_complex128": "doc",
    "tensorflow.compat.v1.wrap_function": "doc",
    "tensorflow.sysconfig.get_build_info": "doc",
    "tensorflow.compat.v1.batch_to_space": "doc",
    "tensorflow.compat.v1.cholesky_solve": "doc",
    "tensorflow.compat.v1.depth_to_space": "doc",
    "tensorflow.compat.v1.get_collection": "doc",
    "tensorflow.compat.v1.math.bessel_i0": "doc",
    "tensorflow.compat.v1.math.bessel_i1": "doc",
    "tensorflow.compat.v1.math.polygamma": "doc",
    "tensorflow.compat.v1.nn.avg_pool_v2": "doc",
    "tensorflow.compat.v1.nn.convolution": "doc",
    "tensorflow.compat.v1.nn.ctc_loss_v2": "doc",
    "tensorflow.compat.v1.nn.log_softmax": "doc",
    "tensorflow.compat.v1.nn.max_pool_v2": "doc",
    "tensorflow.compat.v1.numpy_function": "doc",
    "tensorflow.compat.v1.random_shuffle": "doc",
    "tensorflow.compat.v1.space_to_batch": "doc",
    "tensorflow.compat.v1.space_to_depth": "doc",
    "tensorflow.compat.v1.sparse_maximum": "doc",
    "tensorflow.compat.v1.sparse_reorder": "doc",
    "tensorflow.compat.v1.sparse_softmax": "doc",
    "tensorflow.compat.forward_compatible": "doc",
    "tensorflow.compat.v1.SummaryMetadata": "doc",
    "tensorflow.compat.v1.math.less_equal": "doc",
    "tensorflow.compat.v1.math.reduce_all": "doc",
    "tensorflow.compat.v1.math.reduce_any": "doc",
    "tensorflow.compat.v1.math.reduce_max": "doc",
    "tensorflow.compat.v1.math.reduce_min": "doc",
    "tensorflow.compat.v1.math.reduce_std": "doc",
    "tensorflow.compat.v1.math.reduce_sum": "doc",
    "tensorflow.compat.v1.math.scalar_mul": "doc",
    "tensorflow.compat.v1.matrix_set_diag": "doc",
    "tensorflow.compat.v1.queue.FIFOQueue": "doc",
    "tensorflow.compat.v1.RaggedTensorSpec": "doc",
    "tensorflow.compat.v1.SparseTensorSpec": "doc",
    "tensorflow.compat.v1.math.log_sigmoid": "doc",
    "tensorflow.compat.v1.math.log_softmax": "doc",
    "tensorflow.compat.v1.math.reduce_mean": "doc",
    "tensorflow.compat.v1.math.reduce_prod": "doc",
    "tensorflow.compat.v1.math.segment_max": "doc",
    "tensorflow.compat.v1.math.segment_min": "doc",
    "tensorflow.compat.v1.nn.atrous_conv2d": "doc",
    "tensorflow.compat.v1.reverse_sequence": "doc",
    "tensorflow.compat.v1.saved_model.load": "doc",
    "tensorflow.compat.v1.SparseTensorValue": "doc",
    "tensorflow.compat.v1.compat.as_str_any": "doc",
    "tensorflow.compat.v1.math.segment_mean": "doc",
    "tensorflow.compat.v1.math.sobol_sample": "doc",
    "tensorflow.compat.v1.nn.depth_to_space": "doc",
    "tensorflow.compat.v1.nn.space_to_batch": "doc",
    "tensorflow.compat.v1.nn.space_to_depth": "doc",
    "tensorflow.compat.v1.saved_model.Asset": "doc",
    "tensorflow.compat.v1.scatter_nd_update": "doc",
    "tensorflow.compat.v1.sparse_reduce_max": "doc",
    "tensorflow.compat.v1.compat.path_to_str": "doc",
    "tensorflow.compat.v1.get_session_handle": "doc",
    "tensorflow.compat.v1.tpu.batch_parallel": "doc",
    "tensorflow.compat.v1.tpu.bfloat16_scope": "doc",
    "tensorflow.compat.v1.decode_json_example": "doc",
    "tensorflow.compat.v1.logging.log_every_n": "doc",
    "tensorflow.compat.v1.logging.log_first_n": "doc",
    "tensorflow.compat.v1.saved_model.load_v2": "doc",
    "tensorflow.compat.v1.sparse_segment_mean": "doc",
    "tensorflow.compat.v1.nn.collapse_repeated": "doc",
    "tensorflow.compat.v1.type_spec_from_value": "doc",
    "tensorflow.compat.v1.debugging.assert_type": "doc",
    "tensorflow.compat.v1.nn.ctc_greedy_decoder": "doc",
    "tensorflow.compat.v1.saved_model.simple_save": "doc",
    "tensorflow.compat.v1.sysconfig.get_build_info": "doc",
    "tensorflow.compat.v1.compat.forward_compatible": "doc",
    "tensorflow.compat.v1.python_io.TFRecordOptions": "doc",
    "tensorflow.compat.v1.saved_model.tag_constants": "doc",
    "tensorflow.compat.v1.SummaryMetadata.PluginData": "doc",
    "tensorflow.compat.v1.graph_util.must_run_on_cpu": "doc"
  },
  "pandas.Series.reshape": {
    "pandas.Series.shape": "doc",
    "pandas.Series.resample": "doc",
    "pandas.Series.rename": "doc",
    "pandas.Series.replace": "doc",
    "pandas.Series.str.replace": "doc",
    "pandas.Series.str.translate": "doc",
    "pandas.Series.astype": "doc",
    "pandas.Series.repeat": "doc",
    "pandas.Series.str.repeat": "doc",
    "pandas.Series.str.isspace": "doc",
    "pandas.Series.describe": "doc",
    "pandas.Series.truncate": "doc",
    "pandas.Series.reset_index": "doc",
    "pandas.Series.aggregate": "doc",
    "pandas.Series.str.slice_replace": "doc",
    "pandas.Series.pct_change": "doc",
    "pandas.Series.dt.month_name": "doc",
    "pandas.Series.map": "doc",
    "pandas.Series.size": "doc",
    "pandas.Series.name": "doc",
    "pandas.Series.radd": "doc",
    "pandas.Series.rsub": "doc",
    "pandas.Series.pipe": "doc",
    "pandas.Series.mean": "doc",
    "pandas.Series.rank": "doc",
    "pandas.Series.head": "doc",
    "pandas.Series.take": "doc",
    "pandas.Series.isna": "doc",
    "pandas.Series.dtype": "doc",
    "pandas.Series.where": "doc",
    "pandas.Series.ravel": "doc",
    "pandas.Series.shift": "doc",
    "pandas.Series.median": "doc",
    "pandas.Series.equals": "doc",
    "pandas.Series.sample": "doc",
    "pandas.Series.update": "doc",
    "pandas.Series.tshift": "doc",
    "pandas.Series.hasnans": "doc",
    "pandas.Series.reindex": "doc",
    "pandas.Series.unstack": "doc",
    "pandas.Series.dt.date": "doc",
    "pandas.Series.dt.year": "doc",
    "pandas.Series.str.wrap": "doc",
    "pandas.Series.str.slice": "doc",
    "pandas.Series.plot.area": "doc",
    "pandas.Series.str.decode": "doc",
    "pandas.Series.str.encode": "doc",
    "pandas.Series.str.rstrip": "doc",
    "pandas.Series.str.rsplit": "doc",
    "pandas.Series.str.isupper": "doc",
    "pandas.Series.sparse.to_coo": "doc",
    "pandas.Series.sparse.npoints": "doc",
    "pandas.Series.sparse.density": "doc",
    "pandas.Series.sparse.from_coo": "doc",
    "pandas.Series.sparse.sp_values": "doc",
    "pandas.Series.sparse.fill_value": "doc",
    "pandas.Series.rename_axis": "doc",
    "pandas.Series.interpolate": "doc",
    "pandas.Series.sort_values": "doc",
    "pandas.Series.slice_shift": "doc",
    "pandas.Series.set_axis": "doc",
    "pandas.Series.to_frame": "doc",
    "pandas.Series.to_latex": "doc",
    "pandas.Series.dt.day_name": "doc",
    "pandas.Series.memory_usage": "doc",
    "pandas.Series.to_timestamp": "doc",
    "pandas.Series.reindex_like": "doc",
    "pandas.Series.searchsorted": "doc",
    "pandas.Series.str.swapcase": "doc",
    "pandas.Series.dt.is_leap_year": "doc",
    "pandas.Series.dt.is_quarter_start": "doc",
    "pandas.Series.cat.rename_categories": "doc",
    "pandas.Series.cat.remove_categories": "doc",
    "pandas.Series.dt.is_year_start": "doc",
    "pandas.Series.transform": "doc",
    "pandas.Series.nsmallest": "doc",
    "pandas.Series.droplevel": "doc",
    "pandas.Series.swaplevel": "doc",
    "pandas.Series.dt.normalize": "doc",
    "pandas.Series.str.normalize": "doc",
    "pandas.Series.cat.reorder_categories": "doc",
    "pandas.Series.convert_dtypes": "doc",
    "pandas.Series.reorder_levels": "doc",
    "pandas.Series.cat.set_categories": "doc",
    "pandas.Series.cat.remove_unused_categories": "doc",
    "pandas.Series.duplicated": "doc",
    "pandas.Series.sort_index": "doc",
    "pandas.Series.dt.weekofyear": "doc",
    "pandas.Series.dt.start_time": "doc",
    "pandas.Series.str.capitalize": "doc",
    "pandas.Series.str.extractall": "doc",
    "pandas.Series.str.startswith": "doc",
    "pandas.Series.cat.categories": "doc",
    "pandas.Series.drop_duplicates": "doc",
    "pandas.Series.last_valid_index": "doc",
    "pandas.Series.tz_localize": "doc",
    "pandas.Series.dt.microsecond": "doc",
    "pandas.Series.dt.is_year_end": "doc",
    "pandas.Series.dt.tz_localize": "doc",
    "pandas.Series.str.get_dummies": "doc",
    "pandas.Series.first_valid_index": "doc",
    "pandas.Series.between_time": "doc",
    "pandas.Series.dt.microseconds": "doc",
    "pandas.Series.infer_objects": "doc",
    "pandas.Series.dt.to_pydatetime": "doc",
    "pandas.Series": "doc",
    "pandas.Series.T": "doc",
    "pandas.Series.at": "doc",
    "pandas.Series.xs": "doc",
    "pandas.Series.lt": "doc",
    "pandas.Series.gt": "doc",
    "pandas.Series.le": "doc",
    "pandas.Series.ge": "doc",
    "pandas.Series.ne": "doc",
    "pandas.Series.eq": "doc",
    "pandas.Series.get": "doc",
    "pandas.Series.iat": "doc",
    "pandas.Series.loc": "doc",
    "pandas.Series.pop": "doc",
    "pandas.Series.add": "doc",
    "pandas.Series.sub": "doc",
    "pandas.Series.mul": "doc",
    "pandas.Series.div": "doc",
    "pandas.Series.mod": "doc",
    "pandas.Series.pow": "doc",
    "pandas.Series.dot": "doc",
    "pandas.Series.agg": "doc",
    "pandas.Series.ewm": "doc",
    "pandas.Series.abs": "doc",
    "pandas.Series.all": "doc",
    "pandas.Series.any": "doc",
    "pandas.Series.cov": "doc",
    "pandas.Series.mad": "doc",
    "pandas.Series.max": "doc",
    "pandas.Series.min": "doc",
    "pandas.Series.sem": "doc",
    "pandas.Series.std": "doc",
    "pandas.Series.sum": "doc",
    "pandas.Series.var": "doc",
    "pandas.Series.ndim": "doc",
    "pandas.Series.copy": "doc",
    "pandas.Series.bool": "doc",
    "pandas.Series.iloc": "doc",
    "pandas.Series.keys": "doc",
    "pandas.Series.item": "doc",
    "pandas.Series.rmul": "doc",
    "pandas.Series.rdiv": "doc",
    "pandas.Series.rmod": "doc",
    "pandas.Series.rpow": "doc",
    "pandas.Series.clip": "doc",
    "pandas.Series.corr": "doc",
    "pandas.Series.diff": "doc",
    "pandas.Series.kurt": "doc",
    "pandas.Series.mode": "doc",
    "pandas.Series.prod": "doc",
    "pandas.Series.skew": "doc",
    "pandas.Series.drop": "doc",
    "pandas.Series.isin": "doc",
    "pandas.Series.last": "doc",
    "pandas.Series.tail": "doc",
    "pandas.Series.mask": "doc",
    "pandas.Series.view": "doc",
    "pandas.Series.asof": "doc",
    "pandas.Series.plot": "doc",
    "pandas.Series.hist": "doc",
    "pandas.Series.index": "doc",
    "pandas.Series.array": "doc",
    "pandas.Series.empty": "doc",
    "pandas.Series.items": "doc",
    "pandas.Series.round": "doc",
    "pandas.Series.apply": "doc",
    "pandas.Series.count": "doc",
    "pandas.Series.align": "doc",
    "pandas.Series.first": "doc",
    "pandas.Series.notna": "doc",
    "pandas.Series.dt.tz": "doc",
    "pandas.Series.attrs": "doc",
    "pandas.Series.values": "doc",
    "pandas.Series.nbytes": "doc",
    "pandas.Series.dtypes": "doc",
    "pandas.Series.cummax": "doc",
    "pandas.Series.cummin": "doc",
    "pandas.Series.cumsum": "doc",
    "pandas.Series.unique": "doc",
    "pandas.Series.idxmax": "doc",
    "pandas.Series.idxmin": "doc",
    "pandas.Series.filter": "doc",
    "pandas.Series.dropna": "doc",
    "pandas.Series.fillna": "doc",
    "pandas.Series.argmin": "doc",
    "pandas.Series.argmax": "doc",
    "pandas.Series.append": "doc",
    "pandas.Series.asfreq": "doc",
    "pandas.Series.dt.day": "doc",
    "pandas.Series.to_csv": "doc",
    "pandas.Series.to_hdf": "doc",
    "pandas.Series.to_sql": "doc",
    "pandas.Series.to_list": "doc",
    "pandas.Series.truediv": "doc",
    "pandas.Series.combine": "doc",
    "pandas.Series.product": "doc",
    "pandas.Series.groupby": "doc",
    "pandas.Series.rolling": "doc",
    "pandas.Series.between": "doc",
    "pandas.Series.cumprod": "doc",
    "pandas.Series.nunique": "doc",
    "pandas.Series.argsort": "doc",
    "pandas.Series.explode": "doc",
    "pandas.Series.squeeze": "doc",
    "pandas.Series.at_time": "doc",
    "pandas.Series.dt.time": "doc",
    "pandas.Series.dt.hour": "doc",
    "pandas.Series.dt.week": "doc",
    "pandas.Series.dt.freq": "doc",
    "pandas.Series.dt.ceil": "doc",
    "pandas.Series.dt.days": "doc",
    "pandas.Series.str.cat": "doc",
    "pandas.Series.str.get": "doc",
    "pandas.Series.str.len": "doc",
    "pandas.Series.str.pad": "doc",
    "pandas.Series.to_dict": "doc",
    "pandas.Series.to_json": "doc",
    "pandas.Series.to_numpy": "doc",
    "pandas.Series.__iter__": "doc",
    "pandas.Series.floordiv": "doc",
    "pandas.Series.rtruediv": "doc",
    "pandas.Series.autocorr": "doc",
    "pandas.Series.nlargest": "doc",
    "pandas.Series.quantile": "doc",
    "pandas.Series.kurtosis": "doc",
    "pandas.Series.dt.month": "doc",
    "pandas.Series.dt.round": "doc",
    "pandas.Series.dt.floor": "doc",
    "pandas.Series.dt.qyear": "doc",
    "pandas.Series.str.find": "doc",
    "pandas.Series.str.join": "doc",
    "pandas.Series.plot.bar": "doc",
    "pandas.Series.plot.box": "doc",
    "pandas.Series.plot.kde": "doc",
    "pandas.Series.plot.pie": "doc",
    "pandas.Series.to_excel": "doc",
    "pandas.Series.to_period": "doc",
    "pandas.Series.__array__": "doc",
    "pandas.Series.iteritems": "doc",
    "pandas.Series.rfloordiv": "doc",
    "pandas.Series.expanding": "doc",
    "pandas.Series.factorize": "doc",
    "pandas.Series.is_unique": "doc",
    "pandas.Series.dt.timetz": "doc",
    "pandas.Series.dt.minute": "doc",
    "pandas.Series.dt.second": "doc",
    "pandas.Series.str.count": "doc",
    "pandas.Series.str.index": "doc",
    "pandas.Series.str.ljust": "doc",
    "pandas.Series.str.lower": "doc",
    "pandas.Series.str.match": "doc",
    "pandas.Series.str.rfind": "doc",
    "pandas.Series.str.rjust": "doc",
    "pandas.Series.str.split": "doc",
    "pandas.Series.str.strip": "doc",
    "pandas.Series.str.title": "doc",
    "pandas.Series.str.upper": "doc",
    "pandas.Series.str.zfill": "doc",
    "pandas.Series.cat.codes": "doc",
    "pandas.Series.plot.barh": "doc",
    "pandas.Series.plot.hist": "doc",
    "pandas.Series.plot.line": "doc",
    "pandas.Series.to_pickle": "doc",
    "pandas.Series.to_xarray": "doc",
    "pandas.Series.to_string": "doc",
    "pandas.Series.add_prefix": "doc",
    "pandas.Series.add_suffix": "doc",
    "pandas.Series.tz_convert": "doc",
    "pandas.Series.dt.weekday": "doc",
    "pandas.Series.dt.quarter": "doc",
    "pandas.Series.dt.seconds": "doc",
    "pandas.Series.str.center": "doc",
    "pandas.Series.str.lstrip": "doc",
    "pandas.Series.str.rindex": "doc",
    "pandas.Series.dt.strftime": "doc",
    "pandas.Series.dt.end_time": "doc",
    "pandas.Series.str.extract": "doc",
    "pandas.Series.str.findall": "doc",
    "pandas.Series.str.isalnum": "doc",
    "pandas.Series.str.isalpha": "doc",
    "pandas.Series.str.isdigit": "doc",
    "pandas.Series.str.islower": "doc",
    "pandas.Series.str.istitle": "doc",
    "pandas.Series.cat.ordered": "doc",
    "pandas.Series.to_markdown": "doc",
    "pandas.Series.is_monotonic": "doc",
    "pandas.Series.value_counts": "doc",
    "pandas.Series.dt.dayofweek": "doc",
    "pandas.Series.dt.dayofyear": "doc",
    "pandas.Series.dt.to_period": "doc",
    "pandas.Series.str.casefold": "doc",
    "pandas.Series.str.contains": "doc",
    "pandas.Series.str.endswith": "doc",
    "pandas.Series.plot.density": "doc",
    "pandas.Series.to_clipboard": "doc",
    "pandas.Series.combine_first": "doc",
    "pandas.Series.dt.nanosecond": "doc",
    "pandas.Series.dt.tz_convert": "doc",
    "pandas.Series.dt.components": "doc",
    "pandas.Series.str.partition": "doc",
    "pandas.Series.str.isnumeric": "doc",
    "pandas.Series.str.isdecimal": "doc",
    "pandas.Series.dt.daysinmonth": "doc",
    "pandas.Series.dt.nanoseconds": "doc",
    "pandas.Series.str.rpartition": "doc",
    "pandas.Series.cat.as_ordered": "doc",
    "pandas.Series.dt.is_month_end": "doc",
    "pandas.Series.dt.days_in_month": "doc",
    "pandas.Series.dt.total_seconds": "doc",
    "pandas.Series.cat.as_unordered": "doc",
    "pandas.Series.dt.is_month_start": "doc",
    "pandas.Series.dt.is_quarter_end": "doc",
    "pandas.Series.dt.to_pytimedelta": "doc",
    "pandas.Series.cat.add_categories": "doc",
    "pandas.Series.is_monotonic_increasing": "doc",
    "pandas.Series.is_monotonic_decreasing": "doc",
    "pandas.core.resample.Resampler.indices": "doc",
    "pandas.core.resample.Resampler.nearest": "doc",
    "pandas.tseries.offsets.Day.rule_code": "doc",
    "pandas.tseries.offsets.Week.rule_code": "doc",
    "pandas.tseries.offsets.Tick.rule_code": "doc",
    "pandas.tseries.offsets.Hour.rule_code": "doc",
    "pandas.tseries.offsets.Nano.rule_code": "doc",
    "pandas.tseries.offsets.BDay.rule_code": "doc",
    "pandas.tseries.offsets.CDay.rule_code": "doc",
    "pandas.tseries.offsets.Milli.rule_code": "doc",
    "pandas.tseries.offsets.Micro.rule_code": "doc",
    "pandas.tseries.offsets.FY5253.rule_code": "doc",
    "pandas.tseries.offsets.Easter.rule_code": "doc",
    "pandas.tseries.offsets.Minute.rule_code": "doc",
    "pandas.tseries.offsets.Second.rule_code": "doc",
    "pandas.tseries.offsets.YearEnd.rule_code": "doc",
    "pandas.tseries.offsets.MonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.BYearEnd.rule_code": "doc",
    "pandas.tseries.offsets.YearBegin.rule_code": "doc",
    "pandas.tseries.offsets.BMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.DateOffset.rule_code": "doc",
    "pandas.tseries.offsets.MonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.QuarterEnd.rule_code": "doc",
    "pandas.tseries.offsets.YearOffset.rule_code": "doc",
    "pandas.tseries.offsets.BYearBegin.rule_code": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.BusinessDay.rule_code": "doc",
    "pandas.tseries.offsets.MonthOffset.rule_code": "doc",
    "pandas.tseries.offsets.WeekOfMonth.rule_code": "doc",
    "pandas.tseries.offsets.BQuarterEnd.rule_code": "doc",
    "pandas.tseries.offsets.BMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.BusinessHour.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.QuarterBegin.rule_code": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.QuarterOffset.rule_code": "doc",
    "pandas.tseries.offsets.BQuarterBegin.rule_code": "doc",
    "pandas.tseries.offsets.FY5253Quarter.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.rule_code": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.rule_code": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.rule_code": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.Day.name": "doc",
    "pandas.tseries.offsets.Week.name": "doc",
    "pandas.tseries.offsets.Tick.name": "doc",
    "pandas.tseries.offsets.Day.delta": "doc",
    "pandas.tseries.offsets.Hour.name": "doc",
    "pandas.tseries.offsets.Nano.name": "doc",
    "pandas.tseries.offsets.BDay.base": "doc",
    "pandas.tseries.offsets.BDay.name": "doc",
    "pandas.tseries.offsets.CDay.base": "doc",
    "pandas.tseries.offsets.CDay.name": "doc",
    "pandas.tseries.offsets.Tick.delta": "doc",
    "pandas.tseries.offsets.Hour.delta": "doc",
    "pandas.tseries.offsets.Milli.name": "doc",
    "pandas.tseries.offsets.Micro.name": "doc",
    "pandas.tseries.offsets.Nano.delta": "doc",
    "pandas.tseries.offsets.FY5253.name": "doc",
    "pandas.tseries.offsets.Easter.name": "doc",
    "pandas.tseries.offsets.Minute.name": "doc",
    "pandas.tseries.offsets.Second.name": "doc",
    "pandas.tseries.offsets.Milli.delta": "doc",
    "pandas.tseries.offsets.Micro.delta": "doc",
    "pandas.tseries.offsets.YearEnd.name": "doc",
    "pandas.tseries.offsets.Minute.delta": "doc",
    "pandas.tseries.offsets.Second.delta": "doc",
    "pandas.tseries.offsets.MonthEnd.name": "doc",
    "pandas.tseries.offsets.BYearEnd.name": "doc",
    "pandas.tseries.offsets.YearBegin.name": "doc",
    "pandas.tseries.offsets.BMonthEnd.base": "doc",
    "pandas.tseries.offsets.BMonthEnd.name": "doc",
    "pandas.tseries.offsets.DateOffset.name": "doc",
    "pandas.tseries.offsets.MonthBegin.name": "doc",
    "pandas.tseries.offsets.QuarterEnd.name": "doc",
    "pandas.tseries.offsets.YearOffset.name": "doc",
    "pandas.tseries.offsets.BYearBegin.name": "doc",
    "pandas.tseries.offsets.CBMonthEnd.base": "doc",
    "pandas.tseries.offsets.CBMonthEnd.name": "doc",
    "pandas.tseries.offsets.BusinessDay.name": "doc",
    "pandas.tseries.offsets.MonthOffset.name": "doc",
    "pandas.tseries.offsets.WeekOfMonth.name": "doc",
    "pandas.tseries.offsets.BQuarterEnd.name": "doc",
    "pandas.tseries.offsets.BMonthBegin.base": "doc",
    "pandas.tseries.offsets.BMonthBegin.name": "doc",
    "pandas.tseries.offsets.BusinessHour.name": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.name": "doc",
    "pandas.tseries.offsets.QuarterBegin.name": "doc",
    "pandas.tseries.offsets.CBMonthBegin.base": "doc",
    "pandas.tseries.offsets.CBMonthBegin.name": "doc",
    "pandas.tseries.offsets.QuarterOffset.name": "doc",
    "pandas.tseries.offsets.BQuarterBegin.name": "doc",
    "pandas.tseries.offsets.FY5253Quarter.name": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.name": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.name": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.name": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.name": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.name": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.name": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.name": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.name": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.name": "doc",
    "pandas.tseries.offsets.BDay.rollback": "doc",
    "pandas.tseries.offsets.CDay.rollback": "doc",
    "pandas.tseries.offsets.BMonthEnd.rollback": "doc",
    "pandas.tseries.offsets.FY5253.get_year_end": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rollback": "doc",
    "pandas.tseries.offsets.BMonthBegin.rollback": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rollback": "doc",
    "pandas.core.resample.Resampler.pad": "doc",
    "pandas.core.resample.Resampler.max": "doc",
    "pandas.core.resample.Resampler.min": "doc",
    "pandas.core.resample.Resampler.sem": "doc",
    "pandas.core.resample.Resampler.std": "doc",
    "pandas.core.resample.Resampler.sum": "doc",
    "pandas.core.resample.Resampler.var": "doc",
    "pandas.core.resample.Resampler.pipe": "doc",
    "pandas.core.resample.Resampler.last": "doc",
    "pandas.core.resample.Resampler.mean": "doc",
    "pandas.core.resample.Resampler.ohlc": "doc",
    "pandas.core.resample.Resampler.prod": "doc",
    "pandas.core.resample.Resampler.size": "doc",
    "pandas.core.resample.Resampler.apply": "doc",
    "pandas.core.resample.Resampler.ffill": "doc",
    "pandas.core.resample.Resampler.bfill": "doc",
    "pandas.core.resample.Resampler.count": "doc",
    "pandas.core.resample.Resampler.first": "doc",
    "pandas.core.resample.Resampler.groups": "doc",
    "pandas.core.resample.Resampler.fillna": "doc",
    "pandas.core.resample.Resampler.asfreq": "doc",
    "pandas.core.resample.Resampler.median": "doc",
    "pandas.core.resample.Resampler.nunique": "doc",
    "pandas.core.resample.Resampler.__iter__": "doc",
    "pandas.core.resample.Resampler.backfill": "doc",
    "pandas.core.resample.Resampler.quantile": "doc",
    "pandas.core.resample.Resampler.get_group": "doc",
    "pandas.core.resample.Resampler.aggregate": "doc",
    "pandas.core.resample.Resampler.transform": "doc",
    "pandas.core.resample.Resampler.interpolate": "doc",
    "pandas.core.groupby.DataFrameGroupBy.resample": "doc",
    "pandas.MultiIndex.levshape": "doc",
    "pandas.tseries.offsets.QuarterOffset": "doc",
    "pandas.tseries.offsets.QuarterOffset.kwds": "doc",
    "pandas.tseries.offsets.QuarterOffset.copy": "doc",
    "pandas.tseries.offsets.QuarterOffset.nanos": "doc",
    "pandas.tseries.offsets.QuarterOffset.apply": "doc",
    "pandas.tseries.offsets.QuarterOffset.freqstr": "doc",
    "pandas.tseries.offsets.QuarterOffset.onOffset": "doc",
    "pandas.tseries.offsets.QuarterOffset.__call__": "doc",
    "pandas.tseries.offsets.QuarterOffset.normalize": "doc",
    "pandas.tseries.offsets.QuarterOffset.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterOffset.apply_index": "doc",
    "pandas.tseries.offsets.QuarterOffset.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.Day.normalize": "doc",
    "pandas.tseries.offsets.Week.normalize": "doc",
    "pandas.tseries.offsets.Tick.normalize": "doc",
    "pandas.tseries.offsets.Hour.normalize": "doc",
    "pandas.tseries.offsets.Nano.normalize": "doc",
    "pandas.tseries.offsets.BDay.normalize": "doc",
    "pandas.tseries.offsets.CDay.normalize": "doc",
    "pandas.tseries.offsets.Milli.normalize": "doc",
    "pandas.tseries.offsets.Micro.normalize": "doc",
    "pandas.tseries.offsets.FY5253.normalize": "doc",
    "pandas.tseries.offsets.Easter.normalize": "doc",
    "pandas.tseries.offsets.Minute.normalize": "doc",
    "pandas.tseries.offsets.Second.normalize": "doc",
    "pandas.tseries.offsets.YearEnd.normalize": "doc",
    "pandas.tseries.offsets.MonthEnd.normalize": "doc",
    "pandas.tseries.offsets.BYearEnd.normalize": "doc",
    "pandas.tseries.offsets.YearBegin.normalize": "doc",
    "pandas.tseries.offsets.BMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.DateOffset.normalize": "doc",
    "pandas.tseries.offsets.MonthBegin.normalize": "doc",
    "pandas.tseries.offsets.QuarterEnd.normalize": "doc",
    "pandas.tseries.offsets.YearOffset.normalize": "doc",
    "pandas.tseries.offsets.BYearBegin.normalize": "doc",
    "pandas.tseries.offsets.CBMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.BusinessDay.normalize": "doc",
    "pandas.tseries.offsets.MonthOffset.normalize": "doc",
    "pandas.tseries.offsets.WeekOfMonth.normalize": "doc",
    "pandas.tseries.offsets.BQuarterEnd.normalize": "doc",
    "pandas.tseries.offsets.BMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.BusinessHour.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.QuarterBegin.normalize": "doc",
    "pandas.tseries.offsets.CBMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.BQuarterBegin.normalize": "doc",
    "pandas.tseries.offsets.FY5253Quarter.normalize": "doc",
    "pandas.tseries.offsets.FY5253Quarter.get_weeks": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.normalize": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.normalize": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.normalize": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.FY5253Quarter.year_has_extra_week": "doc",
    "pandas.tseries.offsets.DateOffset": "doc",
    "pandas.tseries.offsets.YearOffset": "doc",
    "pandas.tseries.offsets.Day.isAnchored": "doc",
    "pandas.tseries.offsets.DateOffset.kwds": "doc",
    "pandas.tseries.offsets.DateOffset.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset": "doc",
    "pandas.tseries.offsets.Week.isAnchored": "doc",
    "pandas.tseries.offsets.YearOffset.kwds": "doc",
    "pandas.tseries.offsets.YearOffset.copy": "doc",
    "pandas.tseries.offsets.Tick.isAnchored": "doc",
    "pandas.tseries.offsets.Hour.isAnchored": "doc",
    "pandas.tseries.offsets.Nano.isAnchored": "doc",
    "pandas.tseries.offsets.BDay.isAnchored": "doc",
    "pandas.tseries.offsets.CDay.isAnchored": "doc",
    "pandas.tseries.offsets.DateOffset.nanos": "doc",
    "pandas.tseries.offsets.DateOffset.apply": "doc",
    "pandas.tseries.offsets.YearOffset.nanos": "doc",
    "pandas.tseries.offsets.YearOffset.apply": "doc",
    "pandas.tseries.offsets.Milli.isAnchored": "doc",
    "pandas.tseries.offsets.Micro.isAnchored": "doc",
    "pandas.tseries.offsets.FY5253.isAnchored": "doc",
    "pandas.tseries.offsets.Easter.isAnchored": "doc",
    "pandas.tseries.offsets.Minute.isAnchored": "doc",
    "pandas.tseries.offsets.Second.isAnchored": "doc",
    "pandas.tseries.offsets.DateOffset.freqstr": "doc",
    "pandas.tseries.offsets.YearOffset.freqstr": "doc",
    "pandas.tseries.offsets.YearEnd.isAnchored": "doc",
    "pandas.tseries.offsets.DateOffset.onOffset": "doc",
    "pandas.tseries.offsets.DateOffset.__call__": "doc",
    "pandas.tseries.offsets.MonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.YearOffset.onOffset": "doc",
    "pandas.tseries.offsets.YearOffset.__call__": "doc",
    "pandas.tseries.offsets.BYearEnd.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.copy": "doc",
    "pandas.tseries.offsets.YearBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.DateOffset.isAnchored": "doc",
    "pandas.tseries.offsets.MonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.apply": "doc",
    "pandas.tseries.offsets.QuarterEnd.isAnchored": "doc",
    "pandas.tseries.offsets.YearOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BYearBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CBMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.DateOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessDay.isAnchored": "doc",
    "pandas.tseries.offsets.MonthOffset.isAnchored": "doc",
    "pandas.tseries.offsets.WeekOfMonth.isAnchored": "doc",
    "pandas.tseries.offsets.BQuarterEnd.isAnchored": "doc",
    "pandas.tseries.offsets.YearOffset.apply_index": "doc",
    "pandas.tseries.offsets.YearOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.DateOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessHour.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.isAnchored": "doc",
    "pandas.tseries.offsets.YearOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.__call__": "doc",
    "pandas.tseries.offsets.BQuarterBegin.isAnchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.isAnchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.copy": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.apply": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessDay": "doc",
    "pandas.tseries.offsets.MonthOffset": "doc",
    "pandas.tseries.offsets.Day.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessDay.kwds": "doc",
    "pandas.tseries.offsets.BusinessDay.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.kwds": "doc",
    "pandas.tseries.offsets.MonthOffset.copy": "doc",
    "pandas.tseries.offsets.Week.is_anchored": "doc",
    "pandas.tseries.offsets.Tick.is_anchored": "doc",
    "pandas.tseries.offsets.Hour.is_anchored": "doc",
    "pandas.tseries.offsets.Nano.is_anchored": "doc",
    "pandas.tseries.offsets.BDay.is_anchored": "doc",
    "pandas.tseries.offsets.BDay.rollforward": "doc",
    "pandas.tseries.offsets.CDay.is_anchored": "doc",
    "pandas.tseries.offsets.CDay.rollforward": "doc",
    "pandas.tseries.offsets.BusinessDay.nanos": "doc",
    "pandas.tseries.offsets.BusinessDay.apply": "doc",
    "pandas.tseries.offsets.MonthOffset.nanos": "doc",
    "pandas.tseries.offsets.MonthOffset.apply": "doc",
    "pandas.tseries.offsets.Milli.is_anchored": "doc",
    "pandas.tseries.offsets.Micro.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253.is_anchored": "doc",
    "pandas.tseries.offsets.Easter.is_anchored": "doc",
    "pandas.tseries.offsets.Minute.is_anchored": "doc",
    "pandas.tseries.offsets.Second.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessDay.freqstr": "doc",
    "pandas.tseries.offsets.MonthOffset.freqstr": "doc",
    "pandas.tseries.offsets.YearEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessDay.onOffset": "doc",
    "pandas.tseries.offsets.BusinessDay.__call__": "doc",
    "pandas.tseries.offsets.MonthOffset.onOffset": "doc",
    "pandas.tseries.offsets.MonthOffset.__call__": "doc",
    "pandas.tseries.offsets.MonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BYearEnd.is_anchored": "doc",
    "pandas.tseries.offsets.YearBegin.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.rollforward": "doc",
    "pandas.tseries.offsets.MonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BYearBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rollforward": "doc",
    "pandas.tseries.offsets.BusinessDay.apply_index": "doc",
    "pandas.tseries.offsets.BusinessDay.is_anchored": "doc",
    "pandas.tseries.offsets.MonthOffset.apply_index": "doc",
    "pandas.tseries.offsets.MonthOffset.is_anchored": "doc",
    "pandas.tseries.offsets.WeekOfMonth.is_anchored": "doc",
    "pandas.tseries.offsets.BQuarterEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.rollforward": "doc",
    "pandas.tseries.offsets.BusinessDay.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessHour.is_anchored": "doc",
    "pandas.tseries.offsets.MonthOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rollforward": "doc",
    "pandas.tseries.offsets.BQuarterBegin.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.is_anchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored": "doc",
    "pandas.Index.shape": "doc",
    "pandas.DataFrame.shape": "doc",
    "pandas.tseries.offsets.BusinessHour": "doc",
    "pandas.tseries.offsets.SemiMonthEnd": "doc",
    "pandas.tseries.offsets.QuarterBegin": "doc",
    "pandas.tseries.offsets.BusinessHour.kwds": "doc",
    "pandas.tseries.offsets.BusinessHour.copy": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.copy": "doc",
    "pandas.tseries.offsets.QuarterBegin.kwds": "doc",
    "pandas.tseries.offsets.QuarterBegin.copy": "doc",
    "pandas.tseries.offsets.BusinessHour.nanos": "doc",
    "pandas.tseries.offsets.BusinessHour.apply": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.apply": "doc",
    "pandas.tseries.offsets.QuarterBegin.nanos": "doc",
    "pandas.tseries.offsets.QuarterBegin.apply": "doc",
    "pandas.tseries.offsets.BusinessHour.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.QuarterBegin.freqstr": "doc",
    "pandas.tseries.offsets.BusinessHour.onOffset": "doc",
    "pandas.tseries.offsets.BusinessHour.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.QuarterBegin.onOffset": "doc",
    "pandas.tseries.offsets.QuarterBegin.__call__": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.copy": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.apply": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.QuarterBegin.apply_index": "doc",
    "pandas.tseries.offsets.BusinessHour.is_on_offset": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.QuarterBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.BQuarterBegin": "doc",
    "pandas.tseries.offsets.FY5253Quarter": "doc",
    "pandas.tseries.offsets.BQuarterBegin.kwds": "doc",
    "pandas.tseries.offsets.BQuarterBegin.copy": "doc",
    "pandas.tseries.offsets.FY5253Quarter.kwds": "doc",
    "pandas.tseries.offsets.FY5253Quarter.copy": "doc",
    "pandas.tseries.offsets.BQuarterBegin.nanos": "doc",
    "pandas.tseries.offsets.BQuarterBegin.apply": "doc",
    "pandas.tseries.offsets.FY5253Quarter.nanos": "doc",
    "pandas.tseries.offsets.FY5253Quarter.apply": "doc",
    "pandas.tseries.offsets.BQuarterBegin.freqstr": "doc",
    "pandas.tseries.offsets.FY5253Quarter.freqstr": "doc",
    "pandas.tseries.offsets.BQuarterBegin.onOffset": "doc",
    "pandas.tseries.offsets.BQuarterBegin.__call__": "doc",
    "pandas.tseries.offsets.FY5253Quarter.onOffset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.__call__": "doc",
    "pandas.tseries.offsets.BQuarterBegin.apply_index": "doc",
    "pandas.tseries.offsets.BQuarterBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253.get_rule_code_suffix": "doc",
    "pandas.tseries.offsets.Day": "doc",
    "pandas.tseries.offsets.Week": "doc",
    "pandas.tseries.offsets.Tick": "doc",
    "pandas.tseries.offsets.Hour": "doc",
    "pandas.tseries.offsets.Nano": "doc",
    "pandas.tseries.offsets.BDay": "doc",
    "pandas.tseries.offsets.CDay": "doc",
    "pandas.tseries.offsets.Milli": "doc",
    "pandas.tseries.offsets.Micro": "doc",
    "pandas.tseries.offsets.FY5253": "doc",
    "pandas.tseries.offsets.Easter": "doc",
    "pandas.tseries.offsets.Minute": "doc",
    "pandas.tseries.offsets.Second": "doc",
    "pandas.tseries.offsets.YearEnd": "doc",
    "pandas.tseries.offsets.MonthEnd": "doc",
    "pandas.tseries.offsets.BYearEnd": "doc",
    "pandas.tseries.offsets.Day.kwds": "doc",
    "pandas.tseries.offsets.Day.copy": "doc",
    "pandas.tseries.offsets.Week.kwds": "doc",
    "pandas.tseries.offsets.Week.copy": "doc",
    "pandas.tseries.offsets.YearBegin": "doc",
    "pandas.tseries.offsets.Tick.kwds": "doc",
    "pandas.tseries.offsets.Tick.copy": "doc",
    "pandas.tseries.offsets.Day.nanos": "doc",
    "pandas.tseries.offsets.Hour.kwds": "doc",
    "pandas.tseries.offsets.Hour.copy": "doc",
    "pandas.tseries.offsets.Nano.kwds": "doc",
    "pandas.tseries.offsets.Nano.copy": "doc",
    "pandas.tseries.offsets.BDay.kwds": "doc",
    "pandas.tseries.offsets.BDay.copy": "doc",
    "pandas.tseries.offsets.BMonthEnd": "doc",
    "pandas.tseries.offsets.CDay.kwds": "doc",
    "pandas.tseries.offsets.CDay.copy": "doc",
    "pandas.tseries.offsets.MonthBegin": "doc",
    "pandas.tseries.offsets.Week.nanos": "doc",
    "pandas.tseries.offsets.Week.apply": "doc",
    "pandas.tseries.offsets.QuarterEnd": "doc",
    "pandas.tseries.offsets.BYearBegin": "doc",
    "pandas.tseries.offsets.Tick.nanos": "doc",
    "pandas.tseries.offsets.Hour.nanos": "doc",
    "pandas.tseries.offsets.Milli.kwds": "doc",
    "pandas.tseries.offsets.Milli.copy": "doc",
    "pandas.tseries.offsets.Micro.kwds": "doc",
    "pandas.tseries.offsets.Micro.copy": "doc",
    "pandas.tseries.offsets.Nano.nanos": "doc",
    "pandas.tseries.offsets.BDay.nanos": "doc",
    "pandas.tseries.offsets.BDay.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd": "doc",
    "pandas.tseries.offsets.CDay.nanos": "doc",
    "pandas.tseries.offsets.CDay.apply": "doc",
    "pandas.tseries.offsets.WeekOfMonth": "doc",
    "pandas.tseries.offsets.BQuarterEnd": "doc",
    "pandas.tseries.offsets.FY5253.kwds": "doc",
    "pandas.tseries.offsets.FY5253.copy": "doc",
    "pandas.tseries.offsets.Easter.kwds": "doc",
    "pandas.tseries.offsets.Easter.copy": "doc",
    "pandas.tseries.offsets.Day.freqstr": "doc",
    "pandas.tseries.offsets.Minute.kwds": "doc",
    "pandas.tseries.offsets.Minute.copy": "doc",
    "pandas.tseries.offsets.Second.kwds": "doc",
    "pandas.tseries.offsets.Second.copy": "doc",
    "pandas.tseries.offsets.Milli.nanos": "doc",
    "pandas.tseries.offsets.Micro.nanos": "doc",
    "pandas.tseries.offsets.BDay.offset": "doc",
    "pandas.tseries.offsets.BMonthBegin": "doc",
    "pandas.tseries.offsets.CDay.offset": "doc",
    "pandas.tseries.offsets.Week.freqstr": "doc",
    "pandas.tseries.offsets.YearEnd.kwds": "doc",
    "pandas.tseries.offsets.YearEnd.copy": "doc",
    "pandas.tseries.offsets.FY5253.nanos": "doc",
    "pandas.tseries.offsets.FY5253.apply": "doc",
    "pandas.tseries.offsets.Easter.nanos": "doc",
    "pandas.tseries.offsets.Easter.apply": "doc",
    "pandas.tseries.offsets.Tick.freqstr": "doc",
    "pandas.tseries.offsets.Day.onOffset": "doc",
    "pandas.tseries.offsets.Day.__call__": "doc",
    "pandas.tseries.offsets.Hour.freqstr": "doc",
    "pandas.tseries.offsets.Minute.nanos": "doc",
    "pandas.tseries.offsets.Second.nanos": "doc",
    "pandas.tseries.offsets.Nano.freqstr": "doc",
    "pandas.tseries.offsets.BDay.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthBegin": "doc",
    "pandas.tseries.offsets.CDay.freqstr": "doc",
    "pandas.tseries.offsets.MonthEnd.kwds": "doc",
    "pandas.tseries.offsets.MonthEnd.copy": "doc",
    "pandas.tseries.offsets.Week.onOffset": "doc",
    "pandas.tseries.offsets.Week.__call__": "doc",
    "pandas.tseries.offsets.BYearEnd.kwds": "doc",
    "pandas.tseries.offsets.BYearEnd.copy": "doc",
    "pandas.tseries.offsets.YearEnd.nanos": "doc",
    "pandas.tseries.offsets.YearEnd.apply": "doc",
    "pandas.tseries.offsets.Tick.onOffset": "doc",
    "pandas.tseries.offsets.Tick.__call__": "doc",
    "pandas.tseries.offsets.Hour.onOffset": "doc",
    "pandas.tseries.offsets.Hour.__call__": "doc",
    "pandas.tseries.offsets.Milli.freqstr": "doc",
    "pandas.tseries.offsets.Micro.freqstr": "doc",
    "pandas.tseries.offsets.Nano.onOffset": "doc",
    "pandas.tseries.offsets.Nano.__call__": "doc",
    "pandas.tseries.offsets.BDay.onOffset": "doc",
    "pandas.tseries.offsets.BDay.__call__": "doc",
    "pandas.tseries.offsets.CDay.onOffset": "doc",
    "pandas.tseries.offsets.CDay.__call__": "doc",
    "pandas.tseries.offsets.MonthEnd.nanos": "doc",
    "pandas.tseries.offsets.MonthEnd.apply": "doc",
    "pandas.tseries.offsets.SemiMonthBegin": "doc",
    "pandas.tseries.offsets.BYearEnd.nanos": "doc",
    "pandas.tseries.offsets.BYearEnd.apply": "doc",
    "pandas.tseries.offsets.YearBegin.kwds": "doc",
    "pandas.tseries.offsets.YearBegin.copy": "doc",
    "pandas.tseries.offsets.FY5253.freqstr": "doc",
    "pandas.tseries.offsets.Easter.freqstr": "doc",
    "pandas.tseries.offsets.Minute.freqstr": "doc",
    "pandas.tseries.offsets.Second.freqstr": "doc",
    "pandas.tseries.offsets.Milli.onOffset": "doc",
    "pandas.tseries.offsets.Milli.__call__": "doc",
    "pandas.tseries.offsets.Micro.onOffset": "doc",
    "pandas.tseries.offsets.Micro.__call__": "doc",
    "pandas.tseries.offsets.BMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.BMonthEnd.copy": "doc",
    "pandas.tseries.offsets.MonthBegin.kwds": "doc",
    "pandas.tseries.offsets.MonthBegin.copy": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth": "doc",
    "pandas.tseries.offsets.QuarterEnd.kwds": "doc",
    "pandas.tseries.offsets.QuarterEnd.copy": "doc",
    "pandas.tseries.offsets.BYearBegin.kwds": "doc",
    "pandas.tseries.offsets.BYearBegin.copy": "doc",
    "pandas.tseries.offsets.YearEnd.freqstr": "doc",
    "pandas.tseries.offsets.YearBegin.nanos": "doc",
    "pandas.tseries.offsets.YearBegin.apply": "doc",
    "pandas.tseries.offsets.FY5253.onOffset": "doc",
    "pandas.tseries.offsets.FY5253.__call__": "doc",
    "pandas.tseries.offsets.Easter.onOffset": "doc",
    "pandas.tseries.offsets.Easter.__call__": "doc",
    "pandas.tseries.offsets.Minute.onOffset": "doc",
    "pandas.tseries.offsets.Minute.__call__": "doc",
    "pandas.tseries.offsets.Second.onOffset": "doc",
    "pandas.tseries.offsets.Second.__call__": "doc",
    "pandas.tseries.offsets.BMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.BMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.CBMonthEnd.copy": "doc",
    "pandas.tseries.offsets.MonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.MonthBegin.nanos": "doc",
    "pandas.tseries.offsets.MonthBegin.apply": "doc",
    "pandas.tseries.offsets.Week.apply_index": "doc",
    "pandas.tseries.offsets.WeekOfMonth.kwds": "doc",
    "pandas.tseries.offsets.WeekOfMonth.copy": "doc",
    "pandas.tseries.offsets.BQuarterEnd.kwds": "doc",
    "pandas.tseries.offsets.BQuarterEnd.copy": "doc",
    "pandas.tseries.offsets.QuarterEnd.nanos": "doc",
    "pandas.tseries.offsets.QuarterEnd.apply": "doc",
    "pandas.tseries.offsets.BYearEnd.freqstr": "doc",
    "pandas.tseries.offsets.BYearBegin.nanos": "doc",
    "pandas.tseries.offsets.BYearBegin.apply": "doc",
    "pandas.tseries.offsets.YearEnd.onOffset": "doc",
    "pandas.tseries.offsets.YearEnd.__call__": "doc",
    "pandas.tseries.offsets.Day.is_on_offset": "doc",
    "pandas.tseries.offsets.BDay.apply_index": "doc",
    "pandas.tseries.offsets.BMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.BMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CBMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.CBMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CDay.apply_index": "doc",
    "pandas.tseries.offsets.CustomBusinessDay": "doc",
    "pandas.tseries.offsets.MonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.MonthEnd.__call__": "doc",
    "pandas.tseries.offsets.Week.is_on_offset": "doc",
    "pandas.tseries.offsets.WeekOfMonth.nanos": "doc",
    "pandas.tseries.offsets.WeekOfMonth.apply": "doc",
    "pandas.tseries.offsets.BQuarterEnd.nanos": "doc",
    "pandas.tseries.offsets.BQuarterEnd.apply": "doc",
    "pandas.tseries.offsets.BYearEnd.onOffset": "doc",
    "pandas.tseries.offsets.BYearEnd.__call__": "doc",
    "pandas.tseries.offsets.YearBegin.freqstr": "doc",
    "pandas.tseries.offsets.Tick.is_on_offset": "doc",
    "pandas.tseries.offsets.Hour.is_on_offset": "doc",
    "pandas.tseries.offsets.Nano.is_on_offset": "doc",
    "pandas.tseries.offsets.BDay.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.BMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.BMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd.offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.CBMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CDay.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessHour": "doc",
    "pandas.tseries.offsets.MonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.QuarterEnd.freqstr": "doc",
    "pandas.tseries.offsets.BYearBegin.freqstr": "doc",
    "pandas.tseries.offsets.YearBegin.onOffset": "doc",
    "pandas.tseries.offsets.YearBegin.__call__": "doc",
    "pandas.tseries.offsets.Milli.is_on_offset": "doc",
    "pandas.tseries.offsets.Micro.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.BMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CBMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.CBMonthBegin.apply": "doc",
    "pandas.tseries.offsets.MonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.MonthBegin.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.copy": "doc",
    "pandas.tseries.offsets.WeekOfMonth.freqstr": "doc",
    "pandas.tseries.offsets.BQuarterEnd.freqstr": "doc",
    "pandas.tseries.offsets.QuarterEnd.onOffset": "doc",
    "pandas.tseries.offsets.QuarterEnd.__call__": "doc",
    "pandas.tseries.offsets.BYearBegin.onOffset": "doc",
    "pandas.tseries.offsets.BYearBegin.__call__": "doc",
    "pandas.tseries.offsets.YearEnd.apply_index": "doc",
    "pandas.tseries.offsets.FY5253.is_on_offset": "doc",
    "pandas.tseries.offsets.Easter.is_on_offset": "doc",
    "pandas.tseries.offsets.Minute.is_on_offset": "doc",
    "pandas.tseries.offsets.Second.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthEnd.m_offset": "doc",
    "pandas.tseries.offsets.CBMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.CBMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CBMonthBegin.offset": "doc",
    "pandas.tseries.offsets.MonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.apply": "doc",
    "pandas.tseries.offsets.WeekOfMonth.onOffset": "doc",
    "pandas.tseries.offsets.WeekOfMonth.__call__": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.kwds": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.copy": "doc",
    "pandas.tseries.offsets.BQuarterEnd.onOffset": "doc",
    "pandas.tseries.offsets.BQuarterEnd.__call__": "doc",
    "pandas.tseries.offsets.BYearEnd.apply_index": "doc",
    "pandas.tseries.offsets.YearEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.BMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.CBMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.MonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.nanos": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.apply": "doc",
    "pandas.tseries.offsets.BYearEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.YearBegin.apply_index": "doc",
    "pandas.tseries.offsets.BMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.CBMonthEnd.cbday_roll": "doc",
    "pandas.tseries.offsets.CBMonthEnd.month_roll": "doc",
    "pandas.tseries.offsets.CBMonthBegin.m_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.copy": "doc",
    "pandas.tseries.offsets.MonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.QuarterEnd.apply_index": "doc",
    "pandas.tseries.offsets.BYearBegin.apply_index": "doc",
    "pandas.tseries.offsets.YearBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.copy": "doc",
    "pandas.tseries.offsets.MonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.freqstr": "doc",
    "pandas.tseries.offsets.BQuarterEnd.apply_index": "doc",
    "pandas.tseries.offsets.QuarterEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BYearBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.CBMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.cbday_roll": "doc",
    "pandas.tseries.offsets.CBMonthBegin.month_roll": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin": "doc",
    "pandas.tseries.offsets.WeekOfMonth.is_on_offset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.onOffset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.__call__": "doc",
    "pandas.tseries.offsets.BQuarterEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.copy": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.apply": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset": "doc",
    "pandas.DataFrame.resample": "doc",
    "pandas.merge": "doc",
    "pandas.Period.year": "doc",
    "pandas.DataFrame.merge": "doc",
    "pandas.Index.to_series": "doc",
    "pandas.DataFrame.iteritems": "doc",
    "pandas.DatetimeIndex.to_series": "doc",
    "pandas.TimedeltaIndex.to_series": "doc",
    "pandas.core.groupby.SeriesGroupBy.unique": "doc",
    "pandas.core.groupby.SeriesGroupBy.nunique": "doc",
    "pandas.core.groupby.SeriesGroupBy.nlargest": "doc",
    "pandas.core.groupby.SeriesGroupBy.nsmallest": "doc",
    "pandas.core.groupby.SeriesGroupBy.value_counts": "doc",
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing": "doc",
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing": "doc",
    "pandas.Interval.overlaps": "doc",
    "pandas.DataFrame.describe": "doc",
    "pandas.Period.is_leap_year": "doc",
    "pandas.Period.to_timestamp": "doc",
    "pandas.IntervalIndex.overlaps": "doc",
    "pandas.CategoricalDtype.categories": "doc",
    "pandas.core.groupby.DataFrameGroupBy.describe": "doc",
    "pandas.Index.rename": "doc",
    "pandas.DataFrame.rename": "doc",
    "pandas.DataFrame.replace": "doc",
    "pandas.Timestamp.replace": "doc",
    "pandas.io.formats.style.Styler.template": "doc",
    "pandas.DataFrame.itertuples": "doc",
    "pandas.Period.start_time": "doc",
    "pandas.Period.weekofyear": "doc",
    "pandas.Categorical.categories": "doc",
    "pandas.CategoricalIndex.categories": "doc",
    "pandas.api.types.is_hashable": "doc",
    "pandas.Timestamp.week": "doc",
    "pandas.Timestamp.ceil": "doc",
    "pandas.Timestamp.freq": "doc",
    "pandas.Index.set_names": "doc",
    "pandas.Timestamp.to_period": "doc",
    "pandas.api.types.is_sparse": "doc",
    "pandas.core.groupby.GroupBy.aggregate": "doc",
    "pandas.core.window.rolling.Rolling.aggregate": "doc",
    "pandas.core.window.expanding.Expanding.aggregate": "doc",
    "pandas.io.stata.StataWriter.write_file": "doc",
    "pandas.DatetimeIndex.snap": "doc",
    "pandas.PeriodIndex.year": "doc",
    "pandas.Period": "doc",
    "pandas.Period.day": "doc",
    "pandas.Period.now": "doc",
    "pandas.Period.freq": "doc",
    "pandas.Period.hour": "doc",
    "pandas.Period.week": "doc",
    "pandas.Period.month": "doc",
    "pandas.Period.qyear": "doc",
    "pandas.Period.minute": "doc",
    "pandas.Period.second": "doc",
    "pandas.Period.asfreq": "doc",
    "pandas.Period.freqstr": "doc",
    "pandas.Period.ordinal": "doc",
    "pandas.Period.quarter": "doc",
    "pandas.Period.weekday": "doc",
    "pandas.Period.end_time": "doc",
    "pandas.Period.strftime": "doc",
    "pandas.Period.dayofweek": "doc",
    "pandas.Period.dayofyear": "doc",
    "pandas.Period.daysinmonth": "doc",
    "pandas.Period.days_in_month": "doc",
    "pandas.io.formats.style.Styler.set_properties": "doc",
    "pandas.SparseDtype": "doc",
    "pandas.DataFrame.reset_index": "doc",
    "pandas.core.groupby.GroupBy.pct_change": "doc",
    "pandas.io.formats.style.Styler.set_na_rep": "doc",
    "pandas.core.groupby.DataFrameGroupBy.pct_change": "doc",
    "pandas.Index.where": "doc",
    "pandas.DataFrame.where": "doc",
    "pandas.api.types.is_re": "doc",
    "pandas.DataFrame.median": "doc",
    "pandas.Timestamp.quarter": "doc",
    "pandas.api.types.is_bool": "doc",
    "pandas.api.types.is_float": "doc",
    "pandas.DataFrame.plot.area": "doc",
    "pandas.api.types.is_number": "doc",
    "pandas.api.types.is_scalar": "doc",
    "pandas.api.types.is_complex": "doc",
    "pandas.api.types.is_integer": "doc",
    "pandas.api.types.infer_dtype": "doc",
    "pandas.api.types.is_iterator": "doc",
    "pandas.api.types.is_interval": "doc",
    "pandas.api.types.pandas_dtype": "doc",
    "pandas.api.types.is_dict_like": "doc",
    "pandas.api.types.is_file_like": "doc",
    "pandas.api.types.is_list_like": "doc",
    "pandas.io.formats.style.Styler": "doc",
    "pandas.api.types.is_bool_dtype": "doc",
    "pandas.core.window.ewm.EWM.mean": "doc",
    "pandas.api.types.is_float_dtype": "doc",
    "pandas.api.types.is_int64_dtype": "doc",
    "pandas.api.types.is_named_tuple": "doc",
    "pandas.api.types.is_categorical": "doc",
    "pandas.core.groupby.GroupBy.pipe": "doc",
    "pandas.core.groupby.GroupBy.head": "doc",
    "pandas.core.groupby.GroupBy.mean": "doc",
    "pandas.core.groupby.GroupBy.rank": "doc",
    "pandas.core.groupby.GroupBy.size": "doc",
    "pandas.api.types.is_object_dtype": "doc",
    "pandas.api.types.is_period_dtype": "doc",
    "pandas.api.types.is_string_dtype": "doc",
    "pandas.api.types.is_complex_dtype": "doc",
    "pandas.api.types.is_integer_dtype": "doc",
    "pandas.api.types.is_numeric_dtype": "doc",
    "pandas.api.types.is_re_compilable": "doc",
    "pandas.core.groupby.GroupBy.median": "doc",
    "pandas.io.formats.style.Styler.env": "doc",
    "pandas.io.formats.style.Styler.bar": "doc",
    "pandas.io.formats.style.Styler.use": "doc",
    "pandas.api.types.is_extension_type": "doc",
    "pandas.api.types.is_interval_dtype": "doc",
    "pandas.io.formats.style.Styler.pipe": "doc",
    "pandas.api.types.union_categoricals": "doc",
    "pandas.io.formats.style.Styler.apply": "doc",
    "pandas.io.formats.style.Styler.where": "doc",
    "pandas.io.formats.style.Styler.clear": "doc",
    "pandas.api.types.is_datetime64_dtype": "doc",
    "pandas.io.formats.style.Styler.loader": "doc",
    "pandas.io.formats.style.Styler.format": "doc",
    "pandas.io.formats.style.Styler.render": "doc",
    "pandas.io.formats.style.Styler.export": "doc",
    "pandas.api.types.is_categorical_dtype": "doc",
    "pandas.api.types.is_timedelta64_dtype": "doc",
    "pandas.core.window.rolling.Window.mean": "doc",
    "pandas.api.types.is_datetime64tz_dtype": "doc",
    "pandas.core.window.rolling.Rolling.mean": "doc",
    "pandas.io.formats.style.Styler.applymap": "doc",
    "pandas.io.formats.style.Styler.set_uuid": "doc",
    "pandas.io.formats.style.Styler.to_excel": "doc",
    "pandas.api.types.is_datetime64_ns_dtype": "doc",
    "pandas.api.types.is_datetime64_any_dtype": "doc",
    "pandas.api.types.is_signed_integer_dtype": "doc",
    "pandas.api.types.is_timedelta64_ns_dtype": "doc",
    "pandas.core.window.rolling.Rolling.median": "doc",
    "pandas.core.groupby.DataFrameGroupBy.rank": "doc",
    "pandas.core.groupby.DataFrameGroupBy.size": "doc",
    "pandas.core.groupby.DataFrameGroupBy.take": "doc",
    "pandas.api.types.is_extension_array_dtype": "doc",
    "pandas.core.groupby.DataFrameGroupBy.shift": "doc",
    "pandas.io.formats.style.Styler.set_caption": "doc",
    "pandas.api.types.is_unsigned_integer_dtype": "doc",
    "pandas.core.window.expanding.Expanding.mean": "doc",
    "pandas.core.groupby.DataFrameGroupBy.tshift": "doc",
    "pandas.io.formats.style.Styler.set_precision": "doc",
    "pandas.io.formats.style.Styler.highlight_max": "doc",
    "pandas.io.formats.style.Styler.highlight_min": "doc",
    "pandas.core.window.expanding.Expanding.median": "doc",
    "pandas.io.formats.style.Styler.highlight_null": "doc",
    "pandas.io.formats.style.Styler.set_table_styles": "doc",
    "pandas.io.formats.style.Styler.background_gradient": "doc",
    "pandas.io.formats.style.Styler.from_custom_template": "doc",
    "pandas.io.formats.style.Styler.set_table_attributes": "doc",
    "pandas.PeriodIndex.is_leap_year": "doc",
    "pandas.PeriodIndex.to_timestamp": "doc",
    "pandas.Timestamp.is_year_end": "doc",
    "pandas.read_stata": "doc",
    "pandas.merge_asof": "doc",
    "pandas.DataFrame.iterrows": "doc",
    "pandas.DataFrame.nlargest": "doc",
    "pandas.Index.repeat": "doc",
    "pandas.Index.astype": "doc",
    "pandas.DataFrame.astype": "doc",
    "pandas.api.extensions.ExtensionDtype": "doc",
    "pandas.api.extensions.ExtensionArray": "doc",
    "pandas.api.extensions.register_index_accessor": "doc",
    "pandas.api.extensions.register_extension_dtype": "doc",
    "pandas.api.extensions.register_series_accessor": "doc",
    "pandas.api.extensions.register_dataframe_accessor": "doc",
    "pandas.read_parquet": "doc",
    "pandas.Timestamp.strftime": "doc",
    "pandas.Timestamp.strptime": "doc",
    "pandas.Timestamp.utcfromtimestamp": "doc",
    "pandas.core.groupby.GroupBy.indices": "doc",
    "pandas.Index.reindex": "doc",
    "pandas.DataFrame.reindex": "doc",
    "pandas.plotting.andrews_curves": "doc",
    "pandas.DataFrame.sparse.density": "doc",
    "pandas.testing.assert_frame_equal": "doc",
    "pandas.testing.assert_index_equal": "doc",
    "pandas.testing.assert_series_equal": "doc",
    "pandas.CategoricalIndex.set_categories": "doc",
    "pandas.testing.assert_extension_array_equal": "doc",
    "pandas.read_table": "doc",
    "pandas.IntervalIndex.values": "doc",
    "pandas.errors.ParserWarning": "doc",
    "pandas.Timestamp.fromtimestamp": "doc",
    "pandas.Timestamp.to_datetime64": "doc",
    "pandas.PeriodIndex.start_time": "doc",
    "pandas.PeriodIndex.weekofyear": "doc",
    "pandas.Categorical.dtype": "doc",
    "pandas.io.stata.StataReader.data_label": "doc",
    "pandas.io.stata.StataReader.value_labels": "doc",
    "pandas.io.stata.StataReader.variable_labels": "doc",
    "pandas.read_spss": "doc",
    "pandas.DataFrame.axes": "doc",
    "pandas.DataFrame.keys": "doc",
    "pandas.ExcelFile.parse": "doc",
    "pandas.DataFrame.dtypes": "doc",
    "pandas.DataFrame.values": "doc",
    "pandas.DataFrame.plot.pie": "doc",
    "pandas.DataFrame.set_index": "doc",
    "pandas.DataFrame.to_period": "doc",
    "pandas.Timestamp.normalize": "doc",
    "pandas.Timestamp.toordinal": "doc",
    "pandas.MultiIndex.set_codes": "doc",
    "pandas.core.groupby.GroupBy.transform": "doc",
    "pandas.TimedeltaIndex.ceil": "doc",
    "pandas.Timestamp.is_quarter_end": "doc",
    "pandas.read_pickle": "doc",
    "pandas.ExcelWriter": "doc",
    "pandas.get_dummies": "doc",
    "pandas.PeriodDtype": "doc",
    "pandas.StringDtype": "doc",
    "pandas.PeriodIndex": "doc",
    "pandas.PeriodIndex.day": "doc",
    "pandas.PeriodIndex.freq": "doc",
    "pandas.PeriodIndex.hour": "doc",
    "pandas.PeriodIndex.week": "doc",
    "pandas.Index.sort_values": "doc",
    "pandas.PeriodIndex.month": "doc",
    "pandas.PeriodIndex.qyear": "doc",
    "pandas.PeriodIndex.minute": "doc",
    "pandas.PeriodIndex.second": "doc",
    "pandas.PeriodIndex.asfreq": "doc",
    "pandas.PeriodIndex.freqstr": "doc",
    "pandas.PeriodIndex.quarter": "doc",
    "pandas.PeriodIndex.weekday": "doc",
    "pandas.PeriodIndex.end_time": "doc",
    "pandas.PeriodIndex.strftime": "doc",
    "pandas.DataFrame.rename_axis": "doc",
    "pandas.DataFrame.sort_values": "doc",
    "pandas.PeriodIndex.dayofweek": "doc",
    "pandas.PeriodIndex.dayofyear": "doc",
    "pandas.PeriodIndex.daysinmonth": "doc",
    "pandas.PeriodIndex.days_in_month": "doc",
    "pandas.CategoricalIndex.add_categories": "doc",
    "pandas.DataFrame.truncate": "doc",
    "pandas.Index.inferred_type": "doc",
    "pandas.Interval.right": "doc",
    "pandas.CategoricalIndex.map": "doc",
    "pandas.CategoricalIndex.equals": "doc",
    "pandas.CategoricalDtype.ordered": "doc",
    "pandas.api.indexers.BaseIndexer": "doc",
    "pandas.DataFrame.sparse.to_dense": "doc",
    "pandas.api.indexers.check_array_indexer": "doc",
    "pandas.Timestamp.resolution": "doc",
    "pandas.Timestamp.weekofyear": "doc",
    "pandas.Timestamp.astimezone": "doc",
    "pandas.DatetimeIndex.month_name": "doc",
    "pandas.DataFrame.infer_objects": "doc",
    "pandas.CategoricalIndex.rename_categories": "doc",
    "pandas.CategoricalIndex.remove_categories": "doc",
    "pandas.read_sql_table": "doc",
    "pandas.DataFrame.sort_index": "doc",
    "pandas.CategoricalIndex.codes": "doc",
    "pandas.Timestamp.is_quarter_start": "doc",
    "pandas.core.groupby.DataFrameGroupBy.all": "doc",
    "pandas.core.groupby.DataFrameGroupBy.any": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cov": "doc",
    "pandas.core.groupby.DataFrameGroupBy.mad": "doc",
    "pandas.core.groupby.DataFrameGroupBy.corr": "doc",
    "pandas.core.groupby.DataFrameGroupBy.diff": "doc",
    "pandas.core.groupby.DataFrameGroupBy.hist": "doc",
    "pandas.core.groupby.DataFrameGroupBy.plot": "doc",
    "pandas.core.groupby.DataFrameGroupBy.skew": "doc",
    "pandas.core.groupby.DataFrameGroupBy.bfill": "doc",
    "pandas.core.groupby.DataFrameGroupBy.count": "doc",
    "pandas.core.groupby.DataFrameGroupBy.ffill": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cummax": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cummin": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cumsum": "doc",
    "pandas.core.groupby.DataFrameGroupBy.fillna": "doc",
    "pandas.core.groupby.DataFrameGroupBy.filter": "doc",
    "pandas.core.groupby.DataFrameGroupBy.idxmax": "doc",
    "pandas.core.groupby.DataFrameGroupBy.idxmin": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cumprod": "doc",
    "pandas.core.groupby.DataFrameGroupBy.nunique": "doc",
    "pandas.core.groupby.DataFrameGroupBy.boxplot": "doc",
    "pandas.core.groupby.DataFrameGroupBy.quantile": "doc",
    "pandas.core.groupby.DataFrameGroupBy.corrwith": "doc",
    "pandas.DatetimeIndex.year": "doc",
    "pandas.DatetimeIndex.date": "doc",
    "pandas.DatetimeIndex.mean": "doc",
    "pandas.IntervalIndex.right": "doc",
    "pandas.arrays.SparseArray": "doc",
    "pandas.errors.ParserError": "doc",
    "pandas.Timestamp.microsecond": "doc",
    "pandas.Timestamp.fromordinal": "doc",
    "pandas.DataFrame.plot.density": "doc",
    "pandas.DataFrame.convert_dtypes": "doc",
    "pandas.DataFrame.reorder_levels": "doc",
    "pandas.IntervalIndex.from_tuples": "doc",
    "pandas.IntervalIndex.get_indexer": "doc",
    "pandas.read_csv": "doc",
    "pandas.read_sas": "doc",
    "pandas.read_sql": "doc",
    "pandas.read_html": "doc",
    "pandas.Timestamp": "doc",
    "pandas.read_excel": "doc",
    "pandas.date_range": "doc",
    "pandas.infer_freq": "doc",
    "pandas.read_feather": "doc",
    "pandas.period_range": "doc",
    "pandas.Timestamp.tz": "doc",
    "pandas.reset_option": "doc",
    "pandas.Timestamp.day": "doc",
    "pandas.Timestamp.max": "doc",
    "pandas.Timestamp.min": "doc",
    "pandas.Timestamp.dst": "doc",
    "pandas.Timestamp.now": "doc",
    "pandas.Timestamp.asm8": "doc",
    "pandas.Timestamp.fold": "doc",
    "pandas.Timestamp.hour": "doc",
    "pandas.Timestamp.year": "doc",
    "pandas.Timestamp.date": "doc",
    "pandas.Timestamp.time": "doc",
    "pandas.Timestamp.month": "doc",
    "pandas.Timestamp.value": "doc",
    "pandas.Timestamp.ctime": "doc",
    "pandas.Timestamp.floor": "doc",
    "pandas.Timestamp.round": "doc",
    "pandas.Timestamp.today": "doc",
    "pandas.Index.get_value": "doc",
    "pandas.Timestamp.minute": "doc",
    "pandas.Timestamp.second": "doc",
    "pandas.Timestamp.tzinfo": "doc",
    "pandas.Timestamp.timetz": "doc",
    "pandas.Timestamp.tzname": "doc",
    "pandas.Timestamp.utcnow": "doc",
    "pandas.Timestamp.combine": "doc",
    "pandas.Timestamp.freqstr": "doc",
    "pandas.Timestamp.weekday": "doc",
    "pandas.DataFrame.set_axis": "doc",
    "pandas.DataFrame.swapaxes": "doc",
    "pandas.Timestamp.day_name": "doc",
    "pandas.Timestamp.to_numpy": "doc",
    "pandas.Index.memory_usage": "doc",
    "pandas.Index.searchsorted": "doc",
    "pandas.DataFrame.aggregate": "doc",
    "pandas.DataFrame.transpose": "doc",
    "pandas.Timestamp.dayofweek": "doc",
    "pandas.Timestamp.dayofyear": "doc",
    "pandas.Timestamp.isoformat": "doc",
    "pandas.Timestamp.timestamp": "doc",
    "pandas.Timestamp.timetuple": "doc",
    "pandas.Timestamp.utcoffset": "doc",
    "pandas.Timestamp.nanosecond": "doc",
    "pandas.Timestamp.isoweekday": "doc",
    "pandas.Timestamp.month_name": "doc",
    "pandas.Timestamp.tz_convert": "doc",
    "pandas.Timedelta.resolution": "doc",
    "pandas.Timestamp.daysinmonth": "doc",
    "pandas.Timestamp.isocalendar": "doc",
    "pandas.Timestamp.tz_localize": "doc",
    "pandas.RangeIndex.from_range": "doc",
    "pandas.MultiIndex.from_frame": "doc",
    "pandas.MultiIndex.set_levels": "doc",
    "pandas.DataFrame.memory_usage": "doc",
    "pandas.DataFrame.to_timestamp": "doc",
    "pandas.Timestamp.is_leap_year": "doc",
    "pandas.Timestamp.is_month_end": "doc",
    "pandas.Timestamp.utctimetuple": "doc",
    "pandas.TimedeltaIndex.seconds": "doc",
    "pandas.Timestamp.days_in_month": "doc",
    "pandas.Timestamp.is_year_start": "doc",
    "pandas.Timestamp.to_pydatetime": "doc",
    "pandas.MultiIndex.is_lexsorted": "doc",
    "pandas.Timestamp.is_month_start": "doc",
    "pandas.Timestamp.to_julian_date": "doc",
    "pandas.MultiIndex.reorder_levels": "doc",
    "pandas.errors.PerformanceWarning": "doc",
    "pandas.errors.UnsortedIndexError": "doc",
    "pandas.CategoricalIndex.reorder_categories": "doc",
    "pandas.errors.OutOfBoundsDatetime": "doc",
    "pandas.DatetimeIndex.week": "doc",
    "pandas.DatetimeIndex.freq": "doc",
    "pandas.DatetimeIndex.ceil": "doc",
    "pandas.arrays.IntervalArray": "doc",
    "pandas.DatetimeIndex.to_period": "doc",
    "pandas.RangeIndex.stop": "doc",
    "pandas.RangeIndex.step": "doc",
    "pandas.RangeIndex.start": "doc",
    "pandas.IntervalIndex.contains": "doc",
    "pandas.DatetimeIndex.day_name": "doc",
    "pandas.DatetimeIndex.to_frame": "doc",
    "pandas.DatetimeIndex.is_leap_year": "doc",
    "pandas.DatetimeIndex.is_quarter_start": "doc",
    "pandas.Index.view": "doc",
    "pandas.Index.names": "doc",
    "pandas.Index.values": "doc",
    "pandas.Index.nbytes": "doc",
    "pandas.HDFStore.keys": "doc",
    "pandas.Timedelta.freq": "doc",
    "pandas.Timedelta.view": "doc",
    "pandas.Timedelta.ceil": "doc",
    "pandas.MultiIndex.names": "doc",
    "pandas.MultiIndex.codes": "doc",
    "pandas.Categorical.codes": "doc",
    "pandas.MultiIndex.levels": "doc",
    "pandas.arrays.PeriodArray": "doc",
    "pandas.arrays.StringArray": "doc",
    "pandas.arrays.PandasArray": "doc",
    "pandas.arrays.IntegerArray": "doc",
    "pandas.arrays.BooleanArray": "doc",
    "pandas.errors.DtypeWarning": "doc",
    "pandas.arrays.DatetimeArray": "doc",
    "pandas.arrays.TimedeltaArray": "doc",
    "pandas.errors.EmptyDataError": "doc",
    "pandas.core.window.ewm.EWM.std": "doc",
    "pandas.core.window.ewm.EWM.var": "doc",
    "pandas.core.window.ewm.EWM.cov": "doc",
    "pandas.core.window.ewm.EWM.corr": "doc",
    "pandas.core.groupby.GroupBy.agg": "doc",
    "pandas.core.groupby.GroupBy.all": "doc",
    "pandas.core.groupby.GroupBy.any": "doc",
    "pandas.core.groupby.GroupBy.max": "doc",
    "pandas.core.groupby.GroupBy.min": "doc",
    "pandas.core.groupby.GroupBy.nth": "doc",
    "pandas.core.groupby.GroupBy.sem": "doc",
    "pandas.core.groupby.GroupBy.std": "doc",
    "pandas.core.groupby.GroupBy.sum": "doc",
    "pandas.core.groupby.GroupBy.var": "doc",
    "pandas.core.groupby.GroupBy.last": "doc",
    "pandas.core.groupby.GroupBy.ohlc": "doc",
    "pandas.core.groupby.GroupBy.prod": "doc",
    "pandas.core.groupby.GroupBy.tail": "doc",
    "pandas.core.groupby.GroupBy.apply": "doc",
    "pandas.core.groupby.GroupBy.bfill": "doc",
    "pandas.core.groupby.GroupBy.count": "doc",
    "pandas.core.groupby.GroupBy.ffill": "doc",
    "pandas.core.groupby.GroupBy.first": "doc",
    "pandas.core.groupby.GroupBy.groups": "doc",
    "pandas.core.groupby.GroupBy.cummax": "doc",
    "pandas.core.groupby.GroupBy.cummin": "doc",
    "pandas.core.groupby.GroupBy.cumsum": "doc",
    "pandas.core.groupby.GroupBy.ngroup": "doc",
    "pandas.core.groupby.GroupBy.cumprod": "doc",
    "pandas.core.groupby.GroupBy.__iter__": "doc",
    "pandas.core.groupby.GroupBy.cumcount": "doc",
    "pandas.core.window.rolling.Window.sum": "doc",
    "pandas.core.window.rolling.Window.var": "doc",
    "pandas.core.window.rolling.Window.std": "doc",
    "pandas.core.groupby.GroupBy.get_group": "doc",
    "pandas.errors.UnsupportedFunctionCall": "doc",
    "pandas.core.window.rolling.Rolling.sum": "doc",
    "pandas.core.window.rolling.Rolling.var": "doc",
    "pandas.core.window.rolling.Rolling.std": "doc",
    "pandas.core.window.rolling.Rolling.min": "doc",
    "pandas.core.window.rolling.Rolling.max": "doc",
    "pandas.core.window.rolling.Rolling.cov": "doc",
    "pandas.core.window.rolling.Rolling.corr": "doc",
    "pandas.core.window.rolling.Rolling.skew": "doc",
    "pandas.core.window.rolling.Rolling.kurt": "doc",
    "pandas.core.window.rolling.Rolling.count": "doc",
    "pandas.core.window.rolling.Rolling.apply": "doc",
    "pandas.core.window.expanding.Expanding.sum": "doc",
    "pandas.core.window.expanding.Expanding.var": "doc",
    "pandas.core.window.expanding.Expanding.std": "doc",
    "pandas.core.window.expanding.Expanding.min": "doc",
    "pandas.core.window.expanding.Expanding.max": "doc",
    "pandas.core.window.expanding.Expanding.cov": "doc",
    "pandas.core.window.rolling.Rolling.quantile": "doc",
    "pandas.core.window.expanding.Expanding.corr": "doc",
    "pandas.core.window.expanding.Expanding.skew": "doc",
    "pandas.core.window.expanding.Expanding.kurt": "doc",
    "pandas.core.window.expanding.Expanding.count": "doc",
    "pandas.core.window.expanding.Expanding.apply": "doc",
    "pandas.core.window.expanding.Expanding.quantile": "doc",
    "pandas.IntervalDtype": "doc",
    "pandas.CategoricalIndex.ordered": "doc",
    "pandas.Categorical.from_codes": "doc",
    "pandas.MultiIndex.from_tuples": "doc",
    "pandas.DataFrame.rtruediv": "doc",
    "pandas.DataFrame.corrwith": "doc",
    "pandas.DataFrame.kurtosis": "doc",
    "pandas.DataFrame.to_excel": "doc",
    "pandas.util.hash_array": "doc",
    "pandas.describe_option": "doc",
    "pandas.DataFrame.pct_change": "doc",
    "pandas.TimedeltaIndex.microseconds": "doc",
    "pandas.merge_ordered": "doc",
    "pandas.IntervalIndex": "doc",
    "pandas.IntervalIndex.mid": "doc",
    "pandas.IntervalIndex.left": "doc",
    "pandas.IntervalIndex.closed": "doc",
    "pandas.IntervalIndex.length": "doc",
    "pandas.IntervalIndex.get_loc": "doc",
    "pandas.IntervalIndex.is_empty": "doc",
    "pandas.DataFrame.select_dtypes": "doc",
    "pandas.IntervalIndex.to_tuples": "doc",
    "pandas.IntervalIndex.set_closed": "doc",
    "pandas.IntervalIndex.from_arrays": "doc",
    "pandas.IntervalIndex.from_breaks": "doc",
    "pandas.DatetimeIndex.is_year_start": "doc",
    "pandas.DatetimeIndex.inferred_freq": "doc",
    "pandas.IntervalIndex.is_overlapping": "doc",
    "pandas.TimedeltaIndex.inferred_freq": "doc",
    "pandas.IntervalIndex.is_non_overlapping_monotonic": "doc",
    "pandas.CategoricalIndex.remove_unused_categories": "doc",
    "pandas.bdate_range": "doc",
    "pandas.Index.get_indexer": "doc",
    "pandas.DataFrame.interpolate": "doc",
    "pandas.DataFrame.slice_shift": "doc",
    "pandas.MultiIndex.get_indexer": "doc",
    "pandas.DatetimeIndex.is_year_end": "doc",
    "pandas.DataFrame.combine_first": "doc",
    "pandas.DatetimeIndex.normalize": "doc",
    "pandas.isna": "doc",
    "pandas.eval": "doc",
    "pandas.test": "doc",
    "pandas.Index.map": "doc",
    "pandas.Index.name": "doc",
    "pandas.Index.size": "doc",
    "pandas.Index.take": "doc",
    "pandas.Index.isna": "doc",
    "pandas.Index.dtype": "doc",
    "pandas.Index.ravel": "doc",
    "pandas.Index.shift": "doc",
    "pandas.Index.delete": "doc",
    "pandas.Index.equals": "doc",
    "pandas.Index.hasnans": "doc",
    "pandas.read_sql_query": "doc",
    "pandas.DataFrame.size": "doc",
    "pandas.DataFrame.isna": "doc",
    "pandas.DataFrame.head": "doc",
    "pandas.DataFrame.radd": "doc",
    "pandas.DataFrame.rsub": "doc",
    "pandas.DataFrame.pipe": "doc",
    "pandas.DataFrame.eval": "doc",
    "pandas.DataFrame.mean": "doc",
    "pandas.DataFrame.rank": "doc",
    "pandas.DataFrame.take": "doc",
    "pandas.DataFrame.stack": "doc",
    "pandas.DataFrame.shift": "doc",
    "pandas.DataFrame.style": "doc",
    "pandas.Timedelta.delta": "doc",
    "pandas.DataFrame.equals": "doc",
    "pandas.DataFrame.sample": "doc",
    "pandas.DataFrame.update": "doc",
    "pandas.DataFrame.tshift": "doc",
    "pandas.DataFrame.unstack": "doc",
    "pandas.TimedeltaIndex.mean": "doc",
    "pandas.DataFrame.sparse.to_coo": "doc",
    "pandas.DataFrame.sparse.from_spmatrix": "doc",
    "pandas.MultiIndex.to_frame": "doc",
    "pandas.plotting.parallel_coordinates": "doc",
    "pandas.read_json": "doc",
    "pandas.Index.droplevel": "doc",
    "pandas.DataFrame.droplevel": "doc",
    "pandas.DataFrame.nsmallest": "doc",
    "pandas.DataFrame.to_string": "doc",
    "pandas.MultiIndex.droplevel": "doc",
    "pandas.Interval.open_right": "doc",
    "pandas.DatetimeIndex.quarter": "doc",
    "pandas.DatetimeIndex.to_perioddelta": "doc",
    "pandas.CategoricalDtype": "doc",
    "pandas.CategoricalIndex": "doc",
    "pandas.CategoricalIndex.as_ordered": "doc",
    "pandas.CategoricalIndex.as_unordered": "doc",
    "pandas.Interval.closed_left": "doc",
    "pandas.DatetimeIndex.weekofyear": "doc",
    "pandas.DatetimeIndex.indexer_at_time": "doc",
    "pandas.Timedelta.seconds": "doc",
    "pandas.MultiIndex.nlevels": "doc",
    "pandas.Categorical.ordered": "doc",
    "pandas.Index.has_duplicates": "doc",
    "pandas.DataFrame.add_prefix": "doc",
    "pandas.DataFrame.duplicated": "doc",
    "pandas.DataFrame.to_parquet": "doc",
    "pandas.DataFrame.to_feather": "doc",
    "pandas.DataFrame.to_records": "doc",
    "pandas.MultiIndex.swaplevel": "doc",
    "pandas.DataFrame.drop_duplicates": "doc",
    "pandas.read_fwf": "doc",
    "pandas.read_hdf": "doc",
    "pandas.read_orc": "doc",
    "pandas.read_gbq": "doc",
    "pandas.crosstab": "doc",
    "pandas.BooleanDtype": "doc",
    "pandas.Index.to_frame": "doc",
    "pandas.DataFrame.to_latex": "doc",
    "pandas.DataFrame.to_stata": "doc",
    "pandas.Index.intersection": "doc",
    "pandas.DataFrame.reindex_like": "doc",
    "pandas.Timedelta.microseconds": "doc",
    "pandas.TimedeltaIndex.to_frame": "doc",
    "pandas.Categorical": "doc",
    "pandas.Categorical.__array__": "doc",
    "pandas.TimedeltaIndex.components": "doc",
    "pandas.DatetimeIndex.microsecond": "doc",
    "pandas.DatetimeIndex.tz_localize": "doc",
    "pandas.DatetimeIndex.strftime": "doc",
    "pandas.IndexSlice": "doc",
    "pandas.get_option": "doc",
    "pandas.set_option": "doc",
    "pandas.DatetimeTZDtype": "doc",
    "pandas.Index.duplicated": "doc",
    "pandas.Index.difference": "doc",
    "pandas.Index.drop_duplicates": "doc",
    "pandas.Index.to_native_types": "doc",
    "pandas.Index.get_slice_bound": "doc",
    "pandas.MultiIndex.remove_unused_levels": "doc",
    "pandas.DataFrame.first_valid_index": "doc",
    "pandas.TimedeltaIndex.nanoseconds": "doc",
    "pandas.Interval": "doc",
    "pandas.Interval.mid": "doc",
    "pandas.Interval.left": "doc",
    "pandas.Index.is_mixed": "doc",
    "pandas.Interval.closed": "doc",
    "pandas.Interval.length": "doc",
    "pandas.Interval.is_empty": "doc",
    "pandas.Interval.open_left": "doc",
    "pandas.MultiIndex.get_locs": "doc",
    "pandas.Interval.closed_right": "doc",
    "pandas.DataFrame": "doc",
    "pandas.Int8Dtype": "doc",
    "pandas.DataFrame.T": "doc",
    "pandas.DataFrame.at": "doc",
    "pandas.DataFrame.xs": "doc",
    "pandas.DataFrame.lt": "doc",
    "pandas.DataFrame.gt": "doc",
    "pandas.DataFrame.le": "doc",
    "pandas.DataFrame.ge": "doc",
    "pandas.DataFrame.ne": "doc",
    "pandas.DataFrame.eq": "doc",
    "pandas.DataFrame.iat": "doc",
    "pandas.DataFrame.loc": "doc",
    "pandas.DataFrame.pop": "doc",
    "pandas.DataFrame.get": "doc",
    "pandas.DataFrame.add": "doc",
    "pandas.DataFrame.sub": "doc",
    "pandas.DataFrame.mul": "doc",
    "pandas.DataFrame.div": "doc",
    "pandas.DataFrame.mod": "doc",
    "pandas.DataFrame.pow": "doc",
    "pandas.DataFrame.dot": "doc",
    "pandas.DataFrame.agg": "doc",
    "pandas.DataFrame.ewm": "doc",
    "pandas.DataFrame.abs": "doc",
    "pandas.DataFrame.all": "doc",
    "pandas.DataFrame.any": "doc",
    "pandas.DataFrame.cov": "doc",
    "pandas.DataFrame.mad": "doc",
    "pandas.DataFrame.max": "doc",
    "pandas.DataFrame.min": "doc",
    "pandas.DataFrame.sem": "doc",
    "pandas.DataFrame.sum": "doc",
    "pandas.DataFrame.std": "doc",
    "pandas.DataFrame.var": "doc",
    "pandas.DataFrame.ndim": "doc",
    "pandas.DataFrame.copy": "doc",
    "pandas.DataFrame.bool": "doc",
    "pandas.DataFrame.iloc": "doc",
    "pandas.DataFrame.tail": "doc",
    "pandas.DataFrame.isin": "doc",
    "pandas.DataFrame.mask": "doc",
    "pandas.DataFrame.rmul": "doc",
    "pandas.DataFrame.rdiv": "doc",
    "pandas.DataFrame.rmod": "doc",
    "pandas.DataFrame.rpow": "doc",
    "pandas.DataFrame.clip": "doc",
    "pandas.DataFrame.corr": "doc",
    "pandas.DataFrame.diff": "doc",
    "pandas.DataFrame.kurt": "doc",
    "pandas.DataFrame.mode": "doc",
    "pandas.DataFrame.prod": "doc",
    "pandas.DataFrame.skew": "doc",
    "pandas.DataFrame.drop": "doc",
    "pandas.DataFrame.last": "doc",
    "pandas.DataFrame.melt": "doc",
    "pandas.DataFrame.join": "doc",
    "pandas.DataFrame.asof": "doc",
    "pandas.DataFrame.plot": "doc",
    "pandas.DataFrame.hist": "doc",
    "pandas.DataFrame.info": "doc",
    "pandas.DataFrame.index": "doc",
    "pandas.DataFrame.empty": "doc",
    "pandas.DataFrame.notna": "doc",
    "pandas.DataFrame.items": "doc",
    "pandas.DataFrame.query": "doc",
    "pandas.DataFrame.apply": "doc",
    "pandas.DataFrame.count": "doc",
    "pandas.DataFrame.round": "doc",
    "pandas.DataFrame.align": "doc",
    "pandas.DataFrame.first": "doc",
    "pandas.DataFrame.pivot": "doc",
    "pandas.DataFrame.attrs": "doc",
    "pandas.DataFrame.insert": "doc",
    "pandas.DataFrame.lookup": "doc",
    "pandas.DataFrame.cummax": "doc",
    "pandas.DataFrame.cummin": "doc",
    "pandas.DataFrame.cumsum": "doc",
    "pandas.DataFrame.filter": "doc",
    "pandas.DataFrame.idxmax": "doc",
    "pandas.DataFrame.idxmin": "doc",
    "pandas.DataFrame.dropna": "doc",
    "pandas.DataFrame.fillna": "doc",
    "pandas.DataFrame.append": "doc",
    "pandas.DataFrame.assign": "doc",
    "pandas.DataFrame.asfreq": "doc",
    "pandas.DataFrame.to_csv": "doc",
    "pandas.DataFrame.to_hdf": "doc",
    "pandas.DataFrame.to_sql": "doc",
    "pandas.DataFrame.to_gbq": "doc",
    "pandas.DataFrame.columns": "doc",
    "pandas.DataFrame.truediv": "doc",
    "pandas.DataFrame.combine": "doc",
    "pandas.DataFrame.groupby": "doc",
    "pandas.DataFrame.rolling": "doc",
    "pandas.DataFrame.cumprod": "doc",
    "pandas.DataFrame.product": "doc",
    "pandas.DataFrame.nunique": "doc",
    "pandas.DataFrame.at_time": "doc",
    "pandas.DataFrame.explode": "doc",
    "pandas.DataFrame.squeeze": "doc",
    "pandas.DataFrame.boxplot": "doc",
    "pandas.DataFrame.to_dict": "doc",
    "pandas.DataFrame.to_json": "doc",
    "pandas.DataFrame.to_html": "doc",
    "pandas.DataFrame.__iter__": "doc",
    "pandas.DataFrame.floordiv": "doc",
    "pandas.DataFrame.applymap": "doc",
    "pandas.DataFrame.quantile": "doc",
    "pandas.DataFrame.plot.bar": "doc",
    "pandas.DataFrame.plot.box": "doc",
    "pandas.DataFrame.plot.kde": "doc",
    "pandas.DataFrame.rfloordiv": "doc",
    "pandas.DataFrame.transform": "doc",
    "pandas.DataFrame.expanding": "doc",
    "pandas.DataFrame.swaplevel": "doc",
    "pandas.DataFrame.to_xarray": "doc",
    "pandas.DataFrame.plot.barh": "doc",
    "pandas.DataFrame.plot.hist": "doc",
    "pandas.DataFrame.plot.line": "doc",
    "pandas.DataFrame.from_dict": "doc",
    "pandas.DataFrame.to_pickle": "doc",
    "pandas.DataFrame.add_suffix": "doc",
    "pandas.DataFrame.tz_convert": "doc",
    "pandas.DataFrame.pivot_table": "doc",
    "pandas.DataFrame.tz_localize": "doc",
    "pandas.DataFrame.plot.hexbin": "doc",
    "pandas.DataFrame.to_markdown": "doc",
    "pandas.DataFrame.between_time": "doc",
    "pandas.DataFrame.plot.scatter": "doc",
    "pandas.DataFrame.from_records": "doc",
    "pandas.DataFrame.to_clipboard": "doc",
    "pandas.util.hash_pandas_object": "doc",
    "pandas.DataFrame.last_valid_index": "doc",
    "pandas.MultiIndex.get_level_values": "doc",
    "pandas.DatetimeIndex": "doc",
    "pandas.DatetimeIndex.tz": "doc",
    "pandas.DatetimeIndex.day": "doc",
    "pandas.DatetimeIndex.hour": "doc",
    "pandas.DatetimeIndex.time": "doc",
    "pandas.Index.slice_indexer": "doc",
    "pandas.DatetimeIndex.month": "doc",
    "pandas.DatetimeIndex.round": "doc",
    "pandas.DatetimeIndex.floor": "doc",
    "pandas.DatetimeIndex.minute": "doc",
    "pandas.DatetimeIndex.second": "doc",
    "pandas.DatetimeIndex.timetz": "doc",
    "pandas.DatetimeIndex.weekday": "doc",
    "pandas.DatetimeIndex.freqstr": "doc",
    "pandas.DatetimeIndex.dayofyear": "doc",
    "pandas.DatetimeIndex.dayofweek": "doc",
    "pandas.DatetimeIndex.nanosecond": "doc",
    "pandas.DatetimeIndex.tz_convert": "doc",
    "pandas.DatetimeIndex.is_month_end": "doc",
    "pandas.DatetimeIndex.to_pydatetime": "doc",
    "pandas.DatetimeIndex.is_month_start": "doc",
    "pandas.DatetimeIndex.is_quarter_end": "doc",
    "pandas.DatetimeIndex.indexer_between_time": "doc",
    "pandas.MultiIndex.from_arrays": "doc",
    "pandas.read_clipboard": "doc",
    "pandas.interval_range": "doc",
    "pandas.TimedeltaIndex": "doc",
    "pandas.TimedeltaIndex.days": "doc",
    "pandas.TimedeltaIndex.round": "doc",
    "pandas.TimedeltaIndex.floor": "doc",
    "pandas.plotting.bootstrap_plot": "doc",
    "pandas.TimedeltaIndex.to_pytimedelta": "doc",
    "pandas.Index.get_level_values": "doc",
    "pandas.Int16Dtype": "doc",
    "pandas.Int32Dtype": "doc",
    "pandas.Int64Dtype": "doc",
    "pandas.UInt8Dtype": "doc",
    "pandas.timedelta_range": "doc",
    "pandas.plotting.register_matplotlib_converters": "doc",
    "pandas.factorize": "doc",
    "pandas.Index.factorize": "doc",
    "pandas.Index.identical": "doc",
    "pandas.MultiIndex.sortlevel": "doc",
    "pandas.to_datetime": "doc",
    "pandas.Index.is_categorical": "doc",
    "pandas.plotting.deregister_matplotlib_converters": "doc",
    "pandas.MultiIndex.to_flat_index": "doc",
    "pandas.MultiIndex.get_loc_level": "doc",
    "pandas.Index.symmetric_difference": "doc",
    "pandas.pivot_table": "doc",
    "pandas.UInt16Dtype": "doc",
    "pandas.UInt32Dtype": "doc",
    "pandas.UInt64Dtype": "doc",
    "pandas.to_numeric": "doc",
    "pandas.RangeIndex": "doc",
    "pandas.MultiIndex": "doc",
    "pandas.Index.is_integer": "doc",
    "pandas.Index.is_numeric": "doc",
    "pandas.Index.slice_locs": "doc",
    "pandas.MultiIndex.get_loc": "doc",
    "pandas.Timedelta.components": "doc",
    "pandas.Index.get_indexer_for": "doc",
    "pandas.MultiIndex.from_product": "doc",
    "pandas.Index.is_all_dates": "doc",
    "pandas.Timedelta.is_populated": "doc",
    "pandas.io.json.build_table_schema": "doc",
    "pandas.Index.is_interval": "doc",
    "pandas.plotting.plot_params": "doc",
    "pandas.Timedelta.nanoseconds": "doc",
    "pandas.plotting.autocorrelation_plot": "doc",
    "pandas.cut": "doc",
    "pandas.melt": "doc",
    "pandas.qcut": "doc",
    "pandas.pivot": "doc",
    "pandas.notna": "doc",
    "pandas.array": "doc",
    "pandas.Index": "doc",
    "pandas.concat": "doc",
    "pandas.unique": "doc",
    "pandas.isnull": "doc",
    "pandas.notnull": "doc",
    "pandas.Index.T": "doc",
    "pandas.Grouper": "doc",
    "pandas.plotting": "doc",
    "pandas.Timedelta": "doc",
    "pandas.Index.all": "doc",
    "pandas.Index.any": "doc",
    "pandas.Index.is_": "doc",
    "pandas.Index.min": "doc",
    "pandas.Index.max": "doc",
    "pandas.Index.ndim": "doc",
    "pandas.Index.copy": "doc",
    "pandas.Index.drop": "doc",
    "pandas.Index.item": "doc",
    "pandas.Index.join": "doc",
    "pandas.Index.asof": "doc",
    "pandas.Index.isin": "doc",
    "pandas.Int64Index": "doc",
    "pandas.Index.empty": "doc",
    "pandas.Index.notna": "doc",
    "pandas.Index.union": "doc",
    "pandas.UInt64Index": "doc",
    "pandas.HDFStore.put": "doc",
    "pandas.HDFStore.get": "doc",
    "pandas.wide_to_long": "doc",
    "pandas.to_timedelta": "doc",
    "pandas.Index.argmin": "doc",
    "pandas.Index.argmax": "doc",
    "pandas.Index.insert": "doc",
    "pandas.Index.unique": "doc",
    "pandas.Index.fillna": "doc",
    "pandas.Index.dropna": "doc",
    "pandas.Index.append": "doc",
    "pandas.Float64Index": "doc",
    "pandas.HDFStore.info": "doc",
    "pandas.HDFStore.walk": "doc",
    "pandas.Timedelta.max": "doc",
    "pandas.Timedelta.min": "doc",
    "pandas.Index.putmask": "doc",
    "pandas.Index.nunique": "doc",
    "pandas.Index.to_list": "doc",
    "pandas.Index.argsort": "doc",
    "pandas.Index.get_loc": "doc",
    "pandas.json_normalize": "doc",
    "pandas.Timedelta.asm8": "doc",
    "pandas.Timedelta.days": "doc",
    "pandas.plotting.table": "doc",
    "pandas.option_context": "doc",
    "pandas.HDFStore.append": "doc",
    "pandas.HDFStore.select": "doc",
    "pandas.HDFStore.groups": "doc",
    "pandas.Timedelta.value": "doc",
    "pandas.Timedelta.floor": "doc",
    "pandas.Timedelta.round": "doc",
    "pandas.Index.is_unique": "doc",
    "pandas.Index.is_object": "doc",
    "pandas.Index.asof_locs": "doc",
    "pandas.plotting.radviz": "doc",
    "pandas.Index.is_boolean": "doc",
    "pandas.plotting.boxplot": "doc",
    "pandas.Index.is_floating": "doc",
    "pandas.plotting.lag_plot": "doc",
    "pandas.Timedelta.to_numpy": "doc",
    "pandas.Index.is_monotonic": "doc",
    "pandas.Index.value_counts": "doc",
    "pandas.Timedelta.isoformat": "doc",
    "pandas.Timedelta.total_seconds": "doc",
    "pandas.plotting.scatter_matrix": "doc",
    "pandas.Timedelta.to_pytimedelta": "doc",
    "pandas.Timedelta.to_timedelta64": "doc",
    "pandas.Index.get_indexer_non_unique": "doc",
    "pandas.Index.is_monotonic_increasing": "doc",
    "pandas.Index.is_monotonic_decreasing": "doc",
    "pandas.Index.to_numpy": "doc"
  },
  "pandas.Series.as_matrix": {
    "pandas.Series.argmax": "doc",
    "pandas.Series.to_latex": "doc",
    "pandas.Series.str.strip": "doc",
    "pandas.Series.str.lstrip": "doc",
    "pandas.Series.str.rstrip": "doc",
    "pandas.Series.cat.add_categories": "doc",
    "pandas.Series.is_monotonic": "doc",
    "pandas.Series.add_prefix": "doc",
    "pandas.Series.add_suffix": "doc",
    "pandas.Series.cat.as_ordered": "doc",
    "pandas.Series.last_valid_index": "doc",
    "pandas.Series.dt.is_quarter_end": "doc",
    "pandas.Series.cat.set_categories": "doc",
    "pandas.Series.cat.rename_categories": "doc",
    "pandas.Series.max": "doc",
    "pandas.Series.attrs": "doc",
    "pandas.Series.astype": "doc",
    "pandas.Series.cummax": "doc",
    "pandas.Series.idxmax": "doc",
    "pandas.Series.argmin": "doc",
    "pandas.Series.asfreq": "doc",
    "pandas.Series.at_time": "doc",
    "pandas.Series.str.cat": "doc",
    "pandas.Series.str.get": "doc",
    "pandas.Series.str.len": "doc",
    "pandas.Series.str.pad": "doc",
    "pandas.Series.str.find": "doc",
    "pandas.Series.str.join": "doc",
    "pandas.Series.str.wrap": "doc",
    "pandas.Series.str.count": "doc",
    "pandas.Series.str.index": "doc",
    "pandas.Series.str.ljust": "doc",
    "pandas.Series.str.lower": "doc",
    "pandas.Series.str.match": "doc",
    "pandas.Series.str.rfind": "doc",
    "pandas.Series.str.rjust": "doc",
    "pandas.Series.str.slice": "doc",
    "pandas.Series.str.split": "doc",
    "pandas.Series.str.title": "doc",
    "pandas.Series.str.upper": "doc",
    "pandas.Series.str.zfill": "doc",
    "pandas.Series.to_xarray": "doc",
    "pandas.Series.to_string": "doc",
    "pandas.Series.str.center": "doc",
    "pandas.Series.str.decode": "doc",
    "pandas.Series.str.encode": "doc",
    "pandas.Series.str.repeat": "doc",
    "pandas.Series.str.rindex": "doc",
    "pandas.Series.str.rsplit": "doc",
    "pandas.Series.str.extract": "doc",
    "pandas.Series.str.findall": "doc",
    "pandas.Series.str.replace": "doc",
    "pandas.Series.str.isalnum": "doc",
    "pandas.Series.str.isalpha": "doc",
    "pandas.Series.str.isdigit": "doc",
    "pandas.Series.str.isspace": "doc",
    "pandas.Series.str.islower": "doc",
    "pandas.Series.str.isupper": "doc",
    "pandas.Series.str.istitle": "doc",
    "pandas.Series.str.casefold": "doc",
    "pandas.Series.str.contains": "doc",
    "pandas.Series.str.endswith": "doc",
    "pandas.Series.str.swapcase": "doc",
    "pandas.Series.str.normalize": "doc",
    "pandas.Series.str.partition": "doc",
    "pandas.Series.str.translate": "doc",
    "pandas.Series.str.isnumeric": "doc",
    "pandas.Series.str.isdecimal": "doc",
    "pandas.Series.sparse.to_coo": "doc",
    "pandas.Series.str.capitalize": "doc",
    "pandas.Series.str.extractall": "doc",
    "pandas.Series.str.rpartition": "doc",
    "pandas.Series.str.startswith": "doc",
    "pandas.Series.sparse.npoints": "doc",
    "pandas.Series.sparse.density": "doc",
    "pandas.Series.dt.is_month_end": "doc",
    "pandas.Series.str.get_dummies": "doc",
    "pandas.Series.sparse.from_coo": "doc",
    "pandas.Series.cat.as_unordered": "doc",
    "pandas.Series.sparse.sp_values": "doc",
    "pandas.Series.str.slice_replace": "doc",
    "pandas.Series.sparse.fill_value": "doc",
    "pandas.Series.dt.is_quarter_start": "doc",
    "pandas.Series.dt.is_year_start": "doc",
    "pandas.Series.dt.to_pydatetime": "doc",
    "pandas.Series.first_valid_index": "doc",
    "pandas.Series.cat.remove_categories": "doc",
    "pandas.Series.dt.is_month_start": "doc",
    "pandas.Series.cat.reorder_categories": "doc",
    "pandas.Series.to_markdown": "doc",
    "pandas.Series.dt.is_year_end": "doc",
    "pandas.Series.is_monotonic_increasing": "doc",
    "pandas.Series.is_monotonic_decreasing": "doc",
    "pandas.Series.to_timestamp": "doc",
    "pandas.Series.dt.is_leap_year": "doc",
    "pandas.Series.cat.remove_unused_categories": "doc",
    "pandas.Series.dt.days_in_month": "doc",
    "pandas.Series.at": "doc",
    "pandas.Series.iat": "doc",
    "pandas.Series.map": "doc",
    "pandas.Series.mad": "doc",
    "pandas.Series.min": "doc",
    "pandas.Series.sem": "doc",
    "pandas.Series.std": "doc",
    "pandas.Series.sum": "doc",
    "pandas.Series.var": "doc",
    "pandas.Series.isin": "doc",
    "pandas.Series.last": "doc",
    "pandas.Series.tail": "doc",
    "pandas.Series.mask": "doc",
    "pandas.Series.isna": "doc",
    "pandas.Series.asof": "doc",
    "pandas.Series.array": "doc",
    "pandas.Series.shape": "doc",
    "pandas.Series.empty": "doc",
    "pandas.Series.shift": "doc",
    "pandas.Series.cummin": "doc",
    "pandas.Series.idxmin": "doc",
    "pandas.Series.sample": "doc",
    "pandas.Series.repeat": "doc",
    "pandas.Series.update": "doc",
    "pandas.Series.tshift": "doc",
    "pandas.Series.hasnans": "doc",
    "pandas.Series.cumprod": "doc",
    "pandas.Series.argsort": "doc",
    "pandas.Series.dt.date": "doc",
    "pandas.Series.dt.year": "doc",
    "pandas.Series.__iter__": "doc",
    "pandas.Series.autocorr": "doc",
    "pandas.Series.set_axis": "doc",
    "pandas.Series.dt.qyear": "doc",
    "pandas.Series.plot.bar": "doc",
    "pandas.Series.to_frame": "doc",
    "pandas.Series.to_period": "doc",
    "pandas.Series.nsmallest": "doc",
    "pandas.Series.is_unique": "doc",
    "pandas.Series.dt.timetz": "doc",
    "pandas.Series.cat.codes": "doc",
    "pandas.Series.plot.area": "doc",
    "pandas.Series.plot.barh": "doc",
    "pandas.Series.dt.quarter": "doc",
    "pandas.Series.dt.strftime": "doc",
    "pandas.Series.dt.day_name": "doc",
    "pandas.Series.cat.ordered": "doc",
    "pandas.Series.dt.to_period": "doc",
    "pandas.Series.dt.normalize": "doc",
    "pandas.Series.cat.categories": "doc",
    "pandas.Series.sort_index": "doc",
    "pandas.Series.dt.start_time": "doc",
    "pandas.Series.rename_axis": "doc",
    "pandas.Series.reset_index": "doc",
    "pandas.Series.sort_values": "doc",
    "pandas.Series.tz_localize": "doc",
    "pandas.Series.dt.daysinmonth": "doc",
    "pandas.Series.dt.tz_localize": "doc",
    "pandas.Series.value_counts": "doc",
    "pandas.Series.searchsorted": "doc",
    "pandas.Series.combine_first": "doc",
    "pandas.Series.dt.total_seconds": "doc",
    "pandas.Series.dt.to_pytimedelta": "doc",
    "pandas.Series.drop_duplicates": "doc",
    "pandas.Series": "doc",
    "pandas.Series.T": "doc",
    "pandas.Series.xs": "doc",
    "pandas.Series.lt": "doc",
    "pandas.Series.gt": "doc",
    "pandas.Series.le": "doc",
    "pandas.Series.ge": "doc",
    "pandas.Series.ne": "doc",
    "pandas.Series.eq": "doc",
    "pandas.Series.get": "doc",
    "pandas.Series.loc": "doc",
    "pandas.Series.pop": "doc",
    "pandas.Series.add": "doc",
    "pandas.Series.sub": "doc",
    "pandas.Series.mul": "doc",
    "pandas.Series.div": "doc",
    "pandas.Series.mod": "doc",
    "pandas.Series.pow": "doc",
    "pandas.Series.dot": "doc",
    "pandas.Series.agg": "doc",
    "pandas.Series.ewm": "doc",
    "pandas.Series.abs": "doc",
    "pandas.Series.all": "doc",
    "pandas.Series.any": "doc",
    "pandas.Series.cov": "doc",
    "pandas.Series.ndim": "doc",
    "pandas.Series.size": "doc",
    "pandas.Series.name": "doc",
    "pandas.Series.copy": "doc",
    "pandas.Series.bool": "doc",
    "pandas.Series.iloc": "doc",
    "pandas.Series.keys": "doc",
    "pandas.Series.item": "doc",
    "pandas.Series.radd": "doc",
    "pandas.Series.rsub": "doc",
    "pandas.Series.rmul": "doc",
    "pandas.Series.rdiv": "doc",
    "pandas.Series.rmod": "doc",
    "pandas.Series.rpow": "doc",
    "pandas.Series.pipe": "doc",
    "pandas.Series.clip": "doc",
    "pandas.Series.corr": "doc",
    "pandas.Series.diff": "doc",
    "pandas.Series.kurt": "doc",
    "pandas.Series.mean": "doc",
    "pandas.Series.mode": "doc",
    "pandas.Series.prod": "doc",
    "pandas.Series.rank": "doc",
    "pandas.Series.skew": "doc",
    "pandas.Series.drop": "doc",
    "pandas.Series.head": "doc",
    "pandas.Series.take": "doc",
    "pandas.Series.view": "doc",
    "pandas.Series.plot": "doc",
    "pandas.Series.hist": "doc",
    "pandas.Series.index": "doc",
    "pandas.Series.dtype": "doc",
    "pandas.Series.items": "doc",
    "pandas.Series.round": "doc",
    "pandas.Series.apply": "doc",
    "pandas.Series.count": "doc",
    "pandas.Series.align": "doc",
    "pandas.Series.first": "doc",
    "pandas.Series.where": "doc",
    "pandas.Series.notna": "doc",
    "pandas.Series.ravel": "doc",
    "pandas.Series.dt.tz": "doc",
    "pandas.Series.values": "doc",
    "pandas.Series.nbytes": "doc",
    "pandas.Series.dtypes": "doc",
    "pandas.Series.cumsum": "doc",
    "pandas.Series.median": "doc",
    "pandas.Series.unique": "doc",
    "pandas.Series.equals": "doc",
    "pandas.Series.rename": "doc",
    "pandas.Series.filter": "doc",
    "pandas.Series.dropna": "doc",
    "pandas.Series.fillna": "doc",
    "pandas.Series.append": "doc",
    "pandas.Series.dt.day": "doc",
    "pandas.Series.to_csv": "doc",
    "pandas.Series.to_hdf": "doc",
    "pandas.Series.to_sql": "doc",
    "pandas.Series.to_list": "doc",
    "pandas.Series.truediv": "doc",
    "pandas.Series.combine": "doc",
    "pandas.Series.product": "doc",
    "pandas.Series.groupby": "doc",
    "pandas.Series.rolling": "doc",
    "pandas.Series.between": "doc",
    "pandas.Series.nunique": "doc",
    "pandas.Series.reindex": "doc",
    "pandas.Series.unstack": "doc",
    "pandas.Series.explode": "doc",
    "pandas.Series.squeeze": "doc",
    "pandas.Series.replace": "doc",
    "pandas.Series.dt.time": "doc",
    "pandas.Series.dt.hour": "doc",
    "pandas.Series.dt.week": "doc",
    "pandas.Series.dt.freq": "doc",
    "pandas.Series.dt.ceil": "doc",
    "pandas.Series.dt.days": "doc",
    "pandas.Series.to_dict": "doc",
    "pandas.Series.to_json": "doc",
    "pandas.Series.to_numpy": "doc",
    "pandas.Series.floordiv": "doc",
    "pandas.Series.rtruediv": "doc",
    "pandas.Series.describe": "doc",
    "pandas.Series.nlargest": "doc",
    "pandas.Series.quantile": "doc",
    "pandas.Series.kurtosis": "doc",
    "pandas.Series.truncate": "doc",
    "pandas.Series.resample": "doc",
    "pandas.Series.dt.month": "doc",
    "pandas.Series.dt.round": "doc",
    "pandas.Series.dt.floor": "doc",
    "pandas.Series.plot.box": "doc",
    "pandas.Series.plot.kde": "doc",
    "pandas.Series.plot.pie": "doc",
    "pandas.Series.to_excel": "doc",
    "pandas.Series.__array__": "doc",
    "pandas.Series.iteritems": "doc",
    "pandas.Series.rfloordiv": "doc",
    "pandas.Series.aggregate": "doc",
    "pandas.Series.transform": "doc",
    "pandas.Series.expanding": "doc",
    "pandas.Series.factorize": "doc",
    "pandas.Series.droplevel": "doc",
    "pandas.Series.swaplevel": "doc",
    "pandas.Series.dt.minute": "doc",
    "pandas.Series.dt.second": "doc",
    "pandas.Series.plot.hist": "doc",
    "pandas.Series.plot.line": "doc",
    "pandas.Series.to_pickle": "doc",
    "pandas.Series.pct_change": "doc",
    "pandas.Series.duplicated": "doc",
    "pandas.Series.tz_convert": "doc",
    "pandas.Series.dt.weekday": "doc",
    "pandas.Series.dt.seconds": "doc",
    "pandas.Series.interpolate": "doc",
    "pandas.Series.slice_shift": "doc",
    "pandas.Series.dt.end_time": "doc",
    "pandas.Series.memory_usage": "doc",
    "pandas.Series.reindex_like": "doc",
    "pandas.Series.between_time": "doc",
    "pandas.Series.dt.dayofweek": "doc",
    "pandas.Series.dt.dayofyear": "doc",
    "pandas.Series.plot.density": "doc",
    "pandas.Series.to_clipboard": "doc",
    "pandas.Series.infer_objects": "doc",
    "pandas.Series.dt.nanosecond": "doc",
    "pandas.Series.dt.weekofyear": "doc",
    "pandas.Series.dt.tz_convert": "doc",
    "pandas.Series.dt.month_name": "doc",
    "pandas.Series.dt.components": "doc",
    "pandas.Series.convert_dtypes": "doc",
    "pandas.Series.reorder_levels": "doc",
    "pandas.Series.dt.microsecond": "doc",
    "pandas.Series.dt.nanoseconds": "doc",
    "pandas.Series.dt.microseconds": "doc",
    "pandas.tseries.offsets.Day.is_anchored": "doc",
    "pandas.tseries.offsets.Week.is_anchored": "doc",
    "pandas.tseries.offsets.Tick.is_anchored": "doc",
    "pandas.tseries.offsets.Hour.is_anchored": "doc",
    "pandas.tseries.offsets.Nano.is_anchored": "doc",
    "pandas.tseries.offsets.BDay.is_anchored": "doc",
    "pandas.tseries.offsets.CDay.is_anchored": "doc",
    "pandas.tseries.offsets.Milli.is_anchored": "doc",
    "pandas.tseries.offsets.Micro.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253.is_anchored": "doc",
    "pandas.tseries.offsets.Easter.is_anchored": "doc",
    "pandas.tseries.offsets.Minute.is_anchored": "doc",
    "pandas.tseries.offsets.Second.is_anchored": "doc",
    "pandas.tseries.offsets.YearEnd.is_anchored": "doc",
    "pandas.tseries.offsets.MonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BYearEnd.is_anchored": "doc",
    "pandas.tseries.offsets.YearBegin.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.DateOffset.is_anchored": "doc",
    "pandas.tseries.offsets.MonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterEnd.is_anchored": "doc",
    "pandas.tseries.offsets.YearOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BYearBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessDay.is_anchored": "doc",
    "pandas.tseries.offsets.MonthOffset.is_anchored": "doc",
    "pandas.tseries.offsets.WeekOfMonth.is_anchored": "doc",
    "pandas.tseries.offsets.BQuarterEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessHour.is_anchored": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BQuarterBegin.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.is_anchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.is_anchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.year_has_extra_week": "doc",
    "pandas.tseries.offsets.BQuarterBegin": "doc",
    "pandas.tseries.offsets.BQuarterBegin.kwds": "doc",
    "pandas.tseries.offsets.BQuarterBegin.name": "doc",
    "pandas.tseries.offsets.BQuarterBegin.copy": "doc",
    "pandas.tseries.offsets.BQuarterBegin.nanos": "doc",
    "pandas.tseries.offsets.BQuarterBegin.apply": "doc",
    "pandas.tseries.offsets.BQuarterBegin.freqstr": "doc",
    "pandas.tseries.offsets.BQuarterBegin.onOffset": "doc",
    "pandas.tseries.offsets.BQuarterBegin.__call__": "doc",
    "pandas.tseries.offsets.BQuarterBegin.normalize": "doc",
    "pandas.tseries.offsets.BQuarterBegin.rule_code": "doc",
    "pandas.tseries.offsets.BQuarterBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BQuarterBegin.apply_index": "doc",
    "pandas.tseries.offsets.BQuarterBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.Day": "doc",
    "pandas.tseries.offsets.Week": "doc",
    "pandas.tseries.offsets.Tick": "doc",
    "pandas.tseries.offsets.Hour": "doc",
    "pandas.tseries.offsets.Nano": "doc",
    "pandas.tseries.offsets.BDay": "doc",
    "pandas.tseries.offsets.CDay": "doc",
    "pandas.tseries.offsets.Milli": "doc",
    "pandas.tseries.offsets.Micro": "doc",
    "pandas.tseries.offsets.FY5253": "doc",
    "pandas.tseries.offsets.Easter": "doc",
    "pandas.tseries.offsets.Minute": "doc",
    "pandas.tseries.offsets.Second": "doc",
    "pandas.tseries.offsets.YearEnd": "doc",
    "pandas.tseries.offsets.MonthEnd": "doc",
    "pandas.tseries.offsets.BYearEnd": "doc",
    "pandas.tseries.offsets.Day.kwds": "doc",
    "pandas.tseries.offsets.Day.name": "doc",
    "pandas.tseries.offsets.Day.copy": "doc",
    "pandas.tseries.offsets.Week.kwds": "doc",
    "pandas.tseries.offsets.Week.name": "doc",
    "pandas.tseries.offsets.Week.copy": "doc",
    "pandas.tseries.offsets.YearBegin": "doc",
    "pandas.tseries.offsets.Tick.kwds": "doc",
    "pandas.tseries.offsets.Tick.name": "doc",
    "pandas.tseries.offsets.Tick.copy": "doc",
    "pandas.tseries.offsets.Day.delta": "doc",
    "pandas.tseries.offsets.Day.nanos": "doc",
    "pandas.tseries.offsets.Hour.kwds": "doc",
    "pandas.tseries.offsets.Hour.name": "doc",
    "pandas.tseries.offsets.Hour.copy": "doc",
    "pandas.tseries.offsets.Nano.kwds": "doc",
    "pandas.tseries.offsets.Nano.name": "doc",
    "pandas.tseries.offsets.Nano.copy": "doc",
    "pandas.tseries.offsets.BDay.base": "doc",
    "pandas.tseries.offsets.BDay.kwds": "doc",
    "pandas.tseries.offsets.BDay.name": "doc",
    "pandas.tseries.offsets.BDay.copy": "doc",
    "pandas.tseries.offsets.BMonthEnd": "doc",
    "pandas.tseries.offsets.CDay.base": "doc",
    "pandas.tseries.offsets.CDay.kwds": "doc",
    "pandas.tseries.offsets.CDay.name": "doc",
    "pandas.tseries.offsets.CDay.copy": "doc",
    "pandas.tseries.offsets.DateOffset": "doc",
    "pandas.tseries.offsets.MonthBegin": "doc",
    "pandas.tseries.offsets.Week.nanos": "doc",
    "pandas.tseries.offsets.Week.apply": "doc",
    "pandas.tseries.offsets.QuarterEnd": "doc",
    "pandas.tseries.offsets.YearOffset": "doc",
    "pandas.tseries.offsets.BYearBegin": "doc",
    "pandas.tseries.offsets.Tick.delta": "doc",
    "pandas.tseries.offsets.Tick.nanos": "doc",
    "pandas.tseries.offsets.Hour.delta": "doc",
    "pandas.tseries.offsets.Hour.nanos": "doc",
    "pandas.tseries.offsets.Milli.kwds": "doc",
    "pandas.tseries.offsets.Milli.name": "doc",
    "pandas.tseries.offsets.Milli.copy": "doc",
    "pandas.tseries.offsets.Micro.kwds": "doc",
    "pandas.tseries.offsets.Micro.name": "doc",
    "pandas.tseries.offsets.Micro.copy": "doc",
    "pandas.tseries.offsets.Nano.delta": "doc",
    "pandas.tseries.offsets.Nano.nanos": "doc",
    "pandas.tseries.offsets.BDay.nanos": "doc",
    "pandas.tseries.offsets.BDay.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd": "doc",
    "pandas.tseries.offsets.CDay.nanos": "doc",
    "pandas.tseries.offsets.CDay.apply": "doc",
    "pandas.tseries.offsets.BusinessDay": "doc",
    "pandas.tseries.offsets.MonthOffset": "doc",
    "pandas.tseries.offsets.WeekOfMonth": "doc",
    "pandas.tseries.offsets.BQuarterEnd": "doc",
    "pandas.tseries.offsets.FY5253.kwds": "doc",
    "pandas.tseries.offsets.FY5253.name": "doc",
    "pandas.tseries.offsets.FY5253.copy": "doc",
    "pandas.tseries.offsets.Easter.kwds": "doc",
    "pandas.tseries.offsets.Easter.name": "doc",
    "pandas.tseries.offsets.Easter.copy": "doc",
    "pandas.tseries.offsets.Day.freqstr": "doc",
    "pandas.tseries.offsets.Minute.kwds": "doc",
    "pandas.tseries.offsets.Minute.name": "doc",
    "pandas.tseries.offsets.Minute.copy": "doc",
    "pandas.tseries.offsets.Second.kwds": "doc",
    "pandas.tseries.offsets.Second.name": "doc",
    "pandas.tseries.offsets.Second.copy": "doc",
    "pandas.tseries.offsets.Milli.delta": "doc",
    "pandas.tseries.offsets.Milli.nanos": "doc",
    "pandas.tseries.offsets.Micro.delta": "doc",
    "pandas.tseries.offsets.Micro.nanos": "doc",
    "pandas.tseries.offsets.BDay.offset": "doc",
    "pandas.tseries.offsets.BMonthBegin": "doc",
    "pandas.tseries.offsets.CDay.offset": "doc",
    "pandas.tseries.offsets.BusinessHour": "doc",
    "pandas.tseries.offsets.SemiMonthEnd": "doc",
    "pandas.tseries.offsets.Week.freqstr": "doc",
    "pandas.tseries.offsets.QuarterBegin": "doc",
    "pandas.tseries.offsets.YearEnd.kwds": "doc",
    "pandas.tseries.offsets.YearEnd.name": "doc",
    "pandas.tseries.offsets.YearEnd.copy": "doc",
    "pandas.tseries.offsets.FY5253.nanos": "doc",
    "pandas.tseries.offsets.FY5253.apply": "doc",
    "pandas.tseries.offsets.Easter.nanos": "doc",
    "pandas.tseries.offsets.Easter.apply": "doc",
    "pandas.tseries.offsets.Tick.freqstr": "doc",
    "pandas.tseries.offsets.Day.onOffset": "doc",
    "pandas.tseries.offsets.Day.__call__": "doc",
    "pandas.tseries.offsets.Hour.freqstr": "doc",
    "pandas.tseries.offsets.Minute.delta": "doc",
    "pandas.tseries.offsets.Minute.nanos": "doc",
    "pandas.tseries.offsets.Second.delta": "doc",
    "pandas.tseries.offsets.Second.nanos": "doc",
    "pandas.tseries.offsets.Nano.freqstr": "doc",
    "pandas.tseries.offsets.BDay.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthBegin": "doc",
    "pandas.tseries.offsets.CDay.freqstr": "doc",
    "pandas.tseries.offsets.MonthEnd.kwds": "doc",
    "pandas.tseries.offsets.MonthEnd.name": "doc",
    "pandas.tseries.offsets.MonthEnd.copy": "doc",
    "pandas.tseries.offsets.Week.onOffset": "doc",
    "pandas.tseries.offsets.Week.__call__": "doc",
    "pandas.tseries.offsets.QuarterOffset": "doc",
    "pandas.tseries.offsets.BYearEnd.kwds": "doc",
    "pandas.tseries.offsets.BYearEnd.name": "doc",
    "pandas.tseries.offsets.BYearEnd.copy": "doc",
    "pandas.tseries.offsets.YearEnd.nanos": "doc",
    "pandas.tseries.offsets.YearEnd.apply": "doc",
    "pandas.tseries.offsets.FY5253Quarter": "doc",
    "pandas.tseries.offsets.Tick.onOffset": "doc",
    "pandas.tseries.offsets.Tick.__call__": "doc",
    "pandas.tseries.offsets.Day.normalize": "doc",
    "pandas.tseries.offsets.Day.rule_code": "doc",
    "pandas.tseries.offsets.Hour.onOffset": "doc",
    "pandas.tseries.offsets.Hour.__call__": "doc",
    "pandas.tseries.offsets.Milli.freqstr": "doc",
    "pandas.tseries.offsets.Micro.freqstr": "doc",
    "pandas.tseries.offsets.Nano.onOffset": "doc",
    "pandas.tseries.offsets.Nano.__call__": "doc",
    "pandas.tseries.offsets.BDay.onOffset": "doc",
    "pandas.tseries.offsets.BDay.rollback": "doc",
    "pandas.tseries.offsets.BDay.__call__": "doc",
    "pandas.tseries.offsets.CDay.onOffset": "doc",
    "pandas.tseries.offsets.CDay.rollback": "doc",
    "pandas.tseries.offsets.CDay.__call__": "doc",
    "pandas.tseries.offsets.MonthEnd.nanos": "doc",
    "pandas.tseries.offsets.MonthEnd.apply": "doc",
    "pandas.tseries.offsets.SemiMonthBegin": "doc",
    "pandas.tseries.offsets.Week.normalize": "doc",
    "pandas.tseries.offsets.Week.rule_code": "doc",
    "pandas.tseries.offsets.BYearEnd.nanos": "doc",
    "pandas.tseries.offsets.BYearEnd.apply": "doc",
    "pandas.tseries.offsets.YearBegin.kwds": "doc",
    "pandas.tseries.offsets.YearBegin.name": "doc",
    "pandas.tseries.offsets.YearBegin.copy": "doc",
    "pandas.tseries.offsets.FY5253.freqstr": "doc",
    "pandas.tseries.offsets.Easter.freqstr": "doc",
    "pandas.tseries.offsets.Tick.normalize": "doc",
    "pandas.tseries.offsets.Tick.rule_code": "doc",
    "pandas.tseries.offsets.Day.isAnchored": "doc",
    "pandas.tseries.offsets.Hour.normalize": "doc",
    "pandas.tseries.offsets.Hour.rule_code": "doc",
    "pandas.tseries.offsets.Minute.freqstr": "doc",
    "pandas.tseries.offsets.Second.freqstr": "doc",
    "pandas.tseries.offsets.Milli.onOffset": "doc",
    "pandas.tseries.offsets.Milli.__call__": "doc",
    "pandas.tseries.offsets.Micro.onOffset": "doc",
    "pandas.tseries.offsets.Micro.__call__": "doc",
    "pandas.tseries.offsets.Nano.normalize": "doc",
    "pandas.tseries.offsets.Nano.rule_code": "doc",
    "pandas.tseries.offsets.BDay.normalize": "doc",
    "pandas.tseries.offsets.BDay.rule_code": "doc",
    "pandas.tseries.offsets.BMonthEnd.base": "doc",
    "pandas.tseries.offsets.BMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.BMonthEnd.name": "doc",
    "pandas.tseries.offsets.BMonthEnd.copy": "doc",
    "pandas.tseries.offsets.CDay.normalize": "doc",
    "pandas.tseries.offsets.CDay.rule_code": "doc",
    "pandas.tseries.offsets.DateOffset.kwds": "doc",
    "pandas.tseries.offsets.DateOffset.name": "doc",
    "pandas.tseries.offsets.DateOffset.copy": "doc",
    "pandas.tseries.offsets.MonthBegin.kwds": "doc",
    "pandas.tseries.offsets.MonthBegin.name": "doc",
    "pandas.tseries.offsets.MonthBegin.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset": "doc",
    "pandas.tseries.offsets.Week.isAnchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth": "doc",
    "pandas.tseries.offsets.QuarterEnd.kwds": "doc",
    "pandas.tseries.offsets.QuarterEnd.name": "doc",
    "pandas.tseries.offsets.QuarterEnd.copy": "doc",
    "pandas.tseries.offsets.YearOffset.kwds": "doc",
    "pandas.tseries.offsets.YearOffset.name": "doc",
    "pandas.tseries.offsets.YearOffset.copy": "doc",
    "pandas.tseries.offsets.BYearBegin.kwds": "doc",
    "pandas.tseries.offsets.BYearBegin.name": "doc",
    "pandas.tseries.offsets.BYearBegin.copy": "doc",
    "pandas.tseries.offsets.YearEnd.freqstr": "doc",
    "pandas.tseries.offsets.YearBegin.nanos": "doc",
    "pandas.tseries.offsets.YearBegin.apply": "doc",
    "pandas.tseries.offsets.FY5253.onOffset": "doc",
    "pandas.tseries.offsets.FY5253.__call__": "doc",
    "pandas.tseries.offsets.Easter.onOffset": "doc",
    "pandas.tseries.offsets.Easter.__call__": "doc",
    "pandas.tseries.offsets.Tick.isAnchored": "doc",
    "pandas.tseries.offsets.Hour.isAnchored": "doc",
    "pandas.tseries.offsets.Minute.onOffset": "doc",
    "pandas.tseries.offsets.Minute.__call__": "doc",
    "pandas.tseries.offsets.Second.onOffset": "doc",
    "pandas.tseries.offsets.Second.__call__": "doc",
    "pandas.tseries.offsets.Milli.normalize": "doc",
    "pandas.tseries.offsets.Milli.rule_code": "doc",
    "pandas.tseries.offsets.Micro.normalize": "doc",
    "pandas.tseries.offsets.Micro.rule_code": "doc",
    "pandas.tseries.offsets.Nano.isAnchored": "doc",
    "pandas.tseries.offsets.BDay.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.BMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd.base": "doc",
    "pandas.tseries.offsets.CBMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.CBMonthEnd.name": "doc",
    "pandas.tseries.offsets.CBMonthEnd.copy": "doc",
    "pandas.tseries.offsets.CDay.isAnchored": "doc",
    "pandas.tseries.offsets.DateOffset.nanos": "doc",
    "pandas.tseries.offsets.DateOffset.apply": "doc",
    "pandas.tseries.offsets.BusinessDay.kwds": "doc",
    "pandas.tseries.offsets.BusinessDay.name": "doc",
    "pandas.tseries.offsets.BusinessDay.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.kwds": "doc",
    "pandas.tseries.offsets.MonthOffset.name": "doc",
    "pandas.tseries.offsets.MonthOffset.copy": "doc",
    "pandas.tseries.offsets.MonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.MonthBegin.nanos": "doc",
    "pandas.tseries.offsets.MonthBegin.apply": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd": "doc",
    "pandas.tseries.offsets.Week.apply_index": "doc",
    "pandas.tseries.offsets.WeekOfMonth.kwds": "doc",
    "pandas.tseries.offsets.WeekOfMonth.name": "doc",
    "pandas.tseries.offsets.WeekOfMonth.copy": "doc",
    "pandas.tseries.offsets.BQuarterEnd.kwds": "doc",
    "pandas.tseries.offsets.BQuarterEnd.name": "doc",
    "pandas.tseries.offsets.BQuarterEnd.copy": "doc",
    "pandas.tseries.offsets.QuarterEnd.nanos": "doc",
    "pandas.tseries.offsets.QuarterEnd.apply": "doc",
    "pandas.tseries.offsets.YearOffset.nanos": "doc",
    "pandas.tseries.offsets.YearOffset.apply": "doc",
    "pandas.tseries.offsets.BYearEnd.freqstr": "doc",
    "pandas.tseries.offsets.BYearBegin.nanos": "doc",
    "pandas.tseries.offsets.BYearBegin.apply": "doc",
    "pandas.tseries.offsets.YearEnd.onOffset": "doc",
    "pandas.tseries.offsets.YearEnd.__call__": "doc",
    "pandas.tseries.offsets.FY5253.normalize": "doc",
    "pandas.tseries.offsets.FY5253.rule_code": "doc",
    "pandas.tseries.offsets.Easter.normalize": "doc",
    "pandas.tseries.offsets.Easter.rule_code": "doc",
    "pandas.tseries.offsets.Day.is_on_offset": "doc",
    "pandas.tseries.offsets.Minute.normalize": "doc",
    "pandas.tseries.offsets.Minute.rule_code": "doc",
    "pandas.tseries.offsets.Second.normalize": "doc",
    "pandas.tseries.offsets.Second.rule_code": "doc",
    "pandas.tseries.offsets.Milli.isAnchored": "doc",
    "pandas.tseries.offsets.Micro.isAnchored": "doc",
    "pandas.tseries.offsets.BDay.apply_index": "doc",
    "pandas.tseries.offsets.BDay.rollforward": "doc",
    "pandas.tseries.offsets.BMonthBegin.base": "doc",
    "pandas.tseries.offsets.BMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.BMonthBegin.name": "doc",
    "pandas.tseries.offsets.BMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CBMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.CBMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CDay.apply_index": "doc",
    "pandas.tseries.offsets.CDay.rollforward": "doc",
    "pandas.tseries.offsets.BusinessDay.nanos": "doc",
    "pandas.tseries.offsets.BusinessDay.apply": "doc",
    "pandas.tseries.offsets.BusinessHour.kwds": "doc",
    "pandas.tseries.offsets.BusinessHour.name": "doc",
    "pandas.tseries.offsets.BusinessHour.copy": "doc",
    "pandas.tseries.offsets.CustomBusinessDay": "doc",
    "pandas.tseries.offsets.MonthOffset.nanos": "doc",
    "pandas.tseries.offsets.MonthOffset.apply": "doc",
    "pandas.tseries.offsets.MonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.MonthEnd.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.name": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.copy": "doc",
    "pandas.tseries.offsets.Week.is_on_offset": "doc",
    "pandas.tseries.offsets.WeekOfMonth.nanos": "doc",
    "pandas.tseries.offsets.WeekOfMonth.apply": "doc",
    "pandas.tseries.offsets.BQuarterEnd.nanos": "doc",
    "pandas.tseries.offsets.BQuarterEnd.apply": "doc",
    "pandas.tseries.offsets.QuarterBegin.kwds": "doc",
    "pandas.tseries.offsets.QuarterBegin.name": "doc",
    "pandas.tseries.offsets.QuarterBegin.copy": "doc",
    "pandas.tseries.offsets.BYearEnd.onOffset": "doc",
    "pandas.tseries.offsets.BYearEnd.__call__": "doc",
    "pandas.tseries.offsets.YearEnd.normalize": "doc",
    "pandas.tseries.offsets.YearEnd.rule_code": "doc",
    "pandas.tseries.offsets.YearBegin.freqstr": "doc",
    "pandas.tseries.offsets.FY5253.isAnchored": "doc",
    "pandas.tseries.offsets.Easter.isAnchored": "doc",
    "pandas.tseries.offsets.Tick.is_on_offset": "doc",
    "pandas.tseries.offsets.Hour.is_on_offset": "doc",
    "pandas.tseries.offsets.Minute.isAnchored": "doc",
    "pandas.tseries.offsets.Second.isAnchored": "doc",
    "pandas.tseries.offsets.Nano.is_on_offset": "doc",
    "pandas.tseries.offsets.BDay.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.BMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.BMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd.offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.base": "doc",
    "pandas.tseries.offsets.CBMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.CBMonthBegin.name": "doc",
    "pandas.tseries.offsets.CBMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CDay.is_on_offset": "doc",
    "pandas.tseries.offsets.DateOffset.freqstr": "doc",
    "pandas.tseries.offsets.BusinessHour.nanos": "doc",
    "pandas.tseries.offsets.BusinessHour.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour": "doc",
    "pandas.tseries.offsets.MonthEnd.normalize": "doc",
    "pandas.tseries.offsets.MonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.MonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.apply": "doc",
    "pandas.tseries.offsets.QuarterOffset.kwds": "doc",
    "pandas.tseries.offsets.QuarterOffset.name": "doc",
    "pandas.tseries.offsets.QuarterOffset.copy": "doc",
    "pandas.tseries.offsets.QuarterEnd.freqstr": "doc",
    "pandas.tseries.offsets.QuarterBegin.nanos": "doc",
    "pandas.tseries.offsets.QuarterBegin.apply": "doc",
    "pandas.tseries.offsets.YearOffset.freqstr": "doc",
    "pandas.tseries.offsets.BYearEnd.normalize": "doc",
    "pandas.tseries.offsets.BYearEnd.rule_code": "doc",
    "pandas.tseries.offsets.BYearBegin.freqstr": "doc",
    "pandas.tseries.offsets.YearEnd.isAnchored": "doc",
    "pandas.tseries.offsets.YearBegin.onOffset": "doc",
    "pandas.tseries.offsets.YearBegin.__call__": "doc",
    "pandas.tseries.offsets.FY5253Quarter.kwds": "doc",
    "pandas.tseries.offsets.FY5253Quarter.name": "doc",
    "pandas.tseries.offsets.FY5253Quarter.copy": "doc",
    "pandas.tseries.offsets.Milli.is_on_offset": "doc",
    "pandas.tseries.offsets.Micro.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.BMonthEnd.rollback": "doc",
    "pandas.tseries.offsets.BMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CBMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.CBMonthBegin.apply": "doc",
    "pandas.tseries.offsets.DateOffset.onOffset": "doc",
    "pandas.tseries.offsets.DateOffset.__call__": "doc",
    "pandas.tseries.offsets.BusinessDay.freqstr": "doc",
    "pandas.tseries.offsets.MonthOffset.freqstr": "doc",
    "pandas.tseries.offsets.MonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.MonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.MonthBegin.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.name": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.copy": "doc",
    "pandas.tseries.offsets.WeekOfMonth.freqstr": "doc",
    "pandas.tseries.offsets.QuarterOffset.nanos": "doc",
    "pandas.tseries.offsets.QuarterOffset.apply": "doc",
    "pandas.tseries.offsets.BQuarterEnd.freqstr": "doc",
    "pandas.tseries.offsets.QuarterEnd.onOffset": "doc",
    "pandas.tseries.offsets.QuarterEnd.__call__": "doc",
    "pandas.tseries.offsets.YearOffset.onOffset": "doc",
    "pandas.tseries.offsets.YearOffset.__call__": "doc",
    "pandas.tseries.offsets.BYearEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BYearBegin.onOffset": "doc",
    "pandas.tseries.offsets.BYearBegin.__call__": "doc",
    "pandas.tseries.offsets.YearEnd.apply_index": "doc",
    "pandas.tseries.offsets.YearBegin.normalize": "doc",
    "pandas.tseries.offsets.YearBegin.rule_code": "doc",
    "pandas.tseries.offsets.FY5253.get_year_end": "doc",
    "pandas.tseries.offsets.FY5253.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.nanos": "doc",
    "pandas.tseries.offsets.FY5253Quarter.apply": "doc",
    "pandas.tseries.offsets.Easter.is_on_offset": "doc",
    "pandas.tseries.offsets.Minute.is_on_offset": "doc",
    "pandas.tseries.offsets.Second.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.BMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.BMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthEnd.m_offset": "doc",
    "pandas.tseries.offsets.CBMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rollback": "doc",
    "pandas.tseries.offsets.CBMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CBMonthBegin.offset": "doc",
    "pandas.tseries.offsets.DateOffset.normalize": "doc",
    "pandas.tseries.offsets.DateOffset.rule_code": "doc",
    "pandas.tseries.offsets.BusinessDay.onOffset": "doc",
    "pandas.tseries.offsets.BusinessDay.__call__": "doc",
    "pandas.tseries.offsets.BusinessHour.freqstr": "doc",
    "pandas.tseries.offsets.MonthOffset.onOffset": "doc",
    "pandas.tseries.offsets.MonthOffset.__call__": "doc",
    "pandas.tseries.offsets.MonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.MonthBegin.normalize": "doc",
    "pandas.tseries.offsets.MonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.name": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.copy": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.apply": "doc",
    "pandas.tseries.offsets.WeekOfMonth.onOffset": "doc",
    "pandas.tseries.offsets.WeekOfMonth.__call__": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.kwds": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.name": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.copy": "doc",
    "pandas.tseries.offsets.BQuarterEnd.onOffset": "doc",
    "pandas.tseries.offsets.BQuarterEnd.__call__": "doc",
    "pandas.tseries.offsets.QuarterEnd.normalize": "doc",
    "pandas.tseries.offsets.QuarterEnd.rule_code": "doc",
    "pandas.tseries.offsets.QuarterBegin.freqstr": "doc",
    "pandas.tseries.offsets.YearOffset.normalize": "doc",
    "pandas.tseries.offsets.YearOffset.rule_code": "doc",
    "pandas.tseries.offsets.BYearEnd.apply_index": "doc",
    "pandas.tseries.offsets.BYearBegin.normalize": "doc",
    "pandas.tseries.offsets.BYearBegin.rule_code": "doc",
    "pandas.tseries.offsets.YearEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.YearBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.BMonthBegin.rollback": "doc",
    "pandas.tseries.offsets.BMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.CBMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.CBMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.DateOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessDay.normalize": "doc",
    "pandas.tseries.offsets.BusinessDay.rule_code": "doc",
    "pandas.tseries.offsets.BusinessHour.onOffset": "doc",
    "pandas.tseries.offsets.BusinessHour.__call__": "doc",
    "pandas.tseries.offsets.MonthOffset.normalize": "doc",
    "pandas.tseries.offsets.MonthOffset.rule_code": "doc",
    "pandas.tseries.offsets.MonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.MonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.name": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.apply": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.WeekOfMonth.normalize": "doc",
    "pandas.tseries.offsets.WeekOfMonth.rule_code": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.nanos": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.apply": "doc",
    "pandas.tseries.offsets.QuarterOffset.freqstr": "doc",
    "pandas.tseries.offsets.BQuarterEnd.normalize": "doc",
    "pandas.tseries.offsets.BQuarterEnd.rule_code": "doc",
    "pandas.tseries.offsets.QuarterEnd.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.onOffset": "doc",
    "pandas.tseries.offsets.QuarterBegin.__call__": "doc",
    "pandas.tseries.offsets.YearOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BYearEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BYearBegin.isAnchored": "doc",
    "pandas.tseries.offsets.YearBegin.apply_index": "doc",
    "pandas.tseries.offsets.FY5253Quarter.freqstr": "doc",
    "pandas.tseries.offsets.BMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.BMonthEnd.rollforward": "doc",
    "pandas.tseries.offsets.BMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.BMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CBMonthEnd.cbday_roll": "doc",
    "pandas.tseries.offsets.CBMonthEnd.month_roll": "doc",
    "pandas.tseries.offsets.CBMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.m_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rollback": "doc",
    "pandas.tseries.offsets.CBMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.BusinessDay.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessHour.normalize": "doc",
    "pandas.tseries.offsets.BusinessHour.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.name": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.isAnchored": "doc",
    "pandas.tseries.offsets.MonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.WeekOfMonth.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterOffset.onOffset": "doc",
    "pandas.tseries.offsets.QuarterOffset.__call__": "doc",
    "pandas.tseries.offsets.BQuarterEnd.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterEnd.apply_index": "doc",
    "pandas.tseries.offsets.QuarterBegin.normalize": "doc",
    "pandas.tseries.offsets.QuarterBegin.rule_code": "doc",
    "pandas.tseries.offsets.YearOffset.apply_index": "doc",
    "pandas.tseries.offsets.BYearBegin.apply_index": "doc",
    "pandas.tseries.offsets.YearBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.onOffset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.__call__": "doc",
    "pandas.tseries.offsets.BMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CBMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rollforward": "doc",
    "pandas.tseries.offsets.CBMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.DateOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessDay.apply_index": "doc",
    "pandas.tseries.offsets.BusinessHour.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.name": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.apply_index": "doc",
    "pandas.tseries.offsets.MonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.name": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.freqstr": "doc",
    "pandas.tseries.offsets.QuarterOffset.normalize": "doc",
    "pandas.tseries.offsets.QuarterOffset.rule_code": "doc",
    "pandas.tseries.offsets.BQuarterEnd.apply_index": "doc",
    "pandas.tseries.offsets.QuarterEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.QuarterBegin.isAnchored": "doc",
    "pandas.tseries.offsets.YearOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BYearBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.normalize": "doc",
    "pandas.tseries.offsets.FY5253Quarter.rule_code": "doc",
    "pandas.tseries.offsets.FY5253Quarter.get_weeks": "doc",
    "pandas.tseries.offsets.BMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.BMonthBegin.rollforward": "doc",
    "pandas.tseries.offsets.CBMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.cbday_roll": "doc",
    "pandas.tseries.offsets.CBMonthBegin.month_roll": "doc",
    "pandas.tseries.offsets.CBMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessDay.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.apply": "doc",
    "pandas.tseries.offsets.MonthOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.WeekOfMonth.is_on_offset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.onOffset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.__call__": "doc",
    "pandas.tseries.offsets.QuarterOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BQuarterEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.QuarterBegin.apply_index": "doc",
    "pandas.tseries.offsets.FY5253Quarter.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rollforward": "doc",
    "pandas.tseries.offsets.BusinessHour.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.normalize": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.rule_code": "doc",
    "pandas.tseries.offsets.QuarterOffset.apply_index": "doc",
    "pandas.tseries.offsets.QuarterBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.__call__": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.name": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253.get_rule_code_suffix": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.rule_code": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.apply": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.name": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset": "doc",
    "pandas.Period.asfreq": "doc",
    "pandas.DatetimeIndex.to_series": "doc",
    "pandas.CategoricalIndex.add_categories": "doc",
    "pandas.Index.to_series": "doc",
    "pandas.TimedeltaIndex.to_series": "doc",
    "pandas.api.types.is_categorical": "doc",
    "pandas.Period.is_leap_year": "doc",
    "pandas.Period.to_timestamp": "doc",
    "pandas.plotting.scatter_matrix": "doc",
    "pandas.Period.days_in_month": "doc",
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing": "doc",
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing": "doc",
    "pandas.merge": "doc",
    "pandas.Period.year": "doc",
    "pandas.Period.qyear": "doc",
    "pandas.Period.freqstr": "doc",
    "pandas.Period.quarter": "doc",
    "pandas.DataFrame.merge": "doc",
    "pandas.Period.strftime": "doc",
    "pandas.CategoricalIndex.set_categories": "doc",
    "pandas.DataFrame.sparse.from_spmatrix": "doc",
    "pandas.Period.start_time": "doc",
    "pandas.Categorical.categories": "doc",
    "pandas.CategoricalDtype.categories": "doc",
    "pandas.CategoricalIndex.categories": "doc",
    "pandas.PeriodIndex.asfreq": "doc",
    "pandas.api.types.is_interval": "doc",
    "pandas.io.stata.StataWriter.write_file": "doc",
    "pandas.io.formats.style.Styler.set_properties": "doc",
    "pandas.core.groupby.SeriesGroupBy.nsmallest": "doc",
    "pandas.Period.daysinmonth": "doc",
    "pandas.api.types.is_re": "doc",
    "pandas.DataFrame.iteritems": "doc",
    "pandas.api.types.is_sparse": "doc",
    "pandas.api.types.is_dict_like": "doc",
    "pandas.api.types.is_list_like": "doc",
    "pandas.io.formats.style.Styler": "doc",
    "pandas.core.groupby.GroupBy.max": "doc",
    "pandas.core.groupby.GroupBy.cummax": "doc",
    "pandas.core.resample.Resampler.max": "doc",
    "pandas.io.formats.style.Styler.env": "doc",
    "pandas.io.formats.style.Styler.bar": "doc",
    "pandas.io.formats.style.Styler.use": "doc",
    "pandas.io.formats.style.Styler.pipe": "doc",
    "pandas.io.formats.style.Styler.apply": "doc",
    "pandas.io.formats.style.Styler.where": "doc",
    "pandas.io.formats.style.Styler.clear": "doc",
    "pandas.core.resample.Resampler.asfreq": "doc",
    "pandas.io.formats.style.Styler.loader": "doc",
    "pandas.io.formats.style.Styler.format": "doc",
    "pandas.io.formats.style.Styler.render": "doc",
    "pandas.io.formats.style.Styler.export": "doc",
    "pandas.core.window.rolling.Rolling.max": "doc",
    "pandas.io.formats.style.Styler.template": "doc",
    "pandas.io.formats.style.Styler.applymap": "doc",
    "pandas.io.formats.style.Styler.set_uuid": "doc",
    "pandas.io.formats.style.Styler.to_excel": "doc",
    "pandas.io.formats.style.Styler.set_na_rep": "doc",
    "pandas.core.window.expanding.Expanding.max": "doc",
    "pandas.io.formats.style.Styler.set_caption": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cummax": "doc",
    "pandas.core.groupby.DataFrameGroupBy.idxmax": "doc",
    "pandas.io.formats.style.Styler.set_precision": "doc",
    "pandas.io.formats.style.Styler.highlight_max": "doc",
    "pandas.io.formats.style.Styler.highlight_min": "doc",
    "pandas.io.formats.style.Styler.highlight_null": "doc",
    "pandas.io.formats.style.Styler.set_table_styles": "doc",
    "pandas.io.formats.style.Styler.background_gradient": "doc",
    "pandas.io.formats.style.Styler.from_custom_template": "doc",
    "pandas.io.formats.style.Styler.set_table_attributes": "doc",
    "pandas.CategoricalIndex.as_ordered": "doc",
    "pandas.CategoricalIndex.rename_categories": "doc",
    "pandas.Index.is_categorical": "doc",
    "pandas.errors.ParserWarning": "doc",
    "pandas.api.types.is_complex": "doc",
    "pandas.api.types.is_integer": "doc",
    "pandas.api.types.is_categorical_dtype": "doc",
    "pandas.core.groupby.SeriesGroupBy.value_counts": "doc",
    "pandas.DataFrame.sparse.density": "doc",
    "pandas.api.types.is_float_dtype": "doc",
    "pandas.api.types.is_named_tuple": "doc",
    "pandas.PeriodIndex.is_leap_year": "doc",
    "pandas.PeriodIndex.to_timestamp": "doc",
    "pandas.Period": "doc",
    "pandas.Period.day": "doc",
    "pandas.Period.now": "doc",
    "pandas.Period.freq": "doc",
    "pandas.Period.hour": "doc",
    "pandas.Period.week": "doc",
    "pandas.Period.month": "doc",
    "pandas.Index.argmax": "doc",
    "pandas.Period.minute": "doc",
    "pandas.Period.second": "doc",
    "pandas.Period.ordinal": "doc",
    "pandas.Period.weekday": "doc",
    "pandas.Period.end_time": "doc",
    "pandas.Period.dayofweek": "doc",
    "pandas.Period.dayofyear": "doc",
    "pandas.Period.weekofyear": "doc",
    "pandas.DataFrame.to_latex": "doc",
    "pandas.api.types.union_categoricals": "doc",
    "pandas.errors.ParserError": "doc",
    "pandas.api.types.is_iterator": "doc",
    "pandas.api.types.is_hashable": "doc",
    "pandas.io.stata.StataReader.data_label": "doc",
    "pandas.io.stata.StataReader.value_labels": "doc",
    "pandas.io.stata.StataReader.variable_labels": "doc",
    "pandas.api.types.is_string_dtype": "doc",
    "pandas.Index.is_numeric": "doc",
    "pandas.DataFrame.add_prefix": "doc",
    "pandas.api.types.is_datetime64_dtype": "doc",
    "pandas.PeriodIndex.days_in_month": "doc",
    "pandas.CategoricalIndex.remove_categories": "doc",
    "pandas.DatetimeIndex.is_quarter_end": "doc",
    "pandas.PeriodIndex.year": "doc",
    "pandas.PeriodIndex.qyear": "doc",
    "pandas.PeriodIndex.freqstr": "doc",
    "pandas.PeriodIndex.quarter": "doc",
    "pandas.PeriodIndex.strftime": "doc",
    "pandas.MultiIndex.to_flat_index": "doc",
    "pandas.Index.is_mixed": "doc",
    "pandas.Interval.is_empty": "doc",
    "pandas.api.types.pandas_dtype": "doc",
    "pandas.api.types.is_file_like": "doc",
    "pandas.DataFrame.sparse.to_dense": "doc",
    "pandas.api.types.is_complex_dtype": "doc",
    "pandas.api.types.is_integer_dtype": "doc",
    "pandas.api.types.is_numeric_dtype": "doc",
    "pandas.CategoricalIndex.as_unordered": "doc",
    "pandas.api.types.is_timedelta64_dtype": "doc",
    "pandas.Index.is_monotonic": "doc",
    "pandas.core.groupby.SeriesGroupBy.unique": "doc",
    "pandas.core.groupby.SeriesGroupBy.nunique": "doc",
    "pandas.core.groupby.SeriesGroupBy.nlargest": "doc",
    "pandas.api.types.is_datetime64tz_dtype": "doc",
    "pandas.Timestamp.is_quarter_end": "doc",
    "pandas.api.types.is_extension_type": "doc",
    "pandas.api.types.is_interval_dtype": "doc",
    "pandas.util.hash_array": "doc",
    "pandas.DataFrame.add_suffix": "doc",
    "pandas.DatetimeIndex.week": "doc",
    "pandas.DatetimeIndex.freq": "doc",
    "pandas.DatetimeIndex.ceil": "doc",
    "pandas.arrays.DatetimeArray": "doc",
    "pandas.IntervalIndex.is_empty": "doc",
    "pandas.DatetimeIndex.to_period": "doc",
    "pandas.api.types.is_bool_dtype": "doc",
    "pandas.DatetimeIndex.is_month_end": "doc",
    "pandas.PeriodIndex.start_time": "doc",
    "pandas.testing.assert_index_equal": "doc",
    "pandas.core.groupby.DataFrameGroupBy.describe": "doc",
    "pandas.api.types.is_datetime64_ns_dtype": "doc",
    "pandas.ExcelFile.parse": "doc",
    "pandas.api.types.is_bool": "doc",
    "pandas.arrays.PeriodArray": "doc",
    "pandas.arrays.SparseArray": "doc",
    "pandas.arrays.StringArray": "doc",
    "pandas.api.types.is_float": "doc",
    "pandas.arrays.PandasArray": "doc",
    "pandas.DataFrame.to_period": "doc",
    "pandas.DataFrame.plot.area": "doc",
    "pandas.DataFrame.to_string": "doc",
    "pandas.Timestamp.to_period": "doc",
    "pandas.arrays.IntegerArray": "doc",
    "pandas.arrays.BooleanArray": "doc",
    "pandas.api.types.is_number": "doc",
    "pandas.api.types.is_scalar": "doc",
    "pandas.arrays.IntervalArray": "doc",
    "pandas.arrays.TimedeltaArray": "doc",
    "pandas.api.types.infer_dtype": "doc",
    "pandas.core.window.ewm.EWM.std": "doc",
    "pandas.core.window.ewm.EWM.var": "doc",
    "pandas.core.groupby.GroupBy.min": "doc",
    "pandas.core.groupby.GroupBy.sem": "doc",
    "pandas.core.groupby.GroupBy.std": "doc",
    "pandas.core.groupby.GroupBy.sum": "doc",
    "pandas.core.groupby.GroupBy.var": "doc",
    "pandas.api.types.is_int64_dtype": "doc",
    "pandas.core.groupby.GroupBy.last": "doc",
    "pandas.core.groupby.GroupBy.tail": "doc",
    "pandas.errors.PerformanceWarning": "doc",
    "pandas.api.types.is_object_dtype": "doc",
    "pandas.api.types.is_period_dtype": "doc",
    "pandas.api.types.is_re_compilable": "doc",
    "pandas.core.groupby.GroupBy.cummin": "doc",
    "pandas.core.resample.Resampler.min": "doc",
    "pandas.core.resample.Resampler.sem": "doc",
    "pandas.core.resample.Resampler.std": "doc",
    "pandas.core.resample.Resampler.sum": "doc",
    "pandas.core.resample.Resampler.var": "doc",
    "pandas.core.groupby.GroupBy.cumprod": "doc",
    "pandas.core.resample.Resampler.last": "doc",
    "pandas.core.groupby.GroupBy.__iter__": "doc",
    "pandas.core.window.rolling.Window.sum": "doc",
    "pandas.core.window.rolling.Window.var": "doc",
    "pandas.core.window.rolling.Window.std": "doc",
    "pandas.core.window.rolling.Rolling.sum": "doc",
    "pandas.core.window.rolling.Rolling.var": "doc",
    "pandas.core.window.rolling.Rolling.std": "doc",
    "pandas.core.window.rolling.Rolling.min": "doc",
    "pandas.core.resample.Resampler.__iter__": "doc",
    "pandas.core.groupby.DataFrameGroupBy.mad": "doc",
    "pandas.api.types.is_datetime64_any_dtype": "doc",
    "pandas.api.types.is_signed_integer_dtype": "doc",
    "pandas.api.types.is_timedelta64_ns_dtype": "doc",
    "pandas.api.types.is_extension_array_dtype": "doc",
    "pandas.CategoricalIndex.reorder_categories": "doc",
    "pandas.core.window.expanding.Expanding.sum": "doc",
    "pandas.core.window.expanding.Expanding.var": "doc",
    "pandas.core.window.expanding.Expanding.std": "doc",
    "pandas.core.window.expanding.Expanding.min": "doc",
    "pandas.core.groupby.DataFrameGroupBy.shift": "doc",
    "pandas.api.types.is_unsigned_integer_dtype": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cummin": "doc",
    "pandas.core.groupby.DataFrameGroupBy.idxmin": "doc",
    "pandas.core.groupby.DataFrameGroupBy.tshift": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cumprod": "doc",
    "pandas.testing.assert_series_equal": "doc",
    "pandas.errors.EmptyDataError": "doc",
    "pandas.ExcelWriter": "doc",
    "pandas.get_dummies": "doc",
    "pandas.to_datetime": "doc",
    "pandas.Index.is_interval": "doc",
    "pandas.Timestamp.is_year_end": "doc",
    "pandas.PeriodIndex.daysinmonth": "doc",
    "pandas.DatetimeIndex.is_year_end": "doc",
    "pandas.DatetimeIndex.is_quarter_start": "doc",
    "pandas.DataFrame.last_valid_index": "doc",
    "pandas.core.groupby.GroupBy.indices": "doc",
    "pandas.core.resample.Resampler.indices": "doc",
    "pandas.core.resample.Resampler.nearest": "doc",
    "pandas.Timestamp.to_datetime64": "doc",
    "pandas.DatetimeIndex.is_year_start": "doc",
    "pandas.DatetimeIndex.to_pydatetime": "doc",
    "pandas.RangeIndex.start": "doc",
    "pandas.Index.is_floating": "doc",
    "pandas.IntervalIndex.overlaps": "doc",
    "pandas.api.extensions.ExtensionDtype": "doc",
    "pandas.api.extensions.ExtensionArray": "doc",
    "pandas.api.extensions.register_index_accessor": "doc",
    "pandas.api.extensions.register_extension_dtype": "doc",
    "pandas.api.extensions.register_series_accessor": "doc",
    "pandas.api.extensions.register_dataframe_accessor": "doc",
    "pandas.CategoricalIndex.codes": "doc",
    "pandas.core.groupby.DataFrameGroupBy.all": "doc",
    "pandas.core.groupby.DataFrameGroupBy.any": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cov": "doc",
    "pandas.core.groupby.DataFrameGroupBy.corr": "doc",
    "pandas.core.groupby.DataFrameGroupBy.diff": "doc",
    "pandas.core.groupby.DataFrameGroupBy.hist": "doc",
    "pandas.core.groupby.DataFrameGroupBy.plot": "doc",
    "pandas.core.groupby.DataFrameGroupBy.rank": "doc",
    "pandas.core.groupby.DataFrameGroupBy.size": "doc",
    "pandas.core.groupby.DataFrameGroupBy.skew": "doc",
    "pandas.core.groupby.DataFrameGroupBy.take": "doc",
    "pandas.core.groupby.DataFrameGroupBy.bfill": "doc",
    "pandas.core.groupby.DataFrameGroupBy.count": "doc",
    "pandas.core.groupby.DataFrameGroupBy.ffill": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cumsum": "doc",
    "pandas.core.groupby.DataFrameGroupBy.fillna": "doc",
    "pandas.core.groupby.DataFrameGroupBy.filter": "doc",
    "pandas.core.groupby.DataFrameGroupBy.nunique": "doc",
    "pandas.core.groupby.DataFrameGroupBy.boxplot": "doc",
    "pandas.core.groupby.DataFrameGroupBy.quantile": "doc",
    "pandas.core.groupby.DataFrameGroupBy.resample": "doc",
    "pandas.core.groupby.DataFrameGroupBy.corrwith": "doc",
    "pandas.core.groupby.DataFrameGroupBy.pct_change": "doc",
    "pandas.DatetimeIndex.quarter": "doc",
    "pandas.IntervalIndex.is_overlapping": "doc",
    "pandas.DatetimeIndex.is_month_start": "doc",
    "pandas.DatetimeIndex.to_perioddelta": "doc",
    "pandas.Categorical.codes": "doc",
    "pandas.merge_asof": "doc",
    "pandas.DataFrame.itertuples": "doc",
    "pandas.Timestamp.quarter": "doc",
    "pandas.testing.assert_frame_equal": "doc",
    "pandas.IntervalIndex.from_arrays": "doc",
    "pandas.Index.max": "doc",
    "pandas.to_numeric": "doc",
    "pandas.read_feather": "doc",
    "pandas.read_parquet": "doc",
    "pandas.Index.argmin": "doc",
    "pandas.Index.astype": "doc",
    "pandas.DataFrame.max": "doc",
    "pandas.Timestamp.max": "doc",
    "pandas.Timedelta.max": "doc",
    "pandas.Timestamp.asm8": "doc",
    "pandas.Timedelta.asm8": "doc",
    "pandas.DataFrame.attrs": "doc",
    "pandas.DataFrame.astype": "doc",
    "pandas.DataFrame.cummax": "doc",
    "pandas.DataFrame.idxmax": "doc",
    "pandas.DataFrame.asfreq": "doc",
    "pandas.Index.is_integer": "doc",
    "pandas.DataFrame.at_time": "doc",
    "pandas.DataFrame.to_xarray": "doc",
    "pandas.errors.DtypeWarning": "doc",
    "pandas.DataFrame.sort_index": "doc",
    "pandas.DataFrame.to_feather": "doc",
    "pandas.Timestamp.astimezone": "doc",
    "pandas.Index.has_duplicates": "doc",
    "pandas.DataFrame.to_timestamp": "doc",
    "pandas.DataFrame.plot.scatter": "doc",
    "pandas.Timestamp.is_month_end": "doc",
    "pandas.DataFrame.sparse.to_coo": "doc",
    "pandas.MultiIndex.is_lexsorted": "doc",
    "pandas.plotting.andrews_curves": "doc",
    "pandas.Timestamp.is_quarter_start": "doc",
    "pandas.CategoricalIndex.remove_unused_categories": "doc",
    "pandas.errors.OutOfBoundsDatetime": "doc",
    "pandas.IntervalIndex.values": "doc",
    "pandas.Interval.overlaps": "doc",
    "pandas.DataFrame.iterrows": "doc",
    "pandas.DataFrame.describe": "doc",
    "pandas.DataFrame.nlargest": "doc",
    "pandas.DatetimeIndex.strftime": "doc",
    "pandas.DatetimeIndex.is_leap_year": "doc",
    "pandas.TimedeltaIndex.ceil": "doc",
    "pandas.PeriodIndex": "doc",
    "pandas.PeriodIndex.day": "doc",
    "pandas.PeriodIndex.freq": "doc",
    "pandas.PeriodIndex.hour": "doc",
    "pandas.PeriodIndex.week": "doc",
    "pandas.PeriodIndex.month": "doc",
    "pandas.PeriodIndex.minute": "doc",
    "pandas.PeriodIndex.second": "doc",
    "pandas.PeriodIndex.weekday": "doc",
    "pandas.PeriodIndex.end_time": "doc",
    "pandas.PeriodIndex.dayofweek": "doc",
    "pandas.PeriodIndex.dayofyear": "doc",
    "pandas.PeriodIndex.weekofyear": "doc",
    "pandas.Timestamp.is_year_start": "doc",
    "pandas.Timestamp.to_pydatetime": "doc",
    "pandas.CategoricalDtype.ordered": "doc",
    "pandas.CategoricalIndex.ordered": "doc",
    "pandas.MultiIndex.from_arrays": "doc",
    "pandas.Interval.mid": "doc",
    "pandas.DataFrame.set_axis": "doc",
    "pandas.Timestamp.strftime": "doc",
    "pandas.Timestamp.strptime": "doc",
    "pandas.CategoricalIndex.map": "doc",
    "pandas.api.indexers.BaseIndexer": "doc",
    "pandas.api.indexers.check_array_indexer": "doc",
    "pandas.DataFrame.first_valid_index": "doc",
    "pandas.Categorical.ordered": "doc",
    "pandas.describe_option": "doc",
    "pandas.testing.assert_extension_array_equal": "doc",
    "pandas.errors.UnsupportedFunctionCall": "doc",
    "pandas.DatetimeIndex": "doc",
    "pandas.DatetimeIndex.tz": "doc",
    "pandas.DatetimeIndex.day": "doc",
    "pandas.DatetimeIndex.year": "doc",
    "pandas.DatetimeIndex.hour": "doc",
    "pandas.DatetimeIndex.date": "doc",
    "pandas.DatetimeIndex.time": "doc",
    "pandas.DatetimeIndex.snap": "doc",
    "pandas.DatetimeIndex.mean": "doc",
    "pandas.DatetimeIndex.month": "doc",
    "pandas.DatetimeIndex.round": "doc",
    "pandas.DatetimeIndex.floor": "doc",
    "pandas.DatetimeIndex.minute": "doc",
    "pandas.DatetimeIndex.second": "doc",
    "pandas.DatetimeIndex.timetz": "doc",
    "pandas.DatetimeIndex.weekday": "doc",
    "pandas.DatetimeIndex.freqstr": "doc",
    "pandas.DatetimeIndex.day_name": "doc",
    "pandas.DatetimeIndex.to_frame": "doc",
    "pandas.DatetimeIndex.dayofyear": "doc",
    "pandas.DatetimeIndex.dayofweek": "doc",
    "pandas.DatetimeIndex.normalize": "doc",
    "pandas.DatetimeIndex.nanosecond": "doc",
    "pandas.DatetimeIndex.weekofyear": "doc",
    "pandas.DatetimeIndex.tz_convert": "doc",
    "pandas.DatetimeIndex.month_name": "doc",
    "pandas.DatetimeIndex.microsecond": "doc",
    "pandas.DatetimeIndex.tz_localize": "doc",
    "pandas.DatetimeIndex.inferred_freq": "doc",
    "pandas.DatetimeIndex.indexer_at_time": "doc",
    "pandas.DatetimeIndex.indexer_between_time": "doc",
    "pandas.Categorical": "doc",
    "pandas.SparseDtype": "doc",
    "pandas.Categorical.dtype": "doc",
    "pandas.Index.sort_values": "doc",
    "pandas.DataFrame.rename_axis": "doc",
    "pandas.DataFrame.reset_index": "doc",
    "pandas.DataFrame.sort_values": "doc",
    "pandas.Categorical.__array__": "doc",
    "pandas.Categorical.from_codes": "doc",
    "pandas.IntervalIndex.mid": "doc",
    "pandas.json_normalize": "doc",
    "pandas.Timestamp.is_month_start": "doc",
    "pandas.plotting.parallel_coordinates": "doc",
    "pandas.Index.view": "doc",
    "pandas.Index.names": "doc",
    "pandas.Index.where": "doc",
    "pandas.Index.values": "doc",
    "pandas.Index.nbytes": "doc",
    "pandas.HDFStore.keys": "doc",
    "pandas.DataFrame.axes": "doc",
    "pandas.DataFrame.keys": "doc",
    "pandas.Timestamp.week": "doc",
    "pandas.Timestamp.ceil": "doc",
    "pandas.Timestamp.freq": "doc",
    "pandas.Timedelta.freq": "doc",
    "pandas.Timedelta.view": "doc",
    "pandas.Timedelta.ceil": "doc",
    "pandas.DataFrame.where": "doc",
    "pandas.Index.set_names": "doc",
    "pandas.DataFrame.dtypes": "doc",
    "pandas.DataFrame.values": "doc",
    "pandas.DataFrame.median": "doc",
    "pandas.MultiIndex.names": "doc",
    "pandas.MultiIndex.codes": "doc",
    "pandas.MultiIndex.levels": "doc",
    "pandas.DataFrame.plot.pie": "doc",
    "pandas.DataFrame.set_index": "doc",
    "pandas.DataFrame.nsmallest": "doc",
    "pandas.Timestamp.normalize": "doc",
    "pandas.MultiIndex.set_codes": "doc",
    "pandas.core.window.ewm.EWM.cov": "doc",
    "pandas.core.window.ewm.EWM.mean": "doc",
    "pandas.core.window.ewm.EWM.corr": "doc",
    "pandas.core.groupby.GroupBy.agg": "doc",
    "pandas.core.groupby.GroupBy.all": "doc",
    "pandas.core.groupby.GroupBy.any": "doc",
    "pandas.core.groupby.GroupBy.nth": "doc",
    "pandas.core.groupby.GroupBy.pipe": "doc",
    "pandas.core.groupby.GroupBy.head": "doc",
    "pandas.core.groupby.GroupBy.mean": "doc",
    "pandas.core.groupby.GroupBy.ohlc": "doc",
    "pandas.core.groupby.GroupBy.prod": "doc",
    "pandas.core.groupby.GroupBy.rank": "doc",
    "pandas.core.groupby.GroupBy.size": "doc",
    "pandas.errors.UnsortedIndexError": "doc",
    "pandas.core.groupby.GroupBy.apply": "doc",
    "pandas.core.groupby.GroupBy.bfill": "doc",
    "pandas.core.groupby.GroupBy.count": "doc",
    "pandas.core.groupby.GroupBy.ffill": "doc",
    "pandas.core.groupby.GroupBy.first": "doc",
    "pandas.core.groupby.GroupBy.groups": "doc",
    "pandas.core.groupby.GroupBy.cumsum": "doc",
    "pandas.core.groupby.GroupBy.median": "doc",
    "pandas.core.groupby.GroupBy.ngroup": "doc",
    "pandas.core.resample.Resampler.pad": "doc",
    "pandas.core.resample.Resampler.pipe": "doc",
    "pandas.core.resample.Resampler.mean": "doc",
    "pandas.core.resample.Resampler.ohlc": "doc",
    "pandas.core.resample.Resampler.prod": "doc",
    "pandas.core.resample.Resampler.size": "doc",
    "pandas.core.groupby.GroupBy.cumcount": "doc",
    "pandas.core.resample.Resampler.apply": "doc",
    "pandas.core.resample.Resampler.ffill": "doc",
    "pandas.core.resample.Resampler.bfill": "doc",
    "pandas.core.resample.Resampler.count": "doc",
    "pandas.core.resample.Resampler.first": "doc",
    "pandas.core.groupby.GroupBy.get_group": "doc",
    "pandas.core.groupby.GroupBy.aggregate": "doc",
    "pandas.core.groupby.GroupBy.transform": "doc",
    "pandas.core.resample.Resampler.groups": "doc",
    "pandas.core.resample.Resampler.fillna": "doc",
    "pandas.core.resample.Resampler.median": "doc",
    "pandas.core.window.rolling.Rolling.cov": "doc",
    "pandas.core.window.rolling.Window.mean": "doc",
    "pandas.core.groupby.GroupBy.pct_change": "doc",
    "pandas.core.resample.Resampler.nunique": "doc",
    "pandas.core.window.rolling.Rolling.mean": "doc",
    "pandas.core.window.rolling.Rolling.corr": "doc",
    "pandas.core.window.rolling.Rolling.skew": "doc",
    "pandas.core.window.rolling.Rolling.kurt": "doc",
    "pandas.core.resample.Resampler.backfill": "doc",
    "pandas.core.resample.Resampler.quantile": "doc",
    "pandas.core.window.rolling.Rolling.count": "doc",
    "pandas.core.window.rolling.Rolling.apply": "doc",
    "pandas.core.resample.Resampler.get_group": "doc",
    "pandas.core.resample.Resampler.aggregate": "doc",
    "pandas.core.resample.Resampler.transform": "doc",
    "pandas.core.window.rolling.Rolling.median": "doc",
    "pandas.core.window.expanding.Expanding.cov": "doc",
    "pandas.core.resample.Resampler.interpolate": "doc",
    "pandas.core.window.rolling.Rolling.quantile": "doc",
    "pandas.core.window.expanding.Expanding.mean": "doc",
    "pandas.core.window.expanding.Expanding.corr": "doc",
    "pandas.core.window.expanding.Expanding.skew": "doc",
    "pandas.core.window.expanding.Expanding.kurt": "doc",
    "pandas.core.window.rolling.Rolling.aggregate": "doc",
    "pandas.core.window.expanding.Expanding.count": "doc",
    "pandas.core.window.expanding.Expanding.apply": "doc",
    "pandas.core.window.expanding.Expanding.median": "doc",
    "pandas.core.window.expanding.Expanding.quantile": "doc",
    "pandas.core.window.expanding.Expanding.aggregate": "doc",
    "pandas.DataFrame.to_markdown": "doc",
    "pandas.CategoricalIndex": "doc",
    "pandas.CategoricalIndex.equals": "doc",
    "pandas.TimedeltaIndex.seconds": "doc",
    "pandas.Index.is_monotonic_increasing": "doc",
    "pandas.Index.is_monotonic_decreasing": "doc",
    "pandas.IntervalIndex.get_indexer": "doc",
    "pandas.RangeIndex.stop": "doc",
    "pandas.RangeIndex.step": "doc",
    "pandas.MultiIndex.to_frame": "doc",
    "pandas.DataFrame.infer_objects": "doc",
    "pandas.reset_option": "doc",
    "pandas.Index.is_all_dates": "doc",
    "pandas.Index.searchsorted": "doc",
    "pandas.Interval.closed_right": "doc",
    "pandas.Timestamp.is_leap_year": "doc",
    "pandas.Timedelta.is_populated": "doc",
    "pandas.IntervalIndex.from_tuples": "doc",
    "pandas.IntervalIndex.from_breaks": "doc",
    "pandas.infer_freq": "doc",
    "pandas.Interval.open_right": "doc",
    "pandas.MultiIndex.set_levels": "doc",
    "pandas.IntervalIndex.is_non_overlapping_monotonic": "doc",
    "pandas.IntervalIndex.contains": "doc",
    "pandas.read_stata": "doc",
    "pandas.date_range": "doc",
    "pandas.RangeIndex": "doc",
    "pandas.get_option": "doc",
    "pandas.set_option": "doc",
    "pandas.DatetimeTZDtype": "doc",
    "pandas.DataFrame.to_parquet": "doc",
    "pandas.DataFrame.to_records": "doc",
    "pandas.Timestamp.resolution": "doc",
    "pandas.Timedelta.resolution": "doc",
    "pandas.Index.to_native_types": "doc",
    "pandas.RangeIndex.from_range": "doc",
    "pandas.MultiIndex.from_frame": "doc",
    "pandas.Index.symmetric_difference": "doc",
    "pandas.Timestamp.days_in_month": "doc",
    "pandas.Index.reindex": "doc",
    "pandas.DataFrame.reindex": "doc",
    "pandas.Timedelta.seconds": "doc",
    "pandas.MultiIndex.nlevels": "doc",
    "pandas.DataFrame.plot.density": "doc",
    "pandas.DataFrame.convert_dtypes": "doc",
    "pandas.DataFrame.reorder_levels": "doc",
    "pandas.MultiIndex.reorder_levels": "doc",
    "pandas.TimedeltaIndex.microseconds": "doc",
    "pandas.isna": "doc",
    "pandas.array": "doc",
    "pandas.concat": "doc",
    "pandas.Index.is_": "doc",
    "pandas.Index.min": "doc",
    "pandas.Index.map": "doc",
    "pandas.Index.isna": "doc",
    "pandas.Index.asof": "doc",
    "pandas.Index.isin": "doc",
    "pandas.Index.shape": "doc",
    "pandas.Index.empty": "doc",
    "pandas.Index.shift": "doc",
    "pandas.DataFrame.at": "doc",
    "pandas.Index.repeat": "doc",
    "pandas.DataFrame.iat": "doc",
    "pandas.DataFrame.mad": "doc",
    "pandas.DataFrame.min": "doc",
    "pandas.DataFrame.sem": "doc",
    "pandas.DataFrame.sum": "doc",
    "pandas.DataFrame.std": "doc",
    "pandas.DataFrame.var": "doc",
    "pandas.Timestamp.min": "doc",
    "pandas.Timestamp.dst": "doc",
    "pandas.Timedelta.min": "doc",
    "pandas.Index.hasnans": "doc",
    "pandas.Index.putmask": "doc",
    "pandas.Index.argsort": "doc",
    "pandas.DataFrame.isna": "doc",
    "pandas.DataFrame.tail": "doc",
    "pandas.DataFrame.isin": "doc",
    "pandas.DataFrame.mask": "doc",
    "pandas.DataFrame.last": "doc",
    "pandas.DataFrame.asof": "doc",
    "pandas.Timestamp.year": "doc",
    "pandas.Timestamp.date": "doc",
    "pandas.Index.to_frame": "doc",
    "pandas.DataFrame.shape": "doc",
    "pandas.DataFrame.empty": "doc",
    "pandas.DataFrame.stack": "doc",
    "pandas.DataFrame.shift": "doc",
    "pandas.DataFrame.style": "doc",
    "pandas.Index.is_unique": "doc",
    "pandas.Index.is_object": "doc",
    "pandas.Index.asof_locs": "doc",
    "pandas.plotting.radviz": "doc",
    "pandas.DataFrame.cummin": "doc",
    "pandas.DataFrame.idxmin": "doc",
    "pandas.DataFrame.sample": "doc",
    "pandas.DataFrame.assign": "doc",
    "pandas.DataFrame.update": "doc",
    "pandas.DataFrame.tshift": "doc",
    "pandas.Timestamp.timetz": "doc",
    "pandas.DataFrame.cumprod": "doc",
    "pandas.DataFrame.to_html": "doc",
    "pandas.Timestamp.freqstr": "doc",
    "pandas.DataFrame.__iter__": "doc",
    "pandas.DataFrame.plot.bar": "doc",
    "pandas.DataFrame.to_stata": "doc",
    "pandas.Timestamp.day_name": "doc",
    "pandas.DataFrame.plot.barh": "doc",
    "pandas.util.hash_pandas_object": "doc",
    "pandas.TimedeltaIndex.to_frame": "doc",
    "pandas.merge_ordered": "doc",
    "pandas.IntervalIndex": "doc",
    "pandas.IntervalIndex.left": "doc",
    "pandas.Index.slice_indexer": "doc",
    "pandas.IntervalIndex.right": "doc",
    "pandas.IntervalIndex.closed": "doc",
    "pandas.IntervalIndex.length": "doc",
    "pandas.IntervalIndex.get_loc": "doc",
    "pandas.DataFrame.combine_first": "doc",
    "pandas.Timestamp.fromtimestamp": "doc",
    "pandas.IntervalIndex.to_tuples": "doc",
    "pandas.IntervalIndex.set_closed": "doc",
    "pandas.PeriodDtype": "doc",
    "pandas.StringDtype": "doc",
    "pandas.Index.get_indexer": "doc",
    "pandas.MultiIndex.get_indexer": "doc",
    "pandas.MultiIndex.from_tuples": "doc",
    "pandas.read_sql_table": "doc",
    "pandas.read_sql_query": "doc",
    "pandas.Timedelta.to_timedelta64": "doc",
    "pandas.CategoricalDtype": "doc",
    "pandas.Timestamp.utcfromtimestamp": "doc",
    "pandas.TimedeltaIndex.inferred_freq": "doc",
    "pandas.read_table": "doc",
    "pandas.Index.is_boolean": "doc",
    "pandas.MultiIndex.from_product": "doc",
    "pandas.plotting.register_matplotlib_converters": "doc",
    "pandas.read_pickle": "doc",
    "pandas.bdate_range": "doc",
    "pandas.plotting.plot_params": "doc",
    "pandas.Timestamp.fromordinal": "doc",
    "pandas.read_csv": "doc",
    "pandas.read_sas": "doc",
    "pandas.read_sql": "doc",
    "pandas.Interval": "doc",
    "pandas.period_range": "doc",
    "pandas.Interval.left": "doc",
    "pandas.Interval.right": "doc",
    "pandas.Interval.closed": "doc",
    "pandas.Interval.length": "doc",
    "pandas.DataFrame.rtruediv": "doc",
    "pandas.DataFrame.corrwith": "doc",
    "pandas.DataFrame.kurtosis": "doc",
    "pandas.DataFrame.swapaxes": "doc",
    "pandas.DataFrame.to_excel": "doc",
    "pandas.Interval.open_left": "doc",
    "pandas.Index.memory_usage": "doc",
    "pandas.Index.intersection": "doc",
    "pandas.MultiIndex.get_locs": "doc",
    "pandas.Interval.closed_left": "doc",
    "pandas.DataFrame.memory_usage": "doc",
    "pandas.Timedelta.microseconds": "doc",
    "pandas.plotting.deregister_matplotlib_converters": "doc",
    "pandas.DataFrame.tz_localize": "doc",
    "pandas.Timestamp.daysinmonth": "doc",
    "pandas.Timestamp.isocalendar": "doc",
    "pandas.Timestamp.tz_localize": "doc",
    "pandas.TimedeltaIndex.components": "doc",
    "pandas.Index.inferred_type": "doc",
    "pandas.DataFrame.select_dtypes": "doc",
    "pandas.read_json": "doc",
    "pandas.read_spss": "doc",
    "pandas.factorize": "doc",
    "pandas.to_timedelta": "doc",
    "pandas.BooleanDtype": "doc",
    "pandas.Float64Index": "doc",
    "pandas.Index.factorize": "doc",
    "pandas.Index.identical": "doc",
    "pandas.Index.droplevel": "doc",
    "pandas.Index.value_counts": "doc",
    "pandas.DataFrame.droplevel": "doc",
    "pandas.Timestamp.toordinal": "doc",
    "pandas.MultiIndex.sortlevel": "doc",
    "pandas.MultiIndex.droplevel": "doc",
    "pandas.Index.drop_duplicates": "doc",
    "pandas.Index.get_indexer_for": "doc",
    "pandas.DataFrame.from_records": "doc",
    "pandas.Timestamp.utctimetuple": "doc",
    "pandas.DataFrame.drop_duplicates": "doc",
    "pandas.MultiIndex.get_level_values": "doc",
    "pandas.TimedeltaIndex.nanoseconds": "doc",
    "pandas.IntervalDtype": "doc",
    "pandas.Timedelta.total_seconds": "doc",
    "pandas.plotting.autocorrelation_plot": "doc",
    "pandas.Index.get_level_values": "doc",
    "pandas.read_excel": "doc",
    "pandas.MultiIndex": "doc",
    "pandas.IndexSlice": "doc",
    "pandas.Index.duplicated": "doc",
    "pandas.Index.difference": "doc",
    "pandas.Index.slice_locs": "doc",
    "pandas.MultiIndex.get_loc": "doc",
    "pandas.MultiIndex.levshape": "doc",
    "pandas.DataFrame.duplicated": "doc",
    "pandas.Timestamp.weekofyear": "doc",
    "pandas.Timedelta.components": "doc",
    "pandas.MultiIndex.swaplevel": "doc",
    "pandas.Index.get_slice_bound": "doc",
    "pandas.MultiIndex.get_loc_level": "doc",
    "pandas.MultiIndex.remove_unused_levels": "doc",
    "pandas.read_clipboard": "doc",
    "pandas.interval_range": "doc",
    "pandas.TimedeltaIndex": "doc",
    "pandas.option_context": "doc",
    "pandas.TimedeltaIndex.days": "doc",
    "pandas.TimedeltaIndex.mean": "doc",
    "pandas.TimedeltaIndex.round": "doc",
    "pandas.TimedeltaIndex.floor": "doc",
    "pandas.plotting.bootstrap_plot": "doc",
    "pandas.Timestamp.to_julian_date": "doc",
    "pandas.Timedelta.to_pytimedelta": "doc",
    "pandas.TimedeltaIndex.to_pytimedelta": "doc",
    "pandas.Index.get_indexer_non_unique": "doc",
    "pandas.timedelta_range": "doc",
    "pandas.DataFrame.interpolate": "doc",
    "pandas.DataFrame.slice_shift": "doc",
    "pandas.Timestamp.microsecond": "doc",
    "pandas.Timedelta.nanoseconds": "doc",
    "pandas.cut": "doc",
    "pandas.melt": "doc",
    "pandas.qcut": "doc",
    "pandas.eval": "doc",
    "pandas.test": "doc",
    "pandas.pivot": "doc",
    "pandas.notna": "doc",
    "pandas.Index": "doc",
    "pandas.unique": "doc",
    "pandas.isnull": "doc",
    "pandas.notnull": "doc",
    "pandas.Index.T": "doc",
    "pandas.Grouper": "doc",
    "pandas.read_fwf": "doc",
    "pandas.read_hdf": "doc",
    "pandas.read_orc": "doc",
    "pandas.read_gbq": "doc",
    "pandas.crosstab": "doc",
    "pandas.plotting": "doc",
    "pandas.read_html": "doc",
    "pandas.DataFrame": "doc",
    "pandas.Timestamp": "doc",
    "pandas.Timedelta": "doc",
    "pandas.Int8Dtype": "doc",
    "pandas.Index.all": "doc",
    "pandas.Index.any": "doc",
    "pandas.Int16Dtype": "doc",
    "pandas.Int32Dtype": "doc",
    "pandas.Int64Dtype": "doc",
    "pandas.UInt8Dtype": "doc",
    "pandas.Index.name": "doc",
    "pandas.Index.ndim": "doc",
    "pandas.Index.size": "doc",
    "pandas.Index.copy": "doc",
    "pandas.Index.drop": "doc",
    "pandas.Index.take": "doc",
    "pandas.Index.item": "doc",
    "pandas.Index.join": "doc",
    "pandas.Int64Index": "doc",
    "pandas.pivot_table": "doc",
    "pandas.DataFrame.T": "doc",
    "pandas.UInt16Dtype": "doc",
    "pandas.UInt32Dtype": "doc",
    "pandas.UInt64Dtype": "doc",
    "pandas.Index.dtype": "doc",
    "pandas.Index.notna": "doc",
    "pandas.Index.ravel": "doc",
    "pandas.Index.union": "doc",
    "pandas.UInt64Index": "doc",
    "pandas.HDFStore.put": "doc",
    "pandas.HDFStore.get": "doc",
    "pandas.wide_to_long": "doc",
    "pandas.DataFrame.xs": "doc",
    "pandas.DataFrame.lt": "doc",
    "pandas.DataFrame.gt": "doc",
    "pandas.DataFrame.le": "doc",
    "pandas.DataFrame.ge": "doc",
    "pandas.DataFrame.ne": "doc",
    "pandas.DataFrame.eq": "doc",
    "pandas.Timestamp.tz": "doc",
    "pandas.Index.delete": "doc",
    "pandas.Index.equals": "doc",
    "pandas.Index.insert": "doc",
    "pandas.Index.rename": "doc",
    "pandas.Index.unique": "doc",
    "pandas.Index.fillna": "doc",
    "pandas.Index.dropna": "doc",
    "pandas.Index.append": "doc",
    "pandas.HDFStore.info": "doc",
    "pandas.HDFStore.walk": "doc",
    "pandas.DataFrame.loc": "doc",
    "pandas.DataFrame.pop": "doc",
    "pandas.DataFrame.get": "doc",
    "pandas.DataFrame.add": "doc",
    "pandas.DataFrame.sub": "doc",
    "pandas.DataFrame.mul": "doc",
    "pandas.DataFrame.div": "doc",
    "pandas.DataFrame.mod": "doc",
    "pandas.DataFrame.pow": "doc",
    "pandas.DataFrame.dot": "doc",
    "pandas.DataFrame.agg": "doc",
    "pandas.DataFrame.ewm": "doc",
    "pandas.DataFrame.abs": "doc",
    "pandas.DataFrame.all": "doc",
    "pandas.DataFrame.any": "doc",
    "pandas.DataFrame.cov": "doc",
    "pandas.Timestamp.day": "doc",
    "pandas.Timestamp.now": "doc",
    "pandas.Index.nunique": "doc",
    "pandas.Index.to_list": "doc",
    "pandas.Index.get_loc": "doc",
    "pandas.DataFrame.ndim": "doc",
    "pandas.DataFrame.size": "doc",
    "pandas.DataFrame.copy": "doc",
    "pandas.DataFrame.bool": "doc",
    "pandas.DataFrame.head": "doc",
    "pandas.DataFrame.iloc": "doc",
    "pandas.DataFrame.radd": "doc",
    "pandas.DataFrame.rsub": "doc",
    "pandas.DataFrame.rmul": "doc",
    "pandas.DataFrame.rdiv": "doc",
    "pandas.DataFrame.rmod": "doc",
    "pandas.DataFrame.rpow": "doc",
    "pandas.DataFrame.pipe": "doc",
    "pandas.DataFrame.clip": "doc",
    "pandas.DataFrame.corr": "doc",
    "pandas.DataFrame.diff": "doc",
    "pandas.DataFrame.eval": "doc",
    "pandas.DataFrame.kurt": "doc",
    "pandas.DataFrame.mean": "doc",
    "pandas.DataFrame.mode": "doc",
    "pandas.DataFrame.prod": "doc",
    "pandas.DataFrame.rank": "doc",
    "pandas.DataFrame.skew": "doc",
    "pandas.DataFrame.drop": "doc",
    "pandas.DataFrame.take": "doc",
    "pandas.DataFrame.melt": "doc",
    "pandas.DataFrame.join": "doc",
    "pandas.DataFrame.plot": "doc",
    "pandas.DataFrame.hist": "doc",
    "pandas.DataFrame.info": "doc",
    "pandas.Timestamp.fold": "doc",
    "pandas.Timestamp.hour": "doc",
    "pandas.Timestamp.time": "doc",
    "pandas.Timedelta.days": "doc",
    "pandas.plotting.table": "doc",
    "pandas.HDFStore.append": "doc",
    "pandas.HDFStore.select": "doc",
    "pandas.HDFStore.groups": "doc",
    "pandas.DataFrame.index": "doc",
    "pandas.DataFrame.notna": "doc",
    "pandas.DataFrame.items": "doc",
    "pandas.DataFrame.query": "doc",
    "pandas.DataFrame.apply": "doc",
    "pandas.DataFrame.count": "doc",
    "pandas.DataFrame.round": "doc",
    "pandas.DataFrame.align": "doc",
    "pandas.DataFrame.first": "doc",
    "pandas.DataFrame.pivot": "doc",
    "pandas.Timestamp.month": "doc",
    "pandas.Timestamp.value": "doc",
    "pandas.Timestamp.ctime": "doc",
    "pandas.Timestamp.floor": "doc",
    "pandas.Timestamp.round": "doc",
    "pandas.Timestamp.today": "doc",
    "pandas.Timedelta.delta": "doc",
    "pandas.Timedelta.value": "doc",
    "pandas.Timedelta.floor": "doc",
    "pandas.Timedelta.round": "doc",
    "pandas.Index.get_value": "doc",
    "pandas.DataFrame.insert": "doc",
    "pandas.DataFrame.lookup": "doc",
    "pandas.DataFrame.cumsum": "doc",
    "pandas.DataFrame.equals": "doc",
    "pandas.DataFrame.filter": "doc",
    "pandas.DataFrame.rename": "doc",
    "pandas.DataFrame.dropna": "doc",
    "pandas.DataFrame.fillna": "doc",
    "pandas.DataFrame.append": "doc",
    "pandas.DataFrame.to_csv": "doc",
    "pandas.DataFrame.to_hdf": "doc",
    "pandas.DataFrame.to_sql": "doc",
    "pandas.DataFrame.to_gbq": "doc",
    "pandas.Timestamp.minute": "doc",
    "pandas.Timestamp.second": "doc",
    "pandas.Timestamp.tzinfo": "doc",
    "pandas.Timestamp.tzname": "doc",
    "pandas.Timestamp.utcnow": "doc",
    "pandas.plotting.boxplot": "doc",
    "pandas.DataFrame.columns": "doc",
    "pandas.DataFrame.truediv": "doc",
    "pandas.DataFrame.combine": "doc",
    "pandas.DataFrame.groupby": "doc",
    "pandas.DataFrame.rolling": "doc",
    "pandas.DataFrame.product": "doc",
    "pandas.DataFrame.nunique": "doc",
    "pandas.DataFrame.replace": "doc",
    "pandas.DataFrame.unstack": "doc",
    "pandas.DataFrame.explode": "doc",
    "pandas.DataFrame.squeeze": "doc",
    "pandas.DataFrame.boxplot": "doc",
    "pandas.DataFrame.to_dict": "doc",
    "pandas.DataFrame.to_json": "doc",
    "pandas.Timestamp.combine": "doc",
    "pandas.Timestamp.replace": "doc",
    "pandas.Timestamp.weekday": "doc",
    "pandas.plotting.lag_plot": "doc",
    "pandas.DataFrame.floordiv": "doc",
    "pandas.DataFrame.applymap": "doc",
    "pandas.DataFrame.quantile": "doc",
    "pandas.DataFrame.truncate": "doc",
    "pandas.DataFrame.resample": "doc",
    "pandas.DataFrame.plot.box": "doc",
    "pandas.DataFrame.plot.kde": "doc",
    "pandas.Timestamp.to_numpy": "doc",
    "pandas.Timedelta.to_numpy": "doc",
    "pandas.DataFrame.rfloordiv": "doc",
    "pandas.DataFrame.aggregate": "doc",
    "pandas.DataFrame.transform": "doc",
    "pandas.DataFrame.expanding": "doc",
    "pandas.DataFrame.swaplevel": "doc",
    "pandas.DataFrame.transpose": "doc",
    "pandas.DataFrame.plot.hist": "doc",
    "pandas.DataFrame.plot.line": "doc",
    "pandas.DataFrame.from_dict": "doc",
    "pandas.DataFrame.to_pickle": "doc",
    "pandas.Timestamp.dayofweek": "doc",
    "pandas.Timestamp.dayofyear": "doc",
    "pandas.Timestamp.isoformat": "doc",
    "pandas.Timestamp.timestamp": "doc",
    "pandas.Timestamp.timetuple": "doc",
    "pandas.Timestamp.utcoffset": "doc",
    "pandas.Timedelta.isoformat": "doc",
    "pandas.DataFrame.pct_change": "doc",
    "pandas.DataFrame.tz_convert": "doc",
    "pandas.Timestamp.nanosecond": "doc",
    "pandas.Timestamp.isoweekday": "doc",
    "pandas.Timestamp.month_name": "doc",
    "pandas.Timestamp.tz_convert": "doc",
    "pandas.DataFrame.pivot_table": "doc",
    "pandas.DataFrame.plot.hexbin": "doc",
    "pandas.DataFrame.between_time": "doc",
    "pandas.DataFrame.reindex_like": "doc",
    "pandas.DataFrame.to_clipboard": "doc",
    "pandas.io.json.build_table_schema": "doc",
    "pandas.Index.to_numpy": "doc"
  },
  "pandas.Index.get_values": {
    "pandas.Index.get_value": "doc",
    "pandas.Index.sort_values": "doc",
    "pandas.Index.get_level_values": "doc",
    "pandas.Index.values": "doc",
    "pandas.Index.set_names": "doc",
    "pandas.Index.get_loc": "doc",
    "pandas.Index.get_indexer": "doc",
    "pandas.Index.equals": "doc",
    "pandas.Index.get_indexer_for": "doc",
    "pandas.Index.get_slice_bound": "doc",
    "pandas.Index.take": "doc",
    "pandas.Index.names": "doc",
    "pandas.Index.rename": "doc",
    "pandas.Index.to_series": "doc",
    "pandas.Index.has_duplicates": "doc",
    "pandas.Index.drop_duplicates": "doc",
    "pandas.Index.to_native_types": "doc",
    "pandas.Index.is_all_dates": "doc",
    "pandas.Index.memory_usage": "doc",
    "pandas.Index.get_indexer_non_unique": "doc",
    "pandas.Index": "doc",
    "pandas.Index.T": "doc",
    "pandas.Index.all": "doc",
    "pandas.Index.any": "doc",
    "pandas.Index.is_": "doc",
    "pandas.Index.min": "doc",
    "pandas.Index.max": "doc",
    "pandas.Index.map": "doc",
    "pandas.Index.name": "doc",
    "pandas.Index.ndim": "doc",
    "pandas.Index.size": "doc",
    "pandas.Index.copy": "doc",
    "pandas.Index.drop": "doc",
    "pandas.Index.isna": "doc",
    "pandas.Index.item": "doc",
    "pandas.Index.view": "doc",
    "pandas.Index.join": "doc",
    "pandas.Index.asof": "doc",
    "pandas.Index.isin": "doc",
    "pandas.Index.dtype": "doc",
    "pandas.Index.shape": "doc",
    "pandas.Index.empty": "doc",
    "pandas.Index.where": "doc",
    "pandas.Index.notna": "doc",
    "pandas.Index.ravel": "doc",
    "pandas.Index.shift": "doc",
    "pandas.Index.union": "doc",
    "pandas.Index.nbytes": "doc",
    "pandas.Index.argmin": "doc",
    "pandas.Index.argmax": "doc",
    "pandas.Index.delete": "doc",
    "pandas.Index.insert": "doc",
    "pandas.Index.repeat": "doc",
    "pandas.Index.unique": "doc",
    "pandas.Index.fillna": "doc",
    "pandas.Index.dropna": "doc",
    "pandas.Index.astype": "doc",
    "pandas.Index.append": "doc",
    "pandas.Index.hasnans": "doc",
    "pandas.Index.reindex": "doc",
    "pandas.Index.putmask": "doc",
    "pandas.Index.nunique": "doc",
    "pandas.Index.to_list": "doc",
    "pandas.Index.argsort": "doc",
    "pandas.Index.is_mixed": "doc",
    "pandas.Index.to_frame": "doc",
    "pandas.Index.is_unique": "doc",
    "pandas.Index.factorize": "doc",
    "pandas.Index.identical": "doc",
    "pandas.Index.is_object": "doc",
    "pandas.Index.droplevel": "doc",
    "pandas.Index.asof_locs": "doc",
    "pandas.Index.duplicated": "doc",
    "pandas.Index.is_boolean": "doc",
    "pandas.Index.is_integer": "doc",
    "pandas.Index.is_numeric": "doc",
    "pandas.Index.difference": "doc",
    "pandas.Index.slice_locs": "doc",
    "pandas.Index.is_floating": "doc",
    "pandas.Index.is_interval": "doc",
    "pandas.Index.is_monotonic": "doc",
    "pandas.Index.value_counts": "doc",
    "pandas.Index.searchsorted": "doc",
    "pandas.Index.intersection": "doc",
    "pandas.Index.inferred_type": "doc",
    "pandas.Index.slice_indexer": "doc",
    "pandas.Index.is_categorical": "doc",
    "pandas.Index.symmetric_difference": "doc",
    "pandas.Index.is_monotonic_increasing": "doc",
    "pandas.Index.is_monotonic_decreasing": "doc",
    "pandas.MultiIndex.get_level_values": "doc",
    "pandas.Series.index": "doc",
    "pandas.Series.str.index": "doc",
    "pandas.MultiIndex.get_locs": "doc",
    "pandas.Series.sort_values": "doc",
    "pandas.DataFrame.sort_values": "doc",
    "pandas.Series.sparse.sp_values": "doc",
    "pandas.MultiIndex.get_loc": "doc",
    "pandas.MultiIndex.set_codes": "doc",
    "pandas.DataFrame.index": "doc",
    "pandas.IntervalIndex.values": "doc",
    "pandas.Series.str.rindex": "doc",
    "pandas.MultiIndex.get_loc_level": "doc",
    "pandas.MultiIndex.get_indexer": "doc",
    "pandas.Series.values": "doc",
    "pandas.DataFrame.values": "doc",
    "pandas.MultiIndex.levels": "doc",
    "pandas.MultiIndex.set_levels": "doc",
    "pandas.IntervalIndex.get_loc": "doc",
    "pandas.get_dummies": "doc",
    "pandas.Series.str.get_dummies": "doc",
    "pandas.Series.reindex": "doc",
    "pandas.DataFrame.set_index": "doc",
    "pandas.IntervalIndex.get_indexer": "doc",
    "pandas.Series.set_axis": "doc",
    "pandas.Timestamp.value": "doc",
    "pandas.Timedelta.value": "doc",
    "pandas.DataFrame.set_axis": "doc",
    "pandas.Series.sparse.fill_value": "doc",
    "pandas.core.groupby.GroupBy.get_group": "doc",
    "pandas.core.resample.Resampler.get_group": "doc",
    "pandas.io.formats.style.Styler.set_na_rep": "doc",
    "pandas.tseries.offsets.FY5253.get_year_end": "doc",
    "pandas.tseries.offsets.FY5253Quarter.get_weeks": "doc",
    "pandas.MultiIndex.names": "doc",
    "pandas.MultiIndex.nlevels": "doc",
    "pandas.MultiIndex.levshape": "doc",
    "pandas.io.formats.style.Styler.render": "doc",
    "pandas.MultiIndex.reorder_levels": "doc",
    "pandas.IntervalIndex.to_tuples": "doc",
    "pandas.IntervalIndex.set_closed": "doc",
    "pandas.MultiIndex.from_tuples": "doc",
    "pandas.DataFrame.reindex": "doc",
    "pandas.io.formats.style.Styler.set_table_styles": "doc",
    "pandas.IntervalIndex": "doc",
    "pandas.IntervalIndex.mid": "doc",
    "pandas.IntervalIndex.left": "doc",
    "pandas.IntervalIndex.right": "doc",
    "pandas.IntervalIndex.closed": "doc",
    "pandas.IntervalIndex.length": "doc",
    "pandas.IntervalIndex.is_empty": "doc",
    "pandas.IntervalIndex.contains": "doc",
    "pandas.IntervalIndex.overlaps": "doc",
    "pandas.IntervalIndex.from_arrays": "doc",
    "pandas.IntervalIndex.from_tuples": "doc",
    "pandas.IntervalIndex.from_breaks": "doc",
    "pandas.IntervalIndex.is_overlapping": "doc",
    "pandas.IntervalIndex.is_non_overlapping_monotonic": "doc",
    "pandas.Series.cat.set_categories": "doc",
    "pandas.CategoricalIndex.set_categories": "doc",
    "pandas.read_parquet": "doc",
    "pandas.MultiIndex.remove_unused_levels": "doc",
    "pandas.eval": "doc",
    "pandas.get_option": "doc",
    "pandas.Series.equals": "doc",
    "pandas.DataFrame.eval": "doc",
    "pandas.DataFrame.equals": "doc",
    "pandas.CategoricalIndex.equals": "doc",
    "pandas.io.formats.style.Styler.set_uuid": "doc",
    "pandas.io.formats.style.Styler.set_table_attributes": "doc",
    "pandas.core.resample.Resampler.indices": "doc",
    "pandas.DataFrame.select_dtypes": "doc",
    "pandas.api.indexers.check_array_indexer": "doc",
    "pandas.Series.last_valid_index": "doc",
    "pandas.DataFrame.last_valid_index": "doc",
    "pandas.Series.ne": "doc",
    "pandas.Series.ndim": "doc",
    "pandas.Series.mode": "doc",
    "pandas.Series.plot.kde": "doc",
    "pandas.Series.cat.codes": "doc",
    "pandas.Series.sort_index": "doc",
    "pandas.RangeIndex": "doc",
    "pandas.Int64Index": "doc",
    "pandas.MultiIndex": "doc",
    "pandas.IndexSlice": "doc",
    "pandas.RangeIndex.stop": "doc",
    "pandas.RangeIndex.step": "doc",
    "pandas.RangeIndex.start": "doc",
    "pandas.MultiIndex.codes": "doc",
    "pandas.MultiIndex.to_frame": "doc",
    "pandas.MultiIndex.sortlevel": "doc",
    "pandas.MultiIndex.droplevel": "doc",
    "pandas.MultiIndex.swaplevel": "doc",
    "pandas.RangeIndex.from_range": "doc",
    "pandas.MultiIndex.from_frame": "doc",
    "pandas.MultiIndex.from_arrays": "doc",
    "pandas.MultiIndex.from_product": "doc",
    "pandas.MultiIndex.is_lexsorted": "doc",
    "pandas.MultiIndex.to_flat_index": "doc",
    "pandas.api.indexers.BaseIndexer": "doc",
    "pandas.plotting.plot_params": "doc",
    "pandas.io.formats.style.Styler.set_caption": "doc",
    "pandas.read_sql_query": "doc",
    "pandas.Series.convert_dtypes": "doc",
    "pandas.DataFrame.convert_dtypes": "doc",
    "pandas.io.formats.style.Styler.set_properties": "doc",
    "pandas.Series.first_valid_index": "doc",
    "pandas.DataFrame.first_valid_index": "doc",
    "pandas.DatetimeIndex.day_name": "doc",
    "pandas.DatetimeIndex.to_series": "doc",
    "pandas.tseries.offsets.FY5253.get_rule_code_suffix": "doc",
    "pandas.Interval": "doc",
    "pandas.Interval.mid": "doc",
    "pandas.Interval.left": "doc",
    "pandas.Interval.right": "doc",
    "pandas.Interval.closed": "doc",
    "pandas.Interval.length": "doc",
    "pandas.Interval.is_empty": "doc",
    "pandas.Interval.overlaps": "doc",
    "pandas.Interval.open_left": "doc",
    "pandas.Interval.open_right": "doc",
    "pandas.Interval.closed_left": "doc",
    "pandas.Interval.closed_right": "doc",
    "pandas.read_feather": "doc",
    "pandas.Series.reset_index": "doc",
    "pandas.tseries.offsets.Week.apply_index": "doc",
    "pandas.tseries.offsets.BDay.apply_index": "doc",
    "pandas.tseries.offsets.CDay.apply_index": "doc",
    "pandas.tseries.offsets.YearEnd.apply_index": "doc",
    "pandas.tseries.offsets.MonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.BYearEnd.apply_index": "doc",
    "pandas.tseries.offsets.YearBegin.apply_index": "doc",
    "pandas.tseries.offsets.BMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.MonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.QuarterEnd.apply_index": "doc",
    "pandas.tseries.offsets.YearOffset.apply_index": "doc",
    "pandas.tseries.offsets.BYearBegin.apply_index": "doc",
    "pandas.tseries.offsets.CBMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.BusinessDay.apply_index": "doc",
    "pandas.tseries.offsets.MonthOffset.apply_index": "doc",
    "pandas.tseries.offsets.BQuarterEnd.apply_index": "doc",
    "pandas.tseries.offsets.BMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.QuarterBegin.apply_index": "doc",
    "pandas.tseries.offsets.CBMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.QuarterOffset.apply_index": "doc",
    "pandas.tseries.offsets.BQuarterBegin.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.apply_index": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.apply_index": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.apply_index": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.apply_index": "doc",
    "pandas.TimedeltaIndex.to_series": "doc",
    "pandas.UInt64Index": "doc",
    "pandas.PeriodIndex": "doc",
    "pandas.PeriodIndex.day": "doc",
    "pandas.PeriodIndex.freq": "doc",
    "pandas.PeriodIndex.hour": "doc",
    "pandas.PeriodIndex.week": "doc",
    "pandas.PeriodIndex.year": "doc",
    "pandas.PeriodIndex.month": "doc",
    "pandas.PeriodIndex.qyear": "doc",
    "pandas.PeriodIndex.minute": "doc",
    "pandas.PeriodIndex.second": "doc",
    "pandas.PeriodIndex.asfreq": "doc",
    "pandas.PeriodIndex.freqstr": "doc",
    "pandas.PeriodIndex.quarter": "doc",
    "pandas.PeriodIndex.weekday": "doc",
    "pandas.PeriodIndex.end_time": "doc",
    "pandas.PeriodIndex.strftime": "doc",
    "pandas.PeriodIndex.dayofweek": "doc",
    "pandas.PeriodIndex.dayofyear": "doc",
    "pandas.PeriodIndex.start_time": "doc",
    "pandas.PeriodIndex.weekofyear": "doc",
    "pandas.PeriodIndex.daysinmonth": "doc",
    "pandas.PeriodIndex.is_leap_year": "doc",
    "pandas.PeriodIndex.to_timestamp": "doc",
    "pandas.PeriodIndex.days_in_month": "doc",
    "pandas.CategoricalIndex.codes": "doc",
    "pandas.IntervalDtype": "doc",
    "pandas.arrays.IntervalArray": "doc",
    "pandas.io.formats.style.Styler.set_precision": "doc",
    "pandas.DataFrame.reset_index": "doc",
    "pandas.Series": "doc",
    "pandas.read_sas": "doc",
    "pandas.Series.T": "doc",
    "pandas.Series.at": "doc",
    "pandas.Series.xs": "doc",
    "pandas.Series.lt": "doc",
    "pandas.Series.gt": "doc",
    "pandas.Series.le": "doc",
    "pandas.Series.ge": "doc",
    "pandas.Series.eq": "doc",
    "pandas.read_table": "doc",
    "pandas.date_range": "doc",
    "pandas.Series.get": "doc",
    "pandas.Series.iat": "doc",
    "pandas.Series.loc": "doc",
    "pandas.Series.pop": "doc",
    "pandas.Series.add": "doc",
    "pandas.Series.sub": "doc",
    "pandas.Series.mul": "doc",
    "pandas.Series.div": "doc",
    "pandas.Series.mod": "doc",
    "pandas.Series.pow": "doc",
    "pandas.Series.dot": "doc",
    "pandas.Series.agg": "doc",
    "pandas.Series.map": "doc",
    "pandas.Series.ewm": "doc",
    "pandas.Series.abs": "doc",
    "pandas.Series.all": "doc",
    "pandas.Series.any": "doc",
    "pandas.Series.cov": "doc",
    "pandas.Series.mad": "doc",
    "pandas.Series.max": "doc",
    "pandas.Series.min": "doc",
    "pandas.Series.sem": "doc",
    "pandas.Series.std": "doc",
    "pandas.Series.sum": "doc",
    "pandas.Series.var": "doc",
    "pandas.set_option": "doc",
    "pandas.Series.size": "doc",
    "pandas.Series.name": "doc",
    "pandas.Series.copy": "doc",
    "pandas.Series.bool": "doc",
    "pandas.Series.iloc": "doc",
    "pandas.Series.keys": "doc",
    "pandas.Series.item": "doc",
    "pandas.Series.radd": "doc",
    "pandas.Series.rsub": "doc",
    "pandas.Series.rmul": "doc",
    "pandas.Series.rdiv": "doc",
    "pandas.Series.rmod": "doc",
    "pandas.Series.rpow": "doc",
    "pandas.Series.pipe": "doc",
    "pandas.Series.clip": "doc",
    "pandas.Series.corr": "doc",
    "pandas.Series.diff": "doc",
    "pandas.Series.kurt": "doc",
    "pandas.Series.mean": "doc",
    "pandas.Series.prod": "doc",
    "pandas.Series.rank": "doc",
    "pandas.Series.skew": "doc",
    "pandas.Series.drop": "doc",
    "pandas.Series.head": "doc",
    "pandas.Series.isin": "doc",
    "pandas.Series.last": "doc",
    "pandas.Series.take": "doc",
    "pandas.Series.tail": "doc",
    "pandas.Series.mask": "doc",
    "pandas.Series.isna": "doc",
    "pandas.Series.view": "doc",
    "pandas.Series.asof": "doc",
    "pandas.Series.plot": "doc",
    "pandas.Series.hist": "doc",
    "pandas.HDFStore.get": "doc",
    "pandas.Series.array": "doc",
    "pandas.Series.dtype": "doc",
    "pandas.Series.shape": "doc",
    "pandas.Series.empty": "doc",
    "pandas.Series.items": "doc",
    "pandas.Series.round": "doc",
    "pandas.Series.apply": "doc",
    "pandas.Series.count": "doc",
    "pandas.Series.align": "doc",
    "pandas.Series.first": "doc",
    "pandas.Series.where": "doc",
    "pandas.Series.notna": "doc",
    "pandas.Series.ravel": "doc",
    "pandas.Series.shift": "doc",
    "pandas.Series.dt.tz": "doc",
    "pandas.Series.attrs": "doc",
    "pandas.Series.nbytes": "doc",
    "pandas.Series.dtypes": "doc",
    "pandas.Series.astype": "doc",
    "pandas.Series.cummax": "doc",
    "pandas.Series.cummin": "doc",
    "pandas.Series.cumsum": "doc",
    "pandas.Series.median": "doc",
    "pandas.Series.unique": "doc",
    "pandas.Series.idxmax": "doc",
    "pandas.Series.idxmin": "doc",
    "pandas.Series.rename": "doc",
    "pandas.Series.sample": "doc",
    "pandas.Series.filter": "doc",
    "pandas.Series.dropna": "doc",
    "pandas.Series.fillna": "doc",
    "pandas.Series.argmin": "doc",
    "pandas.Series.argmax": "doc",
    "pandas.Series.repeat": "doc",
    "pandas.Series.append": "doc",
    "pandas.Series.update": "doc",
    "pandas.Series.asfreq": "doc",
    "pandas.Series.tshift": "doc",
    "pandas.Series.dt.day": "doc",
    "pandas.Series.to_csv": "doc",
    "pandas.Series.to_hdf": "doc",
    "pandas.Series.to_sql": "doc",
    "pandas.DataFrame.get": "doc",
    "pandas.Series.hasnans": "doc",
    "pandas.Series.to_list": "doc",
    "pandas.Series.truediv": "doc",
    "pandas.Series.combine": "doc",
    "pandas.Series.product": "doc",
    "pandas.Series.groupby": "doc",
    "pandas.Series.rolling": "doc",
    "pandas.Series.between": "doc",
    "pandas.Series.cumprod": "doc",
    "pandas.Series.nunique": "doc",
    "pandas.Series.argsort": "doc",
    "pandas.Series.unstack": "doc",
    "pandas.Series.explode": "doc",
    "pandas.Series.squeeze": "doc",
    "pandas.Series.replace": "doc",
    "pandas.Series.at_time": "doc",
    "pandas.Series.dt.date": "doc",
    "pandas.Series.dt.time": "doc",
    "pandas.Series.dt.year": "doc",
    "pandas.Series.dt.hour": "doc",
    "pandas.Series.dt.week": "doc",
    "pandas.Series.dt.freq": "doc",
    "pandas.Series.dt.ceil": "doc",
    "pandas.Series.dt.days": "doc",
    "pandas.Series.str.cat": "doc",
    "pandas.Series.str.get": "doc",
    "pandas.Series.str.len": "doc",
    "pandas.Series.str.pad": "doc",
    "pandas.Series.to_dict": "doc",
    "pandas.Series.to_json": "doc",
    "pandas.DataFrame.axes": "doc",
    "pandas.DataFrame.take": "doc",
    "pandas.plotting.table": "doc",
    "pandas.HDFStore.groups": "doc",
    "pandas.Series.to_numpy": "doc",
    "pandas.Series.__iter__": "doc",
    "pandas.Series.floordiv": "doc",
    "pandas.Series.rtruediv": "doc",
    "pandas.Series.autocorr": "doc",
    "pandas.Series.describe": "doc",
    "pandas.Series.nlargest": "doc",
    "pandas.Series.quantile": "doc",
    "pandas.Series.kurtosis": "doc",
    "pandas.Series.truncate": "doc",
    "pandas.Series.resample": "doc",
    "pandas.Series.dt.month": "doc",
    "pandas.Series.dt.round": "doc",
    "pandas.Series.dt.floor": "doc",
    "pandas.Series.dt.qyear": "doc",
    "pandas.Series.str.find": "doc",
    "pandas.Series.str.join": "doc",
    "pandas.Series.str.wrap": "doc",
    "pandas.Series.plot.bar": "doc",
    "pandas.Series.plot.box": "doc",
    "pandas.Series.plot.pie": "doc",
    "pandas.Series.to_excel": "doc",
    "pandas.Series.to_frame": "doc",
    "pandas.Series.to_latex": "doc",
    "pandas.DataFrame.style": "doc",
    "pandas.api.types.is_re": "doc",
    "pandas.Series.to_period": "doc",
    "pandas.Series.__array__": "doc",
    "pandas.Series.iteritems": "doc",
    "pandas.Series.rfloordiv": "doc",
    "pandas.Series.aggregate": "doc",
    "pandas.Series.transform": "doc",
    "pandas.Series.expanding": "doc",
    "pandas.Series.factorize": "doc",
    "pandas.Series.nsmallest": "doc",
    "pandas.Series.is_unique": "doc",
    "pandas.Series.droplevel": "doc",
    "pandas.Series.swaplevel": "doc",
    "pandas.Series.dt.timetz": "doc",
    "pandas.Series.dt.minute": "doc",
    "pandas.Series.dt.second": "doc",
    "pandas.Series.str.count": "doc",
    "pandas.Series.str.ljust": "doc",
    "pandas.Series.str.lower": "doc",
    "pandas.Series.str.match": "doc",
    "pandas.Series.str.rfind": "doc",
    "pandas.Series.str.rjust": "doc",
    "pandas.Series.str.slice": "doc",
    "pandas.Series.str.split": "doc",
    "pandas.Series.str.strip": "doc",
    "pandas.Series.str.title": "doc",
    "pandas.Series.str.upper": "doc",
    "pandas.Series.str.zfill": "doc",
    "pandas.Series.plot.area": "doc",
    "pandas.Series.plot.barh": "doc",
    "pandas.Series.plot.hist": "doc",
    "pandas.Series.plot.line": "doc",
    "pandas.Series.to_pickle": "doc",
    "pandas.Series.to_xarray": "doc",
    "pandas.Series.to_string": "doc",
    "pandas.DataFrame.dtypes": "doc",
    "pandas.DataFrame.rename": "doc",
    "pandas.Timestamp.tzname": "doc",
    "pandas.Series.pct_change": "doc",
    "pandas.Series.duplicated": "doc",
    "pandas.Series.add_prefix": "doc",
    "pandas.Series.add_suffix": "doc",
    "pandas.Series.tz_convert": "doc",
    "pandas.Series.dt.weekday": "doc",
    "pandas.Series.dt.quarter": "doc",
    "pandas.Series.dt.seconds": "doc",
    "pandas.Series.str.center": "doc",
    "pandas.Series.str.decode": "doc",
    "pandas.Series.str.encode": "doc",
    "pandas.Series.str.lstrip": "doc",
    "pandas.Series.str.repeat": "doc",
    "pandas.Series.str.rstrip": "doc",
    "pandas.Series.str.rsplit": "doc",
    "pandas.DataFrame.at_time": "doc",
    "pandas.DataFrame.replace": "doc",
    "pandas.Timestamp.replace": "doc",
    "pandas.api.types.is_bool": "doc",
    "pandas.Series.rename_axis": "doc",
    "pandas.Series.interpolate": "doc",
    "pandas.Series.tz_localize": "doc",
    "pandas.Series.slice_shift": "doc",
    "pandas.Series.dt.strftime": "doc",
    "pandas.Series.dt.day_name": "doc",
    "pandas.Series.dt.end_time": "doc",
    "pandas.Series.str.extract": "doc",
    "pandas.Series.str.findall": "doc",
    "pandas.Series.str.replace": "doc",
    "pandas.Series.str.isalnum": "doc",
    "pandas.Series.str.isalpha": "doc",
    "pandas.Series.str.isdigit": "doc",
    "pandas.Series.str.isspace": "doc",
    "pandas.Series.str.islower": "doc",
    "pandas.Series.str.isupper": "doc",
    "pandas.Series.str.istitle": "doc",
    "pandas.Series.cat.ordered": "doc",
    "pandas.Series.to_markdown": "doc",
    "pandas.DataFrame.swapaxes": "doc",
    "pandas.DataFrame.resample": "doc",
    "pandas.DataFrame.to_latex": "doc",
    "pandas.Timestamp.day_name": "doc",
    "pandas.api.types.is_float": "doc",
    "pandas.Series.memory_usage": "doc",
    "pandas.Series.to_timestamp": "doc",
    "pandas.Series.is_monotonic": "doc",
    "pandas.Series.value_counts": "doc",
    "pandas.Series.reindex_like": "doc",
    "pandas.Series.searchsorted": "doc",
    "pandas.Series.between_time": "doc",
    "pandas.Series.dt.dayofweek": "doc",
    "pandas.Series.dt.dayofyear": "doc",
    "pandas.Series.dt.to_period": "doc",
    "pandas.Series.dt.normalize": "doc",
    "pandas.Series.str.casefold": "doc",
    "pandas.Series.str.contains": "doc",
    "pandas.Series.str.endswith": "doc",
    "pandas.Series.str.swapcase": "doc",
    "pandas.Series.plot.density": "doc",
    "pandas.Series.to_clipboard": "doc",
    "pandas.DataFrame.nsmallest": "doc",
    "pandas.tseries.offsets.Day": "doc",
    "pandas.api.types.is_sparse": "doc",
    "pandas.api.types.is_number": "doc",
    "pandas.api.types.is_scalar": "doc",
    "pandas.Series.infer_objects": "doc",
    "pandas.Series.combine_first": "doc",
    "pandas.Series.dt.nanosecond": "doc",
    "pandas.Series.dt.weekofyear": "doc",
    "pandas.Series.dt.tz_convert": "doc",
    "pandas.Series.dt.month_name": "doc",
    "pandas.Series.dt.start_time": "doc",
    "pandas.Series.dt.components": "doc",
    "pandas.Series.str.normalize": "doc",
    "pandas.Series.str.partition": "doc",
    "pandas.Series.str.translate": "doc",
    "pandas.Series.str.isnumeric": "doc",
    "pandas.Series.str.isdecimal": "doc",
    "pandas.Series.sparse.to_coo": "doc",
    "pandas.DataFrame.itertuples": "doc",
    "pandas.DataFrame.pct_change": "doc",
    "pandas.DataFrame.to_parquet": "doc",
    "pandas.tseries.offsets.Week": "doc",
    "pandas.tseries.offsets.Tick": "doc",
    "pandas.tseries.offsets.Hour": "doc",
    "pandas.tseries.offsets.Nano": "doc",
    "pandas.tseries.offsets.BDay": "doc",
    "pandas.tseries.offsets.CDay": "doc",
    "pandas.api.types.is_complex": "doc",
    "pandas.api.types.is_integer": "doc",
    "pandas.Series.reorder_levels": "doc",
    "pandas.Series.dt.microsecond": "doc",
    "pandas.Series.dt.is_year_end": "doc",
    "pandas.Series.dt.daysinmonth": "doc",
    "pandas.Series.dt.tz_localize": "doc",
    "pandas.Series.dt.nanoseconds": "doc",
    "pandas.Series.str.capitalize": "doc",
    "pandas.Series.str.extractall": "doc",
    "pandas.Series.str.rpartition": "doc",
    "pandas.Series.str.startswith": "doc",
    "pandas.Series.cat.categories": "doc",
    "pandas.Series.cat.as_ordered": "doc",
    "pandas.Series.sparse.npoints": "doc",
    "pandas.Series.sparse.density": "doc",
    "pandas.tseries.offsets.Milli": "doc",
    "pandas.tseries.offsets.Micro": "doc",
    "pandas.api.types.infer_dtype": "doc",
    "pandas.api.types.is_iterator": "doc",
    "pandas.api.types.is_hashable": "doc",
    "pandas.api.types.is_interval": "doc",
    "pandas.Series.drop_duplicates": "doc",
    "pandas.Series.dt.is_month_end": "doc",
    "pandas.Series.dt.is_leap_year": "doc",
    "pandas.Series.dt.microseconds": "doc",
    "pandas.Series.sparse.from_coo": "doc",
    "pandas.Categorical.categories": "doc",
    "pandas.tseries.offsets.FY5253": "doc",
    "pandas.tseries.offsets.Easter": "doc",
    "pandas.tseries.offsets.Minute": "doc",
    "pandas.tseries.offsets.Second": "doc",
    "pandas.api.types.pandas_dtype": "doc",
    "pandas.api.types.is_dict_like": "doc",
    "pandas.api.types.is_file_like": "doc",
    "pandas.api.types.is_list_like": "doc",
    "pandas.Series.dt.is_year_start": "doc",
    "pandas.Series.dt.days_in_month": "doc",
    "pandas.Series.dt.to_pydatetime": "doc",
    "pandas.Series.dt.total_seconds": "doc",
    "pandas.Series.cat.as_unordered": "doc",
    "pandas.tseries.offsets.YearEnd": "doc",
    "pandas.io.formats.style.Styler": "doc",
    "pandas.api.types.is_bool_dtype": "doc",
    "pandas.Series.dt.is_month_start": "doc",
    "pandas.Series.dt.is_quarter_end": "doc",
    "pandas.Series.dt.to_pytimedelta": "doc",
    "pandas.Series.str.slice_replace": "doc",
    "pandas.tseries.offsets.MonthEnd": "doc",
    "pandas.tseries.offsets.BYearEnd": "doc",
    "pandas.tseries.offsets.Day.kwds": "doc",
    "pandas.tseries.offsets.Day.name": "doc",
    "pandas.tseries.offsets.Day.copy": "doc",
    "pandas.api.types.is_float_dtype": "doc",
    "pandas.api.types.is_int64_dtype": "doc",
    "pandas.api.types.is_named_tuple": "doc",
    "pandas.api.types.is_categorical": "doc",
    "pandas.Series.cat.add_categories": "doc",
    "pandas.tseries.offsets.Week.kwds": "doc",
    "pandas.tseries.offsets.Week.name": "doc",
    "pandas.tseries.offsets.Week.copy": "doc",
    "pandas.tseries.offsets.YearBegin": "doc",
    "pandas.tseries.offsets.Tick.kwds": "doc",
    "pandas.tseries.offsets.Tick.name": "doc",
    "pandas.tseries.offsets.Tick.copy": "doc",
    "pandas.tseries.offsets.Day.delta": "doc",
    "pandas.tseries.offsets.Day.nanos": "doc",
    "pandas.tseries.offsets.Hour.kwds": "doc",
    "pandas.tseries.offsets.Hour.name": "doc",
    "pandas.tseries.offsets.Hour.copy": "doc",
    "pandas.tseries.offsets.Nano.kwds": "doc",
    "pandas.tseries.offsets.Nano.name": "doc",
    "pandas.tseries.offsets.Nano.copy": "doc",
    "pandas.tseries.offsets.BDay.base": "doc",
    "pandas.tseries.offsets.BDay.kwds": "doc",
    "pandas.tseries.offsets.BDay.name": "doc",
    "pandas.tseries.offsets.BDay.copy": "doc",
    "pandas.tseries.offsets.BMonthEnd": "doc",
    "pandas.tseries.offsets.CDay.base": "doc",
    "pandas.tseries.offsets.CDay.kwds": "doc",
    "pandas.tseries.offsets.CDay.name": "doc",
    "pandas.tseries.offsets.CDay.copy": "doc",
    "pandas.api.types.is_object_dtype": "doc",
    "pandas.api.types.is_period_dtype": "doc",
    "pandas.api.types.is_string_dtype": "doc",
    "pandas.Series.dt.is_quarter_start": "doc",
    "pandas.tseries.offsets.DateOffset": "doc",
    "pandas.tseries.offsets.MonthBegin": "doc",
    "pandas.tseries.offsets.Week.nanos": "doc",
    "pandas.tseries.offsets.Week.apply": "doc",
    "pandas.tseries.offsets.QuarterEnd": "doc",
    "pandas.tseries.offsets.YearOffset": "doc",
    "pandas.tseries.offsets.BYearBegin": "doc",
    "pandas.tseries.offsets.Tick.delta": "doc",
    "pandas.tseries.offsets.Tick.nanos": "doc",
    "pandas.tseries.offsets.Hour.delta": "doc",
    "pandas.tseries.offsets.Hour.nanos": "doc",
    "pandas.tseries.offsets.Milli.kwds": "doc",
    "pandas.tseries.offsets.Milli.name": "doc",
    "pandas.tseries.offsets.Milli.copy": "doc",
    "pandas.tseries.offsets.Micro.kwds": "doc",
    "pandas.tseries.offsets.Micro.name": "doc",
    "pandas.tseries.offsets.Micro.copy": "doc",
    "pandas.tseries.offsets.Nano.delta": "doc",
    "pandas.tseries.offsets.Nano.nanos": "doc",
    "pandas.tseries.offsets.BDay.nanos": "doc",
    "pandas.tseries.offsets.BDay.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd": "doc",
    "pandas.tseries.offsets.CDay.nanos": "doc",
    "pandas.tseries.offsets.CDay.apply": "doc",
    "pandas.api.types.is_complex_dtype": "doc",
    "pandas.api.types.is_integer_dtype": "doc",
    "pandas.api.types.is_numeric_dtype": "doc",
    "pandas.api.types.is_re_compilable": "doc",
    "pandas.CategoricalDtype.categories": "doc",
    "pandas.CategoricalIndex.categories": "doc",
    "pandas.tseries.offsets.BusinessDay": "doc",
    "pandas.tseries.offsets.MonthOffset": "doc",
    "pandas.tseries.offsets.WeekOfMonth": "doc",
    "pandas.tseries.offsets.BQuarterEnd": "doc",
    "pandas.tseries.offsets.FY5253.kwds": "doc",
    "pandas.tseries.offsets.FY5253.name": "doc",
    "pandas.tseries.offsets.FY5253.copy": "doc",
    "pandas.tseries.offsets.Easter.kwds": "doc",
    "pandas.tseries.offsets.Easter.name": "doc",
    "pandas.tseries.offsets.Easter.copy": "doc",
    "pandas.tseries.offsets.Day.freqstr": "doc",
    "pandas.tseries.offsets.Minute.kwds": "doc",
    "pandas.tseries.offsets.Minute.name": "doc",
    "pandas.tseries.offsets.Minute.copy": "doc",
    "pandas.tseries.offsets.Second.kwds": "doc",
    "pandas.tseries.offsets.Second.name": "doc",
    "pandas.tseries.offsets.Second.copy": "doc",
    "pandas.tseries.offsets.Milli.delta": "doc",
    "pandas.tseries.offsets.Milli.nanos": "doc",
    "pandas.tseries.offsets.Micro.delta": "doc",
    "pandas.tseries.offsets.Micro.nanos": "doc",
    "pandas.tseries.offsets.BDay.offset": "doc",
    "pandas.tseries.offsets.BMonthBegin": "doc",
    "pandas.tseries.offsets.CDay.offset": "doc",
    "pandas.core.groupby.GroupBy.groups": "doc",
    "pandas.core.resample.Resampler.pad": "doc",
    "pandas.core.resample.Resampler.max": "doc",
    "pandas.core.resample.Resampler.min": "doc",
    "pandas.core.resample.Resampler.sem": "doc",
    "pandas.core.resample.Resampler.std": "doc",
    "pandas.core.resample.Resampler.sum": "doc",
    "pandas.core.resample.Resampler.var": "doc",
    "pandas.io.formats.style.Styler.env": "doc",
    "pandas.io.formats.style.Styler.bar": "doc",
    "pandas.io.formats.style.Styler.use": "doc",
    "pandas.api.types.is_extension_type": "doc",
    "pandas.api.types.is_interval_dtype": "doc",
    "pandas.Series.cat.rename_categories": "doc",
    "pandas.Series.cat.remove_categories": "doc",
    "pandas.tseries.offsets.BusinessHour": "doc",
    "pandas.tseries.offsets.SemiMonthEnd": "doc",
    "pandas.tseries.offsets.Week.freqstr": "doc",
    "pandas.tseries.offsets.QuarterBegin": "doc",
    "pandas.tseries.offsets.YearEnd.kwds": "doc",
    "pandas.tseries.offsets.YearEnd.name": "doc",
    "pandas.tseries.offsets.YearEnd.copy": "doc",
    "pandas.tseries.offsets.FY5253.nanos": "doc",
    "pandas.tseries.offsets.FY5253.apply": "doc",
    "pandas.tseries.offsets.Easter.nanos": "doc",
    "pandas.tseries.offsets.Easter.apply": "doc",
    "pandas.tseries.offsets.Tick.freqstr": "doc",
    "pandas.tseries.offsets.Day.onOffset": "doc",
    "pandas.tseries.offsets.Day.__call__": "doc",
    "pandas.tseries.offsets.Hour.freqstr": "doc",
    "pandas.tseries.offsets.Minute.delta": "doc",
    "pandas.tseries.offsets.Minute.nanos": "doc",
    "pandas.tseries.offsets.Second.delta": "doc",
    "pandas.tseries.offsets.Second.nanos": "doc",
    "pandas.tseries.offsets.Nano.freqstr": "doc",
    "pandas.tseries.offsets.BDay.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthBegin": "doc",
    "pandas.tseries.offsets.CDay.freqstr": "doc",
    "pandas.core.resample.Resampler.pipe": "doc",
    "pandas.core.resample.Resampler.last": "doc",
    "pandas.core.resample.Resampler.mean": "doc",
    "pandas.core.resample.Resampler.ohlc": "doc",
    "pandas.core.resample.Resampler.prod": "doc",
    "pandas.core.resample.Resampler.size": "doc",
    "pandas.io.formats.style.Styler.pipe": "doc",
    "pandas.api.types.union_categoricals": "doc",
    "pandas.Series.cat.reorder_categories": "doc",
    "pandas.tseries.offsets.MonthEnd.kwds": "doc",
    "pandas.tseries.offsets.MonthEnd.name": "doc",
    "pandas.tseries.offsets.MonthEnd.copy": "doc",
    "pandas.tseries.offsets.Week.onOffset": "doc",
    "pandas.tseries.offsets.Week.__call__": "doc",
    "pandas.tseries.offsets.QuarterOffset": "doc",
    "pandas.tseries.offsets.BQuarterBegin": "doc",
    "pandas.tseries.offsets.BYearEnd.kwds": "doc",
    "pandas.tseries.offsets.BYearEnd.name": "doc",
    "pandas.tseries.offsets.BYearEnd.copy": "doc",
    "pandas.tseries.offsets.YearEnd.nanos": "doc",
    "pandas.tseries.offsets.YearEnd.apply": "doc",
    "pandas.tseries.offsets.FY5253Quarter": "doc",
    "pandas.tseries.offsets.Tick.onOffset": "doc",
    "pandas.tseries.offsets.Tick.__call__": "doc",
    "pandas.tseries.offsets.Day.normalize": "doc",
    "pandas.tseries.offsets.Day.rule_code": "doc",
    "pandas.tseries.offsets.Hour.onOffset": "doc",
    "pandas.tseries.offsets.Hour.__call__": "doc",
    "pandas.tseries.offsets.Milli.freqstr": "doc",
    "pandas.tseries.offsets.Micro.freqstr": "doc",
    "pandas.tseries.offsets.Nano.onOffset": "doc",
    "pandas.tseries.offsets.Nano.__call__": "doc",
    "pandas.tseries.offsets.BDay.onOffset": "doc",
    "pandas.tseries.offsets.BDay.rollback": "doc",
    "pandas.tseries.offsets.BDay.__call__": "doc",
    "pandas.tseries.offsets.CDay.onOffset": "doc",
    "pandas.tseries.offsets.CDay.rollback": "doc",
    "pandas.tseries.offsets.CDay.__call__": "doc",
    "pandas.core.resample.Resampler.apply": "doc",
    "pandas.core.resample.Resampler.ffill": "doc",
    "pandas.core.resample.Resampler.bfill": "doc",
    "pandas.core.resample.Resampler.count": "doc",
    "pandas.core.resample.Resampler.first": "doc",
    "pandas.io.formats.style.Styler.apply": "doc",
    "pandas.io.formats.style.Styler.where": "doc",
    "pandas.io.formats.style.Styler.clear": "doc",
    "pandas.api.types.is_datetime64_dtype": "doc",
    "pandas.Series.is_monotonic_increasing": "doc",
    "pandas.Series.is_monotonic_decreasing": "doc",
    "pandas.tseries.offsets.MonthEnd.nanos": "doc",
    "pandas.tseries.offsets.MonthEnd.apply": "doc",
    "pandas.tseries.offsets.SemiMonthBegin": "doc",
    "pandas.tseries.offsets.Week.normalize": "doc",
    "pandas.tseries.offsets.Week.rule_code": "doc",
    "pandas.tseries.offsets.BYearEnd.nanos": "doc",
    "pandas.tseries.offsets.BYearEnd.apply": "doc",
    "pandas.tseries.offsets.YearBegin.kwds": "doc",
    "pandas.tseries.offsets.YearBegin.name": "doc",
    "pandas.tseries.offsets.YearBegin.copy": "doc",
    "pandas.tseries.offsets.FY5253.freqstr": "doc",
    "pandas.tseries.offsets.Easter.freqstr": "doc",
    "pandas.tseries.offsets.Tick.normalize": "doc",
    "pandas.tseries.offsets.Tick.rule_code": "doc",
    "pandas.tseries.offsets.Day.isAnchored": "doc",
    "pandas.tseries.offsets.Hour.normalize": "doc",
    "pandas.tseries.offsets.Hour.rule_code": "doc",
    "pandas.tseries.offsets.Minute.freqstr": "doc",
    "pandas.tseries.offsets.Second.freqstr": "doc",
    "pandas.tseries.offsets.Milli.onOffset": "doc",
    "pandas.tseries.offsets.Milli.__call__": "doc",
    "pandas.tseries.offsets.Micro.onOffset": "doc",
    "pandas.tseries.offsets.Micro.__call__": "doc",
    "pandas.tseries.offsets.Nano.normalize": "doc",
    "pandas.tseries.offsets.Nano.rule_code": "doc",
    "pandas.tseries.offsets.BDay.normalize": "doc",
    "pandas.tseries.offsets.BDay.rule_code": "doc",
    "pandas.tseries.offsets.BMonthEnd.base": "doc",
    "pandas.tseries.offsets.BMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.BMonthEnd.name": "doc",
    "pandas.tseries.offsets.BMonthEnd.copy": "doc",
    "pandas.tseries.offsets.CDay.normalize": "doc",
    "pandas.tseries.offsets.CDay.rule_code": "doc",
    "pandas.core.resample.Resampler.groups": "doc",
    "pandas.core.resample.Resampler.fillna": "doc",
    "pandas.core.resample.Resampler.asfreq": "doc",
    "pandas.core.resample.Resampler.median": "doc",
    "pandas.io.formats.style.Styler.loader": "doc",
    "pandas.io.formats.style.Styler.format": "doc",
    "pandas.io.formats.style.Styler.export": "doc",
    "pandas.api.types.is_categorical_dtype": "doc",
    "pandas.api.types.is_timedelta64_dtype": "doc",
    "pandas.io.stata.StataReader.data_label": "doc",
    "pandas.tseries.offsets.DateOffset.kwds": "doc",
    "pandas.tseries.offsets.DateOffset.name": "doc",
    "pandas.tseries.offsets.DateOffset.copy": "doc",
    "pandas.tseries.offsets.MonthBegin.kwds": "doc",
    "pandas.tseries.offsets.MonthBegin.name": "doc",
    "pandas.tseries.offsets.MonthBegin.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset": "doc",
    "pandas.tseries.offsets.Week.isAnchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth": "doc",
    "pandas.tseries.offsets.QuarterEnd.kwds": "doc",
    "pandas.tseries.offsets.QuarterEnd.name": "doc",
    "pandas.tseries.offsets.QuarterEnd.copy": "doc",
    "pandas.tseries.offsets.YearOffset.kwds": "doc",
    "pandas.tseries.offsets.YearOffset.name": "doc",
    "pandas.tseries.offsets.YearOffset.copy": "doc",
    "pandas.tseries.offsets.BYearBegin.kwds": "doc",
    "pandas.tseries.offsets.BYearBegin.name": "doc",
    "pandas.tseries.offsets.BYearBegin.copy": "doc",
    "pandas.tseries.offsets.YearEnd.freqstr": "doc",
    "pandas.tseries.offsets.YearBegin.nanos": "doc",
    "pandas.tseries.offsets.YearBegin.apply": "doc",
    "pandas.tseries.offsets.FY5253.onOffset": "doc",
    "pandas.tseries.offsets.FY5253.__call__": "doc",
    "pandas.tseries.offsets.Easter.onOffset": "doc",
    "pandas.tseries.offsets.Easter.__call__": "doc",
    "pandas.tseries.offsets.Tick.isAnchored": "doc",
    "pandas.tseries.offsets.Day.is_anchored": "doc",
    "pandas.tseries.offsets.Hour.isAnchored": "doc",
    "pandas.tseries.offsets.Minute.onOffset": "doc",
    "pandas.tseries.offsets.Minute.__call__": "doc",
    "pandas.tseries.offsets.Second.onOffset": "doc",
    "pandas.tseries.offsets.Second.__call__": "doc",
    "pandas.tseries.offsets.Milli.normalize": "doc",
    "pandas.tseries.offsets.Milli.rule_code": "doc",
    "pandas.tseries.offsets.Micro.normalize": "doc",
    "pandas.tseries.offsets.Micro.rule_code": "doc",
    "pandas.tseries.offsets.Nano.isAnchored": "doc",
    "pandas.tseries.offsets.BDay.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.BMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd.base": "doc",
    "pandas.tseries.offsets.CBMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.CBMonthEnd.name": "doc",
    "pandas.tseries.offsets.CBMonthEnd.copy": "doc",
    "pandas.tseries.offsets.CDay.isAnchored": "doc",
    "pandas.core.groupby.GroupBy.pct_change": "doc",
    "pandas.core.resample.Resampler.nearest": "doc",
    "pandas.core.resample.Resampler.nunique": "doc",
    "pandas.api.types.is_datetime64tz_dtype": "doc",
    "pandas.tseries.offsets.DateOffset.nanos": "doc",
    "pandas.tseries.offsets.DateOffset.apply": "doc",
    "pandas.tseries.offsets.BusinessDay.kwds": "doc",
    "pandas.tseries.offsets.BusinessDay.name": "doc",
    "pandas.tseries.offsets.BusinessDay.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.kwds": "doc",
    "pandas.tseries.offsets.MonthOffset.name": "doc",
    "pandas.tseries.offsets.MonthOffset.copy": "doc",
    "pandas.tseries.offsets.MonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.MonthBegin.nanos": "doc",
    "pandas.tseries.offsets.MonthBegin.apply": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd": "doc",
    "pandas.tseries.offsets.Week.is_anchored": "doc",
    "pandas.tseries.offsets.WeekOfMonth.kwds": "doc",
    "pandas.tseries.offsets.WeekOfMonth.name": "doc",
    "pandas.tseries.offsets.WeekOfMonth.copy": "doc",
    "pandas.tseries.offsets.BQuarterEnd.kwds": "doc",
    "pandas.tseries.offsets.BQuarterEnd.name": "doc",
    "pandas.tseries.offsets.BQuarterEnd.copy": "doc",
    "pandas.tseries.offsets.QuarterEnd.nanos": "doc",
    "pandas.tseries.offsets.QuarterEnd.apply": "doc",
    "pandas.tseries.offsets.YearOffset.nanos": "doc",
    "pandas.tseries.offsets.YearOffset.apply": "doc",
    "pandas.tseries.offsets.BYearEnd.freqstr": "doc",
    "pandas.tseries.offsets.BYearBegin.nanos": "doc",
    "pandas.tseries.offsets.BYearBegin.apply": "doc",
    "pandas.tseries.offsets.YearEnd.onOffset": "doc",
    "pandas.tseries.offsets.YearEnd.__call__": "doc",
    "pandas.tseries.offsets.FY5253.normalize": "doc",
    "pandas.tseries.offsets.FY5253.rule_code": "doc",
    "pandas.tseries.offsets.Easter.normalize": "doc",
    "pandas.tseries.offsets.Easter.rule_code": "doc",
    "pandas.tseries.offsets.Tick.is_anchored": "doc",
    "pandas.tseries.offsets.Day.is_on_offset": "doc",
    "pandas.tseries.offsets.Hour.is_anchored": "doc",
    "pandas.tseries.offsets.Minute.normalize": "doc",
    "pandas.tseries.offsets.Minute.rule_code": "doc",
    "pandas.tseries.offsets.Second.normalize": "doc",
    "pandas.tseries.offsets.Second.rule_code": "doc",
    "pandas.tseries.offsets.Milli.isAnchored": "doc",
    "pandas.tseries.offsets.Micro.isAnchored": "doc",
    "pandas.tseries.offsets.Nano.is_anchored": "doc",
    "pandas.tseries.offsets.BDay.is_anchored": "doc",
    "pandas.tseries.offsets.BDay.rollforward": "doc",
    "pandas.tseries.offsets.BMonthBegin.base": "doc",
    "pandas.tseries.offsets.BMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.BMonthBegin.name": "doc",
    "pandas.tseries.offsets.BMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CBMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.CBMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CDay.is_anchored": "doc",
    "pandas.tseries.offsets.CDay.rollforward": "doc",
    "pandas.core.resample.Resampler.__iter__": "doc",
    "pandas.core.resample.Resampler.backfill": "doc",
    "pandas.core.resample.Resampler.quantile": "doc",
    "pandas.io.formats.style.Styler.template": "doc",
    "pandas.io.formats.style.Styler.applymap": "doc",
    "pandas.io.formats.style.Styler.to_excel": "doc",
    "pandas.api.types.is_datetime64_ns_dtype": "doc",
    "pandas.tseries.offsets.BusinessDay.nanos": "doc",
    "pandas.tseries.offsets.BusinessDay.apply": "doc",
    "pandas.tseries.offsets.BusinessHour.kwds": "doc",
    "pandas.tseries.offsets.BusinessHour.name": "doc",
    "pandas.tseries.offsets.BusinessHour.copy": "doc",
    "pandas.tseries.offsets.CustomBusinessDay": "doc",
    "pandas.tseries.offsets.MonthOffset.nanos": "doc",
    "pandas.tseries.offsets.MonthOffset.apply": "doc",
    "pandas.tseries.offsets.MonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.MonthEnd.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.name": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.copy": "doc",
    "pandas.tseries.offsets.Week.is_on_offset": "doc",
    "pandas.tseries.offsets.WeekOfMonth.nanos": "doc",
    "pandas.tseries.offsets.WeekOfMonth.apply": "doc",
    "pandas.tseries.offsets.BQuarterEnd.nanos": "doc",
    "pandas.tseries.offsets.BQuarterEnd.apply": "doc",
    "pandas.tseries.offsets.QuarterBegin.kwds": "doc",
    "pandas.tseries.offsets.QuarterBegin.name": "doc",
    "pandas.tseries.offsets.QuarterBegin.copy": "doc",
    "pandas.tseries.offsets.BYearEnd.onOffset": "doc",
    "pandas.tseries.offsets.BYearEnd.__call__": "doc",
    "pandas.tseries.offsets.YearEnd.normalize": "doc",
    "pandas.tseries.offsets.YearEnd.rule_code": "doc",
    "pandas.tseries.offsets.YearBegin.freqstr": "doc",
    "pandas.tseries.offsets.FY5253.isAnchored": "doc",
    "pandas.tseries.offsets.Easter.isAnchored": "doc",
    "pandas.tseries.offsets.Tick.is_on_offset": "doc",
    "pandas.tseries.offsets.Hour.is_on_offset": "doc",
    "pandas.tseries.offsets.Minute.isAnchored": "doc",
    "pandas.tseries.offsets.Second.isAnchored": "doc",
    "pandas.tseries.offsets.Milli.is_anchored": "doc",
    "pandas.tseries.offsets.Micro.is_anchored": "doc",
    "pandas.tseries.offsets.Nano.is_on_offset": "doc",
    "pandas.tseries.offsets.BDay.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.BMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.BMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CBMonthEnd.offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.base": "doc",
    "pandas.tseries.offsets.CBMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.CBMonthBegin.name": "doc",
    "pandas.tseries.offsets.CBMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CDay.is_on_offset": "doc",
    "pandas.core.resample.Resampler.aggregate": "doc",
    "pandas.core.resample.Resampler.transform": "doc",
    "pandas.api.types.is_datetime64_any_dtype": "doc",
    "pandas.api.types.is_signed_integer_dtype": "doc",
    "pandas.api.types.is_timedelta64_ns_dtype": "doc",
    "pandas.tseries.offsets.DateOffset.freqstr": "doc",
    "pandas.tseries.offsets.BusinessHour.nanos": "doc",
    "pandas.tseries.offsets.BusinessHour.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour": "doc",
    "pandas.tseries.offsets.MonthEnd.normalize": "doc",
    "pandas.tseries.offsets.MonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.MonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.apply": "doc",
    "pandas.tseries.offsets.QuarterOffset.kwds": "doc",
    "pandas.tseries.offsets.QuarterOffset.name": "doc",
    "pandas.tseries.offsets.QuarterOffset.copy": "doc",
    "pandas.tseries.offsets.BQuarterBegin.kwds": "doc",
    "pandas.tseries.offsets.BQuarterBegin.name": "doc",
    "pandas.tseries.offsets.BQuarterBegin.copy": "doc",
    "pandas.tseries.offsets.QuarterEnd.freqstr": "doc",
    "pandas.tseries.offsets.QuarterBegin.nanos": "doc",
    "pandas.tseries.offsets.QuarterBegin.apply": "doc",
    "pandas.tseries.offsets.YearOffset.freqstr": "doc",
    "pandas.tseries.offsets.BYearEnd.normalize": "doc",
    "pandas.tseries.offsets.BYearEnd.rule_code": "doc",
    "pandas.tseries.offsets.BYearBegin.freqstr": "doc",
    "pandas.tseries.offsets.YearEnd.isAnchored": "doc",
    "pandas.tseries.offsets.YearBegin.onOffset": "doc",
    "pandas.tseries.offsets.YearBegin.__call__": "doc",
    "pandas.tseries.offsets.FY5253.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.kwds": "doc",
    "pandas.tseries.offsets.FY5253Quarter.name": "doc",
    "pandas.tseries.offsets.FY5253Quarter.copy": "doc",
    "pandas.tseries.offsets.Easter.is_anchored": "doc",
    "pandas.tseries.offsets.Minute.is_anchored": "doc",
    "pandas.tseries.offsets.Second.is_anchored": "doc",
    "pandas.tseries.offsets.Milli.is_on_offset": "doc",
    "pandas.tseries.offsets.Micro.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.BMonthEnd.rollback": "doc",
    "pandas.tseries.offsets.BMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CBMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.CBMonthBegin.apply": "doc",
    "pandas.core.groupby.DataFrameGroupBy.take": "doc",
    "pandas.api.types.is_extension_array_dtype": "doc",
    "pandas.Series.cat.remove_unused_categories": "doc",
    "pandas.tseries.offsets.DateOffset.onOffset": "doc",
    "pandas.tseries.offsets.DateOffset.__call__": "doc",
    "pandas.tseries.offsets.BusinessDay.freqstr": "doc",
    "pandas.tseries.offsets.MonthOffset.freqstr": "doc",
    "pandas.tseries.offsets.MonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.MonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.MonthBegin.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.name": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.copy": "doc",
    "pandas.tseries.offsets.WeekOfMonth.freqstr": "doc",
    "pandas.tseries.offsets.QuarterOffset.nanos": "doc",
    "pandas.tseries.offsets.QuarterOffset.apply": "doc",
    "pandas.tseries.offsets.BQuarterEnd.freqstr": "doc",
    "pandas.tseries.offsets.BQuarterBegin.nanos": "doc",
    "pandas.tseries.offsets.BQuarterBegin.apply": "doc",
    "pandas.tseries.offsets.QuarterEnd.onOffset": "doc",
    "pandas.tseries.offsets.QuarterEnd.__call__": "doc",
    "pandas.tseries.offsets.YearOffset.onOffset": "doc",
    "pandas.tseries.offsets.YearOffset.__call__": "doc",
    "pandas.tseries.offsets.BYearEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BYearBegin.onOffset": "doc",
    "pandas.tseries.offsets.BYearBegin.__call__": "doc",
    "pandas.tseries.offsets.YearEnd.is_anchored": "doc",
    "pandas.tseries.offsets.YearBegin.normalize": "doc",
    "pandas.tseries.offsets.YearBegin.rule_code": "doc",
    "pandas.tseries.offsets.FY5253.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.nanos": "doc",
    "pandas.tseries.offsets.FY5253Quarter.apply": "doc",
    "pandas.tseries.offsets.Easter.is_on_offset": "doc",
    "pandas.tseries.offsets.Minute.is_on_offset": "doc",
    "pandas.tseries.offsets.Second.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.BMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.BMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.CBMonthEnd.m_offset": "doc",
    "pandas.tseries.offsets.CBMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rollback": "doc",
    "pandas.tseries.offsets.CBMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CBMonthBegin.offset": "doc",
    "pandas.core.resample.Resampler.interpolate": "doc",
    "pandas.api.types.is_unsigned_integer_dtype": "doc",
    "pandas.tseries.offsets.DateOffset.normalize": "doc",
    "pandas.tseries.offsets.DateOffset.rule_code": "doc",
    "pandas.tseries.offsets.BusinessDay.onOffset": "doc",
    "pandas.tseries.offsets.BusinessDay.__call__": "doc",
    "pandas.tseries.offsets.BusinessHour.freqstr": "doc",
    "pandas.tseries.offsets.MonthOffset.onOffset": "doc",
    "pandas.tseries.offsets.MonthOffset.__call__": "doc",
    "pandas.tseries.offsets.MonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.MonthBegin.normalize": "doc",
    "pandas.tseries.offsets.MonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.kwds": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.name": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.copy": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.apply": "doc",
    "pandas.tseries.offsets.WeekOfMonth.onOffset": "doc",
    "pandas.tseries.offsets.WeekOfMonth.__call__": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.kwds": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.name": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.copy": "doc",
    "pandas.tseries.offsets.BQuarterEnd.onOffset": "doc",
    "pandas.tseries.offsets.BQuarterEnd.__call__": "doc",
    "pandas.tseries.offsets.QuarterEnd.normalize": "doc",
    "pandas.tseries.offsets.QuarterEnd.rule_code": "doc",
    "pandas.tseries.offsets.QuarterBegin.freqstr": "doc",
    "pandas.tseries.offsets.YearOffset.normalize": "doc",
    "pandas.tseries.offsets.YearOffset.rule_code": "doc",
    "pandas.tseries.offsets.BYearEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BYearBegin.normalize": "doc",
    "pandas.tseries.offsets.BYearBegin.rule_code": "doc",
    "pandas.tseries.offsets.YearEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.YearBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.BMonthBegin.rollback": "doc",
    "pandas.tseries.offsets.BMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.CBMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.CBMonthBegin.freqstr": "doc",
    "pandas.core.groupby.SeriesGroupBy.nsmallest": "doc",
    "pandas.tseries.offsets.DateOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessDay.normalize": "doc",
    "pandas.tseries.offsets.BusinessDay.rule_code": "doc",
    "pandas.tseries.offsets.BusinessHour.onOffset": "doc",
    "pandas.tseries.offsets.BusinessHour.__call__": "doc",
    "pandas.tseries.offsets.MonthOffset.normalize": "doc",
    "pandas.tseries.offsets.MonthOffset.rule_code": "doc",
    "pandas.tseries.offsets.MonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.MonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.name": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.nanos": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.apply": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.WeekOfMonth.normalize": "doc",
    "pandas.tseries.offsets.WeekOfMonth.rule_code": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.nanos": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.apply": "doc",
    "pandas.tseries.offsets.QuarterOffset.freqstr": "doc",
    "pandas.tseries.offsets.BQuarterEnd.normalize": "doc",
    "pandas.tseries.offsets.BQuarterEnd.rule_code": "doc",
    "pandas.tseries.offsets.BQuarterBegin.freqstr": "doc",
    "pandas.tseries.offsets.QuarterEnd.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.onOffset": "doc",
    "pandas.tseries.offsets.QuarterBegin.__call__": "doc",
    "pandas.tseries.offsets.YearOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BYearEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BYearBegin.isAnchored": "doc",
    "pandas.tseries.offsets.YearBegin.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.freqstr": "doc",
    "pandas.tseries.offsets.BMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthEnd.rollforward": "doc",
    "pandas.tseries.offsets.BMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.BMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CBMonthEnd.cbday_roll": "doc",
    "pandas.tseries.offsets.CBMonthEnd.month_roll": "doc",
    "pandas.tseries.offsets.CBMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.m_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rollback": "doc",
    "pandas.tseries.offsets.CBMonthBegin.__call__": "doc",
    "pandas.io.formats.style.Styler.highlight_max": "doc",
    "pandas.io.formats.style.Styler.highlight_min": "doc",
    "pandas.tseries.offsets.DateOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessDay.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessHour.normalize": "doc",
    "pandas.tseries.offsets.BusinessHour.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.name": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.isAnchored": "doc",
    "pandas.tseries.offsets.MonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.WeekOfMonth.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterOffset.onOffset": "doc",
    "pandas.tseries.offsets.QuarterOffset.__call__": "doc",
    "pandas.tseries.offsets.BQuarterEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BQuarterBegin.onOffset": "doc",
    "pandas.tseries.offsets.BQuarterBegin.__call__": "doc",
    "pandas.tseries.offsets.QuarterEnd.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.normalize": "doc",
    "pandas.tseries.offsets.QuarterBegin.rule_code": "doc",
    "pandas.tseries.offsets.YearOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BYearBegin.is_anchored": "doc",
    "pandas.tseries.offsets.YearBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.onOffset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.__call__": "doc",
    "pandas.tseries.offsets.BMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CBMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthEnd.rollforward": "doc",
    "pandas.tseries.offsets.CBMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rule_code": "doc",
    "pandas.core.groupby.DataFrameGroupBy.resample": "doc",
    "pandas.io.formats.style.Styler.highlight_null": "doc",
    "pandas.tseries.offsets.DateOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessDay.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessHour.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.name": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.copy": "doc",
    "pandas.tseries.offsets.MonthOffset.is_anchored": "doc",
    "pandas.tseries.offsets.MonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.name": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.WeekOfMonth.is_anchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.freqstr": "doc",
    "pandas.tseries.offsets.QuarterOffset.normalize": "doc",
    "pandas.tseries.offsets.QuarterOffset.rule_code": "doc",
    "pandas.tseries.offsets.BQuarterEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BQuarterBegin.normalize": "doc",
    "pandas.tseries.offsets.BQuarterBegin.rule_code": "doc",
    "pandas.tseries.offsets.QuarterEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.QuarterBegin.isAnchored": "doc",
    "pandas.tseries.offsets.YearOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BYearBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.normalize": "doc",
    "pandas.tseries.offsets.FY5253Quarter.rule_code": "doc",
    "pandas.tseries.offsets.BMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.rollforward": "doc",
    "pandas.tseries.offsets.CBMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.cbday_roll": "doc",
    "pandas.tseries.offsets.CBMonthBegin.month_roll": "doc",
    "pandas.tseries.offsets.CBMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessDay.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessHour.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.apply": "doc",
    "pandas.tseries.offsets.MonthOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.onOffset": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.WeekOfMonth.is_on_offset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.onOffset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.__call__": "doc",
    "pandas.tseries.offsets.QuarterOffset.isAnchored": "doc",
    "pandas.tseries.offsets.BQuarterEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BQuarterBegin.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.is_anchored": "doc",
    "pandas.tseries.offsets.FY5253Quarter.isAnchored": "doc",
    "pandas.tseries.offsets.BMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CBMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.rollforward": "doc",
    "pandas.core.groupby.DataFrameGroupBy.pct_change": "doc",
    "pandas.tseries.offsets.BusinessHour.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.normalize": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.rule_code": "doc",
    "pandas.tseries.offsets.SemiMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.normalize": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.rule_code": "doc",
    "pandas.tseries.offsets.QuarterOffset.is_anchored": "doc",
    "pandas.tseries.offsets.BQuarterBegin.is_anchored": "doc",
    "pandas.tseries.offsets.QuarterBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.is_anchored": "doc",
    "pandas.tseries.offsets.CBMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.freqstr": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.isAnchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.isAnchored": "doc",
    "pandas.tseries.offsets.QuarterOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.BQuarterBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.FY5253Quarter.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.__call__": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.name": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.copy": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.is_anchored": "doc",
    "pandas.tseries.offsets.SemiMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.is_anchored": "doc",
    "pandas.io.formats.style.Styler.background_gradient": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.rule_code": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.apply": "doc",
    "pandas.tseries.offsets.SemiMonthOffset.is_on_offset": "doc",
    "pandas.tseries.offsets.LastWeekOfMonth.is_on_offset": "doc",
    "pandas.io.formats.style.Styler.from_custom_template": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.isAnchored": "doc",
    "pandas.tseries.offsets.BusinessMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.kwds": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.name": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.copy": "doc",
    "pandas.tseries.offsets.CustomBusinessDay.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.is_anchored": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.nanos": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.apply": "doc",
    "pandas.tseries.offsets.CustomBusinessHour.is_on_offset": "doc",
    "pandas.tseries.offsets.BusinessMonthBegin.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.__call__": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.onOffset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.__call__": "doc",
    "pandas.tseries.offsets.FY5253Quarter.year_has_extra_week": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.normalize": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.isAnchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored": "doc",
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset": "doc",
    "pandas.core.groupby.GroupBy.indices": "doc",
    "pandas.CategoricalIndex.rename_categories": "doc",
    "pandas.CategoricalIndex.remove_categories": "doc",
    "pandas.interval_range": "doc",
    "pandas.plotting.andrews_curves": "doc",
    "pandas.DataFrame.reorder_levels": "doc",
    "pandas.CategoricalIndex.add_categories": "doc",
    "pandas.Float64Index": "doc",
    "pandas.DatetimeIndex": "doc",
    "pandas.DatetimeIndex.tz": "doc",
    "pandas.DatetimeIndex.day": "doc",
    "pandas.DatetimeIndex.year": "doc",
    "pandas.DatetimeIndex.hour": "doc",
    "pandas.DatetimeIndex.date": "doc",
    "pandas.DatetimeIndex.time": "doc",
    "pandas.DatetimeIndex.week": "doc",
    "pandas.DatetimeIndex.freq": "doc",
    "pandas.DatetimeIndex.snap": "doc",
    "pandas.DatetimeIndex.ceil": "doc",
    "pandas.DatetimeIndex.mean": "doc",
    "pandas.DatetimeIndex.month": "doc",
    "pandas.DatetimeIndex.round": "doc",
    "pandas.DatetimeIndex.floor": "doc",
    "pandas.DatetimeIndex.minute": "doc",
    "pandas.DatetimeIndex.second": "doc",
    "pandas.DatetimeIndex.timetz": "doc",
    "pandas.DatetimeIndex.weekday": "doc",
    "pandas.DatetimeIndex.quarter": "doc",
    "pandas.DatetimeIndex.freqstr": "doc",
    "pandas.DatetimeIndex.strftime": "doc",
    "pandas.DatetimeIndex.to_frame": "doc",
    "pandas.DatetimeIndex.dayofyear": "doc",
    "pandas.DatetimeIndex.dayofweek": "doc",
    "pandas.DatetimeIndex.normalize": "doc",
    "pandas.DatetimeIndex.to_period": "doc",
    "pandas.DatetimeIndex.nanosecond": "doc",
    "pandas.DatetimeIndex.weekofyear": "doc",
    "pandas.DatetimeIndex.tz_convert": "doc",
    "pandas.DatetimeIndex.month_name": "doc",
    "pandas.DatetimeIndex.microsecond": "doc",
    "pandas.DatetimeIndex.is_year_end": "doc",
    "pandas.DatetimeIndex.tz_localize": "doc",
    "pandas.DatetimeIndex.is_month_end": "doc",
    "pandas.DatetimeIndex.is_leap_year": "doc",
    "pandas.DatetimeIndex.is_year_start": "doc",
    "pandas.DatetimeIndex.inferred_freq": "doc",
    "pandas.DatetimeIndex.to_pydatetime": "doc",
    "pandas.DatetimeIndex.is_month_start": "doc",
    "pandas.DatetimeIndex.is_quarter_end": "doc",
    "pandas.DatetimeIndex.to_perioddelta": "doc",
    "pandas.DatetimeIndex.indexer_at_time": "doc",
    "pandas.DatetimeIndex.is_quarter_start": "doc",
    "pandas.DatetimeIndex.indexer_between_time": "doc",
    "pandas.testing.assert_frame_equal": "doc",
    "pandas.CategoricalIndex.reorder_categories": "doc",
    "pandas.pivot_table": "doc",
    "pandas.bdate_range": "doc",
    "pandas.DataFrame.pivot_table": "doc",
    "pandas.timedelta_range": "doc",
    "pandas.DataFrame.drop_duplicates": "doc",
    "pandas.DataFrame.ne": "doc",
    "pandas.DataFrame.ndim": "doc",
    "pandas.DataFrame.mode": "doc",
    "pandas.Categorical.codes": "doc",
    "pandas.DataFrame.plot.kde": "doc",
    "pandas.DataFrame.sort_index": "doc",
    "pandas.testing.assert_series_equal": "doc",
    "pandas.api.extensions.register_index_accessor": "doc",
    "pandas.wide_to_long": "doc",
    "pandas.period_range": "doc",
    "pandas.reset_option": "doc",
    "pandas.CategoricalIndex": "doc",
    "pandas.CategoricalIndex.map": "doc",
    "pandas.DataFrame.memory_usage": "doc",
    "pandas.CategoricalIndex.ordered": "doc",
    "pandas.CategoricalIndex.as_ordered": "doc",
    "pandas.CategoricalIndex.as_unordered": "doc",
    "pandas.io.stata.StataReader.value_labels": "doc",
    "pandas.api.extensions.register_series_accessor": "doc",
    "pandas.CategoricalIndex.remove_unused_categories": "doc",
    "pandas.TimedeltaIndex": "doc",
    "pandas.TimedeltaIndex.days": "doc",
    "pandas.TimedeltaIndex.ceil": "doc",
    "pandas.TimedeltaIndex.mean": "doc",
    "pandas.TimedeltaIndex.round": "doc",
    "pandas.TimedeltaIndex.floor": "doc",
    "pandas.TimedeltaIndex.seconds": "doc",
    "pandas.TimedeltaIndex.to_frame": "doc",
    "pandas.TimedeltaIndex.components": "doc",
    "pandas.TimedeltaIndex.nanoseconds": "doc",
    "pandas.TimedeltaIndex.microseconds": "doc",
    "pandas.TimedeltaIndex.inferred_freq": "doc",
    "pandas.TimedeltaIndex.to_pytimedelta": "doc",
    "pandas.plotting.register_matplotlib_converters": "doc",
    "pandas.merge_ordered": "doc",
    "pandas.DataFrame.infer_objects": "doc",
    "pandas.Timedelta.total_seconds": "doc",
    "pandas.io.json.build_table_schema": "doc",
    "pandas.testing.assert_index_equal": "doc",
    "pandas.api.extensions.register_dataframe_accessor": "doc",
    "pandas.plotting.deregister_matplotlib_converters": "doc",
    "pandas.json_normalize": "doc",
    "pandas.read_sql_table": "doc",
    "pandas.option_context": "doc",
    "pandas.plotting.scatter_matrix": "doc",
    "pandas.cut": "doc",
    "pandas.melt": "doc",
    "pandas.qcut": "doc",
    "pandas.isna": "doc",
    "pandas.test": "doc",
    "pandas.pivot": "doc",
    "pandas.merge": "doc",
    "pandas.notna": "doc",
    "pandas.array": "doc",
    "pandas.concat": "doc",
    "pandas.unique": "doc",
    "pandas.isnull": "doc",
    "pandas.Period": "doc",
    "pandas.notnull": "doc",
    "pandas.Grouper": "doc",
    "pandas.read_csv": "doc",
    "pandas.read_fwf": "doc",
    "pandas.read_hdf": "doc",
    "pandas.read_orc": "doc",
    "pandas.read_sql": "doc",
    "pandas.read_gbq": "doc",
    "pandas.crosstab": "doc",
    "pandas.plotting": "doc",
    "pandas.read_json": "doc",
    "pandas.read_html": "doc",
    "pandas.read_spss": "doc",
    "pandas.factorize": "doc",
    "pandas.DataFrame": "doc",
    "pandas.Timestamp": "doc",
    "pandas.Timedelta": "doc",
    "pandas.Int8Dtype": "doc",
    "pandas.read_excel": "doc",
    "pandas.read_stata": "doc",
    "pandas.merge_asof": "doc",
    "pandas.to_numeric": "doc",
    "pandas.infer_freq": "doc",
    "pandas.Period.day": "doc",
    "pandas.Period.now": "doc",
    "pandas.Int16Dtype": "doc",
    "pandas.Int32Dtype": "doc",
    "pandas.Int64Dtype": "doc",
    "pandas.UInt8Dtype": "doc",
    "pandas.read_pickle": "doc",
    "pandas.ExcelWriter": "doc",
    "pandas.to_datetime": "doc",
    "pandas.DataFrame.T": "doc",
    "pandas.Period.freq": "doc",
    "pandas.Period.hour": "doc",
    "pandas.Period.week": "doc",
    "pandas.Period.year": "doc",
    "pandas.PeriodDtype": "doc",
    "pandas.UInt16Dtype": "doc",
    "pandas.UInt32Dtype": "doc",
    "pandas.UInt64Dtype": "doc",
    "pandas.Categorical": "doc",
    "pandas.SparseDtype": "doc",
    "pandas.StringDtype": "doc",
    "pandas.HDFStore.put": "doc",
    "pandas.to_timedelta": "doc",
    "pandas.DataFrame.at": "doc",
    "pandas.DataFrame.xs": "doc",
    "pandas.DataFrame.lt": "doc",
    "pandas.DataFrame.gt": "doc",
    "pandas.DataFrame.le": "doc",
    "pandas.DataFrame.ge": "doc",
    "pandas.DataFrame.eq": "doc",
    "pandas.Timestamp.tz": "doc",
    "pandas.Period.month": "doc",
    "pandas.Period.qyear": "doc",
    "pandas.BooleanDtype": "doc",
    "pandas.HDFStore.info": "doc",
    "pandas.HDFStore.keys": "doc",
    "pandas.HDFStore.walk": "doc",
    "pandas.DataFrame.iat": "doc",
    "pandas.DataFrame.loc": "doc",
    "pandas.DataFrame.pop": "doc",
    "pandas.DataFrame.add": "doc",
    "pandas.DataFrame.sub": "doc",
    "pandas.DataFrame.mul": "doc",
    "pandas.DataFrame.div": "doc",
    "pandas.DataFrame.mod": "doc",
    "pandas.DataFrame.pow": "doc",
    "pandas.DataFrame.dot": "doc",
    "pandas.DataFrame.agg": "doc",
    "pandas.DataFrame.ewm": "doc",
    "pandas.DataFrame.abs": "doc",
    "pandas.DataFrame.all": "doc",
    "pandas.DataFrame.any": "doc",
    "pandas.DataFrame.cov": "doc",
    "pandas.DataFrame.mad": "doc",
    "pandas.DataFrame.max": "doc",
    "pandas.DataFrame.min": "doc",
    "pandas.DataFrame.sem": "doc",
    "pandas.DataFrame.sum": "doc",
    "pandas.DataFrame.std": "doc",
    "pandas.DataFrame.var": "doc",
    "pandas.Timestamp.day": "doc",
    "pandas.Timestamp.max": "doc",
    "pandas.Timestamp.min": "doc",
    "pandas.Timestamp.dst": "doc",
    "pandas.Timestamp.now": "doc",
    "pandas.Timedelta.max": "doc",
    "pandas.Timedelta.min": "doc",
    "pandas.Period.minute": "doc",
    "pandas.Period.second": "doc",
    "pandas.Period.asfreq": "doc",
    "pandas.read_clipboard": "doc",
    "pandas.DataFrame.size": "doc",
    "pandas.DataFrame.copy": "doc",
    "pandas.DataFrame.isna": "doc",
    "pandas.DataFrame.bool": "doc",
    "pandas.DataFrame.head": "doc",
    "pandas.DataFrame.iloc": "doc",
    "pandas.DataFrame.keys": "doc",
    "pandas.DataFrame.tail": "doc",
    "pandas.DataFrame.isin": "doc",
    "pandas.DataFrame.mask": "doc",
    "pandas.DataFrame.radd": "doc",
    "pandas.DataFrame.rsub": "doc",
    "pandas.DataFrame.rmul": "doc",
    "pandas.DataFrame.rdiv": "doc",
    "pandas.DataFrame.rmod": "doc",
    "pandas.DataFrame.rpow": "doc",
    "pandas.DataFrame.pipe": "doc",
    "pandas.DataFrame.clip": "doc",
    "pandas.DataFrame.corr": "doc",
    "pandas.DataFrame.diff": "doc",
    "pandas.DataFrame.kurt": "doc",
    "pandas.DataFrame.mean": "doc",
    "pandas.DataFrame.prod": "doc",
    "pandas.DataFrame.rank": "doc",
    "pandas.DataFrame.skew": "doc",
    "pandas.DataFrame.drop": "doc",
    "pandas.DataFrame.last": "doc",
    "pandas.DataFrame.melt": "doc",
    "pandas.DataFrame.join": "doc",
    "pandas.DataFrame.asof": "doc",
    "pandas.DataFrame.plot": "doc",
    "pandas.DataFrame.hist": "doc",
    "pandas.DataFrame.info": "doc",
    "pandas.Timestamp.asm8": "doc",
    "pandas.Timestamp.fold": "doc",
    "pandas.Timestamp.hour": "doc",
    "pandas.Timestamp.week": "doc",
    "pandas.Timestamp.year": "doc",
    "pandas.Timestamp.ceil": "doc",
    "pandas.Timestamp.date": "doc",
    "pandas.Timestamp.freq": "doc",
    "pandas.Timestamp.time": "doc",
    "pandas.Timedelta.asm8": "doc",
    "pandas.Timedelta.days": "doc",
    "pandas.Timedelta.freq": "doc",
    "pandas.Timedelta.view": "doc",
    "pandas.Timedelta.ceil": "doc",
    "pandas.Period.freqstr": "doc",
    "pandas.Period.ordinal": "doc",
    "pandas.Period.quarter": "doc",
    "pandas.Period.weekday": "doc",
    "pandas.ExcelFile.parse": "doc",
    "pandas.HDFStore.append": "doc",
    "pandas.HDFStore.select": "doc",
    "pandas.util.hash_array": "doc",
    "pandas.DataFrame.shape": "doc",
    "pandas.DataFrame.empty": "doc",
    "pandas.DataFrame.notna": "doc",
    "pandas.DataFrame.items": "doc",
    "pandas.DataFrame.where": "doc",
    "pandas.DataFrame.query": "doc",
    "pandas.DataFrame.apply": "doc",
    "pandas.DataFrame.count": "doc",
    "pandas.DataFrame.round": "doc",
    "pandas.DataFrame.align": "doc",
    "pandas.DataFrame.first": "doc",
    "pandas.DataFrame.pivot": "doc",
    "pandas.DataFrame.stack": "doc",
    "pandas.DataFrame.merge": "doc",
    "pandas.DataFrame.shift": "doc",
    "pandas.DataFrame.attrs": "doc",
    "pandas.Timestamp.month": "doc",
    "pandas.Timestamp.ctime": "doc",
    "pandas.Timestamp.floor": "doc",
    "pandas.Timestamp.round": "doc",
    "pandas.Timestamp.today": "doc",
    "pandas.DatetimeTZDtype": "doc",
    "pandas.Timedelta.delta": "doc",
    "pandas.Timedelta.floor": "doc",
    "pandas.Timedelta.round": "doc",
    "pandas.Period.end_time": "doc",
    "pandas.Period.strftime": "doc",
    "pandas.plotting.radviz": "doc",
    "pandas.describe_option": "doc",
    "pandas.DataFrame.astype": "doc",
    "pandas.DataFrame.insert": "doc",
    "pandas.DataFrame.lookup": "doc",
    "pandas.DataFrame.cummax": "doc",
    "pandas.DataFrame.cummin": "doc",
    "pandas.DataFrame.cumsum": "doc",
    "pandas.DataFrame.median": "doc",
    "pandas.DataFrame.filter": "doc",
    "pandas.DataFrame.idxmax": "doc",
    "pandas.DataFrame.idxmin": "doc",
    "pandas.DataFrame.sample": "doc",
    "pandas.DataFrame.dropna": "doc",
    "pandas.DataFrame.fillna": "doc",
    "pandas.DataFrame.append": "doc",
    "pandas.DataFrame.assign": "doc",
    "pandas.DataFrame.update": "doc",
    "pandas.DataFrame.asfreq": "doc",
    "pandas.DataFrame.tshift": "doc",
    "pandas.DataFrame.to_csv": "doc",
    "pandas.DataFrame.to_hdf": "doc",
    "pandas.DataFrame.to_sql": "doc",
    "pandas.DataFrame.to_gbq": "doc",
    "pandas.Timestamp.minute": "doc",
    "pandas.Timestamp.second": "doc",
    "pandas.Timestamp.tzinfo": "doc",
    "pandas.Timestamp.timetz": "doc",
    "pandas.Timestamp.utcnow": "doc",
    "pandas.Period.dayofweek": "doc",
    "pandas.Period.dayofyear": "doc",
    "pandas.CategoricalDtype": "doc",
    "pandas.plotting.boxplot": "doc",
    "pandas.DataFrame.columns": "doc",
    "pandas.DataFrame.truediv": "doc",
    "pandas.DataFrame.combine": "doc",
    "pandas.DataFrame.groupby": "doc",
    "pandas.DataFrame.rolling": "doc",
    "pandas.DataFrame.cumprod": "doc",
    "pandas.DataFrame.product": "doc",
    "pandas.DataFrame.nunique": "doc",
    "pandas.DataFrame.unstack": "doc",
    "pandas.DataFrame.explode": "doc",
    "pandas.DataFrame.squeeze": "doc",
    "pandas.DataFrame.boxplot": "doc",
    "pandas.DataFrame.to_dict": "doc",
    "pandas.DataFrame.to_json": "doc",
    "pandas.DataFrame.to_html": "doc",
    "pandas.Timestamp.quarter": "doc",
    "pandas.Timestamp.combine": "doc",
    "pandas.Timestamp.freqstr": "doc",
    "pandas.Timestamp.weekday": "doc",
    "pandas.Timedelta.seconds": "doc",
    "pandas.Period.start_time": "doc",
    "pandas.Period.weekofyear": "doc",
    "pandas.Categorical.dtype": "doc",
    "pandas.plotting.lag_plot": "doc",
    "pandas.DataFrame.__iter__": "doc",
    "pandas.DataFrame.iterrows": "doc",
    "pandas.DataFrame.floordiv": "doc",
    "pandas.DataFrame.rtruediv": "doc",
    "pandas.DataFrame.applymap": "doc",
    "pandas.DataFrame.corrwith": "doc",
    "pandas.DataFrame.describe": "doc",
    "pandas.DataFrame.kurtosis": "doc",
    "pandas.DataFrame.quantile": "doc",
    "pandas.DataFrame.truncate": "doc",
    "pandas.DataFrame.nlargest": "doc",
    "pandas.DataFrame.plot.bar": "doc",
    "pandas.DataFrame.plot.box": "doc",
    "pandas.DataFrame.plot.pie": "doc",
    "pandas.DataFrame.to_excel": "doc",
    "pandas.DataFrame.to_stata": "doc",
    "pandas.Timestamp.strftime": "doc",
    "pandas.Timestamp.strptime": "doc",
    "pandas.Timestamp.to_numpy": "doc",
    "pandas.Timedelta.to_numpy": "doc",
    "pandas.Period.daysinmonth": "doc",
    "pandas.arrays.PeriodArray": "doc",
    "pandas.arrays.SparseArray": "doc",
    "pandas.arrays.StringArray": "doc",
    "pandas.errors.ParserError": "doc",
    "pandas.arrays.PandasArray": "doc",
    "pandas.DataFrame.iteritems": "doc",
    "pandas.DataFrame.rfloordiv": "doc",
    "pandas.DataFrame.aggregate": "doc",
    "pandas.DataFrame.transform": "doc",
    "pandas.DataFrame.expanding": "doc",
    "pandas.DataFrame.droplevel": "doc",
    "pandas.DataFrame.swaplevel": "doc",
    "pandas.DataFrame.to_xarray": "doc",
    "pandas.DataFrame.transpose": "doc",
    "pandas.DataFrame.to_period": "doc",
    "pandas.DataFrame.plot.area": "doc",
    "pandas.DataFrame.plot.barh": "doc",
    "pandas.DataFrame.plot.hist": "doc",
    "pandas.DataFrame.plot.line": "doc",
    "pandas.DataFrame.from_dict": "doc",
    "pandas.DataFrame.to_pickle": "doc",
    "pandas.DataFrame.to_string": "doc",
    "pandas.Timestamp.dayofweek": "doc",
    "pandas.Timestamp.dayofyear": "doc",
    "pandas.Timestamp.isoformat": "doc",
    "pandas.Timestamp.normalize": "doc",
    "pandas.Timestamp.timestamp": "doc",
    "pandas.Timestamp.timetuple": "doc",
    "pandas.Timestamp.to_period": "doc",
    "pandas.Timestamp.toordinal": "doc",
    "pandas.Timestamp.utcoffset": "doc",
    "pandas.Timedelta.isoformat": "doc",
    "pandas.Period.is_leap_year": "doc",
    "pandas.Period.to_timestamp": "doc",
    "pandas.arrays.IntegerArray": "doc",
    "pandas.Categorical.ordered": "doc",
    "pandas.arrays.BooleanArray": "doc",
    "pandas.errors.DtypeWarning": "doc",
    "pandas.DataFrame.add_prefix": "doc",
    "pandas.DataFrame.add_suffix": "doc",
    "pandas.DataFrame.duplicated": "doc",
    "pandas.DataFrame.tz_convert": "doc",
    "pandas.DataFrame.to_feather": "doc",
    "pandas.DataFrame.to_records": "doc",
    "pandas.Timestamp.nanosecond": "doc",
    "pandas.Timestamp.resolution": "doc",
    "pandas.Timestamp.weekofyear": "doc",
    "pandas.Timestamp.astimezone": "doc",
    "pandas.Timestamp.isoweekday": "doc",
    "pandas.Timestamp.month_name": "doc",
    "pandas.Timestamp.tz_convert": "doc",
    "pandas.arrays.DatetimeArray": "doc",
    "pandas.Timedelta.components": "doc",
    "pandas.Timedelta.resolution": "doc",
    "pandas.Period.days_in_month": "doc",
    "pandas.errors.ParserWarning": "doc",
    "pandas.DataFrame.rename_axis": "doc",
    "pandas.DataFrame.interpolate": "doc",
    "pandas.DataFrame.slice_shift": "doc",
    "pandas.DataFrame.tz_localize": "doc",
    "pandas.DataFrame.plot.hexbin": "doc",
    "pandas.DataFrame.to_markdown": "doc",
    "pandas.Timestamp.daysinmonth": "doc",
    "pandas.Timestamp.is_year_end": "doc",
    "pandas.Timestamp.microsecond": "doc",
    "pandas.Timestamp.fromordinal": "doc",
    "pandas.Timestamp.isocalendar": "doc",
    "pandas.Timestamp.tz_localize": "doc",
    "pandas.Timedelta.nanoseconds": "doc",
    "pandas.arrays.TimedeltaArray": "doc",
    "pandas.Categorical.__array__": "doc",
    "pandas.errors.EmptyDataError": "doc",
    "pandas.DataFrame.between_time": "doc",
    "pandas.DataFrame.reindex_like": "doc",
    "pandas.DataFrame.to_timestamp": "doc",
    "pandas.DataFrame.plot.density": "doc",
    "pandas.DataFrame.plot.scatter": "doc",
    "pandas.DataFrame.from_records": "doc",
    "pandas.DataFrame.to_clipboard": "doc",
    "pandas.Timestamp.is_leap_year": "doc",
    "pandas.Timestamp.is_month_end": "doc",
    "pandas.Timestamp.utctimetuple": "doc",
    "pandas.Timedelta.is_populated": "doc",
    "pandas.Timedelta.microseconds": "doc",
    "pandas.Categorical.from_codes": "doc",
    "pandas.util.hash_pandas_object": "doc",
    "pandas.DataFrame.combine_first": "doc",
    "pandas.DataFrame.sparse.to_coo": "doc",
    "pandas.Timestamp.days_in_month": "doc",
    "pandas.Timestamp.is_year_start": "doc",
    "pandas.Timestamp.fromtimestamp": "doc",
    "pandas.Timestamp.to_datetime64": "doc",
    "pandas.Timestamp.to_pydatetime": "doc",
    "pandas.core.window.ewm.EWM.std": "doc",
    "pandas.core.window.ewm.EWM.var": "doc",
    "pandas.core.window.ewm.EWM.cov": "doc",
    "pandas.plotting.bootstrap_plot": "doc",
    "pandas.DataFrame.sparse.density": "doc",
    "pandas.Timestamp.is_month_start": "doc",
    "pandas.Timestamp.is_quarter_end": "doc",
    "pandas.Timestamp.to_julian_date": "doc",
    "pandas.Timedelta.to_pytimedelta": "doc",
    "pandas.Timedelta.to_timedelta64": "doc",
    "pandas.CategoricalDtype.ordered": "doc",
    "pandas.core.window.ewm.EWM.mean": "doc",
    "pandas.core.window.ewm.EWM.corr": "doc",
    "pandas.core.groupby.GroupBy.agg": "doc",
    "pandas.core.groupby.GroupBy.all": "doc",
    "pandas.core.groupby.GroupBy.any": "doc",
    "pandas.core.groupby.GroupBy.max": "doc",
    "pandas.core.groupby.GroupBy.min": "doc",
    "pandas.core.groupby.GroupBy.nth": "doc",
    "pandas.core.groupby.GroupBy.sem": "doc",
    "pandas.core.groupby.GroupBy.std": "doc",
    "pandas.core.groupby.GroupBy.sum": "doc",
    "pandas.core.groupby.GroupBy.var": "doc",
    "pandas.DataFrame.sparse.to_dense": "doc",
    "pandas.core.groupby.GroupBy.pipe": "doc",
    "pandas.core.groupby.GroupBy.head": "doc",
    "pandas.core.groupby.GroupBy.last": "doc",
    "pandas.core.groupby.GroupBy.mean": "doc",
    "pandas.core.groupby.GroupBy.ohlc": "doc",
    "pandas.core.groupby.GroupBy.prod": "doc",
    "pandas.core.groupby.GroupBy.rank": "doc",
    "pandas.core.groupby.GroupBy.size": "doc",
    "pandas.core.groupby.GroupBy.tail": "doc",
    "pandas.errors.PerformanceWarning": "doc",
    "pandas.errors.UnsortedIndexError": "doc",
    "pandas.Timestamp.is_quarter_start": "doc",
    "pandas.Timestamp.utcfromtimestamp": "doc",
    "pandas.core.groupby.GroupBy.apply": "doc",
    "pandas.core.groupby.GroupBy.bfill": "doc",
    "pandas.core.groupby.GroupBy.count": "doc",
    "pandas.core.groupby.GroupBy.ffill": "doc",
    "pandas.core.groupby.GroupBy.first": "doc",
    "pandas.errors.OutOfBoundsDatetime": "doc",
    "pandas.core.groupby.GroupBy.cummax": "doc",
    "pandas.core.groupby.GroupBy.cummin": "doc",
    "pandas.core.groupby.GroupBy.cumsum": "doc",
    "pandas.core.groupby.GroupBy.median": "doc",
    "pandas.core.groupby.GroupBy.ngroup": "doc",
    "pandas.core.groupby.GroupBy.cumprod": "doc",
    "pandas.core.groupby.GroupBy.__iter__": "doc",
    "pandas.core.groupby.GroupBy.cumcount": "doc",
    "pandas.plotting.autocorrelation_plot": "doc",
    "pandas.plotting.parallel_coordinates": "doc",
    "pandas.api.extensions.ExtensionDtype": "doc",
    "pandas.api.extensions.ExtensionArray": "doc",
    "pandas.DataFrame.sparse.from_spmatrix": "doc",
    "pandas.core.window.rolling.Window.sum": "doc",
    "pandas.core.window.rolling.Window.var": "doc",
    "pandas.core.window.rolling.Window.std": "doc",
    "pandas.core.groupby.GroupBy.aggregate": "doc",
    "pandas.core.groupby.GroupBy.transform": "doc",
    "pandas.errors.UnsupportedFunctionCall": "doc",
    "pandas.io.stata.StataWriter.write_file": "doc",
    "pandas.core.window.rolling.Rolling.sum": "doc",
    "pandas.core.window.rolling.Rolling.var": "doc",
    "pandas.core.window.rolling.Rolling.std": "doc",
    "pandas.core.window.rolling.Rolling.min": "doc",
    "pandas.core.window.rolling.Rolling.max": "doc",
    "pandas.core.window.rolling.Rolling.cov": "doc",
    "pandas.core.window.rolling.Window.mean": "doc",
    "pandas.core.window.rolling.Rolling.mean": "doc",
    "pandas.core.window.rolling.Rolling.corr": "doc",
    "pandas.core.window.rolling.Rolling.skew": "doc",
    "pandas.core.window.rolling.Rolling.kurt": "doc",
    "pandas.core.window.rolling.Rolling.count": "doc",
    "pandas.core.window.rolling.Rolling.apply": "doc",
    "pandas.core.groupby.DataFrameGroupBy.all": "doc",
    "pandas.core.groupby.DataFrameGroupBy.any": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cov": "doc",
    "pandas.core.groupby.DataFrameGroupBy.mad": "doc",
    "pandas.core.groupby.SeriesGroupBy.unique": "doc",
    "pandas.core.window.rolling.Rolling.median": "doc",
    "pandas.core.groupby.DataFrameGroupBy.corr": "doc",
    "pandas.core.groupby.DataFrameGroupBy.diff": "doc",
    "pandas.core.groupby.DataFrameGroupBy.hist": "doc",
    "pandas.core.groupby.DataFrameGroupBy.plot": "doc",
    "pandas.core.groupby.DataFrameGroupBy.rank": "doc",
    "pandas.core.groupby.DataFrameGroupBy.size": "doc",
    "pandas.core.groupby.DataFrameGroupBy.skew": "doc",
    "pandas.core.groupby.SeriesGroupBy.nunique": "doc",
    "pandas.core.window.expanding.Expanding.sum": "doc",
    "pandas.core.window.expanding.Expanding.var": "doc",
    "pandas.core.window.expanding.Expanding.std": "doc",
    "pandas.core.window.expanding.Expanding.min": "doc",
    "pandas.core.window.expanding.Expanding.max": "doc",
    "pandas.core.window.expanding.Expanding.cov": "doc",
    "pandas.core.groupby.DataFrameGroupBy.bfill": "doc",
    "pandas.core.groupby.DataFrameGroupBy.count": "doc",
    "pandas.core.groupby.DataFrameGroupBy.ffill": "doc",
    "pandas.core.groupby.DataFrameGroupBy.shift": "doc",
    "pandas.core.groupby.SeriesGroupBy.nlargest": "doc",
    "pandas.io.stata.StataReader.variable_labels": "doc",
    "pandas.core.window.rolling.Rolling.quantile": "doc",
    "pandas.core.window.expanding.Expanding.mean": "doc",
    "pandas.core.window.expanding.Expanding.corr": "doc",
    "pandas.core.window.expanding.Expanding.skew": "doc",
    "pandas.core.window.expanding.Expanding.kurt": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cummax": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cummin": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cumsum": "doc",
    "pandas.core.groupby.DataFrameGroupBy.fillna": "doc",
    "pandas.core.groupby.DataFrameGroupBy.filter": "doc",
    "pandas.core.groupby.DataFrameGroupBy.idxmax": "doc",
    "pandas.core.groupby.DataFrameGroupBy.idxmin": "doc",
    "pandas.core.groupby.DataFrameGroupBy.tshift": "doc",
    "pandas.testing.assert_extension_array_equal": "doc",
    "pandas.core.window.rolling.Rolling.aggregate": "doc",
    "pandas.core.window.expanding.Expanding.count": "doc",
    "pandas.core.window.expanding.Expanding.apply": "doc",
    "pandas.core.groupby.DataFrameGroupBy.cumprod": "doc",
    "pandas.core.groupby.DataFrameGroupBy.nunique": "doc",
    "pandas.core.groupby.DataFrameGroupBy.boxplot": "doc",
    "pandas.core.window.expanding.Expanding.median": "doc",
    "pandas.core.groupby.DataFrameGroupBy.describe": "doc",
    "pandas.core.groupby.DataFrameGroupBy.quantile": "doc",
    "pandas.core.groupby.DataFrameGroupBy.corrwith": "doc",
    "pandas.core.groupby.SeriesGroupBy.value_counts": "doc",
    "pandas.api.extensions.register_extension_dtype": "doc",
    "pandas.core.window.expanding.Expanding.quantile": "doc",
    "pandas.core.window.expanding.Expanding.aggregate": "doc",
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing": "doc",
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing": "doc",
    "pandas.Index.to_numpy": "doc"
  },
  "keras.utils.generic_utils": {
    "keras.utils.Progbar": "doc",
    "keras.utils.get_file": "doc",
    "keras.utils.Sequence": "doc",
    "keras.utils.normalize": "doc",
    "keras.utils.plot_model": "doc",
    "keras.utils.model_to_dot": "doc",
    "keras.utils.to_categorical": "doc",
    "keras.utils.get_custom_objects": "doc",
    "keras.utils.custom_object_scope": "doc",
    "keras.utils.serialize_keras_object": "doc",
    "keras.utils.deserialize_keras_object": "doc",
    "keras.utils.register_keras_serializable": "doc",
    "keras.layers.Layer.metrics": "doc",
    "keras.layers.Multiply": "doc",
    "keras.activations.softplus": "doc",
    "keras.layers.Layer.weights": "doc",
    "keras.backend.get_uid": "doc",
    "keras.layers.experimental.preprocessing.Hashing": "doc",
    "keras.layers.experimental.preprocessing.Resizing": "doc",
    "keras.layers.experimental.preprocessing.Rescaling": "doc",
    "keras.layers.experimental.preprocessing.CenterCrop": "doc",
    "keras.layers.experimental.preprocessing.RandomCrop": "doc",
    "keras.layers.experimental.preprocessing.RandomFlip": "doc",
    "keras.layers.experimental.preprocessing.RandomZoom": "doc",
    "keras.layers.experimental.preprocessing.RandomWidth": "doc",
    "keras.layers.experimental.preprocessing.StringLookup": "doc",
    "keras.layers.experimental.preprocessing.RandomHeight": "doc",
    "keras.layers.experimental.preprocessing.Normalization": "doc",
    "keras.layers.experimental.preprocessing.IntegerLookup": "doc",
    "keras.layers.experimental.preprocessing.Discretization": "doc",
    "keras.layers.experimental.preprocessing.RandomRotation": "doc",
    "keras.layers.experimental.preprocessing.CategoryEncoding": "doc",
    "keras.layers.experimental.preprocessing.CategoryCrossing": "doc",
    "keras.layers.experimental.preprocessing.TextVectorization": "doc",
    "keras.layers.experimental.preprocessing.RandomTranslation": "doc",
    "keras.Model.get_weights": "doc",
    "keras.layers.Layer.get_weights": "doc",
    "keras.models.save_model": "doc",
    "keras.models.load_model": "doc",
    "keras.initializers.Ones": "doc",
    "keras.models.clone_model": "doc",
    "keras.initializers.Zeros": "doc",
    "keras.initializers.Identity": "doc",
    "keras.initializers.Constant": "doc",
    "keras.models.model_from_json": "doc",
    "keras.initializers.Orthogonal": "doc",
    "keras.models.model_from_config": "doc",
    "keras.initializers.RandomNormal": "doc",
    "keras.initializers.GlorotNormal": "doc",
    "keras.initializers.RandomUniform": "doc",
    "keras.initializers.GlorotUniform": "doc",
    "keras.initializers.TruncatedNormal": "doc",
    "keras.initializers.VarianceScaling": "doc",
    "keras.Sequential": "doc",
    "keras.Sequential.add": "doc",
    "keras.Sequential.pop": "doc",
    "keras.Model.compile": "doc",
    "keras.backend.epsilon": "doc",
    "keras.Model.predict": "doc",
    "keras.layers.Permute": "doc",
    "keras.Model.get_config": "doc",
    "keras.layers.Layer.get_config": "doc",
    "keras.activations.elu": "doc",
    "keras.activations.relu": "doc",
    "keras.activations.tanh": "doc",
    "keras.activations.selu": "doc",
    "keras.Model.set_weights": "doc",
    "keras.constraints.NonNeg": "doc",
    "keras.activations.sigmoid": "doc",
    "keras.activations.softmax": "doc",
    "keras.constraints.MaxNorm": "doc",
    "keras.backend.set_epsilon": "doc",
    "keras.activations.softsign": "doc",
    "keras.constraints.UnitNorm": "doc",
    "keras.constraints.MinMaxNorm": "doc",
    "keras.activations.exponential": "doc",
    "keras.layers.Layer.set_weights": "doc",
    "keras.constraints.RadialConstraint": "doc",
    "keras.layers.Layer.non_trainable_weights": "doc",
    "keras.regularizers.l1": "doc",
    "keras.regularizers.l2": "doc",
    "keras.layers.Subtract": "doc",
    "keras.regularizers.l1_l2": "doc",
    "keras.layers.Layer.add_loss": "doc",
    "keras.backend.is_keras_tensor": "doc",
    "keras.layers.GaussianNoise": "doc",
    "keras.Model.get_layer": "doc",
    "keras.layers.Attention": "doc",
    "keras.layers.Layer.trainable": "doc",
    "keras.layers.Layer.trainable_weights": "doc",
    "keras.Model": "doc",
    "keras.Input": "doc",
    "keras.Model.fit": "doc",
    "keras.Model.save": "doc",
    "keras.layers.GRU": "doc",
    "keras.layers.RNN": "doc",
    "keras.layers.Add": "doc",
    "keras.layers.Dot": "doc",
    "keras.layers.ELU": "doc",
    "keras.layers.LSTM": "doc",
    "keras.layers.ReLU": "doc",
    "keras.backend.rnn": "doc",
    "keras.layers.Layer": "doc",
    "keras.layers.Dense": "doc",
    "keras.layers.PReLU": "doc",
    "keras.Model.summary": "doc",
    "keras.Model.to_json": "doc",
    "keras.layers.Lambda": "doc",
    "keras.layers.Conv1D": "doc",
    "keras.layers.Conv2D": "doc",
    "keras.layers.Conv3D": "doc",
    "keras.Model.evaluate": "doc",
    "keras.layers.Masking": "doc",
    "keras.layers.Dropout": "doc",
    "keras.layers.Reshape": "doc",
    "keras.layers.Flatten": "doc",
    "keras.layers.Average": "doc",
    "keras.layers.Maximum": "doc",
    "keras.layers.Minimum": "doc",
    "keras.layers.Softmax": "doc",
    "keras.backend.floatx": "doc",
    "keras.layers.Embedding": "doc",
    "keras.layers.SimpleRNN": "doc",
    "keras.layers.LeakyReLU": "doc",
    "keras.Model.run_eagerly": "doc",
    "keras.Model.from_config": "doc",
    "keras.layers.Activation": "doc",
    "keras.layers.ConvLSTM2D": "doc",
    "keras.layers.Cropping1D": "doc",
    "keras.layers.Cropping2D": "doc",
    "keras.layers.Cropping3D": "doc",
    "keras.Model.save_weights": "doc",
    "keras.Model.load_weights": "doc",
    "keras.layers.Concatenate": "doc",
    "keras.backend.set_floatx": "doc",
    "keras.Model.test_on_batch": "doc",
    "keras.layers.Layer.losses": "doc",
    "keras.layers.MaxPooling1D": "doc",
    "keras.layers.MaxPooling2D": "doc",
    "keras.layers.MaxPooling3D": "doc",
    "keras.layers.AlphaDropout": "doc",
    "keras.layers.RepeatVector": "doc",
    "keras.layers.UpSampling1D": "doc",
    "keras.layers.UpSampling2D": "doc",
    "keras.layers.UpSampling3D": "doc",
    "keras.Model.train_on_batch": "doc",
    "keras.layers.Layer.dynamic": "doc",
    "keras.layers.Bidirectional": "doc",
    "keras.layers.ZeroPadding1D": "doc",
    "keras.layers.ZeroPadding2D": "doc",
    "keras.layers.ZeroPadding3D": "doc",
    "keras.backend.clear_session": "doc",
    "keras.Model.predict_on_batch": "doc",
    "keras.layers.SeparableConv1D": "doc",
    "keras.layers.SeparableConv2D": "doc",
    "keras.layers.DepthwiseConv2D": "doc",
    "keras.layers.Conv2DTranspose": "doc",
    "keras.layers.Conv3DTranspose": "doc",
    "keras.layers.TimeDistributed": "doc",
    "keras.layers.GaussianDropout": "doc",
    "keras.layers.ThresholdedReLU": "doc",
    "keras.layers.Layer.add_metric": "doc",
    "keras.layers.AveragePooling1D": "doc",
    "keras.layers.AveragePooling2D": "doc",
    "keras.layers.AveragePooling3D": "doc",
    "keras.layers.SpatialDropout1D": "doc",
    "keras.layers.SpatialDropout2D": "doc",
    "keras.layers.SpatialDropout3D": "doc",
    "keras.layers.AdditiveAttention": "doc",
    "keras.layers.GlobalMaxPooling1D": "doc",
    "keras.layers.GlobalMaxPooling2D": "doc",
    "keras.layers.GlobalMaxPooling3D": "doc",
    "keras.layers.BatchNormalization": "doc",
    "keras.layers.LayerNormalization": "doc",
    "keras.layers.MultiHeadAttention": "doc",
    "keras.layers.LocallyConnected1D": "doc",
    "keras.layers.LocallyConnected2D": "doc",
    "keras.backend.image_data_format": "doc",
    "keras.layers.GlobalAveragePooling1D": "doc",
    "keras.layers.GlobalAveragePooling2D": "doc",
    "keras.layers.GlobalAveragePooling3D": "doc",
    "keras.layers.ActivityRegularization": "doc",
    "keras.backend.set_image_data_format": "doc"
  },
  "sklearn.linear_model.RandomizedLasso": {
    "sklearn.linear_model.Lasso": "doc",
    "sklearn.linear_model.LassoLars": "doc",
    "sklearn.linear_model.MultiTaskLasso": "doc",
    "sklearn.linear_model.GammaRegressor": "doc",
    "sklearn.linear_model.LogisticRegression": "doc",
    "sklearn.linear_model.LassoLarsCV": "doc",
    "sklearn.linear_model.LassoLarsIC": "doc",
    "sklearn.linear_model.RANSACRegressor": "doc",
    "sklearn.linear_model.LinearRegression": "doc",
    "sklearn.linear_model.MultiTaskLassoCV": "doc",
    "sklearn.linear_model.PoissonRegressor": "doc",
    "sklearn.linear_model.TweedieRegressor": "doc",
    "sklearn.linear_model.ridge_regression": "doc",
    "sklearn.linear_model.LogisticRegressionCV": "doc",
    "sklearn.linear_model.TheilSenRegressor": "doc",
    "sklearn.linear_model.PassiveAggressiveRegressor": "doc",
    "sklearn.linear_model.PassiveAggressiveClassifier": "doc",
    "sklearn.linear_model.Lars": "doc",
    "sklearn.linear_model.Ridge": "doc",
    "sklearn.linear_model.RidgeCV": "doc",
    "sklearn.linear_model.LassoCV": "doc",
    "sklearn.linear_model.lasso_path": "doc",
    "sklearn.linear_model.SGDRegressor": "doc",
    "sklearn.linear_model.HuberRegressor": "doc",
    "sklearn.linear_model": "doc",
    "sklearn.linear_model.LarsCV": "doc",
    "sklearn.linear_model.enet_path": "doc",
    "sklearn.linear_model.lars_path": "doc",
    "sklearn.linear_model.Perceptron": "doc",
    "sklearn.linear_model.ElasticNet": "doc",
    "sklearn.linear_model.ElasticNetCV": "doc",
    "sklearn.linear_model.SGDClassifier": "doc",
    "sklearn.linear_model.ARDRegression": "doc",
    "sklearn.linear_model.BayesianRidge": "doc",
    "sklearn.linear_model.orthogonal_mp": "doc",
    "sklearn.linear_model.lars_path_gram": "doc",
    "sklearn.linear_model.RidgeClassifier": "doc",
    "sklearn.linear_model.RidgeClassifierCV": "doc",
    "sklearn.linear_model.orthogonal_mp_gram": "doc",
    "sklearn.linear_model.MultiTaskElasticNet": "doc",
    "sklearn.linear_model.MultiTaskElasticNetCV": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuit": "doc",
    "sklearn.linear_model.OrthogonalMatchingPursuitCV": "doc",
    "sklearn.utils.extmath.randomized_svd": "doc",
    "sklearn.metrics.pairwise.linear_kernel": "doc",
    "sklearn.model_selection.RandomizedSearchCV": "doc",
    "sklearn.ensemble.RandomForestRegressor": "doc",
    "sklearn.ensemble.RandomForestClassifier": "doc",
    "sklearn.utils.extmath.randomized_range_finder": "doc",
    "sklearn.preprocessing.binarize": "doc",
    "sklearn.preprocessing.Binarizer": "doc",
    "sklearn.covariance.GraphicalLasso": "doc",
    "sklearn.feature_selection.SelectFromModel": "doc",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim": "doc",
    "sklearn.preprocessing.minmax_scale": "doc",
    "sklearn.random_projection": "doc",
    "sklearn.ensemble.AdaBoostRegressor": "doc",
    "sklearn.random_projection.SparseRandomProjection": "doc",
    "sklearn.random_projection.GaussianRandomProjection": "doc",
    "sklearn.metrics.hinge_loss": "doc",
    "sklearn.datasets.load_files": "doc",
    "sklearn.ensemble.RandomTreesEmbedding": "doc",
    "sklearn.metrics.hamming_loss": "doc",
    "sklearn.isotonic.IsotonicRegression": "doc",
    "sklearn.metrics.explained_variance_score": "doc",
    "sklearn.utils.random.sample_without_replacement": "doc",
    "sklearn.manifold.locally_linear_embedding": "doc",
    "sklearn.utils.multiclass.unique_labels": "doc",
    "sklearn.ensemble.GradientBoostingRegressor": "doc",
    "sklearn.isotonic.isotonic_regression": "doc",
    "sklearn.metrics.calinski_harabasz_score": "doc",
    "sklearn.manifold.LocallyLinearEmbedding": "doc",
    "sklearn.ensemble.BaggingRegressor": "doc",
    "sklearn.covariance.GraphicalLassoCV": "doc",
    "sklearn.utils.validation.has_fit_parameter": "doc",
    "sklearn.compose.TransformedTargetRegressor": "doc",
    "sklearn.metrics.pairwise.paired_cosine_distances": "doc",
    "sklearn.metrics.pairwise.polynomial_kernel": "doc",
    "sklearn.svm.LinearSVC": "doc",
    "sklearn.svm.LinearSVR": "doc",
    "sklearn.ensemble.StackingRegressor": "doc",
    "sklearn.gaussian_process.kernels.RationalQuadratic": "doc",
    "sklearn.neighbors.RadiusNeighborsRegressor": "doc",
    "sklearn.gaussian_process.GaussianProcessRegressor": "doc",
    "sklearn.datasets.load_wine": "doc",
    "sklearn.datasets.make_moons": "doc",
    "sklearn.metrics.v_measure_score": "doc",
    "sklearn.utils.arrayfuncs.min_pos": "doc",
    "sklearn.datasets.make_sparse_coded_signal": "doc",
    "sklearn.metrics.mean_squared_error": "doc",
    "sklearn.preprocessing.quantile_transform": "doc",
    "sklearn.preprocessing.QuantileTransformer": "doc",
    "sklearn.ensemble.HistGradientBoostingRegressor": "doc",
    "sklearn.calibration.CalibratedClassifierCV": "doc",
    "sklearn.feature_selection.mutual_info_regression": "doc",
    "sklearn.metrics.pairwise.nan_euclidean_distances": "doc",
    "sklearn.metrics.balanced_accuracy_score": "doc",
    "sklearn.ensemble.GradientBoostingClassifier": "doc",
    "sklearn.utils.extmath.weighted_mode": "doc",
    "sklearn.multiclass": "doc",
    "sklearn.naive_bayes": "doc",
    "sklearn.cluster.k_means": "doc",
    "sklearn.utils.indexable": "doc",
    "sklearn.utils.safe_mask": "doc",
    "sklearn.utils.multiclass": "doc",
    "sklearn.utils.validation": "doc",
    "sklearn.dummy.DummyRegressor": "doc",
    "sklearn.metrics.zero_one_loss": "doc",
    "sklearn.naive_bayes.GaussianNB": "doc",
    "sklearn.datasets.make_friedman1": "doc",
    "sklearn.datasets.make_friedman2": "doc",
    "sklearn.datasets.make_friedman3": "doc",
    "sklearn.naive_bayes.BernoulliNB": "doc",
    "sklearn.naive_bayes.ComplementNB": "doc",
    "sklearn.naive_bayes.CategoricalNB": "doc",
    "sklearn.naive_bayes.MultinomialNB": "doc",
    "sklearn.covariance.graphical_lasso": "doc",
    "sklearn.multiclass.OneVsOneClassifier": "doc",
    "sklearn.utils.validation.check_memory": "doc",
    "sklearn.utils.validation.column_or_1d": "doc",
    "sklearn.multiclass.OneVsRestClassifier": "doc",
    "sklearn.utils.multiclass.is_multilabel": "doc",
    "sklearn.model_selection.PredefinedSplit": "doc",
    "sklearn.multiclass.OutputCodeClassifier": "doc",
    "sklearn.utils.multiclass.type_of_target": "doc",
    "sklearn.utils.validation.check_is_fitted": "doc",
    "sklearn.utils.validation.check_symmetric": "doc",
    "sklearn.datasets.make_multilabel_classification": "doc",
    "sklearn.metrics.pairwise.euclidean_distances": "doc",
    "sklearn.metrics.mean_gamma_deviance": "doc",
    "sklearn.metrics.adjusted_rand_score": "doc",
    "sklearn.ensemble.ExtraTreesRegressor": "doc",
    "sklearn.neighbors.KNeighborsRegressor": "doc",
    "sklearn.metrics.pairwise.haversine_distances": "doc",
    "sklearn.metrics.brier_score_loss": "doc",
    "sklearn.metrics.pairwise.laplacian_kernel": "doc",
    "sklearn.model_selection.RepeatedStratifiedKFold": "doc",
    "sklearn.metrics.jaccard_score": "doc",
    "sklearn.datasets.load_sample_images": "doc",
    "sklearn.metrics.mean_squared_log_error": "doc",
    "sklearn.metrics.normalized_mutual_info_score": "doc",
    "sklearn.compose.ColumnTransformer": "doc",
    "sklearn.datasets.make_sparse_uncorrelated": "doc",
    "sklearn.experimental.enable_iterative_imputer": "doc",
    "sklearn.preprocessing.OrdinalEncoder": "doc",
    "sklearn.gaussian_process.kernels.Hyperparameter": "doc",
    "sklearn.neighbors.RadiusNeighborsClassifier": "doc",
    "sklearn.decomposition.LatentDirichletAllocation": "doc",
    "sklearn.gaussian_process.GaussianProcessClassifier": "doc",
    "sklearn.tree.DecisionTreeRegressor": "doc",
    "sklearn.metrics.mean_poisson_deviance": "doc",
    "sklearn.metrics.mean_tweedie_deviance": "doc",
    "sklearn.preprocessing.StandardScaler": "doc",
    "sklearn.metrics.pairwise.sigmoid_kernel": "doc",
    "sklearn.ensemble.HistGradientBoostingClassifier": "doc",
    "sklearn.neighbors.RadiusNeighborsTransformer": "doc",
    "sklearn.metrics.pairwise.paired_euclidean_distances": "doc",
    "sklearn.metrics.completeness_score": "doc",
    "sklearn.metrics.silhouette_samples": "doc",
    "sklearn.datasets.load_breast_cancer": "doc",
    "sklearn.metrics.cluster.contingency_matrix": "doc",
    "sklearn.tree.DecisionTreeClassifier": "doc",
    "sklearn.exceptions.UndefinedMetricWarning": "doc",
    "sklearn.model_selection.permutation_test_score": "doc",
    "sklearn.utils.metaestimators.if_delegate_has_method": "doc",
    "sklearn.preprocessing.FunctionTransformer": "doc",
    "sklearn.tree.ExtraTreeRegressor": "doc",
    "sklearn.metrics.pairwise_distances": "doc",
    "sklearn.neighbors.LocalOutlierFactor": "doc",
    "sklearn.preprocessing.PolynomialFeatures": "doc",
    "sklearn.utils.sparsefuncs.mean_variance_axis": "doc",
    "sklearn.feature_selection.VarianceThreshold": "doc",
    "sklearn.cluster.AgglomerativeClustering": "doc",
    "sklearn.compose.make_column_transformer": "doc",
    "sklearn.metrics.consensus_score": "doc",
    "sklearn.datasets.clear_data_home": "doc",
    "sklearn.decomposition.SparseCoder": "doc",
    "sklearn.preprocessing.LabelEncoder": "doc",
    "sklearn.preprocessing.MinMaxScaler": "doc",
    "sklearn.gaussian_process.kernels.Kernel": "doc",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": "doc",
    "sklearn.tree.ExtraTreeClassifier": "doc",
    "sklearn.metrics.mean_absolute_error": "doc",
    "sklearn.metrics.pairwise.manhattan_distances": "doc",
    "sklearn.feature_selection.mutual_info_classif": "doc",
    "sklearn.compose": "doc",
    "sklearn.metrics": "doc",
    "sklearn.datasets": "doc",
    "sklearn.ensemble": "doc",
    "sklearn.manifold": "doc",
    "sklearn.neighbors": "doc",
    "sklearn.calibration": "doc",
    "sklearn.metrics.auc": "doc",
    "sklearn.experimental": "doc",
    "sklearn.manifold.MDS": "doc",
    "sklearn.manifold.TSNE": "doc",
    "sklearn.cluster.KMeans": "doc",
    "sklearn.covariance.oas": "doc",
    "sklearn.utils.safe_sqr": "doc",
    "sklearn.manifold.Isomap": "doc",
    "sklearn.manifold.smacof": "doc",
    "sklearn.svm.OneClassSVM": "doc",
    "sklearn.metrics.f1_score": "doc",
    "sklearn.metrics.log_loss": "doc",
    "sklearn.metrics.r2_score": "doc",
    "sklearn.neighbors.KDTree": "doc",
    "sklearn.utils.deprecated": "doc",
    "sklearn.base.is_regressor": "doc",
    "sklearn.cluster.ward_tree": "doc",
    "sklearn.metrics.dcg_score": "doc",
    "sklearn.metrics.roc_curve": "doc",
    "sklearn.metrics.max_error": "doc",
    "sklearn.datasets.load_iris": "doc",
    "sklearn.metrics.get_scorer": "doc",
    "sklearn.metrics.ndcg_score": "doc",
    "sklearn.neighbors.BallTree": "doc",
    "sklearn.datasets.fetch_rcv1": "doc",
    "sklearn.datasets.make_blobs": "doc",
    "sklearn.metrics.make_scorer": "doc",
    "sklearn.metrics.fbeta_score": "doc",
    "sklearn.covariance.MinCovDet": "doc",
    "sklearn.datasets.load_boston": "doc",
    "sklearn.datasets.load_digits": "doc",
    "sklearn.metrics.recall_score": "doc",
    "sklearn.covariance.LedoitWolf": "doc",
    "sklearn.datasets.fetch_openml": "doc",
    "sklearn.datasets.make_circles": "doc",
    "sklearn.datasets.make_s_curve": "doc",
    "sklearn.decomposition.fastica": "doc",
    "sklearn.metrics.check_scoring": "doc",
    "sklearn.metrics.roc_auc_score": "doc",
    "sklearn.covariance.ledoit_wolf": "doc",
    "sklearn.datasets.fetch_covtype": "doc",
    "sklearn.datasets.get_data_home": "doc",
    "sklearn.datasets.load_diabetes": "doc",
    "sklearn.datasets.load_linnerud": "doc",
    "sklearn.metrics.accuracy_score": "doc",
    "sklearn.metrics.coverage_error": "doc",
    "sklearn.metrics.plot_roc_curve": "doc",
    "sklearn.pipeline.make_pipeline": "doc",
    "sklearn.datasets.fetch_kddcup99": "doc",
    "sklearn.metrics.precision_score": "doc",
    "sklearn.metrics.RocCurveDisplay": "doc",
    "sklearn.neighbors.KernelDensity": "doc",
    "sklearn.preprocessing.normalize": "doc",
    "sklearn.datasets.fetch_lfw_pairs": "doc",
    "sklearn.datasets.make_biclusters": "doc",
    "sklearn.datasets.make_regression": "doc",
    "sklearn.datasets.make_spd_matrix": "doc",
    "sklearn.datasets.make_swiss_roll": "doc",
    "sklearn.ensemble.IsolationForest": "doc",
    "sklearn.ensemble.VotingRegressor": "doc",
    "sklearn.manifold.trustworthiness": "doc",
    "sklearn.metrics.confusion_matrix": "doc",
    "sklearn.metrics.silhouette_score": "doc",
    "sklearn.neighbors.DistanceMetric": "doc",
    "sklearn.preprocessing.Normalizer": "doc",
    "sklearn.datasets.fetch_lfw_people": "doc",
    "sklearn.datasets.make_hastie_10_2": "doc",
    "sklearn.ensemble.VotingClassifier": "doc",
    "sklearn.metrics.cohen_kappa_score": "doc",
    "sklearn.metrics.matthews_corrcoef": "doc",
    "sklearn.metrics.homogeneity_score": "doc",
    "sklearn.metrics.mutual_info_score": "doc",
    "sklearn.neighbors.NearestCentroid": "doc",
    "sklearn.datasets.load_sample_image": "doc",
    "sklearn.datasets.make_checkerboard": "doc",
    "sklearn.ensemble.BaggingClassifier": "doc",
    "sklearn.manifold.SpectralEmbedding": "doc",
    "sklearn.metrics.label_ranking_loss": "doc",
    "sklearn.neighbors.NearestNeighbors": "doc",
    "sklearn.neighbors.kneighbors_graph": "doc",
    "sklearn.preprocessing.RobustScaler": "doc",
    "sklearn.datasets.dump_svmlight_file": "doc",
    "sklearn.datasets.fetch_20newsgroups": "doc",
    "sklearn.datasets.load_svmlight_file": "doc",
    "sklearn.ensemble.AdaBoostClassifier": "doc",
    "sklearn.ensemble.StackingClassifier": "doc",
    "sklearn.manifold.spectral_embedding": "doc",
    "sklearn.metrics.pairwise.rbf_kernel": "doc",
    "sklearn.neural_network.MLPRegressor": "doc",
    "sklearn.compose.make_column_selector": "doc",
    "sklearn.datasets.load_svmlight_files": "doc",
    "sklearn.datasets.make_classification": "doc",
    "sklearn.decomposition.FactorAnalysis": "doc",
    "sklearn.metrics.davies_bouldin_score": "doc",
    "sklearn.metrics.pairwise.chi2_kernel": "doc",
    "sklearn.calibration.calibration_curve": "doc",
    "sklearn.datasets.fetch_olivetti_faces": "doc",
    "sklearn.datasets.make_low_rank_matrix": "doc",
    "sklearn.ensemble.ExtraTreesClassifier": "doc",
    "sklearn.metrics.classification_report": "doc",
    "sklearn.metrics.median_absolute_error": "doc",
    "sklearn.metrics.fowlkes_mallows_score": "doc",
    "sklearn.metrics.plot_confusion_matrix": "doc",
    "sklearn.model_selection.RepeatedKFold": "doc",
    "sklearn.model_selection.ParameterGrid": "doc",
    "sklearn.metrics.precision_recall_curve": "doc",
    "sklearn.metrics.ConfusionMatrixDisplay": "doc",
    "sklearn.metrics.PrecisionRecallDisplay": "doc",
    "sklearn.neighbors.KNeighborsClassifier": "doc",
    "sklearn.semi_supervised.LabelSpreading": "doc",
    "sklearn.datasets.make_sparse_spd_matrix": "doc",
    "sklearn.kernel_approximation.RBFSampler": "doc",
    "sklearn.metrics.average_precision_score": "doc",
    "sklearn.metrics.pairwise.kernel_metrics": "doc",
    "sklearn.neighbors.KNeighborsTransformer": "doc",
    "sklearn.datasets.make_gaussian_quantiles": "doc",
    "sklearn.multioutput.MultiOutputRegressor": "doc",
    "sklearn.neighbors.radius_neighbors_graph": "doc",
    "sklearn.datasets.fetch_california_housing": "doc",
    "sklearn.metrics.pairwise.cosine_distances": "doc",
    "sklearn.metrics.pairwise.distance_metrics": "doc",
    "sklearn.metrics.pairwise.pairwise_kernels": "doc",
    "sklearn.metrics.pairwise.paired_distances": "doc",
    "sklearn.metrics.pairwise_distances_argmin": "doc",
    "sklearn.metrics.adjusted_mutual_info_score": "doc",
    "sklearn.metrics.pairwise.cosine_similarity": "doc",
    "sklearn.metrics.pairwise_distances_chunked": "doc",
    "sklearn.metrics.multilabel_confusion_matrix": "doc",
    "sklearn.metrics.plot_precision_recall_curve": "doc",
    "sklearn.datasets.fetch_species_distributions": "doc",
    "sklearn.metrics.pairwise.additive_chi2_kernel": "doc",
    "sklearn.metrics.pairwise_distances_argmin_min": "doc",
    "sklearn.datasets.fetch_20newsgroups_vectorized": "doc",
    "sklearn.gaussian_process.kernels.PairwiseKernel": "doc",
    "sklearn.metrics.precision_recall_fscore_support": "doc",
    "sklearn.neighbors.NeighborhoodComponentsAnalysis": "doc",
    "sklearn.experimental.enable_hist_gradient_boosting": "doc",
    "sklearn.metrics.homogeneity_completeness_v_measure": "doc",
    "sklearn.metrics.pairwise.paired_manhattan_distances": "doc",
    "sklearn.metrics.label_ranking_average_precision_score": "doc",
    "sklearn.decomposition.non_negative_factorization": "doc",
    "sklearn.preprocessing.OneHotEncoder": "doc",
    "sklearn.discriminant_analysis": "doc",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": "doc",
    "sklearn.base.TransformerMixin": "doc",
    "sklearn.isotonic.check_increasing": "doc",
    "sklearn.exceptions.FitFailedWarning": "doc",
    "sklearn.model_selection.ParameterSampler": "doc",
    "sklearn.model_selection.validation_curve": "doc",
    "sklearn.semi_supervised.LabelPropagation": "doc",
    "sklearn.feature_selection.GenericUnivariateSelect": "doc",
    "sklearn.decomposition.dict_learning_online": "doc",
    "sklearn.exceptions.ChangedBehaviorWarning": "doc",
    "sklearn.inspection.permutation_importance": "doc",
    "sklearn.utils.sparsefuncs.inplace_row_scale": "doc",
    "sklearn.feature_selection": "doc",
    "sklearn.feature_selection.RFE": "doc",
    "sklearn.feature_selection.chi2": "doc",
    "sklearn.feature_selection.RFECV": "doc",
    "sklearn.feature_selection.SelectFpr": "doc",
    "sklearn.feature_selection.SelectFdr": "doc",
    "sklearn.feature_selection.SelectFwe": "doc",
    "sklearn.feature_selection.f_classif": "doc",
    "sklearn.feature_selection.SelectKBest": "doc",
    "sklearn.feature_selection.f_regression": "doc",
    "sklearn.feature_selection.SelectorMixin": "doc",
    "sklearn.preprocessing.add_dummy_feature": "doc",
    "sklearn.feature_selection.SelectPercentile": "doc",
    "sklearn.utils.sparsefuncs.incr_mean_variance_axis": "doc",
    "sklearn.utils.estimator_checks.parametrize_with_checks": "doc",
    "sklearn.gaussian_process.kernels.ConstantKernel": "doc",
    "sklearn.feature_extraction": "doc",
    "sklearn.utils.check_random_state": "doc",
    "sklearn.decomposition.MiniBatchSparsePCA": "doc",
    "sklearn.feature_extraction.FeatureHasher": "doc",
    "sklearn.feature_extraction.DictVectorizer": "doc",
    "sklearn.inspection.PartialDependenceDisplay": "doc",
    "sklearn.feature_extraction.image.img_to_graph": "doc",
    "sklearn.feature_extraction.image.grid_to_graph": "doc",
    "sklearn.feature_extraction.image.PatchExtractor": "doc",
    "sklearn.feature_extraction.text.CountVectorizer": "doc",
    "sklearn.feature_extraction.text.TfidfVectorizer": "doc",
    "sklearn.feature_extraction.text.TfidfTransformer": "doc",
    "sklearn.feature_extraction.text.HashingVectorizer": "doc",
    "sklearn.feature_extraction.image.extract_patches_2d": "doc",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d": "doc",
    "sklearn.exceptions.DataDimensionalityWarning": "doc",
    "sklearn.cluster.AffinityPropagation": "doc",
    "sklearn.kernel_approximation.AdditiveChi2Sampler": "doc",
    "sklearn.kernel_approximation": "doc",
    "sklearn.utils.gen_even_slices": "doc",
    "sklearn.cluster.MiniBatchKMeans": "doc",
    "sklearn.cluster.FeatureAgglomeration": "doc",
    "sklearn.cluster.affinity_propagation": "doc",
    "sklearn.kernel_approximation.Nystroem": "doc",
    "sklearn.utils.extmath.safe_sparse_dot": "doc",
    "sklearn.model_selection.TimeSeriesSplit": "doc",
    "sklearn.kernel_approximation.SkewedChi2Sampler": "doc",
    "sklearn.utils.class_weight.compute_class_weight": "doc",
    "sklearn.decomposition.MiniBatchDictionaryLearning": "doc",
    "sklearn.utils.estimator_html_repr": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_column": "doc",
    "sklearn.inspection.plot_partial_dependence": "doc",
    "sklearn.cluster.cluster_optics_dbscan": "doc",
    "sklearn.exceptions.DataConversionWarning": "doc",
    "sklearn.multioutput.MultiOutputClassifier": "doc",
    "sklearn.svm": "doc",
    "sklearn.base": "doc",
    "sklearn.tree": "doc",
    "sklearn.dummy": "doc",
    "sklearn.utils": "doc",
    "sklearn.impute": "doc",
    "sklearn.cluster": "doc",
    "sklearn.mixture": "doc",
    "sklearn.svm.SVC": "doc",
    "sklearn.svm.SVR": "doc",
    "sklearn.isotonic": "doc",
    "sklearn.pipeline": "doc",
    "sklearn.svm.NuSVC": "doc",
    "sklearn.svm.NuSVR": "doc",
    "sklearn.base.clone": "doc",
    "sklearn.covariance": "doc",
    "sklearn.exceptions": "doc",
    "sklearn.inspection": "doc",
    "sklearn.multioutput": "doc",
    "sklearn.utils.Bunch": "doc",
    "sklearn.kernel_ridge": "doc",
    "sklearn.svm.l1_min_c": "doc",
    "sklearn.cluster.Birch": "doc",
    "sklearn.decomposition": "doc",
    "sklearn.preprocessing": "doc",
    "sklearn.utils.extmath": "doc",
    "sklearn.utils.shuffle": "doc",
    "sklearn.cluster.DBSCAN": "doc",
    "sklearn.cluster.OPTICS": "doc",
    "sklearn.cluster.dbscan": "doc",
    "sklearn.covariance.OAS": "doc",
    "sklearn.neural_network": "doc",
    "sklearn.tree.plot_tree": "doc",
    "sklearn.utils.resample": "doc",
    "sklearn.model_selection": "doc",
    "sklearn.semi_supervised": "doc",
    "sklearn.utils.check_X_y": "doc",
    "sklearn.gaussian_process": "doc",
    "sklearn.tree.export_text": "doc",
    "sklearn.base.ClusterMixin": "doc",
    "sklearn.base.DensityMixin": "doc",
    "sklearn.cluster.MeanShift": "doc",
    "sklearn.decomposition.NMF": "doc",
    "sklearn.decomposition.PCA": "doc",
    "sklearn.impute.KNNImputer": "doc",
    "sklearn.pipeline.Pipeline": "doc",
    "sklearn.utils.check_array": "doc",
    "sklearn.utils.sparsefuncs": "doc",
    "sklearn.base.BaseEstimator": "doc",
    "sklearn.base.is_classifier": "doc",
    "sklearn.cluster.mean_shift": "doc",
    "sklearn.utils.check_scalar": "doc",
    "sklearn.base.BiclusterMixin": "doc",
    "sklearn.base.RegressorMixin": "doc",
    "sklearn.cross_decomposition": "doc",
    "sklearn.pipeline.make_union": "doc",
    "sklearn.preprocessing.scale": "doc",
    "sklearn.base.ClassifierMixin": "doc",
    "sklearn.impute.SimpleImputer": "doc",
    "sklearn.tree.export_graphviz": "doc",
    "sklearn.utils.as_float_array": "doc",
    "sklearn.utils.murmurhash3_32": "doc",
    "sklearn.utils._safe_indexing": "doc",
    "sklearn.utils.all_estimators": "doc",
    "sklearn.decomposition.FastICA": "doc",
    "sklearn.dummy.DummyClassifier": "doc",
    "sklearn.model_selection.KFold": "doc",
    "sklearn.pipeline.FeatureUnion": "doc",
    "sklearn.utils.extmath.density": "doc",
    "sklearn.utils.estimator_checks": "doc",
    "sklearn.utils.parallel_backend": "doc",
    "sklearn.cross_decomposition.CCA": "doc",
    "sklearn.decomposition.KernelPCA": "doc",
    "sklearn.decomposition.SparsePCA": "doc",
    "sklearn.impute.IterativeImputer": "doc",
    "sklearn.impute.MissingIndicator": "doc",
    "sklearn.mixture.GaussianMixture": "doc",
    "sklearn.utils.assert_all_finite": "doc",
    "sklearn.kernel_ridge.KernelRidge": "doc",
    "sklearn.model_selection.check_cv": "doc",
    "sklearn.cluster.cluster_optics_xi": "doc",
    "sklearn.exceptions.NotFittedError": "doc",
    "sklearn.model_selection.LeavePOut": "doc",
    "sklearn.utils.extmath.fast_logdet": "doc",
    "sklearn.cluster.SpectralClustering": "doc",
    "sklearn.cluster.estimate_bandwidth": "doc",
    "sklearn.cross_decomposition.PLSSVD": "doc",
    "sklearn.decomposition.TruncatedSVD": "doc",
    "sklearn.model_selection.GroupKFold": "doc",
    "sklearn.multioutput.RegressorChain": "doc",
    "sklearn.preprocessing.MaxAbsScaler": "doc",
    "sklearn.preprocessing.maxabs_scale": "doc",
    "sklearn.preprocessing.robust_scale": "doc",
    "sklearn.cluster.spectral_clustering": "doc",
    "sklearn.covariance.EllipticEnvelope": "doc",
    "sklearn.covariance.ShrunkCovariance": "doc",
    "sklearn.decomposition.dict_learning": "doc",
    "sklearn.decomposition.sparse_encode": "doc",
    "sklearn.model_selection.LeaveOneOut": "doc",
    "sklearn.multioutput.ClassifierChain": "doc",
    "sklearn.neural_network.BernoulliRBM": "doc",
    "sklearn.cluster.SpectralBiclustering": "doc",
    "sklearn.cluster.SpectralCoclustering": "doc",
    "sklearn.cluster.compute_optics_graph": "doc",
    "sklearn.covariance.shrunk_covariance": "doc",
    "sklearn.decomposition.IncrementalPCA": "doc",
    "sklearn.exceptions.EfficiencyWarning": "doc",
    "sklearn.exceptions.NonBLASDotWarning": "doc",
    "sklearn.gaussian_process.kernels.RBF": "doc",
    "sklearn.gaussian_process.kernels.Sum": "doc",
    "sklearn.model_selection.ShuffleSplit": "doc",
    "sklearn.model_selection.GridSearchCV": "doc",
    "sklearn.neural_network.MLPClassifier": "doc",
    "sklearn.preprocessing.KernelCenterer": "doc",
    "sklearn.preprocessing.LabelBinarizer": "doc",
    "sklearn.preprocessing.label_binarize": "doc",
    "sklearn.exceptions.ConvergenceWarning": "doc",
    "sklearn.inspection.partial_dependence": "doc",
    "sklearn.preprocessing.power_transform": "doc",
    "sklearn.utils.check_consistent_length": "doc",
    "sklearn.covariance.EmpiricalCovariance": "doc",
    "sklearn.model_selection.cross_validate": "doc",
    "sklearn.model_selection.learning_curve": "doc",
    "sklearn.preprocessing.KBinsDiscretizer": "doc",
    "sklearn.preprocessing.PowerTransformer": "doc",
    "sklearn.covariance.empirical_covariance": "doc",
    "sklearn.gaussian_process.kernels.Matern": "doc",
    "sklearn.mixture.BayesianGaussianMixture": "doc",
    "sklearn.model_selection.LeavePGroupsOut": "doc",
    "sklearn.model_selection.StratifiedKFold": "doc",
    "sklearn.model_selection.cross_val_score": "doc",
    "sklearn.utils.register_parallel_backend": "doc",
    "sklearn.cross_decomposition.PLSCanonical": "doc",
    "sklearn.decomposition.DictionaryLearning": "doc",
    "sklearn.gaussian_process.kernels.Product": "doc",
    "sklearn.model_selection.LeaveOneGroupOut": "doc",
    "sklearn.model_selection.train_test_split": "doc",
    "sklearn.cross_decomposition.PLSRegression": "doc",
    "sklearn.model_selection.GroupShuffleSplit": "doc",
    "sklearn.model_selection.cross_val_predict": "doc",
    "sklearn.preprocessing.MultiLabelBinarizer": "doc",
    "sklearn.utils.sparsefuncs.inplace_swap_row": "doc",
    "sklearn.gaussian_process.kernels.DotProduct": "doc",
    "sklearn.gaussian_process.kernels.WhiteKernel": "doc",
    "sklearn.model_selection.StratifiedShuffleSplit": "doc",
    "sklearn.utils.estimator_checks.check_estimator": "doc",
    "sklearn.utils.sparsefuncs.inplace_column_scale": "doc",
    "sklearn.gaussian_process.kernels.CompoundKernel": "doc",
    "sklearn.gaussian_process.kernels.ExpSineSquared": "doc",
    "sklearn.gaussian_process.kernels.Exponentiation": "doc",
    "sklearn.utils.class_weight.compute_sample_weight": "doc",
    "sklearn.utils.sparsefuncs.inplace_csr_column_scale": "doc",
    "sklearn.utils.graph_shortest_path.graph_shortest_path": "doc",
    "sklearn.utils.graph.single_source_shortest_path_length": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1": "doc",
    "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2": "doc"
  }
}