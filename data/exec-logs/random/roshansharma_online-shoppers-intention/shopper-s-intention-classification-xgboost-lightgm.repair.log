shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[21:31:39] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[21:31:50] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[21:31:59] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[21:32:09] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[21:32:19] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[21:32:29] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[21:32:38] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[21:32:48] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[21:32:58] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[21:33:08] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[21:33:18] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[21:33:28] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[21:33:38] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[21:33:48] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=False))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_regularizer&use_bias'), ('target_value', 'True&False')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,kernel_regularizer&use_bias="True&False"))
                                                                                              ^
SyntaxError: keyword can't be an expression
shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:34:21] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:34:32] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:34:43] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:34:54] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=False))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_constraint'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:35:04] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&kernel_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:35:15] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:35:27] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:35:38] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:35:52] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=False,kernel_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_constraint'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:36:04] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&kernel_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:36:17] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:36:28] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:36:38] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:36:50] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:37:02] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:37:13] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:37:24] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:37:35] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:37:46] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:37:56] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:38:06] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:38:16] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:38:27] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:38:37] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:38:51] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:39:02] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=False,kernel_constraint=True,bias_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_constraint'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:39:14] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&kernel_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:39:27] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:39:38] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:39:48] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&activity_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:39:58] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:40:09] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units=True,use_bias=True,kernel_constraint=True,bias_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:40:20] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:40:31] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'activation&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:40:42] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,activation=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:40:53] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:41:05] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:41:15] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:41:26] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:41:37] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:41:49] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:42:02] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:42:14] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:42:26] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:42:37] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:42:48] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:42:59] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:43:10] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:43:21] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:43:31] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=False,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_constraint'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:43:41] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&kernel_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:43:51] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:44:01] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:44:11] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&activity_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:44:22] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:44:33] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,activation=True))
                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,use_bias=True))
                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:44:50] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:45:04] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:45:15] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=False,kernel_constraint=True,bias_initializer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_constraint'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:45:26] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&kernel_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:45:37] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:45:48] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:45:58] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&activity_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:46:09] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:46:19] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:46:30] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:46:40] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=False,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_constraint'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:46:51] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&kernel_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:47:01] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:47:12] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:47:22] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&activity_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:47:34] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:47:48] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:47:59] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:48:09] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'activation&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:48:21] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation=True,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,activation=True))
                                                                                                                                                                                      ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,use_bias=True))
                                                                                                                                                                                      ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_initializer=True))
                                                                                                                                                                                      ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,bias_initializer=True))
                                                                                                                                                                                      ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:48:41] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:48:52] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:49:03] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=False,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_constraint'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:49:15] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&kernel_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:49:25] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:49:36] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:49:46] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&activity_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:49:57] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:50:10] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,activation=True))
                                                                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,use_bias=True))
                                                                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,kernel_initializer=True))
                                                                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_initializer=True))
                                                                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,kernel_regularizer=True))
                                                                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:50:33] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:50:47] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:50:58] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=False,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_constraint'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:51:09] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&kernel_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:51:21] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:51:33] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:51:44] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&activity_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:51:54] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:52:04] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activation=True))
                                                                                                                                                                                                                                    ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,use_bias=True))
                                                                                                                                                                                                                                    ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
                                                                                                                                                                                                                                    ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,bias_initializer=True))
                                                                                                                                                                                                                                    ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,kernel_regularizer=True))
                                                                                                                                                                                                                                    ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,bias_regularizer=True))
                                                                                                                                                                                                                                    ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:52:28] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:52:39] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:52:49] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=False,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_constraint'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:52:59] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&kernel_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:53:10] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:53:21] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:53:31] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&activity_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:53:42] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:53:53] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,activation=True))
                                                                                                                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,use_bias=True))
                                                                                                                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,kernel_initializer=True))
                                                                                                                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_initializer=True))
                                                                                                                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,kernel_regularizer=True))
                                                                                                                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_regularizer=True))
                                                                                                                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,activity_regularizer=True))
                                                                                                                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,kernel_constraint=True))
                                                                                                                                                                                                                                                              ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:54:23] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:54:35] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:54:46] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=False,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_constraint'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:54:56] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&kernel_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:55:07] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:55:18] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:55:30] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&activity_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:55:41] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:55:51] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,activation=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,use_bias=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,kernel_initializer=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,bias_initializer=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,kernel_regularizer=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,bias_regularizer=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,activity_regularizer=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,kernel_constraint=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,bias_constraint=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:56:23] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:56:34] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:56:44] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:56:54] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:57:04] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:57:17] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:57:29] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:57:39] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:57:50] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:58:01] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:58:11] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:58:23] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:58:33] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:58:45] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:58:57] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:59:08] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:59:19] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:59:33] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:59:44] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[01:59:54] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:00:10] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:00:25] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:00:38] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:00:48] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:00:58] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:01:09] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:01:19] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=False,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_constraint'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:01:29] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&kernel_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:01:39] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:01:49] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:01:59] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&activity_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:02:09] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:02:19] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:02:29] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:02:38] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=False,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_constraint'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:02:47] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&kernel_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:02:56] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:03:05] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:03:14] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&activity_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:03:23] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:03:32] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias&bias_regularizer'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:03:40] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:03:49] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'activation&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:03:58] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation=True,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,activation=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,use_bias=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,kernel_initializer=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,bias_initializer=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,kernel_regularizer=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,use_bias=True,kernel_constraint=True,bias_initializer=True,kernel_initializer=True,kernel_regularizer=True,bias_regularizer=True,activity_regularizer=True,bias_constraint=True,bias_regularizer=True))
                                                                                                                                                                                                                                                                                   ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:48:35] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:48:46] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:48:56] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:49:06] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:49:15] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:49:25] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:49:35] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:49:44] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:49:54] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:50:04] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:50:14] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation = 'relu' ))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:50:24] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:50:34] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:50:44] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,use_bias=False))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'activation&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:50:54] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activation=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:51:04] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,kernel_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:51:13] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,bias_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:51:23] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:51:33] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,kernel_constraint=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/training/tracking/base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/utils/generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'output_dim')
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'activity_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:51:43] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:51:52] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:52:03] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:52:13] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:52:23] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:52:32] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:52:42] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:52:52] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:53:02] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:53:12] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:53:21] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:53:31] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:53:41] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:53:50] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:54:01] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:54:11] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:54:21] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:54:30] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:54:40] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:54:50] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:55:00] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:55:10] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:55:19] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:55:29] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:55:39] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:55:48] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:55:57] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=False))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'activation&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:56:06] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,activation=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:56:15] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,kernel_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:56:23] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,bias_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:56:32] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units=True,activity_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:56:41] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,kernel_constraint=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'activity_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:56:50] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:56:58] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,kernel_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:57:07] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,bias_constraint=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:57:16] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,bias_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:57:24] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:57:35] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:57:45] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:57:55] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:58:05] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:58:14] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:58:24] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:58:34] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:58:44] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:58:54] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:59:03] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:59:13] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:59:23] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:59:34] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:59:44] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[02:59:53] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:00:03] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:00:13] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:00:23] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:00:33] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:00:42] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:00:52] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:01:02] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:01:12] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:01:21] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:01:30] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=False))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'activation&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:01:38] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,activation=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:01:47] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,kernel_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:01:56] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,bias_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:02:05] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units=True,activity_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:02:14] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,kernel_constraint=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'activity_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:02:22] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:02:31] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,kernel_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:02:40] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,bias_constraint=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:02:49] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,bias_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:02:57] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:03:08] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:03:19] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:03:29] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:03:39] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:03:48] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:03:58] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:04:08] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:04:18] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:04:27] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:04:37] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:04:47] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:04:57] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:05:06] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:05:17] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:05:27] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=False))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'activation&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:05:36] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation=True,activity_regularizer=True,use_bias=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:05:46] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:05:57] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:06:07] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:06:17] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:06:27] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:06:36] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:06:46] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:06:56] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:07:06] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:07:15] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:07:25] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:07:35] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:07:45] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:07:55] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:08:05] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:08:15] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:08:25] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:08:35] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:08:44] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:08:54] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:09:04] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:09:14] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:09:24] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:09:34] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:09:43] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:09:53] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:10:03] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=False,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'activation&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:10:13] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation=True,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:10:23] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:10:33] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:10:43] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:10:53] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:11:03] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:11:13] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:11:23] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:11:33] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:11:42] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:11:52] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:12:02] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:12:12] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:12:22] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:12:32] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:12:42] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:12:52] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=False,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'activation&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:13:02] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation=True,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:13:12] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:13:22] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:13:32] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,units=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,activation=True))
                                                                                                                                                                                         ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,use_bias=True))
                                                                                                                                                                                         ^
SyntaxError: keyword argument repeated
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:13:46] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:13:56] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:14:06] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:14:16] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:14:26] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:14:36] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:14:45] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:14:55] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:15:05] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_constraint')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:15:15] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_delete'), ('from_name', 'units'), ('to_name', '*')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:15:25] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'activation'), ('to_name', 'units')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:15:35] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'True')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:15:44] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'use_bias'), ('target_value', 'False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:15:53] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=False,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'activation&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:16:02] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True,activation=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:16:11] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:16:19] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'units&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:16:28] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units=True,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:16:37] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True,kernel_constraint=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'activity_regularizer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:16:46] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'kernel_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:16:55] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_constraint&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:17:04] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True,bias_constraint=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_value_update'), ('arg_name', 'bias_initializer&use_bias'), ('target_value', 'True&False')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:17:13] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', units='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True,bias_initializer=True))
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 1132, in __init__
    activity_regularizer=regularizers.get(activity_regularizer), **kwargs)
  File "/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/tensorflow/python/keras/regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', True)
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:17:21] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activation')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:17:32] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'use_bias')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:17:42] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:17:51] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_initializer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:18:01] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'kernel_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:18:11] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'bias_regularizer')])shopper-s-intention-classification-xgboost-lightgm.py:204: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k]= datetime.strptime(pivot2['Month'][k], '%b').month
shopper-s-intention-classification-xgboost-lightgm.py:202: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  pivot2['Month'][k] = 6
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/xgboost/sklearn.py:892: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
../../../input/roshansharma_online-shoppers-intention/online_shoppers_intention.csv











Logistic Regression accuracy is 0.8850

Desicion Tree accuracy is 0.9039

Logistic regression prob auc score: 0.89
Logistic regression auc score: 0.67
[03:18:21] WARNING: ../src/learner.cc:1061: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
XGBoost Classifier accuracy is : 0.8935

              precision    recall  f1-score   support

       False       0.89      0.98      0.94      2599
        True       0.78      0.37      0.50       480

    accuracy                           0.89      3079
   macro avg       0.84      0.67      0.72      3079
weighted avg       0.88      0.89      0.87      3079

              precision    recall  f1-score   support

       False       0.93      0.95      0.94      2599
        True       0.72      0.63      0.67       480

    accuracy                           0.90      3079
   macro avg       0.83      0.79      0.81      3079
weighted avg       0.90      0.90      0.90      3079

              precision    recall  f1-score   support

       False       0.92      0.96      0.94      2599
        True       0.70      0.55      0.62       480

    accuracy                           0.89      3079
   macro avg       0.81      0.76      0.78      3079
weighted avg       0.89      0.89      0.89      3079

Traceback (most recent call last):
  File "shopper-s-intention-classification-xgboost-lightgm.py", line 434, in <module>
    classifier_keras.add(Dense(input_dim = 76,output_dim = 25, init = 'uniform', activation='relu' ,activity_regularizer=True,use_bias=True,kernel_regularizer=True,bias_regularizer=True,kernel_initializer=True))
TypeError: __init__() missing 1 required positional argument: 'units'
[Try Solution]: OrderedDict([('API', 'keras.layers.Dense'), ('action', 'arg_rename'), ('from_name', 'units'), ('to_name', 'activity_regularizer')])