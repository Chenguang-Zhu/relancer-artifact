decisiontree-and-randomforest.py:110: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['Gender'][train['Gender'] == "F"] = 0
decisiontree-and-randomforest.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['Gender'][train['Gender'] == "M"] = 1
decisiontree-and-randomforest.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train["Class"][train["Class"] == "L"] = 0
decisiontree-and-randomforest.py:115: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train["Class"][train["Class"] == "M"] = 1
decisiontree-and-randomforest.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train["Class"][train["Class"] == "H"] = 2
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/seaborn/categorical.py:3666: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.
  warnings.warn(msg)
decisiontree-and-randomforest.py:137: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['ParentschoolSatisfaction'][train['ParentschoolSatisfaction'] == "Good"] = 0
decisiontree-and-randomforest.py:138: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['ParentschoolSatisfaction'][train['ParentschoolSatisfaction'] == "Bad"] = 1
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/seaborn/categorical.py:3666: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.
  warnings.warn(msg)
decisiontree-and-randomforest.py:151: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['Relation'][train['Relation'] == "Father"] = 0
decisiontree-and-randomforest.py:152: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['Relation'][train['Relation'] == "Mum"] = 1
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/seaborn/categorical.py:3666: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.
  warnings.warn(msg)
decisiontree-and-randomforest.py:185: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['StudentAbsenceDays'][train['StudentAbsenceDays'] == "Under-7"] = 0
decisiontree-and-randomforest.py:186: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['StudentAbsenceDays'][train['StudentAbsenceDays'] == "Above-7"] = 1
decisiontree-and-randomforest.py:235: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['Gender'][test['Gender'] == "F"] = 0
/home/cgzhu/anaconda3/envs/migration-plus/lib/python3.6/site-packages/pandas/core/generic.py:8765: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self._update_inplace(new_data)
decisiontree-and-randomforest.py:236: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['Gender'][test['Gender'] == "M"] = 1
decisiontree-and-randomforest.py:237: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['Gender'] = test['Gender'].astype(int)
decisiontree-and-randomforest.py:239: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test["Class"][test["Class"] == "L"] = 0
decisiontree-and-randomforest.py:240: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test["Class"][test["Class"] == "M"] = 1
decisiontree-and-randomforest.py:241: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test["Class"][test["Class"] == "H"] = 2
decisiontree-and-randomforest.py:242: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['Class'] = test['Class'].astype(int)
decisiontree-and-randomforest.py:244: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['ParentschoolSatisfaction'][test['ParentschoolSatisfaction'] == "Good"] = 0
decisiontree-and-randomforest.py:245: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['ParentschoolSatisfaction'][test['ParentschoolSatisfaction'] == "Bad"] = 1
decisiontree-and-randomforest.py:246: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['ParentschoolSatisfaction'] = test['ParentschoolSatisfaction'].astype(int)
decisiontree-and-randomforest.py:248: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['Relation'][test['Relation'] == "Father"] = 0
decisiontree-and-randomforest.py:249: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['Relation'][test['Relation'] == "Mum"] = 1
decisiontree-and-randomforest.py:250: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['Relation'] = test['Relation'].astype(int)
decisiontree-and-randomforest.py:252: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['StudentAbsenceDays'][test['StudentAbsenceDays'] == "Under-7"] = 0
decisiontree-and-randomforest.py:253: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['StudentAbsenceDays'][test['StudentAbsenceDays'] == "Above-7"] = 1
decisiontree-and-randomforest.py:254: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['StudentAbsenceDays'] = test['StudentAbsenceDays'].astype(int)
xAPI-Edu-Data.csv

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 480 entries, 0 to 479
Data columns (total 17 columns):
 #   Column                    Non-Null Count  Dtype 
---  ------                    --------------  ----- 
 0   gender                    480 non-null    object
 1   NationalITy               480 non-null    object
 2   PlaceofBirth              480 non-null    object
 3   StageID                   480 non-null    object
 4   GradeID                   480 non-null    object
 5   SectionID                 480 non-null    object
 6   Topic                     480 non-null    object
 7   Semester                  480 non-null    object
 8   Relation                  480 non-null    object
 9   raisedhands               480 non-null    int64 
 10  VisITedResources          480 non-null    int64 
 11  AnnouncementsView         480 non-null    int64 
 12  Discussion                480 non-null    int64 
 13  ParentAnsweringSurvey     480 non-null    object
 14  ParentschoolSatisfaction  480 non-null    object
 15  StudentAbsenceDays        480 non-null    object
 16  Class                     480 non-null    object
dtypes: int64(4), object(13)
memory usage: 63.9+ KB
(336, 17)
(144, 17)


[0.05328486 0.00786402 0.05552399 0.15934778 0.16580288 0.40336079
 0.15481568]
0.9970238095238095
[0.02626268 0.12708459 0.00429905 0.05813933 0.12630897 0.1284377
 0.3579155  0.17155217]
0.9494047619047619
[0.02594773 0.1190477  0.03912019 0.06094728 0.14195851 0.21002334
 0.24313622 0.15981902]
0.9553571428571429
[[ 1 25  0 ... 20 20  0]
 [ 1 30  1 ... 10  7  1]
 [ 1 35  1 ... 30 25  1]
 ...
 [ 0 58  0 ... 80 82  0]
 [ 1 70  0 ... 85 88  0]
 [ 0  8  1 ...  2  7  1]]
[1 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 0 0 0 2 1 0 1 2 1 1 0 1 1 1 1 0 1 0 0 0
 1 0 0 2 0 0 2 0 1 2 1 2 0 1 1 1 1 1 1 2 1 2 1 1 1 1 1 0 1 1 0 0 1 2 2 1 0
 1 0 2 1 1 1 1 2 2 1 0 1 1 2 2 2 1 2 0 1 1 2 2 2 2 1 2 2 0 2 2 1 2 0 2 1 1
 1 1 2 1 0 2 1 0 1 1 2 2 1 2 2 1 2 1 2 2 2 0 2 1 2 2 1 2 1 1 2 2 0]
     Class
0        1
1        0
2        0
3        1
4        1
..     ...
139      1
140      1
141      2
142      2
143      0

[144 rows x 1 columns]
[[28  5  0]
 [ 6 50 12]
 [ 0 11 32]]

              precision    recall  f1-score   support

  class 0(L)       0.85      0.82      0.84        34
  class 1(M)       0.74      0.76      0.75        66
  class 2(H)       0.74      0.73      0.74        44

    accuracy                           0.76       144
   macro avg       0.78      0.77      0.77       144
weighted avg       0.76      0.76      0.76       144

